{"version":3,"file":"9451.7157b35cbbd36ef96b08.js","mappings":"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","sources":["webpack://telegram-t/./src/components/mediaViewer/helpers/getViewableMedia.ts","webpack://telegram-t/./src/components/mediaViewer/helpers/ghostAnimation.ts","webpack://telegram-t/./src/hooks/usePictureInPicture.ts","webpack://telegram-t/./src/hooks/useBlur.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useMediaProps.ts","webpack://telegram-t/./src/hooks/useBlurSync.ts","webpack://telegram-t/./src/components/common/ReportAvatarModal.tsx","webpack://telegram-t/./src/components/mediaViewer/hooks/useZoomChangeSignal.ts","webpack://telegram-t/./src/components/common/DeleteProfilePhotoModal.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerActions.tsx","webpack://telegram-t/./src/hooks/useSignalRef.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useControlsSignal.ts","webpack://telegram-t/./src/hooks/useCurrentTimeSignal.ts","webpack://telegram-t/./src/components/mediaViewer/MediaViewerFooter.tsx","webpack://telegram-t/./src/components/mediaViewer/hooks/useVideoWaitingSignal.ts","webpack://telegram-t/./src/lib/video-preview/VideoPreview.ts","webpack://telegram-t/./src/components/mediaViewer/SeekLine.module.scss?dc47","webpack://telegram-t/./src/components/mediaViewer/SeekLine.tsx","webpack://telegram-t/./src/components/mediaViewer/VideoPlayerControls.tsx","webpack://telegram-t/./src/components/mediaViewer/VideoPlayer.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerContent.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerSlides.tsx","webpack://telegram-t/./src/components/mediaViewer/SenderInfo.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewer.tsx","webpack://telegram-t/./src/components/story/StoryViewer.module.scss?5f32","webpack://telegram-t/./src/components/story/helpers/ghostAnimation.ts","webpack://telegram-t/./src/components/story/helpers/dimensions.ts","webpack://telegram-t/./src/components/story/hooks/useSlideSizes.ts","webpack://telegram-t/./src/components/story/hooks/useStoryProps.ts","webpack://telegram-t/./src/components/story/StealthModeModal.module.scss?40cf","webpack://telegram-t/./src/components/story/StealthModeModal.tsx","webpack://telegram-t/./src/components/story/StoryDeleteConfirmModal.tsx","webpack://telegram-t/./src/components/story/privacy/AllowDenyList.tsx","webpack://telegram-t/./src/components/story/privacy/CloseFriends.module.scss?5d02","webpack://telegram-t/./src/components/story/privacy/CloseFriends.tsx","webpack://telegram-t/./src/components/story/StorySettings.module.scss?b887","webpack://telegram-t/./src/components/story/StorySettings.tsx","webpack://telegram-t/./src/components/common/embedded/EmbeddedStoryForward.tsx","webpack://telegram-t/./src/components/story/StoryCaption.tsx","webpack://telegram-t/./src/components/story/StoryFooter.module.scss?19b1","webpack://telegram-t/./src/components/story/StoryFooter.tsx","webpack://telegram-t/./src/components/story/StoryProgress.tsx","webpack://telegram-t/./src/components/story/StoryProgress.module.scss?59b4","webpack://telegram-t/./src/components/story/Story.tsx","webpack://telegram-t/./src/components/story/StoryPreview.tsx","webpack://telegram-t/./src/components/story/StorySlides.tsx","webpack://telegram-t/./src/hooks/useScrolledState.ts","webpack://telegram-t/./src/components/story/StoryViewModal.module.scss?06b1","webpack://telegram-t/./src/components/story/StoryView.tsx","webpack://telegram-t/./src/components/story/StoryViewModal.tsx","webpack://telegram-t/./src/components/story/StoryViewer.tsx","webpack://telegram-t/./src/components/common/pickers/ChatOrUserPicker.tsx","webpack://telegram-t/./src/components/common/RecipientPicker.tsx","webpack://telegram-t/./src/components/main/ForwardRecipientPicker.tsx","webpack://telegram-t/./src/components/main/DraftRecipientPicker.tsx","webpack://telegram-t/./src/components/main/AttachBotRecipientPicker.tsx","webpack://telegram-t/./src/components/main/Dialogs.tsx","webpack://telegram-t/./src/components/main/Notifications.tsx","webpack://telegram-t/./src/components/main/SafeLinkModal.tsx","webpack://telegram-t/./src/components/modals/map/MapModal.module.scss?0842","webpack://telegram-t/./src/components/modals/map/MapModal.tsx","webpack://telegram-t/./src/components/modals/urlAuth/UrlAuthModal.tsx","webpack://telegram-t/./src/components/common/CalendarModal.tsx","webpack://telegram-t/./src/components/main/HistoryCalendar.tsx","webpack://telegram-t/./src/components/main/NewContactModal.tsx","webpack://telegram-t/./src/hooks/useDraggable.ts","webpack://telegram-t/./src/components/modals/webApp/MinimizedWebAppModal.module.scss?a30f","webpack://telegram-t/./src/components/modals/webApp/MinimizedWebAppModal.tsx","webpack://telegram-t/./src/components/modals/webApp/WebAppGridItem.module.scss?b350","webpack://telegram-t/./src/components/modals/webApp/WebAppGridItem.tsx","webpack://telegram-t/./src/components/modals/webApp/MoreAppsTabContent.module.scss?8058","webpack://telegram-t/./src/components/modals/webApp/MoreAppsTabContent.tsx","webpack://telegram-t/./src/components/modals/webApp/hooks/useWebAppFrame.ts","webpack://telegram-t/./src/components/modals/webApp/WebAppModalTabContent.module.scss?c843","webpack://telegram-t/./src/components/modals/webApp/WebAppModalTabContent.tsx","webpack://telegram-t/./src/components/modals/webApp/hooks/usePopupLimit.ts","webpack://telegram-t/./src/components/modals/webApp/WebAppModal.module.scss?615e","webpack://telegram-t/./src/components/modals/webApp/WebAppModal.tsx","webpack://telegram-t/./src/components/main/BotTrustModal.tsx","webpack://telegram-t/./src/components/modals/attachBotInstall/AttachBotInstallModal.tsx","webpack://telegram-t/./src/components/main/DeleteFolderDialog.tsx","webpack://telegram-t/./src/components/main/premium/PremiumFeatureItem.module.scss?7431","webpack://telegram-t/./src/components/main/premium/PremiumFeatureItem.tsx","webpack://telegram-t/./src/components/common/SliderDots.module.scss?afdd","webpack://telegram-t/./src/components/common/SliderDots.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitsCompare.module.scss?00e6","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitsCompare.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitPreview.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitPreview.module.scss?28b4","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStickers.module.scss?0900","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStickers.tsx","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStories.module.scss?e925","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStories.tsx","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewVideo.module.scss?0228","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewVideo.tsx","webpack://telegram-t/./src/components/main/premium/PremiumFeatureModal.module.scss?b65b","webpack://telegram-t/./src/components/main/premium/PremiumFeatureModal.tsx","webpack://telegram-t/./src/components/main/premium/PremiumSubscriptionOption.tsx","webpack://telegram-t/./src/components/main/premium/PremiumSubscriptionOption.module.scss?b798","webpack://telegram-t/./src/components/main/premium/PremiumMainModal.module.scss?323f","webpack://telegram-t/./src/components/main/premium/PremiumMainModal.tsx","webpack://telegram-t/./src/components/common/pickers/ItemPicker.tsx","webpack://telegram-t/./src/components/common/CountryPickerModal.module.scss?d5e6","webpack://telegram-t/./src/components/common/CountryPickerModal.tsx","webpack://telegram-t/./src/components/main/premium/GiveawayChannelPickerModal.tsx","webpack://telegram-t/./src/components/main/premium/GiveawayTypeOption.tsx","webpack://telegram-t/./src/components/main/premium/GiveawayTypeOption.module.scss?6d7c","webpack://telegram-t/./src/components/main/premium/GiveawayUserPickerModal.tsx","webpack://telegram-t/./src/components/main/premium/GiveawayModal.module.scss?ac86","webpack://telegram-t/./src/components/main/premium/GiveawayModal.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitReachedModal.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitReachedModal.module.scss?434e","webpack://telegram-t/./src/components/common/hooks/useStickerPickerObservers.ts","webpack://telegram-t/./src/components/middle/composer/StickerSetCover.module.scss?4629","webpack://telegram-t/./src/components/middle/composer/StickerSetCover.tsx","webpack://telegram-t/./src/components/common/StickerButton.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionEmoji.module.scss?9dc8","webpack://telegram-t/./src/components/common/reactions/ReactionEmoji.tsx","webpack://telegram-t/./src/components/common/StickerSet.tsx","webpack://telegram-t/./src/components/middle/composer/StickerPicker.module.scss?0978","webpack://telegram-t/./src/components/common/CustomEmojiPicker.module.scss?b9fd","webpack://telegram-t/./src/components/common/CustomEmojiPicker.tsx","webpack://telegram-t/./src/components/left/main/StatusPickerMenu.module.scss?d7cd","webpack://telegram-t/./src/components/left/main/StatusPickerMenu.tsx","webpack://telegram-t/./src/components/modals/suggestedStatus/SuggestedStatusModal.module.scss?77cd","webpack://telegram-t/./src/components/modals/suggestedStatus/SuggestedStatusModal.tsx","webpack://telegram-t/./src/components/modals/boost/BoostModal.module.scss?aeb4","webpack://telegram-t/./src/components/modals/boost/BoostModal.tsx","webpack://telegram-t/./src/components/modals/giftcode/GiftCodeModal.module.scss?1c77","webpack://telegram-t/./src/components/modals/giftcode/GiftCodeModal.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistModal.module.scss?f731","webpack://telegram-t/./src/components/modals/chatlist/ChatlistAlready.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistDelete.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistNew.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistModal.tsx","webpack://telegram-t/./src/components/modals/chatInvite/ChatInviteModal.module.scss?5f0b","webpack://telegram-t/./src/components/modals/chatInvite/ChatInviteModal.tsx","webpack://telegram-t/./src/components/modals/aboutAds/AboutAdsModal.module.scss?b66d","webpack://telegram-t/./src/components/modals/aboutAds/AboutAdsModal.tsx","webpack://telegram-t/./src/components/common/AboutMonetizationModal.module.scss?2ca6","webpack://telegram-t/./src/components/common/AboutMonetizationModal.tsx","webpack://telegram-t/./src/components/common/VerificationMonetizationModal.module.scss?bb6b","webpack://telegram-t/./src/components/common/VerificationMonetizationModal.tsx","webpack://telegram-t/./src/components/modals/emojiStatusAccess/EmojiStatusAccessModal.module.scss?4803","webpack://telegram-t/./src/components/modals/emojiStatusAccess/EmojiStatusAccessModal.tsx","webpack://telegram-t/./src/components/modals/locationAccess/LocationAccessModal.tsx","webpack://telegram-t/./src/components/modals/locationAccess/LocationAccessModal.module.scss?843e","webpack://telegram-t/./src/components/modals/reportAd/ReportAdModal.module.scss?b26e","webpack://telegram-t/./src/components/modals/reportAd/ReportAdModal.tsx","webpack://telegram-t/./src/components/modals/reportModal/ReportModal.module.scss?3c2e","webpack://telegram-t/./src/components/modals/reportModal/ReportModal.tsx","webpack://telegram-t/./src/components/modals/preparedMessage/PreparedMessageModal.module.scss?94bc","webpack://telegram-t/./src/components/modals/preparedMessage/PreparedMessageModal.tsx","webpack://telegram-t/./src/components/modals/sharePreparedMessage/SharePreparedMessageModal.tsx","webpack://telegram-t/./src/components/right/hooks/useManagePermissions.ts","webpack://telegram-t/./src/components/main/PermissionCheckboxList.tsx","webpack://telegram-t/./src/components/common/DeleteMessageModal.module.scss?fbca","webpack://telegram-t/./src/components/common/DeleteMessageModal.tsx","webpack://telegram-t/./src/components/common/PinMessageModal.tsx","webpack://telegram-t/./src/components/common/UnpinAllMessagesModal.tsx","webpack://telegram-t/./src/components/middle/hooks/useCopySelectedMessages.ts","webpack://telegram-t/./src/components/middle/MessageSelectToolbar.tsx","webpack://telegram-t/./src/components/common/SeenByModal.tsx","webpack://telegram-t/./src/components/common/SeenByModal.module.scss?1d45","webpack://telegram-t/./src/components/common/PrivacySettingsNoticeModal.module.scss?a8aa","webpack://telegram-t/./src/components/common/PrivacySettingsNoticeModal.tsx","webpack://telegram-t/./src/components/middle/ReactorListModal.tsx","webpack://telegram-t/./src/components/middle/EmojiInteractionAnimation.tsx","webpack://telegram-t/./src/components/middle/ChatLanguageModal.tsx","webpack://telegram-t/./src/components/middle/ChatLanguageModal.module.scss?68c3","webpack://telegram-t/./src/components/modals/collectible/CollectibleInfoModal.module.scss?497f","webpack://telegram-t/./src/components/modals/collectible/CollectibleInfoModal.tsx","webpack://telegram-t/./src/components/left/search/helpers/createMapStateToProps.ts","webpack://telegram-t/./src/components/left/search/AudioResults.tsx","webpack://telegram-t/./src/hooks/useSelectWithEnter.ts","webpack://telegram-t/./src/components/left/search/LeftSearchResultChat.tsx","webpack://telegram-t/./src/components/left/search/BotAppResults.tsx","webpack://telegram-t/./src/components/left/search/ChatMessage.tsx","webpack://telegram-t/./src/components/left/search/DateSuggest.tsx","webpack://telegram-t/./src/components/left/search/LeftSearchResultTopic.tsx","webpack://telegram-t/./src/components/left/search/ChatMessageResults.tsx","webpack://telegram-t/./src/components/left/search/LeftSearchResultSponsored.tsx","webpack://telegram-t/./src/components/left/search/RecentContacts.tsx","webpack://telegram-t/./src/components/left/search/ChatResults.tsx","webpack://telegram-t/./src/components/left/search/FileResults.tsx","webpack://telegram-t/./src/components/left/search/LinkResults.tsx","webpack://telegram-t/./src/components/left/search/MediaResults.tsx","webpack://telegram-t/./src/components/left/search/LeftSearch.tsx","webpack://telegram-t/./src/hooks/reducers/useTwoFaReducer.ts","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersChatFilters.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiButton.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiCategory.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiPicker.tsx","webpack://telegram-t/./src/components/common/FolderIconPicker.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersEdit.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersMain.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsShareChatlist.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFolders.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPasswordForm.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeCongratulations.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeEnabled.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeStart.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscode.tsx","webpack://telegram-t/./src/components/common/paidMessage/PaidMessageSlider.tsx","webpack://telegram-t/./src/components/common/paidMessage/PaidMessagePrice.tsx","webpack://telegram-t/./src/components/left/settings/PremiumStatusItem.tsx","webpack://telegram-t/./src/components/left/settings/PrivacyLockedOption.tsx","webpack://telegram-t/./src/components/left/settings/PrivacyLockedOption.module.scss?16a3","webpack://telegram-t/./src/components/left/settings/PrivacyMessages.tsx","webpack://telegram-t/./src/components/left/settings/helpers/getSessionIcon.ts","webpack://telegram-t/./src/components/left/settings/SettingsActiveSession.module.scss?ead4","webpack://telegram-t/./src/components/left/settings/SettingsActiveSession.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveSessions.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsite.module.scss?99ae","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsite.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsites.module.scss?28f4","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsites.tsx","webpack://telegram-t/./src/components/common/StickerSetCard.tsx","webpack://telegram-t/./src/components/left/settings/SettingsCustomEmoji.tsx","webpack://telegram-t/./src/components/left/settings/SettingsDataStorage.tsx","webpack://telegram-t/./src/components/left/settings/SettingsDoNotTranslate.module.scss?24c7","webpack://telegram-t/./src/components/left/settings/SettingsDoNotTranslate.tsx","webpack://telegram-t/./src/components/common/ManageUsernames.tsx","webpack://telegram-t/./src/components/common/ManageUsernames.module.scss?3086","webpack://telegram-t/./src/components/common/UsernameInput.tsx","webpack://telegram-t/./src/components/left/settings/SettingsEditProfile.tsx","webpack://telegram-t/./src/components/left/settings/SettingsExperimental.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneral.tsx","webpack://telegram-t/./src/util/PreviewBackgroundRender.ts","webpack://telegram-t/./src/components/left/settings/WallpaperTile.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneralBackground.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneralBackgroundColor.tsx","webpack://telegram-t/./src/components/left/settings/SettingsHeader.tsx","webpack://telegram-t/./src/hooks/useMultiClick.ts","webpack://telegram-t/./src/components/left/settings/SettingsLanguage.tsx","webpack://telegram-t/./src/components/left/settings/SettingsMain.tsx","webpack://telegram-t/./src/components/left/settings/SettingsNotifications.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPerformance.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacy.tsx","webpack://telegram-t/./src/components/left/settings/BlockUserModal.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyBlockedUsers.tsx","webpack://telegram-t/./src/components/left/settings/helpers/privacy.ts","webpack://telegram-t/./src/components/left/settings/SettingsAcceptedGift.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyLastSeen.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyPublicPhoto.module.scss?04c5","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyPublicProfilePhoto.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyVisibility.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyVisibilityExceptionList.tsx","webpack://telegram-t/./src/components/left/settings/SettingsQuickReaction.tsx","webpack://telegram-t/./src/components/left/settings/SettingsStickers.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaCongratulations.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaEmailCode.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaEnabled.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaSkippableForm.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaStart.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFa.tsx","webpack://telegram-t/./src/components/left/settings/Settings.tsx","webpack://telegram-t/./src/components/left/main/ContactList.tsx","webpack://telegram-t/./src/components/left/newChat/NewChatStep1.tsx","webpack://telegram-t/./src/components/left/newChat/NewChatStep2.tsx","webpack://telegram-t/./src/components/left/newChat/NewChat.tsx","webpack://telegram-t/./src/components/left/ArchivedChats.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.module.scss?6993","webpack://telegram-t/./src/components/left/MuteChatModal.tsx","webpack://telegram-t/./src/components/common/StickerSetModal.tsx","webpack://telegram-t/./src/components/common/CustomEmojiSetsModal.module.scss?b138","webpack://telegram-t/./src/components/common/CustomEmojiSetsModal.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.tsx","webpack://telegram-t/./src/components/middle/search/MiddleSearchResult.module.scss?f0ab","webpack://telegram-t/./src/components/middle/search/MiddleSearchResult.tsx","webpack://telegram-t/./src/components/middle/search/MiddleSearch.module.scss?725f","webpack://telegram-t/./src/components/middle/search/MiddleSearch.tsx","webpack://telegram-t/./src/hooks/events/useOutsideClick.ts","webpack://telegram-t/./src/components/common/ScrollableSearchInputWithEmojis.tsx","webpack://telegram-t/./src/components/common/EsgEmojiPicker.module.scss?46da","webpack://telegram-t/./src/components/middle/composer/StickerPicker.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPickerLimited.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPickerLimited.module.scss?0536","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPicker.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPicker.module.scss?695a","webpack://telegram-t/./src/util/selection.ts","webpack://telegram-t/./src/components/middle/composer/helpers/getHtmlTextLength.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModalItem.module.scss?41a0","webpack://telegram-t/./src/components/middle/composer/AttachmentModalItem.tsx","webpack://telegram-t/./src/util/visibility/isFullyVisible.ts","webpack://telegram-t/./src/util/findInViewport.ts","webpack://telegram-t/./src/util/setTooltipItemVisible.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useKeyboardNavigation.ts","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.module.scss?23ea","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.tsx","webpack://telegram-t/./src/components/common/EsgEmojiPicker.tsx","webpack://telegram-t/./src/components/common/GifButton.tsx","webpack://telegram-t/./src/components/middle/composer/GifPicker.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuFooter.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommand.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.module.scss?f347","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.module.scss?c44f","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.tsx","webpack://telegram-t/./src/components/common/richinput/TextFormatter.tsx","webpack://telegram-t/./src/util/getKeyFromEvent.ts","webpack://telegram-t/./src/components/middle/composer/CustomEmojiButton.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/BaseResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/ArticleResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/GifResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/MediaResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/StickerResult.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.tsx","webpack://telegram-t/./src/components/right/StickerSetResult.tsx","webpack://telegram-t/./src/components/right/StickerSearch.tsx","webpack://telegram-t/./src/components/right/GifSearch.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentPost.module.scss?fea0","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentPostMeta.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentMessage.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentStory.tsx","webpack://telegram-t/./src/components/right/statistics/Statistics.module.scss?96a0","webpack://telegram-t/./src/components/right/statistics/Statistics.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsPublicForward.module.scss?bbd6","webpack://telegram-t/./src/components/right/statistics/StatisticsMessagePublicForward.tsx","webpack://telegram-t/./src/components/right/statistics/MessageStatistics.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsStoryPublicForward.tsx","webpack://telegram-t/./src/components/right/statistics/StoryStatistics.tsx","webpack://telegram-t/./src/components/right/PollAnswerResults.tsx","webpack://telegram-t/./src/components/right/PollResults.tsx","webpack://telegram-t/./src/components/right/ManageTopic.module.scss?04dd","webpack://telegram-t/./src/components/right/CreateTopic.tsx","webpack://telegram-t/./src/components/right/EditTopic.tsx","webpack://telegram-t/./src/components/right/management/ManageBot.tsx","webpack://telegram-t/./src/components/right/management/ManageChannel.tsx","webpack://telegram-t/./src/components/right/management/ManageChatAdministrators.tsx","webpack://telegram-t/./src/components/right/management/ManageChatPrivacyType.tsx","webpack://telegram-t/./src/components/right/management/RemoveGroupUserModal.tsx","webpack://telegram-t/./src/components/right/management/ManageChatRemovedUsers.tsx","webpack://telegram-t/./src/components/right/management/ManageDiscussion.tsx","webpack://telegram-t/./src/components/right/management/ManageGroup.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupAdminRights.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupMembers.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupPermissions.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupUserPermissions.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupUserPermissionsCreate.tsx","webpack://telegram-t/./src/components/right/management/ManageInvite.tsx","webpack://telegram-t/./src/components/right/management/ManageInviteInfo.tsx","webpack://telegram-t/./src/components/right/management/ManageInvites.tsx","webpack://telegram-t/./src/components/right/management/JoinRequest.tsx","webpack://telegram-t/./src/components/right/management/ManageJoinRequests.tsx","webpack://telegram-t/./src/components/right/management/ManageReactions.tsx","webpack://telegram-t/./src/components/right/management/ManageUser.tsx","webpack://telegram-t/./src/components/right/management/Management.tsx","webpack://telegram-t/./src/components/common/helpers/detectCardType.ts","webpack://telegram-t/./src/hooks/reducers/usePaymentReducer.ts","webpack://telegram-t/./src/components/payment/Checkout.module.scss?4e47","webpack://telegram-t/./src/components/payment/Checkout.tsx","webpack://telegram-t/./src/components/payment/ConfirmPayment.tsx","webpack://telegram-t/./src/components/payment/PasswordConfirm.tsx","webpack://telegram-t/./src/hooks/useFocusAfterAnimation.ts","webpack://telegram-t/./src/components/payment/CardInput.tsx","webpack://telegram-t/./src/components/middle/helpers/inputFormatters.ts","webpack://telegram-t/./src/components/payment/ExpiryInput.tsx","webpack://telegram-t/./src/components/payment/PaymentInfo.tsx","webpack://telegram-t/./src/components/payment/SavedPaymentCredentials.tsx","webpack://telegram-t/./src/components/payment/Shipping.tsx","webpack://telegram-t/./src/components/payment/ShippingInfo.tsx","webpack://telegram-t/./src/components/payment/PaymentModal.tsx","webpack://telegram-t/./src/components/payment/ReceiptModal.tsx","webpack://telegram-t/./src/components/modals/inviteViaLink/InviteViaLinkModal.module.scss?717b","webpack://telegram-t/./src/components/modals/inviteViaLink/InviteViaLinkModal.tsx","webpack://telegram-t/./src/components/modals/oneTimeMedia/OneTimeMediaModal.module.scss?de6c","webpack://telegram-t/./src/components/modals/oneTimeMedia/OneTimeMediaModal.tsx","webpack://telegram-t/./src/components/main/WebAppsCloseConfirmationModal.tsx","webpack://telegram-t/./src/components/modals/frozenAccount/FrozenAccountModal.tsx","webpack://telegram-t/./src/components/modals/frozenAccount/FrozenAccountModal.module.scss?86e3","webpack://telegram-t/./src/components/common/PasswordMonkey.tsx","webpack://telegram-t/./src/components/common/PeerBadge.module.scss?732c","webpack://telegram-t/./src/components/common/PeerBadge.tsx","webpack://telegram-t/./src/components/common/pickers/PickerModal.tsx","webpack://telegram-t/./src/components/common/pickers/PickerModal.module.scss?7af2","webpack://telegram-t/./src/components/common/richinput/RichInput.module.scss?fef1","webpack://telegram-t/./src/components/common/richinput/RichInput.tsx","webpack://telegram-t/./src/components/common/richinput/useRichInput.tsx","webpack://telegram-t/./src/components/modals/common/TableAboutModal.module.scss?0459","webpack://telegram-t/./src/components/modals/common/TableAboutModal.tsx","webpack://telegram-t/./src/components/modals/common/TableInfoModal.module.scss?4f33","webpack://telegram-t/./src/components/modals/common/TableInfoModal.tsx","webpack://telegram-t/./src/components/modals/stars/StarTopupOptionList.module.scss?22c9","webpack://telegram-t/./src/components/modals/stars/StarTopupOptionList.tsx"],"sourcesContent":["import type {\n  ApiMessage, ApiPeer, ApiPeerPhotos, ApiSponsoredMessage,\n} from '../../../api/types';\nimport type { MediaViewerMedia } from '../../../types';\n\nimport { getMessageContent, isDocumentPhoto, isDocumentVideo } from '../../../global/helpers';\n\nexport type MediaViewerItem = {\n  type: 'message';\n  message: ApiMessage;\n  mediaIndex?: number;\n} | {\n  type: 'avatar';\n  avatarOwner: ApiPeer;\n  profilePhotos: ApiPeerPhotos;\n  mediaIndex: number;\n} | {\n  type: 'standalone';\n  media: MediaViewerMedia[];\n  mediaIndex: number;\n} | {\n  type: 'sponsoredMessage';\n  message: ApiSponsoredMessage;\n  mediaIndex?: number;\n};\n\ntype ViewableMedia = {\n  media: MediaViewerMedia;\n  isSingle?: boolean;\n};\n\nexport function getMediaViewerItem({\n  message, avatarOwner, profilePhotos, standaloneMedia, mediaIndex, sponsoredMessage,\n}: {\n  message?: ApiMessage;\n  avatarOwner?: ApiPeer;\n  profilePhotos?: ApiPeerPhotos;\n  standaloneMedia?: MediaViewerMedia[];\n  sponsoredMessage?: ApiSponsoredMessage;\n  mediaIndex?: number;\n}): MediaViewerItem | undefined {\n  if (avatarOwner && profilePhotos) {\n    return {\n      type: 'avatar',\n      avatarOwner,\n      profilePhotos,\n      mediaIndex: mediaIndex!,\n    };\n  }\n\n  if (standaloneMedia) {\n    return {\n      type: 'standalone',\n      media: standaloneMedia!,\n      mediaIndex: mediaIndex!,\n    };\n  }\n\n  if (message) {\n    return {\n      type: 'message',\n      message,\n      mediaIndex,\n    };\n  }\n\n  if (sponsoredMessage) {\n    return {\n      type: 'sponsoredMessage',\n      message: sponsoredMessage,\n      mediaIndex,\n    };\n  }\n\n  return undefined;\n}\n\nexport default function getViewableMedia(params?: MediaViewerItem): ViewableMedia | undefined {\n  if (!params) return undefined;\n\n  if (params.type === 'standalone') {\n    return {\n      media: params.media[params.mediaIndex],\n      isSingle: params.media.length === 1,\n    };\n  }\n\n  if (params.type === 'avatar') {\n    const avatar = params.profilePhotos?.photos[params.mediaIndex];\n    if (avatar) {\n      return {\n        media: avatar,\n      };\n    }\n    return undefined;\n  }\n\n  const {\n    action, document, photo, video, webPage, paidMedia,\n  } = getMessageContent(params.message);\n\n  if (action?.type === 'chatEditPhoto' || action?.type === 'suggestProfilePhoto') {\n    return {\n      media: action.photo!,\n      isSingle: true,\n    };\n  }\n\n  if (document && (isDocumentPhoto(document) || isDocumentVideo(document))) {\n    return {\n      media: document,\n    };\n  }\n\n  if (webPage) {\n    const { photo: webPagePhoto, video: webPageVideo, document: webPageDocument } = webPage;\n    const isDocumentMedia = webPageDocument && (isDocumentPhoto(webPageDocument) || isDocumentVideo(webPageDocument));\n    const mediaDocument = isDocumentMedia ? webPageDocument : undefined;\n    const media = webPageVideo || mediaDocument || webPagePhoto;\n    if (media) {\n      return {\n        media,\n        isSingle: true,\n      };\n    }\n  }\n\n  if (paidMedia) {\n    const extendedMedia = paidMedia.extendedMedia[params.mediaIndex || 0];\n    if (!('mediaType' in extendedMedia)) {\n      const { photo: extendedPhoto, video: extendedVideo } = extendedMedia;\n      return {\n        media: (extendedPhoto || extendedVideo)!,\n      };\n    }\n  }\n\n  const media = video || photo;\n\n  if (media) {\n    return {\n      media,\n      isSingle: video?.isGif,\n    };\n  }\n\n  return undefined;\n}\n","import type { ApiDimensions, ApiMessage } from '../../../api/types';\nimport { MediaViewerOrigin } from '../../../types';\n\nimport { ANIMATION_END_DELAY, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getMessageHtmlId } from '../../../global/helpers';\nimport { applyStyles } from '../../../util/animation';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport stopEvent from '../../../util/stopEvent';\nimport getOffsetToContainer from '../../../util/visibility/getOffsetToContainer';\nimport { isElementInViewport } from '../../../util/visibility/isElementInViewport';\nimport windowSize from '../../../util/windowSize';\nimport {\n  calculateDimensions,\n  getMediaViewerAvailableDimensions,\n  MEDIA_VIEWER_MEDIA_QUERY,\n  REM,\n} from '../../common/helpers/mediaDimensions';\n\nconst ANIMATION_DURATION = 200;\n\nexport function animateOpening(\n  hasFooter: boolean,\n  origin: MediaViewerOrigin,\n  bestImageData: string,\n  dimensions: ApiDimensions,\n  isVideo: boolean,\n  message?: ApiMessage,\n  mediaIndex?: number,\n) {\n  const { mediaEl: fromImage } = getNodes(origin, message, mediaIndex);\n  if (!fromImage) {\n    return;\n  }\n\n  const { width: windowWidth } = windowSize.get();\n  const {\n    width: availableWidth, height: availableHeight,\n  } = getMediaViewerAvailableDimensions(hasFooter, isVideo);\n  const { width: toWidth, height: toHeight } = calculateDimensions(\n    availableWidth, availableHeight, dimensions.width, dimensions.height,\n  );\n  const toLeft = (windowWidth - toWidth) / 2;\n  const toTop = getTopOffset(hasFooter) + (availableHeight - toHeight) / 2;\n\n  let {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n\n  if ([\n    MediaViewerOrigin.SharedMedia,\n    MediaViewerOrigin.Album,\n    MediaViewerOrigin.ScheduledAlbum,\n    MediaViewerOrigin.SearchResult,\n  ].includes(origin)) {\n    const uncovered = uncover(toWidth, toHeight, fromTop, fromLeft, fromWidth, fromHeight);\n    fromTop = uncovered.top;\n    fromLeft = uncovered.left;\n    fromWidth = uncovered.width;\n    fromHeight = uncovered.height;\n  }\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  const fromScaleX = fromWidth / toWidth;\n  const fromScaleY = fromHeight / toHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData || fromImage);\n    applyStyles(ghost, {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    });\n    applyShape(ghost, origin);\n\n    document.body.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      ghost.style.transform = '';\n      clearShape(ghost);\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (document.body.contains(ghost)) {\n            document.body.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nexport function animateClosing(\n  origin: MediaViewerOrigin, bestImageData: string, message?: ApiMessage, mediaIndex?: number,\n) {\n  const { container, mediaEl: toImage } = getNodes(origin, message, mediaIndex);\n  if (!toImage) {\n    return;\n  }\n\n  const fromImage = document.getElementById('MediaViewer')!.querySelector<HTMLImageElement>(\n    '.MediaViewerSlide--active img, .MediaViewerSlide--active video',\n  );\n  if (!fromImage) {\n    return;\n  }\n\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n  const {\n    top: targetTop, left: toLeft, width: toWidth, height: toHeight,\n  } = toImage.getBoundingClientRect();\n\n  let toTop = targetTop;\n  if (!isElementInViewport(container)) {\n    const { height: windowHeight } = windowSize.get();\n    toTop = targetTop < fromTop ? -toHeight : windowHeight;\n  }\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  let fromScaleX = fromWidth / toWidth;\n  let fromScaleY = fromHeight / toHeight;\n\n  const shouldFadeOut = (\n    [\n      MediaViewerOrigin.Inline,\n      MediaViewerOrigin.ScheduledInline,\n      MediaViewerOrigin.Album,\n      MediaViewerOrigin.ScheduledAlbum,\n    ].includes(origin)\n    && !isMessageImageFullyVisible(toImage)\n  );\n\n  if ([\n    MediaViewerOrigin.SharedMedia,\n    MediaViewerOrigin.Album,\n    MediaViewerOrigin.ScheduledAlbum,\n    MediaViewerOrigin.SearchResult,\n  ].includes(origin)) {\n    if (fromScaleX > fromScaleY) {\n      fromScaleX = fromScaleY;\n    } else if (fromScaleY > fromScaleX) {\n      fromScaleY = fromScaleX;\n    }\n  }\n\n  const existingGhost = document.getElementsByClassName('ghost')[0] as HTMLDivElement;\n  const ghost = existingGhost || createGhost(bestImageData || toImage, origin);\n\n  let styles: Record<string, string>;\n  if (existingGhost) {\n    const {\n      top, left, width, height,\n    } = existingGhost.getBoundingClientRect();\n    const scaleX = width / toWidth;\n    const scaleY = height / toHeight;\n\n    styles = {\n      transition: 'none',\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      transformOrigin: 'top left',\n      transform: `translate3d(${left - toLeft}px, ${top - toTop}px, 0) scale(${scaleX}, ${scaleY})`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n    };\n  } else {\n    styles = {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    };\n  }\n\n  requestMutation(() => {\n    applyStyles(ghost, styles);\n    if (!existingGhost) document.body.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      if (existingGhost) {\n        existingGhost.style.transition = '';\n      }\n\n      ghost.style.transform = '';\n\n      if (shouldFadeOut) {\n        ghost.style.opacity = '0';\n      }\n\n      applyShape(ghost, origin);\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (document.body.contains(ghost)) {\n            document.body.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nfunction createGhost(source: string | HTMLImageElement | HTMLVideoElement, origin?: MediaViewerOrigin) {\n  const ghost = document.createElement('div');\n  ghost.classList.add('ghost');\n\n  const img = new Image();\n  img.draggable = false;\n  img.oncontextmenu = stopEvent;\n\n  if (typeof source === 'string') {\n    img.src = source;\n  } else if (source instanceof HTMLVideoElement) {\n    img.src = source.poster;\n  } else {\n    img.src = source.src;\n  }\n\n  ghost.appendChild(img);\n\n  if (origin === MediaViewerOrigin.ProfileAvatar || origin === MediaViewerOrigin.SettingsAvatar) {\n    ghost.classList.add('ProfileInfo');\n    if (origin === MediaViewerOrigin.SettingsAvatar) {\n      ghost.classList.add('self');\n    }\n    const profileInfo = document.querySelector(\n      origin === MediaViewerOrigin.ProfileAvatar\n        ? '#RightColumn .ProfileInfo .info'\n        : '#Settings .ProfileInfo .info',\n    );\n    if (profileInfo) {\n      ghost.appendChild(profileInfo.cloneNode(true));\n    }\n  }\n\n  return ghost;\n}\n\nfunction uncover(realWidth: number, realHeight: number, top: number, left: number, width: number, height: number) {\n  if (realWidth === realHeight) {\n    const size = Math.max(width, height) * (realWidth / realHeight);\n    left -= (size - width) / 2;\n    top -= (size - height) / 2;\n    width = size;\n    height = size;\n  } else if (realWidth > realHeight) {\n    const srcWidth = width;\n    width = height * (realWidth / realHeight);\n    left -= (width - srcWidth) / 2;\n  } else if (realHeight > realWidth) {\n    const srcHeight = height;\n    height = width * (realHeight / realWidth);\n    top -= (height - srcHeight) / 2;\n  }\n\n  return {\n    top, left, width, height,\n  };\n}\n\nfunction isMessageImageFullyVisible(imageEl: HTMLElement) {\n  const messageListElement = document.querySelector<HTMLDivElement>('.Transition_slide-active > .MessageList')!;\n\n  const { top } = getOffsetToContainer(imageEl, messageListElement);\n\n  return top > messageListElement.scrollTop\n    && top + imageEl.offsetHeight < messageListElement.scrollTop + messageListElement.offsetHeight;\n}\n\nfunction getTopOffset(hasFooter: boolean) {\n  const mql = window.matchMedia(MEDIA_VIEWER_MEDIA_QUERY);\n  let topOffsetRem = 4.125;\n  if (hasFooter && !IS_TOUCH_ENV) {\n    topOffsetRem += mql.matches ? 0.875 : 2.125;\n  }\n\n  return topOffsetRem * REM;\n}\n\nfunction getNodes(origin: MediaViewerOrigin, message?: ApiMessage, index?: number) {\n  let containerSelector;\n  let mediaSelector;\n\n  switch (origin) {\n    case MediaViewerOrigin.Album:\n    case MediaViewerOrigin.ScheduledAlbum:\n      // eslint-disable-next-line max-len\n      containerSelector = `.Transition_slide-active > .MessageList #album-media-${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = '.full-media';\n      break;\n\n    case MediaViewerOrigin.PreviewMedia:\n      containerSelector = `#preview-media${index}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.SharedMedia:\n      containerSelector = `#shared-media${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.SearchResult:\n      containerSelector = `#search-media${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.MiddleHeaderAvatar:\n      containerSelector = '.MiddleHeader .Transition_slide-active .ChatInfo .Avatar';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.SettingsAvatar:\n      containerSelector = '#Settings .ProfileInfo .Transition_slide-active .ProfilePhoto';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.ProfileAvatar:\n      containerSelector = '#RightColumn .ProfileInfo .Transition_slide-active .ProfilePhoto';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.ChannelAvatar:\n    case MediaViewerOrigin.SuggestedAvatar:\n      containerSelector = `.Transition_slide-active > .MessageList #${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = '.Avatar img';\n      break;\n\n    case MediaViewerOrigin.StarsTransaction:\n      containerSelector = '.transaction-media-preview';\n      mediaSelector = index === 0 ? `.stars-transaction-media-${index} :is(img, video)` : undefined;\n      break;\n\n    case MediaViewerOrigin.SponsoredMessage:\n      containerSelector = '.Transition_slide-active > .MessageList .sponsored-media-preview';\n      mediaSelector = `${MESSAGE_CONTENT_SELECTOR} .full-media,${MESSAGE_CONTENT_SELECTOR} .thumbnail:not(.blurred-bg)`;\n      break;\n\n    case MediaViewerOrigin.ScheduledInline:\n    case MediaViewerOrigin.Inline:\n    default:\n      containerSelector = `.Transition_slide-active > .MessageList #${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = `${MESSAGE_CONTENT_SELECTOR} .full-media,${MESSAGE_CONTENT_SELECTOR} .thumbnail:not(.blurred-bg)`;\n  }\n\n  const container = document.querySelector<HTMLElement>(containerSelector)!;\n  const mediaEls = mediaSelector\n    ? container?.querySelectorAll<HTMLImageElement | HTMLVideoElement>(mediaSelector) : undefined;\n\n  return {\n    container,\n    mediaEl: mediaEls?.[0],\n  };\n}\n\nfunction applyShape(ghost: HTMLDivElement, origin: MediaViewerOrigin) {\n  switch (origin) {\n    case MediaViewerOrigin.Album:\n    case MediaViewerOrigin.ScheduledAlbum:\n    case MediaViewerOrigin.Inline:\n    case MediaViewerOrigin.ScheduledInline:\n    case MediaViewerOrigin.StarsTransaction:\n    case MediaViewerOrigin.PreviewMedia:\n    case MediaViewerOrigin.ChannelAvatar:\n      ghost.classList.add('rounded-corners');\n      break;\n\n    case MediaViewerOrigin.SharedMedia:\n    case MediaViewerOrigin.SettingsAvatar:\n    case MediaViewerOrigin.ProfileAvatar:\n    case MediaViewerOrigin.SearchResult:\n      (ghost.firstChild as HTMLElement).style.objectFit = 'cover';\n      break;\n\n    case MediaViewerOrigin.MiddleHeaderAvatar:\n    case MediaViewerOrigin.SuggestedAvatar:\n      ghost.classList.add('circle');\n      if (origin === MediaViewerOrigin.SuggestedAvatar) {\n        ghost.classList.add('transition-circle');\n      }\n      break;\n  }\n}\n\nfunction clearShape(ghost: HTMLDivElement) {\n  (ghost.firstChild as HTMLElement).style.objectFit = 'default';\n  ghost.classList.remove('rounded-corners', 'circle');\n}\n","import { useCallback, useLayoutEffect, useState } from '../lib/teact/teact';\n\nimport { DEBUG } from '../config';\nimport { IS_IOS, IS_PWA } from '../util/browser/windowEnvironment';\nimport safePlay, { getIsVideoPlaying } from '../util/safePlay';\nimport { createSignal } from '../util/signals';\n\ntype RefType = {\n  current: HTMLVideoElement | null;\n};\n\ntype ReturnType = [boolean, () => void, boolean] | [false];\ntype CallbackType = () => void;\n\nconst signal = createSignal(false);\nconst setIsPictureInPicture = signal[1];\n\nexport function usePictureInPictureSignal() {\n  return signal;\n}\n\nexport default function usePictureInPicture(\n  elRef: RefType,\n  onEnter: CallbackType,\n  onLeave: CallbackType,\n): ReturnType {\n  const [isSupported, setIsSupported] = useState(false);\n  const [isActive, setIsActive] = useState(false);\n\n  useLayoutEffect(() => {\n    // PIP is not supported in PWA on iOS, despite being detected\n    if ((IS_IOS && IS_PWA) || !elRef.current) return undefined;\n    const video = elRef.current;\n    const setMode = getSetPresentationMode(video);\n    const isEnabled = (document.pictureInPictureEnabled && !elRef.current?.disablePictureInPicture)\n      || setMode !== undefined;\n    if (!isEnabled) return undefined;\n    // @ts-ignore\n    video.autoPictureInPicture = true;\n    setIsSupported(true);\n    const onEnterInternal = () => {\n      onEnter();\n      setIsActive(true);\n      setIsPictureInPicture(true);\n    };\n    const onLeaveInternal = () => {\n      setIsPictureInPicture(false);\n      setIsActive(false);\n      onLeave();\n    };\n    video.addEventListener('enterpictureinpicture', onEnterInternal);\n    video.addEventListener('leavepictureinpicture', onLeaveInternal);\n    return () => {\n      video.removeEventListener('enterpictureinpicture', onEnterInternal);\n      video.removeEventListener('leavepictureinpicture', onLeaveInternal);\n    };\n  }, [elRef, onEnter, onLeave]);\n\n  const exitPictureInPicture = useCallback(() => {\n    if (!elRef.current) return;\n    const video = elRef.current;\n    const setMode = getSetPresentationMode(video);\n    if (setMode) {\n      setMode('inline');\n    } else {\n      exitPictureInPictureIfNeeded();\n    }\n  }, [elRef]);\n\n  const enterPictureInPicture = useCallback(() => {\n    if (!elRef.current) return;\n    exitPictureInPicture();\n    const video = elRef.current;\n    const isPlaying = getIsVideoPlaying(video);\n    const setMode = getSetPresentationMode(video);\n    if (setMode) {\n      setMode('picture-in-picture');\n    } else {\n      requestPictureInPicture(video);\n    }\n    // Muted video stops in PiP mode, so we need to play it again\n    if (isPlaying) {\n      safePlay(video);\n    }\n  }, [elRef, exitPictureInPicture]);\n\n  if (!isSupported) {\n    return [false];\n  }\n\n  return [isSupported, enterPictureInPicture, isActive];\n}\n\nfunction getSetPresentationMode(video: HTMLVideoElement) {\n  // @ts-ignore\n  if (video.webkitSupportsPresentationMode && typeof video.webkitSetPresentationMode === 'function') {\n    // @ts-ignore\n    return video.webkitSetPresentationMode.bind(video);\n  }\n  return undefined;\n}\n\nfunction requestPictureInPicture(video: HTMLVideoElement) {\n  if (video.requestPictureInPicture) {\n    try {\n      video.requestPictureInPicture();\n    } catch (err) {\n      if (DEBUG) {\n        // eslint-disable-next-line no-console\n        console.log('[MV] PictureInPicture Error', err);\n      }\n    }\n  }\n}\n\nexport function exitPictureInPictureIfNeeded() {\n  if (document.pictureInPictureElement) {\n    try {\n      document.exitPictureInPicture();\n    } catch (err) {\n      if (DEBUG) {\n        // eslint-disable-next-line no-console\n        console.log('[MV] PictureInPicture Error', err);\n      }\n    }\n  }\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { imgToCanvas } from '../util/files';\nimport useForceUpdate from './useForceUpdate';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\nconst MAX_CACHE_SIZE = 1000;\n\nconst cache = new Map<string, string>();\n\nexport default function useBlur(dataUri?: string, isDisabled = false, delay?: number) {\n  const blurredRef = useRef<string | undefined>(dataUri ? cache.get(dataUri) : undefined);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  if (timeoutRef.current && isDisabled) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useEffect(() => {\n    if (!dataUri || blurredRef.current || isDisabled) {\n      return;\n    }\n\n    const img = new Image();\n\n    img.onload = () => {\n      const canvas = imgToCanvas(img);\n      fastBlur(canvas.getContext('2d'), 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n      const blurredDataUri = canvas.toDataURL();\n\n      blurredRef.current = blurredDataUri;\n      forceUpdate();\n\n      if (cache.size >= MAX_CACHE_SIZE) {\n        cache.clear();\n      }\n      cache.set(dataUri, blurredDataUri);\n    };\n\n    if (delay) {\n      timeoutRef.current = window.setTimeout(() => {\n        img.src = dataUri;\n      }, delay);\n    } else {\n      img.src = dataUri;\n    }\n  }, [dataUri, delay, forceUpdate, isDisabled]);\n\n  return blurredRef.current;\n}\n","import { useMemo } from '../../../lib/teact/teact';\n\nimport type { MediaViewerMedia } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { MediaViewerOrigin } from '../../../types';\n\nimport {\n  getMediaFileSize,\n  getMediaFormat,\n  getMediaHash,\n  getMediaThumbUri,\n  getPhotoFullDimensions,\n  getProfilePhotoMediaHash,\n  getVideoDimensions,\n  getVideoProfilePhotoMediaHash,\n  isDocumentPhoto,\n  isDocumentVideo,\n} from '../../../global/helpers';\nimport { AVATAR_FULL_DIMENSIONS, VIDEO_AVATAR_FULL_DIMENSIONS } from '../../common/helpers/mediaDimensions';\n\nimport useBlurSync from '../../../hooks/useBlurSync';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\n\nconst FALLBACK_DIMENSIONS = AVATAR_FULL_DIMENSIONS;\n\ntype UseMediaProps = {\n  media?: MediaViewerMedia;\n  isAvatar?: boolean;\n  origin?: MediaViewerOrigin;\n  delay: number | false;\n};\n\nexport const useMediaProps = ({\n  media,\n  isAvatar,\n  origin,\n  delay,\n}: UseMediaProps) => {\n  const isPhotoAvatar = isAvatar && media?.mediaType === 'photo' && !media.isVideo;\n  const isVideoAvatar = isAvatar && media?.mediaType === 'photo' && media.isVideo;\n  const isDocument = media?.mediaType === 'document';\n  const isVideo = (media?.mediaType === 'video' && !media.isRound) || (isDocument && isDocumentVideo(media));\n  const isPhoto = media?.mediaType === 'photo' || (isDocument && isDocumentPhoto(media));\n  const isGif = media?.mediaType === 'video' && media.isGif;\n  const isFromSharedMedia = origin === MediaViewerOrigin.SharedMedia;\n  const isFromSearch = origin === MediaViewerOrigin.SearchResult;\n\n  const getMediaOrAvatarHash = useMemo(() => (isFull?: boolean) => {\n    if (!media) return undefined;\n\n    if ((isPhotoAvatar || isVideoAvatar) && !isFull) {\n      return getProfilePhotoMediaHash(media);\n    }\n\n    if (isVideoAvatar && isFull) {\n      return getVideoProfilePhotoMediaHash(media);\n    }\n\n    return getMediaHash(media, isFull ? 'full' : 'preview');\n  }, [isVideoAvatar, isPhotoAvatar, media]);\n\n  const pictogramBlobUrl = useMedia(\n    media\n    // Only use pictogram if it's already loaded\n    && (isFromSharedMedia || isFromSearch || isDocument)\n    && getMediaHash(media, 'pictogram'),\n    undefined,\n    ApiMediaFormat.BlobUrl,\n    delay,\n  );\n  const previewMediaHash = getMediaOrAvatarHash();\n  const previewBlobUrl = useMedia(\n    previewMediaHash,\n    undefined,\n    ApiMediaFormat.BlobUrl,\n    delay,\n  );\n  const {\n    mediaData: fullMediaBlobUrl,\n    loadProgress,\n  } = useMediaWithLoadProgress(\n    getMediaOrAvatarHash(true),\n    undefined,\n    media && getMediaFormat(media, 'full'),\n    delay,\n  );\n\n  const localBlobUrl = media && 'blobUrl' in media ? media.blobUrl : undefined;\n  let bestImageData = (!isVideo && (localBlobUrl || fullMediaBlobUrl)) || previewBlobUrl || pictogramBlobUrl;\n  const thumbDataUri = useBlurSync(!bestImageData && media && getMediaThumbUri(media));\n  if (!bestImageData && origin !== MediaViewerOrigin.SearchResult) {\n    bestImageData = thumbDataUri;\n  }\n  if (isVideoAvatar && previewBlobUrl) {\n    bestImageData = previewBlobUrl;\n  }\n  const bestData = localBlobUrl || fullMediaBlobUrl || (\n    (!isVideoAvatar && !isVideo) ? (previewBlobUrl || pictogramBlobUrl || bestImageData) : undefined\n  );\n\n  const mediaSize = media && getMediaFileSize(media);\n\n  const isLocal = Boolean(localBlobUrl);\n\n  const dimensions = useMemo(() => {\n    if (isAvatar) {\n      return isVideoAvatar ? VIDEO_AVATAR_FULL_DIMENSIONS : AVATAR_FULL_DIMENSIONS;\n    }\n\n    if (isDocument) {\n      return media.mediaSize!;\n    }\n\n    if (isPhoto) {\n      return getPhotoFullDimensions(media);\n    }\n\n    if (isVideo) {\n      return getVideoDimensions(media);\n    }\n\n    return FALLBACK_DIMENSIONS;\n  }, [isAvatar, isDocument, isPhoto, isVideo, isVideoAvatar, media]);\n\n  return {\n    getMediaHash: getMediaOrAvatarHash,\n    media,\n    isVideo,\n    isPhoto,\n    isGif,\n    isDocument,\n    bestImageData,\n    bestData,\n    dimensions,\n    isFromSharedMedia,\n    isVideoAvatar,\n    isLocal,\n    loadProgress,\n    mediaSize,\n  };\n};\n","import { useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { imgToCanvas } from '../util/files';\nimport useBlur from './useBlur';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useBlurSync(dataUri: string | false | undefined) {\n  const blurredRef = useRef<string>();\n\n  let isChanged = false;\n\n  useSyncEffect(() => {\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n    isChanged = true;\n\n    blurredRef.current = undefined;\n\n    if (!dataUri) {\n      return;\n    }\n\n    const img = new Image();\n    img.src = dataUri;\n    if (!img.width) {\n      return;\n    }\n\n    const canvas = imgToCanvas(img);\n    fastBlur(canvas.getContext('2d'), 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n\n    blurredRef.current = canvas.toDataURL();\n  }, [dataUri]);\n\n  // Sometimes `Image` do not manage to load synchronously,\n  // so we fall back the non-blurred variant and prepare the async one at least for the next time\n  const blurredAsync = useBlur(dataUri || undefined, Boolean(blurredRef.current));\n\n  return blurredRef.current || (!isChanged && blurredAsync) || dataUri || undefined;\n}\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto, ApiReportReason } from '../../api/types';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport InputText from '../ui/InputText';\nimport Modal from '../ui/Modal';\nimport RadioGroup from '../ui/RadioGroup';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  peerId?: string;\n  photo?: ApiPhoto;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nconst ReportAvatarModal: FC<OwnProps> = ({\n  isOpen,\n  peerId,\n  photo,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const { reportProfilePhoto } = getActions();\n\n  const [selectedReason, setSelectedReason] = useState<ApiReportReason>('spam');\n  const [description, setDescription] = useState('');\n\n  const handleReport = useLastCallback(() => {\n    reportProfilePhoto({\n      chatId: peerId, photo, reason: selectedReason, description,\n    });\n    onClose();\n  });\n\n  const handleSelectReason = useLastCallback((value: string) => {\n    setSelectedReason(value as ApiReportReason);\n  });\n\n  const handleDescriptionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setDescription(e.target.value);\n  });\n\n  const lang = useOldLang();\n\n  const REPORT_OPTIONS: { value: ApiReportReason; label: string }[] = useMemo(() => [\n    { value: 'spam', label: lang('lng_report_reason_spam') },\n    { value: 'violence', label: lang('lng_report_reason_violence') },\n    { value: 'pornography', label: lang('lng_report_reason_pornography') },\n    { value: 'childAbuse', label: lang('lng_report_reason_child_abuse') },\n    { value: 'copyright', label: lang('ReportPeer.ReasonCopyright') },\n    { value: 'illegalDrugs', label: 'Illegal Drugs' },\n    { value: 'personalDetails', label: 'Personal Details' },\n    { value: 'other', label: lang('lng_report_reason_other') },\n  ], [lang]);\n\n  if (!peerId || !photo) {\n    return undefined;\n  }\n\n  const title = lang('ReportPeer.Report');\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={isOpen ? handleReport : undefined}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      className=\"narrow\"\n      title={title}\n    >\n      <RadioGroup\n        className=\"dialog-checkbox-group\"\n        name=\"report-message\"\n        options={REPORT_OPTIONS}\n        onChange={handleSelectReason}\n        selected={selectedReason}\n      />\n      <InputText\n        label={lang('lng_report_reason_description')}\n        value={description}\n        onChange={handleDescriptionChange}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleReport}>\n          {lang('lng_report_button')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ReportAvatarModal);\n","import { useUnmountCleanup } from '../../../lib/teact/teact';\n\nimport { createSignal } from '../../../util/signals';\n\nconst [getZoomChange, setZoomChange] = createSignal(1);\n\nexport default function useZoomChange() {\n  useUnmountCleanup(() => {\n    setZoomChange(1);\n  });\n\n  return [getZoomChange, setZoomChange] as const;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto } from '../../api/types';\n\nimport { isUserId } from '../../global/helpers';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  photo: ApiPhoto;\n  profileId: string;\n  onConfirm?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n};\n\nconst DeleteProfilePhotoModal: FC<OwnProps> = ({\n  isOpen,\n  photo,\n  profileId,\n  onClose,\n  onConfirm,\n}) => {\n  const {\n    deleteProfilePhoto,\n    deleteChatPhoto,\n  } = getActions();\n\n  const handleDeletePhoto = useCallback(() => {\n    onConfirm?.();\n    if (isUserId(profileId)) {\n      deleteProfilePhoto({ photo });\n    } else {\n      deleteChatPhoto({\n        photo,\n        chatId: profileId,\n      });\n    }\n    onClose();\n  }, [onConfirm, profileId, onClose, deleteProfilePhoto, photo, deleteChatPhoto]);\n\n  const lang = useOldLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={handleDeletePhoto}\n      className=\"delete dialog-buttons-column\"\n      title={lang('AreYouSure')}\n    >\n      <div className=\"dialog-buttons mt-2\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeletePhoto}>\n          {lang('Preview.DeletePhoto')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(DeleteProfilePhotoModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\nimport type { ActiveDownloads, MediaViewerOrigin, MessageListType } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport type { MenuItemProps } from '../ui/MenuItem';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport {\n  getIsDownloading,\n  getMediaFilename,\n  getMediaFormat,\n  getMediaHash,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectActiveDownloads,\n  selectAllowedMessageActionsSlow, selectCurrentChat,\n  selectCurrentMessageList,\n  selectIsChatProtected,\n  selectIsMessageProtected,\n  selectTabState,\n} from '../../global/selectors';\nimport getViewableMedia from './helpers/getViewableMedia';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\nimport useZoomChange from './hooks/useZoomChangeSignal';\n\nimport DeleteProfilePhotoModal from '../common/DeleteProfilePhotoModal';\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport ProgressSpinner from '../ui/ProgressSpinner';\n\nimport './MediaViewerActions.scss';\n\ntype StateProps = {\n  activeDownloads: ActiveDownloads;\n  isProtected?: boolean;\n  isChatProtected?: boolean;\n  canDelete?: boolean;\n  chat?: ApiChat;\n  canUpdate?: boolean;\n  messageListType?: MessageListType;\n  origin?: MediaViewerOrigin;\n};\n\ntype OwnProps = {\n  item?: MediaViewerItem;\n  mediaData?: string;\n  isVideo: boolean;\n  canUpdateMedia?: boolean;\n  canReportAvatar?: boolean;\n  activeDownloads?: ActiveDownloads;\n  onReportAvatar: NoneToVoidFunction;\n  onBeforeDelete: NoneToVoidFunction;\n  onCloseMediaViewer: NoneToVoidFunction;\n  onForward: NoneToVoidFunction;\n};\n\nconst MediaViewerActions: FC<OwnProps & StateProps> = ({\n  item,\n  mediaData,\n  isVideo,\n  chat,\n  isChatProtected,\n  isProtected,\n  canReportAvatar,\n  canDelete,\n  canUpdate,\n  messageListType,\n  activeDownloads,\n  origin,\n  onReportAvatar: onReport,\n  onCloseMediaViewer,\n  onBeforeDelete,\n  onForward,\n}) => {\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag(false);\n  const [getZoomChange, setZoomChange] = useZoomChange();\n  const { isMobile } = useAppLayout();\n\n  const {\n    downloadMedia,\n    cancelMediaDownload,\n    updateProfilePhoto,\n    updateChatPhoto,\n    openMediaViewer,\n    openDeleteMessageModal,\n  } = getActions();\n\n  const isMessage = item?.type === 'message';\n\n  const { media } = getViewableMedia(item) || {};\n  const fileName = media && getMediaFilename(media);\n  const isDownloading = media && getIsDownloading(activeDownloads, media);\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    media && getMediaHash(media, 'download'),\n    !isDownloading,\n    media && getMediaFormat(media, 'download'),\n  );\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (!media) return;\n\n    if (isDownloading) {\n      cancelMediaDownload({ media });\n    } else {\n      const message = item?.type === 'message' ? item.message : undefined;\n      downloadMedia({ media, originMessage: message });\n    }\n  });\n\n  const handleZoomOut = useLastCallback(() => {\n    const zoomChange = getZoomChange();\n    const change = zoomChange < 0 ? zoomChange : 0;\n    setZoomChange(change - 1);\n  });\n\n  const handleZoomIn = useLastCallback(() => {\n    const zoomChange = getZoomChange();\n    const change = zoomChange > 0 ? zoomChange : 0;\n    setZoomChange(change + 1);\n  });\n\n  const handleUpdate = useLastCallback(() => {\n    if (item?.type !== 'avatar') return;\n    const { avatarOwner, profilePhotos, mediaIndex } = item;\n    const avatarPhoto = profilePhotos?.photos[mediaIndex]!;\n    if (isUserId(avatarOwner.id)) {\n      updateProfilePhoto({ photo: avatarPhoto });\n    } else {\n      updateChatPhoto({ chatId: avatarOwner.id, photo: avatarPhoto });\n    }\n\n    openMediaViewer({\n      origin: origin!,\n      chatId: avatarOwner.id,\n      mediaIndex: 0,\n      isAvatarView: true,\n    }, {\n      forceOnHeavyAnimation: true,\n    });\n  });\n\n  const lang = useOldLang();\n\n  const MenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : undefined}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, []);\n\n  function renderDeleteModal() {\n    return (item?.type === 'avatar') ? (\n      <DeleteProfilePhotoModal\n        isOpen={isDeleteModalOpen}\n        onClose={closeDeleteModal}\n        onConfirm={onBeforeDelete}\n        profileId={item.avatarOwner.id}\n        photo={item.profilePhotos.photos[item.mediaIndex!]}\n      />\n    ) : undefined;\n  }\n\n  function renderDownloadButton() {\n    if (isProtected || item?.type === 'standalone') {\n      return undefined;\n    }\n\n    return item?.type !== 'sponsoredMessage' && (isVideo ? (\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('AccActionDownload')}\n        onClick={handleDownloadClick}\n      >\n        {isDownloading ? (\n          <ProgressSpinner progress={downloadProgress} size=\"s\" onClick={handleDownloadClick} />\n        ) : (\n          <Icon name=\"download\" />\n        )}\n      </Button>\n    ) : (\n      <Button\n        href={mediaData}\n        download={fileName}\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('AccActionDownload')}\n      >\n        <Icon name=\"download\" />\n      </Button>\n    ));\n  }\n\n  const openDeleteModalHandler = useLastCallback(() => {\n    if (item?.type === 'message' && chat) {\n      openDeleteMessageModal({\n        chatId: chat?.id,\n        messageIds: [item.message.id],\n        isSchedule: messageListType === 'scheduled',\n        onConfirm: onBeforeDelete,\n      });\n    } else {\n      openDeleteModal();\n    }\n  });\n\n  if (isMobile) {\n    const menuItems: MenuItemProps[] = [];\n    if (isMessage && item.message.isForwardingAllowed && !item.message.content.action && !isChatProtected) {\n      menuItems.push({\n        icon: 'forward',\n        onClick: onForward,\n        children: lang('Forward'),\n      });\n    }\n    if (!isProtected) {\n      if (isVideo) {\n        menuItems.push({\n          icon: isDownloading ? 'close' : 'download',\n          onClick: handleDownloadClick,\n          children: isDownloading ? `${Math.round(downloadProgress * 100)}% Downloading...` : 'Download',\n        });\n      } else {\n        menuItems.push({\n          icon: 'download',\n          href: mediaData,\n          download: fileName,\n          children: lang('AccActionDownload'),\n        });\n      }\n    }\n\n    if (canReportAvatar) {\n      menuItems.push({\n        icon: 'flag',\n        onClick: onReport,\n        children: lang('ReportPeer.Report'),\n      });\n    }\n\n    if (canUpdate) {\n      menuItems.push({\n        icon: 'copy-media',\n        onClick: handleUpdate,\n        children: lang('ProfilePhoto.SetMainPhoto'),\n      });\n    }\n\n    if (canDelete) {\n      menuItems.push({\n        icon: 'delete',\n        onClick: openDeleteModalHandler,\n        children: lang('Delete'),\n        destructive: true,\n      });\n    }\n\n    if (menuItems.length === 0) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"MediaViewerActions-mobile\">\n        <DropdownMenu\n          trigger={MenuButton}\n          positionX=\"right\"\n        >\n          {menuItems.map(({\n            icon, onClick, href, download, children, destructive,\n          }) => (\n            <MenuItem\n              key={icon}\n              icon={icon as IconName}\n              href={href}\n              download={download}\n              onClick={onClick}\n              destructive={destructive}\n            >\n              {children}\n            </MenuItem>\n          ))}\n        </DropdownMenu>\n        {isDownloading && <ProgressSpinner progress={downloadProgress} size=\"s\" noCross />}\n        {canDelete && renderDeleteModal()}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"MediaViewerActions\">\n      {isMessage && item.message.isForwardingAllowed && !isChatProtected && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('Forward')}\n          onClick={onForward}\n        >\n          <Icon name=\"forward\" />\n        </Button>\n      )}\n      {renderDownloadButton()}\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('MediaZoomOut')}\n        onClick={handleZoomOut}\n      >\n        <Icon name=\"zoom-out\" />\n      </Button>\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('MediaZoomIn')}\n        onClick={handleZoomIn}\n      >\n        <Icon name=\"zoom-in\" />\n      </Button>\n      {canReportAvatar && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang(isVideo ? 'PeerInfo.ReportProfileVideo' : 'PeerInfo.ReportProfilePhoto')}\n          onClick={onReport}\n        >\n          <Icon name=\"flag\" />\n        </Button>\n      )}\n      {canUpdate && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('ProfilePhoto.SetMainPhoto')}\n          onClick={handleUpdate}\n        >\n          <Icon name=\"copy-media\" />\n        </Button>\n      )}\n      {canDelete && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('Delete')}\n          onClick={openDeleteModalHandler}\n        >\n          <Icon name=\"delete\" />\n        </Button>\n      )}\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('Close')}\n        onClick={onCloseMediaViewer}\n      >\n        <Icon name=\"close\" />\n      </Button>\n      {canDelete && renderDeleteModal()}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    item, canUpdateMedia,\n  }): StateProps => {\n    const tabState = selectTabState(global);\n    const { origin } = tabState.mediaViewer;\n\n    const message = item?.type === 'message' ? item.message : undefined;\n    const avatarOwner = item?.type === 'avatar' ? item.avatarOwner : undefined;\n    const avatarPhoto = item?.type === 'avatar' && item.profilePhotos.photos[item.mediaIndex];\n\n    const chat = selectCurrentChat(global);\n    const currentMessageList = selectCurrentMessageList(global);\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const isProtected = selectIsMessageProtected(global, message);\n    const activeDownloads = selectActiveDownloads(global);\n    const isChatProtected = message && selectIsChatProtected(global, message?.chatId);\n    const { canDelete: canDeleteMessage } = (threadId\n      && message && selectAllowedMessageActionsSlow(global, message, threadId)) || {};\n    const isCurrentAvatar = avatarPhoto && (avatarPhoto.id === avatarOwner?.avatarPhotoId);\n    const canDeleteAvatar = canUpdateMedia && Boolean(avatarPhoto);\n    const canDelete = canDeleteMessage || canDeleteAvatar;\n    const canUpdate = canUpdateMedia && Boolean(avatarPhoto) && !isCurrentAvatar;\n    const messageListType = currentMessageList?.type;\n\n    return {\n      activeDownloads,\n      isProtected,\n      chat,\n      isChatProtected,\n      canDelete,\n      canUpdate,\n      messageListType,\n      origin,\n    };\n  },\n)(MediaViewerActions));\n","import { useRef } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport useEffectOnce from './useEffectOnce';\n\n// Allows to use signal value as \"silent\" dependency in hooks (not causing updates)\nexport function useSignalRef<T>(getValue: Signal<T>) {\n  const ref = useRef<T>(getValue());\n\n  useEffectOnce(() => {\n    return getValue.subscribe(() => {\n      ref.current = getValue();\n    });\n  });\n\n  return ref;\n}\n","import { createSignal } from '../../../util/signals';\n\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\n\nconst [getControlsVisible, setControlsVisible] = createSignal(false);\nconst [getIsLocked, setIsLocked] = createSignal(false);\n\nexport default function useControlsSignal() {\n  const getVisible = useDerivedSignal(\n    () => getControlsVisible() && !getIsLocked(),\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n    [getControlsVisible, getIsLocked],\n  );\n\n  return [getVisible, setControlsVisible, setIsLocked] as const;\n}\n","import { useUnmountCleanup } from '../lib/teact/teact';\n\nimport { createSignal } from '../util/signals';\n\nexport const [getCurrentTime, setCurrentTime] = createSignal(0);\n\nexport default function useCurrentTimeSignal() {\n  useUnmountCleanup(() => {\n    setCurrentTime(0);\n  });\n\n  return [getCurrentTime, setCurrentTime] as const;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useEffect, useState } from '../../lib/teact/teact';\n\nimport type { TextPart } from '../../types';\n\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { throttle } from '../../util/schedulers';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useControlsSignal from './hooks/useControlsSignal';\n\nimport Button from '../ui/Button';\n\nimport './MediaViewerFooter.scss';\n\nconst RESIZE_THROTTLE_MS = 500;\n\ntype OwnProps = {\n  text: TextPart | TextPart[];\n  buttonText?: string;\n  onClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  handleSponsoredClick: (isFromMedia?: boolean) => void;\n  isForVideo: boolean;\n  isForceMobileVersion?: boolean;\n  isProtected?: boolean;\n};\n\nconst MediaViewerFooter: FC<OwnProps> = ({\n  text = '', buttonText, isForVideo, onClick, handleSponsoredClick, isProtected, isForceMobileVersion,\n}) => {\n  const [isMultiline, setIsMultiline] = useState(false);\n  const { isMobile } = useAppLayout();\n  const [getIsVisible] = useControlsSignal();\n  const isHidden = useDerivedState(() => (IS_TOUCH_ENV ? !getIsVisible() : false), [getIsVisible]);\n\n  useEffect(() => {\n    const footerContent = document.querySelector('.MediaViewerFooter .media-text') as HTMLDivElement | null;\n\n    const checkIsMultiline = () => {\n      const height = footerContent ? footerContent.clientHeight : 0;\n\n      setIsMultiline(height > REM * 2);\n    };\n\n    // First run for initial detection of multiline footer text\n    checkIsMultiline();\n\n    const handleResize = throttle(checkIsMultiline, RESIZE_THROTTLE_MS, true);\n\n    window.addEventListener('resize', handleResize, false);\n\n    return () => {\n      window.removeEventListener('resize', handleResize, false);\n    };\n  }, []);\n\n  function stopEvent(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (text) {\n      e.stopPropagation();\n    }\n  }\n\n  const onButtonClick = useLastCallback(() => {\n    handleSponsoredClick();\n  });\n\n  const classNames = buildClassName(\n    'MediaViewerFooter',\n    isForVideo && 'is-for-video',\n    isHidden && 'is-hidden',\n    isProtected && 'is-protected',\n    isForceMobileVersion && 'mobile',\n  );\n\n  return (\n    <div className={classNames} onClick={stopEvent}>\n      {Boolean(text) && (\n        <div className=\"media-viewer-footer-content\" onClick={!isMobile ? onClick : undefined}>\n          <p className={`media-text custom-scroll allow-selection ${isMultiline ? 'multiline' : ''}`} dir=\"auto\">\n            {text}\n          </p>\n        </div>\n      )}\n      {Boolean(buttonText) && (\n        <Button\n          className={buildClassName('media-viewer-footer-content', 'media-viewer-button')}\n          size=\"default\"\n          color=\"primary\"\n          isRectangular\n          onClick={onButtonClick}\n        >\n          {buttonText}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default MediaViewerFooter;\n","import { useUnmountCleanup } from '../../../lib/teact/teact';\n\nimport { createSignal } from '../../../util/signals';\n\nexport const [getIsVideoWaiting, setIsVideoWaiting] = createSignal(false);\n\nexport default function useVideoWaitingSignal() {\n  useUnmountCleanup(() => {\n    setIsVideoWaiting(false);\n  });\n\n  return [getIsVideoWaiting, setIsVideoWaiting] as const;\n}\n","import { ApiMediaFormat } from '../../api/types';\n\nimport { IS_ANDROID, IS_IOS } from '../../util/browser/windowEnvironment';\nimport launchMediaWorkers, { MAX_WORKERS } from '../../util/launchMediaWorkers';\nimport { callApi } from '../../api/gramjs';\nimport { requestMutation } from '../fasterdom/fasterdom';\n\nconst IS_MOBILE = IS_ANDROID || IS_IOS;\nconst PREVIEW_SIZE_RATIO = (IS_ANDROID || IS_IOS) ? 0.3 : 0.25;\nconst MAX_FRAMES = IS_MOBILE ? 40 : 80;\nconst PREVIEW_MAX_SIDE = 200;\n\nconst connections = launchMediaWorkers();\n\nlet videoPreview: VideoPreview | undefined;\n\nexport class VideoPreview {\n  frames: Map<number, ImageBitmap> = new Map();\n\n  currentTime = 0;\n\n  canvas: HTMLCanvasElement;\n\n  constructor(url: string, canvas: HTMLCanvasElement) {\n    this.canvas = canvas;\n    connections.forEach(({ connector }, index) => {\n      void connector.request({\n        name: 'video-preview:init',\n        args: [\n          url,\n          MAX_FRAMES,\n          index,\n          MAX_WORKERS,\n          this.onFrame.bind(this),\n        ],\n      });\n    });\n  }\n\n  private onFrame(time: number, frame: ImageBitmap) {\n    this.frames.set(time, frame);\n    if (time === this.currentTime) {\n      this.render(time);\n    }\n  }\n\n  private clearCache() {\n    this.frames.forEach((frame) => {\n      frame.close();\n    });\n    this.frames.clear();\n  }\n\n  render(time: number) {\n    this.currentTime = time;\n    const frame = this.frames.get(time);\n    if (!frame) return false;\n    requestMutation(() => {\n      this.canvas.width = frame.width;\n      this.canvas.height = frame.height;\n      const ctx = this.canvas.getContext('2d')!;\n      ctx.drawImage(frame, 0, 0, this.canvas.width, this.canvas.height);\n    });\n    return true;\n  }\n\n  destroy() {\n    this.clearCache();\n    connections.forEach(({ connector }) => {\n      void connector.request({\n        name: 'video-preview:destroy',\n        args: [],\n      });\n    });\n  }\n}\n\nexport function getPreviewDimensions(width: number, height: number) {\n  width = Math.round(width * PREVIEW_SIZE_RATIO);\n  height = Math.round(height * PREVIEW_SIZE_RATIO);\n  const ratio = width / height;\n  if (width > PREVIEW_MAX_SIDE) {\n    width = PREVIEW_MAX_SIDE;\n    height = Math.round(width / ratio);\n  }\n  if (height > PREVIEW_MAX_SIDE) {\n    height = PREVIEW_MAX_SIDE;\n    width = Math.round(height * ratio);\n  }\n  return { width, height };\n}\n\nconnections.forEach(({ worker }) => {\n  worker.addEventListener('message', async (e) => {\n    const { type, messageId, params } = e.data as {\n      type: string;\n      messageId: string;\n      params: { url: string; start: number; end: number };\n    };\n\n    if (type !== 'requestPart') {\n      return;\n    }\n\n    const result = await callApi('downloadMedia', { mediaFormat: ApiMediaFormat.Progressive, ...params });\n    if (!result) {\n      return;\n    }\n\n    const { arrayBuffer } = result;\n\n    worker.postMessage({\n      type: 'partResponse',\n      messageId,\n      result: arrayBuffer,\n    }, [arrayBuffer!]);\n  });\n});\n\nexport function createVideoPreviews(url: string, canvas: HTMLCanvasElement) {\n  if (videoPreview) {\n    videoPreview.destroy();\n  }\n  videoPreview = new VideoPreview(url, canvas);\n  return () => {\n    videoPreview?.destroy();\n    videoPreview = undefined;\n  };\n}\n\nexport function renderVideoPreview(time: number) {\n  if (!videoPreview) return false;\n  return videoPreview.render(time);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ingarEvU\",\"preview\":\"TqpEWfl3\",\"previewCanvas\":\"fKVz2lln\",\"previewTime\":\"bGiNvx5D\",\"previewTimeText\":\"mnkqvOMR\",\"track\":\"Od9ZSc1U\",\"buffered\":\"ANe2DKfp\",\"played\":\"igaGLblf\",\"seeking\":\"beUP6SqY\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\n\nimport type { ApiDimensions } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\n\nimport { createVideoPreviews, getPreviewDimensions, renderVideoPreview } from '../../lib/video-preview/VideoPreview';\nimport { animateNumber } from '../../util/animation';\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport { clamp, round } from '../../util/math';\n\nimport { useThrottledSignal } from '../../hooks/useAsyncResolvers';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useVideoWaitingSignal from './hooks/useVideoWaitingSignal';\n\nimport ShowTransition from '../ui/ShowTransition';\n\nimport styles from './SeekLine.module.scss';\n\ntype OwnProps = {\n  url?: string;\n  duration: number;\n  bufferedRanges: BufferedRange[];\n  playbackRate: number;\n  isActive?: boolean;\n  isPlaying?: boolean;\n  isPreviewDisabled?: boolean;\n  isReady: boolean;\n  posterSize?: ApiDimensions;\n  onSeek: (position: number) => void;\n  onSeekStart: () => void;\n};\n\nconst LOCK_TIMEOUT = 250;\nlet cancelAnimation: Function | undefined;\n\nconst SeekLine: FC<OwnProps> = ({\n  duration,\n  bufferedRanges,\n  isReady,\n  posterSize,\n  playbackRate,\n  url,\n  isActive,\n  isPlaying,\n  isPreviewDisabled,\n  onSeek,\n  onSeekStart,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const [getCurrentTimeSignal] = useCurrentTimeSignal();\n  const [getIsWaiting] = useVideoWaitingSignal();\n  const getCurrentTime = useThrottledSignal(getCurrentTimeSignal, LOCK_TIMEOUT);\n  const [getSelectedTime, setSelectedTime] = useSignal(getCurrentTime());\n  const [getPreviewOffset, setPreviewOffset] = useSignal(0);\n  const [getPreviewTime, setPreviewTime] = useSignal(0);\n  const isLockedRef = useRef<boolean>(false);\n  const [isPreviewVisible, setPreviewVisible] = useState(false);\n  const [isSeeking, setIsSeeking] = useState(false);\n  // eslint-disable-next-line no-null/no-null\n  const previewCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const previewRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const progressRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const previewTimeRef = useRef<HTMLDivElement>(null);\n\n  const previewSize = useMemo(() => {\n    return getPreviewDimensions(posterSize?.width || 0, posterSize?.height || 0);\n  }, [posterSize]);\n\n  const setPreview = useLastCallback((time: number) => {\n    time = Math.floor(time);\n    setPreviewTime(time);\n    renderVideoPreview(time);\n  });\n\n  useEffect(() => {\n    if (isPreviewDisabled || !url || !isReady) return undefined;\n    return createVideoPreviews(url, previewCanvasRef.current!);\n  }, [url, isReady, isPreviewDisabled]);\n\n  useEffect(() => {\n    setPreviewVisible(false);\n  }, [isActive]);\n\n  useEffect(() => {\n    if (cancelAnimation) cancelAnimation();\n    cancelAnimation = undefined;\n    if (!isLockedRef.current && !isSeeking) {\n      const time = getCurrentTime();\n      const remaining = duration - time;\n      cancelAnimation = animateNumber({\n        from: time,\n        to: duration,\n        duration: (remaining * 1000) / playbackRate,\n        onUpdate: setSelectedTime,\n      });\n    }\n  }, [getCurrentTime, isSeeking, setSelectedTime, playbackRate, duration]);\n\n  useEffect(() => {\n    if (!isPlaying || getIsWaiting()) {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n    }\n  }, [isPlaying, getSelectedTime, getIsWaiting]);\n\n  useEffect(() => {\n    if (isPlaying) {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n      const time = getCurrentTime();\n      const remaining = duration - time;\n      cancelAnimation = animateNumber({\n        from: time,\n        to: duration,\n        duration: (remaining * 1000) / playbackRate,\n        onUpdate: setSelectedTime,\n      });\n    }\n    // eslint-disable-next-line\n  }, [isPlaying, playbackRate, duration]);\n\n  useLayoutEffect(() => {\n    if (!progressRef.current) return;\n    const progress = round((getSelectedTime() / duration) * 100, 2);\n    progressRef.current.style.width = `${progress}%`;\n  }, [getSelectedTime, duration]);\n\n  useLayoutEffect(() => {\n    if (!previewRef.current) return;\n    previewRef.current.style.left = `${getPreviewOffset()}px`;\n  }, [getPreviewOffset]);\n\n  useLayoutEffect(() => {\n    if (!previewTimeRef.current) return;\n    previewTimeRef.current.innerText = formatMediaDuration(getPreviewTime());\n  }, [getPreviewTime]);\n\n  useEffect(() => {\n    if (!seekerRef.current || !isActive) return undefined;\n    const seeker = seekerRef.current;\n    let seekerSize = seeker.getBoundingClientRect();\n\n    let time = 0;\n    let offset = 0;\n\n    const getPreviewProps = (e: MouseEvent | TouchEvent) => {\n      const pageX = e instanceof MouseEvent ? e.pageX : e.touches[0].pageX;\n      const t = clamp(duration * ((pageX - seekerSize.left) / seekerSize.width), 0, duration);\n      if (isPreviewDisabled) return [t, 0];\n      if (!seekerSize.width) seekerSize = seeker.getBoundingClientRect();\n      const preview = previewRef.current!;\n      const o = clamp(\n        pageX - seekerSize.left - preview.clientWidth / 2, -4, seekerSize.width - preview.clientWidth + 4,\n      );\n      return [t, o];\n    };\n\n    const stopAnimation = () => {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n    };\n\n    const handleSeek = (e: MouseEvent | TouchEvent) => {\n      stopAnimation();\n      setPreviewVisible(true);\n      ([time, offset] = getPreviewProps(e));\n      void setPreview(time);\n      setPreviewOffset(offset);\n      setSelectedTime(time);\n    };\n\n    const handleStartSeek = () => {\n      stopAnimation();\n      setPreviewVisible(true);\n      setIsSeeking(true);\n      onSeekStart();\n    };\n\n    const handleStopSeek = () => {\n      stopAnimation();\n      isLockedRef.current = true;\n      setPreviewVisible(false);\n      setIsSeeking(false);\n      setSelectedTime(time);\n      onSeek(time);\n      // Prevent current time updates from overriding the selected time\n      setTimeout(() => {\n        isLockedRef.current = false;\n      }, LOCK_TIMEOUT);\n    };\n\n    const cleanup = captureEvents(seeker, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n\n    if (IS_TOUCH_ENV || isPreviewDisabled) {\n      return cleanup;\n    }\n\n    const handleSeekMouseMove = (e: MouseEvent) => {\n      setPreviewVisible(true);\n      ([time, offset] = getPreviewProps(e));\n      setPreviewOffset(offset);\n      void setPreview(time);\n    };\n\n    const handleSeekMouseLeave = () => {\n      setPreviewVisible(false);\n    };\n\n    seeker.addEventListener('mousemove', handleSeekMouseMove);\n    seeker.addEventListener('mouseenter', handleSeekMouseMove);\n    seeker.addEventListener('mouseleave', handleSeekMouseLeave);\n\n    return () => {\n      cleanup();\n      seeker.removeEventListener('mousemove', handleSeekMouseMove);\n      seeker.removeEventListener('mouseenter', handleSeekMouseMove);\n      seeker.removeEventListener('mouseleave', handleSeekMouseLeave);\n    };\n  }, [\n    duration,\n    setPreview,\n    isActive,\n    onSeek,\n    onSeekStart,\n    setPreviewOffset,\n    setSelectedTime,\n    setIsSeeking,\n    isPreviewDisabled,\n    playbackRate,\n  ]);\n\n  return (\n    <div className={styles.container} ref={seekerRef}>\n      {!isPreviewDisabled && (\n        <ShowTransition\n          isOpen\n          isHidden={!isPreviewVisible}\n          className={styles.preview}\n          style={`width: ${previewSize.width}px; height: ${previewSize.height}px`}\n          ref={previewRef}\n        >\n          <canvas className={styles.previewCanvas} ref={previewCanvasRef} />\n          <div className={styles.previewTime}>\n            <span className={styles.previewTimeText} ref={previewTimeRef} />\n          </div>\n        </ShowTransition>\n      )}\n      <div className={styles.track}>\n        {bufferedRanges.map(({\n          start,\n          end,\n        }) => (\n          <div\n            key={`${start}-${end}`}\n            className={styles.buffered}\n            // @ts-ignore\n            style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n          />\n        ))}\n      </div>\n      <div className={styles.track}>\n        <div\n          ref={progressRef}\n          className={buildClassName(styles.played, isSeeking && styles.seeking)}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SeekLine);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useMemo,\n  useSignal,\n} from '../../lib/teact/teact';\n\nimport type { ApiDimensions } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport type { IconName } from '../../types/icons';\n\nimport { IS_IOS, IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport { formatFileSize } from '../../util/textFormat';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useControlsSignal from './hooks/useControlsSignal';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport RangeSlider from '../ui/RangeSlider';\nimport SeekLine from './SeekLine';\n\nimport './VideoPlayerControls.scss';\n\ntype OwnProps = {\n  url?: string;\n  bufferedRanges: BufferedRange[];\n  bufferedProgress: number;\n  duration: number;\n  isReady: boolean;\n  fileSize: number;\n  isForceMobileVersion?: boolean;\n  isPlaying: boolean;\n  isFullscreenSupported: boolean;\n  isPictureInPictureSupported: boolean;\n  isFullscreen: boolean;\n  isPreviewDisabled?: boolean;\n  isBuffered: boolean;\n  volume: number;\n  isMuted: boolean;\n  playbackRate: number;\n  posterSize?: ApiDimensions;\n  onChangeFullscreen: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  onPictureInPictureChange?: () => void;\n  onVolumeClick: () => void;\n  onVolumeChange: (volume: number) => void;\n  onPlaybackRateChange: (playbackRate: number) => void;\n  onPlayPause: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  onSeek: (position: number) => void;\n};\n\nconst stopEvent = (e: React.MouseEvent<HTMLElement>) => {\n  e.stopPropagation();\n};\n\nconst PLAYBACK_RATES = [\n  0.5,\n  1,\n  1.5,\n  2,\n];\n\nconst HIDE_CONTROLS_TIMEOUT_MS = 3000;\n\nconst VideoPlayerControls: FC<OwnProps> = ({\n  url,\n  bufferedRanges,\n  bufferedProgress,\n  duration,\n  isReady,\n  fileSize,\n  isForceMobileVersion,\n  isPlaying,\n  isFullscreenSupported,\n  isFullscreen,\n  isBuffered,\n  isPreviewDisabled,\n  volume,\n  isMuted,\n  playbackRate,\n  posterSize,\n  onChangeFullscreen,\n  onVolumeClick,\n  onVolumeChange,\n  onPlaybackRateChange,\n  isPictureInPictureSupported,\n  onPictureInPictureChange,\n  onPlayPause,\n  onSeek,\n}) => {\n  const [isPlaybackMenuOpen, openPlaybackMenu, closePlaybackMenu] = useFlag();\n  const [getCurrentTime] = useCurrentTimeSignal();\n  const currentTime = useDerivedState(() => Math.trunc(getCurrentTime()), [getCurrentTime]);\n  const [getIsSeeking, setIsSeeking] = useSignal(false);\n\n  const { isMobile } = useAppLayout();\n  const [getIsVisible, setVisibility] = useControlsSignal();\n  const isVisible = useDerivedState(getIsVisible);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV && !isForceMobileVersion) return undefined;\n    let timeout: number | undefined;\n    if (!isVisible || !isPlaying || isPlaybackMenuOpen || getIsSeeking()) {\n      if (timeout) window.clearTimeout(timeout);\n      return undefined;\n    }\n    timeout = window.setTimeout(() => {\n      setVisibility(false);\n    }, HIDE_CONTROLS_TIMEOUT_MS);\n    return () => {\n      if (timeout) window.clearTimeout(timeout);\n    };\n  }, [isPlaying, isVisible, setVisibility, isPlaybackMenuOpen, getIsSeeking, isForceMobileVersion]);\n\n  useLayoutEffect(() => {\n    if (isVisible) {\n      document.body.classList.add('video-controls-visible');\n    } else {\n      document.body.classList.remove('video-controls-visible');\n    }\n    return () => {\n      document.body.classList.remove('video-controls-visible');\n    };\n  }, [isVisible]);\n\n  useEffect(() => {\n    if (!isVisible) {\n      closePlaybackMenu();\n    }\n  }, [closePlaybackMenu, isVisible]);\n\n  const lang = useOldLang();\n\n  const handleSeek = useLastCallback((position: number) => {\n    setIsSeeking(false);\n    onSeek(position);\n  });\n\n  const handleSeekStart = useLastCallback(() => {\n    setIsSeeking(true);\n  });\n\n  const volumeIcon: IconName = useMemo(() => {\n    if (volume === 0 || isMuted) return 'muted';\n    if (volume < 0.3) return 'volume-1';\n    if (volume < 0.6) return 'volume-2';\n    return 'volume-3';\n  }, [volume, isMuted]);\n\n  return (\n    <div\n      className={buildClassName('VideoPlayerControls', isForceMobileVersion && 'mobile', isVisible && 'active')}\n      onClick={stopEvent}\n    >\n      <SeekLine\n        url={url}\n        duration={duration}\n        isReady={isReady}\n        isPlaying={isPlaying}\n        isPreviewDisabled={isPreviewDisabled}\n        posterSize={posterSize}\n        bufferedRanges={bufferedRanges}\n        playbackRate={playbackRate}\n        onSeek={handleSeek}\n        onSeekStart={handleSeekStart}\n        isActive={isVisible}\n      />\n      <div className=\"buttons\">\n        <Button\n          ariaLabel={lang('AccActionPlay')}\n          size=\"tiny\"\n          ripple={!isMobile}\n          color=\"translucent-white\"\n          className=\"play\"\n          round\n          onClick={onPlayPause}\n        >\n          <Icon name={isPlaying ? 'pause' : 'play'} />\n        </Button>\n        <Button\n          ariaLabel=\"Volume\"\n          size=\"tiny\"\n          color=\"translucent-white\"\n          className=\"volume\"\n          round\n          onClick={onVolumeClick}\n        >\n          <Icon name={volumeIcon} />\n        </Button>\n        {!IS_IOS && (\n          <RangeSlider bold className=\"volume-slider\" value={isMuted ? 0 : volume * 100} onChange={onVolumeChange} />\n        )}\n        {renderTime(currentTime, duration)}\n        {!isBuffered && (\n          <div className=\"player-file-size\">\n            {`${formatFileSize(lang, fileSize * bufferedProgress)} / ${formatFileSize(lang, fileSize)}`}\n          </div>\n        )}\n        <div className=\"spacer\" />\n        <Button\n          ariaLabel=\"Playback rate\"\n          size=\"tiny\"\n          color=\"translucent-white\"\n          className=\"playback-rate\"\n          round\n          onClick={openPlaybackMenu}\n        >\n          {`${playbackRate}x`}\n        </Button>\n        {isPictureInPictureSupported && (\n          <Button\n            ariaLabel=\"Picture in picture\"\n            size=\"tiny\"\n            color=\"translucent-white\"\n            className=\"fullscreen\"\n            round\n            onClick={onPictureInPictureChange}\n          >\n            <Icon name=\"pip\" />\n          </Button>\n        )}\n        {isFullscreenSupported && (\n          <Button\n            ariaLabel=\"Fullscreen\"\n            size=\"tiny\"\n            color=\"translucent-white\"\n            className=\"fullscreen\"\n            round\n            onClick={onChangeFullscreen}\n          >\n            <Icon name={isFullscreen ? 'smallscreen' : 'fullscreen'} />\n          </Button>\n        )}\n      </div>\n      <Menu\n        isOpen={isPlaybackMenuOpen}\n        className={buildClassName(\n          'playback-rate-menu',\n          !isFullscreenSupported && 'no-fullscreen',\n          !isPictureInPictureSupported && 'no-pip',\n        )}\n        positionX=\"right\"\n        positionY=\"bottom\"\n        autoClose\n        onClose={closePlaybackMenu}\n      >\n        {PLAYBACK_RATES.map((rate) => (\n          // eslint-disable-next-line react/jsx-no-bind\n          <MenuItem disabled={playbackRate === rate} onClick={() => onPlaybackRateChange(rate)}>\n            {`${rate}x`}\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nfunction renderTime(currentTime: number, duration: number) {\n  return (\n    <div className=\"player-time\">\n      {`${formatMediaDuration(currentTime)} / ${formatMediaDuration(duration)}`}\n    </div>\n  );\n}\n\nexport default memo(VideoPlayerControls);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiDimensions } from '../../api/types';\n\nimport { IS_IOS, IS_TOUCH_ENV, IS_YA_BROWSER } from '../../util/browser/windowEnvironment';\nimport { clamp } from '../../util/math';\nimport safePlay from '../../util/safePlay';\nimport stopEvent from '../../util/stopEvent';\n\nimport useUnsupportedMedia from '../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useBuffering from '../../hooks/useBuffering';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePictureInPicture from '../../hooks/usePictureInPicture';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport useVideoCleanup from '../../hooks/useVideoCleanup';\nimport useFullscreen from '../../hooks/window/useFullscreen';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport useVideoWaitingSignal from './hooks/useVideoWaitingSignal';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport VideoPlayerControls from './VideoPlayerControls';\n\nimport './VideoPlayer.scss';\n\ntype OwnProps = {\n  url?: string;\n  isGif?: boolean;\n  posterData?: string;\n  posterSize?: ApiDimensions;\n  loadProgress?: number;\n  fileSize: number;\n  isPreviewDisabled?: boolean;\n  isMediaViewerOpen?: boolean;\n  noPlay?: boolean;\n  volume: number;\n  isMuted: boolean;\n  isHidden?: boolean;\n  playbackRate: number;\n  isProtected?: boolean;\n  shouldCloseOnClick?: boolean;\n  isForceMobileVersion?: boolean;\n  isClickDisabled?: boolean;\n  isSponsoredMessage?: boolean;\n  timestamp?: number;\n  handleSponsoredClick?: (isFromMedia?: boolean) => void;\n  onClose: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n};\n\nconst MAX_LOOP_DURATION = 30; // Seconds\nconst MIN_READY_STATE = 4;\nconst REWIND_STEP = 5; // Seconds\n\nconst VideoPlayer: FC<OwnProps> = ({\n  url,\n  isGif,\n  posterData,\n  posterSize,\n  loadProgress,\n  fileSize,\n  isMediaViewerOpen,\n  noPlay,\n  volume,\n  isMuted,\n  playbackRate,\n  isForceMobileVersion,\n  shouldCloseOnClick,\n  isProtected,\n  isClickDisabled,\n  isPreviewDisabled,\n  isSponsoredMessage,\n  timestamp,\n  handleSponsoredClick,\n  onClose,\n}) => {\n  const {\n    setMediaViewerVolume,\n    setMediaViewerMuted,\n    setMediaViewerPlaybackRate,\n    setMediaViewerHidden,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const [isPlaying, setIsPlaying] = useState(!IS_TOUCH_ENV || !IS_IOS);\n  const [isFullscreen, setFullscreen, exitFullscreen] = useFullscreen(videoRef, setIsPlaying);\n  const { isMobile } = useAppLayout();\n  const duration = videoRef.current?.duration || 0;\n  const isLooped = isGif || duration <= MAX_LOOP_DURATION;\n\n  const handleEnterFullscreen = useLastCallback(() => {\n    // Yandex browser doesn't support PIP when video is hidden\n    if (IS_YA_BROWSER) return;\n    setMediaViewerHidden({ isHidden: true });\n  });\n\n  const handleLeaveFullscreen = useLastCallback(() => {\n    if (IS_YA_BROWSER) return;\n    setMediaViewerHidden({ isHidden: false });\n  });\n\n  const [\n    isPictureInPictureSupported,\n    enterPictureInPicture,\n    isInPictureInPicture,\n  ] = usePictureInPicture(videoRef, handleEnterFullscreen, handleLeaveFullscreen);\n\n  const [, toggleControls, lockControls] = useControlsSignal();\n\n  const handleVideoMove = useLastCallback(() => {\n    toggleControls(true);\n  });\n\n  const handleVideoLeave = useLastCallback((e) => {\n    const bounds = videoRef.current?.getBoundingClientRect();\n    if (!bounds) return;\n    if (e.clientX < bounds.left || e.clientX > bounds.right || e.clientY < bounds.top || e.clientY > bounds.bottom) {\n      toggleControls(false);\n    }\n  });\n\n  const {\n    isReady, isBuffered, bufferedRanges, bufferingHandlers, bufferedProgress,\n  } = useBuffering();\n  const isUnsupported = useUnsupportedMedia(videoRef, undefined, !url);\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(\n    !isBuffered && !isUnsupported, undefined, undefined, 'slow',\n  );\n  const {\n    shouldRender: shouldRenderPlayButton,\n    transitionClassNames: playButtonClassNames,\n  } = useShowTransitionDeprecated(\n    IS_IOS && !isPlaying && !shouldRenderSpinner && !isUnsupported, undefined, undefined, 'slow',\n  );\n\n  const [, setCurrentTime] = useCurrentTimeSignal();\n  const [, setIsVideoWaiting] = useVideoWaitingSignal();\n\n  useEffect(() => {\n    lockControls(shouldRenderSpinner);\n  }, [lockControls, shouldRenderSpinner]);\n\n  useEffect(() => {\n    if (noPlay || !isMediaViewerOpen || isUnsupported) {\n      videoRef.current!.pause();\n    } else if (url && !IS_TOUCH_ENV) {\n      // Chrome does not automatically start playing when `url` becomes available (even with `autoPlay`),\n      // so we force it here. Contrary, iOS does not allow to call `play` without mouse event,\n      // so we need to use `autoPlay` instead to allow pre-buffering.\n      safePlay(videoRef.current!);\n    }\n  }, [noPlay, isMediaViewerOpen, url, setMediaViewerMuted, isUnsupported]);\n\n  useEffect(() => {\n    videoRef.current!.volume = volume;\n  }, [volume]);\n\n  useEffect(() => {\n    videoRef.current!.playbackRate = playbackRate;\n  }, [playbackRate]);\n\n  useEffect(() => {\n    if (!timestamp) return;\n    videoRef.current!.currentTime = timestamp;\n    setCurrentTime(timestamp);\n  }, [setCurrentTime, timestamp]);\n\n  const togglePlayState = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent> | KeyboardEvent) => {\n    e.stopPropagation();\n    if (isPlaying) {\n      videoRef.current!.pause();\n      setIsPlaying(false);\n    } else {\n      safePlay(videoRef.current!);\n      setIsPlaying(true);\n    }\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLVideoElement, MouseEvent>) => {\n    if (isSponsoredMessage) {\n      handleSponsoredClick?.(true);\n      onClose(e);\n    }\n    if (isClickDisabled) {\n      return;\n    }\n    if (shouldCloseOnClick) {\n      onClose(e);\n    } else {\n      togglePlayState(e);\n    }\n  });\n\n  useVideoCleanup(videoRef, bufferingHandlers);\n\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    const video = e.currentTarget;\n    if (video.readyState >= MIN_READY_STATE) {\n      setIsVideoWaiting(false);\n      setCurrentTime(video.currentTime);\n    }\n    if (!isLooped && video.currentTime === video.duration) {\n      setCurrentTime(0);\n      setIsPlaying(false);\n    }\n  });\n\n  const handleEnded = useLastCallback(() => {\n    if (isLooped) return;\n    setCurrentTime(0);\n    setIsPlaying(false);\n    toggleControls(true);\n  });\n\n  const handleFullscreenChange = useLastCallback(() => {\n    if (isFullscreen && exitFullscreen) {\n      exitFullscreen();\n    } else if (!isFullscreen && setFullscreen) {\n      setFullscreen();\n    }\n  });\n\n  const handleSeek = useLastCallback((position: number) => {\n    videoRef.current!.currentTime = position;\n  });\n\n  const handleVolumeChange = useLastCallback((newVolume: number) => {\n    setMediaViewerVolume({ volume: newVolume / 100 });\n  });\n\n  const handleVolumeMuted = useLastCallback(() => {\n    // Browser requires explicit user interaction to keep video playing after unmuting\n    videoRef.current!.muted = !videoRef.current!.muted;\n    setMediaViewerMuted({ isMuted: !isMuted });\n  });\n\n  const handlePlaybackRateChange = useLastCallback((newPlaybackRate: number) => {\n    setMediaViewerPlaybackRate({ playbackRate: newPlaybackRate });\n  });\n\n  useEffect(() => {\n    if (!isMediaViewerOpen) return undefined;\n    const rewind = (dir: number) => {\n      if (!isFullscreen) return;\n      const video = videoRef.current!;\n      const newTime = clamp(video.currentTime + dir * REWIND_STEP, 0, video.duration);\n      if (Number.isFinite(newTime)) {\n        video.currentTime = newTime;\n      }\n    };\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (isInPictureInPicture) return;\n      switch (e.key) {\n        case ' ':\n        case 'Enter':\n          e.preventDefault();\n          togglePlayState(e);\n          break;\n        case 'Left': // IE/Edge specific value\n        case 'ArrowLeft':\n          e.preventDefault();\n          rewind(-1);\n          break;\n        case 'Right': // IE/Edge specific value\n        case 'ArrowRight':\n          e.preventDefault();\n          rewind(1);\n          break;\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown, false);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown, false);\n    };\n  }, [togglePlayState, isMediaViewerOpen, isFullscreen, isInPictureInPicture]);\n\n  const wrapperStyle = posterSize && `width: ${posterSize.width}px; height: ${posterSize.height}px`;\n  const videoStyle = `background-image: url(${posterData})`;\n  const shouldToggleControls = !IS_TOUCH_ENV && !isForceMobileVersion;\n\n  return (\n    // eslint-disable-next-line jsx-a11y/mouse-events-have-key-events\n    <div\n      className=\"VideoPlayer\"\n      onMouseMove={shouldToggleControls ? handleVideoMove : undefined}\n      onMouseOut={shouldToggleControls ? handleVideoLeave : undefined}\n    >\n      <div\n        style={wrapperStyle}\n      >\n        {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n        {isProtected && (\n          <div\n            onContextMenu={stopEvent}\n            onDoubleClick={!IS_TOUCH_ENV ? handleFullscreenChange : undefined}\n            onClick={!isMobile ? togglePlayState : undefined}\n            className=\"protector\"\n          />\n        )}\n        <video\n          ref={videoRef}\n          autoPlay={IS_TOUCH_ENV}\n          controlsList=\"nodownload\"\n          playsInline\n          loop={isLooped}\n          // This is to force autoplaying on mobiles\n          muted={isGif || isMuted}\n          id=\"media-viewer-video\"\n          style={videoStyle}\n          onWaiting={() => setIsVideoWaiting(true)}\n          onPlay={() => setIsPlaying(true)}\n          onEnded={handleEnded}\n          onClick={!isMobile && !isFullscreen ? handleClick : undefined}\n          onDoubleClick={!IS_TOUCH_ENV ? handleFullscreenChange : undefined}\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          {...bufferingHandlers}\n          onPause={(e) => {\n            setIsPlaying(false);\n            bufferingHandlers.onPause(e);\n          }}\n          onTimeUpdate={handleTimeUpdate}\n          src={url}\n        />\n      </div>\n      {shouldRenderPlayButton && (\n        <Button round className={`play-button ${playButtonClassNames}`} onClick={togglePlayState}>\n          <Icon name=\"play\" />\n        </Button>\n      )}\n      {shouldRenderSpinner && (\n        <div className={['spinner-container', spinnerClassNames].join(' ')}>\n          {!isBuffered && <div className=\"buffering\">Buffering...</div>}\n          <ProgressSpinner\n            size=\"xl\"\n            progress={isBuffered ? 1 : loadProgress}\n            onClick={onClose}\n          />\n        </div>\n      )}\n      {!isGif && !isSponsoredMessage && !isUnsupported && (\n        <VideoPlayerControls\n          url={url}\n          isPlaying={isPlaying}\n          bufferedRanges={bufferedRanges}\n          bufferedProgress={bufferedProgress}\n          isBuffered={isBuffered}\n          isFullscreenSupported={Boolean(setFullscreen)}\n          isPictureInPictureSupported={isPictureInPictureSupported}\n          isFullscreen={isFullscreen}\n          isPreviewDisabled={isPreviewDisabled}\n          fileSize={fileSize}\n          duration={duration}\n          isReady={isReady}\n          posterSize={posterSize}\n          isForceMobileVersion={isForceMobileVersion}\n          onSeek={handleSeek}\n          onChangeFullscreen={handleFullscreenChange}\n          onPictureInPictureChange={enterPictureInPicture}\n          onPlayPause={togglePlayState}\n          volume={volume}\n          playbackRate={playbackRate}\n          isMuted={isMuted}\n          onVolumeClick={handleVolumeMuted}\n          onVolumeChange={handleVolumeChange}\n          onPlaybackRateChange={handlePlaybackRateChange}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(VideoPlayer);\n","import React, { memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiDimensions, ApiMessage, ApiSponsoredMessage,\n} from '../../api/types';\nimport type { MediaViewerOrigin, ThreadId } from '../../types';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport { MEDIA_TIMESTAMP_SAVE_MINIMUM_DURATION } from '../../config';\nimport {\n  selectIsMessageProtected, selectMessageTimestampableDuration, selectTabState,\n} from '../../global/selectors';\nimport { ARE_WEBCODECS_SUPPORTED } from '../../util/browser/globalEnvironment';\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport { calculateMediaViewerDimensions } from '../common/helpers/mediaDimensions';\nimport { renderMessageText } from '../common/helpers/renderMessageText';\nimport getViewableMedia from './helpers/getViewableMedia';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport { useSignalEffect } from '../../hooks/useSignalEffect';\nimport useThrottledCallback from '../../hooks/useThrottledCallback';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport { useMediaProps } from './hooks/useMediaProps';\n\nimport Spinner from '../ui/Spinner';\nimport MediaViewerFooter from './MediaViewerFooter';\nimport VideoPlayer from './VideoPlayer';\n\nimport './MediaViewerContent.scss';\n\ntype OwnProps = {\n  item: MediaViewerItem;\n  isActive?: boolean;\n  withAnimation?: boolean;\n  isMoving?: boolean;\n  onClose: () => void;\n  onFooterClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  handleSponsoredClick: () => void;\n};\n\ntype StateProps = {\n  textMessage?: ApiMessage | ApiSponsoredMessage;\n  origin?: MediaViewerOrigin;\n  isProtected?: boolean;\n  volume: number;\n  isMuted: boolean;\n  isHidden?: boolean;\n  playbackRate: number;\n  threadId?: ThreadId;\n  timestamp?: number;\n  maxTimestamp?: number;\n};\n\nconst ANIMATION_DURATION = 350;\nconst MOBILE_VERSION_CONTROL_WIDTH = 350;\nconst PLAYBACK_SAVE_INTERVAL = 1000;\n\nconst MediaViewerContent = ({\n  item,\n  isActive,\n  textMessage,\n  origin,\n  withAnimation,\n  isProtected,\n  volume,\n  playbackRate,\n  isMuted,\n  isHidden,\n  isMoving,\n  threadId,\n  timestamp,\n  maxTimestamp,\n  onClose,\n  onFooterClick,\n  handleSponsoredClick,\n}: OwnProps & StateProps) => {\n  const { updateLastPlaybackTimestamp } = getActions();\n\n  const lang = useOldLang();\n\n  const isAvatar = item.type === 'avatar';\n  const isSponsoredMessage = item.type === 'sponsoredMessage';\n  const { media } = getViewableMedia(item) || {};\n\n  const {\n    isVideo,\n    isPhoto,\n    bestImageData,\n    bestData,\n    dimensions,\n    isGif,\n    isLocal,\n    isVideoAvatar,\n    mediaSize,\n    loadProgress,\n  } = useMediaProps({\n    media, isAvatar, origin, delay: withAnimation ? ANIMATION_DURATION : false,\n  });\n\n  const [, toggleControls] = useControlsSignal();\n  const [getCurrentTime] = useCurrentTimeSignal();\n\n  const isOpen = Boolean(media);\n  const { isMobile } = useAppLayout();\n\n  const toggleControlsOnMove = useLastCallback(() => {\n    toggleControls(true);\n  });\n\n  const updatePlaybackTimestamp = useThrottledCallback(() => {\n    if (!isActive || !textMessage || media?.mediaType !== 'video') return;\n    if (media.duration < MEDIA_TIMESTAMP_SAVE_MINIMUM_DURATION) return;\n\n    const message = 'id' in textMessage ? textMessage : undefined;\n    const currentTime = getCurrentTime();\n    if (!currentTime || !message || message.isInAlbum) return;\n\n    // Reset timestamp if we are close to the end of the video\n    const newTimestamp = media.duration - currentTime > PLAYBACK_SAVE_INTERVAL / 1000 ? currentTime : undefined;\n    updateLastPlaybackTimestamp({ chatId: message.chatId, messageId: message.id, timestamp: newTimestamp });\n  }, [getCurrentTime, isActive, media, textMessage], PLAYBACK_SAVE_INTERVAL);\n\n  useSignalEffect(updatePlaybackTimestamp, [getCurrentTime]);\n\n  if (!media) return undefined;\n\n  if (item.type === 'avatar') {\n    if (!isVideoAvatar) {\n      return (\n        <div key={media.id} className=\"MediaViewerContent\">\n          {renderPhoto(\n            bestData,\n            calculateMediaViewerDimensions(dimensions!, false),\n            !isMobile && !isProtected,\n            isProtected,\n          )}\n        </div>\n      );\n    } else {\n      return (\n        <div key={media.id} className=\"MediaViewerContent\">\n          <VideoPlayer\n            key={media.id}\n            url={bestData}\n            isGif\n            posterData={bestImageData}\n            posterSize={calculateMediaViewerDimensions(dimensions!, false, true)}\n            loadProgress={loadProgress}\n            fileSize={mediaSize!}\n            isMediaViewerOpen={isOpen && isActive}\n            isProtected={isProtected}\n            isPreviewDisabled={!ARE_WEBCODECS_SUPPORTED || isLocal}\n            noPlay={!isActive}\n            onClose={onClose}\n            isMuted\n            shouldCloseOnClick\n            volume={0}\n            isClickDisabled={isMoving}\n            playbackRate={1}\n            isSponsoredMessage={isSponsoredMessage}\n            handleSponsoredClick={handleSponsoredClick}\n          />\n        </div>\n      );\n    }\n  }\n\n  const textParts = textMessage && (textMessage.content.action?.type === 'suggestProfilePhoto'\n    ? lang('Conversation.SuggestedPhotoTitle')\n    : renderMessageText({\n      message: textMessage, maxTimestamp, threadId, forcePlayback: true, isForMediaViewer: true,\n    }));\n  const buttonText = textMessage && 'buttonText' in textMessage ? textMessage.buttonText : undefined;\n  const hasFooter = Boolean(textParts);\n  const posterSize = calculateMediaViewerDimensions(dimensions!, hasFooter, isVideo);\n  const isForceMobileVersion = isMobile || shouldForceMobileVersion(posterSize);\n\n  return (\n    <div\n      className={buildClassName('MediaViewerContent', hasFooter && 'has-footer')}\n      onMouseMove={isForceMobileVersion && !IS_TOUCH_ENV ? toggleControlsOnMove : undefined}\n    >\n      {isPhoto && renderPhoto(\n        bestData,\n        posterSize,\n        !isMobile && !isProtected,\n        isProtected,\n      )}\n      {isVideo && (!isActive ? renderVideoPreview(\n        bestImageData,\n        posterSize,\n        !isMobile && !isProtected,\n        isProtected,\n      ) : (\n        <VideoPlayer\n          key={media.id}\n          url={bestData}\n          isGif={isGif}\n          posterData={bestImageData}\n          posterSize={posterSize}\n          loadProgress={loadProgress}\n          fileSize={mediaSize!}\n          isMediaViewerOpen={isOpen && isActive}\n          noPlay={!isActive}\n          isPreviewDisabled={!ARE_WEBCODECS_SUPPORTED || isLocal}\n          onClose={onClose}\n          isMuted={isMuted}\n          isHidden={isHidden}\n          isForceMobileVersion={isForceMobileVersion}\n          isProtected={isProtected}\n          volume={volume}\n          isClickDisabled={isMoving}\n          playbackRate={playbackRate}\n          isSponsoredMessage={isSponsoredMessage}\n          handleSponsoredClick={handleSponsoredClick}\n          timestamp={timestamp}\n        />\n      ))}\n      {textParts && (\n        <MediaViewerFooter\n          text={textParts}\n          buttonText={buttonText}\n          onClick={onFooterClick}\n          isProtected={isProtected}\n          isForceMobileVersion={isForceMobileVersion}\n          isForVideo={isVideo && !isGif}\n          handleSponsoredClick={handleSponsoredClick}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { item }): StateProps => {\n    const {\n      volume,\n      isMuted,\n      playbackRate,\n      isHidden,\n      origin,\n      timestamp,\n      threadId,\n    } = selectTabState(global).mediaViewer;\n    const message = item.type === 'message' ? item.message : undefined;\n    const sponsoredMessage = item.type === 'sponsoredMessage' ? item.message : undefined;\n    const textMessage = message || sponsoredMessage;\n\n    const maxTimestamp = message && selectMessageTimestampableDuration(global, message, true);\n\n    return {\n      origin,\n      textMessage,\n      isProtected: message && selectIsMessageProtected(global, message),\n      volume,\n      isMuted,\n      isHidden,\n      playbackRate,\n      threadId,\n      timestamp,\n      maxTimestamp,\n    };\n  },\n)(MediaViewerContent));\n\nfunction renderPhoto(blobUrl?: string, imageSize?: ApiDimensions, canDrag?: boolean, isProtected?: boolean) {\n  return blobUrl\n    ? (\n      <div style=\"position: relative;\">\n        {isProtected && <div onContextMenu={stopEvent} className=\"protector\" />}\n        <img\n          src={blobUrl}\n          alt=\"\"\n          className={buildClassName(isProtected && 'is-protected')}\n          style={imageSize ? `width: ${imageSize.width}px` : ''}\n          draggable={Boolean(canDrag)}\n        />\n      </div>\n    )\n    : (\n      <div\n        className=\"spinner-wrapper\"\n        style={imageSize ? `width: ${imageSize.width}px` : ''}\n      >\n        <Spinner color=\"white\" />\n      </div>\n    );\n}\n\nfunction renderVideoPreview(blobUrl?: string, imageSize?: ApiDimensions, canDrag?: boolean, isProtected?: boolean) {\n  const wrapperStyle = imageSize && `width: ${imageSize.width}px; height: ${imageSize.height}px`;\n  const videoStyle = `background-image: url(${blobUrl})`;\n  return blobUrl\n    ? (\n      <div\n        className=\"VideoPlayer\"\n      >\n        {isProtected && <div onContextMenu={stopEvent} className=\"protector\" />}\n        <div\n          style={wrapperStyle}\n        >\n          {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n          <video\n            style={videoStyle}\n            className={buildClassName(isProtected && 'is-protected')}\n            draggable={Boolean(canDrag)}\n          />\n        </div>\n      </div>\n    )\n    : (\n      <div\n        className=\"spinner-wrapper\"\n        style={imageSize ? `width: ${imageSize.width}px` : ''}\n      >\n        <Spinner color=\"white\" />\n      </div>\n    );\n}\n\nfunction shouldForceMobileVersion(posterSize?: { width: number; height: number }) {\n  if (!posterSize) return false;\n  return posterSize.width < MOBILE_VERSION_CONTROL_WIDTH;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\n\nimport type { MediaViewerOrigin, ThreadId } from '../../types';\nimport type { RealTouchEvent } from '../../util/captureEvents';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport { animateNumber, timingFunctions } from '../../util/animation';\nimport { IS_IOS, IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport {\n  captureEvents,\n  IOS_SCREEN_EDGE_THRESHOLD,\n  SWIPE_DIRECTION_THRESHOLD,\n  SWIPE_DIRECTION_TOLERANCE,\n} from '../../util/captureEvents';\nimport { clamp, isBetween, round } from '../../util/math';\nimport { debounce } from '../../util/schedulers';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useDebouncedCallback from '../../hooks/useDebouncedCallback';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport { useSignalRef } from '../../hooks/useSignalRef';\nimport { useFullscreenStatus } from '../../hooks/window/useFullscreen';\nimport useWindowSize from '../../hooks/window/useWindowSize';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport useZoomChange from './hooks/useZoomChangeSignal';\n\nimport MediaViewerContent from './MediaViewerContent';\n\nimport './MediaViewerSlides.scss';\n\nconst { easeOutCubic, easeOutQuart } = timingFunctions;\n\ntype OwnProps = {\n  item?: MediaViewerItem;\n  isLoadingMoreMedia?: boolean;\n  isSynced?: boolean;\n  isVideo?: boolean;\n  isGif?: boolean;\n  isPhoto?: boolean;\n  isOpen?: boolean;\n  chatId?: string;\n  threadId?: ThreadId;\n  avatarOwnerId?: string;\n  origin?: MediaViewerOrigin;\n  withAnimation?: boolean;\n  isHidden?: boolean;\n  hasFooter?: boolean;\n  getNextItem: (from: MediaViewerItem, direction: number) => MediaViewerItem | undefined;\n  selectItem: (item: MediaViewerItem) => void;\n  loadMoreItemsIfNeeded: (item: MediaViewerItem) => void;\n  onFooterClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  handleSponsoredClick: (isFromMedia?: boolean) => void;\n  onClose: () => void;\n};\n\nconst SWIPE_X_THRESHOLD = 50;\nconst SWIPE_Y_THRESHOLD = 50;\nconst SLIDES_GAP = IS_TOUCH_ENV ? 40 : 0;\nconst ANIMATION_DURATION = 350;\nconst DEBOUNCE_SELECT_MEDIA = 350;\nconst DEBOUNCE_SWIPE = 500;\nconst DEBOUNCE_ACTIVE = 800;\nconst DOUBLE_TAP_ZOOM = 3;\nconst CLICK_Y_THRESHOLD = 80;\nconst HEADER_HEIGHT = 60;\nconst MAX_ZOOM = 4;\nconst MIN_ZOOM = 1;\nlet cancelAnimation: Function | undefined;\nlet cancelZoomAnimation: Function | undefined;\n\ntype Transform = {\n  x: number;\n  y: number;\n  scale: number;\n};\n\nenum SwipeDirection {\n  Horizontal,\n  Vertical,\n}\n\nconst MediaViewerSlides: FC<OwnProps> = ({\n  item,\n  isVideo,\n  isGif,\n  isOpen,\n  withAnimation,\n  isHidden,\n  isLoadingMoreMedia,\n  isSynced,\n  loadMoreItemsIfNeeded,\n  getNextItem,\n  selectItem,\n  onClose,\n  onFooterClick,\n  handleSponsoredClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const activeSlideRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const leftSlideRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const rightSlideRef = useRef<HTMLDivElement>(null);\n  const lastTransformRef = useRef<Transform>({ x: 0, y: 0, scale: 1 });\n  const swipeDirectionRef = useRef<SwipeDirection | undefined>(undefined);\n  const initialContentRectRef = useRef<DOMRect | undefined>(undefined);\n  const isReleasedRef = useRef(false);\n  const [isActive, setIsActive] = useState(true);\n  const [getZoomChange] = useZoomChange();\n  const prevZoomChangeRef = useRef(getZoomChange());\n  const isFullscreen = useFullscreenStatus();\n  const [isMouseDown, setIsMouseDown] = useState(false);\n  const [getTransform, setTransform] = useSignal<Transform>({ x: 0, y: 0, scale: 1 });\n  const transformRef = useSignalRef(getTransform);\n  const [getActiveItem, setActiveItem] = useSignal<MediaViewerItem | undefined>(item);\n  const activeItemRef = useSignalRef(getActiveItem);\n  const isScaled = useDerivedState(() => getTransform().scale !== 1, [getTransform]);\n  const activeItem = useDerivedState(getActiveItem);\n  const { height: windowHeight, width: windowWidth, isResizing } = useWindowSize();\n  const [getControlsVisible, setControlsVisible, lockControls] = useControlsSignal();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n    shouldBeReplaced: true,\n  });\n\n  const selectItemDebounced = useDebouncedCallback(selectItem, [selectItem], DEBOUNCE_SELECT_MEDIA, true);\n  const clearSwipeDirectionDebounced = useDebouncedCallback(() => {\n    swipeDirectionRef.current = undefined;\n  }, [], DEBOUNCE_SWIPE, true);\n\n  const setIsActiveDebounced = useDebouncedCallback((value) => setIsActive(value), [], DEBOUNCE_ACTIVE, true);\n\n  const shouldCloseOnVideo = Boolean(isGif && !IS_IOS);\n  const clickXThreshold = IS_TOUCH_ENV ? 40 : windowWidth / 10;\n\n  const handleControlsVisibility = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (!IS_TOUCH_ENV) return;\n    const isFooter = windowHeight - e.pageY < CLICK_Y_THRESHOLD;\n    if (!isFooter && e.pageX < clickXThreshold) return;\n    if (!isFooter && e.pageX > windowWidth - clickXThreshold) return;\n    setControlsVisible(!getControlsVisible());\n  });\n\n  useTimeout(() => setControlsVisible(true), ANIMATION_DURATION);\n\n  useEffect(() => {\n    const { scale, x, y } = transformRef.current;\n    // Only update active media if slide is in default position\n    if (x === 0 && y === 0 && scale === 1) {\n      setActiveItem(item);\n    }\n  }, [item, setActiveItem, transformRef]);\n\n  useEffect(() => {\n    if (!isSynced || !activeItem || isLoadingMoreMedia) return;\n    loadMoreItemsIfNeeded(activeItem);\n  }, [activeItem, loadMoreItemsIfNeeded, isSynced, isLoadingMoreMedia]);\n\n  useLayoutEffect(() => {\n    const { x, y, scale } = getTransform();\n    lockControls(scale !== 1);\n    if (leftSlideRef.current) {\n      leftSlideRef.current.style.transform = getTransformStyle(-windowWidth + x - SLIDES_GAP);\n    }\n    if (activeSlideRef.current) {\n      activeSlideRef.current.style.transform = getTransformStyle(x, y, scale);\n    }\n    if (rightSlideRef.current) {\n      rightSlideRef.current.style.transform = getTransformStyle(windowWidth + x + SLIDES_GAP);\n    }\n  }, [getTransform, lockControls, windowWidth]);\n\n  useEffect(() => {\n    if (!containerRef.current || activeItemRef.current === undefined || isHidden || isFullscreen) {\n      return undefined;\n    }\n    let lastTransform = lastTransformRef.current;\n    const lastDragOffset = {\n      x: 0,\n      y: 0,\n    };\n    const lastZoomCenter = {\n      x: 0,\n      y: 0,\n    };\n    const panDelta = {\n      x: 0,\n      y: 0,\n    };\n    let lastGestureTime = Date.now();\n    let content: HTMLElement | null;\n    const setLastGestureTime = debounce(() => {\n      lastGestureTime = Date.now();\n    }, 500, false, true);\n\n    const changeSlide = (direction: number) => {\n      const cActiveItem = activeItemRef.current;\n      if (cActiveItem === undefined) return false;\n      const nextItem = getNextItem(cActiveItem, direction);\n      if (nextItem !== undefined) {\n        const offset = (windowWidth + SLIDES_GAP) * direction;\n        const transform = transformRef.current;\n        const x = transform.x + offset;\n        setIsActive(false);\n        setActiveItem(nextItem);\n        selectItemDebounced(nextItem);\n        setIsActiveDebounced(true);\n        lastTransform = { x: 0, y: 0, scale: 1 };\n        if (!withAnimation) {\n          setTransform(lastTransform);\n          return true;\n        }\n        cancelAnimation = animateNumber({\n          from: x,\n          to: 0,\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            y: 0,\n            x: value,\n            scale: 1,\n          }),\n        });\n        return true;\n      }\n      return false;\n    };\n\n    const changeSlideOnClick = (e: MouseEvent): [boolean, boolean] => {\n      const { scale } = transformRef.current;\n      if (scale !== 1) return [false, false];\n      if ((e.target as HTMLElement).closest('div.VideoPlayerControls')) {\n        return [false, false];\n      }\n      let direction = 0;\n      if (windowHeight - e.pageY < CLICK_Y_THRESHOLD) {\n        return [false, false];\n      }\n      if (e.pageX < clickXThreshold) {\n        direction = -1;\n      } else if (e.pageX > windowWidth - clickXThreshold) {\n        direction = 1;\n      }\n      const hasNextSlide = changeSlide(direction);\n      const isInThreshold = direction !== 0;\n      return [isInThreshold, hasNextSlide];\n    };\n\n    const handleKeyDown = (e: KeyboardEvent) => {\n      const { scale } = transformRef.current;\n      if (scale !== 1) return;\n      switch (e.key) {\n        case 'Left': // IE/Edge specific value\n        case 'ArrowLeft':\n          changeSlide(-1);\n          break;\n\n        case 'Right': // IE/Edge specific value\n        case 'ArrowRight':\n          changeSlide(1);\n          break;\n      }\n    };\n\n    const calculateOffsetBoundaries = (\n      { x, y, scale }: Transform,\n      offsetTop = 0,\n    ): [Transform, boolean, boolean] => {\n      const initialContentRect = initialContentRectRef.current;\n      if (!initialContentRect) return [{ x, y, scale }, true, true];\n      // Get current content boundaries\n      let inBoundsX = true;\n      let inBoundsY = true;\n\n      const centerX = (windowWidth - windowWidth * scale) / 2;\n      const centerY = (windowHeight - windowHeight * scale) / 2;\n\n      // If content is outside window we calculate offset boundaries\n      // based on initial content rect and current scale\n      const minOffsetX = Math.max(-initialContentRect.left * scale, centerX);\n      const maxOffsetX = windowWidth - initialContentRect.right * scale;\n      inBoundsX = isBetween(x, maxOffsetX, minOffsetX);\n      x = clamp(x, maxOffsetX, minOffsetX);\n\n      const minOffsetY = Math.max(-initialContentRect.top * scale + offsetTop, centerY);\n      const maxOffsetY = windowHeight - initialContentRect.bottom * scale;\n      inBoundsY = isBetween(y, maxOffsetY, minOffsetY);\n      y = clamp(y, maxOffsetY, minOffsetY);\n\n      return [{ x, y, scale }, inBoundsX, inBoundsY];\n    };\n\n    const onRelease = (e: MouseEvent | RealTouchEvent | WheelEvent) => {\n      // This allows to prevent onRelease triggered by debounced wheel event\n      // after onRelease was triggered manually in onDrag\n      if (isReleasedRef.current) {\n        isReleasedRef.current = false;\n        return;\n      }\n      if (e.type === 'mouseup') {\n        setIsMouseDown(false);\n      }\n      const transform = transformRef.current;\n      const { y, scale } = transform;\n      let x = transform.x;\n      const absX = Math.abs(x);\n      const absY = Math.abs(y);\n\n      clearSwipeDirectionDebounced();\n      setIsActiveDebounced(true);\n\n      // If scale is less than 1 we need to bounce back\n      if (scale < 1) {\n        lastTransform = { x: 0, y: 0, scale: 1 };\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [0, 0, 1],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: value[0],\n            y: value[1],\n            scale: value[2],\n          }),\n        });\n        return;\n      }\n      if (scale > 1) {\n        // Get current content boundaries\n        const s1 = Math.min(scale, MAX_ZOOM);\n        const scaleFactor = s1 / scale;\n\n        // Calculate new position based on the last zoom center to keep the zoom center\n        // at the same position when bouncing back from max zoom\n        let x1 = x * scaleFactor + (lastZoomCenter.x - scaleFactor * lastZoomCenter.x);\n        let y1 = y * scaleFactor + (lastZoomCenter.y - scaleFactor * lastZoomCenter.y);\n\n        // Arbitrary pan velocity coefficient\n        const k = 0.15;\n\n        // If scale didn't change, we need to add inertia to pan gesture\n        if (e.type !== 'wheel' && lastTransform.scale === scale) {\n          // Calculate user gesture velocity\n          const Vx = Math.abs(lastDragOffset.x) / (Date.now() - lastGestureTime);\n          const Vy = Math.abs(lastDragOffset.y) / (Date.now() - lastGestureTime);\n\n          // Add extra distance based on gesture velocity and last pan delta\n          x1 -= Math.abs(lastDragOffset.x) * Vx * k * panDelta.x;\n          y1 -= Math.abs(lastDragOffset.y) * Vy * k * panDelta.y;\n        }\n\n        [lastTransform] = calculateOffsetBoundaries({ x: x1, y: y1, scale: s1 }, HEADER_HEIGHT);\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [lastTransform.x, lastTransform.y, lastTransform.scale],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: value[0],\n            y: value[1],\n            scale: value[2],\n          }),\n        });\n        return;\n      }\n      lastTransform = {\n        x,\n        y,\n        scale,\n      };\n      if (absY >= SWIPE_Y_THRESHOLD) {\n        onClose();\n        return;\n      }\n      // Bounce back if vertical swipe is below threshold\n      if (absY > 0) {\n        cancelAnimation = animateNumber({\n          from: y,\n          to: 0,\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: 0,\n            y: value,\n            scale,\n          }),\n        });\n        return;\n      }\n      // Get horizontal swipe direction\n      const direction = x < 0 ? 1 : -1;\n      const cActiveItem = activeItemRef.current;\n      const nextItem = cActiveItem && getNextItem(cActiveItem, x < 0 ? 1 : -1);\n      // Get the direction of the last pan gesture.\n      // Could be different from the total horizontal swipe direction\n      // if user starts a swipe in one direction and then changes the direction\n      // we need to cancel slide transition\n      const dirX = panDelta.x < 0 ? -1 : 1;\n      if (nextItem !== undefined && absX >= SWIPE_X_THRESHOLD && direction === dirX) {\n        const offset = (windowWidth + SLIDES_GAP) * direction;\n        // If image is shifted by more than SWIPE_X_THRESHOLD,\n        // We shift everything by one screen width and then set new active message id\n        x += offset;\n        setActiveItem(nextItem);\n        selectItemDebounced(nextItem);\n      }\n      // Then we always return to the original position\n      cancelAnimation = animateNumber({\n        from: x,\n        to: 0,\n        duration: ANIMATION_DURATION,\n        timing: easeOutCubic,\n        onUpdate: (value) => setTransform({\n          y: 0,\n          x: value,\n          scale: scale ?? 1,\n        }),\n      });\n    };\n\n    const cleanup = captureEvents(containerRef.current, {\n      isNotPassive: true,\n      withNativeDrag: true,\n      excludedClosestSelector: '.MediaViewerFooter, .ZoomControls, .VideoPlayerControls',\n      minZoom: MIN_ZOOM,\n      maxZoom: MAX_ZOOM,\n      doubleTapZoom: DOUBLE_TAP_ZOOM,\n      withWheelDrag: true,\n      onCapture: (e) => {\n        if (checkIfControlTarget(e)) return;\n        const { x, y, scale } = transformRef.current;\n        if (e.type === 'mousedown') {\n          setIsMouseDown(true);\n          if (scale !== 1) {\n            e.preventDefault();\n            return;\n          }\n        }\n        lastGestureTime = Date.now();\n        if (x === 0 && y === 0 && scale === 1) {\n          if (!activeSlideRef.current) return;\n          content = activeSlideRef.current.querySelector('img, video');\n          if (!content) return;\n          // Store initial content rect, without transformations\n          initialContentRectRef.current = content.getBoundingClientRect();\n        }\n      },\n      onDrag: (event, captureEvent, {\n        dragOffsetX,\n        dragOffsetY,\n      }, cancelDrag) => {\n        if (isReleasedRef.current || checkIfControlTarget(event)) return;\n        // Avoid conflicts with swipe-to-back gestures\n        if (IS_IOS && captureEvent.type === 'touchstart') {\n          const { pageX } = (captureEvent as RealTouchEvent).touches[0];\n          if (pageX <= IOS_SCREEN_EDGE_THRESHOLD || pageX >= windowWidth - IOS_SCREEN_EDGE_THRESHOLD) {\n            return;\n          }\n        }\n        if (cancelAnimation) {\n          cancelAnimation();\n          cancelAnimation = undefined;\n        }\n        panDelta.x = lastDragOffset.x - dragOffsetX;\n        panDelta.y = lastDragOffset.y - dragOffsetY;\n        lastDragOffset.x = dragOffsetX;\n        lastDragOffset.y = dragOffsetY;\n        const absOffsetX = Math.abs(dragOffsetX);\n        const absOffsetY = Math.abs(dragOffsetY);\n        const { x, y, scale } = transformRef.current;\n\n        // If user is inactive but is still touching the screen\n        // we reset last gesture time\n        setLastGestureTime();\n\n        // If image is scaled we just need to pan it\n        if (scale !== 1) {\n          const x1 = lastTransform.x + dragOffsetX;\n          const y1 = lastTransform.y + dragOffsetY;\n          if (['wheel', 'mousemove'].includes(event.type)) {\n            const [transform, inBoundsX, inBoundsY] = calculateOffsetBoundaries({ x: x1, y: y1, scale }, HEADER_HEIGHT);\n            if (cancelDrag) cancelDrag(!inBoundsX, !inBoundsY);\n            setTransform(transform);\n            return;\n          }\n          if ('touches' in event && event.touches.length === 1) {\n            setTransform({\n              x: x1,\n              y: y1,\n              scale,\n            });\n          }\n          return;\n        }\n        if (event.type === 'mousemove') return;\n        if (swipeDirectionRef.current !== SwipeDirection.Vertical) {\n          // If user is swiping horizontally or horizontal shift is dominant\n          // we change only horizontal position\n          if (swipeDirectionRef.current === SwipeDirection.Horizontal\n            || Math.abs(x) > SWIPE_DIRECTION_THRESHOLD || absOffsetX / absOffsetY > SWIPE_DIRECTION_TOLERANCE) {\n            swipeDirectionRef.current = SwipeDirection.Horizontal;\n            setIsActive(false);\n            const limit = windowWidth + SLIDES_GAP;\n            const x1 = clamp(dragOffsetX, -limit, limit);\n            setTransform({\n              x: x1,\n              y: 0,\n              scale,\n            });\n            // We know that at this point onRelease will trigger slide change,\n            // We can trigger onRelease directly instead of waiting for the debounced callback\n            // to avoid a delay\n            if (event.type === 'wheel' && Math.abs(x1) > SWIPE_X_THRESHOLD * 2) {\n              onRelease(event);\n              isReleasedRef.current = true;\n            }\n            return;\n          }\n        }\n        // If vertical shift is dominant we change only vertical position\n        if (swipeDirectionRef.current === SwipeDirection.Vertical\n          || Math.abs(y) > SWIPE_DIRECTION_THRESHOLD || absOffsetY / absOffsetX > SWIPE_DIRECTION_TOLERANCE) {\n          swipeDirectionRef.current = SwipeDirection.Vertical;\n          const limit = windowHeight;\n          const y1 = clamp(dragOffsetY, -limit, limit);\n          setTransform({\n            x: 0,\n            y: y1,\n            scale,\n          });\n          if (event.type === 'wheel' && Math.abs(y1) > SWIPE_Y_THRESHOLD * 2) {\n            onRelease(event);\n            isReleasedRef.current = true;\n          }\n        }\n      },\n      onZoom: (e, {\n        zoom,\n        zoomFactor,\n        initialCenterX,\n        initialCenterY,\n        dragOffsetX,\n        dragOffsetY,\n        currentCenterX,\n        currentCenterY,\n      }) => {\n        if (cancelAnimation) cancelAnimation();\n        initialCenterX = initialCenterX || windowWidth / 2;\n        initialCenterY = initialCenterY || windowHeight / 2;\n        currentCenterX = currentCenterX || windowWidth / 2;\n        currentCenterY = currentCenterY || windowHeight / 2;\n\n        // Calculate current scale based on zoom factor and limits, add zoom margin for bounce back effect\n        const scale = zoom ?? clamp(lastTransform.scale * zoomFactor!, MIN_ZOOM * 0.5, MAX_ZOOM * 3);\n        const scaleFactor = scale / lastTransform.scale;\n        const offsetX = Math.abs(Math.min(lastTransform.x, 0));\n        const offsetY = Math.abs(Math.min(lastTransform.y, 0));\n\n        // Save last zoom center for bounce back effect\n        lastZoomCenter.x = currentCenterX;\n        lastZoomCenter.y = currentCenterY;\n\n        // Calculate new center relative to the shifted image\n        const scaledCenterX = offsetX + initialCenterX;\n        const scaledCenterY = offsetY + initialCenterY;\n\n        // Calculate how much we need to shift the image to keep the zoom center at the same position\n        const scaleOffsetX = (scaledCenterX - scaleFactor * scaledCenterX);\n        const scaleOffsetY = (scaledCenterY - scaleFactor * scaledCenterY);\n\n        const [transform] = calculateOffsetBoundaries({\n          x: lastTransform.x + scaleOffsetX + dragOffsetX,\n          y: lastTransform.y + scaleOffsetY + dragOffsetY,\n          scale,\n        });\n\n        setTransform(transform);\n      },\n      onClick(e) {\n        setIsMouseDown(false);\n        const [isInThreshold, hasNextSlide] = changeSlideOnClick(e as MouseEvent);\n        if (isInThreshold) {\n          e.preventDefault();\n          e.stopPropagation();\n          if (IS_TOUCH_ENV) return;\n          if (!hasNextSlide) onClose();\n          return;\n        }\n        if (lastTransform.scale !== 1 || IS_TOUCH_ENV) return;\n        if (shouldCloseOnVideo || !checkIfInsideSelector(e.target as HTMLElement, '.VideoPlayer')) {\n          onClose();\n        }\n      },\n      onDoubleClick(e, {\n        centerX,\n        centerY,\n      }) {\n        const [isInThreshold] = changeSlideOnClick(e as MouseEvent);\n        if (isInThreshold) {\n          e.preventDefault();\n          e.stopPropagation();\n          return;\n        }\n        if (!IS_TOUCH_ENV && e.type !== 'wheel') return;\n        const { x, y, scale } = transformRef.current;\n        // Calculate how much we need to shift the image to keep the zoom center at the same position\n        const scaleOffsetX = (centerX - DOUBLE_TAP_ZOOM * centerX);\n        const scaleOffsetY = (centerY - DOUBLE_TAP_ZOOM * centerY);\n        if (scale === 1) {\n          if (x !== 0 || y !== 0) return;\n          lastTransform = calculateOffsetBoundaries({\n            x: scaleOffsetX,\n            y: scaleOffsetY,\n            scale: DOUBLE_TAP_ZOOM,\n          })[0];\n        } else {\n          lastTransform = {\n            x: 0,\n            y: 0,\n            scale: 1,\n          };\n        }\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [lastTransform.x, lastTransform.y, lastTransform.scale],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => {\n            const transform = {\n              x: value[0],\n              y: value[1],\n              scale: value[2],\n            };\n            setTransform(transform);\n          },\n        });\n      },\n      onRelease,\n    });\n    document.addEventListener('keydown', handleKeyDown, false);\n    return () => {\n      cleanup();\n      document.removeEventListener('keydown', handleKeyDown, false);\n    };\n  },\n  [\n    activeItemRef,\n    clearSwipeDirectionDebounced,\n    clickXThreshold,\n    getNextItem,\n    isFullscreen,\n    isHidden,\n    onClose,\n    selectItemDebounced,\n    setActiveItem,\n    setIsActiveDebounced,\n    setTransform,\n    shouldCloseOnVideo,\n    transformRef,\n    windowHeight,\n    windowWidth,\n    withAnimation,\n  ]);\n\n  useEffect(() => {\n    const zoomChange = getZoomChange();\n    const hasZoomChanged = prevZoomChangeRef.current !== undefined\n      && prevZoomChangeRef.current !== zoomChange;\n    if (!containerRef.current || !hasZoomChanged || isHidden || isFullscreen) return;\n    prevZoomChangeRef.current = zoomChange;\n    const { scale } = transformRef.current;\n    const dir = zoomChange > 0 ? -1 : +1;\n    const minZoom = MIN_ZOOM * 0.6;\n    const maxZoom = MAX_ZOOM * 3;\n    let steps = 100;\n    let prevValue = 0;\n    if (scale <= minZoom && dir > 0) return;\n    if (scale >= maxZoom && dir < 0) return;\n    if (scale === 1 && dir > 0) steps = 20;\n    if (cancelZoomAnimation) cancelZoomAnimation();\n    cancelZoomAnimation = animateNumber({\n      from: dir,\n      to: dir * steps,\n      duration: ANIMATION_DURATION,\n      timing: easeOutQuart,\n      onUpdate: (value) => {\n        if (!containerRef.current) return;\n        const delta = round(value - prevValue, 2);\n        prevValue = value;\n        // To reuse existing logic we trigger wheel event for zoom buttons\n        const wheelEvent = new WheelEvent('wheel', {\n          deltaY: delta,\n          ctrlKey: true,\n        });\n        containerRef.current.dispatchEvent(wheelEvent);\n      },\n    });\n  }, [getZoomChange, isHidden, isFullscreen, transformRef]);\n\n  const [prevItem, nextItem] = useMemo(() => {\n    if (activeItem === undefined) return [undefined, undefined];\n    return [getNextItem(activeItem, -1), getNextItem(activeItem, 1)];\n  }, [activeItem, getNextItem]);\n\n  if (activeItem === undefined) return undefined;\n\n  const hasPrev = prevItem !== undefined;\n  const hasNext = nextItem !== undefined;\n  const isMoving = isMouseDown && isScaled;\n\n  return (\n    <div className=\"MediaViewerSlides\" ref={containerRef}>\n      <div className=\"MediaViewerSlide\" ref={leftSlideRef}>\n        {hasPrev && !isScaled && !isResizing && (\n          <MediaViewerContent\n            withAnimation={withAnimation}\n            isMoving={isMoving}\n            item={prevItem}\n            onClose={onClose}\n            onFooterClick={onFooterClick}\n            handleSponsoredClick={handleSponsoredClick}\n          />\n        )}\n      </div>\n      <div\n        className={buildClassName(\n          'MediaViewerSlide',\n          'MediaViewerSlide--active',\n          isMoving && 'MediaViewerSlide--moving',\n        )}\n        onClick={handleControlsVisibility}\n        ref={activeSlideRef}\n      >\n        <MediaViewerContent\n          item={activeItem}\n          withAnimation={withAnimation}\n          isActive={isActive}\n          isMoving={isMoving}\n          onClose={onClose}\n          onFooterClick={onFooterClick}\n          handleSponsoredClick={handleSponsoredClick}\n        />\n      </div>\n      <div className=\"MediaViewerSlide\" ref={rightSlideRef}>\n        {hasNext && !isScaled && !isResizing && (\n          <MediaViewerContent\n            withAnimation={withAnimation}\n            isMoving={isMoving}\n            item={nextItem}\n            onClose={onClose}\n            onFooterClick={onFooterClick}\n            handleSponsoredClick={handleSponsoredClick}\n          />\n        )}\n      </div>\n      {hasPrev && !isScaled && !IS_TOUCH_ENV && (\n        <button\n          type=\"button\"\n          className={`navigation prev ${isVideo && !isGif && 'inline'}`}\n          aria-label={lang('AccDescrPrevious')}\n          dir={lang.isRtl ? 'rtl' : undefined}\n        />\n      )}\n      {hasNext && !isScaled && !IS_TOUCH_ENV && (\n        <button\n          type=\"button\"\n          className={`navigation next ${isVideo && !isGif && 'inline'}`}\n          aria-label={lang('Next')}\n          dir={lang.isRtl ? 'rtl' : undefined}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaViewerSlides);\n\nfunction getTransformStyle(x = 0, y = 0, scale = 1) {\n  return `translate3d(${x.toFixed(3)}px, ${y.toFixed(3)}px, 0px) scale(${scale.toFixed(3)})`;\n}\n\nfunction checkIfInsideSelector(element: HTMLElement, selector: string) {\n  if (!element) return false;\n  if (element.matches(selector)) return true;\n  return Boolean(element.closest(selector));\n}\n\nfunction checkIfControlTarget(e: TouchEvent | MouseEvent) {\n  const target = e.target as HTMLElement;\n  if (checkIfInsideSelector(target, '.VideoPlayerControls')) {\n    if (checkIfInsideSelector(\n      target,\n      '.play, .fullscreen, .volume, .volume-slider, .playback-rate, .playback-rate-menu, .SeekLine',\n    )) {\n      return true;\n    }\n    e.preventDefault();\n    return true;\n  }\n  return false;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiPeer } from '../../api/types';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport {\n  isChatChannel, isChatGroup, isUserId,\n} from '../../global/helpers';\nimport { getPeerTitle } from '../../global/helpers/peers';\nimport {\n  selectSender,\n} from '../../global/selectors';\nimport { formatMediaDateTime } from '../../util/dates/dateFormat';\nimport renderText from '../common/helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\n\nimport './SenderInfo.scss';\n\ntype OwnProps = {\n  item?: MediaViewerItem;\n};\n\ntype StateProps = {\n  owner?: ApiPeer;\n};\n\nconst BULLET = '\\u2022';\nconst ANIMATION_DURATION = 350;\n\nconst SenderInfo: FC<OwnProps & StateProps> = ({\n  owner,\n  item,\n}) => {\n  const {\n    closeMediaViewer,\n    focusMessage,\n    toggleChatInfo,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const handleFocusMessage = useLastCallback(() => {\n    closeMediaViewer();\n\n    if (item?.type !== 'message') return;\n\n    const message = item.message;\n\n    if (isMobile) {\n      setTimeout(() => {\n        toggleChatInfo({ force: false }, { forceSyncOnIOs: true });\n        focusMessage({ chatId: message.chatId, messageId: message.id });\n      }, ANIMATION_DURATION);\n    } else {\n      focusMessage({ chatId: message.chatId, messageId: message.id });\n    }\n  });\n\n  const lang = useOldLang();\n\n  const subtitle = useMemo(() => {\n    if (!item || item.type === 'standalone') return undefined;\n\n    const avatarOwner = item.type === 'avatar' ? item.avatarOwner : undefined;\n    const profilePhotos = item.type === 'avatar' ? item.profilePhotos : undefined;\n    const avatar = profilePhotos?.photos[item.mediaIndex!];\n    const isFallbackAvatar = avatar?.id === profilePhotos?.fallbackPhoto?.id;\n    const isPersonalAvatar = avatar?.id === profilePhotos?.personalPhoto?.id;\n    const date = item.type === 'message' ? item.message.date : avatar?.date;\n    if (!date) return undefined;\n\n    const formattedDate = formatMediaDateTime(lang, date * 1000, true);\n    const count = profilePhotos?.count\n      && (profilePhotos.count + (profilePhotos?.fallbackPhoto ? 1 : 0));\n    const currentIndex = item.mediaIndex! + 1 + (profilePhotos?.personalPhoto ? -1 : 0);\n    const countText = count && lang('Of', [currentIndex, count]);\n\n    const parts: string[] = [];\n    if (avatar) {\n      const chat = !isUserId(avatarOwner!.id) ? avatarOwner as ApiChat : undefined;\n      const isChannel = chat && isChatChannel(chat);\n      const isGroup = chat && isChatGroup(chat);\n      parts.push(lang(\n        isPersonalAvatar ? 'lng_mediaview_profile_photo_by_you'\n          : isFallbackAvatar ? 'lng_mediaview_profile_public_photo'\n            : isChannel ? 'lng_mediaview_channel_photo'\n              : isGroup ? 'lng_mediaview_group_photo' : 'lng_mediaview_profile_photo',\n      ));\n    }\n\n    if (countText && !isPersonalAvatar && !isFallbackAvatar) {\n      parts.push(countText);\n    }\n\n    parts.push(formattedDate);\n\n    return parts.join(` ${BULLET} `);\n  }, [item, lang]);\n\n  if (!owner) {\n    return undefined;\n  }\n\n  const senderTitle = getPeerTitle(lang, owner);\n\n  return (\n    <div className=\"SenderInfo\" onClick={handleFocusMessage}>\n      <Avatar key={owner.id} size=\"medium\" peer={owner} />\n      <div className=\"meta\">\n        <div className=\"title\" dir=\"auto\">\n          {senderTitle && renderText(senderTitle)}\n        </div>\n        <div className=\"date\" dir=\"auto\">\n          {subtitle}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withGlobal<OwnProps>(\n  (global, { item }): StateProps => {\n    const message = item?.type === 'message' ? item.message : undefined;\n    const messageSender = message && selectSender(global, message);\n\n    const owner = item?.type === 'avatar' ? item.avatarOwner : messageSender;\n\n    return {\n      owner,\n    };\n  },\n)(SenderInfo);\n","import React, {\n  beginHeavyAnimation,\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat,\n  ApiMessage,\n  ApiPeer,\n  ApiPeerPhotos,\n  ApiPhoto,\n  ApiSponsoredMessage,\n} from '../../api/types';\nimport { type MediaViewerMedia, MediaViewerOrigin, type ThreadId } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getChatMediaMessageIds, getMessagePaidMedia, isChatAdmin, isUserId,\n} from '../../global/helpers';\nimport {\n  selectChatMessage,\n  selectChatMessages,\n  selectChatScheduledMessages,\n  selectCurrentChatMediaSearch,\n  selectCurrentSharedMediaSearch,\n  selectIsChatWithSelf,\n  selectListedIds,\n  selectOutlyingListByMessageId,\n  selectPeer,\n  selectPeerPhotos,\n  selectPerformanceSettingsValue,\n  selectScheduledMessage, selectSponsoredMessage,\n  selectTabState,\n} from '../../global/selectors';\nimport { stopCurrentAudio } from '../../util/audioPlayer';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport { MEDIA_VIEWER_MEDIA_QUERY } from '../common/helpers/mediaDimensions';\nimport { renderMessageText } from '../common/helpers/renderMessageText';\nimport getViewableMedia, { getMediaViewerItem, type MediaViewerItem } from './helpers/getViewableMedia';\nimport { animateClosing, animateOpening } from './helpers/ghostAnimation';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useElectronDrag from '../../hooks/useElectronDrag';\nimport useFlag from '../../hooks/useFlag';\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport { exitPictureInPictureIfNeeded, usePictureInPictureSignal } from '../../hooks/usePictureInPicture';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport { dispatchPriorityPlaybackEvent } from '../../hooks/usePriorityPlaybackCheck';\nimport { useMediaProps } from './hooks/useMediaProps';\n\nimport Icon from '../common/icons/Icon';\nimport ReportAvatarModal from '../common/ReportAvatarModal';\nimport Button from '../ui/Button';\nimport ShowTransition from '../ui/ShowTransition';\nimport Transition from '../ui/Transition';\nimport MediaViewerActions from './MediaViewerActions';\nimport MediaViewerSlides from './MediaViewerSlides';\nimport SenderInfo from './SenderInfo';\n\nimport './MediaViewer.scss';\n\ntype StateProps = {\n  chatId?: string;\n  threadId?: ThreadId;\n  messageId?: number;\n  message?: ApiMessage;\n  collectedMessageIds?: number[];\n  isChatWithSelf?: boolean;\n  canUpdateMedia?: boolean;\n  origin?: MediaViewerOrigin;\n  avatar?: ApiPhoto;\n  avatarOwner?: ApiPeer;\n  profilePhotos?: ApiPeerPhotos;\n  chatMessages?: Record<number, ApiMessage>;\n  sponsoredMessage?: ApiSponsoredMessage;\n  standaloneMedia?: MediaViewerMedia[];\n  mediaIndex?: number;\n  isHidden?: boolean;\n  withAnimation?: boolean;\n  shouldSkipHistoryAnimations?: boolean;\n  withDynamicLoading?: boolean;\n  isLoadingMoreMedia?: boolean;\n  isSynced?: boolean;\n};\n\nconst ANIMATION_DURATION = 250;\nconst AVATAR_LOAD_TRIGGER = 4;\n\nconst MediaViewer = ({\n  chatId,\n  threadId,\n  messageId,\n  message,\n  collectedMessageIds,\n  isChatWithSelf,\n  canUpdateMedia,\n  origin,\n  avatar,\n  avatarOwner,\n  profilePhotos,\n  chatMessages,\n  sponsoredMessage,\n  standaloneMedia,\n  mediaIndex,\n  withAnimation,\n  isHidden,\n  shouldSkipHistoryAnimations,\n  withDynamicLoading,\n  isLoadingMoreMedia,\n  isSynced,\n}: StateProps) => {\n  const {\n    openMediaViewer,\n    closeMediaViewer,\n    openForwardMenu,\n    focusMessage,\n    toggleChatInfo,\n    searchChatMediaMessages,\n    loadMoreProfilePhotos,\n    clickSponsored,\n    openUrl,\n  } = getActions();\n\n  const isOpen = Boolean(avatarOwner || message || standaloneMedia || sponsoredMessage);\n  const { isMobile } = useAppLayout();\n\n  /* Animation */\n  const animationKey = useRef<number>();\n  const senderId = message?.senderId || avatarOwner?.id || message?.chatId;\n  const prevSenderId = usePreviousDeprecated<string | undefined>(senderId);\n  const headerAnimation = withAnimation ? 'slideFade' : 'none';\n  const isGhostAnimation = Boolean(withAnimation && !shouldSkipHistoryAnimations);\n\n  /* Controls */\n  const [isReportAvatarModalOpen, openReportAvatarModal, closeReportAvatarModal] = useFlag();\n\n  const currentItem = getMediaViewerItem({\n    message, avatarOwner, standaloneMedia, profilePhotos, mediaIndex, sponsoredMessage,\n  });\n  const { media, isSingle } = getViewableMedia(currentItem) || {};\n\n  const {\n    isVideo,\n    isPhoto,\n    bestImageData,\n    bestData,\n    dimensions,\n    isGif,\n    isFromSharedMedia,\n  } = useMediaProps({\n    media, isAvatar: Boolean(avatarOwner), origin, delay: isGhostAnimation && ANIMATION_DURATION,\n  });\n\n  const canReportAvatar = (() => {\n    if (isChatWithSelf) return false;\n    if (currentItem?.type !== 'avatar' || !avatarOwner) return false;\n    const info = currentItem.profilePhotos;\n    if (media === info.personalPhoto) return false;\n    return true;\n  })();\n  const isVisible = !isHidden && isOpen;\n\n  const messageMediaIds = useMemo(() => {\n    return withDynamicLoading\n      ? collectedMessageIds\n      : getChatMediaMessageIds(chatMessages || {}, collectedMessageIds || [], isFromSharedMedia);\n  }, [chatMessages, collectedMessageIds, isFromSharedMedia, withDynamicLoading]);\n\n  if (isOpen && (!prevSenderId || prevSenderId !== senderId || animationKey.current === undefined)) {\n    animationKey.current = isSingle ? 0 : (messageId || mediaIndex);\n  }\n\n  const [getIsPictureInPicture] = usePictureInPictureSignal();\n\n  useEffect(() => {\n    if (!isOpen || getIsPictureInPicture()) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n    const stopPriorityPlayback = dispatchPriorityPlaybackEvent();\n\n    return () => {\n      stopPriorityPlayback();\n      enableDirectTextInput();\n    };\n  }, [isOpen, getIsPictureInPicture]);\n\n  useEffect(() => {\n    if (isVisible) {\n      exitPictureInPictureIfNeeded();\n    }\n  }, [isVisible]);\n\n  useEffect(() => {\n    if (isMobile) {\n      requestMutation(() => {\n        document.body.classList.toggle('is-media-viewer-open', isOpen);\n      });\n    }\n  }, [isMobile, isOpen]);\n\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  useElectronDrag(headerRef);\n\n  const forceUpdate = useForceUpdate();\n  useEffect(() => {\n    const mql = window.matchMedia(MEDIA_VIEWER_MEDIA_QUERY);\n    mql.addEventListener('change', forceUpdate);\n\n    return () => {\n      mql.removeEventListener('change', forceUpdate);\n    };\n  }, [forceUpdate]);\n\n  const prevMessage = usePreviousDeprecated<ApiMessage | undefined>(message);\n  const prevIsHidden = usePreviousDeprecated<boolean | undefined>(isHidden);\n  const prevOrigin = usePreviousDeprecated(origin);\n  const prevItem = usePreviousDeprecated(currentItem);\n  const prevBestImageData = usePreviousDeprecated(bestImageData);\n  const textParts = message ? renderMessageText({ message, forcePlayback: true, isForMediaViewer: true }) : undefined;\n  const hasFooter = Boolean(textParts);\n  const shouldAnimateOpening = prevIsHidden && prevItem !== currentItem;\n\n  useEffect(() => {\n    if (isGhostAnimation && isOpen && (shouldAnimateOpening || !prevItem)) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(hasFooter, origin!, bestImageData!, dimensions!, isVideo, message, mediaIndex);\n    }\n\n    if (isGhostAnimation && !isOpen && prevItem) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(prevOrigin!, prevBestImageData!, prevMessage, prevItem?.mediaIndex);\n    }\n  }, [\n    bestImageData, dimensions, hasFooter, isGhostAnimation, isOpen, isVideo, message, origin,\n    prevBestImageData, prevItem, prevMessage, prevOrigin, shouldAnimateOpening, mediaIndex,\n  ]);\n\n  const handleClose = useLastCallback(() => closeMediaViewer());\n\n  const handleFooterClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (e.target instanceof HTMLElement && e.target.closest('a')) return; // Prevent closing on timestamp click\n\n    handleClose();\n\n    if (!chatId || !messageId) return;\n\n    if (isMobile) {\n      setTimeout(() => {\n        toggleChatInfo({ force: false }, { forceSyncOnIOs: true });\n        focusMessage({ chatId, threadId, messageId });\n      }, ANIMATION_DURATION);\n    } else {\n      focusMessage({ chatId, threadId, messageId });\n    }\n  });\n\n  const handleSponsoredClick = useLastCallback((isFromMedia?: boolean) => {\n    if (!sponsoredMessage || !chatId) return;\n\n    clickSponsored({ isMedia: isFromMedia, isFullscreen: true, randomId: sponsoredMessage.randomId });\n    openUrl({ url: sponsoredMessage!.url });\n    closeMediaViewer();\n  });\n\n  const handleForward = useLastCallback(() => {\n    openForwardMenu({\n      fromChatId: chatId!,\n      messageIds: [messageId!],\n    });\n  });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(() => {\n    handleClose();\n  }) : undefined), [handleClose, isOpen]);\n\n  useEffect(() => {\n    if (isVideo && !isGif) {\n      stopCurrentAudio();\n    }\n  }, [isGif, isVideo]);\n\n  const loadMoreItemsIfNeeded = useLastCallback((item?: MediaViewerItem) => {\n    if (!item || isLoadingMoreMedia) return;\n\n    if (item.type === 'avatar') {\n      const isNearEnd = item.mediaIndex >= item.profilePhotos.photos.length - AVATAR_LOAD_TRIGGER;\n      if (!isNearEnd) return;\n      loadMoreProfilePhotos({ peerId: item.avatarOwner.id });\n    }\n\n    if (item.type === 'message' && withDynamicLoading) {\n      searchChatMediaMessages({ chatId, threadId, currentMediaMessageId: item.message.id });\n    }\n  });\n\n  const getNextItem = useLastCallback((from: MediaViewerItem, direction: number): MediaViewerItem | undefined => {\n    if (direction === 0 || isSingle) return undefined;\n\n    if (from.type === 'standalone') {\n      const { media: fromMedia, mediaIndex: fromMediaIndex } = from;\n      const nextIndex = fromMediaIndex + direction;\n      if (nextIndex >= 0 && nextIndex < fromMedia.length) {\n        return { type: 'standalone', media: fromMedia, mediaIndex: nextIndex };\n      }\n\n      return undefined;\n    }\n\n    if (from.type === 'avatar') {\n      const { avatarOwner: fromAvatarOwner, profilePhotos: fromProfilePhotos, mediaIndex: fromMediaIndex } = from;\n      const nextIndex = fromMediaIndex + direction;\n      if (nextIndex >= 0 && fromProfilePhotos && nextIndex < fromProfilePhotos.photos.length) {\n        return {\n          type: 'avatar',\n          avatarOwner: fromAvatarOwner,\n          profilePhotos: fromProfilePhotos,\n          mediaIndex: nextIndex,\n        };\n      }\n\n      return undefined;\n    }\n\n    if (from.type === 'sponsoredMessage') {\n      const { message: fromSponsoredMessage, mediaIndex: fromSponsoredMessageIndex } = from;\n      const nextIndex = fromSponsoredMessageIndex! + direction;\n      if (nextIndex >= 0 && fromSponsoredMessage) {\n        return { type: 'sponsoredMessage', message: fromSponsoredMessage, mediaIndex: nextIndex };\n      }\n\n      return undefined;\n    }\n\n    const { message: fromMessage, mediaIndex: fromMediaIndex } = from;\n\n    const paidMedia = getMessagePaidMedia(fromMessage);\n    if (paidMedia) {\n      const nextIndex = fromMediaIndex! + direction;\n\n      if (nextIndex >= 0 && nextIndex < paidMedia.extendedMedia.length) {\n        return { type: 'message', message: fromMessage, mediaIndex: nextIndex };\n      }\n    }\n\n    const index = messageMediaIds?.indexOf(fromMessage.id);\n    if (index === undefined) return undefined;\n    const nextIndex = index + direction;\n    const nextMessageId = messageMediaIds![nextIndex];\n    const nextMessage = chatMessages?.[nextMessageId];\n    if (nextMessage) {\n      return { type: 'message', message: nextMessage };\n    }\n\n    return undefined;\n  });\n\n  const openMediaViewerItem = useLastCallback((item?: MediaViewerItem) => {\n    if (!item) {\n      handleClose();\n      return;\n    }\n\n    const itemChatId = item.type === 'avatar'\n      ? item.avatarOwner.id : item.type === 'message'\n        ? item.message.chatId : undefined;\n    const itemMessageId = item.type === 'message' ? item.message.id : undefined;\n    const itemStandaloneMedia = item.type === 'standalone' ? item.media : undefined;\n\n    openMediaViewer({\n      origin: origin!,\n      chatId: itemChatId,\n      messageId: itemMessageId,\n      standaloneMedia: itemStandaloneMedia,\n      mediaIndex: item.mediaIndex,\n      isAvatarView: item.type === 'avatar',\n      withDynamicLoading,\n    }, {\n      forceOnHeavyAnimation: true,\n    });\n  });\n\n  const handleBeforeDelete = useLastCallback(() => {\n    const mediaCount = profilePhotos?.photos.length\n      || standaloneMedia?.length || messageMediaIds?.length || 0;\n    if (mediaCount <= 1 || !currentItem) {\n      handleClose();\n      return;\n    }\n    // Before deleting, select previous media\n    const prevMedia = getNextItem(currentItem, -1);\n    if (prevMedia) {\n      openMediaViewerItem(prevMedia);\n      return;\n    }\n\n    if ((currentItem.type === 'avatar' && isUserId(currentItem.avatarOwner.id)) || currentItem.type === 'standalone') {\n      // Keep current item, it'll update when indexes shift\n      return;\n    }\n\n    handleClose();\n  });\n\n  const lang = useOldLang();\n\n  return (\n    <ShowTransition\n      id=\"MediaViewer\"\n      isOpen={isOpen}\n      isHidden={isHidden}\n      shouldAnimateFirstRender\n      noCloseTransition={shouldSkipHistoryAnimations}\n    >\n      <div className=\"media-viewer-head\" dir={lang.isRtl ? 'rtl' : undefined} ref={headerRef}>\n        {isMobile && (\n          <Button\n            className=\"media-viewer-close\"\n            round\n            size=\"smaller\"\n            color=\"translucent-white\"\n            ariaLabel={lang('Close')}\n            onClick={handleClose}\n          >\n            <Icon name=\"close\" />\n          </Button>\n        )}\n        <Transition activeKey={animationKey.current!} name={headerAnimation}>\n          <SenderInfo\n            key={media?.id}\n            item={currentItem}\n          />\n        </Transition>\n        <MediaViewerActions\n          mediaData={bestData}\n          isVideo={isVideo}\n          item={currentItem}\n          canUpdateMedia={canUpdateMedia}\n          canReportAvatar={canReportAvatar}\n          onBeforeDelete={handleBeforeDelete}\n          onReportAvatar={openReportAvatarModal}\n          onCloseMediaViewer={handleClose}\n          onForward={handleForward}\n        />\n        <ReportAvatarModal\n          isOpen={isReportAvatarModalOpen}\n          onClose={closeReportAvatarModal}\n          photo={avatar}\n          peerId={avatarOwner?.id}\n        />\n      </div>\n      <MediaViewerSlides\n        item={currentItem}\n        loadMoreItemsIfNeeded={loadMoreItemsIfNeeded}\n        isLoadingMoreMedia={isLoadingMoreMedia}\n        isSynced={isSynced}\n        getNextItem={getNextItem}\n        chatId={chatId}\n        isPhoto={isPhoto}\n        isGif={isGif}\n        threadId={threadId}\n        avatarOwnerId={avatarOwner?.id}\n        origin={origin}\n        isOpen={isOpen}\n        hasFooter={hasFooter}\n        isVideo={isVideo}\n        withAnimation={withAnimation}\n        onClose={handleClose}\n        selectItem={openMediaViewerItem}\n        isHidden={isHidden}\n        onFooterClick={handleFooterClick}\n        handleSponsoredClick={handleSponsoredClick}\n      />\n    </ShowTransition>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { mediaViewer, shouldSkipHistoryAnimations } = selectTabState(global);\n    const {\n      chatId,\n      threadId,\n      messageId,\n      origin,\n      isHidden,\n      withDynamicLoading,\n      standaloneMedia,\n      mediaIndex,\n      isAvatarView,\n      isSponsoredMessage,\n    } = mediaViewer;\n    const withAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n    const { currentUserId, isSynced } = global;\n    const isChatWithSelf = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n\n    if (isAvatarView) {\n      const peer = selectPeer(global, chatId!);\n      let canUpdateMedia = false;\n      if (peer) {\n        canUpdateMedia = isUserId(peer.id) ? peer.id === currentUserId : isChatAdmin(peer as ApiChat);\n      }\n\n      const profilePhotos = selectPeerPhotos(global, chatId!);\n\n      return {\n        profilePhotos,\n        avatar: profilePhotos?.photos[mediaIndex!],\n        avatarOwner: peer,\n        isLoadingMoreMedia: profilePhotos?.isLoading,\n        isChatWithSelf,\n        canUpdateMedia,\n        withAnimation,\n        origin,\n        shouldSkipHistoryAnimations,\n        isHidden,\n        standaloneMedia,\n        mediaIndex,\n        isSynced,\n      };\n    }\n\n    let message: ApiMessage | undefined;\n    if (chatId && messageId) {\n      if (origin && [MediaViewerOrigin.ScheduledAlbum, MediaViewerOrigin.ScheduledInline].includes(origin)) {\n        message = selectScheduledMessage(global, chatId, messageId);\n      } else {\n        message = selectChatMessage(global, chatId, messageId);\n      }\n    }\n\n    let sponsoredMessage: ApiSponsoredMessage | undefined;\n    if (isSponsoredMessage && chatId) {\n      if (origin === MediaViewerOrigin.SponsoredMessage) {\n        sponsoredMessage = selectSponsoredMessage(global, chatId);\n      }\n    }\n\n    let chatMessages: Record<number, ApiMessage> | undefined;\n\n    if (chatId) {\n      if (origin && [MediaViewerOrigin.ScheduledAlbum, MediaViewerOrigin.ScheduledInline].includes(origin)) {\n        chatMessages = selectChatScheduledMessages(global, chatId);\n      } else {\n        chatMessages = selectChatMessages(global, chatId);\n      }\n    }\n\n    let isLoadingMoreMedia = false;\n    const isOriginInline = origin === MediaViewerOrigin.Inline;\n    const isOriginAlbum = origin === MediaViewerOrigin.Album;\n    let collectedMessageIds: number[] | undefined;\n\n    if (chatId && threadId && messageId) {\n      if (withDynamicLoading && (isOriginInline || isOriginAlbum)) {\n        const currentSearch = selectCurrentChatMediaSearch(global);\n        isLoadingMoreMedia = Boolean(currentSearch?.isLoading);\n        const { foundIds } = (currentSearch?.currentSegment) || {};\n        collectedMessageIds = foundIds;\n      } else if (origin === MediaViewerOrigin.SharedMedia) {\n        const currentSearch = selectCurrentSharedMediaSearch(global);\n        const { foundIds } = (currentSearch && currentSearch.resultsByType && currentSearch.resultsByType.media) || {};\n        collectedMessageIds = foundIds;\n      } else if (isOriginInline || isOriginAlbum) {\n        const outlyingList = selectOutlyingListByMessageId(global, chatId, threadId, messageId);\n        collectedMessageIds = outlyingList || selectListedIds(global, chatId, threadId);\n      }\n    }\n\n    return {\n      chatId,\n      threadId,\n      messageId,\n      isChatWithSelf,\n      origin,\n      message,\n      chatMessages,\n      sponsoredMessage,\n      collectedMessageIds,\n      withAnimation,\n      isHidden,\n      shouldSkipHistoryAnimations,\n      withDynamicLoading,\n      standaloneMedia,\n      mediaIndex,\n      isLoadingMoreMedia,\n      isSynced,\n    };\n  },\n)(MediaViewer));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"bu_hGbaa\",\"fullSize\":\"W9A8SEMl\",\"backdrop\":\"OFh6u50Q\",\"captionBackdrop\":\"Jd1DYS6Y\",\"backdropNonInteractive\":\"xe67dhtF\",\"close\":\"Mye8Dwxa\",\"wrapper\":\"gLHHo5k8\",\"slideAnimation\":\"GJVwqV9e\",\"slideAnimationToActive\":\"_Yn4SWUB\",\"content\":\"hGCH03qc\",\"slideAnimationFromActive\":\"ZecqXqKy\",\"storyHeader\":\"e7HHuS1g\",\"composer\":\"FXineBYO\",\"caption\":\"RKedwa0I\",\"captionGradient\":\"sHNAfxzf\",\"media\":\"PVZ8TOWS\",\"mediaPreview\":\"lQfkulvp\",\"contentInner\":\"Wi0DXPH2\",\"name\":\"Ka1CGfzq\",\"slide\":\"urTtSsk9\",\"mobileSlide\":\"AjXOHOgE\",\"slidePreview\":\"Sef28wEh\",\"activeSlide\":\"uAlXNXJN\",\"slideInner\":\"g8ypsnnC\",\"mediaWrapper\":\"YiuvOPgT\",\"forward\":\"pGKsAszF\",\"storyIndicators\":\"jGDd2sza\",\"sender\":\"eMYhXF_X\",\"senderInfoTransition\":\"PXnfXZur\",\"senderInfo\":\"WpyVfrsc\",\"senderMeta\":\"jmKI_lhC\",\"senderName\":\"H1uod43o\",\"storyMetaRow\":\"zimpR8Hz\",\"storyMeta\":\"hGTnZuar\",\"closeButton\":\"WlLsjJ2Z\",\"actions\":\"GrsJNw3y\",\"active\":\"q756IpZB\",\"visibilityButton\":\"prxptFFf\",\"visibilityButtonSelf\":\"_MVsZpgB\",\"button\":\"TkphaPyQ\",\"buttonMenu\":\"K0_xAdzf\",\"captionInner\":\"D_5mWNmi\",\"captionContent\":\"ilyTRZtw\",\"captionText\":\"hmFA5qb1\",\"hasOverflow\":\"e1gyTmKe\",\"expanded\":\"HIMnUViv\",\"animate\":\"CvnxnCxN\",\"withShowMore\":\"Vq8pl_kQ\",\"captionShowMore\":\"bM5rlQtM\",\"navigate\":\"nZ30pf4g\",\"prev\":\"SXpRZiax\",\"next\":\"twOBFwUE\",\"modal\":\"nLPOogqS\",\"thumbnail\":\"MnNC7VHS\",\"ghost\":\"fME2l_yv\",\"ghost2\":\"TYicp2_K\",\"ghostImage\":\"HjoURJRK\",\"forwardHeader\":\"JJFtefb9\",\"clickable\":\"BsqMBS2I\",\"headerTitle\":\"G8OgmMDJ\",\"forwardInfo\":\"_M8CgT7s\",\"fromPeer\":\"nJr8QgYX\"};","import type { IDimensions } from '../../../types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { ANIMATION_END_DELAY } from '../../../config';\nimport fastBlur from '../../../lib/fastBlur';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getPeerStoryHtmlId } from '../../../global/helpers';\nimport { applyStyles } from '../../../util/animation';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport stopEvent from '../../../util/stopEvent';\nimport windowSize from '../../../util/windowSize';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport storyRibbonStyles from '../StoryRibbon.module.scss';\nimport styles from '../StoryViewer.module.scss';\n\nconst ANIMATION_DURATION = 200;\nconst OFFSET_BOTTOM = 3.5 * REM;\nconst MOBILE_OFFSET = 0.5 * REM;\nconst MOBILE_WIDTH = 600;\n\nexport function animateOpening(\n  userId: string,\n  origin: StoryViewerOrigin,\n  thumb: string,\n  bestImageData: string | undefined,\n  dimensions: IDimensions,\n) {\n  const { mediaEl: fromImage } = getNodes(origin, userId);\n  if (!fromImage) {\n    return;\n  }\n  const { width: windowWidth, height: windowHeight } = windowSize.get();\n  let { width: toWidth, height: toHeight } = dimensions;\n\n  const isMobile = windowWidth <= MOBILE_WIDTH;\n\n  if (isMobile) {\n    toWidth = windowWidth - 2 * MOBILE_OFFSET;\n    toHeight = windowHeight - OFFSET_BOTTOM - 2 * MOBILE_OFFSET;\n\n    const safeAreaBottom = getComputedStyle(document.documentElement).getPropertyValue('--safe-area-bottom');\n    if (safeAreaBottom) {\n      toHeight -= parseFloat(safeAreaBottom);\n    }\n  }\n\n  const toLeft = isMobile ? MOBILE_OFFSET : (windowWidth - toWidth) / 2;\n  const toTop = isMobile ? MOBILE_OFFSET : (windowHeight - (toHeight + OFFSET_BOTTOM)) / 2;\n\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  const fromScaleX = fromWidth / toWidth;\n  const fromScaleY = fromHeight / toHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData || thumb, !bestImageData);\n    applyStyles(ghost, {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    });\n\n    const container = document.getElementById('StoryViewer')!;\n    container.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      applyStyles(ghost, {\n        transform: '',\n      });\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (container.contains(ghost)) {\n            container.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nexport function animateClosing(\n  userId: string,\n  origin: StoryViewerOrigin,\n  bestImageData: string,\n) {\n  const { mediaEl: toImage } = getNodes(origin, userId);\n\n  const fromImage = document.getElementById('StoryViewer')!.querySelector<HTMLImageElement>(\n    `.${styles.mobileSlide} .${styles.media}, .${styles.activeSlide} .${styles.media}`,\n  );\n  if (!fromImage || !toImage) {\n    return;\n  }\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n  const {\n    top: toTop, left: toLeft, width: toWidth, height: toHeight,\n  } = toImage.getBoundingClientRect();\n\n  const toTranslateX = (toLeft + toWidth / 2) - (fromLeft + fromWidth / 2);\n  const toTranslateY = (toTop + toHeight / 2) - (fromTop + fromHeight / 2);\n  const toScaleX = toWidth / fromWidth;\n  const toScaleY = toHeight / fromHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData);\n    applyStyles(ghost, {\n      top: `${fromTop}px`,\n      left: `${fromLeft}px`,\n      width: `${fromWidth}px`,\n      height: `${fromHeight}px`,\n    });\n\n    const ghost2 = createGhost(toImage.src, undefined, true);\n    const ghost2Top = (fromTop + fromHeight / 2) - fromWidth / 2;\n    applyStyles(ghost2, {\n      top: `${ghost2Top}px`,\n      left: `${fromLeft}px`,\n      width: `${fromWidth}px`,\n      height: `${fromWidth}px`,\n    });\n\n    const container = document.getElementById('StoryViewer')!;\n    container.appendChild(ghost);\n    document.body.appendChild(ghost2);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      applyStyles(ghost, {\n        transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScaleX}, ${toScaleY})`,\n      });\n\n      applyStyles(ghost2, {\n        transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScaleX})`,\n        opacity: '1',\n      });\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (container.contains(ghost)) {\n            container.removeChild(ghost);\n          }\n\n          if (document.body.contains(ghost2)) {\n            document.body.removeChild(ghost2);\n          }\n\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nfunction createGhost(source: string, hasBlur = false, isGhost2 = false) {\n  const ghost = document.createElement('div');\n  ghost.classList.add(!isGhost2 ? styles.ghost : styles.ghost2);\n\n  const img = new Image();\n  img.draggable = false;\n  img.oncontextmenu = stopEvent;\n  img.classList.add(styles.ghostImage);\n\n  if (hasBlur) {\n    const canvas = document.createElement('canvas');\n    canvas.classList.add(styles.thumbnail);\n    img.onload = () => {\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n      const {\n        width,\n        height,\n      } = img;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${RADIUS}px)`;\n        }\n\n        ctx.drawImage(img, -RADIUS * 2, -RADIUS * 2, width + RADIUS * 4, height + RADIUS * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, RADIUS, ITERATIONS);\n        }\n      });\n    };\n    img.src = source;\n    ghost.appendChild(canvas);\n  } else {\n    img.src = source;\n    ghost.appendChild(img);\n  }\n\n  return ghost;\n}\n\nfunction getNodes(origin: StoryViewerOrigin, userId: string) {\n  let containerSelector;\n  const mediaSelector = `#${getPeerStoryHtmlId(userId)}`;\n\n  switch (origin) {\n    case StoryViewerOrigin.StoryRibbon:\n      containerSelector = `#LeftColumn .${storyRibbonStyles.root}`;\n      break;\n    case StoryViewerOrigin.MiddleHeaderAvatar:\n      containerSelector = '.MiddleHeader .Transition_slide-active .ChatInfo';\n      break;\n    case StoryViewerOrigin.ChatList:\n      containerSelector = '#LeftColumn .chat-list';\n      break;\n    case StoryViewerOrigin.SearchResult:\n      containerSelector = '#LeftColumn .LeftSearch--container';\n      break;\n  }\n\n  const container = document.querySelector<HTMLElement>(containerSelector)!;\n  const mediaEls = container && container.querySelectorAll<HTMLImageElement>(`${mediaSelector} img`);\n\n  return {\n    container,\n    mediaEl: mediaEls?.[0],\n  };\n}\n","import type { IDimensions } from '../../../types';\n\nimport { roundToNearestEven } from '../../../util/math';\n\nexport const BASE_STORY_WIDTH = 720;\nexport const BASE_STORY_HEIGHT = 1280;\nconst BASE_SCREEN_WIDTH = 1200;\nconst BASE_SCREEN_HEIGHT = 800;\nconst BASE_ACTIVE_SLIDE_WIDTH = 405;\nconst BASE_ACTIVE_SLIDE_HEIGHT = 720;\nconst BASE_SLIDE_WIDTH = 135;\nconst BASE_SLIDE_HEIGHT = 240;\nconst BASE_GAP_WIDTH = 40;\n\nexport function calculateSlideSizes(windowWidth: number, windowHeight: number): {\n  activeSlide: IDimensions;\n  slide: IDimensions;\n  scale: number;\n  toActiveScale: number;\n  fromActiveScale: number;\n} {\n  const scale = calculateScale(BASE_SCREEN_WIDTH, BASE_SCREEN_HEIGHT, windowWidth, windowHeight);\n\n  const activeSlideWidth = roundToNearestEven(BASE_ACTIVE_SLIDE_WIDTH * scale);\n  const slideWidth = roundToNearestEven(BASE_SLIDE_WIDTH * scale);\n  // Avoid fractional values to prevent blurry text\n  return {\n    activeSlide: {\n      width: activeSlideWidth,\n      height: roundToNearestEven(BASE_ACTIVE_SLIDE_HEIGHT * scale),\n    },\n    slide: {\n      width: slideWidth,\n      height: roundToNearestEven(BASE_SLIDE_HEIGHT * scale),\n    },\n    scale,\n    toActiveScale: activeSlideWidth / slideWidth,\n    fromActiveScale: slideWidth / activeSlideWidth,\n  };\n}\n\nexport function calculateOffsetX({\n  scale,\n  slideAmount,\n  isActiveSlideSize,\n  isMoveThroughActiveSlide,\n  isBackward,\n}: {\n  scale: number;\n  slideAmount: number;\n  isActiveSlideSize: boolean;\n  isMoveThroughActiveSlide?: boolean;\n  isBackward: boolean;\n}) {\n  const mainOffset = BASE_GAP_WIDTH + (isActiveSlideSize ? BASE_ACTIVE_SLIDE_WIDTH : BASE_SLIDE_WIDTH);\n  const additionalOffset = (Math.abs(slideAmount) - 1)\n    * ((isMoveThroughActiveSlide ? BASE_ACTIVE_SLIDE_WIDTH : BASE_SLIDE_WIDTH) + BASE_GAP_WIDTH);\n  const totalOffset = roundToNearestEven((mainOffset + additionalOffset) * scale);\n\n  return isBackward ? -totalOffset : totalOffset;\n}\n\nfunction calculateScale(baseWidth: number, baseHeight: number, newWidth: number, newHeight: number) {\n  const widthScale = newWidth / baseWidth;\n  const heightScale = newHeight / baseHeight;\n\n  return Math.min(widthScale, heightScale);\n}\n","import { useMemo } from '../../../lib/teact/teact';\n\nimport { calculateSlideSizes } from '../helpers/dimensions';\n\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nexport default function useSlideSizes() {\n  const { width: windowWidth, height: windowHeight } = useWindowSize();\n  return useMemo(() => calculateSlideSizes(windowWidth, windowHeight), [windowWidth, windowHeight]);\n}\n","import type { ApiTypeStory } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash, hasMessageText } from '../../../global/helpers';\n\nimport useMedia from '../../../hooks/useMedia';\n\nexport default function useStoryProps(\n  story?: ApiTypeStory, isCurrentUserPremium = false, isDropdownMenuOpen = false,\n) {\n  const isLoadedStory = story && 'content' in story;\n  const isDeletedStory = story && 'isDeleted' in story;\n  const hasText = isLoadedStory ? hasMessageText(story) : false;\n  const hasForwardInfo = isLoadedStory && Boolean(story.forwardInfo);\n\n  let thumbnail: string | undefined;\n  if (isLoadedStory) {\n    if (story.content.photo?.thumbnail) {\n      thumbnail = story.content.photo.thumbnail.dataUri;\n    }\n    if (story.content.video?.thumbnail?.dataUri) {\n      thumbnail = story.content.video.thumbnail.dataUri;\n    }\n  }\n\n  const previewHash = isLoadedStory ? getStoryMediaHash(story) : undefined;\n  const previewBlobUrl = useMedia(previewHash);\n  const isVideo = Boolean(isLoadedStory && story.content.video);\n  const noSound = isLoadedStory && story.content.video?.noSound;\n  const fullMediaHash = isLoadedStory ? getStoryMediaHash(story, 'full') : undefined;\n  const fullMediaData = useMedia(fullMediaHash, !story, isVideo ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl);\n  const altMediaHash = isVideo && isLoadedStory ? getStoryMediaHash(story, 'full', true) : undefined;\n  const altMediaData = useMedia(altMediaHash, !story, ApiMediaFormat.Progressive);\n\n  const hasFullData = Boolean(fullMediaData || altMediaData);\n  const bestImageData = isVideo ? previewBlobUrl : fullMediaData || previewBlobUrl;\n  const hasThumb = !previewBlobUrl && !hasFullData;\n\n  const canDownload = isCurrentUserPremium && isLoadedStory && !story.noForwards;\n  const downloadHash = isLoadedStory ? getStoryMediaHash(story, 'download') : undefined;\n  const downloadMediaData = useMedia(downloadHash, !canDownload && !isDropdownMenuOpen);\n\n  return {\n    isLoadedStory,\n    isDeletedStory,\n    hasText,\n    hasForwardInfo,\n    thumbnail,\n    previewHash,\n    previewBlobUrl,\n    isVideo,\n    noSound,\n    fullMediaHash,\n    fullMediaData,\n    altMediaHash,\n    altMediaData,\n    hasFullData,\n    bestImageData,\n    hasThumb,\n    canDownload,\n    downloadMediaData,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"GrE47IXS\",\"closeButton\":\"NlWSF1pA\",\"stealthIcon\":\"qKi5jsGM\",\"title\":\"BFctFGoT\",\"description\":\"fZIJH4IG\",\"listItem\":\"RGD70uBt\",\"icon\":\"HCYfPccW\",\"button\":\"AM_sxoXP\",\"subtitle\":\"L8oRQyKb\"};","import React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiStealthMode } from '../../api/types';\n\nimport { selectIsCurrentUserPremium, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTime } from '../../util/serverTime';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport TextTimer from '../ui/TextTimer';\n\nimport styles from './StealthModeModal.module.scss';\n\ntype StateProps = {\n  isOpen?: boolean;\n  stealthMode?: ApiStealthMode;\n  isCurrentUserPremium?: boolean;\n};\n\nconst StealthModeModal = ({ isOpen, stealthMode, isCurrentUserPremium } : StateProps) => {\n  const {\n    toggleStealthModal,\n    activateStealthMode,\n    showNotification,\n    openPremiumModal,\n  } = getActions();\n  const [isOnCooldown, setIsOnCooldown] = useState(false);\n\n  useEffect(() => {\n    if (!stealthMode) return;\n    const serverTime = getServerTime();\n    if (stealthMode.cooldownUntil && stealthMode.cooldownUntil > serverTime) {\n      setIsOnCooldown(true);\n    }\n  }, [stealthMode, isOpen]);\n\n  const lang = useOldLang();\n\n  const handleTimerEnds = useLastCallback(() => {\n    setIsOnCooldown(false);\n  });\n\n  const handleClose = useLastCallback(() => {\n    toggleStealthModal({ isOpen: false });\n  });\n\n  const handleActivate = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      openPremiumModal({ initialSection: 'stories' });\n      return;\n    }\n\n    activateStealthMode();\n    showNotification({\n      title: lang('StealthModeOn'),\n      message: lang('StealthModeOnHint'),\n    });\n    toggleStealthModal({ isOpen: false });\n  });\n\n  return (\n    <Modal\n      className=\"component-theme-dark\"\n      contentClassName={styles.root}\n      isOpen={isOpen}\n      isSlim\n      onClose={handleClose}\n    >\n      <Button\n        round\n        color=\"translucent\"\n        size=\"smaller\"\n        className={styles.closeButton}\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <Icon name=\"close\" />\n      </Button>\n      <div className={styles.stealthIcon}>\n        <Icon name=\"eye-crossed-outline\" />\n      </div>\n      <div className={styles.title}>{lang('StealthMode')}</div>\n      <div className={styles.description}>\n        {lang(isCurrentUserPremium ? 'StealthModeHint' : 'StealthModePremiumHint')}\n      </div>\n      <ListItem\n        className={buildClassName(styles.listItem, 'smaller-icon')}\n        multiline\n        inactive\n        leftElement={<Icon name=\"stealth-past\" className={styles.icon} />}\n      >\n        <span className=\"title\">{lang('HideRecentViews')}</span>\n        <span className={buildClassName('subtitle', styles.subtitle)}>{lang('HideRecentViewsDescription')}</span>\n      </ListItem>\n      <ListItem\n        className={buildClassName(styles.listItem, 'smaller-icon')}\n        multiline\n        inactive\n        leftElement={<Icon name=\"stealth-future\" className={styles.icon} aria-hidden />}\n      >\n        <span className=\"title\">{lang('HideNextViews')}</span>\n        <span className={buildClassName('subtitle', styles.subtitle)}>{lang('HideNextViewsDescription')}</span>\n      </ListItem>\n      <Button\n        className={styles.button}\n        size=\"smaller\"\n        disabled={isOnCooldown}\n        isShiny={!isCurrentUserPremium}\n        withPremiumGradient={!isCurrentUserPremium}\n        onClick={handleActivate}\n      >\n        {!isCurrentUserPremium ? lang('UnlockStealthMode')\n          : isOnCooldown\n            ? (<TextTimer langKey=\"AvailableIn\" endsAt={stealthMode!.cooldownUntil!} onEnd={handleTimerEnds} />)\n            : lang('EnableStealthMode')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal((global): StateProps => {\n  const tabState = selectTabState(global);\n\n  return {\n    isOpen: tabState.storyViewer?.isStealthModalOpen,\n    stealthMode: global.stories.stealthMode,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n  };\n})(StealthModeModal));\n","import React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiTypeStory } from '../../api/types';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\ninterface OwnProps {\n  isOpen: boolean;\n  story?: ApiTypeStory;\n  onClose: NoneToVoidFunction;\n}\n\nfunction StoryDeleteConfirmModal({\n  isOpen, story, onClose,\n}: OwnProps) {\n  const { deleteStory, openNextStory } = getActions();\n\n  const lang = useOldLang();\n\n  const handleDeleteStoryClick = useCallback(() => {\n    if (!story) {\n      return;\n    }\n\n    openNextStory();\n    deleteStory({ peerId: story.peerId, storyId: story.id });\n    onClose();\n  }, [onClose, story]);\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('DeleteStoryTitle')}\n      text={lang('DeleteStorySubtitle')}\n      confirmLabel={lang('Delete')}\n      confirmHandler={handleDeleteStoryClick}\n      confirmIsDestructive\n      className=\"component-theme-dark\"\n    />\n  );\n}\n\nexport default memo(StoryDeleteConfirmModal);\n","import React, { memo, useMemo, useState } from '../../../lib/teact/teact';\n\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { unique } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\n\ninterface OwnProps {\n  id: string;\n  contactListIds?: string[];\n  currentUserId: string;\n  selectedIds?: string[];\n  lockedIds?: string[];\n  onSelect: (selectedIds: string[]) => void;\n}\n\nfunction AllowDenyList({\n  id,\n  contactListIds,\n  currentUserId,\n  selectedIds,\n  lockedIds,\n  onSelect,\n}: OwnProps) {\n  const lang = useOldLang();\n\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const displayedIds = useMemo(() => {\n    const contactIds = (contactListIds || []).filter((userId) => userId !== currentUserId);\n    return unique(filterPeersByQuery({ ids: [...selectedIds || [], ...contactIds], query: searchQuery, type: 'user' }));\n  }, [contactListIds, currentUserId, searchQuery, selectedIds]);\n\n  return (\n    <PeerPicker\n      key={id}\n      itemIds={displayedIds}\n      selectedIds={selectedIds ?? MEMO_EMPTY_ARRAY}\n      lockedSelectedIds={lockedIds}\n      filterValue={searchQuery}\n      filterPlaceholder={lang('Search')}\n      searchInputId={`${id}-picker-search`}\n      isSearchable\n      withDefaultPadding\n      forceShowSelf\n      onSelectedIdsChange={onSelect}\n      onFilterChange={setSearchQuery}\n      allowMultiple\n      withStatus\n      itemInputType=\"checkbox\"\n    />\n  );\n}\n\nexport default memo(AllowDenyList);\n","// extracted by mini-css-extract-plugin\nexport default {\"buttonHolder\":\"BDK_pgpt\",\"active\":\"N8ujSwlC\"};","import React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport buildClassName from '../../../util/buildClassName';\nimport { unique } from '../../../util/iteratees';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nimport styles from './CloseFriends.module.scss';\n\nexport type OwnProps = {\n  isActive?: boolean;\n  currentUserId: string;\n  usersById: Record<string, ApiUser>;\n  contactListIds?: string[];\n  onClose: NoneToVoidFunction;\n};\n\nfunction CloseFriends({\n  isActive, contactListIds, usersById, currentUserId, onClose,\n}: OwnProps) {\n  const { saveCloseFriends } = getActions();\n\n  const lang = useOldLang();\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isSubmitShown, setIsSubmitShown] = useState<boolean>(false);\n  const [newSelectedContactIds, setNewSelectedContactIds] = useState<string[]>([]);\n\n  const closeFriendIds = useMemo(() => {\n    return (contactListIds || []).filter((userId) => usersById[userId]?.isCloseFriend);\n  }, [contactListIds, usersById]);\n\n  const displayedIds = useMemo(() => {\n    const contactIds = (contactListIds || []).filter((id) => id !== currentUserId);\n    return unique(filterPeersByQuery({ ids: [...closeFriendIds, ...contactIds], query: searchQuery, type: 'user' }));\n  }, [closeFriendIds, contactListIds, currentUserId, searchQuery]);\n\n  useEffectWithPrevDeps(([prevIsActive]) => {\n    if (!prevIsActive && isActive) {\n      setIsSubmitShown(false);\n      setNewSelectedContactIds(closeFriendIds);\n    }\n  }, [isActive, closeFriendIds]);\n\n  const handleSelectedContactIdsChange = useCallback((value: string[]) => {\n    setNewSelectedContactIds(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSubmit = useLastCallback(() => {\n    saveCloseFriends({ userIds: newSelectedContactIds });\n    onClose();\n  });\n\n  return (\n    <>\n      <PeerPicker\n        itemIds={displayedIds || []}\n        selectedIds={newSelectedContactIds}\n        filterValue={searchQuery}\n        filterPlaceholder={lang('Search')}\n        searchInputId=\"close-friends-picker-search\"\n        isSearchable\n        withDefaultPadding\n        onSelectedIdsChange={handleSelectedContactIdsChange}\n        onFilterChange={setSearchQuery}\n        allowMultiple\n        withStatus\n        itemInputType=\"checkbox\"\n      />\n\n      <div className={buildClassName(styles.buttonHolder, isSubmitShown && styles.active)}>\n        <FloatingActionButton\n          isShown={isSubmitShown}\n          onClick={handleSubmit}\n          ariaLabel={lang('Save')}\n        >\n          <Icon name=\"check\" />\n        </FloatingActionButton>\n      </div>\n    </>\n  );\n}\n\nexport default memo(CloseFriends);\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"hz7SomkK\",\"header\":\"NV6Rt2g9\",\"closeButton\":\"SN1GFS6L\",\"headerTitle\":\"gi0Y6Ns6\",\"content\":\"sTaVDkiD\",\"section\":\"eUiuPoEC\",\"title\":\"iPPiw9DI\",\"list\":\"OUP1Ss0W\",\"option\":\"JL33Sa3b\",\"checked\":\"qVPo_cVL\",\"input\":\"zsDaUk0i\",\"icon\":\"AfYCVlys\",\"action\":\"njMeBBwY\",\"optionContent\":\"TUAAnG2w\",\"footer\":\"r24Qz2bf\",\"info\":\"ljeRVBOm\",\"submit\":\"RwNLN_rH\"};","import React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiPrivacySettings, ApiStory, ApiUser, PrivacyVisibility,\n} from '../../api/types';\nimport type { IconName } from '../../types/icons';\n\nimport { getUserFullName } from '../../global/helpers';\nimport { getPeerTitle } from '../../global/helpers/peers';\nimport { selectPeerStory, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getHours } from '../../util/dates/units';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport Switcher from '../ui/Switcher';\nimport Transition from '../ui/Transition';\nimport AllowDenyList from './privacy/AllowDenyList';\nimport CloseFriends from './privacy/CloseFriends';\n\nimport styles from './StorySettings.module.scss';\n\ninterface OwnProps {\n  isOpen?: boolean;\n  onClose?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  story?: ApiStory;\n  visibility?: ApiPrivacySettings;\n  contactListIds?: string[];\n  usersById: Record<string, ApiUser>;\n  currentUserId: string;\n}\n\ntype PrivacyAction = 'blockUserIds' | 'closeFriends' | 'blockContactUserIds' | 'allowUserIds';\n\ninterface PrivacyOption {\n  name: string;\n  value: PrivacyVisibility;\n  color: [string, string];\n  icon: IconName;\n  actions?: PrivacyAction;\n}\n\nconst OPTIONS: PrivacyOption[] = [{\n  name: 'StoryPrivacyOptionEveryone',\n  value: 'everybody',\n  color: ['#50ABFF', '#007AFF'],\n  icon: 'channel-filled',\n  actions: 'blockUserIds',\n}, {\n  name: 'StoryPrivacyOptionContacts',\n  value: 'contacts',\n  color: ['#C36EFF', '#8B60FA'],\n  icon: 'user-filled',\n  actions: 'blockContactUserIds',\n}, {\n  name: 'StoryPrivacyOptionCloseFriends',\n  value: 'closeFriends',\n  color: ['#88D93A', '#30B73B'],\n  icon: 'favorite-filled',\n  actions: 'closeFriends',\n}, {\n  name: 'StoryPrivacyOptionSelectedContacts',\n  value: 'nobody',\n  color: ['#FFB743', '#F69A36'],\n  icon: 'group-filled',\n  actions: 'allowUserIds',\n}];\n\nenum Screens {\n  privacy,\n  allowList,\n  closeFriends,\n  denyList,\n}\n\nfunction StorySettings({\n  isOpen,\n  story,\n  visibility,\n  contactListIds,\n  usersById,\n  currentUserId,\n  onClose,\n}: OwnProps & StateProps) {\n  const { editStoryPrivacy, toggleStoryInProfile } = getActions();\n\n  const lang = useOldLang();\n  const [isOpenModal, openModal, closeModal] = useFlag(false);\n  const [privacy, setPrivacy] = useState<ApiPrivacySettings | undefined>(visibility);\n  const [isPinned, setIsPinned] = useState(story?.isInProfile);\n  const [activeKey, setActiveKey] = useState<Screens>(Screens.privacy);\n  const [editingBlockingCategory, setEditingBlockingCategory] = useState<PrivacyVisibility>('everybody');\n  const isBackButton = activeKey !== Screens.privacy;\n\n  const closeFriendIds = useMemo(() => {\n    return (contactListIds || []).filter((userId) => usersById[userId]?.isCloseFriend);\n  }, [contactListIds, usersById]);\n\n  const lockedIds = useMemo(() => {\n    if (activeKey === Screens.allowList\n      && (!privacy?.allowUserIds?.length || privacy.allowUserIds[0] === currentUserId)\n    ) {\n      return [currentUserId];\n    }\n\n    return undefined;\n  }, [activeKey, currentUserId, privacy?.allowUserIds]);\n\n  const selectedBlockedIds = useMemo(() => {\n    if (editingBlockingCategory !== privacy?.visibility) return [];\n    return privacy?.blockUserIds || [];\n  }, [editingBlockingCategory, privacy?.blockUserIds, privacy?.visibility]);\n\n  const handleAllowUserIdsChange = useLastCallback((newIds: string[]) => {\n    setPrivacy({\n      ...privacy!,\n      allowUserIds: newIds?.length ? newIds?.filter((id) => id !== currentUserId) : [currentUserId],\n    });\n  });\n\n  const handleDenyUserIdsChange = useLastCallback((newIds: string[]) => {\n    setPrivacy({\n      ...privacy!,\n      blockUserIds: newIds,\n      visibility: editingBlockingCategory,\n    });\n  });\n\n  useEffect(() => {\n    if (isOpen) {\n      setActiveKey(Screens.privacy);\n      openModal();\n    }\n  }, [isOpen]);\n\n  useEffect(() => {\n    setPrivacy(visibility);\n  }, [visibility]);\n\n  const handleCloseButtonClick = useLastCallback(() => {\n    if (activeKey === Screens.privacy) {\n      closeModal();\n      return;\n    }\n\n    setActiveKey(Screens.privacy);\n  });\n\n  function handleVisibilityChange(newVisibility: PrivacyVisibility) {\n    setPrivacy({\n      ...privacy!,\n      visibility: newVisibility,\n    });\n  }\n\n  function handleActionClick(e: React.MouseEvent<HTMLDivElement>, action: PrivacyAction) {\n    stopEvent(e);\n\n    switch (action) {\n      case 'closeFriends':\n        setActiveKey(Screens.closeFriends);\n        break;\n      case 'allowUserIds':\n        setActiveKey(Screens.allowList);\n        break;\n      case 'blockUserIds':\n        setActiveKey(Screens.denyList);\n        setEditingBlockingCategory('everybody');\n        break;\n      case 'blockContactUserIds':\n        setActiveKey(Screens.denyList);\n        setEditingBlockingCategory('contacts');\n        break;\n    }\n  }\n\n  const handleIsPinnedToggle = useLastCallback(() => {\n    setIsPinned(!isPinned);\n  });\n\n  // console.warn(privacy?.visibility, story?.visibility, OPTIONS);\n\n  const handleSubmit = useLastCallback(() => {\n    editStoryPrivacy({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      privacy: privacy!,\n    });\n    if (story!.isInProfile !== isPinned) {\n      toggleStoryInProfile({ peerId: story!.peerId, storyId: story!.id, isInProfile: isPinned });\n    }\n    closeModal();\n  });\n\n  function renderActionName(action: PrivacyAction) {\n    if (action === 'closeFriends') {\n      if (closeFriendIds.length === 0) {\n        return lang('StoryPrivacyOptionCloseFriendsDetail');\n      }\n\n      if (closeFriendIds.length === 1) {\n        return getPeerTitle(lang, usersById[closeFriendIds[0]]);\n      }\n\n      return lang('StoryPrivacyOptionPeople', closeFriendIds.length, 'i');\n    }\n\n    if ((action === 'blockUserIds' && privacy?.visibility === 'everybody')\n      || (action === 'blockContactUserIds' && privacy?.visibility === 'contacts')) {\n      if (!privacy?.blockUserIds?.length) {\n        return lang('StoryPrivacyOptionContactsDetail');\n      }\n\n      if (privacy.blockUserIds.length === 1) {\n        return lang('StoryPrivacyOptionExcludePerson', getUserFullName(usersById[privacy.blockUserIds[0]]));\n      }\n\n      return lang('StoryPrivacyOptionExcludePeople', privacy.blockUserIds.length, 'i');\n    }\n\n    if (!privacy?.allowUserIds || privacy.allowUserIds.length === 0) {\n      return lang('StoryPrivacyOptionSelectedContactsDetail');\n    }\n\n    if (privacy.allowUserIds.length === 1) {\n      return getUserFullName(usersById[privacy.allowUserIds[0]]);\n    }\n\n    return lang('StoryPrivacyOptionPeople', privacy.allowUserIds.length, 'i');\n  }\n\n  // eslint-disable-next-line consistent-return\n  function renderHeaderContent() {\n    switch (activeKey) {\n      case Screens.privacy:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertEditTitle')}</h3>;\n      case Screens.allowList:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertSelectContactsTitle')}</h3>;\n      case Screens.closeFriends:\n        return <h3 className={styles.headerTitle}>{lang('CloseFriends')}</h3>;\n      case Screens.denyList:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertExcludedContactsTitle')}</h3>;\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function renderContent(isActive: boolean) {\n    switch (activeKey) {\n      case Screens.privacy:\n        return renderPrivacyList();\n      case Screens.closeFriends:\n        return (\n          <CloseFriends\n            key=\"close-friends\"\n            isActive={isActive}\n            contactListIds={contactListIds}\n            currentUserId={currentUserId}\n            usersById={usersById}\n            onClose={handleCloseButtonClick}\n          />\n        );\n      case Screens.denyList:\n        return (\n          <AllowDenyList\n            key=\"deny-list\"\n            id=\"deny-list\"\n            contactListIds={contactListIds}\n            currentUserId={currentUserId}\n            selectedIds={selectedBlockedIds}\n            onSelect={handleDenyUserIdsChange}\n          />\n        );\n      case Screens.allowList:\n        return (\n          <AllowDenyList\n            key=\"allow-list\"\n            id=\"allow-list\"\n            contactListIds={contactListIds}\n            lockedIds={lockedIds}\n            currentUserId={currentUserId}\n            selectedIds={privacy?.allowUserIds}\n            onSelect={handleAllowUserIdsChange}\n          />\n        );\n    }\n  }\n\n  function renderPrivacyList() {\n    const storyLifeTime = story ? getHours(story.expireDate - story.date) : 0;\n\n    return (\n      <>\n        <div className={styles.section}>\n          <h3 className={styles.title}>{lang('StoryPrivacyAlertSubtitleProfile')}</h3>\n          <div className={styles.list}>\n            {OPTIONS.map((option) => (\n              <label\n                key={option.value}\n                className={buildClassName(styles.option, option.value === privacy?.visibility && styles.checked)}\n              >\n                <input\n                  type=\"radio\"\n                  name=\"story_privacy\"\n                  className={styles.input}\n                  value={option.value}\n                  checked={option.value === privacy?.visibility}\n                  onChange={() => handleVisibilityChange(option.value)}\n                  teactExperimentControlled\n                />\n                <span\n                  className={styles.icon}\n                  style={`--color-from: ${option.color[0]}; --color-to: ${option.color[1]}`}\n                >\n                  <Icon name={option.icon} />\n                </span>\n                <div className={styles.optionContent}>\n                  <span className={buildClassName(styles.option_name)}>{lang(option.name)}</span>\n                  {option.actions && (\n                    <div\n                      tabIndex={0}\n                      role=\"button\"\n                      className={styles.action}\n                      aria-label={lang('Edit')}\n                      onClick={(e) => { handleActionClick(e, option.actions!); }}\n                    >\n                      <span className={styles.actionInner}>{renderActionName(option.actions)}</span>\n                      <Icon name=\"next\" />\n                    </div>\n                  )}\n                </div>\n              </label>\n            ))}\n          </div>\n        </div>\n        <div className={styles.section}>\n          <ListItem ripple onClick={handleIsPinnedToggle}>\n            <span>{lang('StoryKeep')}</span>\n            <Switcher\n              id=\"group-notifications\"\n              label={lang('StoryKeep')}\n              checked={isPinned}\n              inactive\n            />\n          </ListItem>\n        </div>\n        <div className={styles.footer}>\n          <div className={styles.info}>{lang('StoryKeepInfo', storyLifeTime)}</div>\n          <div className={styles.submit}>\n            <Button onClick={handleSubmit}>{lang('StoryPrivacyButtonSave')}</Button>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpenModal}\n      className={buildClassName(styles.modal, 'component-theme-dark')}\n      onClose={closeModal}\n      noBackdrop\n      onCloseAnimationEnd={onClose}\n    >\n      <div className={styles.header}>\n        <Button\n          className={buildClassName(styles.closeButton, 'close-button')}\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleCloseButtonClick}\n          ariaLabel={isBackButton ? lang('Common.Back') : lang('Common.Close')}\n        >\n          <div className={buildClassName('animated-close-icon', isBackButton && 'state-back')} />\n        </Button>\n        <Transition name=\"slideFade\" activeKey={activeKey}>\n          {renderHeaderContent()}\n        </Transition>\n      </div>\n      <Transition\n        activeKey={activeKey}\n        name=\"slideFade\"\n        slideClassName=\"ChatOrUserPicker_slide\"\n        className={styles.content}\n      >\n        {renderContent}\n      </Transition>\n    </Modal>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    storyViewer: {\n      storyId, peerId,\n    },\n  } = selectTabState(global);\n  const story = (peerId && storyId)\n    ? selectPeerStory(global, peerId, storyId)\n    : undefined;\n\n  return {\n    story: story && 'content' in story ? story as ApiStory : undefined,\n    visibility: story && 'visibility' in story ? story.visibility : undefined,\n    contactListIds: global.contactList?.userIds,\n    usersById: global.users.byId,\n    currentUserId: global.currentUserId!,\n  };\n})(StorySettings));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiPeer,\n  ApiStoryForwardInfo,\n  ApiTypeStory,\n} from '../../../api/types';\nimport type { IconName } from '../../../types/icons';\n\nimport {\n  isUserId,\n} from '../../../global/helpers';\nimport { getPeerTitle } from '../../../global/helpers/peers';\nimport { selectPeer, selectPeerStory } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getPeerColorClass } from '../helpers/peerColor';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../icons/Icon';\nimport PeerColorWrapper from '../PeerColorWrapper';\nimport EmojiIconBackground from './EmojiIconBackground';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  forwardInfo: ApiStoryForwardInfo;\n  className?: string;\n};\n\ntype StateProps = {\n  sender?: ApiPeer;\n  story?: ApiTypeStory;\n};\n\nconst EmbeddedStoryForward: FC<OwnProps & StateProps> = ({\n  className,\n  forwardInfo,\n  sender,\n  story,\n}) => {\n  const { openStoryViewer, loadPeerStoriesByIds, openChat } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!story && forwardInfo.fromPeerId && forwardInfo.storyId) {\n      loadPeerStoriesByIds({\n        peerId: forwardInfo.fromPeerId,\n        storyIds: [forwardInfo.storyId],\n      });\n    }\n  }, [forwardInfo, story]);\n\n  const senderTitle = sender ? getPeerTitle(lang, sender) : forwardInfo.fromName;\n\n  const openOriginalStory = useLastCallback(() => {\n    const { fromPeerId, storyId } = forwardInfo;\n    if (!fromPeerId) return;\n\n    const isStoryReady = story && !('isDeleted' in story && story.isDeleted);\n\n    if (isStoryReady) {\n      openStoryViewer({\n        peerId: fromPeerId,\n        storyId,\n        isSingleStory: true,\n      });\n    } else {\n      openChat({ id: fromPeerId });\n    }\n  });\n\n  const { handleClick, handleMouseDown } = useFastClick(openOriginalStory);\n\n  function renderTextContent() {\n    if (story && 'content' in story && story.content.text) {\n      return (\n        <p className=\"embedded-text-wrapper\">\n          {renderTextWithEntities(story.content.text)}\n        </p>\n      );\n    }\n\n    return undefined;\n  }\n\n  function renderSender() {\n    if (!sender || !senderTitle) {\n      return undefined;\n    }\n\n    const icon: IconName | undefined = !isUserId(sender.id) ? 'channel-filled' : 'user-filled';\n\n    return (\n      <>\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {senderTitle && renderText(senderTitle)}\n      </>\n    );\n  }\n\n  return (\n    <PeerColorWrapper\n      ref={ref}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        getPeerColorClass(sender, true, true),\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      {sender?.color?.backgroundEmojiId && (\n        <EmojiIconBackground\n          emojiDocumentId={sender.color.backgroundEmojiId}\n          className=\"EmbeddedMessage--background-icons\"\n        />\n      )}\n      <div className=\"message-text\">\n        {renderTextContent()}\n        <div className=\"message-title\">\n          {renderSender()}\n        </div>\n      </div>\n    </PeerColorWrapper>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { forwardInfo }): StateProps => {\n    const sender = forwardInfo.fromPeerId ? selectPeer(global, forwardInfo.fromPeerId) : undefined;\n    const story = forwardInfo.storyId && forwardInfo.fromPeerId\n      ? selectPeerStory(global, forwardInfo.fromPeerId, forwardInfo.storyId) : undefined;\n    return {\n      sender,\n      story,\n    };\n  },\n)(EmbeddedStoryForward));\n","import React, {\n  memo, useEffect, useLayoutEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { addExtraClass, removeExtraClass } from '../../lib/teact/teact-dom';\n\nimport type { ApiStory } from '../../api/types';\n\nimport { requestForcedReflow, requestMeasure, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport calcTextLineHeightAndCount from '../../util/element/calcTextLineHeightAndCount';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevDuringAnimation from '../../hooks/usePrevDuringAnimation';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport EmbeddedStoryForward from '../common/embedded/EmbeddedStoryForward';\nimport MessageText from '../common/MessageText';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  story: ApiStory;\n  isExpanded: boolean;\n  className?: string;\n  onExpand: NoneToVoidFunction;\n  onFold?: NoneToVoidFunction;\n}\n\nconst EXPAND_ANIMATION_DURATION_MS = 400;\nconst LINES_TO_SHOW = 3;\n\nfunction StoryCaption({\n  story, isExpanded, className, onExpand, onFold,\n}: OwnProps) {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const contentRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const textRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const showMoreButtonRef = useRef<HTMLDivElement>(null);\n  const renderingStory = useCurrentOrPrev(story, true);\n\n  const caption = renderingStory?.content.text;\n\n  const [hasOverflow, setHasOverflow] = useState(false);\n  const prevIsExpanded = usePrevDuringAnimation(isExpanded || undefined, EXPAND_ANIMATION_DURATION_MS);\n  const isInExpandedState = isExpanded || prevIsExpanded;\n\n  useEffect(() => {\n    requestMutation(() => {\n      if (!contentRef.current) {\n        return;\n      }\n\n      if (isExpanded) {\n        addExtraClass(contentRef.current, styles.animate);\n      } else {\n        removeExtraClass(contentRef.current, styles.animate);\n      }\n    });\n  }, [isExpanded]);\n\n  const canExpand = hasOverflow && !isInExpandedState;\n  const { shouldRender: shouldRenderShowMore, transitionClassNames } = useShowTransitionDeprecated(\n    canExpand, undefined, true, 'slow', true,\n  );\n\n  useLayoutEffect(() => {\n    requestMeasure(() => {\n      if (!showMoreButtonRef.current) {\n        return;\n      }\n\n      const button = showMoreButtonRef.current;\n\n      const { offsetWidth } = button;\n\n      requestMutation(() => {\n        button.style.setProperty('--expand-button-width', `${offsetWidth}px`);\n      });\n    });\n  }, []);\n\n  useLayoutEffect(() => {\n    requestForcedReflow(() => {\n      if (!contentRef.current || !textRef.current) {\n        return undefined;\n      }\n\n      const container = contentRef.current;\n      const textContainer = textRef.current;\n\n      const textOffsetTop = textContainer.offsetTop;\n      const { lineHeight, totalLines } = calcTextLineHeightAndCount(textContainer);\n      const isOverflowing = totalLines > LINES_TO_SHOW;\n      const overflowShift = textOffsetTop + lineHeight * LINES_TO_SHOW;\n\n      return () => {\n        if (isOverflowing) {\n          addExtraClass(container, styles.hasOverflow);\n          setHasOverflow(true);\n        }\n\n        container.style.setProperty('--_overflow-shift', `${overflowShift}px`);\n      };\n    });\n  }, [caption]);\n\n  useEffect(() => {\n    if (!isExpanded) {\n      ref.current?.scrollTo({ top: 0 });\n    }\n  }, [isExpanded]);\n\n  const fullClassName = buildClassName(\n    styles.captionContent,\n    isInExpandedState && styles.expanded,\n    shouldRenderShowMore && styles.withShowMore,\n  );\n\n  return (\n    <div className={buildClassName(styles.caption, className)}>\n      <div\n        ref={contentRef}\n        className={fullClassName}\n        role={canExpand ? 'button' : undefined}\n        onClick={canExpand ? onExpand : onFold}\n      >\n        <div\n          ref={ref}\n          className={buildClassName(styles.captionInner, 'allow-selection', 'custom-scroll')}\n        >\n          {renderingStory?.forwardInfo && (\n            <EmbeddedStoryForward\n              forwardInfo={renderingStory.forwardInfo}\n              className={styles.forwardInfo}\n            />\n          )}\n          {renderingStory && (\n            <div ref={textRef} className={styles.captionText}>\n              <MessageText\n                messageOrStory={renderingStory}\n                withTranslucentThumbs\n                forcePlayback\n              />\n            </div>\n          )}\n        </div>\n      </div>\n      {shouldRenderShowMore && (\n        <div\n          ref={showMoreButtonRef}\n          className={buildClassName(styles.captionShowMore, transitionClassNames)}\n          onClick={onExpand}\n        >\n          {lang('Story.CaptionShowMore')}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryCaption);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"YVD19vOP\",\"viewInfo\":\"cknL5COh\",\"interactive\":\"pJAyeGkG\",\"avatars\":\"Vz_VtJ16\",\"spacer\":\"kKoeDk3Z\",\"reactionCount\":\"sf3u_6Vh\",\"reactionCountHeart\":\"Er2XKRqi\",\"footerItem\":\"vJRk_UUk\",\"views\":\"nIv3YAnZ\",\"viewIcon\":\"WyBiNM6e\",\"reactionButton\":\"lpDXVIuf\",\"reactionHeart\":\"twgMDT1y\"};","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiStory } from '../../api/types';\n\nimport { HEART_REACTION } from '../../config';\nimport {\n  getReactionKey, getStoryKey, isSameReaction, isUserId,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport AvatarList from '../common/AvatarList';\nimport Icon from '../common/icons/Icon';\nimport ReactionAnimatedEmoji from '../common/reactions/ReactionAnimatedEmoji';\nimport Button from '../ui/Button';\n\nimport styles from './StoryFooter.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  className?: string;\n};\n\nconst StoryFooter = ({\n  story,\n  className,\n}: OwnProps) => {\n  const { openStoryViewModal, openForwardMenu, sendStoryReaction } = getActions();\n  const lang = useOldLang();\n\n  const {\n    views, isOut, peerId, id: storyId, sentReaction,\n  } = story;\n  const { viewsCount, forwardsCount, reactionsCount } = views || {};\n  const isChannel = !isUserId(peerId);\n\n  const isSentStoryReactionHeart = sentReaction && isSameReaction(sentReaction, HEART_REACTION);\n\n  const canForward = Boolean(\n    (isOut || isChannel)\n    && story.isPublic\n    && !story.noForwards,\n  );\n\n  const containerId = getStoryKey(peerId, storyId);\n\n  const recentViewers = useMemo(() => {\n    const { users: { byId: usersById } } = getGlobal();\n\n    const recentViewerIds = views && 'recentViewerIds' in views ? views.recentViewerIds : undefined;\n    if (!recentViewerIds) return undefined;\n\n    return recentViewerIds.map((id) => usersById[id]).filter(Boolean);\n  }, [views]);\n\n  const handleOpenStoryViewModal = useLastCallback(() => {\n    openStoryViewModal({ storyId });\n  });\n\n  const handleForwardClick = useLastCallback(() => {\n    openForwardMenu({ fromChatId: peerId, storyId });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId,\n      storyId,\n      containerId,\n      reaction,\n    });\n  });\n\n  if (!viewsCount) {\n    return (\n      <div className={buildClassName(styles.root, className)}>\n        {lang('NobodyViewed')}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        className,\n      )}\n    >\n      <div\n        className={buildClassName(styles.viewInfo, !isChannel && styles.interactive)}\n        onClick={!isChannel ? handleOpenStoryViewModal : undefined}\n      >\n        {Boolean(recentViewers?.length) && (\n          <AvatarList\n            size=\"small\"\n            peers={recentViewers}\n            className={styles.avatars}\n          />\n        )}\n\n        {isChannel ? (\n          <span className={styles.views}><Icon name=\"channelviews\" className={styles.viewIcon} />{viewsCount}</span>\n        ) : (\n          <span className={styles.views}>{lang('Views', viewsCount, 'i')}</span>\n        )}\n        {Boolean(reactionsCount) && !isChannel && (\n          <span className={styles.reactionCount}>\n            <Icon name=\"heart\" className={styles.reactionCountHeart} />\n            {reactionsCount}\n          </span>\n        )}\n      </div>\n      <div className={styles.spacer} />\n      {canForward && (\n        <Button\n          color=\"translucent\"\n          size=\"smaller\"\n          round\n          onClick={handleForwardClick}\n          ariaLabel={lang('Forward')}\n          className={styles.footerItem}\n        >\n          <Icon name=\"forward\" />\n        </Button>\n      )}\n      {isChannel && (\n        <>\n          {Boolean(forwardsCount) && (\n            <div className={styles.footerItem}>\n              <Button\n                round\n                color=\"translucent\"\n                size=\"smaller\"\n                nonInteractive\n                ariaLabel={lang('PublicShares')}\n              >\n                <Icon name=\"loop\" />\n              </Button>\n              <span>{forwardsCount}</span>\n            </div>\n          )}\n          <div className={styles.footerItem}>\n            <Button\n              round\n              className={styles.reactionButton}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleLikeStory}\n              ariaLabel={lang('AccDescrLike')}\n            >\n              {sentReaction && (\n                <ReactionAnimatedEmoji\n                  key={getReactionKey(sentReaction)}\n                  containerId={containerId}\n                  reaction={sentReaction}\n                  withEffectOnly={isSentStoryReactionHeart}\n                />\n              )}\n              {(!sentReaction || isSentStoryReactionHeart) && (\n                <Icon\n                  name={isSentStoryReactionHeart ? 'heart' : 'heart-outline'}\n                  className={buildClassName(isSentStoryReactionHeart && styles.reactionHeart)}\n                />\n              )}\n            </Button>\n            {Boolean(reactionsCount) && (<span>{reactionsCount}</span>)}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StoryFooter);\n","import React, {\n  memo,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport styles from './StoryProgress.module.scss';\n\ninterface OwnProps {\n  isActive: boolean;\n  isViewed: boolean;\n  isVideo?: boolean;\n  duration?: number;\n  isPaused?: boolean;\n  onImageComplete: NoneToVoidFunction;\n}\n\nconst DEFAULT_STORY_DURATION_S = 6;\n\nfunction StoryProgress({\n  isActive, isViewed, isVideo, duration = DEFAULT_STORY_DURATION_S, isPaused, onImageComplete,\n}: OwnProps) {\n  const handleAnimationEnd = useLastCallback((event: React.AnimationEvent<HTMLElement>) => {\n    if (!isVideo && event.animationName === styles.progress) {\n      onImageComplete();\n    }\n  });\n\n  const classNames = buildClassName(\n    styles.root,\n    isViewed && styles.viewed,\n    isActive && styles.active,\n    isPaused && styles.paused,\n  );\n\n  return (\n    <span\n      className={classNames}\n      aria-hidden\n    >\n      {isActive && (\n        <i style={`--progress-duration: ${duration}s`} className={styles.inner} onAnimationEnd={handleAnimationEnd} />\n      )}\n    </span>\n  );\n}\n\nexport default memo(StoryProgress);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"c1fbGgcx\",\"viewed\":\"xwOKghO2\",\"active\":\"ZuByYcIx\",\"inner\":\"qyBCpJct\",\"progress\":\"XY98E7VM\",\"paused\":\"n9V6B7hP\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat,\n  ApiMediaAreaChannelPost,\n  ApiPeer, ApiStealthMode, ApiStory, ApiTypeStory,\n} from '../../api/types';\nimport type { IDimensions } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport type { Signal } from '../../util/signals';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { EDITABLE_STORY_INPUT_CSS_SELECTOR, EDITABLE_STORY_INPUT_ID } from '../../config';\nimport { isChatChannel, isUserId } from '../../global/helpers';\nimport { getPeerTitle } from '../../global/helpers/peers';\nimport {\n  selectChat,\n  selectIsCurrentUserFrozen,\n  selectIsCurrentUserPremium,\n  selectPeer,\n  selectPeerPaidMessagesStars,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectTabState,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { IS_SAFARI } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport { formatMediaDuration, formatRelativePastTime } from '../../util/dates/dateFormat';\nimport download from '../../util/download';\nimport { formatStarsAsIcon } from '../../util/localization/format';\nimport { round } from '../../util/math';\nimport { getServerTime } from '../../util/serverTime';\nimport renderText from '../common/helpers/renderText';\nimport { BASE_STORY_HEIGHT, BASE_STORY_WIDTH } from './helpers/dimensions';\nimport { PRIMARY_VIDEO_MIME, SECONDARY_VIDEO_MIME } from './helpers/videoFormats';\n\nimport useUnsupportedMedia from '../../hooks/media/useUnsupportedMedia';\nimport useAppLayout, { getIsMobile } from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLongPress from '../../hooks/useLongPress';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport { useStreaming } from '../../hooks/useStreaming';\nimport useBackgroundMode from '../../hooks/window/useBackgroundMode';\nimport useStoryPreloader from './hooks/useStoryPreloader';\nimport useStoryProps from './hooks/useStoryProps';\n\nimport Avatar from '../common/Avatar';\nimport Composer from '../common/Composer';\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Skeleton from '../ui/placeholder/Skeleton';\nimport Transition from '../ui/Transition';\nimport MediaAreaOverlay from './mediaArea/MediaAreaOverlay';\nimport StoryCaption from './StoryCaption';\nimport StoryFooter from './StoryFooter';\nimport StoryProgress from './StoryProgress';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  peerId: string;\n  storyId: number;\n  dimensions: IDimensions;\n  // eslint-disable-next-line react/no-unused-prop-types\n  isDeleteModalOpen?: boolean;\n  isPrivateStories?: boolean;\n  isArchivedStories?: boolean;\n  isSingleStory?: boolean;\n  getIsAnimating: Signal<boolean>;\n  onDelete: (story: ApiTypeStory) => void;\n  onClose: NoneToVoidFunction;\n  onReport: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  peer: ApiPeer;\n  forwardSender?: ApiPeer;\n  fromPeer?: ApiPeer;\n  story?: ApiTypeStory;\n  isMuted: boolean;\n  orderedIds?: number[];\n  shouldForcePause?: boolean;\n  storyChangelogUserId?: string;\n  viewersExpirePeriod: number;\n  isChatExist?: boolean;\n  arePeerSettingsLoaded?: boolean;\n  isCurrentUserPremium?: boolean;\n  stealthMode: ApiStealthMode;\n  withHeaderAnimation?: boolean;\n  paidMessagesStars?: number;\n  isAccountFrozen?: boolean;\n}\n\nconst VIDEO_MIN_READY_STATE = IS_SAFARI ? 4 : 3;\nconst SPACEBAR_CODE = 32;\n\nconst STEALTH_MODE_NOTIFICATION_DURATION = 4000;\n\nfunction Story({\n  peerId,\n  storyId,\n  peer,\n  forwardSender,\n  fromPeer,\n  isMuted,\n  isArchivedStories,\n  isPrivateStories,\n  story,\n  orderedIds,\n  isSingleStory,\n  dimensions,\n  shouldForcePause,\n  storyChangelogUserId,\n  viewersExpirePeriod,\n  isChatExist,\n  arePeerSettingsLoaded,\n  getIsAnimating,\n  isCurrentUserPremium,\n  stealthMode,\n  withHeaderAnimation,\n  onDelete,\n  onClose,\n  onReport,\n  paidMessagesStars,\n  isAccountFrozen,\n}: OwnProps & StateProps) {\n  const {\n    viewStory,\n    setStoryViewerMuted,\n    openPreviousStory,\n    openNextStory,\n    loadPeerSkippedStories,\n    openForwardMenu,\n    copyStoryLink,\n    toggleStoryInProfile,\n    openChat,\n    showNotification,\n    openStoryPrivacyEditor,\n    loadPeerSettings,\n    fetchChat,\n    loadStoryViews,\n    toggleStealthModal,\n  } = getActions();\n  const serverTime = getServerTime();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n  const [isComposerHasFocus, markComposerHasFocus, unmarkComposerHasFocus] = useFlag(false);\n  const [isStoryPlaybackRequested, playStory, pauseStory] = useFlag(false);\n  const [isStoryPlaying, markStoryPlaying, unmarkStoryPlaying] = useFlag(false);\n  const [isAppFocused, markAppFocused, unmarkAppFocused] = useFlag(true);\n  const [isCaptionExpanded, expandCaption, foldCaption] = useFlag(false);\n  const [isPausedBySpacebar, setIsPausedBySpacebar] = useState(false);\n  const [isPausedByLongPress, markIsPausedByLongPress, unmarkIsPausedByLongPress] = useFlag(false);\n  const [isDropdownMenuOpen, markDropdownMenuOpen, unmarkDropdownMenuOpen] = useFlag(false);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const {\n    isDeletedStory,\n    hasText,\n    hasForwardInfo,\n    thumbnail,\n    previewBlobUrl,\n    isVideo,\n    noSound,\n    fullMediaData,\n    altMediaHash,\n    altMediaData,\n    hasFullData,\n    hasThumb,\n    canDownload,\n    downloadMediaData,\n  } = useStoryProps(story, isCurrentUserPremium, isDropdownMenuOpen);\n\n  const isLoadedStory = story && 'content' in story;\n  const isChangelog = peerId === storyChangelogUserId;\n  const isUserStory = isUserId(peerId);\n  const isChatStory = !isUserStory;\n  const isChannelStory = isChatStory && isChatChannel(peer as ApiChat);\n  const isOut = isLoadedStory && story.isOut;\n\n  const canPinToProfile = useCurrentOrPrev(\n    isOut ? !story.isInProfile : undefined,\n    true,\n  );\n  const canUnpinFromProfile = useCurrentOrPrev(\n    isOut ? story.isInProfile : undefined,\n    true,\n  );\n  const areViewsExpired = Boolean(\n    isOut && (story!.date + viewersExpirePeriod) < getServerTime(),\n  );\n\n  const forwardSenderTitle = forwardSender ? getPeerTitle(oldLang, forwardSender)\n    : (isLoadedStory && story.forwardInfo?.fromName);\n\n  const canCopyLink = Boolean(\n    isLoadedStory\n    && story.isPublic\n    && !isChangelog\n    && peer?.usernames?.length,\n  );\n\n  const canShare = Boolean(\n    isLoadedStory\n    && story.isPublic\n    && !story.noForwards\n    && !isChangelog\n    && !isCaptionExpanded,\n  );\n\n  const canPlayStory = Boolean(\n    hasFullData && !shouldForcePause && isAppFocused && !isComposerHasFocus && !isCaptionExpanded\n    && !isPausedBySpacebar && !isPausedByLongPress,\n  );\n\n  const duration = isLoadedStory && story.content.video?.duration\n    ? story.content.video.duration\n    : undefined;\n\n  const shouldShowComposer = !(isOut && isUserStory) && !isChangelog && !isChannelStory && !isAccountFrozen;\n  const shouldShowFooter = isLoadedStory && !shouldShowComposer && (isOut || isChannelStory);\n  const headerAnimation = isMobile && withHeaderAnimation ? 'slideFade' : 'none';\n\n  const {\n    shouldRender: shouldRenderSkeleton,\n    transitionClassNames: skeletonTransitionClassNames,\n  } = useShowTransitionDeprecated(!hasFullData);\n\n  const {\n    transitionClassNames: mediaTransitionClassNames,\n  } = useShowTransitionDeprecated(Boolean(fullMediaData));\n\n  const thumbRef = useCanvasBlur(thumbnail, !hasThumb);\n  const previewTransitionClassNames = useMediaTransitionDeprecated(previewBlobUrl);\n\n  const {\n    shouldRender: shouldRenderComposer,\n    transitionClassNames: composerAppearanceAnimationClassNames,\n  } = useShowTransitionDeprecated(shouldShowComposer);\n\n  const {\n    shouldRender: shouldRenderCaptionBackdrop,\n    transitionClassNames: captionBackdropTransitionClassNames,\n  } = useShowTransitionDeprecated(hasText && isCaptionExpanded);\n\n  const { transitionClassNames: appearanceAnimationClassNames } = useShowTransitionDeprecated(true);\n  const {\n    shouldRender: shouldRenderCaption,\n    transitionClassNames: captionAppearanceAnimationClassNames,\n  } = useShowTransitionDeprecated(hasText || hasForwardInfo);\n\n  const isStreamingSupported = useStreaming(videoRef, fullMediaData, PRIMARY_VIDEO_MIME);\n\n  useStoryPreloader(peerId, storyId);\n\n  useEffect(() => {\n    if (storyId) {\n      viewStory({ peerId, storyId });\n    }\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    loadPeerSkippedStories({ peerId });\n  }, [peerId]);\n\n  // Fetching user privacy settings for use in Composer\n  useEffect(() => {\n    const canWrite = isUserId(peerId);\n    if (!isChatExist && canWrite) {\n      fetchChat({ chatId: peerId });\n    }\n  }, [isChatExist, peerId]);\n  useEffect(() => {\n    if (isChatExist && !arePeerSettingsLoaded) {\n      loadPeerSettings({ peerId });\n    }\n  }, [arePeerSettingsLoaded, isChatExist, peerId]);\n\n  const handlePauseStory = useLastCallback(() => {\n    if (isVideo) {\n      videoRef.current?.pause();\n    }\n\n    unmarkStoryPlaying();\n    pauseStory();\n  });\n\n  const handlePlayStory = useLastCallback(() => {\n    if (!canPlayStory) return;\n\n    playStory();\n    if (!isVideo) markStoryPlaying();\n  });\n\n  const handleLongPressStart = useLastCallback(() => {\n    markIsPausedByLongPress();\n  });\n  const handleLongPressEnd = useLastCallback(() => {\n    unmarkIsPausedByLongPress();\n  });\n\n  const handleDropdownMenuOpen = useLastCallback(() => {\n    markDropdownMenuOpen();\n    handlePauseStory();\n  });\n\n  const handleDropdownMenuClose = useLastCallback(() => {\n    unmarkDropdownMenuOpen();\n    handlePlayStory();\n  });\n\n  const {\n    onMouseDown: handleLongPressMouseDown,\n    onMouseUp: handleLongPressMouseUp,\n    onMouseLeave: handleLongPressMouseLeave,\n    onTouchStart: handleLongPressTouchStart,\n    onTouchEnd: handleLongPressTouchEnd,\n  } = useLongPress({\n    onStart: handleLongPressStart,\n    onEnd: handleLongPressEnd,\n  });\n\n  const isUnsupported = useUnsupportedMedia(\n    videoRef,\n    undefined,\n    !isVideo || !fullMediaData || isStreamingSupported,\n  );\n\n  const hasAllData = fullMediaData && (!altMediaHash || altMediaData);\n  // Play story after media has been downloaded\n  useEffect(() => {\n    if (hasAllData && !isUnsupported) handlePlayStory();\n  }, [hasAllData, isUnsupported]);\n\n  useBackgroundMode(unmarkAppFocused, markAppFocused);\n\n  useEffect(() => {\n    if (!hasAllData) return;\n    videoRef.current?.load();\n  }, [hasAllData]);\n\n  useEffect(() => {\n    if (!isLoadedStory || isDeletedStory || areViewsExpired) return;\n\n    if (!isOut && !isChannelStory) return;\n\n    // Refresh counters each time\n    loadStoryViews({ peerId, storyId });\n  }, [isDeletedStory, areViewsExpired, isLoadedStory, peerId, storyId, isOut, isChannelStory]);\n\n  useEffect(() => {\n    if (\n      shouldForcePause || !isAppFocused || isComposerHasFocus\n      || isCaptionExpanded || isPausedBySpacebar || isPausedByLongPress\n    ) {\n      handlePauseStory();\n    } else {\n      handlePlayStory();\n    }\n  }, [\n    handlePlayStory, isAppFocused, isCaptionExpanded, isComposerHasFocus,\n    shouldForcePause, isPausedBySpacebar, isPausedByLongPress,\n  ]);\n\n  useEffect(() => {\n    if (isComposerHasFocus || shouldForcePause || isCaptionExpanded) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (e.keyCode === SPACEBAR_CODE) {\n        e.preventDefault();\n        setIsPausedBySpacebar(!isPausedBySpacebar);\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [isCaptionExpanded, isComposerHasFocus, isPausedBySpacebar, shouldForcePause]);\n\n  // Reset the state of `isPausedBySpacebar` when closing the caption, losing focus by composer or disable forced pause\n  useEffectWithPrevDeps(([\n    prevIsComposerHasFocus,\n    prevIsCaptionExpanded,\n    prevShouldForcePause,\n    prevIsAppFocused,\n    prevIsPausedByLongPress,\n  ]) => {\n    if (\n      !isPausedBySpacebar || isCaptionExpanded || isComposerHasFocus\n      || shouldForcePause || !isAppFocused || isPausedByLongPress\n    ) {\n      return;\n    }\n\n    if (\n      prevIsCaptionExpanded !== isCaptionExpanded\n      || prevIsComposerHasFocus !== isComposerHasFocus\n      || prevShouldForcePause !== shouldForcePause\n      || prevIsAppFocused !== isAppFocused\n      || prevIsPausedByLongPress !== isPausedByLongPress\n    ) {\n      setIsPausedBySpacebar(false);\n    }\n  }, [isComposerHasFocus, isCaptionExpanded, shouldForcePause, isAppFocused, isPausedByLongPress, isPausedBySpacebar]);\n\n  const handleOpenChat = useLastCallback(() => {\n    onClose();\n    openChat({ id: peerId });\n  });\n\n  const handleForwardPeerClick = useLastCallback(() => {\n    onClose();\n    openChat({ id: forwardSender!.id });\n  });\n\n  const handleFromPeerClick = useLastCallback(() => {\n    onClose();\n    openChat({ id: fromPeer!.id });\n  });\n\n  const handleOpenPrevStory = useLastCallback(() => {\n    openPreviousStory();\n  });\n\n  const handleOpenNextStory = useLastCallback(() => {\n    openNextStory();\n  });\n\n  const handleVideoStoryTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    const video = e.currentTarget;\n    if (video.readyState >= VIDEO_MIN_READY_STATE) {\n      markStoryPlaying();\n    } else {\n      unmarkStoryPlaying();\n    }\n    if (duration && round(video.currentTime, 2) >= round(duration, 2)) {\n      handleOpenNextStory();\n    }\n  });\n\n  useEffect(() => {\n    return !getIsAnimating() && !isComposerHasFocus ? captureKeyboardListeners({\n      onRight: handleOpenNextStory,\n      onLeft: handleOpenPrevStory,\n    }) : undefined;\n  }, [getIsAnimating, isComposerHasFocus]);\n\n  const handleCopyStoryLink = useLastCallback(() => {\n    copyStoryLink({ peerId, storyId });\n  });\n\n  const handlePinClick = useLastCallback(() => {\n    toggleStoryInProfile({ peerId, storyId, isInProfile: true });\n  });\n\n  const handleUnpinClick = useLastCallback(() => {\n    toggleStoryInProfile({ peerId, storyId, isInProfile: false });\n  });\n\n  const handleDeleteStoryClick = useLastCallback(() => {\n    onDelete(story!);\n  });\n\n  const handleReportStoryClick = useLastCallback(() => {\n    onReport();\n  });\n\n  const handleForwardClick = useLastCallback(() => {\n    openForwardMenu({ fromChatId: peerId, storyId });\n  });\n\n  const handleInfoPrivacyEdit = useLastCallback(() => {\n    openStoryPrivacyEditor();\n  });\n\n  const handleInfoPrivacyClick = useLastCallback(() => {\n    const visibility = !isLoadedStory || story.isPublic\n      ? undefined\n      : story.isForContacts ? 'contacts' : (story.isForCloseFriends ? 'closeFriends' : 'nobody');\n\n    let message;\n    const myName = getPeerTitle(oldLang, peer);\n    switch (visibility) {\n      case 'nobody':\n        message = oldLang('StorySelectedContactsHint', myName);\n        break;\n      case 'contacts':\n        message = oldLang('StoryContactsHint', myName);\n        break;\n      case 'closeFriends':\n        message = oldLang('StoryCloseFriendsHint', myName);\n        break;\n      default:\n        return;\n    }\n    showNotification({ message });\n  });\n\n  const handleVolumeMuted = useLastCallback(() => {\n    if (noSound) {\n      showNotification({\n        message: oldLang('Story.TooltipVideoHasNoSound'),\n      });\n      return;\n    }\n    // Browser requires explicit user interaction to keep video playing after unmuting\n    videoRef.current!.muted = !videoRef.current!.muted;\n    setStoryViewerMuted({ isMuted: !isMuted });\n  });\n\n  const handleOpenStealthModal = useLastCallback(() => {\n    if (stealthMode.activeUntil && getServerTime() < stealthMode.activeUntil) {\n      const diff = stealthMode.activeUntil - getServerTime();\n      showNotification({\n        title: oldLang('StealthModeOn'),\n        message: oldLang('Story.ToastStealthModeActiveText', formatMediaDuration(diff)),\n        duration: STEALTH_MODE_NOTIFICATION_DURATION,\n      });\n      return;\n    }\n\n    toggleStealthModal({ isOpen: true });\n  });\n\n  const handleDownload = useLastCallback(() => {\n    if (!downloadMediaData) return;\n    download(downloadMediaData, `story-${peerId}-${storyId}.${isVideo ? 'mp4' : 'jpg'}`);\n  });\n\n  useEffect(() => {\n    if (!isDeletedStory) return;\n\n    showNotification({\n      message: oldLang('StoryNotFound'),\n    });\n  }, [oldLang, isDeletedStory]);\n\n  const MenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => {\n      return (\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"tiny\"\n          color=\"translucent-white\"\n          onClick={onTrigger}\n          className={buildClassName(styles.button, isOpen && 'active')}\n          ariaLabel={oldLang('AccDescrOpenMenu2')}\n        >\n          <Icon name=\"more\" />\n        </Button>\n      );\n    };\n  }, [isMobile, oldLang]);\n\n  function renderStoriesTabs() {\n    return (\n      <div className={styles.storyIndicators}>\n        {(isSingleStory ? [storyId] : orderedIds ?? []).map((id) => (\n          <StoryProgress\n            key={`progress-${id}`}\n            isActive={id === story?.id}\n            isVideo={isVideo}\n            isViewed={Boolean(story?.id && ((isPrivateStories || isArchivedStories) ? id > story?.id : id < story?.id))}\n            isPaused={!isStoryPlaying}\n            duration={duration}\n            onImageComplete={handleOpenNextStory}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderStoryPrivacyButton() {\n    if (!isUserStory) return undefined;\n\n    let privacyIcon: IconName = 'channel-filled';\n    const gradient: Record<string, [string, string]> = {\n      'channel-filled': ['#50ABFF', '#007AFF'],\n      'user-filled': ['#C36EFF', '#8B60FA'],\n      'favorite-filled': ['#88D93A', '#30B73B'],\n      'group-filled': ['#FFB743', '#F69A36'],\n    };\n\n    if (isOut) {\n      const { visibility } = (story && 'visibility' in story && story.visibility) || {};\n\n      switch (visibility) {\n        case 'everybody':\n          privacyIcon = 'channel-filled';\n          break;\n        case 'contacts':\n          privacyIcon = 'user-filled';\n          break;\n        case 'closeFriends':\n          privacyIcon = 'favorite-filled';\n          break;\n        case 'nobody':\n          privacyIcon = 'group-filled';\n      }\n    } else {\n      if (!story || !('content' in story) || story.isPublic) {\n        return undefined;\n      }\n\n      privacyIcon = story.isForCloseFriends\n        ? 'favorite-filled'\n        : (story.isForContacts ? 'user-filled' : 'group-filled');\n    }\n\n    return (\n      <div\n        className={buildClassName(styles.visibilityButton, isOut && styles.visibilityButtonSelf)}\n        onClick={isOut ? handleInfoPrivacyEdit : handleInfoPrivacyClick}\n        style={`--color-from: ${gradient[privacyIcon][0]}; --color-to: ${gradient[privacyIcon][1]}`}\n      >\n        <Icon name={privacyIcon} />\n        {isOut && <Icon name=\"next\" />}\n      </div>\n    );\n  }\n\n  function renderSenderInfo() {\n    return (\n      <div className={styles.senderInfo}>\n        <Avatar\n          peer={peer}\n          size=\"tiny\"\n          onClick={handleOpenChat}\n        />\n        <div className={styles.senderMeta}>\n          <span onClick={handleOpenChat} className={styles.senderName}>\n            {renderText(getPeerTitle(oldLang, peer) || '')}\n          </span>\n          <div className={styles.storyMetaRow}>\n            {forwardSenderTitle && (\n              <span\n                className={buildClassName(\n                  styles.storyMeta, styles.forwardHeader, forwardSender && styles.clickable,\n                )}\n                onClick={forwardSender ? handleForwardPeerClick : undefined}\n              >\n                <Icon name=\"loop\" />\n                <span className={styles.headerTitle}>\n                  {renderText(forwardSenderTitle)}\n                </span>\n              </span>\n            )}\n            {fromPeer && (\n              <span\n                className={buildClassName(\n                  styles.storyMeta, styles.fromPeer,\n                )}\n                onClick={handleFromPeerClick}\n              >\n                <Avatar peer={fromPeer} size=\"micro\" />\n                <span className={styles.headerTitle}>\n                  {renderText(getPeerTitle(oldLang, fromPeer) || '')}\n                </span>\n              </span>\n            )}\n            {story && 'date' in story && (\n              <span className={styles.storyMeta}>{formatRelativePastTime(oldLang, serverTime, story.date)}</span>\n            )}\n            {isLoadedStory && story.isEdited && (\n              <span className={styles.storyMeta}>{oldLang('Story.HeaderEdited')}</span>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  function renderSender() {\n    return (\n      <div className={styles.sender}>\n        <Transition activeKey={Number(peerId)} name={headerAnimation} className={styles.senderInfoTransition}>\n          {renderSenderInfo()}\n        </Transition>\n\n        <div className={styles.actions}>\n          {renderStoryPrivacyButton()}\n          {isVideo && (\n            <Button\n              className={styles.button}\n              round\n              ripple={!isMobile}\n              size=\"tiny\"\n              color=\"translucent-white\"\n              disabled={!hasFullData}\n              onClick={handleVolumeMuted}\n              ariaLabel={oldLang('Volume')}\n            >\n              <Icon name={(isMuted || noSound) ? 'speaker-muted-story' : 'speaker-story'} />\n            </Button>\n          )}\n          <DropdownMenu\n            className={styles.buttonMenu}\n            trigger={MenuButton}\n            positionX=\"right\"\n            onOpen={handleDropdownMenuOpen}\n            onClose={handleDropdownMenuClose}\n          >\n            {canCopyLink && <MenuItem icon=\"copy\" onClick={handleCopyStoryLink}>{oldLang('CopyLink')}</MenuItem>}\n            {canPinToProfile && (\n              <MenuItem icon=\"save-story\" onClick={handlePinClick}>\n                {oldLang(isUserStory ? 'StorySave' : 'SaveToPosts')}\n              </MenuItem>\n            )}\n            {canUnpinFromProfile && (\n              <MenuItem icon=\"delete\" onClick={handleUnpinClick}>\n                {oldLang(isUserStory ? 'ArchiveStory' : 'RemoveFromPosts')}\n              </MenuItem>\n            )}\n            {canDownload && (\n              <MenuItem icon=\"download\" disabled={!downloadMediaData} onClick={handleDownload}>\n                {oldLang('lng_media_download')}\n              </MenuItem>\n            )}\n            {!isOut && isUserStory && (\n              <MenuItem icon=\"eye-crossed-outline\" onClick={handleOpenStealthModal}>\n                {oldLang('StealthMode')}\n              </MenuItem>\n            )}\n            {!isOut && <MenuItem icon=\"flag\" onClick={handleReportStoryClick}>{oldLang('lng_report_story')}</MenuItem>}\n            {isOut && (\n              <MenuItem\n                icon=\"delete\"\n                destructive\n                onClick={handleDeleteStoryClick}\n              >{oldLang('Delete')}\n              </MenuItem>\n            )}\n          </DropdownMenu>\n          <Button\n            className={buildClassName(styles.button, styles.closeButton)}\n            round\n            size=\"tiny\"\n            color=\"translucent-white\"\n            ariaLabel={oldLang('Close')}\n            onClick={onClose}\n          >\n            <Icon name=\"close\" />\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  const inputPlaceholder = paidMessagesStars\n    ? lang('ComposerPlaceholderPaidReply', {\n      amount: formatStarsAsIcon(lang, paidMessagesStars, { asFont: true, className: 'placeholder-star-icon' }),\n    }, {\n      withNodes: true,\n    })\n    : oldLang(isChatStory ? 'ReplyToGroupStory' : 'ReplyPrivately');\n\n  return (\n    <div\n      className={buildClassName(styles.slideInner, 'component-theme-dark')}\n      onMouseDown={handleLongPressMouseDown}\n      onMouseUp={handleLongPressMouseUp}\n      onMouseLeave={handleLongPressMouseLeave}\n      onTouchStart={handleLongPressTouchStart}\n      onTouchEnd={handleLongPressTouchEnd}\n    >\n      <div className={buildClassName(styles.storyHeader, appearanceAnimationClassNames)}>\n        {renderStoriesTabs()}\n        {renderSender()}\n      </div>\n\n      <div\n        className={styles.mediaWrapper}\n        style={`width: ${dimensions.width}px; height: ${dimensions.height}px`}\n      >\n        <canvas ref={thumbRef} className={styles.thumbnail} />\n        {previewBlobUrl && (\n          <img\n            key={`preview-${storyId}`}\n            src={previewBlobUrl}\n            draggable={false}\n            alt=\"\"\n            className={buildClassName(styles.media, styles.mediaPreview, previewTransitionClassNames)}\n          />\n        )}\n        {shouldRenderSkeleton && (\n          <Skeleton className={buildClassName(skeletonTransitionClassNames, styles.fullSize)} />\n        )}\n        {!isVideo && fullMediaData && (\n          <img\n            src={fullMediaData}\n            alt=\"\"\n            className={buildClassName(styles.media, mediaTransitionClassNames)}\n            draggable={false}\n          />\n        )}\n        {isVideo && fullMediaData && (\n          <OptimizedVideo\n            ref={videoRef}\n            key={`video-${storyId}`}\n            className={buildClassName(styles.media, mediaTransitionClassNames)}\n            canPlay={isStoryPlaybackRequested}\n            muted={isMuted}\n            width={BASE_STORY_WIDTH}\n            height={BASE_STORY_HEIGHT}\n            draggable={false}\n            playsInline\n            disablePictureInPicture\n            isPriority\n            onPause={unmarkStoryPlaying}\n            onWaiting={unmarkStoryPlaying}\n            disableRemotePlayback\n            onTimeUpdate={handleVideoStoryTimeUpdate}\n          >\n            <source src={fullMediaData} type={PRIMARY_VIDEO_MIME} width=\"720\" />\n            {altMediaData && <source src={altMediaData} type={SECONDARY_VIDEO_MIME} width=\"480\" />}\n          </OptimizedVideo>\n        )}\n\n        {!isPausedByLongPress && !isComposerHasFocus && (\n          <>\n            <button\n              type=\"button\"\n              className={buildClassName(styles.navigate, styles.prev)}\n              onClick={handleOpenPrevStory}\n              aria-label={oldLang('Previous')}\n            />\n            <button\n              type=\"button\"\n              className={buildClassName(styles.navigate, styles.next)}\n              onClick={handleOpenNextStory}\n              aria-label={oldLang('Next')}\n            />\n          </>\n        )}\n        {isLoadedStory && fullMediaData && (\n          <MediaAreaOverlay\n            key={`area-overlay-${storyId}-${peerId}`}\n            story={story}\n            isActive\n            isStoryPlaying={isDropdownMenuOpen}\n          />\n        )}\n        {!isMobile && (\n          <div className={styles.content}>\n            <div className={styles.contentInner}>\n              <Avatar\n                peer={peer}\n                withStory\n                storyViewerMode=\"disabled\"\n              />\n              <div className={styles.name}>{renderText(getPeerTitle(oldLang, peer) || '')}</div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {shouldShowFooter && (\n        <StoryFooter story={story} className={appearanceAnimationClassNames} />\n      )}\n      {shouldRenderCaptionBackdrop && (\n        <div\n          tabIndex={0}\n          role=\"button\"\n          className={buildClassName(styles.captionBackdrop, captionBackdropTransitionClassNames)}\n          onClick={() => foldCaption()}\n          aria-label={oldLang('Close')}\n        />\n      )}\n      {hasText && <div className={buildClassName(styles.captionGradient, captionAppearanceAnimationClassNames)} />}\n      {shouldRenderCaption && (\n        <StoryCaption\n          key={`caption-${storyId}-${peerId}`}\n          story={story as ApiStory}\n          isExpanded={isCaptionExpanded}\n          onExpand={expandCaption}\n          onFold={foldCaption}\n          className={captionAppearanceAnimationClassNames}\n        />\n      )}\n      {shouldRenderComposer && (\n        <Composer\n          type=\"story\"\n          chatId={peerId}\n          threadId={MAIN_THREAD_ID}\n          storyId={storyId}\n          isReady={!isOut}\n          messageListType=\"thread\"\n          isMobile={getIsMobile()}\n          editableInputCssSelector={EDITABLE_STORY_INPUT_CSS_SELECTOR}\n          editableInputId={EDITABLE_STORY_INPUT_ID}\n          inputId=\"story-input-text\"\n          className={buildClassName(styles.composer, composerAppearanceAnimationClassNames)}\n          inputPlaceholder={inputPlaceholder}\n          onForward={canShare ? handleForwardClick : undefined}\n          onFocus={markComposerHasFocus}\n          onBlur={unmarkComposerHasFocus}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, {\n  peerId,\n  storyId,\n  isDeleteModalOpen,\n}): StateProps => {\n  const { appConfig } = global;\n  const user = selectUser(global, peerId);\n  const chat = selectChat(global, peerId);\n  const userFullInfo = selectUserFullInfo(global, peerId);\n  const tabState = selectTabState(global);\n  const {\n    storyViewer: {\n      isMuted,\n      viewModal,\n      isPrivacyModalOpen,\n      isStealthModalOpen,\n      storyList,\n    },\n    forwardMessages: { storyId: forwardedStoryId },\n    premiumModal,\n    safeLinkModalUrl,\n    mapModal,\n    reportModal,\n    giftInfoModal,\n    isPaymentMessageConfirmDialogOpen,\n  } = tabState;\n  const { isOpen: isPremiumModalOpen } = premiumModal || {};\n  const story = selectPeerStory(global, peerId, storyId);\n  const isLoadedStory = story && 'content' in story;\n  const shouldForcePause = Boolean(\n    isPaymentMessageConfirmDialogOpen\n    || viewModal || forwardedStoryId || tabState.reactionPicker?.storyId || reportModal || isPrivacyModalOpen\n    || isPremiumModalOpen || isDeleteModalOpen || safeLinkModalUrl || isStealthModalOpen || mapModal || giftInfoModal,\n  );\n\n  const forwardInfo = isLoadedStory ? story.forwardInfo : undefined;\n  const mediaAreas = isLoadedStory ? story.mediaAreas : undefined;\n  const forwardSenderId = forwardInfo?.fromPeerId\n    || mediaAreas?.find((area): area is ApiMediaAreaChannelPost => area.type === 'channelPost')?.channelId;\n  const forwardSender = forwardSenderId ? selectPeer(global, forwardSenderId) : undefined;\n  const withHeaderAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n  const fromPeer = isLoadedStory && story.fromId ? selectPeer(global, story.fromId) : undefined;\n  const paidMessagesStars = selectPeerPaidMessagesStars(global, peerId);\n  const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n  return {\n    peer: (user || chat)!,\n    forwardSender,\n    fromPeer,\n    story,\n    orderedIds: storyList?.storyIdsByPeerId[peerId],\n    isMuted,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    shouldForcePause,\n    storyChangelogUserId: appConfig!.storyChangelogUserId,\n    viewersExpirePeriod: appConfig!.storyExpirePeriod + appConfig!.storyViewersExpirePeriod,\n    isChatExist: Boolean(chat),\n    arePeerSettingsLoaded: Boolean(userFullInfo?.settings),\n    stealthMode: global.stories.stealthMode,\n    withHeaderAnimation,\n    paidMessagesStars,\n    isAccountFrozen,\n  };\n})(Story));\n","import React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiPeer, ApiPeerStories, ApiTypeStory,\n} from '../../api/types';\nimport type { StoryViewerOrigin } from '../../types';\n\nimport { getStoryMediaHash } from '../../global/helpers';\nimport { getPeerTitle } from '../../global/helpers/peers';\nimport { selectTabState } from '../../global/selectors';\nimport renderText from '../common/helpers/renderText';\n\nimport useMedia from '../../hooks/useMedia';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport MediaAreaOverlay from './mediaArea/MediaAreaOverlay';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  peer?: ApiPeer;\n  peerStories?: ApiPeerStories;\n}\n\ninterface StateProps {\n  lastViewedId?: number;\n  origin?: StoryViewerOrigin;\n  storyIdsForViewer?: number[];\n}\n\nfunction StoryPreview({\n  peer, peerStories, lastViewedId, storyIdsForViewer, origin,\n}: OwnProps & StateProps) {\n  const { openStoryViewer, loadPeerSkippedStories } = getActions();\n  const lang = useOldLang();\n\n  const story = useMemo<ApiTypeStory | undefined>(() => {\n    if (!peerStories) {\n      return undefined;\n    }\n\n    const {\n      orderedIds, lastReadId, byId,\n    } = peerStories;\n    const hasUnreadStories = orderedIds[orderedIds.length - 1] !== lastReadId;\n    const previewIndexId = lastViewedId && storyIdsForViewer?.includes(lastViewedId)\n      ? lastViewedId ?? (hasUnreadStories ? (lastReadId ?? -1) : -1)\n      : -1;\n    const resultId = byId[previewIndexId]?.id || storyIdsForViewer?.[0] || orderedIds[0];\n\n    return byId[resultId];\n  }, [lastViewedId, peerStories, storyIdsForViewer]);\n\n  const isLoaded = story && 'content' in story;\n\n  useEffect(() => {\n    if (story && !isLoaded) {\n      loadPeerSkippedStories({ peerId: story.peerId });\n    }\n  }, [story, isLoaded]);\n\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbUrl = imgBlobUrl || video?.thumbnail?.dataUri;\n\n  if (!peer || !story || 'isDeleted' in story) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={styles.slideInner}\n      onClick={() => { openStoryViewer({ peerId: story.peerId, storyId: story.id, origin }); }}\n    >\n      {thumbUrl && (\n        <img src={thumbUrl} alt=\"\" className={styles.media} draggable={false} />\n      )}\n      {isLoaded && <MediaAreaOverlay story={story} />}\n\n      <div className={styles.content}>\n        <div className={styles.contentInner}>\n          <Avatar\n            peer={peer}\n            withStory\n            storyViewerMode=\"disabled\"\n          />\n          <div className={styles.name}>{renderText(getPeerTitle(lang, peer) || '')}</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { peer }): StateProps => {\n  const {\n    storyViewer: {\n      lastViewedByPeerIds,\n      origin,\n      storyList,\n    },\n  } = selectTabState(global);\n\n  return {\n    lastViewedId: peer?.id ? lastViewedByPeerIds?.[peer.id] : undefined,\n    origin,\n    storyIdsForViewer: peer?.id ? storyList?.storyIdsByPeerId[peer.id] : undefined,\n  };\n})(StoryPreview));\n","import React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiPeerStories, ApiTypeStory } from '../../api/types';\nimport type { RealTouchEvent } from '../../util/captureEvents';\n\nimport { EDITABLE_STORY_INPUT_ID } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { getStoryKey } from '../../global/helpers';\nimport {\n  selectIsStoryViewerOpen,\n  selectPeer,\n  selectTabState,\n} from '../../global/selectors';\nimport { IS_IOS } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\nimport {\n  captureEvents,\n  IOS_SCREEN_EDGE_THRESHOLD,\n  SWIPE_DIRECTION_THRESHOLD,\n  SWIPE_DIRECTION_TOLERANCE,\n} from '../../util/captureEvents';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { clamp } from '../../util/math';\nimport { disableScrolling, enableScrolling } from '../../util/scrollLock';\nimport { calculateOffsetX } from './helpers/dimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useWindowSize from '../../hooks/window/useWindowSize';\nimport useSlideSizes from './hooks/useSlideSizes';\n\nimport Story from './Story';\nimport StoryPreview from './StoryPreview';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  isOpen?: boolean;\n  isDeleteModalOpen?: boolean;\n  onDelete: (story: ApiTypeStory) => void;\n  onReport: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  peerIds: string[];\n  currentPeerId?: string;\n  currentStoryId?: number;\n  byPeerId?: Record<string, ApiPeerStories>;\n  isSinglePeer?: boolean;\n  isSingleStory?: boolean;\n  isPrivate?: boolean;\n  isArchive?: boolean;\n}\n\nconst ACTIVE_SLIDE_VERTICAL_CORRECTION_REM = 1.75;\nconst SWIPE_Y_THRESHOLD = 50;\nconst SCROLL_RELEASE_DELAY = 1500;\n\nenum SwipeDirection {\n  Horizontal,\n  Vertical,\n}\n\nfunction StorySlides({\n  peerIds,\n  currentPeerId,\n  currentStoryId,\n  isOpen,\n  isSinglePeer,\n  isSingleStory,\n  isPrivate,\n  isArchive,\n  byPeerId,\n  isDeleteModalOpen,\n  onDelete,\n  onClose,\n  onReport,\n}: OwnProps & StateProps) {\n  const { stopActiveReaction } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [renderingPeerId, setRenderingPeerId] = useState(currentPeerId);\n  const [renderingStoryId, setRenderingStoryId] = useState(currentStoryId);\n  const prevPeerId = usePreviousDeprecated(currentPeerId);\n  const renderingIsArchive = useCurrentOrPrev(isArchive, true);\n  const renderingIsPrivate = useCurrentOrPrev(isPrivate, true);\n  const renderingIsSinglePeer = useCurrentOrPrev(isSinglePeer, true);\n  const renderingIsSingleStory = useCurrentOrPrev(isSingleStory, true);\n  const slideSizes = useSlideSizes();\n  const { height: windowHeight, width: windowWidth } = useWindowSize();\n  const swipeDirectionRef = useRef<SwipeDirection | undefined>(undefined);\n  const isReleasedRef = useRef(false);\n  const { isMobile } = useAppLayout();\n\n  const rendersRef = useRef<Record<string, { current: HTMLDivElement | null }>>({});\n  const [getIsAnimating, setIsAnimating] = useSignal(false);\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n    shouldBeReplaced: true,\n  });\n\n  function setRef(ref: HTMLDivElement | null, peerId: string) {\n    if (!ref) {\n      return;\n    }\n    if (!rendersRef.current[peerId]) {\n      rendersRef.current[peerId] = { current: ref };\n    } else {\n      rendersRef.current[peerId].current = ref;\n    }\n  }\n\n  const renderingPeerIds = useMemo(() => {\n    if (renderingPeerId && (renderingIsSinglePeer || renderingIsSingleStory)) {\n      return [renderingPeerId];\n    }\n\n    const index = renderingPeerId ? peerIds.indexOf(renderingPeerId) : -1;\n    if (!renderingPeerId || index === -1) {\n      return [];\n    }\n\n    const start = Math.max(index - 4, 0);\n    const end = Math.min(index + 5, peerIds.length);\n\n    return peerIds.slice(start, end);\n  }, [renderingIsSingleStory, renderingIsSinglePeer, renderingPeerId, peerIds]);\n\n  const renderingPeerPosition = useMemo(() => {\n    if (!renderingPeerIds.length || !renderingPeerId) {\n      return -1;\n    }\n\n    return renderingPeerIds.indexOf(renderingPeerId);\n  }, [renderingPeerId, renderingPeerIds]);\n\n  const currentPeerPosition = useMemo(() => {\n    if (!renderingPeerIds.length || !currentPeerId) {\n      return -1;\n    }\n    return renderingPeerIds.indexOf(currentPeerId);\n  }, [currentPeerId, renderingPeerIds]);\n\n  useEffect(() => {\n    if (!isMobile) return;\n\n    // If animation disabled, set rendering peer id to current peer\n    setRenderingPeerId(currentPeerId);\n  }, [currentPeerId, isMobile]);\n\n  // Handling the flipping of stories from a current user\n  useEffect(() => {\n    if (renderingPeerId === currentPeerId && currentStoryId !== renderingStoryId) {\n      setRenderingStoryId(currentStoryId);\n    }\n  }, [currentPeerId, currentStoryId, renderingPeerId, renderingStoryId]);\n\n  useEffect(() => {\n    if (isMobile) return undefined;\n    if (prevPeerId && prevPeerId !== currentPeerId) {\n      setIsAnimating(true);\n    }\n\n    return () => {\n      setIsAnimating(false);\n    };\n  }, [prevPeerId, currentPeerId, setIsAnimating, isMobile]);\n\n  useEffect(() => {\n    return () => {\n      if (!currentStoryId || !currentPeerId) return;\n      stopActiveReaction({\n        containerId: getStoryKey(currentPeerId, currentStoryId),\n      });\n    };\n  }, [currentStoryId, currentPeerId]);\n\n  const slideAmount = currentPeerPosition - renderingPeerPosition;\n  const isBackward = renderingPeerPosition > currentPeerPosition;\n\n  const calculateTransformX = useLastCallback(() => {\n    return peerIds.reduce<Record<string, number>>((transformX, peerId, index) => {\n      if (peerId === renderingPeerId) {\n        transformX[peerId] = calculateOffsetX({\n          scale: slideSizes.scale,\n          slideAmount,\n          isBackward,\n          isActiveSlideSize: isBackward,\n        });\n      } else {\n        let isMoveThroughActiveSlide = false;\n        if (!isBackward && index > 0 && peerIds[index - 1] === renderingPeerId) {\n          isMoveThroughActiveSlide = true;\n        }\n        if (isBackward && index < peerIds.length - 1 && peerIds[index + 1] === renderingPeerId) {\n          isMoveThroughActiveSlide = true;\n        }\n\n        transformX[peerId] = calculateOffsetX({\n          scale: slideSizes.scale,\n          slideAmount,\n          isBackward,\n          isActiveSlideSize: currentPeerId === peerId && !isBackward,\n          isMoveThroughActiveSlide,\n        });\n      }\n\n      return transformX;\n    }, {});\n  });\n\n  useEffect(() => {\n    if (!containerRef.current || !isOpen) {\n      return undefined;\n    }\n\n    let offsetY = 0;\n\n    const getCurrentStoryRef = () => {\n      return renderingPeerId ? rendersRef.current[renderingPeerId]?.current : undefined;\n    };\n\n    const onRelease = (event: MouseEvent | TouchEvent | WheelEvent) => {\n      // This allows to prevent onRelease triggered by debounced wheel event\n      // after onRelease was triggered manually in onDrag\n      if (isReleasedRef.current) {\n        isReleasedRef.current = false;\n        return;\n      }\n      const current = getCurrentStoryRef();\n      if (!current) return;\n\n      if (offsetY < -SWIPE_Y_THRESHOLD) {\n        const composer = document.getElementById(EDITABLE_STORY_INPUT_ID);\n        if (composer) {\n          requestMutation(() => {\n            focusEditableElement(composer);\n          });\n        }\n        return;\n      }\n\n      if (offsetY > SWIPE_Y_THRESHOLD) {\n        onClose();\n        if (event.type === 'wheel') {\n          disableScrolling();\n          setTimeout(enableScrolling, SCROLL_RELEASE_DELAY);\n        }\n      } else {\n        requestMutation(() => {\n          current.style.setProperty('--slide-translate-y', '0px');\n        });\n      }\n    };\n\n    return captureEvents(containerRef.current, {\n      isNotPassive: true,\n      withNativeDrag: true,\n      withWheelDrag: true,\n      excludedClosestSelector: '.Composer',\n      onDrag: (event, captureEvent, {\n        dragOffsetX, dragOffsetY,\n      }) => {\n        if (isReleasedRef.current) return;\n        // Avoid conflicts with swipe-to-back gestures\n        if (IS_IOS && captureEvent.type === 'touchstart') {\n          const { pageX } = (captureEvent as RealTouchEvent).touches[0];\n          if (pageX <= IOS_SCREEN_EDGE_THRESHOLD || pageX >= windowWidth - IOS_SCREEN_EDGE_THRESHOLD) {\n            return;\n          }\n        }\n        if (event.type === 'mousemove') return;\n        const absOffsetX = Math.abs(dragOffsetX);\n        const absOffsetY = Math.abs(dragOffsetY);\n        const current = getCurrentStoryRef();\n        if (!current) return;\n        // If vertical shift is dominant we change only vertical position\n        if (swipeDirectionRef.current === SwipeDirection.Vertical\n          || Math.abs(absOffsetY) > SWIPE_DIRECTION_THRESHOLD || absOffsetY / absOffsetX > SWIPE_DIRECTION_TOLERANCE) {\n          swipeDirectionRef.current = SwipeDirection.Vertical;\n          const limit = windowHeight;\n          offsetY = clamp(dragOffsetY, -limit, limit);\n          if (offsetY > 0) {\n            requestMutation(() => {\n              current.style.setProperty('--slide-translate-y', `${offsetY * (isMobile ? 1 : -1)}px`);\n            });\n          }\n          if (event.type === 'wheel' && Math.abs(offsetY) > SWIPE_Y_THRESHOLD * 2) {\n            onRelease(event);\n            isReleasedRef.current = true;\n          }\n        }\n      },\n      onRelease,\n    });\n  }, [isOpen, onClose, windowWidth, windowHeight, isMobile, renderingPeerId]);\n\n  useLayoutEffect(() => {\n    if (isMobile) return;\n    const transformX = calculateTransformX();\n\n    Object.entries(rendersRef.current).forEach(([peerId, { current }]) => {\n      if (!current) return;\n\n      if (!getIsAnimating()) {\n        current.classList.remove(styles.slideAnimation, styles.slideAnimationToActive, styles.slideAnimationFromActive);\n        current.style.setProperty('--slide-translate-x', '0px');\n        current.style.setProperty('--slide-translate-y', '0px');\n        current.style.setProperty('--slide-translate-scale', '1');\n        current.style.setProperty('--slide-content-scale', String(slideSizes.toActiveScale));\n\n        return;\n      }\n\n      const getScale = () => {\n        if (currentPeerId === peerId) {\n          return String(slideSizes.toActiveScale);\n        }\n        if (peerId === renderingPeerId) {\n          return String(slideSizes.fromActiveScale);\n        }\n        return '1';\n      };\n\n      let offsetY = 0;\n      if (peerId === renderingPeerId) {\n        offsetY = -ACTIVE_SLIDE_VERTICAL_CORRECTION_REM * slideSizes.fromActiveScale;\n        current.classList.add(styles.slideAnimationFromActive);\n      }\n      if (peerId === currentPeerId) {\n        offsetY = ACTIVE_SLIDE_VERTICAL_CORRECTION_REM;\n        current.classList.add(styles.slideAnimationToActive);\n      }\n\n      current.classList.add(styles.slideAnimation);\n      current.style.setProperty('--slide-translate-x', `${transformX[peerId] || 0}px`);\n      current.style.setProperty('--slide-translate-y', `${offsetY}rem`);\n      current.style.setProperty('--slide-translate-scale', getScale());\n    });\n  }, [currentPeerId, getIsAnimating, renderingPeerId, slideSizes, isMobile]);\n\n  const handleTransitionEnd = useLastCallback((event: React.TransitionEvent<HTMLDivElement>) => {\n    // It is `target` that is needed here, not `currentTarget`\n    const target = event.target as HTMLDivElement | null;\n\n    if (!target || !target.classList.contains(styles.activeSlide)) return;\n\n    if (renderingPeerId !== currentPeerId) {\n      setRenderingPeerId(currentPeerId);\n      setRenderingStoryId(currentStoryId);\n    } else if (currentStoryId !== renderingStoryId) {\n      setRenderingStoryId(currentStoryId);\n    }\n    setIsAnimating(false);\n  });\n\n  if (isMobile) {\n    return (\n      <div className={styles.wrapper} ref={containerRef}>\n        <div\n          className={styles.mobileSlide}\n          ref={(ref) => setRef(ref, renderingPeerId!)}\n        >\n          <Story\n            peerId={renderingPeerId!}\n            storyId={renderingStoryId!}\n            onDelete={onDelete}\n            dimensions={slideSizes.activeSlide}\n            isPrivateStories={renderingIsPrivate}\n            isArchivedStories={renderingIsArchive}\n            isDeleteModalOpen={isDeleteModalOpen}\n            isSingleStory={isSingleStory}\n            getIsAnimating={getIsAnimating}\n            onClose={onClose}\n            onReport={onReport}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderStoryPreview(peerId: string, index: number, position: number) {\n    const style = buildStyle(\n      `width: ${slideSizes.slide.width}px`,\n      `height: ${slideSizes.slide.height}px`,\n    );\n    const className = buildClassName(\n      styles.slide,\n      styles.slidePreview,\n      `slide-${position}`,\n    );\n\n    return (\n      <div\n        key={peerId}\n        ref={(ref) => setRef(ref, peerId)}\n        className={className}\n        style={style}\n      >\n        <StoryPreview\n          peer={selectPeer(getGlobal(), peerId)}\n          peerStories={byPeerId?.[peerId]}\n        />\n      </div>\n    );\n  }\n\n  function renderStory(peerId: string) {\n    const style = isMobile ? undefined : buildStyle(\n      `width: ${slideSizes.activeSlide.width}px`,\n      `--slide-media-height: ${slideSizes.activeSlide.height}px`,\n    );\n\n    return (\n      <div\n        key={peerId}\n        ref={(ref) => setRef(ref, peerId)}\n        className={buildClassName(styles.slide, styles.activeSlide)}\n        style={style}\n      >\n        <Story\n          peerId={peerId}\n          storyId={renderingStoryId!}\n          onDelete={onDelete}\n          dimensions={slideSizes.activeSlide}\n          isPrivateStories={renderingIsPrivate}\n          isArchivedStories={renderingIsArchive}\n          isDeleteModalOpen={isDeleteModalOpen}\n          isSingleStory={isSingleStory}\n          getIsAnimating={getIsAnimating}\n          onClose={onClose}\n          onReport={onReport}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={styles.wrapper}\n      ref={containerRef}\n      style={`--story-viewer-scale: ${slideSizes.scale}`}\n      onTransitionEnd={handleTransitionEnd}\n    >\n      <div className={styles.fullSize} onClick={onClose} />\n      {renderingPeerIds.length > 1 && (\n        <div className={styles.backdropNonInteractive} style={`height: ${slideSizes.slide.height}px`} />\n      )}\n      {renderingPeerIds.map((peerId, index) => {\n        if (peerId === renderingPeerId) {\n          return renderStory(renderingPeerId);\n        }\n\n        return renderStoryPreview(peerId, index, index - renderingPeerPosition);\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    storyViewer: {\n      peerId: currentPeerId, storyId: currentStoryId, isSinglePeer, isSingleStory, isPrivate, isArchive, storyList,\n    },\n  } = selectTabState(global);\n  const { byPeerId, orderedPeerIds: { active } } = global.stories;\n\n  return {\n    byPeerId,\n    peerIds: storyList?.peerIds ?? active,\n    currentPeerId,\n    currentStoryId,\n    isSinglePeer,\n    isSingleStory,\n    isPrivate,\n    isArchive,\n  };\n}, (global) => selectIsStoryViewerOpen(global))(StorySlides));\n","import { useState } from '../lib/teact/teact';\n\nimport useLastCallback from './useLastCallback';\n\nconst THRESHOLD = 5;\n\nexport default function useScrolledState(threshold = THRESHOLD) {\n  const [isAtBeginning, setIsAtBeginning] = useState(true);\n  const [isAtEnd, setIsAtEnd] = useState(true);\n\n  const handleScroll = useLastCallback((e: React.UIEvent<HTMLElement>) => {\n    const { scrollHeight, scrollTop, clientHeight } = e.target as HTMLElement;\n\n    setIsAtBeginning(scrollTop < threshold);\n    setIsAtEnd(scrollHeight - scrollTop - clientHeight < threshold);\n  });\n\n  return { isAtBeginning, isAtEnd, handleScroll };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"views-list\":\"gpDY8bos\",\"viewsList\":\"gpDY8bos\",\"views-list-loading\":\"vuRAfQ5v\",\"viewsListLoading\":\"vuRAfQ5v\",\"info\":\"AOSUIChK\",\"centeredInfo\":\"oGLhkkS7\",\"view-reaction\":\"MLaabS6n\",\"viewReaction\":\"MLaabS6n\",\"header\":\"d3N2bktu\",\"content\":\"QmRA3HZK\",\"top-button\":\"Dkv8GAxf\",\"topButton\":\"Dkv8GAxf\",\"contact-filter\":\"YpB_9VxE\",\"contactFilter\":\"YpB_9VxE\",\"selected\":\"DoUlpdZJ\",\"sort\":\"axDpgq9G\",\"sort-button\":\"Bm5VA66f\",\"sortButton\":\"Bm5VA66f\",\"icon-sort\":\"YVQiH93R\",\"iconSort\":\"YVQiH93R\",\"icon-down\":\"NXP9aMD0\",\"iconDown\":\"NXP9aMD0\",\"search\":\"QQQqBLK6\",\"bottom-info\":\"_CSv6suH\",\"bottomInfo\":\"_CSv6suH\",\"scrolled\":\"RYQ0liYe\",\"footer\":\"dUK7rP37\",\"closeButton\":\"abPzLiCH\",\"opacity-fade-in\":\"cX8oY3zb\",\"opacityFadeIn\":\"cX8oY3zb\",\"fadeIn\":\"Sx_aeh1o\",\"blocked\":\"L82sciL8\",\"check\":\"UqGBKwjg\",\"menuBubble\":\"dRqemuTA\",\"with-colored-status\":\"GQ96fta9\",\"withColoredStatus\":\"GQ96fta9\"};","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiAvailableReaction, ApiPeer, ApiTypeStoryView, ApiUser,\n} from '../../api/types';\nimport type { IconName } from '../../types/icons';\n\nimport { getUserFullName, isUserId } from '../../global/helpers';\nimport { selectPeer } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dates/dateFormat';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport GroupChatInfo from '../common/GroupChatInfo';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ReactionStaticEmoji from '../common/reactions/ReactionStaticEmoji';\nimport ListItem, { type MenuItemContextAction } from '../ui/ListItem';\n\nimport styles from './StoryViewModal.module.scss';\n\ntype OwnProps = {\n  storyView: ApiTypeStoryView;\n};\n\ntype StateProps = {\n  peer?: ApiPeer;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst CLOSE_ANIMATION_DURATION = 100;\nconst DEFAULT_REACTION_SIZE = 1.5 * REM;\nconst BULLET = '\\u2022';\n\nconst StoryView = ({\n  storyView,\n  peer,\n  availableReactions,\n}: OwnProps & StateProps) => {\n  const {\n    openChat,\n    closeStoryViewer,\n    unblockUser,\n    blockUser,\n    deleteContact,\n    updateStoryView,\n    focusMessage,\n    openStoryViewer,\n    closeStoryViewModal,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleClick = useLastCallback(() => {\n    const { type } = storyView;\n\n    if (type === 'repost') {\n      closeStoryViewModal();\n      openStoryViewer({\n        peerId: storyView.peerId,\n        storyId: storyView.storyId,\n      });\n      return;\n    }\n\n    closeStoryViewer();\n\n    setTimeout(() => {\n      if (type === 'user') {\n        openChat({ id: storyView.peerId });\n      } else if (type === 'forward') {\n        focusMessage({ chatId: storyView.peerId, messageId: storyView.messageId });\n      }\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const contextActions = useMemo(() => {\n    if (!isUserId(storyView.peerId)) return undefined;\n    const { peerId, areStoriesBlocked, isUserBlocked } = storyView;\n    const user = peer as ApiUser;\n    const { isContact } = user || {};\n    const fullName = getUserFullName(user);\n\n    const actions: MenuItemContextAction[] = [];\n\n    if (!isUserBlocked) {\n      if (!areStoriesBlocked) {\n        actions.push({\n          handler: () => {\n            blockUser({ userId: peerId, isOnlyStories: true });\n            updateStoryView({ userId: peerId, areStoriesBlocked: true });\n          },\n          title: lang('StoryHideFrom', fullName),\n          icon: 'hand-stop',\n        });\n      } else {\n        actions.push({\n          handler: () => {\n            unblockUser({ userId: peerId, isOnlyStories: true });\n            updateStoryView({ userId: peerId, areStoriesBlocked: false });\n          },\n          title: lang('StoryShowBackTo', fullName),\n          icon: 'play-story',\n        });\n      }\n    }\n\n    if (isContact) {\n      actions.push({\n        handler: () => {\n          deleteContact({ userId: peerId });\n        },\n        title: lang('DeleteContact'),\n        icon: 'delete-user',\n        destructive: true,\n      });\n    } else {\n      actions.push({\n        handler: () => {\n          if (isUserBlocked) {\n            unblockUser({ userId: peerId });\n            updateStoryView({ userId: peerId, isUserBlocked: false });\n          } else {\n            blockUser({ userId: peerId });\n            updateStoryView({ userId: peerId, isUserBlocked: true });\n          }\n        },\n        title: lang(isUserBlocked ? 'Unblock' : 'BlockUser'),\n        icon: isUserBlocked ? 'user' : 'delete-user',\n        destructive: !isUserBlocked,\n      });\n    }\n\n    return actions;\n  }, [lang, storyView, peer]);\n\n  const statusIcon: IconName = storyView.type === 'user' ? 'message-read'\n    : storyView.type === 'forward' ? 'forward' : 'loop';\n  const shouldColorStatus = storyView.type === 'forward' || storyView.type === 'repost';\n\n  const status = useMemo(() => {\n    const isModified = storyView.type === 'repost' && storyView.story.forwardInfo?.isModified;\n    const parts = [formatDateAtTime(lang, storyView.date * 1000)];\n    if (isModified) {\n      parts.push(lang('lng_edited'));\n    }\n\n    return parts.join(` ${BULLET} `);\n  }, [lang, storyView]);\n\n  return (\n    <ListItem\n      key={storyView.peerId}\n      className={buildClassName(\n        'chat-item-clickable small-icon',\n        styles.opacityFadeIn,\n        (storyView.isUserBlocked || storyView.areStoriesBlocked) && styles.blocked,\n      )}\n      onClick={handleClick}\n      rightElement={storyView.type === 'user' && storyView.reaction ? (\n        <ReactionStaticEmoji\n          reaction={storyView.reaction}\n          className={styles.viewReaction}\n          size={DEFAULT_REACTION_SIZE}\n          availableReactions={availableReactions}\n          withIconHeart\n        />\n      ) : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      menuBubbleClassName={styles.menuBubble}\n    >\n      {isUserId(storyView.peerId) ? (\n        <PrivateChatInfo\n          className={buildClassName(shouldColorStatus && styles.withColoredStatus)}\n          userId={storyView.peerId}\n          noStatusOrTyping\n          status={status}\n          statusIcon={statusIcon}\n          withStory\n          forceShowSelf\n        />\n      ) : (\n        <GroupChatInfo\n          className={buildClassName(shouldColorStatus && styles.withColoredStatus)}\n          chatId={storyView.peerId}\n          status={status}\n          statusIcon={statusIcon}\n          withStory\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { storyView }) => {\n  const peer = selectPeer(global, storyView.peerId);\n\n  return {\n    peer,\n    availableReactions: global.reactions.availableReactions,\n  };\n})(StoryView));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiStory, ApiTypeStoryView } from '../../api/types';\n\nimport {\n  STORY_MIN_REACTIONS_SORT,\n  STORY_VIEWS_MIN_CONTACTS_FILTER,\n  STORY_VIEWS_MIN_SEARCH,\n} from '../../config';\nimport {\n  selectIsCurrentUserPremium,\n  selectPeerStory,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTime } from '../../util/serverTime';\nimport renderText from '../common/helpers/renderText';\n\nimport useDebouncedCallback from '../../hooks/useDebouncedCallback';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useScrolledState from '../../hooks/useScrolledState';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport ListItem from '../ui/ListItem';\nimport MenuItem from '../ui/MenuItem';\nimport Modal from '../ui/Modal';\nimport PlaceholderChatInfo from '../ui/placeholder/PlaceholderChatInfo';\nimport SearchInput from '../ui/SearchInput';\nimport StoryView from './StoryView';\n\nimport styles from './StoryViewModal.module.scss';\n\ninterface StateProps {\n  story?: ApiStory;\n  isLoading?: boolean;\n  views?: ApiTypeStoryView[];\n  nextOffset?: string;\n  viewersExpirePeriod: number;\n  isCurrentUserPremium?: boolean;\n}\n\nconst REFETCH_DEBOUNCE = 250;\n\nfunction StoryViewModal({\n  story,\n  viewersExpirePeriod,\n  views,\n  nextOffset,\n  isLoading,\n  isCurrentUserPremium,\n}: StateProps) {\n  const {\n    loadStoryViewList, closeStoryViewModal, clearStoryViews,\n  } = getActions();\n\n  const [areJustContacts, markJustContacts, unmarkJustContacts] = useFlag(false);\n  const [areReactionsFirst, markReactionsFirst, unmarkReactionsFirst] = useFlag(true);\n  const [query, setQuery] = useState('');\n\n  const lang = useOldLang();\n\n  const isOpen = Boolean(story);\n  const isExpired = Boolean(story?.date) && (story!.date + viewersExpirePeriod) < getServerTime();\n  const { viewsCount = 0, reactionsCount = 0 } = story?.views || {};\n\n  const shouldShowJustContacts = story?.isPublic && viewsCount > STORY_VIEWS_MIN_CONTACTS_FILTER;\n  const shouldShowSortByReactions = reactionsCount > STORY_MIN_REACTIONS_SORT;\n  const shouldShowSearch = viewsCount > STORY_VIEWS_MIN_SEARCH;\n  const hasHeader = shouldShowJustContacts || shouldShowSortByReactions || shouldShowSearch;\n\n  useEffect(() => {\n    if (!isOpen) {\n      setQuery('');\n      unmarkJustContacts();\n      markReactionsFirst();\n    }\n  }, [isOpen]);\n\n  const refetchViews = useDebouncedCallback(() => {\n    clearStoryViews({ isLoading: true });\n  }, [], REFETCH_DEBOUNCE, true);\n\n  useEffect(() => {\n    refetchViews();\n  }, [areJustContacts, areReactionsFirst, query, refetchViews]);\n\n  const sortedViews = useMemo(() => {\n    return views?.sort(prepareComparator(areReactionsFirst));\n  }, [areReactionsFirst, views]);\n\n  const placeholderCount = !sortedViews?.length ? Math.min(viewsCount, 8) : 1;\n\n  const notAllAvailable = Boolean(sortedViews?.length) && sortedViews!.length < viewsCount && isExpired;\n\n  const handleLoadMore = useLastCallback(() => {\n    if (!story?.id || nextOffset === undefined) return;\n    loadStoryViewList({\n      peerId: story.peerId,\n      storyId: story.id,\n      offset: nextOffset,\n      areReactionsFirst: areReactionsFirst || undefined,\n      areJustContacts: areJustContacts || undefined,\n      query,\n    });\n  });\n\n  const { handleScroll, isAtBeginning } = useScrolledState();\n\n  const handleClose = useLastCallback(() => {\n    closeStoryViewModal();\n  });\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        fluid\n        size=\"tiny\"\n        color=\"translucent\"\n        className={buildClassName(!isMenuOpen && 'active', styles.sortButton, styles.topButton)}\n        faded={isMenuOpen}\n        onClick={onTrigger}\n        ariaLabel={lang('SortBy')}\n      >\n        <Icon name={areReactionsFirst ? 'heart-outline' : 'recent'} className={styles.iconSort} />\n        <Icon name=\"down\" className={styles.iconDown} />\n      </Button>\n    );\n  }, [areReactionsFirst, lang]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={handleClose}\n      className=\"component-theme-dark\"\n      contentClassName={styles.viewsList}\n      isSlim\n    >\n      {hasHeader && (\n        <div className={styles.header}>\n          {shouldShowJustContacts && (\n            <div className={styles.contactFilter}>\n              <Button\n                className={buildClassName(!areJustContacts && styles.selected, styles.topButton)}\n                size=\"tiny\"\n                color=\"translucent-white\"\n                fluid\n                onClick={unmarkJustContacts}\n              >\n                {lang('AllViewers')}\n              </Button>\n              <Button\n                className={buildClassName(areJustContacts && styles.selected, styles.topButton)}\n                size=\"tiny\"\n                color=\"translucent-white\"\n                fluid\n                onClick={markJustContacts}\n              >\n                {lang('Contacts')}\n              </Button>\n            </div>\n          )}\n          {shouldShowSortByReactions && (\n            <DropdownMenu\n              className={styles.sort}\n              trigger={MoreMenuButton}\n              positionX=\"right\"\n            >\n              <MenuItem icon=\"heart-outline\" onClick={markReactionsFirst}>\n                {lang('SortByReactions')}\n                {areReactionsFirst && (\n                  <Icon name=\"check\" className={styles.check} />\n                )}\n              </MenuItem>\n              <MenuItem icon=\"recent\" onClick={unmarkReactionsFirst}>\n                {lang('SortByTime')}\n                {!areReactionsFirst && (\n                  <Icon name=\"check\" className={styles.check} />\n                )}\n              </MenuItem>\n            </DropdownMenu>\n          )}\n          {shouldShowSearch && (\n            <SearchInput className={styles.search} value={query} onChange={setQuery} />\n          )}\n        </div>\n      )}\n      <div\n        className={buildClassName(styles.content, !isAtBeginning && styles.topScrolled, 'custom-scroll')}\n        onScroll={handleScroll}\n      >\n        {isExpired && !isLoading && !query && Boolean(!sortedViews?.length) && (\n          <div className={buildClassName(styles.info, styles.centeredInfo)}>\n            {renderText(\n              lang(isCurrentUserPremium ? 'ServerErrorViewers' : 'ExpiredViewsStub'),\n              ['simple_markdown', 'emoji'],\n            )}\n          </div>\n        )}\n        {!isLoading && Boolean(query.length) && !sortedViews?.length && (\n          <div className={styles.info}>\n            {lang('Story.ViewList.EmptyTextSearch')}\n          </div>\n        )}\n        <InfiniteScroll\n          items={sortedViews}\n          onLoadMore={handleLoadMore}\n        >\n          {sortedViews?.map((view) => {\n            const additionalKeyId = view.type === 'forward' ? view.messageId\n              : view.type === 'repost' ? view.storyId : 'user';\n            return (\n              <StoryView key={`${view.peerId}-${view.date}-${additionalKeyId}`} storyView={view} />\n            );\n          })}\n          {isLoading && Array.from({ length: placeholderCount }).map((_, i) => (\n            <ListItem\n              // eslint-disable-next-line react/no-array-index-key\n              key={`placeholder-${i}`}\n              className=\"chat-item-clickable contact-list-item scroll-item small-icon\"\n              disabled\n            >\n              <PlaceholderChatInfo />\n            </ListItem>\n          ))}\n          {notAllAvailable && (\n            <div key=\"not-all-available\" className={buildClassName(styles.info, styles.bottomInfo)}>\n              {lang('Story.ViewList.NotFullyRecorded')}\n            </div>\n          )}\n        </InfiniteScroll>\n      </div>\n      <div className={buildClassName(styles.footer, 'dialog-buttons')}>\n        <Button\n          className={buildClassName('confirm-dialog-button', styles.close)}\n          isText\n          onClick={handleClose}\n        >\n          {lang('Close')}\n        </Button>\n      </div>\n    </Modal>\n  );\n}\n\nfunction prepareComparator(areReactionsFirst?: boolean) {\n  return (a: ApiTypeStoryView, b: ApiTypeStoryView) => {\n    if (areReactionsFirst) {\n      const reactionA = a.type === 'user' && a.reaction;\n      const reactionB = b.type === 'user' && b.reaction;\n      if (reactionA && !reactionB) {\n        return -1;\n      }\n      if (!reactionA && reactionB) {\n        return 1;\n      }\n    }\n\n    return b.date - a.date;\n  };\n}\n\nexport default memo(withGlobal((global) => {\n  const { appConfig } = global;\n  const { storyViewer: { viewModal } } = selectTabState(global);\n  const {\n    storyId, views, nextOffset, isLoading,\n  } = viewModal || {};\n  const story = storyId ? selectPeerStory(global, global.currentUserId!, storyId) : undefined;\n\n  return {\n    storyId,\n    views,\n    viewersExpirePeriod: appConfig!.storyExpirePeriod + appConfig!.storyViewersExpirePeriod,\n    story: story && 'content' in story ? story : undefined,\n    nextOffset,\n    isLoading,\n    availableReactions: global.reactions.availableReactions,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n  };\n})(StoryViewModal));\n","import React, {\n  beginHeavyAnimation,\n  memo, useCallback, useEffect, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiTypeStory } from '../../api/types';\nimport type { StoryViewerOrigin } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport {\n  selectIsStoryViewerOpen,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectTabState,\n} from '../../global/selectors';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport { animateClosing, animateOpening } from './helpers/ghostAnimation';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport { dispatchPriorityPlaybackEvent } from '../../hooks/usePriorityPlaybackCheck';\nimport useSlideSizes from './hooks/useSlideSizes';\nimport useStoryProps from './hooks/useStoryProps';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport ShowTransition from '../ui/ShowTransition';\nimport StealthModeModal from './StealthModeModal';\nimport StoryDeleteConfirmModal from './StoryDeleteConfirmModal';\nimport StorySettings from './StorySettings';\nimport StorySlides from './StorySlides';\nimport StoryViewModal from './StoryViewModal';\n\nimport styles from './StoryViewer.module.scss';\n\nconst ANIMATION_DURATION = 250;\n\ninterface StateProps {\n  isOpen: boolean;\n  peerId: string;\n  storyId?: number;\n  story?: ApiTypeStory;\n  origin?: StoryViewerOrigin;\n  shouldSkipHistoryAnimations?: boolean;\n  withAnimation?: boolean;\n  isPrivacyModalOpen?: boolean;\n}\n\nfunction StoryViewer({\n  isOpen,\n  peerId,\n  storyId,\n  story,\n  origin,\n  shouldSkipHistoryAnimations,\n  withAnimation,\n  isPrivacyModalOpen,\n}: StateProps) {\n  const { closeStoryViewer, closeStoryPrivacyEditor, reportStory } = getActions();\n\n  const lang = useOldLang();\n  const [storyToDelete, setStoryToDelete] = useState<ApiTypeStory | undefined>(undefined);\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag(false);\n\n  const { bestImageData, thumbnail } = useStoryProps(story);\n  const slideSizes = useSlideSizes();\n  const isPrevOpen = usePreviousDeprecated(isOpen);\n  const prevBestImageData = usePreviousDeprecated(bestImageData);\n  const prevPeerId = usePreviousDeprecated(peerId);\n  const prevOrigin = usePreviousDeprecated(origin);\n  const isGhostAnimation = Boolean(withAnimation && !shouldSkipHistoryAnimations);\n\n  useEffect(() => {\n    if (!isOpen) {\n      setStoryToDelete(undefined);\n      closeDeleteModal();\n    }\n  }, [isOpen]);\n\n  useEffect(() => {\n    if (!isOpen) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n    const stopPriorityPlayback = dispatchPriorityPlaybackEvent();\n\n    return () => {\n      enableDirectTextInput();\n      stopPriorityPlayback();\n    };\n  }, [isOpen]);\n\n  const handleClose = useCallback(() => {\n    closeStoryViewer();\n  }, [closeStoryViewer]);\n\n  const handleOpenDeleteModal = useLastCallback((s: ApiTypeStory) => {\n    setStoryToDelete(s);\n    openDeleteModal();\n  });\n\n  const handleCloseDeleteModal = useLastCallback(() => {\n    closeDeleteModal();\n    setStoryToDelete(undefined);\n  });\n\n  const openMessageReport = useLastCallback(() => {\n    if (!storyId) return;\n    reportStory({ storyId, peerId });\n  });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(() => {\n    handleClose();\n  }) : undefined), [handleClose, isOpen]);\n\n  useEffect(() => {\n    if (isGhostAnimation && !isPrevOpen && isOpen && peerId && thumbnail && origin !== undefined) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(peerId, origin, thumbnail, bestImageData, slideSizes.activeSlide);\n    }\n    if (isGhostAnimation && isPrevOpen && !isOpen && prevPeerId && prevBestImageData && prevOrigin !== undefined) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(prevPeerId, prevOrigin, prevBestImageData);\n    }\n  }, [\n    isGhostAnimation,\n    bestImageData,\n    prevBestImageData,\n    isOpen,\n    isPrevOpen,\n    slideSizes.activeSlide,\n    thumbnail,\n    peerId,\n    prevPeerId,\n    origin,\n    prevOrigin,\n  ]);\n\n  return (\n    <ShowTransition\n      id=\"StoryViewer\"\n      className={styles.root}\n      isOpen={isOpen}\n      shouldAnimateFirstRender\n      noCloseTransition={shouldSkipHistoryAnimations}\n    >\n      <div className={styles.backdrop} onClick={handleClose} />\n      <Button\n        className={styles.close}\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <Icon name=\"close\" />\n      </Button>\n\n      <StorySlides\n        isOpen={isOpen}\n        isDeleteModalOpen={isDeleteModalOpen}\n        onReport={openMessageReport}\n        onClose={handleClose}\n        onDelete={handleOpenDeleteModal}\n      />\n\n      <StoryDeleteConfirmModal\n        isOpen={isDeleteModalOpen}\n        story={storyToDelete}\n        onClose={handleCloseDeleteModal}\n      />\n      <StoryViewModal />\n      <StealthModeModal />\n      <StorySettings isOpen={isPrivacyModalOpen} onClose={closeStoryPrivacyEditor} />\n    </ShowTransition>\n  );\n}\n\nexport default memo(withGlobal((global): StateProps => {\n  const {\n    shouldSkipHistoryAnimations, storyViewer: {\n      storyId, peerId, isPrivacyModalOpen, origin,\n    },\n  } = selectTabState(global);\n  const story = peerId && storyId ? selectPeerStory(global, peerId, storyId) : undefined;\n  const withAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n  return {\n    isOpen: selectIsStoryViewerOpen(global),\n    shouldSkipHistoryAnimations,\n    peerId: peerId!,\n    storyId,\n    story,\n    origin,\n    withAnimation,\n    isPrivacyModalOpen,\n  };\n})(StoryViewer));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiTopic } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ThreadId } from '../../../types';\n\nimport { PEER_PICKER_ITEM_HEIGHT_PX } from '../../../config';\nimport {\n  getCanPostInChat, getGroupStatus, getUserStatus, isUserOnline,\n} from '../../../global/helpers';\nimport { isApiPeerChat } from '../../../global/helpers/peers';\nimport { selectPeer, selectTopics, selectUserStatus } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../helpers/mediaDimensions';\nimport renderText from '../helpers/renderText';\n\nimport useSelector from '../../../hooks/data/useSelector';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useInputFocusOnOpen from '../../../hooks/useInputFocusOnOpen';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport Loading from '../../ui/Loading';\nimport Modal from '../../ui/Modal';\nimport Transition from '../../ui/Transition';\nimport Avatar from '../Avatar';\nimport FullNameTitle from '../FullNameTitle';\nimport Icon from '../icons/Icon';\nimport TopicIcon from '../TopicIcon';\nimport PickerItem from './PickerItem';\n\nimport './ChatOrUserPicker.scss';\n\nexport type OwnProps = {\n  currentUserId?: string;\n  chatOrUserIds: string[];\n  isOpen: boolean;\n  searchPlaceholder: string;\n  search: string;\n  className?: string;\n  loadMore?: NoneToVoidFunction;\n  onSearchChange: (search: string) => void;\n  onSelectChatOrUser: (chatOrUserId: string, threadId?: ThreadId) => void;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  isLowStackPriority?: boolean;\n};\n\nconst CHAT_LIST_SLIDE = 0;\nconst TOPIC_LIST_SLIDE = 1;\nconst TOPIC_ICON_SIZE = 2.75 * REM;\nconst ITEM_CLASS_NAME = 'ChatOrUserPicker-item';\nconst TOPIC_ITEM_HEIGHT_PX = 56;\n\nconst ChatOrUserPicker: FC<OwnProps> = ({\n  isOpen,\n  currentUserId,\n  chatOrUserIds,\n  search,\n  searchPlaceholder,\n  className,\n  loadMore,\n  onSearchChange,\n  onSelectChatOrUser,\n  onClose,\n  onCloseAnimationEnd,\n  isLowStackPriority,\n}) => {\n  const { loadTopics } = getActions();\n\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const topicContainerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const searchRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const topicSearchRef = useRef<HTMLInputElement>(null);\n  const [viewportIds, getMore] = useInfiniteScroll(loadMore, chatOrUserIds, Boolean(search));\n  const [forumId, setForumId] = useState<string | undefined>(undefined);\n  const [topicSearch, setTopicSearch] = useState<string>('');\n  const activeKey = forumId ? TOPIC_LIST_SLIDE : CHAT_LIST_SLIDE;\n  const viewportOffset = chatOrUserIds!.indexOf(viewportIds![0]);\n\n  const resetSearch = useLastCallback(() => {\n    onSearchChange('');\n  });\n  useInputFocusOnOpen(searchRef, isOpen && activeKey === CHAT_LIST_SLIDE, resetSearch);\n  useInputFocusOnOpen(topicSearchRef, isOpen && activeKey === TOPIC_LIST_SLIDE);\n\n  const selectTopicsById = useLastCallback((global: GlobalState) => {\n    if (!forumId) {\n      return undefined;\n    }\n\n    return selectTopics(global, forumId);\n  });\n\n  const forumTopicsById = useSelector(selectTopicsById);\n\n  const [topicIds, topics] = useMemo(() => {\n    const global = getGlobal();\n    const chatsById = global.chats.byId;\n    const chatFullInfoById = global.chats.fullInfoById;\n\n    const chat = chatsById[forumId!];\n\n    if (!chat || !forumTopicsById) {\n      return [undefined, undefined];\n    }\n\n    const searchTitle = topicSearch.toLowerCase();\n\n    const result = forumTopicsById\n      ? Object.values(forumTopicsById).reduce((acc, topic) => {\n        if (\n          getCanPostInChat(chat, topic, undefined, chatFullInfoById[forumId!])\n          && (!searchTitle || topic.title.toLowerCase().includes(searchTitle))\n        ) {\n          acc[topic.id] = topic;\n        }\n\n        return acc;\n      }, {} as Record<number, ApiTopic>)\n      : forumTopicsById;\n\n    return [Object.keys(result).map(Number), result];\n  }, [forumId, topicSearch, forumTopicsById]);\n\n  const handleHeaderBackClick = useLastCallback(() => {\n    setForumId(undefined);\n    setTopicSearch('');\n  });\n\n  const handleSearchChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    onSearchChange(e.currentTarget.value);\n  });\n\n  const handleTopicSearchChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setTopicSearch(e.currentTarget.value);\n  });\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isOpen, (index) => {\n    if (viewportIds && viewportIds.length > 0) {\n      const chatsById = getGlobal().chats.byId;\n\n      const chatId = viewportIds[index === -1 ? 0 : index];\n      const chat = chatsById[chatId];\n      if (chat?.isForum) {\n        if (!forumTopicsById) loadTopics({ chatId });\n        setForumId(chatId);\n      } else {\n        onSelectChatOrUser(chatId);\n      }\n    }\n  }, `.${ITEM_CLASS_NAME}`, true);\n\n  const handleTopicKeyDown = useKeyboardListNavigation(topicContainerRef, isOpen, (index) => {\n    if (topicIds?.length) {\n      onSelectChatOrUser(forumId!, topicIds[index === -1 ? 0 : index]);\n    }\n  }, `.${ITEM_CLASS_NAME}`, true);\n\n  const handleClick = useLastCallback((chatId: string) => {\n    const chatsById = getGlobal().chats.byId;\n    const chat = chatsById?.[chatId];\n    if (chat?.isForum) {\n      if (!forumTopicsById) loadTopics({ chatId });\n      setForumId(chatId);\n      resetSearch();\n    } else {\n      onSelectChatOrUser(chatId);\n    }\n  });\n\n  const renderChatItem = useCallback((id: string, index: number) => {\n    const global = getGlobal();\n    const peer = selectPeer(global, id);\n    if (!peer) {\n      return undefined;\n    }\n\n    const isSelf = peer && !isApiPeerChat(peer) ? peer.isSelf : undefined;\n\n    function getSubtitle() {\n      if (!peer) return undefined;\n      if (peer.id === currentUserId) return [lang('SavedMessagesInfo')];\n      if (isApiPeerChat(peer)) {\n        return [getGroupStatus(lang, peer)];\n      }\n\n      const userStatus = selectUserStatus(global, peer.id);\n      return [\n        getUserStatus(lang, peer, userStatus),\n        buildClassName(isUserOnline(peer, userStatus, true) && 'online'),\n      ];\n    }\n\n    const [subtitle, subtitleClassName] = getSubtitle() || [];\n\n    return (\n      <PickerItem\n        key={id}\n        className={ITEM_CLASS_NAME}\n        title={<FullNameTitle peer={peer} isSavedMessages={isSelf} />}\n        avatarElement={(\n          <Avatar\n            peer={peer}\n            isSavedMessages={isSelf}\n            size=\"medium\"\n          />\n        )}\n        subtitle={subtitle}\n        subtitleClassName={subtitleClassName}\n        ripple\n        style={`top: ${(viewportOffset + index) * PEER_PICKER_ITEM_HEIGHT_PX}px;`}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleClick(id)}\n      />\n    );\n  }, [currentUserId, lang, viewportOffset]);\n\n  function renderTopicList() {\n    return (\n      <>\n        <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Back')} onClick={handleHeaderBackClick}>\n            <Icon name=\"arrow-left\" />\n          </Button>\n          <InputText\n            ref={topicSearchRef}\n            value={topicSearch}\n            onChange={handleTopicSearchChange}\n            onKeyDown={handleTopicKeyDown}\n            placeholder={searchPlaceholder}\n          />\n        </div>\n        <InfiniteScroll\n          ref={topicContainerRef}\n          className=\"picker-list custom-scroll\"\n          items={topicIds}\n          withAbsolutePositioning\n          maxHeight={(topicIds?.length || 0) * TOPIC_ITEM_HEIGHT_PX}\n          onKeyDown={handleTopicKeyDown}\n        >\n          {!topicIds && <Loading />}\n          {topicIds?.map((topicId, i) => (\n            <PickerItem\n              key={`${forumId}_${topicId}`}\n              className={ITEM_CLASS_NAME}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => onSelectChatOrUser(forumId!, topicId)}\n              style={`top: ${(viewportOffset + i) * TOPIC_ITEM_HEIGHT_PX}px;`}\n              avatarElement={(\n                <TopicIcon\n                  size={TOPIC_ICON_SIZE}\n                  topic={topics[topicId]}\n                  className=\"topic-icon\"\n                  letterClassName=\"topic-icon-letter\"\n                />\n              )}\n              title={renderText(topics[topicId].title)}\n            />\n          ))}\n        </InfiniteScroll>\n      </>\n    );\n  }\n\n  function renderChatList() {\n    return (\n      <>\n        <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Close')}\n            onClick={onClose}\n          >\n            <Icon name=\"close\" />\n          </Button>\n          <InputText\n            ref={searchRef}\n            value={search}\n            onChange={handleSearchChange}\n            onKeyDown={handleKeyDown}\n            placeholder={searchPlaceholder}\n          />\n        </div>\n        {viewportIds?.length ? (\n          <InfiniteScroll\n            ref={containerRef}\n            className=\"picker-list custom-scroll\"\n            items={viewportIds}\n            itemSelector={`.${ITEM_CLASS_NAME}`}\n            onLoadMore={getMore}\n            withAbsolutePositioning\n            maxHeight={chatOrUserIds!.length * PEER_PICKER_ITEM_HEIGHT_PX}\n            onKeyDown={handleKeyDown}\n          >\n            {viewportIds.map(renderChatItem)}\n          </InfiniteScroll>\n        ) : viewportIds && !viewportIds.length ? (\n          <p className=\"no-results\">{lang('lng_blocked_list_not_found')}</p>\n        ) : (\n          <Loading />\n        )}\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className={buildClassName('ChatOrUserPicker', className)}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      isLowStackPriority={isLowStackPriority}\n    >\n      <Transition activeKey={activeKey} name=\"slideFade\" slideClassName=\"ChatOrUserPicker_slide\">\n        {() => {\n          return activeKey === TOPIC_LIST_SLIDE ? renderTopicList() : renderChatList();\n        }}\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(ChatOrUserPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getGlobal, withGlobal } from '../../global';\n\nimport type { ApiChatType } from '../../api/types';\nimport type { ThreadId } from '../../types';\n\nimport { API_CHAT_TYPES } from '../../config';\nimport {\n  getCanPostInChat,\n  isDeletedUser,\n} from '../../global/helpers';\nimport { filterPeersByQuery } from '../../global/helpers/peers';\nimport {\n  filterChatIdsByType, selectChat, selectChatFullInfo, selectUser,\n} from '../../global/selectors';\nimport { unique } from '../../util/iteratees';\nimport sortChatIds from './helpers/sortChatIds';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\n\nimport ChatOrUserPicker from './pickers/ChatOrUserPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  searchPlaceholder: string;\n  className?: string;\n  filter?: ApiChatType[];\n  loadMore?: NoneToVoidFunction;\n  onSelectRecipient: (peerId: string, threadId?: ThreadId) => void;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  isLowStackPriority?: boolean;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  activeListIds?: string[];\n  archivedListIds?: string[];\n  pinnedIds?: string[];\n  contactIds?: string[];\n};\n\nconst RecipientPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  activeListIds,\n  archivedListIds,\n  pinnedIds,\n  contactIds,\n  filter = API_CHAT_TYPES,\n  className,\n  searchPlaceholder,\n  loadMore,\n  onSelectRecipient,\n  onClose,\n  onCloseAnimationEnd,\n  isLowStackPriority,\n}) => {\n  const [search, setSearch] = useState('');\n  const ids = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    let priorityIds = pinnedIds || [];\n    if (currentUserId) {\n      priorityIds = unique([currentUserId, ...priorityIds]);\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const global = getGlobal();\n\n    const peerIds = [\n      ...(activeListIds || []),\n      ...((search && archivedListIds) || []),\n    ].filter((id) => {\n      const chat = selectChat(global, id);\n      const user = selectUser(global, id);\n      if (user && !isDeletedUser(user)) return true;\n\n      const chatFullInfo = selectChatFullInfo(global, id);\n\n      return chat && (!chatFullInfo || getCanPostInChat(chat, undefined, undefined, chatFullInfo));\n    });\n\n    const sorted = sortChatIds(\n      filterPeersByQuery({\n        ids: unique([\n          ...(currentUserId ? [currentUserId] : []),\n          ...peerIds,\n          ...(contactIds || []),\n        ]),\n        query: search,\n      }),\n      undefined,\n      priorityIds,\n      currentUserId,\n    );\n\n    return filterChatIdsByType(global, sorted, filter);\n  }, [pinnedIds, currentUserId, activeListIds, search, archivedListIds, contactIds, filter, isOpen]);\n\n  const renderingIds = useCurrentOrPrev(ids, true)!;\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      className={className}\n      chatOrUserIds={renderingIds}\n      currentUserId={currentUserId}\n      searchPlaceholder={searchPlaceholder}\n      search={search}\n      onSearchChange={setSearch}\n      loadMore={loadMore}\n      onSelectChatOrUser={onSelectRecipient}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      isLowStackPriority={isLowStackPriority}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      chats: {\n        listIds,\n        orderedPinnedIds,\n      },\n      currentUserId,\n    } = global;\n\n    return {\n      activeListIds: listIds.active,\n      archivedListIds: listIds.archived,\n      pinnedIds: orderedPinnedIds.active,\n      contactIds: global.contactList?.userIds,\n      currentUserId,\n    };\n  },\n)(RecipientPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ThreadId } from '../../types';\n\nimport { getChatTitle, getUserFirstOrLastName, isUserId } from '../../global/helpers';\nimport {\n  selectChat,\n  selectTabState,\n  selectUser,\n} from '../../global/selectors';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ninterface StateProps {\n  currentUserId?: string;\n  isManyMessages?: boolean;\n  isStory?: boolean;\n  isForwarding?: boolean;\n}\n\nconst ForwardRecipientPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  isManyMessages,\n  isStory,\n  isForwarding,\n}) => {\n  const {\n    openChatOrTopicWithReplyInDraft,\n    setForwardChatOrTopic,\n    exitForwardMode,\n    forwardToSavedMessages,\n    forwardStory,\n    showNotification,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const renderingIsStory = usePreviousDeprecated(isStory, true);\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const handleSelectRecipient = useCallback((recipientId: string, threadId?: ThreadId) => {\n    const isSelf = recipientId === currentUserId;\n    if (isStory) {\n      forwardStory({ toChatId: recipientId });\n      const global = getGlobal();\n      if (isUserId(recipientId)) {\n        showNotification({\n          message: isSelf\n            ? lang('Conversation.StoryForwardTooltip.SavedMessages.One')\n            : lang(\n              'StorySharedTo',\n              getUserFirstOrLastName(selectUser(global, recipientId)),\n            ),\n        });\n      } else {\n        const chat = selectChat(global, recipientId);\n        if (!chat) return;\n\n        showNotification({\n          message: lang('StorySharedTo', getChatTitle(lang, chat)),\n        });\n      }\n      return;\n    }\n\n    if (isSelf) {\n      const message = lang(\n        isManyMessages\n          ? 'Conversation.ForwardTooltip.SavedMessages.Many'\n          : 'Conversation.ForwardTooltip.SavedMessages.One',\n      );\n\n      forwardToSavedMessages();\n      showNotification({ message });\n    } else {\n      const chatId = recipientId;\n      const topicId = threadId ? Number(threadId) : undefined;\n      if (isForwarding) {\n        setForwardChatOrTopic({ chatId, topicId });\n      } else {\n        openChatOrTopicWithReplyInDraft({ chatId, topicId });\n      }\n    }\n  }, [currentUserId, isManyMessages, isStory, lang, isForwarding]);\n\n  const handleClose = useCallback(() => {\n    exitForwardMode();\n  }, [exitForwardMode]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      className={renderingIsStory ? 'component-theme-dark' : undefined}\n      searchPlaceholder={lang(isForwarding ? 'ForwardTo' : 'ReplyToDialog')}\n      onSelectRecipient={handleSelectRecipient}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const { messageIds, storyId } = selectTabState(global).forwardMessages;\n  const isForwarding = (messageIds && messageIds.length > 0);\n  return {\n    currentUserId: global.currentUserId,\n    isManyMessages: (messageIds?.length || 0) > 1,\n    isStory: Boolean(storyId),\n    isForwarding,\n  };\n})(ForwardRecipientPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { TabState } from '../../global/types';\nimport type { ThreadId } from '../../types';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  requestedDraft?: TabState['requestedDraft'];\n};\n\nconst DraftRecipientPicker: FC<OwnProps> = ({\n  requestedDraft,\n}) => {\n  const isOpen = Boolean(requestedDraft && !requestedDraft.chatId);\n  const {\n    openChatWithDraft,\n    resetOpenChatWithDraft,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const handleSelectRecipient = useCallback((recipientId: string, threadId?: ThreadId) => {\n    openChatWithDraft({\n      chatId: recipientId,\n      threadId,\n      text: requestedDraft!.text,\n      files: requestedDraft!.files,\n    });\n  }, [openChatWithDraft, requestedDraft]);\n\n  const handleClose = useCallback(() => {\n    resetOpenChatWithDraft();\n  }, [resetOpenChatWithDraft]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      searchPlaceholder={lang('ForwardTo')}\n      filter={requestedDraft?.filter}\n      onSelectRecipient={handleSelectRecipient}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(DraftRecipientPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { TabState } from '../../global/types';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  requestedAttachBotInChat?: TabState['requestedAttachBotInChat'];\n};\n\nconst AttachBotRecipientPicker: FC<OwnProps> = ({\n  requestedAttachBotInChat,\n}) => {\n  const { cancelAttachBotInChat, callAttachBot } = getActions();\n  const lang = useOldLang();\n\n  const isOpen = Boolean(requestedAttachBotInChat);\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const { bot, filter, startParam } = requestedAttachBotInChat || {};\n\n  const handlePeerRecipient = useCallback((recipientId: string) => {\n    callAttachBot({ bot: bot!, chatId: recipientId, startParam });\n    cancelAttachBotInChat();\n  }, [bot, callAttachBot, cancelAttachBotInChat, startParam]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      searchPlaceholder={lang('Search')}\n      filter={filter}\n      onSelectRecipient={handlePeerRecipient}\n      onClose={cancelAttachBotInChat}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(AttachBotRecipientPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiContact, ApiError,\n} from '../../api/types';\nimport type { MessageList } from '../../types';\n\nimport { selectCurrentMessageList, selectTabState } from '../../global/selectors';\nimport getReadableErrorText from '../../util/getReadableErrorText';\nimport renderText from '../common/helpers/renderText';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\ntype StateProps = {\n  currentMessageList?: MessageList;\n  dialogs: (ApiError | ApiContact)[];\n};\n\nconst Dialogs: FC<StateProps> = ({ dialogs, currentMessageList }) => {\n  const {\n    dismissDialog,\n    sendMessage,\n  } = getActions();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (dialogs.length > 0) {\n      openModal();\n    }\n  }, [dialogs, openModal]);\n\n  if (!dialogs.length) {\n    return undefined;\n  }\n\n  const renderContactRequest = (contactRequest: ApiContact) => {\n    const handleConfirm = () => {\n      if (!currentMessageList) {\n        return;\n      }\n\n      sendMessage({\n        contact: contactRequest,\n        messageList: currentMessageList,\n      });\n      closeModal();\n    };\n\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        className=\"confirm\"\n        title={lang('ShareYouPhoneNumberTitle')}\n        onCloseAnimationEnd={dismissDialog}\n      >\n        {lang('AreYouSureShareMyContactInfoBot')}\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleConfirm}\n          >\n            {lang('OK')}\n          </Button>\n          <Button className=\"confirm-dialog-button\" isText onClick={closeModal}>{lang('Cancel')}</Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderError = (error: ApiError) => {\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        onCloseAnimationEnd={dismissDialog}\n        className=\"error\"\n        title={getErrorHeader(error)}\n      >\n        {error.hasErrorKey ? getReadableErrorText(error)\n          : renderText(error.message!, ['simple_markdown', 'emoji', 'br'])}\n        <div className=\"dialog-buttons mt-2\">\n          <Button isText onClick={closeModal}>{lang('OK')}</Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderDialog = (dialog: ApiError | ApiContact) => {\n    if ('phoneNumber' in dialog) {\n      return renderContactRequest(dialog);\n    }\n\n    return renderError(dialog);\n  };\n\n  return Boolean(dialogs.length) && renderDialog(dialogs[dialogs.length - 1]);\n};\n\nfunction getErrorHeader(error: ApiError) {\n  if (error.isSlowMode) {\n    return 'Slowmode enabled';\n  }\n\n  if (!error.hasErrorKey) {\n    return 'Telegram';\n  }\n\n  return 'Something went wrong';\n}\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      dialogs: selectTabState(global).dialogs,\n      currentMessageList: selectCurrentMessageList(global),\n    };\n  },\n)(Dialogs));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiNotification } from '../../api/types';\n\nimport { selectTabState } from '../../global/selectors';\nimport { pick } from '../../util/iteratees';\n\nimport Notification from '../ui/Notification';\n\ntype StateProps = {\n  notifications: ApiNotification[];\n};\n\nconst Notifications: FC<StateProps> = ({ notifications }) => {\n  if (!notifications.length) {\n    return undefined;\n  }\n\n  return (\n    <div id=\"Notifications\">\n      {notifications.map((notification) => (\n        <Notification key={notification.localId} notification={notification} />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => pick(selectTabState(global), ['notifications']),\n)(Notifications));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { ensureProtocol } from '../../util/browser/url';\nimport renderText from '../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useLang from '../../hooks/useLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  url?: string;\n};\n\nconst SafeLinkModal: FC<OwnProps> = ({ url }) => {\n  const { toggleSafeLinkModal } = getActions();\n\n  const lang = useLang();\n\n  const handleOpen = useCallback(() => {\n    if (!url) {\n      return;\n    }\n\n    window.open(ensureProtocol(url), '_blank', 'noopener noreferrer');\n    toggleSafeLinkModal({ url: undefined });\n  }, [toggleSafeLinkModal, url]);\n\n  const handleDismiss = useCallback(() => {\n    toggleSafeLinkModal({ url: undefined });\n  }, [toggleSafeLinkModal]);\n\n  const renderingUrl = useCurrentOrPrev(url);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(url)}\n      onClose={handleDismiss}\n      title={lang('OpenUrlTitle')}\n      textParts={renderText(lang('OpenUrlText', { url: renderingUrl }, { withNodes: true, withMarkdown: true }))}\n      confirmLabel={lang('OpenUrlConfirm')}\n      confirmHandler={handleOpen}\n    />\n  );\n};\n\nexport default memo(SafeLinkModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"VJDwJpsF\",\"buttons\":\"aYO2C2Hx\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { IS_IOS, IS_MAC_OS } from '../../../util/browser/windowEnvironment';\nimport { prepareMapUrl } from '../../../util/map';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './MapModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['mapModal'];\n};\n\nconst OpenMapModal = ({ modal }: OwnProps) => {\n  const { closeMapModal } = getActions();\n\n  const { point: geoPoint, zoom } = modal || {};\n\n  const lang = useOldLang();\n\n  const isOpen = Boolean(geoPoint);\n\n  const handleClose = useLastCallback(() => {\n    closeMapModal();\n  });\n\n  const [googleUrl, bingUrl, appleUrl, osmUrl] = useMemo(() => {\n    if (!geoPoint) {\n      return [];\n    }\n\n    const google = prepareMapUrl('google', geoPoint, zoom);\n    const bing = prepareMapUrl('bing', geoPoint, zoom);\n    const osm = prepareMapUrl('osm', geoPoint, zoom);\n    const apple = prepareMapUrl('apple', geoPoint, zoom);\n\n    return [google, bing, apple, osm];\n  }, [geoPoint, zoom]);\n\n  const openUrl = useLastCallback((url: string) => {\n    closeMapModal();\n    window.open(url, '_blank', 'noopener');\n  });\n\n  const handleGoogleClick = useLastCallback(() => {\n    openUrl(googleUrl!);\n  });\n\n  const handleBingClick = useLastCallback(() => {\n    openUrl(bingUrl!);\n  });\n\n  const handleAppleClick = useLastCallback(() => {\n    openUrl(appleUrl!);\n  });\n\n  const handleOsmClick = useLastCallback(() => {\n    openUrl(osmUrl!);\n  });\n\n  return (\n    <Modal\n      contentClassName={styles.root}\n      title={lang('OpenMapWith')}\n      isOpen={isOpen}\n      onClose={handleClose}\n      isSlim\n    >\n      <div className={styles.buttons}>\n        {(IS_IOS || IS_MAC_OS) && (\n          <Button fluid size=\"smaller\" onClick={handleAppleClick}>\n            Apple Maps\n          </Button>\n        )}\n        <Button fluid size=\"smaller\" onClick={handleGoogleClick}>\n          Google Maps\n        </Button>\n        <Button fluid size=\"smaller\" onClick={handleBingClick}>\n          Bing Maps\n        </Button>\n        <Button fluid size=\"smaller\" onClick={handleOsmClick}>\n          OpenStreetMap\n        </Button>\n      </div>\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" isText onClick={handleClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(OpenMapModal);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { ensureProtocol } from '../../../util/browser/url';\nimport renderText from '../../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  modal?: TabState['urlAuth'];\n};\n\ntype StateProps = {\n  currentUser?: ApiUser;\n};\n\nconst UrlAuthModal: FC<OwnProps & StateProps> = ({\n  modal, currentUser,\n}) => {\n  const { closeUrlAuthModal, acceptBotUrlAuth, acceptLinkUrlAuth } = getActions();\n  const [isLoginChecked, setLoginChecked] = useState(true);\n  const [isWriteAccessChecked, setWriteAccessChecked] = useState(true);\n  const currentAuth = useCurrentOrPrev(modal, false);\n  const { domain, botId, shouldRequestWriteAccess } = currentAuth?.request || {};\n  const bot = botId ? getGlobal().users.byId[botId] : undefined;\n\n  const lang = useOldLang();\n\n  const handleOpen = useCallback(() => {\n    if (modal?.url && isLoginChecked) {\n      const acceptAction = modal.button ? acceptBotUrlAuth : acceptLinkUrlAuth;\n      acceptAction({\n        isWriteAllowed: isWriteAccessChecked,\n      });\n    } else if (currentAuth?.url) {\n      window.open(ensureProtocol(currentAuth.url), '_blank', 'noopener');\n    }\n    closeUrlAuthModal();\n  }, [\n    modal, isLoginChecked, closeUrlAuthModal, acceptBotUrlAuth, acceptLinkUrlAuth, isWriteAccessChecked, currentAuth,\n  ]);\n\n  const handleDismiss = useCallback(() => {\n    closeUrlAuthModal();\n  }, [closeUrlAuthModal]);\n\n  const handleLoginChecked = useCallback((value: boolean) => {\n    setLoginChecked(value);\n    setWriteAccessChecked(value);\n  }, [setLoginChecked]);\n\n  // Reset on re-open\n  useEffect(() => {\n    if (domain) {\n      setLoginChecked(true);\n      setWriteAccessChecked(Boolean(shouldRequestWriteAccess));\n    }\n  }, [shouldRequestWriteAccess, domain]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(modal?.url)}\n      onClose={handleDismiss}\n      title={lang('OpenUrlTitle')}\n      confirmLabel={lang('OpenUrlTitle')}\n      confirmHandler={handleOpen}\n    >\n      {renderText(lang('OpenUrlAlert2', currentAuth?.url), ['links'])}\n      {domain && (\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={isLoginChecked}\n          label={(\n            <>\n              {renderText(\n                lang('Conversation.OpenBotLinkLogin', [domain, getUserFullName(currentUser)]),\n                ['simple_markdown'],\n              )}\n            </>\n          )}\n          onCheck={handleLoginChecked}\n        />\n      )}\n      {shouldRequestWriteAccess && (\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={isWriteAccessChecked}\n          label={(\n            <>\n              {renderText(\n                lang('Conversation.OpenBotLinkAllowMessages', getUserFullName(bot)),\n                ['simple_markdown'],\n              )}\n            </>\n          )}\n          onCheck={setWriteAccessChecked}\n          disabled={!isLoginChecked}\n        />\n      )}\n    </ConfirmDialog>\n  );\n};\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const currentUser = selectUser(global, global.currentUserId!);\n    return {\n      currentUser,\n    };\n  },\n)(UrlAuthModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\n\nimport type { OldLangFn } from '../../hooks/useOldLang';\n\nimport { MAX_INT_32 } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateToString, formatTime, getDayStart } from '../../util/dates/dateFormat';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Icon from './icons/Icon';\n\nimport './CalendarModal.scss';\n\nconst MAX_SAFE_DATE = MAX_INT_32 * 1000;\nconst MIN_SAFE_DATE = 0;\n\nexport type OwnProps = {\n  selectedAt?: number;\n  minAt?: number;\n  maxAt?: number;\n  isFutureMode?: boolean;\n  isPastMode?: boolean;\n  isOpen: boolean;\n  withTimePicker?: boolean;\n  submitButtonLabel?: string;\n  secondButtonLabel?: string;\n  onClose: () => void;\n  onSubmit: (date: Date) => void;\n  onSecondButtonClick?: NoneToVoidFunction;\n};\n\nconst WEEKDAY_LETTERS = [\n  'lng_weekday1',\n  'lng_weekday2',\n  'lng_weekday3',\n  'lng_weekday4',\n  'lng_weekday5',\n  'lng_weekday6',\n  'lng_weekday7',\n];\n\nconst CalendarModal: FC<OwnProps> = ({\n  selectedAt,\n  minAt,\n  maxAt,\n  isFutureMode,\n  isPastMode,\n  isOpen,\n  withTimePicker,\n  submitButtonLabel,\n  secondButtonLabel,\n  onClose,\n  onSubmit,\n  onSecondButtonClick,\n}) => {\n  const lang = useOldLang();\n  const now = new Date();\n\n  const minDate = useMemo(() => {\n    if (isFutureMode && !minAt) return new Date();\n    return new Date(Math.max(minAt || MIN_SAFE_DATE, MIN_SAFE_DATE));\n  }, [isFutureMode, minAt]);\n  const maxDate = useMemo(() => {\n    if (isPastMode && !maxAt) return new Date();\n    return new Date(Math.min(maxAt || MAX_SAFE_DATE, MAX_SAFE_DATE));\n  }, [isPastMode, maxAt]);\n\n  const passedSelectedDate = useMemo(() => (selectedAt ? new Date(selectedAt) : new Date()), [selectedAt]);\n  const prevIsOpen = usePreviousDeprecated(isOpen);\n  const [isTimeInputFocused, markTimeInputAsFocused] = useFlag(false);\n\n  const [selectedDate, setSelectedDate] = useState<Date>(passedSelectedDate);\n  const [currentMonthAndYear, setCurrentMonthAndYear] = useState<Date>(\n    new Date(selectedDate.getFullYear(), selectedDate.getMonth(), 1),\n  );\n  const [selectedHours, setSelectedHours] = useState<string>(\n    formatInputTime(passedSelectedDate.getHours()),\n  );\n  const [selectedMinutes, setSelectedMinutes] = useState<string>(\n    formatInputTime(passedSelectedDate.getMinutes()),\n  );\n\n  const selectedDay = formatDay(selectedDate.getFullYear(), selectedDate.getMonth(), selectedDate.getDate());\n  const currentYear = currentMonthAndYear.getFullYear();\n  const currentMonth = currentMonthAndYear.getMonth();\n\n  const isDisabled = (isFutureMode && selectedDate.getTime() < minDate.getTime())\n    || (isPastMode && selectedDate.getTime() > maxDate.getTime());\n\n  useEffect(() => {\n    if (!prevIsOpen && isOpen) {\n      setSelectedDate(passedSelectedDate);\n      setCurrentMonthAndYear(new Date(passedSelectedDate.getFullYear(), passedSelectedDate.getMonth(), 1));\n      if (withTimePicker) {\n        setSelectedHours(formatInputTime(passedSelectedDate.getHours()));\n        setSelectedMinutes(formatInputTime(passedSelectedDate.getMinutes()));\n      }\n    }\n  }, [passedSelectedDate, isOpen, prevIsOpen, withTimePicker]);\n\n  useEffect(() => {\n    if (isFutureMode && !isTimeInputFocused && selectedDate.getTime() < minDate.getTime()) {\n      setSelectedDate(minDate);\n      setSelectedHours(formatInputTime(minDate.getHours()));\n      setSelectedMinutes(formatInputTime(minDate.getMinutes()));\n    }\n  }, [isFutureMode, isTimeInputFocused, minDate, selectedDate]);\n\n  useEffect(() => {\n    if (isPastMode && !isTimeInputFocused && selectedDate.getTime() > maxDate.getTime()) {\n      setSelectedDate(maxDate);\n      setSelectedHours(formatInputTime(maxDate.getHours()));\n      setSelectedMinutes(formatInputTime(maxDate.getMinutes()));\n    }\n  }, [isFutureMode, isPastMode, isTimeInputFocused, maxDate, minDate, selectedDate]);\n\n  useEffect(() => {\n    if (selectedAt) {\n      const newSelectedDate = new Date(selectedAt);\n      setSelectedDate(newSelectedDate);\n      setSelectedHours(formatInputTime(newSelectedDate.getHours()));\n      setSelectedMinutes(formatInputTime(newSelectedDate.getMinutes()));\n    }\n  }, [selectedAt]);\n\n  const shouldDisableNextMonth = (isPastMode && currentYear >= now.getFullYear() && currentMonth >= now.getMonth())\n    || (maxDate && currentYear >= maxDate.getFullYear() && currentMonth >= maxDate.getMonth());\n  const shouldDisablePrevMonth = isFutureMode && currentYear <= now.getFullYear() && currentMonth <= now.getMonth();\n\n  const { prevMonthGrid, currentMonthGrid, nextMonthGrid } = useMemo(() => (\n    buildCalendarGrid(currentYear, currentMonth)\n  ), [currentMonth, currentYear]);\n\n  const submitLabel = useMemo(() => {\n    return submitButtonLabel || formatSubmitLabel(lang, selectedDate);\n  }, [lang, selectedDate, submitButtonLabel]);\n\n  function handlePrevMonth() {\n    setCurrentMonthAndYear((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setMonth(dateCopy.getMonth() - 1);\n\n      return dateCopy;\n    });\n  }\n\n  function handleNextMonth() {\n    setCurrentMonthAndYear((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setMonth(dateCopy.getMonth() + 1);\n\n      return dateCopy;\n    });\n  }\n\n  function handleDateSelect(date: number) {\n    setSelectedDate((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setDate(date);\n      dateCopy.setMonth(currentMonth);\n      dateCopy.setFullYear(currentYear);\n\n      return dateCopy;\n    });\n  }\n\n  const handleSubmit = useCallback(() => {\n    if (isFutureMode && selectedDate < minDate) {\n      onSubmit(minDate);\n    } else if (isPastMode && selectedDate > maxDate) {\n      onSubmit(maxDate);\n    } else {\n      onSubmit(selectedDate);\n    }\n  }, [isFutureMode, isPastMode, minDate, maxDate, onSubmit, selectedDate]);\n\n  const handleChangeHours = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.replace(/[^\\d]+/g, '');\n    if (!value.length) {\n      setSelectedHours('');\n      e.target.value = '';\n      return;\n    }\n\n    const hours = Math.max(0, Math.min(Number(value), 23));\n\n    const date = new Date(selectedDate.getTime());\n    date.setHours(hours);\n    setSelectedDate(date);\n\n    const hoursStr = formatInputTime(hours);\n    setSelectedHours(hoursStr);\n    e.target.value = hoursStr;\n  }, [selectedDate]);\n\n  const handleChangeMinutes = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.replace(/[^\\d]+/g, '');\n    if (!value.length) {\n      setSelectedMinutes('');\n      e.target.value = '';\n      return;\n    }\n\n    const minutes = Math.max(0, Math.min(Number(value), 59));\n\n    const date = new Date(selectedDate.getTime());\n    date.setMinutes(minutes);\n    setSelectedDate(date);\n\n    const minutesStr = formatInputTime(minutes);\n    setSelectedMinutes(minutesStr);\n    e.target.value = minutesStr;\n  }, [selectedDate]);\n\n  function renderTimePicker() {\n    return (\n      <div className=\"timepicker\">\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          inputMode=\"decimal\"\n          value={selectedHours}\n          onChange={handleChangeHours}\n          onFocus={markTimeInputAsFocused}\n        />\n        :\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          inputMode=\"decimal\"\n          value={selectedMinutes}\n          onChange={handleChangeMinutes}\n          onFocus={markTimeInputAsFocused}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"CalendarModal\"\n      onEnter={handleSubmit}\n    >\n      <div className=\"container\">\n        <div className=\"month-selector\">\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            onClick={onClose}\n          >\n            <Icon name=\"close\" />\n          </Button>\n\n          <h4>\n            {lang(`lng_month${currentMonth + 1}`)}\n            {' '}\n            {currentYear}\n          </h4>\n\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            disabled={shouldDisablePrevMonth}\n            onClick={!shouldDisablePrevMonth ? handlePrevMonth : undefined}\n          >\n            <Icon name=\"previous\" />\n          </Button>\n\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            disabled={shouldDisableNextMonth}\n            onClick={!shouldDisableNextMonth ? handleNextMonth : undefined}\n          >\n            <Icon name=\"next\" />\n          </Button>\n        </div>\n      </div>\n\n      <div className=\"calendar-wrapper\">\n        <div className=\"calendar-grid\">\n          {WEEKDAY_LETTERS.map((day) => (\n            <div className=\"day-button faded weekday\">\n              <span>{lang(day)}</span>\n            </div>\n          ))}\n          {prevMonthGrid.map((gridDate) => (\n            <div className=\"day-button disabled\"><span>{gridDate}</span></div>\n          ))}\n          {currentMonthGrid.map((gridDate) => (\n            <div\n              role=\"button\"\n              tabIndex={0}\n              onClick={() => handleDateSelect(gridDate)}\n              className={buildClassName(\n                'day-button',\n                'div-button',\n                isDisabledDay(\n                  currentYear, currentMonth, gridDate, minDate, maxDate,\n                )\n                  ? 'disabled'\n                  : `${gridDate ? 'clickable' : ''}`,\n                selectedDay === formatDay(currentYear, currentMonth, gridDate) && 'selected',\n              )}\n            >\n              {Boolean(gridDate) && (\n                <span>{gridDate}</span>\n              )}\n            </div>\n          ))}\n          {nextMonthGrid.map((gridDate) => (\n            <div className=\"day-button disabled\"><span>{gridDate}</span></div>\n          ))}\n        </div>\n      </div>\n\n      {withTimePicker && renderTimePicker()}\n\n      <div className=\"footer\">\n        <div className=\"footer\">\n          <Button\n            onClick={handleSubmit}\n            disabled={isDisabled}\n          >\n            {submitLabel}\n          </Button>\n          {secondButtonLabel && (\n            <Button onClick={onSecondButtonClick} isText>\n              {secondButtonLabel}\n            </Button>\n          )}\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nfunction buildCalendarGrid(year: number, month: number) {\n  const prevMonthGrid: number[] = [];\n  const currentMonthGrid: number[] = [];\n  const nextMonthGrid: number[] = [];\n\n  const date = new Date();\n  date.setDate(1);\n  date.setMonth(month);\n  date.setFullYear(year);\n  const firstDay = date.getDay() || 7;\n  const totalDaysInPrevMonth = new Date(year, month, 0).getDate();\n\n  for (let i = 1; i < firstDay; i++) {\n    prevMonthGrid.push(totalDaysInPrevMonth - firstDay + i + 1);\n  }\n\n  while (date.getMonth() === month) {\n    const gridDate = date.getDate();\n    currentMonthGrid.push(gridDate);\n    date.setDate(gridDate + 1);\n  }\n\n  const lastRowDaysCount = (currentMonthGrid.length + prevMonthGrid.length) % 7;\n  if (lastRowDaysCount > 0) {\n    for (let i = 1; i <= 7 - lastRowDaysCount; i++) {\n      nextMonthGrid.push(i);\n    }\n  }\n\n  return { prevMonthGrid, currentMonthGrid, nextMonthGrid };\n}\n\nfunction isDisabledDay(year: number, month: number, day: number, minDate?: Date, maxDate?: Date) {\n  const selectedDay = new Date(year, month, day);\n  const fixedMinDate = minDate && getDayStart(minDate);\n  const fixedMaxDate = maxDate && getDayStart(maxDate);\n\n  if (fixedMaxDate && selectedDay > fixedMaxDate) {\n    return true;\n  } else if (fixedMinDate && selectedDay < fixedMinDate) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction formatInputTime(value: string | number) {\n  return String(value).padStart(2, '0');\n}\n\nfunction formatDay(year: number, month: number, day: number) {\n  return `${year}-${month + 1}-${day}`;\n}\n\nfunction formatSubmitLabel(lang: OldLangFn, date: Date) {\n  const day = formatDateToString(date, lang.code);\n  const today = formatDateToString(new Date(), lang.code);\n\n  if (day === today) {\n    return lang('Conversation.ScheduleMessage.SendToday', formatTime(lang, date));\n  }\n\n  return lang('Conversation.ScheduleMessage.SendOn', [day, formatTime(lang, date)]);\n}\n\nexport default memo(CalendarModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport CalendarModal from '../common/CalendarModal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ntype StateProps = {\n  selectedAt?: number;\n};\n\nconst HistoryCalendar: FC<OwnProps & StateProps> = ({\n  isOpen, selectedAt,\n}) => {\n  const { searchMessagesByDate, closeHistoryCalendar } = getActions();\n\n  const handleJumpToDate = useCallback((date: Date) => {\n    searchMessagesByDate({ timestamp: date.getTime() / 1000 });\n    closeHistoryCalendar();\n  }, [closeHistoryCalendar, searchMessagesByDate]);\n\n  const lang = useOldLang();\n\n  return (\n    <CalendarModal\n      isOpen={isOpen}\n      selectedAt={selectedAt}\n      isPastMode\n      submitButtonLabel={lang('JumpToDate')}\n      onClose={closeHistoryCalendar}\n      onSubmit={handleJumpToDate}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return { selectedAt: selectTabState(global).historyCalendarSelectedAt };\n  },\n)(HistoryCalendar));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiCountryCode, ApiUser, ApiUserStatus } from '../../api/types';\n\nimport { getUserStatus } from '../../global/helpers';\nimport { selectUser, selectUserStatus } from '../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport { formatPhoneNumberWithCode } from '../../util/phoneNumber';\nimport renderText from '../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport Button from '../ui/Button';\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Modal from '../ui/Modal';\n\nimport './NewContactModal.scss';\n\nconst ANIMATION_DURATION = 200;\n\nexport type OwnProps = {\n  isOpen: boolean;\n  userId?: string;\n  isByPhoneNumber?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst NewContactModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  userId,\n  isByPhoneNumber,\n  user,\n  userStatus,\n  phoneCodeList,\n}) => {\n  const { updateContact, importContact, closeNewContactDialog } = getActions();\n\n  const lang = useOldLang();\n  const renderingUser = useCurrentOrPrev(user);\n  const renderingIsByPhoneNumber = useCurrentOrPrev(isByPhoneNumber);\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  const [firstName, setFirstName] = useState<string>(renderingUser?.firstName ?? '');\n  const [lastName, setLastName] = useState<string>(renderingUser?.lastName ?? '');\n  const [phone, setPhone] = useState<string>(renderingUser?.phoneNumber ?? '');\n  const [shouldSharePhoneNumber, setShouldSharePhoneNumber] = useState<boolean>(true);\n  const canBeSubmitted = Boolean(firstName && (!isByPhoneNumber || phone));\n\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n      setFirstName(renderingUser?.firstName ?? '');\n      setLastName(renderingUser?.lastName ?? '');\n      setPhone(renderingUser?.phoneNumber ?? '');\n      setShouldSharePhoneNumber(true);\n    }\n  }, [isOpen, markIsShown, renderingUser?.firstName, renderingUser?.lastName, renderingUser?.phoneNumber]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV && isShown) {\n      setTimeout(() => { inputRef.current?.focus(); }, ANIMATION_DURATION);\n    }\n  }, [isShown]);\n\n  const handleFirstNameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n  }, []);\n\n  const handlePhoneChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setPhone(formatPhoneNumberWithCode(phoneCodeList, e.target.value));\n  }, [phoneCodeList]);\n\n  const handleLastNameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n  }, []);\n\n  const handleClose = useCallback(() => {\n    closeNewContactDialog();\n    setFirstName('');\n    setLastName('');\n    setPhone('');\n  }, [closeNewContactDialog]);\n\n  const handleSubmit = useCallback(() => {\n    if (isByPhoneNumber || !userId) {\n      importContact({\n        firstName,\n        lastName,\n        phoneNumber: phone,\n      });\n    } else {\n      updateContact({\n        userId,\n        firstName,\n        lastName,\n        shouldSharePhoneNumber,\n      });\n    }\n  }, [firstName, importContact, isByPhoneNumber, lastName, phone, shouldSharePhoneNumber, updateContact, userId]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  function renderAddContact() {\n    return (\n      <>\n        <div className=\"NewContactModal__profile\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Avatar\n            size=\"jumbo\"\n            peer={renderingUser}\n            text={`${firstName} ${lastName}`}\n          />\n          <div className=\"NewContactModal__profile-info\">\n            <p className=\"NewContactModal__phone-number\">\n              {renderingUser?.phoneNumber\n                ? formatPhoneNumberWithCode(phoneCodeList, renderingUser.phoneNumber)\n                : lang('MobileHidden')}\n            </p>\n            <span className=\"NewContactModal__user-status\" dir=\"auto\">\n              {getUserStatus(lang, renderingUser!, userStatus)}\n            </span>\n          </div>\n        </div>\n        <InputText\n          ref={inputRef}\n          value={firstName}\n          label={lang('FirstName')}\n          tabIndex={0}\n          onChange={handleFirstNameChange}\n        />\n        <InputText\n          value={lastName}\n          label={lang('LastName')}\n          tabIndex={0}\n          onChange={handleLastNameChange}\n        />\n        <p className=\"NewContactModal__help-text\">\n          {renderText(\n            lang('NewContact.Phone.Hidden.Text', renderingUser?.firstName || ''),\n            ['emoji', 'simple_markdown'],\n          )}\n        </p>\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldSharePhoneNumber}\n          tabIndex={0}\n          onCheck={setShouldSharePhoneNumber}\n          label={lang('lng_new_contact_share')}\n        />\n        <p className=\"NewContactModal__help-text NewContactModal__help-text__negative\">\n          {renderText(lang('AddContact.SharedContactExceptionInfo', renderingUser?.firstName))}\n        </p>\n      </>\n    );\n  }\n\n  function renderCreateContact() {\n    return (\n      <div className=\"NewContactModal__new-contact\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar size=\"jumbo\" text={`${firstName} ${lastName}`} />\n        <div className=\"NewContactModal__new-contact-fieldset\">\n          <InputText\n            ref={inputRef}\n            value={phone}\n            inputMode=\"tel\"\n            label={lang('lng_contact_phone')}\n            tabIndex={0}\n            onChange={handlePhoneChange}\n          />\n          <InputText\n            value={firstName}\n            label={lang('FirstName')}\n            tabIndex={0}\n            onChange={handleFirstNameChange}\n          />\n          <InputText\n            value={lastName}\n            label={lang('LastName')}\n            tabIndex={0}\n            onChange={handleLastNameChange}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className=\"NewContactModal\"\n      title={lang('NewContact')}\n      isOpen={isOpen}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    >\n      {renderingUser && renderAddContact()}\n      {renderingIsByPhoneNumber && renderCreateContact()}\n      <div className=\"dialog-buttons\">\n        <Button\n          isText\n          className=\"confirm-dialog-button\"\n          disabled={!canBeSubmitted}\n          onClick={handleSubmit}\n        >\n          {lang('Done')}\n        </Button>\n        <Button\n          isText\n          className=\"confirm-dialog-button\"\n          onClick={handleClose}\n        >\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = userId ? selectUser(global, userId) : undefined;\n    return {\n      user,\n      userStatus: userId ? selectUserStatus(global, userId) : undefined,\n      phoneCodeList: global.countryList.phoneCodes,\n    };\n  },\n)(NewContactModal));\n","import type { RefObject } from 'react';\nimport {\n  useEffect, useSignal, useState,\n} from '../lib/teact/teact';\n\nimport type { Point, Size } from '../types';\n\nimport { RESIZE_HANDLE_SELECTOR } from '../config';\nimport buildStyle from '../util/buildStyle';\nimport { captureEvents } from '../util/captureEvents';\nimport useFlag from './useFlag';\nimport useLastCallback from './useLastCallback';\n\nexport enum ResizeHandleType {\n  Top,\n  Bottom,\n  Left,\n  Right,\n  TopLeft,\n  TopRight,\n  BottomLeft,\n  BottomRight,\n}\n\ntype ResizeHandleSelectorType = 'top' | 'bottom' | 'left'\n| 'right' | 'topLeft' | 'topRight' | 'bottomLeft' | 'bottomRight';\n\nconst resizeHandleSelectorsMap: Record<ResizeHandleSelectorType, ResizeHandleType> = {\n  top: ResizeHandleType.Top,\n  bottom: ResizeHandleType.Bottom,\n  left: ResizeHandleType.Left,\n  right: ResizeHandleType.Right,\n  topLeft: ResizeHandleType.TopLeft,\n  topRight: ResizeHandleType.TopRight,\n  bottomLeft: ResizeHandleType.BottomLeft,\n  bottomRight: ResizeHandleType.BottomRight,\n};\n\nconst resizeHandleSelectors = Object.keys(resizeHandleSelectorsMap) as ResizeHandleSelectorType[];\n\nlet resizeTimeout: number | undefined;\nconst FULLSCREEN_POSITION = { x: 0, y: 0 };\n\nexport default function useDraggable(\n  ref: RefObject<HTMLElement>,\n  dragHandleElementRef: RefObject<HTMLElement>,\n  isDragEnabled: boolean = true,\n  originalSize: Size,\n  isFullscreen: boolean = false,\n  minimumSize: Size = { width: 0, height: 0 },\n  cachedPosition?: Point,\n) {\n  const [elementCurrentPosition, setElementCurrentPosition] = useState<Point | undefined>(cachedPosition);\n  const [elementCurrentSize, setElementCurrentSize] = useState<Size | undefined>(undefined);\n\n  const [getElementPositionOnStartTransform, setElementPositionOnStartTransform] = useSignal({ x: 0, y: 0 });\n  const [getElementSizeOnStartTransform, setElementSizeOnStartTransform] = useSignal({ width: 0, height: 0 });\n  const [getTransformStartPoint, setTransformStartPoint] = useSignal({ x: 0, y: 0 });\n\n  const elementPositionOnStartTransform = getElementPositionOnStartTransform();\n  const transformStartPoint = getTransformStartPoint();\n\n  const element = ref.current;\n  const dragHandleElement = dragHandleElementRef.current;\n\n  const [isInitiated, setIsInitiated] = useFlag(false);\n  const [wasElementShown, setWasElementShown] = useFlag(false);\n  const [isDragging, startDragging, stopDragging] = useFlag(false);\n  const [isResizing, startResizing, stopResizing] = useFlag(false);\n  const [isWindowsResizing, startWindowResizing, stopWindowResizing] = useFlag(false);\n\n  const [hitResizeHandle, setHitResizeHandle] = useState<ResizeHandleType | undefined>(undefined);\n\n  function getVisibleArea() {\n    return {\n      width: window.innerWidth,\n      height: window.innerHeight,\n    };\n  }\n\n  const updateCurrentPosition = useLastCallback((position: Point) => {\n    if (!isFullscreen) setElementCurrentPosition({ x: position.x, y: position.y });\n  });\n\n  const getActualPosition = useLastCallback(() => {\n    return isFullscreen ? FULLSCREEN_POSITION : elementCurrentPosition;\n  });\n\n  const getCenteredPosition = useLastCallback(() => {\n    if (!elementCurrentSize) return undefined;\n    const { width, height } = elementCurrentSize;\n\n    const visibleArea = getVisibleArea();\n    const viewportWidth = visibleArea.width;\n    const viewportHeight = visibleArea.height;\n\n    const centeredX = (viewportWidth - width) / 2;\n    const centeredY = (viewportHeight - height) / 2;\n\n    return { x: centeredX, y: centeredY };\n  });\n\n  useEffect(() => {\n    if (element) setWasElementShown();\n  }, [element]);\n\n  useEffect(() => {\n    if (!isInitiated && elementCurrentSize) {\n      const centeredPosition = getCenteredPosition();\n      if (!centeredPosition) return;\n\n      updateCurrentPosition(centeredPosition);\n      setIsInitiated();\n    }\n  }, [elementCurrentSize, isInitiated, element]);\n\n  const handleStartDrag = useLastCallback((event: MouseEvent | TouchEvent) => {\n    if (event instanceof MouseEvent && event.button !== 0) {\n      return;\n    }\n\n    const targetElement = event.target as HTMLElement;\n    if (targetElement.closest('.no-drag') || !element) {\n      return;\n    }\n    const { pageX, pageY } = ('touches' in event) ? event.touches[0] : event;\n\n    const { left, top } = element.getBoundingClientRect();\n    setElementPositionOnStartTransform({ x: left, y: top });\n    setTransformStartPoint({ x: pageX, y: pageY });\n\n    startDragging();\n  });\n\n  function getResizeHandleFromTarget(targetElement: HTMLElement) {\n    const closest = (selector: string) => targetElement.closest(selector);\n\n    if (!closest(RESIZE_HANDLE_SELECTOR)) return undefined;\n    for (const selector of resizeHandleSelectors) {\n      if (closest(`.${selector}`)) { return resizeHandleSelectorsMap[selector]; }\n    }\n    return undefined;\n  }\n\n  const handleStartResize = useLastCallback((event: MouseEvent | TouchEvent) => {\n    if (event instanceof MouseEvent && event.button !== 0) {\n      return;\n    }\n\n    const targetElement = event.target as HTMLElement;\n    if (!element || !targetElement) {\n      return;\n    }\n    const resizeHandle = getResizeHandleFromTarget(targetElement);\n\n    if (resizeHandle === undefined) return;\n    setHitResizeHandle(resizeHandle);\n\n    const { pageX, pageY } = ('touches' in event) ? event.touches[0] : event;\n\n    const {\n      left, right, top, bottom,\n    } = element.getBoundingClientRect();\n    setElementPositionOnStartTransform({ x: left, y: top });\n    setElementSizeOnStartTransform({ width: right - left, height: bottom - top });\n    setTransformStartPoint({ x: pageX, y: pageY });\n\n    startResizing();\n  });\n\n  const handleDragRelease = useLastCallback(() => {\n    stopDragging();\n  });\n\n  const handleResizeRelease = useLastCallback(() => {\n    stopResizing();\n  });\n\n  useEffect(() => {\n    if (!isDragEnabled) {\n      stopDragging();\n    }\n  }, [isDragEnabled]);\n\n  const ensurePositionInVisibleArea = (x: number, y: number) => {\n    const visibleArea = getVisibleArea();\n\n    const visibleAreaWidth = visibleArea.width;\n    const visibleAreaHeight = visibleArea.height;\n\n    const componentWidth = elementCurrentSize!.width;\n    const componentHeight = elementCurrentSize!.height;\n\n    let newX = x;\n    let newY = y;\n\n    if (newX < 0) newX = 0;\n    if (newY < 0) newY = 0;\n    if (newX + componentWidth > visibleAreaWidth) newX = visibleAreaWidth - componentWidth;\n    if (newY + componentHeight > visibleAreaHeight) newY = visibleAreaHeight - componentHeight;\n\n    return { x: newX, y: newY };\n  };\n\n  const adjustPositionWithinBounds = useLastCallback(() => {\n    if (isFullscreen) return;\n    const position = !wasElementShown && !cachedPosition ? getCenteredPosition() : elementCurrentPosition;\n    if (!elementCurrentSize || !position) return;\n    const newPosition = ensurePositionInVisibleArea(position.x, position.y);\n    updateCurrentPosition(newPosition);\n  });\n\n  const ensureSizeInVisibleArea = useLastCallback((sizeForCheck: Size) => {\n    const newSize = sizeForCheck;\n\n    const visibleArea = getVisibleArea();\n\n    const originalWidth = originalSize.width;\n    const originalHeight = originalSize.height;\n    newSize.width = Math.min(visibleArea.width, Math.max(originalWidth, newSize.width));\n    newSize.height = Math.min(visibleArea.height, Math.max(originalHeight, newSize.height));\n\n    return newSize;\n  });\n\n  useEffect(() => {\n    if (isResizing) return;\n    const newSize = ensureSizeInVisibleArea({ width: originalSize.width, height: originalSize.height });\n    if (newSize) setElementCurrentSize(newSize);\n  }, [originalSize, isResizing]);\n\n  const adjustSizeWithinBounds = useLastCallback(() => {\n    if (!elementCurrentSize || isResizing) return;\n    const newSize = ensureSizeInVisibleArea(elementCurrentSize);\n    if (newSize) setElementCurrentSize(newSize);\n  });\n\n  useEffect(() => {\n    if (isResizing) return;\n    adjustPositionWithinBounds();\n  }, [elementCurrentSize, isResizing]);\n\n  useEffect(() => {\n    const handleWindowResize = () => {\n      startWindowResizing();\n      adjustSizeWithinBounds();\n      adjustPositionWithinBounds();\n      if (resizeTimeout) {\n        clearTimeout(resizeTimeout);\n        resizeTimeout = undefined;\n      }\n      resizeTimeout = window.setTimeout(() => {\n        resizeTimeout = undefined;\n        stopWindowResizing();\n      }, 250);\n    };\n\n    window.addEventListener('resize', handleWindowResize);\n\n    return () => {\n      clearTimeout(resizeTimeout);\n      resizeTimeout = undefined;\n      window.removeEventListener('resize', handleWindowResize);\n    };\n  }, [adjustPositionWithinBounds]);\n\n  const handleDrag = useLastCallback((event: MouseEvent | TouchEvent) => {\n    if (!isDragging || !element) return;\n    const { pageX, pageY } = ('touches' in event) ? event.touches[0] : event;\n\n    const offsetX = pageX - transformStartPoint.x;\n    const offsetY = pageY - transformStartPoint.y;\n\n    const newX = elementPositionOnStartTransform.x + offsetX;\n    const newY = elementPositionOnStartTransform.y + offsetY;\n\n    if (elementCurrentSize) setElementCurrentPosition(ensurePositionInVisibleArea(newX, newY));\n  });\n\n  const handleResize = useLastCallback((event: MouseEvent | TouchEvent) => {\n    if (!isResizing || !element || hitResizeHandle === undefined) return;\n    const { pageX, pageY } = ('touches' in event) ? event.touches[0] : event;\n    const sizeOnStartTransform = getElementSizeOnStartTransform();\n\n    const pageVisibleX = Math.min(Math.max(0, pageX), getVisibleArea().width);\n    const pageVisibleY = Math.min(Math.max(0, pageY), getVisibleArea().height);\n\n    const offsetX = pageVisibleX - transformStartPoint.x;\n    const offsetY = pageVisibleY - transformStartPoint.y;\n\n    const maxX = elementPositionOnStartTransform.x + sizeOnStartTransform.width - minimumSize.width;\n    const maxY = elementPositionOnStartTransform.y + sizeOnStartTransform.height - minimumSize.height;\n\n    const originalBounds = {\n      x: elementPositionOnStartTransform.x,\n      y: elementPositionOnStartTransform.y,\n      width: sizeOnStartTransform.width,\n      height: sizeOnStartTransform.height,\n    };\n\n    const newBounds = { ...originalBounds };\n\n    if (hitResizeHandle === ResizeHandleType.Left\n    || hitResizeHandle === ResizeHandleType.TopLeft\n    || hitResizeHandle === ResizeHandleType.BottomLeft\n    ) {\n      newBounds.width = Math.max(sizeOnStartTransform.width - offsetX, minimumSize.width);\n      newBounds.x = Math.min(newBounds.x + offsetX, maxX);\n    }\n\n    if (hitResizeHandle === ResizeHandleType.Right\n    || hitResizeHandle === ResizeHandleType.TopRight\n    || hitResizeHandle === ResizeHandleType.BottomRight\n    ) {\n      newBounds.width = Math.max(sizeOnStartTransform.width + offsetX, minimumSize.width);\n    }\n\n    if (hitResizeHandle === ResizeHandleType.Top\n    || hitResizeHandle === ResizeHandleType.TopLeft\n    || hitResizeHandle === ResizeHandleType.TopRight\n    ) {\n      newBounds.height = Math.max(sizeOnStartTransform.height - offsetY, minimumSize.height);\n      newBounds.y = Math.min(newBounds.y + offsetY, maxY);\n    }\n\n    if (hitResizeHandle === ResizeHandleType.Bottom\n    || hitResizeHandle === ResizeHandleType.BottomLeft\n    || hitResizeHandle === ResizeHandleType.BottomRight\n    ) {\n      newBounds.height = Math.max(sizeOnStartTransform.height + offsetY, minimumSize.height);\n    }\n\n    setElementCurrentSize({ width: newBounds.width, height: newBounds.height });\n    setElementCurrentPosition({ x: newBounds.x, y: newBounds.y });\n  });\n\n  useEffect(() => {\n    let cleanup: NoneToVoidFunction | undefined;\n    if (dragHandleElement && isDragEnabled) {\n      cleanup = captureEvents(dragHandleElement, {\n        onCapture: handleStartDrag,\n        onDrag: handleDrag,\n        onRelease: handleDragRelease,\n        onClick: handleDragRelease,\n        onDoubleClick: handleDragRelease,\n      });\n    }\n    return cleanup;\n  }, [isDragEnabled, dragHandleElement]);\n\n  useEffect(() => {\n    const cleanups: NoneToVoidFunction[] = [];\n    if (element && isDragEnabled) {\n      for (const selector of resizeHandleSelectors) {\n        const resizeHandler = element.querySelector(`.resizeHandle.${selector}`) as HTMLElement;\n\n        if (resizeHandler) {\n          const cleanup = captureEvents(resizeHandler, {\n            onCapture: handleStartResize,\n            onDrag: handleResize,\n            onRelease: handleResizeRelease,\n            onClick: handleResizeRelease,\n            onDoubleClick: handleResizeRelease,\n          });\n\n          if (cleanup) {\n            cleanups.push(cleanup);\n          }\n        }\n      }\n    }\n\n    return () => {\n      cleanups.forEach((cleanup) => cleanup());\n    };\n  }, [isDragEnabled, element]);\n\n  const cursorStyle = isDragging ? 'cursor: grabbing !important; ' : '';\n\n  const actualPosition = getActualPosition();\n\n  if (!isInitiated || !elementCurrentSize || !actualPosition) {\n    return {\n      isDragging: false,\n      style: cursorStyle,\n    };\n  }\n\n  const style = buildStyle(\n    `left: ${actualPosition.x}px;`,\n    `top: ${actualPosition.y}px;`,\n    !isFullscreen && `max-width: ${elementCurrentSize.width}px;`,\n    !isFullscreen && `max-height: ${elementCurrentSize.height}px;`,\n    'position: fixed;',\n    (isDragging || isResizing || isWindowsResizing) && 'transition: none !important;',\n    cursorStyle,\n  );\n\n  return {\n    position: elementCurrentPosition,\n    size: elementCurrentSize,\n    isDragging,\n    isResizing,\n    style,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"kUZmBlnN\",\"window-state-button\":\"Rax9j_TK\",\"windowStateButton\":\"Rax9j_TK\",\"button\":\"SMRJmUuE\",\"avatars\":\"GP17QhNN\",\"state-icon\":\"sdbTXCxq\",\"stateIcon\":\"sdbTXCxq\",\"icon\":\"P0P4gW6a\",\"title\":\"TZFjRaG4\"};","import React, {\n  memo, useMemo,\n  useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { WebApp } from '../../../types/webapp';\n\nimport { selectActiveWebApp, selectTabState, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { unique } from '../../../util/iteratees';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport styles from './MinimizedWebAppModal.module.scss';\n\ntype StateProps = {\n  activeTabBot?: ApiUser;\n  isMinimizedState?: boolean;\n  openedWebApps?: Record<string, WebApp>;\n};\n\nconst MinimizedWebAppModal = ({\n  activeTabBot, isMinimizedState, openedWebApps,\n}: StateProps) => {\n  const {\n    changeWebAppModalState,\n    closeWebAppModal,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const openedWebAppsValues = useMemo(() => {\n    return openedWebApps && Object.values(openedWebApps);\n  }, [openedWebApps]);\n\n  const openedTabsCount = openedWebAppsValues?.length;\n\n  const peers = useMemo(() => {\n    if (!openedTabsCount) return [];\n\n    const global = getGlobal();\n    const activeTabBotId = activeTabBot?.id;\n    const openedApps = unique([activeTabBotId, ...openedWebAppsValues.map((app) => app.botId)]);\n    const bots = openedApps.map((id) => id && selectUser(global, id)).filter(Boolean).slice(0, 3);\n    return bots;\n  }, [openedTabsCount, activeTabBot, openedWebAppsValues]);\n\n  const handleCloseClick = useLastCallback(() => {\n    closeWebAppModal();\n  });\n\n  const handleExpandClick = useLastCallback(() => {\n    changeWebAppModalState({ state: 'maximized' });\n  });\n\n  if (!isMinimizedState) return undefined;\n\n  function renderTitle() {\n    const activeTabName = peers.length > 0 && peers[0]?.firstName;\n    const title = openedTabsCount && activeTabName && openedTabsCount > 1\n      ? `${lang('MiniAppsMoreTabs',\n        {\n          botName: activeTabName,\n          count: openedTabsCount - 1,\n        },\n        {\n          pluralValue: openedTabsCount - 1,\n        })}`\n      : activeTabName;\n\n    return (\n      <div className={styles.title}>\n        {title}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n      )}\n    >\n      <Button\n        className={styles.button}\n        round\n        color=\"translucent\"\n        size=\"tiny\"\n        ariaLabel={oldLang('Close')}\n        onClick={handleCloseClick}\n      >\n        <Icon className={styles.icon} name=\"close\" />\n      </Button>\n      <AvatarList className={styles.avatars} size=\"mini\" peers={peers} />\n      {renderTitle()}\n      <Button\n        className={buildClassName(\n          styles.windowStateButton,\n          'no-drag',\n        )}\n        round\n        color=\"translucent\"\n        size=\"tiny\"\n        onClick={handleExpandClick}\n      >\n        <Icon className={styles.stateIcon} name=\"expand-modal\" />\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const tabState = selectTabState(global);\n    const webApps = tabState.webApps;\n\n    const { botId } = selectActiveWebApp(global) || {};\n    const { modalState, openedWebApps } = webApps || {};\n    const isMinimizedState = modalState === 'minimized';\n    const activeTabBot = botId ? selectUser(global, botId) : undefined;\n\n    return {\n      activeTabBot,\n      isMinimizedState,\n      openedWebApps,\n    };\n  },\n)(MinimizedWebAppModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"RFg0Ey2I\",\"user-count-badge\":\"UZtJ6ZXb\",\"userCountBadge\":\"UZtJ6ZXb\",\"user-badge-icon\":\"pTiZFhsG\",\"userBadgeIcon\":\"pTiZFhsG\",\"name\":\"TzA5nqCC\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiUser,\n} from '../../../api/types';\n\nimport {\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport PeerBadge from '../../common/PeerBadge';\n\nimport styles from './WebAppGridItem.module.scss';\n\nexport type OwnProps = {\n  // eslint-disable-next-line react/no-unused-prop-types\n  chatId: string;\n  isPopularApp?: boolean;\n};\n\nexport type StateProps = {\n  user?: ApiUser;\n};\n\nfunction WebAppGridItem({ user, isPopularApp }: OwnProps & StateProps) {\n  const {\n    requestMainWebView,\n  } = getActions();\n\n  const lang = useLang();\n\n  const handleClick = useLastCallback(() => {\n    if (!user) {\n      return;\n    }\n    const botId = user?.id;\n    if (!botId) {\n      return;\n    }\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId,\n      peerId: botId,\n      theme,\n    });\n  });\n\n  if (!user) return undefined;\n\n  // eslint-disable-next-line no-null/no-null\n\n  const title = user?.firstName;\n  const activeUserCount = user?.botActiveUsers;\n  const badgeText = activeUserCount && isPopularApp ? formatIntegerCompact(lang, activeUserCount) : undefined;\n\n  return (\n    <div\n      className={styles.container}\n      onClick={handleClick}\n    >\n      <PeerBadge\n        className={buildClassName(styles.avatarContainer, isPopularApp && 'PopularAppGridItem')}\n        textClassName={styles.name}\n        badgeClassName={styles.userCountBadge}\n        badgeIconClassName={styles.userBadgeIcon}\n        peer={user}\n        text={title}\n        badgeText={badgeText}\n        badgeIcon=\"user-filled\"\n      />\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const user = selectUser(global, chatId);\n\n    return {\n      user,\n    };\n  },\n)(WebAppGridItem));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"BJV09FsC\",\"search\":\"bdi8G7GR\",\"section-title\":\"ex3kxgWX\",\"sectionTitle\":\"ex3kxgWX\",\"section-content\":\"uIZzLhEh\",\"sectionContent\":\"uIZzLhEh\",\"showMoreLink\":\"h_Zs9ypA\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback,\n  useMemo,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { LoadMoreDirection } from '../../../types';\n\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { throttle } from '../../../util/schedulers';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport SearchInput from '../../ui/SearchInput';\nimport WebAppGridItem from './WebAppGridItem';\n\nimport styles from './MoreAppsTabContent.module.scss';\n\nconst POPULAR_APPS_SLICE = 30;\n\nexport type OwnProps = {\n};\n\ntype StateProps = {\n  isLoading?: boolean;\n  foundIds?: string[];\n  recentBotIds?: string[];\n};\nconst LESS_GRID_ITEMS_AMOUNT = 5;\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst MoreAppsTabContent: FC<OwnProps & StateProps> = ({\n  foundIds,\n  recentBotIds,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const [shouldShowMoreMine, setShouldShowMoreMine] = useState<boolean>(false);\n  const {\n    searchPopularBotApps,\n  } = getActions();\n\n  const handleToggleShowMoreMine = useLastCallback(() => {\n    setShouldShowMoreMine((prev) => !prev);\n  });\n\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const filteredFoundIds = useMemo(() => {\n    if (!foundIds) return [];\n\n    return filterPeersByQuery({ ids: foundIds, query: searchQuery, type: 'user' });\n  }, [foundIds, searchQuery]);\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchPopularBotApps();\n      });\n    }\n  }, []);\n\n  const handleSearchInputReset = useCallback(() => {\n    setSearchQuery('');\n  }, []);\n\n  return (\n    <InfiniteScroll\n      className={buildClassName(styles.root, 'custom-scroll')}\n      items={filteredFoundIds}\n      onLoadMore={handleLoadMore}\n      itemSelector=\".PopularAppGridItem\"\n      noFastList\n      preloadBackwards={POPULAR_APPS_SLICE}\n    >\n      <SearchInput\n        className={styles.search}\n        value={searchQuery}\n        onChange={setSearchQuery}\n        onReset={handleSearchInputReset}\n        placeholder={lang('SearchApps')}\n      />\n      {recentBotIds && !searchQuery && (\n        <div className={styles.section}>\n          <div className={styles.sectionTitle}>\n            <span>{oldLang('SearchAppsMine')}</span>\n            <span className={styles.showMoreLink} onClick={handleToggleShowMoreMine}>\n              {oldLang(shouldShowMoreMine ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n            </span>\n          </div>\n          <div className={styles.sectionContent}>\n            {recentBotIds.map((id, index) => {\n              if (!shouldShowMoreMine && index >= LESS_GRID_ITEMS_AMOUNT) {\n                return undefined;\n              }\n\n              return (\n                <WebAppGridItem\n                  chatId={id}\n                />\n              );\n            })}\n          </div>\n        </div>\n      )}\n      <div className={styles.section}>\n        <div className={styles.sectionTitle}>\n          {searchQuery ? lang('Apps') : lang('PopularApps')}\n        </div>\n        <div className={styles.sectionContent}>\n          {filteredFoundIds && filteredFoundIds.map((id) => {\n            return (\n              <WebAppGridItem\n                chatId={id}\n                isPopularApp={!searchQuery}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global) => {\n  const globalSearch = selectTabState(global).globalSearch;\n  const foundIds = globalSearch.popularBotApps?.peerIds;\n\n  return {\n    isLoading: !foundIds && globalSearch.fetchingStatus?.botApps,\n    foundIds,\n    recentBotIds: global.topBotApps.userIds,\n  };\n})(MoreAppsTabContent));\n","/* eslint-disable @typescript-eslint/naming-convention */\nimport { useCallback, useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { WebApp, WebAppInboundEvent, WebAppOutboundEvent } from '../../../../types/webapp';\n\nimport { getWebAppKey } from '../../../../global/helpers';\nimport { extractCurrentThemeParams } from '../../../../util/themeStyle';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useWindowSize from '../../../../hooks/window/useWindowSize';\n\nconst SCROLLBAR_STYLE = `* {\n  scrollbar-width: thin;\n  scrollbar-color: %SCROLLBAR_COLOR% transparent;\n}\n\n*::-webkit-scrollbar {\n  width: 6px;\n  height: 6px;\n  background-color: transparent;\n}\n\n*::-webkit-scrollbar-thumb {\n  border-radius: 6px;\n  background-color: %SCROLLBAR_COLOR%;\n}\n\n*::-webkit-scrollbar-corner {\n  background-color: transparent;\n}`;\n\nconst RELOAD_TIMEOUT = 500;\nconst FULLSCREEN_BUTTONS_AREA_HEIGHT = 3.675 * REM;\n\nconst useWebAppFrame = (\n  ref: React.RefObject<HTMLIFrameElement>,\n  isOpen: boolean,\n  isFullscreen: boolean,\n  isSimpleView: boolean,\n  onEvent: (event: WebAppInboundEvent) => void,\n  webApp?: WebApp,\n  onLoad?: () => void,\n) => {\n  const {\n    showNotification,\n    setWebAppPaymentSlug,\n    openInvoice,\n    closeWebApp,\n    openSuggestedStatusModal,\n    updateWebApp,\n  } = getActions();\n\n  const isReloadSupported = useRef<boolean>(false);\n  const reloadTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const ignoreEventsRef = useRef<boolean>(false);\n  const lastFrameSizeRef = useRef<{ width: number; height: number; isResizing?: boolean }>();\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current || !isOpen) return undefined;\n\n    const handleLoad = () => {\n      onLoad?.();\n    };\n\n    const frame = ref.current;\n    frame.addEventListener('load', handleLoad);\n    return () => {\n      frame.removeEventListener('load', handleLoad);\n    };\n  }, [onLoad, ref, isOpen]);\n\n  const sendEvent = useCallback((event: WebAppOutboundEvent) => {\n    if (!ref.current?.contentWindow) return;\n    ref.current.contentWindow.postMessage(JSON.stringify(event), '*');\n  }, [ref]);\n\n  const sendFullScreenChanged = useCallback((value: boolean) => {\n    sendEvent({\n      eventType: 'fullscreen_changed',\n      eventData: {\n        is_fullscreen: value,\n      },\n    });\n  }, [sendEvent]);\n\n  const forceReloadFrame = useLastCallback((url: string) => {\n    if (!ref.current) return;\n    const frame = ref.current;\n    frame.src = 'about:blank';\n    frame.addEventListener('load', () => {\n      frame.src = url;\n    }, { once: true });\n  });\n\n  const reloadFrame = useCallback((url: string) => {\n    if (isReloadSupported.current) {\n      sendEvent({\n        eventType: 'reload_iframe',\n      });\n      reloadTimeout.current = setTimeout(() => {\n        forceReloadFrame(url);\n      }, RELOAD_TIMEOUT);\n      return;\n    }\n\n    forceReloadFrame(url);\n  }, [sendEvent]);\n\n  const sendViewport = useCallback((isNonStable?: boolean) => {\n    if (!ref.current) {\n      return;\n    }\n    const { width, height } = ref.current.getBoundingClientRect();\n    sendEvent({\n      eventType: 'viewport_changed',\n      eventData: {\n        width,\n        height,\n        is_expanded: true,\n        is_state_stable: !isNonStable,\n      },\n    });\n  }, [sendEvent, ref]);\n\n  const sendSafeArea = useCallback(() => {\n    if (!ref.current) {\n      return;\n    }\n    sendEvent({\n      eventType: 'safe_area_changed',\n      eventData: {\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0,\n      },\n    });\n\n    sendEvent({\n      eventType: 'content_safe_area_changed',\n      eventData: {\n        left: 0,\n        right: 0,\n        top: isFullscreen ? FULLSCREEN_BUTTONS_AREA_HEIGHT : 0,\n        bottom: 0,\n      },\n    });\n  }, [sendEvent, isFullscreen, ref]);\n\n  const sendTheme = useCallback(() => {\n    sendEvent({\n      eventType: 'theme_changed',\n      eventData: {\n        theme_params: extractCurrentThemeParams(),\n      },\n    });\n  }, [sendEvent]);\n\n  const sendCustomStyle = useCallback((style: string) => {\n    sendEvent({\n      eventType: 'set_custom_style',\n      eventData: style,\n    });\n  }, [sendEvent]);\n\n  const handleMessage = useCallback((event: MessageEvent<string>) => {\n    if (ignoreEventsRef.current) {\n      return;\n    }\n    const contentWindow = ref.current?.contentWindow;\n    const sourceWindow = event.source as Window;\n\n    if (contentWindow !== sourceWindow) {\n      return;\n    }\n\n    try {\n      const data = JSON.parse(event.data) as WebAppInboundEvent;\n      const { eventType, eventData } = data;\n      // Handle some app requests here to simplify hook usage\n      if (eventType === 'web_app_ready') {\n        onLoad?.();\n      }\n\n      if (eventType === 'web_app_close') {\n        if (webApp) {\n          const key = getWebAppKey(webApp);\n          closeWebApp({ key, skipClosingConfirmation: true });\n        }\n      }\n\n      if (eventType === 'web_app_request_viewport') {\n        sendViewport(windowSize.isResizing);\n      }\n\n      if (eventType === 'web_app_request_safe_area') {\n        sendSafeArea();\n      }\n\n      if (eventType === 'web_app_request_content_safe_area') {\n        sendSafeArea();\n      }\n\n      if (eventType === 'web_app_request_theme') {\n        sendTheme();\n      }\n\n      if (eventType === 'iframe_ready') {\n        const scrollbarColor = getComputedStyle(document.body).getPropertyValue('--color-scrollbar');\n        sendCustomStyle(SCROLLBAR_STYLE.replace(/%SCROLLBAR_COLOR%/g, scrollbarColor));\n        isReloadSupported.current = Boolean(eventData.reload_supported);\n      }\n\n      if (eventType === 'iframe_will_reload') {\n        clearTimeout(reloadTimeout.current);\n      }\n\n      if (eventType === 'web_app_data_send') {\n        if (!isSimpleView) return; // Allowed only in simple view\n        ignoreEventsRef.current = true;\n      }\n\n      // Clipboard access temporarily disabled to address security concerns\n      if (eventType === 'web_app_read_text_from_clipboard') {\n        sendEvent({\n          eventType: 'clipboard_text_received',\n          eventData: {\n            req_id: eventData.req_id,\n            // eslint-disable-next-line no-null/no-null\n            data: null,\n          },\n        });\n      }\n\n      if (eventType === 'web_app_open_scan_qr_popup') {\n        showNotification({\n          message: 'Scanning QR code is not supported in this client yet',\n        });\n      }\n\n      if (eventType === 'web_app_open_invoice') {\n        setWebAppPaymentSlug({\n          slug: eventData.slug,\n        });\n        openInvoice({\n          type: 'slug',\n          slug: eventData.slug,\n        });\n      }\n\n      if (eventType === 'web_app_open_link') {\n        const linkUrl = eventData.url;\n        window.open(linkUrl, '_blank', 'noreferrer');\n      }\n\n      if (eventType === 'web_app_biometry_get_info') {\n        sendEvent({\n          eventType: 'biometry_info_received',\n          eventData: {\n            available: false,\n          },\n        });\n      }\n\n      if (eventType === 'web_app_device_storage_clear'\n        || eventType === 'web_app_device_storage_get_key'\n        || eventType === 'web_app_device_storage_save_key') {\n        const { req_id } = eventData;\n        sendEvent({\n          eventType: 'device_storage_failed',\n          eventData: {\n            req_id,\n            error: 'UNSUPPORTED',\n          },\n        });\n      }\n\n      if (eventType === 'web_app_secure_storage_clear'\n        || eventType === 'web_app_secure_storage_get_key'\n        || eventType === 'web_app_secure_storage_restore_key'\n        || eventType === 'web_app_secure_storage_save_key') {\n        const { req_id } = eventData;\n        sendEvent({\n          eventType: 'secure_storage_failed',\n          eventData: {\n            req_id,\n            error: 'UNSUPPORTED',\n          },\n        });\n      }\n\n      if (eventType === 'web_app_start_accelerometer') {\n        sendEvent({\n          eventType: 'accelerometer_failed',\n          eventData: {\n            error: 'UNSUPPORTED',\n          },\n        });\n      }\n\n      if (eventType === 'web_app_start_gyroscope') {\n        sendEvent({\n          eventType: 'gyroscope_failed',\n          eventData: {\n            error: 'UNSUPPORTED',\n          },\n        });\n      }\n\n      if (eventType === 'web_app_start_device_orientation') {\n        sendEvent({\n          eventType: 'device_orientation_failed',\n          eventData: {\n            error: 'UNSUPPORTED',\n          },\n        });\n      }\n\n      if (eventType === 'web_app_add_to_home_screen') {\n        sendEvent({\n          eventType: 'home_screen_failed',\n          eventData: {\n            error: 'UNSUPPORTED',\n          },\n        });\n      }\n\n      if (eventType === 'web_app_check_home_screen') {\n        sendEvent({\n          eventType: 'home_screen_checked',\n          eventData: {\n            status: 'unsupported',\n          },\n        });\n      }\n\n      if (eventType === 'web_app_set_emoji_status') {\n        const { custom_emoji_id, duration } = eventData;\n\n        if (!custom_emoji_id || typeof custom_emoji_id !== 'string') {\n          sendEvent({\n            eventType: 'emoji_status_failed',\n            eventData: {\n              error: 'SUGGESTED_EMOJI_INVALID',\n            },\n          });\n          return;\n        }\n\n        if (duration) {\n          try {\n            BigInt(duration);\n          } catch (e) {\n            sendEvent({\n              eventType: 'emoji_status_failed',\n              eventData: {\n                error: 'DURATION_INVALID',\n              },\n            });\n            return;\n          }\n        }\n\n        if (!webApp) {\n          sendEvent({\n            eventType: 'emoji_status_failed',\n            eventData: {\n              error: 'UNKNOWN_ERROR',\n            },\n          });\n          return;\n        }\n\n        openSuggestedStatusModal({\n          webAppKey: getWebAppKey(webApp),\n          customEmojiId: custom_emoji_id,\n          duration: Number(duration),\n          botId: webApp.botId,\n        });\n      }\n\n      onEvent(data);\n    } catch (err) {\n      // Ignore other messages\n    }\n  }, [\n    isSimpleView, sendEvent, onEvent, sendCustomStyle, webApp,\n    sendTheme, sendViewport, sendSafeArea, onLoad, windowSize.isResizing,\n    ref,\n  ]);\n\n  useEffect(() => {\n    const { width, height, isResizing } = windowSize;\n    if (lastFrameSizeRef.current && lastFrameSizeRef.current.width === width\n      && lastFrameSizeRef.current.height === height && !lastFrameSizeRef.current.isResizing) return;\n    lastFrameSizeRef.current = { width, height, isResizing };\n    sendViewport(isResizing);\n  }, [sendViewport, sendSafeArea, windowSize]);\n\n  useEffect(() => {\n    if (!webApp?.plannedEvents?.length) return;\n    const events = webApp.plannedEvents;\n    events.forEach((event) => {\n      sendEvent(event);\n    });\n\n    updateWebApp({\n      key: getWebAppKey(webApp),\n      update: {\n        plannedEvents: [],\n      },\n    });\n  }, [sendEvent, webApp]);\n\n  useEffect(() => {\n    window.addEventListener('message', handleMessage);\n    return () => window.removeEventListener('message', handleMessage);\n  }, [handleMessage, ref]);\n\n  useEffect(() => {\n    if (isOpen && ref.current?.contentWindow) {\n      sendViewport();\n      sendSafeArea();\n      ignoreEventsRef.current = false;\n    } else {\n      lastFrameSizeRef.current = undefined;\n    }\n  }, [isOpen, isFullscreen, sendViewport, sendSafeArea, ref]);\n\n  return {\n    sendEvent, sendFullScreenChanged, reloadFrame, sendViewport, sendSafeArea, sendTheme,\n  };\n};\n\nexport default useWebAppFrame;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"LeeJZdwH\",\"multi-tab\":\"ESsGT5OD\",\"multiTab\":\"ESsGT5OD\",\"loadingPlaceholder\":\"jEAibDyh\",\"placeholderPath\":\"Gx1BIECZ\",\"fadeOpacityBreath\":\"N5Blieah\",\"defaultPlaceholderGrid\":\"Ig_t1R7i\",\"placeholderSquare\":\"ablUg8HU\",\"hide\":\"Wrl63uWL\",\"frame\":\"OmY14FFl\",\"with-button\":\"liDRl1xT\",\"withButton\":\"liDRl1xT\",\"hidden\":\"vOFiAq3l\",\"secondary-button\":\"ypxiUCFQ\",\"secondaryButton\":\"ypxiUCFQ\",\"main-button\":\"U_ggDKn1\",\"mainButton\":\"U_ggDKn1\",\"visible\":\"KwI4XdkC\",\"buttons-container\":\"mR_hsBdT\",\"buttonsContainer\":\"mR_hsBdT\",\"one-row\":\"YfQO314y\",\"oneRow\":\"YfQO314y\",\"two-rows\":\"gUldkEoy\",\"twoRows\":\"gUldkEoy\",\"left-to-right\":\"ntESqwQ_\",\"leftToRight\":\"ntESqwQ_\",\"right-to-left\":\"q6IUFEL0\",\"rightToLeft\":\"q6IUFEL0\",\"top-to-bottom\":\"gb4iHJ9H\",\"topToBottom\":\"gb4iHJ9H\",\"bottom-to-top\":\"R_bh3GF8\",\"bottomToTop\":\"R_bh3GF8\",\"hide-horizontal\":\"oYaRA7u4\",\"hideHorizontal\":\"oYaRA7u4\",\"secondary-button-spinner\":\"NYV0yA2J\",\"secondaryButtonSpinner\":\"NYV0yA2J\",\"main-button-spinner\":\"oq6HKJur\",\"mainButtonSpinner\":\"oq6HKJur\",\"web-app-popup\":\"YEOURXza\",\"webAppPopup\":\"YEOURXza\",\"without-title\":\"gvljUzY9\",\"withoutTitle\":\"gvljUzY9\",\"closeIcon\":\"BvNtfigU\",\"state-back\":\"rC2wkMIk\",\"stateBack\":\"rC2wkMIk\",\"backIconContainer\":\"JXsuZ01s\",\"moreIcon\":\"T58ozRyW\",\"headerPanel\":\"eYrhewMy\",\"icon\":\"a0AI_he5\",\"headerSplitButton\":\"Tl4_05AQ\",\"headerButton\":\"MvCwTbk_\",\"left\":\"emOpAMBm\",\"right\":\"z4C5VD5o\",\"buttonCaptionContainer\":\"dpZR3YT7\",\"backButtonCaption\":\"dWDprnWa\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAttachBot, ApiBotAppSettings, ApiUser,\n} from '../../../api/types';\nimport type { TabState } from '../../../global/types';\nimport type { BotAppPermissions, ThemeKey } from '../../../types';\nimport type {\n  PopupOptions,\n  WebApp,\n  WebAppInboundEvent,\n  WebAppModalStateType,\n  WebAppOutboundEvent,\n} from '../../../types/webapp';\n\nimport { TME_LINK_PREFIX } from '../../../config';\nimport { convertToApiChatType } from '../../../global/helpers';\nimport { getWebAppKey } from '../../../global/helpers/bots';\nimport {\n  selectBotAppPermissions,\n  selectTabState,\n  selectTheme,\n  selectUser,\n  selectUserFullInfo,\n  selectWebApp,\n} from '../../../global/selectors';\nimport { getGeolocationStatus, IS_GEOLOCATION_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport download from '../../../util/download';\nimport { extractCurrentThemeParams, validateHexColor } from '../../../util/themeStyle';\nimport { callApi } from '../../../api/gramjs';\nimport renderText from '../../common/helpers/renderText';\n\nimport { getIsWebAppsFullscreenSupported } from '../../../hooks/useAppLayout';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\nimport useFullscreen, { checkIfFullscreen } from '../../../hooks/window/useFullscreen';\nimport usePopupLimit from './hooks/usePopupLimit';\nimport useWebAppFrame from './hooks/useWebAppFrame';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Modal from '../../ui/Modal';\nimport Spinner from '../../ui/Spinner';\nimport Transition from '../../ui/Transition';\n\nimport styles from './WebAppModalTabContent.module.scss';\n\ntype WebAppButton = {\n  isVisible: boolean;\n  isActive: boolean;\n  text: string;\n  color: string;\n  textColor: string;\n  isProgressVisible: boolean;\n  position?: 'left' | 'right' | 'top' | 'bottom';\n};\n\nexport type OwnProps = {\n  modal?: TabState['webApps'];\n  webApp?: WebApp;\n  registerSendEventCallback: (callback: (event: WebAppOutboundEvent) => void) => void;\n  registerReloadFrameCallback: (callback: (url: string) => void) => void;\n  onContextMenuButtonClick: (e: React.MouseEvent) => void;\n  isTransforming?: boolean;\n  isMultiTabSupported? : boolean;\n  modalHeight: number;\n};\n\ntype StateProps = {\n  bot?: ApiUser;\n  currentUser?: ApiUser;\n  botAppSettings?: ApiBotAppSettings;\n  attachBot?: ApiAttachBot;\n  theme?: ThemeKey;\n  isPaymentModalOpen?: boolean;\n  paymentStatus?: TabState['payment']['status'];\n  isPremium?: boolean;\n  modalState?: WebAppModalStateType;\n  botAppPermissions?: BotAppPermissions;\n};\n\nconst NBSP = '\\u00A0';\n\nconst MAIN_BUTTON_ANIMATION_TIME = 250;\nconst ANIMATION_WAIT = 400;\nconst COLLAPSING_WAIT = 350;\nconst POPUP_SEQUENTIAL_LIMIT = 3;\nconst POPUP_RESET_DELAY = 2000; // 2s\nconst APP_NAME_DISPLAY_DURATION = 3800;\nconst SANDBOX_ATTRIBUTES = [\n  'allow-scripts',\n  'allow-same-origin',\n  'allow-popups',\n  'allow-forms',\n  'allow-modals',\n  'allow-storage-access-by-user-activation',\n].join(' ');\n\nconst DEFAULT_BUTTON_TEXT: Record<string, string> = {\n  ok: 'OK',\n  cancel: 'Cancel',\n  close: 'Close',\n};\n\nconst WebAppModalTabContent: FC<OwnProps & StateProps> = ({\n  modal,\n  webApp,\n  bot,\n  theme,\n  isPaymentModalOpen,\n  paymentStatus,\n  registerSendEventCallback,\n  registerReloadFrameCallback,\n  isTransforming,\n  modalState,\n  isMultiTabSupported,\n  onContextMenuButtonClick,\n  botAppPermissions,\n  botAppSettings,\n  modalHeight,\n}) => {\n  const {\n    closeActiveWebApp,\n    sendWebViewData,\n    toggleAttachBot,\n    openTelegramLink,\n    setWebAppPaymentSlug,\n    switchBotInline,\n    sharePhoneWithBot,\n    updateWebApp,\n    resetPaymentStatus,\n    openChatWithInfo,\n    showNotification,\n    openEmojiStatusAccessModal,\n    openLocationAccessModal,\n    changeWebAppModalState,\n    closeWebAppModal,\n    openPreparedInlineMessageModal,\n  } = getActions();\n  const [mainButton, setMainButton] = useState<WebAppButton | undefined>();\n  const [secondaryButton, setSecondaryButton] = useState<WebAppButton | undefined>();\n\n  const [isLoaded, markLoaded, markUnloaded] = useFlag(false);\n\n  const [popupParameters, setPopupParameters] = useState<PopupOptions | undefined>();\n  const [isRequestingPhone, setIsRequestingPhone] = useState(false);\n  const [isRequestingWriteAccess, setIsRequestingWriteAccess] = useState(false);\n  const [requestedFileDownload, setRequestedFileDownload] = useState<{ url: string; fileName: string } | undefined>();\n  const [bottomBarColor, setBottomBarColor] = useState<string | undefined>();\n  const {\n    unlockPopupsAt, handlePopupOpened, handlePopupClosed,\n  } = usePopupLimit(POPUP_SEQUENTIAL_LIMIT, POPUP_RESET_DELAY);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const headerButtonRef = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const headerButtonCaptionRef = useRef<HTMLDivElement>(null);\n\n  const isFullscreen = modalState === 'fullScreen';\n  const isMinimizedState = modalState === 'minimized';\n\n  const exitFullScreenCallback = useLastCallback(() => {\n    setTimeout(() => { changeWebAppModalState({ state: 'maximized' }); }, COLLAPSING_WAIT);\n  });\n\n  // eslint-disable-next-line no-null/no-null\n  const fullscreenElementRef = useRef<HTMLElement | null>(null);\n\n  useEffect(() => {\n    fullscreenElementRef.current = document.querySelector('#portals') as HTMLElement;\n  }, []);\n\n  const [, setFullscreen, exitFullscreen] = useFullscreen(fullscreenElementRef, exitFullScreenCallback);\n\n  const activeWebApp = modal?.activeWebAppKey ? modal.openedWebApps[modal.activeWebAppKey] : undefined;\n  const activeWebAppName = activeWebApp?.appName;\n  const {\n    url, buttonText, isBackButtonVisible,\n  } = webApp || {};\n\n  const {\n    placeholderPath,\n  } = botAppSettings || {};\n\n  const isCloseModalOpen = Boolean(webApp?.isCloseModalOpen);\n  const isRemoveModalOpen = Boolean(webApp?.isRemoveModalOpen);\n\n  const webAppKey = webApp && getWebAppKey(webApp);\n  const activeWebAppKey = activeWebApp && getWebAppKey(activeWebApp);\n\n  const isActive = (activeWebApp && webApp) && activeWebAppKey === webAppKey;\n\n  const isAvailable = IS_GEOLOCATION_SUPPORTED;\n  const isAccessRequested = botAppPermissions?.geolocation !== undefined;\n  const isAccessGranted = Boolean(botAppPermissions?.geolocation);\n\n  const updateCurrentWebApp = useLastCallback((updatedPartialWebApp: Partial<WebApp>) => {\n    if (!webAppKey) return;\n    updateWebApp({ key: webAppKey, update: updatedPartialWebApp });\n  });\n\n  const themeParams = useMemo(() => {\n    return extractCurrentThemeParams();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [theme]);\n\n  useEffect(() => {\n    setBottomBarColor(themeParams.secondary_bg_color);\n  }, [themeParams]);\n\n  const themeBackgroundColor = themeParams.bg_color;\n  const [backgroundColorFromEvent, setBackgroundColorFromEvent] = useState<string | undefined>();\n  const backgroundColorFromSettings = theme === 'light' ? botAppSettings?.backgroundColor\n    : botAppSettings?.backgroundDarkColor;\n\n  useEffect(() => {\n    const color = backgroundColorFromEvent || backgroundColorFromSettings || themeBackgroundColor;\n\n    updateCurrentWebApp({ backgroundColor: color });\n  }, [themeBackgroundColor, backgroundColorFromEvent, backgroundColorFromSettings]);\n\n  const themeHeaderColor = themeParams.bg_color;\n  const [headerColorFromEvent, setHeaderColorFromEvent] = useState<string | undefined>();\n  const headerColorFromSettings = theme === 'light' ? botAppSettings?.headerColor\n    : botAppSettings?.headerDarkColor;\n\n  useEffect(() => {\n    const color = headerColorFromEvent || headerColorFromSettings || themeHeaderColor;\n\n    updateCurrentWebApp({ headerColor: color });\n  }, [themeHeaderColor, headerColorFromEvent, headerColorFromSettings]);\n\n  // eslint-disable-next-line no-null/no-null\n  const frameRef = useRef<HTMLIFrameElement>(null);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const isOpen = modal?.isModalOpen || false;\n  const isSimple = Boolean(buttonText);\n\n  const {\n    reloadFrame, sendEvent, sendFullScreenChanged, sendViewport, sendSafeArea, sendTheme,\n  } = useWebAppFrame(frameRef, isOpen, isFullscreen, isSimple, handleEvent, webApp, markLoaded);\n\n  useEffect(() => {\n    if (isActive) registerSendEventCallback(sendEvent);\n  }, [sendEvent, registerSendEventCallback, isActive]);\n\n  useEffect(() => {\n    if (isActive) registerReloadFrameCallback(reloadFrame);\n  }, [reloadFrame, registerReloadFrameCallback, isActive]);\n\n  const isMainButtonVisible = isLoaded && mainButton?.isVisible && mainButton.text.trim().length > 0;\n  const isSecondaryButtonVisible = isLoaded && secondaryButton?.isVisible && secondaryButton.text.trim().length > 0;\n\n  const handleHideCloseModal = useLastCallback(() => {\n    updateCurrentWebApp({ isCloseModalOpen: false });\n  });\n  const handleConfirmCloseModal = useLastCallback(() => {\n    updateCurrentWebApp({ shouldConfirmClosing: false, isCloseModalOpen: false });\n    setTimeout(() => {\n      closeActiveWebApp();\n    }, ANIMATION_WAIT);\n  });\n\n  const handleHideRemoveModal = useLastCallback(() => {\n    updateCurrentWebApp({ isRemoveModalOpen: false });\n  });\n\n  const handleMainButtonClick = useLastCallback(() => {\n    sendEvent({\n      eventType: 'main_button_pressed',\n    });\n  });\n\n  const handleSecondaryButtonClick = useLastCallback(() => {\n    sendEvent({\n      eventType: 'secondary_button_pressed',\n    });\n  });\n\n  const handleAppPopupClose = useLastCallback((buttonId?: string) => {\n    setPopupParameters(undefined);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'popup_closed',\n      eventData: {\n        button_id: buttonId,\n      },\n    });\n  });\n\n  const handleAppPopupModalClose = useLastCallback(() => {\n    handleAppPopupClose();\n  });\n\n  const sendThemeCallback = useLastCallback(() => {\n    sendTheme();\n  });\n\n  // Notify view that theme changed\n  useSyncEffect(() => {\n    setTimeout(() => {\n      sendThemeCallback();\n    }, ANIMATION_WAIT);\n  }, [theme]);\n\n  const setFullscreenCallback = useLastCallback(() => {\n    if (!checkIfFullscreen() && isActive) {\n      setFullscreen?.();\n    }\n  });\n\n  const exitIfFullscreenCallback = useLastCallback(() => {\n    if (checkIfFullscreen() && isActive) {\n      exitFullscreen?.();\n    }\n  });\n\n  const sendFullScreenChangedCallback = useLastCallback(\n    (value: boolean) => { if (isActive) sendFullScreenChanged(value); },\n  );\n\n  useEffect(() => {\n    if (isFullscreen) {\n      setFullscreenCallback();\n      sendFullScreenChangedCallback(true);\n    } else {\n      exitIfFullscreenCallback();\n      sendFullScreenChangedCallback(false);\n    }\n  }, [isFullscreen]);\n\n  const visibilityChangedCallBack = useLastCallback((visibility: boolean) => {\n    sendEvent({\n      eventType: 'visibility_changed',\n      eventData: {\n        is_visible: visibility,\n      },\n    });\n  });\n\n  useEffect(() => {\n    if (isLoaded) {\n      visibilityChangedCallBack(Boolean(isActive));\n    }\n  }, [isActive, isLoaded]);\n\n  useEffectWithPrevDeps(([prevModalState]) => {\n    if (modalState === 'minimized') {\n      visibilityChangedCallBack(false);\n    }\n    if (modalState && prevModalState === 'minimized') {\n      visibilityChangedCallBack(true);\n    }\n  }, [modalState]);\n\n  useSyncEffect(([prevIsPaymentModalOpen]) => {\n    if (isPaymentModalOpen === prevIsPaymentModalOpen) return;\n    if (webApp?.slug && !isPaymentModalOpen && paymentStatus) {\n      sendEvent({\n        eventType: 'invoice_closed',\n        eventData: {\n          slug: webApp.slug,\n          status: paymentStatus,\n        },\n      });\n      setWebAppPaymentSlug({\n        slug: undefined,\n      });\n      resetPaymentStatus();\n    }\n  }, [isPaymentModalOpen, paymentStatus, sendEvent, webApp?.slug]);\n\n  const handleRemoveAttachBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot!.id,\n      isEnabled: false,\n    });\n    closeActiveWebApp();\n  });\n\n  const handleRejectPhone = useLastCallback(() => {\n    setIsRequestingPhone(false);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'phone_requested',\n      eventData: {\n        status: 'cancelled',\n      },\n    });\n  });\n\n  const handleAcceptPhone = useLastCallback(() => {\n    sharePhoneWithBot({ botId: bot!.id });\n    setIsRequestingPhone(false);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'phone_requested',\n      eventData: {\n        status: 'sent',\n      },\n    });\n  });\n\n  const handleRejectFileDownload = useLastCallback((shouldCloseActive?: boolean) => {\n    if (shouldCloseActive) {\n      setRequestedFileDownload(undefined);\n      handlePopupClosed();\n    }\n\n    sendEvent({\n      eventType: 'file_download_requested',\n      eventData: {\n        status: 'cancelled',\n      },\n    });\n  });\n\n  const handleRejectWriteAccess = useLastCallback(() => {\n    sendEvent({\n      eventType: 'write_access_requested',\n      eventData: {\n        status: 'cancelled',\n      },\n    });\n    setIsRequestingWriteAccess(false);\n    handlePopupClosed();\n  });\n\n  const handleAcceptWriteAccess = useLastCallback(async () => {\n    if (!bot) return;\n    const result = await callApi('allowBotSendMessages', { bot });\n    if (!result) {\n      handleRejectWriteAccess();\n      return;\n    }\n\n    sendEvent({\n      eventType: 'write_access_requested',\n      eventData: {\n        status: 'allowed',\n      },\n    });\n    setIsRequestingWriteAccess(false);\n    handlePopupClosed();\n  });\n\n  async function handleRequestWriteAccess() {\n    if (!bot) return;\n    const canWrite = await callApi('fetchBotCanSendMessage', {\n      bot,\n    });\n\n    if (canWrite) {\n      sendEvent({\n        eventType: 'write_access_requested',\n        eventData: {\n          status: 'allowed',\n        },\n      });\n    }\n    setIsRequestingWriteAccess(!canWrite);\n  }\n\n  async function handleCheckDownloadFile(fileUrl: string, fileName: string) {\n    const canDownload = await callApi('checkBotDownloadFileParams', {\n      bot: bot!,\n      url: fileUrl,\n      fileName,\n    });\n\n    if (!canDownload) {\n      sendEvent({\n        eventType: 'file_download_requested',\n        eventData: {\n          status: 'cancelled',\n        },\n      });\n      return;\n    }\n\n    setRequestedFileDownload({ url: fileUrl, fileName });\n    handlePopupOpened();\n  }\n\n  const handleDownloadFile = useLastCallback(() => {\n    if (!requestedFileDownload) return;\n    setRequestedFileDownload(undefined);\n    handlePopupClosed();\n\n    download(requestedFileDownload.url, requestedFileDownload.fileName);\n    sendEvent({\n      eventType: 'file_download_requested',\n      eventData: {\n        status: 'downloading',\n      },\n    });\n  });\n\n  async function handleInvokeCustomMethod(requestId: string, method: string, parameters: string) {\n    const result = await callApi('invokeWebViewCustomMethod', {\n      bot: bot!,\n      customMethod: method,\n      parameters,\n    });\n\n    sendEvent({\n      eventType: 'custom_method_invoked',\n      eventData: {\n        req_id: requestId,\n        ...result,\n      },\n    });\n  }\n\n  useEffect(() => {\n    if (!isOpen) {\n      setPopupParameters(undefined);\n      setIsRequestingPhone(false);\n      setIsRequestingWriteAccess(false);\n      setMainButton(undefined);\n      setSecondaryButton(undefined);\n      updateCurrentWebApp({\n        isSettingsButtonVisible: false,\n        shouldConfirmClosing: false,\n        isBackButtonVisible: false,\n        isCloseModalOpen: false,\n        isRemoveModalOpen: false,\n      });\n      markUnloaded();\n    }\n  }, [isOpen]);\n\n  const handleOpenChat = useLastCallback(() => {\n    openChatWithInfo({ id: bot!.id });\n  });\n\n  function handleEvent(event: WebAppInboundEvent) {\n    const { eventType, eventData } = event;\n\n    if (eventType === 'web_app_request_fullscreen') {\n      if (getIsWebAppsFullscreenSupported()) {\n        changeWebAppModalState({ state: 'fullScreen' });\n      } else {\n        sendEvent({\n          eventType: 'fullscreen_failed',\n          eventData: {\n            error: 'UNSUPPORTED',\n          },\n        });\n      }\n    }\n\n    if (eventType === 'web_app_exit_fullscreen') {\n      exitIfFullscreenCallback();\n    }\n\n    if (eventType === 'web_app_open_tg_link') {\n      const linkUrl = TME_LINK_PREFIX + eventData.path_full;\n      openTelegramLink({ url: linkUrl, shouldIgnoreCache: eventData.force_request });\n      closeActiveWebApp();\n    }\n\n    if (eventType === 'web_app_setup_back_button') {\n      updateCurrentWebApp({ isBackButtonVisible: eventData.is_visible });\n    }\n\n    if (eventType === 'web_app_setup_settings_button') {\n      updateCurrentWebApp({ isSettingsButtonVisible: eventData.is_visible });\n    }\n\n    if (eventType === 'web_app_set_background_color') {\n      setBackgroundColorFromEvent(validateHexColor(eventData.color) ? eventData.color : undefined);\n    }\n\n    if (eventType === 'web_app_set_header_color') {\n      const key = eventData.color_key;\n      setHeaderColorFromEvent(eventData.color || (key ? themeParams[key] : undefined));\n    }\n\n    if (eventType === 'web_app_set_bottom_bar_color') {\n      setBottomBarColor(eventData.color);\n    }\n\n    if (eventType === 'web_app_data_send') {\n      closeActiveWebApp();\n      sendWebViewData({\n        bot: bot!,\n        buttonText: buttonText!,\n        data: eventData.data,\n      });\n    }\n\n    if (eventType === 'web_app_setup_main_button') {\n      const color = eventData.color;\n      const textColor = eventData.text_color;\n      setMainButton({\n        isVisible: eventData.is_visible && Boolean(eventData.text?.trim().length),\n        isActive: eventData.is_active,\n        text: eventData.text,\n        color,\n        textColor,\n        isProgressVisible: eventData.is_progress_visible,\n      });\n    }\n\n    if (eventType === 'web_app_setup_secondary_button') {\n      const color = eventData.color;\n      const textColor = eventData.text_color;\n      setSecondaryButton({\n        isVisible: eventData.is_visible && Boolean(eventData.text?.trim().length),\n        isActive: eventData.is_active,\n        text: eventData.text,\n        color,\n        textColor,\n        isProgressVisible: eventData.is_progress_visible,\n        position: eventData.position,\n      });\n    }\n\n    if (eventType === 'web_app_setup_closing_behavior') {\n      updateCurrentWebApp({ shouldConfirmClosing: true });\n    }\n\n    if (eventType === 'web_app_open_popup') {\n      if (popupParameters || !eventData.message.trim().length || !eventData.buttons?.length\n        || eventData.buttons.length > 3 || isRequestingPhone || isRequestingWriteAccess\n        || unlockPopupsAt > Date.now()) {\n        handleAppPopupClose(undefined);\n        return;\n      }\n\n      setPopupParameters(eventData);\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_switch_inline_query') {\n      const filter = eventData.chat_types?.map(convertToApiChatType).filter(Boolean);\n      const isSamePeer = !filter?.length;\n\n      switchBotInline({\n        botId: bot!.id,\n        query: eventData.query,\n        filter,\n        isSamePeer,\n      });\n\n      closeActiveWebApp();\n    }\n\n    if (eventType === 'web_app_request_phone') {\n      if (popupParameters || isRequestingWriteAccess || unlockPopupsAt > Date.now()) {\n        handleRejectPhone();\n        return;\n      }\n\n      setIsRequestingPhone(true);\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_request_write_access') {\n      if (popupParameters || isRequestingPhone || unlockPopupsAt > Date.now()) {\n        handleRejectWriteAccess();\n        return;\n      }\n\n      handleRequestWriteAccess();\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_invoke_custom_method') {\n      const { method, params, req_id: requestId } = eventData;\n      handleInvokeCustomMethod(requestId, method, JSON.stringify(params));\n    }\n\n    if (eventType === 'web_app_request_file_download') {\n      if (requestedFileDownload || unlockPopupsAt > Date.now()) {\n        handleRejectFileDownload();\n        return;\n      }\n      handleCheckDownloadFile(eventData.url, eventData.file_name);\n    }\n\n    if (eventType === 'web_app_send_prepared_message') {\n      if (!bot || !webAppKey) return;\n      const { id } = eventData;\n      openPreparedInlineMessageModal({ botId: bot.id, messageId: id, webAppKey });\n    }\n\n    if (eventType === 'web_app_request_emoji_status_access') {\n      if (!bot) return;\n      openEmojiStatusAccessModal({ bot, webAppKey });\n    }\n\n    if (eventType === 'web_app_check_location') {\n      const handleGeolocationCheck = () => {\n        sendEvent({\n          eventType: 'location_checked',\n          eventData: {\n            available: isAvailable,\n            access_requested: isAccessRequested,\n            access_granted: isAccessGranted,\n          },\n        });\n      };\n\n      handleGeolocationCheck();\n    }\n\n    if (eventType === 'web_app_request_location') {\n      const handleRequestLocation = async () => {\n        const geolocationData = await getGeolocationStatus();\n        const { accessRequested, accessGranted, geolocation } = geolocationData;\n\n        if (!accessGranted || !accessRequested) {\n          sendEvent({\n            eventType: 'location_requested',\n            eventData: {\n              available: false,\n            },\n          });\n          showNotification({ message: oldLang('PermissionNoLocationPosition') });\n          handleAppPopupClose(undefined);\n          return;\n        }\n\n        if (isAvailable) {\n          if (isAccessRequested) {\n            sendEvent({\n              eventType: 'location_requested',\n              eventData: {\n                available: botAppPermissions?.geolocation!,\n                latitude: geolocation?.latitude,\n                longitude: geolocation?.longitude,\n                altitude: geolocation?.altitude,\n                course: geolocation?.heading,\n                speed: geolocation?.speed,\n                horizontal_accuracy: geolocation?.accuracy,\n                vertical_accuracy: geolocation?.altitudeAccuracy,\n              },\n            });\n          } else {\n            openLocationAccessModal({ bot, webAppKey });\n          }\n        } else {\n          showNotification({ message: oldLang('PermissionNoLocationPosition') });\n          handleAppPopupClose(undefined);\n        }\n      };\n\n      handleRequestLocation();\n    }\n\n    if (eventType === 'web_app_open_location_settings') {\n      handleOpenChat();\n    }\n  }\n\n  const mainButtonCurrentColor = useCurrentOrPrev(mainButton?.color, true);\n  const mainButtonCurrentTextColor = useCurrentOrPrev(mainButton?.textColor, true);\n  const mainButtonCurrentIsActive = useCurrentOrPrev(mainButton && Boolean(mainButton.isActive), true);\n  const mainButtonCurrentText = useCurrentOrPrev(mainButton?.text, true);\n\n  const secondaryButtonCurrentPosition = useCurrentOrPrev(secondaryButton?.position, true);\n  const secondaryButtonCurrentColor = useCurrentOrPrev(secondaryButton?.color, true);\n  const secondaryButtonCurrentTextColor = useCurrentOrPrev(secondaryButton?.textColor, true);\n  const secondaryButtonCurrentIsActive = useCurrentOrPrev(secondaryButton && Boolean(secondaryButton.isActive), true);\n  const secondaryButtonCurrentText = useCurrentOrPrev(secondaryButton?.text, true);\n\n  const [shouldDecreaseWebFrameSize, setShouldDecreaseWebFrameSize] = useState(false);\n  const [shouldHideMainButton, setShouldHideMainButton] = useState(true);\n  const [shouldHideSecondaryButton, setShouldHideSecondaryButton] = useState(true);\n  const [shouldShowMainButton, setShouldShowMainButton] = useState(false);\n  const [shouldShowSecondaryButton, setShouldShowSecondaryButton] = useState(false);\n\n  const [shouldShowAppNameInFullscreen, setShouldShowAppNameInFullscreen] = useState(false);\n\n  const [backButtonTextWidth, setBackButtonTextWidth] = useState(0);\n\n  // Notify view that height changed\n  useSyncEffect(() => {\n    setTimeout(() => {\n      sendViewport();\n      sendSafeArea();\n    }, isTransforming ? 0 : ANIMATION_WAIT);\n  }, [shouldShowSecondaryButton, shouldHideSecondaryButton,\n    shouldShowMainButton, shouldShowMainButton,\n    secondaryButton?.position, sendViewport, isTransforming, modalHeight,\n    sendSafeArea]);\n\n  const isVerticalLayout = secondaryButtonCurrentPosition === 'top' || secondaryButtonCurrentPosition === 'bottom';\n  const isHorizontalLayout = !isVerticalLayout;\n\n  const rowsCount = (isVerticalLayout && shouldShowMainButton && shouldShowSecondaryButton) ? 2\n    : shouldShowMainButton || shouldShowSecondaryButton ? 1 : 0;\n\n  const hideDirection = (isHorizontalLayout\n    && (!shouldHideMainButton && !shouldHideSecondaryButton)) ? 'horizontal' : 'vertical';\n\n  const mainButtonChangeTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const mainButtonFastTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const secondaryButtonChangeTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const secondaryButtonFastTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const appNameDisplayTimeout = useRef<ReturnType<typeof setTimeout>>();\n\n  useEffect(() => {\n    if (isFullscreen && isOpen && Boolean(activeWebAppName)) {\n      setShouldShowAppNameInFullscreen(true);\n\n      if (appNameDisplayTimeout.current) {\n        clearTimeout(appNameDisplayTimeout.current);\n      }\n\n      appNameDisplayTimeout.current = setTimeout(() => {\n        setShouldShowAppNameInFullscreen(false);\n        appNameDisplayTimeout.current = undefined;\n      }, APP_NAME_DISPLAY_DURATION);\n    } else {\n      setShouldShowAppNameInFullscreen(false);\n\n      if (appNameDisplayTimeout.current) {\n        clearTimeout(appNameDisplayTimeout.current);\n        appNameDisplayTimeout.current = undefined;\n      }\n    }\n\n    return () => {\n      if (appNameDisplayTimeout.current) {\n        clearTimeout(appNameDisplayTimeout.current);\n      }\n    };\n  }, [isFullscreen, isOpen, activeWebAppName]);\n\n  useEffect(() => {\n    if (mainButtonChangeTimeout.current) clearTimeout(mainButtonChangeTimeout.current);\n    if (mainButtonFastTimeout.current) clearTimeout(mainButtonFastTimeout.current);\n\n    if (isMainButtonVisible) {\n      mainButtonFastTimeout.current = setTimeout(() => {\n        setShouldShowMainButton(true);\n      }, 35);\n      setShouldHideMainButton(false);\n      mainButtonChangeTimeout.current = setTimeout(() => {\n        setShouldDecreaseWebFrameSize(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    }\n\n    if (!isMainButtonVisible) {\n      setShouldShowMainButton(false);\n      mainButtonChangeTimeout.current = setTimeout(() => {\n        setShouldHideMainButton(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    }\n  }, [isMainButtonVisible]);\n\n  useEffect(() => {\n    if (secondaryButtonChangeTimeout.current) clearTimeout(secondaryButtonChangeTimeout.current);\n    if (secondaryButtonFastTimeout.current) clearTimeout(secondaryButtonFastTimeout.current);\n\n    if (isSecondaryButtonVisible) {\n      secondaryButtonFastTimeout.current = setTimeout(() => {\n        setShouldShowSecondaryButton(true);\n      }, 35);\n      setShouldHideSecondaryButton(false);\n      secondaryButtonChangeTimeout.current = setTimeout(() => {\n        setShouldDecreaseWebFrameSize(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    }\n\n    if (!isSecondaryButtonVisible) {\n      setShouldShowSecondaryButton(false);\n      secondaryButtonChangeTimeout.current = setTimeout(() => {\n        setShouldHideSecondaryButton(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    }\n  }, [isSecondaryButtonVisible]);\n\n  useEffect(() => {\n    if (!shouldShowSecondaryButton && !shouldShowMainButton) {\n      setShouldDecreaseWebFrameSize(false);\n    }\n  }, [setShouldDecreaseWebFrameSize, shouldShowSecondaryButton, shouldShowMainButton]);\n\n  const frameStyle = isTransforming ? 'pointer-events: none;' : '';\n\n  const handleBackClick = useLastCallback(() => {\n    if (isBackButtonVisible) {\n      sendEvent({\n        eventType: 'back_button_pressed',\n      });\n    } else {\n      exitIfFullscreenCallback();\n      sendFullScreenChanged(false);\n      changeWebAppModalState({ state: 'maximized' });\n      closeWebAppModal();\n    }\n  });\n\n  const handleCollapseClick = useLastCallback(() => {\n    exitIfFullscreenCallback();\n  });\n\n  const handleShowContextMenu = useLastCallback((e: React.MouseEvent) => {\n    onContextMenuButtonClick(e);\n  });\n\n  const backIconClass = buildClassName(\n    styles.closeIcon,\n    isBackButtonVisible && styles.stateBack,\n  );\n  const backButtonCaption = shouldShowAppNameInFullscreen ? activeWebAppName\n    : oldLang(isBackButtonVisible ? 'Back' : 'Close');\n\n  const hasHeaderElement = headerButtonCaptionRef?.current;\n\n  useEffect(() => {\n    const width = headerButtonCaptionRef?.current?.clientWidth || 0;\n    setBackButtonTextWidth(width);\n  }, [backButtonCaption, hasHeaderElement]);\n\n  function getBackButtonActiveKey() {\n    if (shouldShowAppNameInFullscreen) return 0;\n    return isBackButtonVisible ? 1 : 2;\n  }\n\n  function renderFullscreenBackButtonCaption() {\n    return (\n      <span\n        className={styles.buttonCaptionContainer}\n        style={\n          `width: ${backButtonTextWidth}px;`\n        }\n      >\n        <Transition\n          activeKey={getBackButtonActiveKey()}\n          name=\"slideFade\"\n        >\n          <div\n            ref={headerButtonCaptionRef}\n            className={styles.backButtonCaption}\n          >\n            {backButtonCaption}\n          </div>\n        </Transition>\n      </span>\n    );\n  }\n\n  function renderFullscreenHeaderPanel() {\n    return (\n      <div className={styles.headerPanel}>\n        <div ref={headerButtonRef} className={styles.headerButton} onClick={handleBackClick}>\n          <div className={styles.backIconContainer}>\n            <div className={backIconClass} />\n          </div>\n          {renderFullscreenBackButtonCaption()}\n        </div>\n        <div className={styles.headerSplitButton}>\n          <div\n            className={buildClassName(\n              styles.headerButton,\n              styles.left,\n            )}\n            tabIndex={0}\n            role=\"button\"\n            aria-label={lang('WebAppCollapse')}\n            onClick={handleCollapseClick}\n          >\n            <Icon\n              name=\"down\"\n              className={styles.icon}\n            />\n          </div>\n          <div\n            className={buildClassName(\n              styles.headerButton,\n              styles.right,\n            )}\n            tabIndex={0}\n            role=\"button\"\n            aria-haspopup=\"menu\"\n            aria-label={lang('AriaMoreButton')}\n            onClick={handleShowContextMenu}\n          >\n            <Icon\n              name=\"more\"\n              className={buildClassName(\n                styles.icon,\n                styles.moreIcon,\n              )}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  function renderDefaultPlaceholder() {\n    const className = buildClassName(styles.loadingPlaceholder, styles.defaultPlaceholderGrid, isLoaded && styles.hide);\n    return (\n      <div className={className}>\n        <div className={styles.placeholderSquare} />\n        <div className={styles.placeholderSquare} />\n        <div className={styles.placeholderSquare} />\n        <div className={styles.placeholderSquare} />\n      </div>\n    );\n  }\n\n  function renderPlaceholder() {\n    if (!placeholderPath) {\n      return renderDefaultPlaceholder();\n    }\n    return (\n      <svg\n        className={buildClassName(styles.loadingPlaceholder, isLoaded && styles.hide)}\n        viewBox=\"0 0 512 512\"\n      >\n        <path className={styles.placeholderPath} d={placeholderPath} />\n      </svg>\n    );\n  }\n\n  return (\n    <div\n      ref={containerRef}\n      className={buildClassName(\n        styles.root,\n        !isActive && styles.hidden,\n        isMultiTabSupported && styles.multiTab,\n      )}\n    >\n      {isFullscreen && getIsWebAppsFullscreenSupported() && renderFullscreenHeaderPanel()}\n      {!isMinimizedState && renderPlaceholder()}\n      <iframe\n        className={buildClassName(\n          styles.frame,\n          shouldDecreaseWebFrameSize && styles.withButton,\n          !isLoaded && styles.hide,\n        )}\n        style={frameStyle}\n        src={url}\n        title={`${bot?.firstName} Web App`}\n        sandbox={SANDBOX_ATTRIBUTES}\n        allow=\"camera; microphone; geolocation; clipboard-write;\"\n        allowFullScreen\n        ref={frameRef}\n      />\n      {!isMinimizedState && (\n        <div\n          style={`background-color: ${bottomBarColor};`}\n          className={buildClassName(\n            styles.buttonsContainer,\n            secondaryButtonCurrentPosition === 'left' && styles.leftToRight,\n            secondaryButtonCurrentPosition === 'right' && styles.rightToLeft,\n            secondaryButtonCurrentPosition === 'top' && styles.topToBottom,\n            secondaryButtonCurrentPosition === 'bottom' && styles.bottomToTop,\n            hideDirection === 'horizontal' && styles.hideHorizontal,\n            rowsCount === 1 && styles.oneRow,\n            rowsCount === 2 && styles.twoRows,\n          )}\n        >\n          <Button\n            className={buildClassName(\n              styles.secondaryButton,\n              shouldShowSecondaryButton && !shouldHideSecondaryButton && styles.visible,\n              shouldHideSecondaryButton && styles.hidden,\n            )}\n            fluid\n            style={`background-color: ${secondaryButtonCurrentColor}; color: ${secondaryButtonCurrentTextColor}`}\n            disabled={!secondaryButtonCurrentIsActive && !secondaryButton?.isProgressVisible}\n            nonInteractive={secondaryButton?.isProgressVisible}\n            onClick={handleSecondaryButtonClick}\n            size=\"smaller\"\n          >\n            {!secondaryButton?.isProgressVisible && secondaryButtonCurrentText}\n            {secondaryButton?.isProgressVisible\n              && <Spinner className={styles.mainButtonSpinner} color=\"blue\" />}\n          </Button>\n          <Button\n            className={buildClassName(\n              styles.mainButton,\n              shouldShowMainButton && !shouldHideMainButton && styles.visible,\n              shouldHideMainButton && styles.hidden,\n            )}\n            fluid\n            style={`background-color: ${mainButtonCurrentColor}; color: ${mainButtonCurrentTextColor}`}\n            disabled={!mainButtonCurrentIsActive && !mainButton?.isProgressVisible}\n            nonInteractive={mainButton?.isProgressVisible}\n            onClick={handleMainButtonClick}\n            size=\"smaller\"\n          >\n            {!mainButton?.isProgressVisible && mainButtonCurrentText}\n            {mainButton?.isProgressVisible && <Spinner className={styles.mainButtonSpinner} color=\"white\" />}\n          </Button>\n        </div>\n      ) }\n      {popupParameters && (\n        <Modal\n          isOpen={Boolean(popupParameters)}\n          title={popupParameters.title || NBSP}\n          onClose={handleAppPopupModalClose}\n          hasCloseButton\n          className={\n            buildClassName(styles.webAppPopup, !popupParameters.title?.trim().length && styles.withoutTitle)\n          }\n        >\n          {popupParameters.message}\n          <div className=\"dialog-buttons mt-2\">\n            {popupParameters.buttons.map((button) => (\n              <Button\n                key={button.id || button.type}\n                className=\"confirm-dialog-button\"\n                color={button.type === 'destructive' ? 'danger' : 'primary'}\n                isText\n                size=\"smaller\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleAppPopupClose(button.id)}\n              >\n                {button.text || oldLang(DEFAULT_BUTTON_TEXT[button.type])}\n              </Button>\n            ))}\n          </div>\n        </Modal>\n      )}\n\n      <ConfirmDialog\n        isOpen={isRequestingPhone}\n        onClose={handleRejectPhone}\n        title={oldLang('ShareYouPhoneNumberTitle')}\n        text={oldLang('AreYouSureShareMyContactInfoBot')}\n        confirmHandler={handleAcceptPhone}\n        confirmLabel={oldLang('ContactShare')}\n      />\n      <ConfirmDialog\n        isOpen={isRequestingWriteAccess}\n        onClose={handleRejectWriteAccess}\n        title={oldLang('lng_bot_allow_write_title')}\n        text={oldLang('lng_bot_allow_write')}\n        confirmHandler={handleAcceptWriteAccess}\n        confirmLabel={oldLang('lng_bot_allow_write_confirm')}\n      />\n      <ConfirmDialog\n        isOpen={Boolean(requestedFileDownload)}\n        title={oldLang('BotDownloadFileTitle')}\n        textParts={lang('BotDownloadFileDescription', {\n          bot: bot?.firstName,\n          filename: requestedFileDownload?.fileName,\n        }, {\n          withNodes: true,\n          withMarkdown: true,\n        })}\n        confirmLabel={oldLang('BotDownloadFileButton')}\n        onClose={handleRejectFileDownload}\n        confirmHandler={handleDownloadFile}\n      />\n\n      <ConfirmDialog\n        isOpen={isCloseModalOpen}\n        onClose={handleHideCloseModal}\n        title={oldLang('lng_bot_close_warning_title')}\n        text={oldLang('lng_bot_close_warning')}\n        confirmHandler={handleConfirmCloseModal}\n        confirmIsDestructive\n        confirmLabel={oldLang('lng_bot_close_warning_sure')}\n      />\n      <ConfirmDialog\n        isOpen={isRemoveModalOpen}\n        onClose={handleHideRemoveModal}\n        title={oldLang('BotRemoveFromMenuTitle')}\n        textParts={renderText(oldLang('BotRemoveFromMenu', bot?.firstName), ['simple_markdown'])}\n        confirmHandler={handleRemoveAttachBot}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const activeWebApp = modal?.activeWebAppKey ? selectWebApp(global, modal.activeWebAppKey) : undefined;\n    const { botId: activeBotId } = activeWebApp || {};\n    const modalState = modal?.modalState;\n\n    const attachBot = activeBotId ? global.attachMenu.bots[activeBotId] : undefined;\n    const bot = activeBotId ? selectUser(global, activeBotId) : undefined;\n    const userFullInfo = activeBotId ? selectUserFullInfo(global, activeBotId) : undefined;\n    const botAppSettings = userFullInfo?.botInfo?.appSettings;\n    const currentUser = global.currentUserId ? selectUser(global, global.currentUserId) : undefined;\n    const theme = selectTheme(global);\n    const { isPaymentModalOpen, status: regularPaymentStatus } = selectTabState(global).payment;\n    const { status: starsPaymentStatus, inputInvoice: starsInputInvoice } = selectTabState(global).starsPayment;\n    const botAppPermissions = bot ? selectBotAppPermissions(global, bot.id) : undefined;\n\n    const paymentStatus = starsPaymentStatus || regularPaymentStatus;\n\n    return {\n      attachBot,\n      bot,\n      currentUser,\n      theme,\n      isPaymentModalOpen: isPaymentModalOpen || Boolean(starsInputInvoice),\n      paymentStatus,\n      modalState,\n      botAppPermissions,\n      botAppSettings,\n    };\n  },\n)(WebAppModalTabContent));\n","import { useRef, useState } from '../../../../lib/teact/teact';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function usePopupLimit(sequentialLimit: number, resetAfter: number) {\n  const [unlockPopupsAt, setUnlockPopupsAt] = useState(0);\n  const sequentialCalls = useRef(0);\n  const lastClosedDate = useRef(0);\n\n  const handlePopupOpened = useLastCallback(() => {\n    const now = Date.now();\n\n    if (now - lastClosedDate.current > resetAfter) {\n      sequentialCalls.current = 0;\n    }\n\n    sequentialCalls.current += 1;\n\n    if (sequentialCalls.current >= sequentialLimit) {\n      setUnlockPopupsAt(now + resetAfter);\n    }\n  });\n\n  const handlePopupClosed = useLastCallback(() => {\n    if (unlockPopupsAt < Date.now()) { // Prevent confused user from extending lock time\n      lastClosedDate.current = Date.now();\n    }\n  });\n\n  return {\n    unlockPopupsAt,\n    handlePopupOpened,\n    handlePopupClosed,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"XWfkIDLY\",\"multi-tab\":\"gBVR7Hec\",\"multiTab\":\"gBVR7Hec\",\"close-icon\":\"RuJ3d9N6\",\"closeIcon\":\"RuJ3d9N6\",\"minimized\":\"dJ1Ld_PX\",\"fullScreen\":\"ciSTWz16\",\"tabs\":\"X18WbDa5\",\"tool-bar\":\"qK4q0Sat\",\"toolBar\":\"qK4q0Sat\",\"tab-button-wrapper\":\"oHX2d8Or\",\"tabButtonWrapper\":\"oHX2d8Or\",\"tab-button\":\"O4NxErFX\",\"tabButton\":\"O4NxErFX\",\"tab-right-mask\":\"dgdyQDsZ\",\"tabRightMask\":\"dgdyQDsZ\",\"tab-close-button\":\"xGefqS93\",\"tabCloseButton\":\"xGefqS93\",\"tab-button-curve-path\":\"bOuMHiVw\",\"tabButtonCurvePath\":\"bOuMHiVw\",\"tab-button-left-curve\":\"f7EicoVH\",\"tabButtonLeftCurve\":\"f7EicoVH\",\"tab-button-right-curve\":\"s6pBIYMI\",\"tabButtonRightCurve\":\"s6pBIYMI\",\"more-apps-tab-icon\":\"Obu3ui67\",\"moreAppsTabIcon\":\"Obu3ui67\",\"avatar-container\":\"z39ojrWc\",\"avatarContainer\":\"z39ojrWc\",\"web-app-tab-more-menu\":\"txS0KiU0\",\"webAppTabMoreMenu\":\"txS0KiU0\",\"more-button\":\"kKPD09tc\",\"moreButton\":\"kKPD09tc\",\"tab-more-button\":\"gkji2_RB\",\"tabMoreButton\":\"gkji2_RB\",\"more-apps-button\":\"cEuW1_hJ\",\"moreAppsButton\":\"cEuW1_hJ\",\"window-state-button\":\"XpHR_yo0\",\"windowStateButton\":\"XpHR_yo0\",\"header-button\":\"GE5AkJOU\",\"headerButton\":\"GE5AkJOU\",\"fullscreenButton\":\"otlJULGy\",\"tab-close-icon\":\"DoeOewUR\",\"tabCloseIcon\":\"DoeOewUR\",\"state-icon\":\"YRMGpqUS\",\"stateIcon\":\"YRMGpqUS\",\"icon\":\"b13oE9uA\",\"tab-avatar\":\"tI6TE6HP\",\"tabAvatar\":\"tI6TE6HP\",\"state-back\":\"IWA50OWU\",\"stateBack\":\"IWA50OWU\",\"loading-spinner\":\"ZvO65ZK4\",\"loadingSpinner\":\"ZvO65ZK4\",\"hide\":\"_90e04Jo\",\"frame\":\"zA1w1IOq\",\"with-button\":\"XsPaFD9G\",\"withButton\":\"XsPaFD9G\",\"main-button\":\"Os96PEjQ\",\"mainButton\":\"Os96PEjQ\",\"visible\":\"C8aMayAw\",\"hidden\":\"GllU9an9\",\"main-button-spinner\":\"nYSFrf_X\",\"mainButtonSpinner\":\"nYSFrf_X\",\"web-app-popup\":\"cTVKrIjM\",\"webAppPopup\":\"cTVKrIjM\",\"without-title\":\"d0DG1SkF\",\"withoutTitle\":\"d0DG1SkF\"};","import { type MouseEvent as ReactMouseEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo, useRef,\n  useSignal, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiAttachBot, ApiChat, ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\nimport type { Point, Size, ThemeKey } from '../../../types';\nimport type { WebApp, WebAppOutboundEvent } from '../../../types/webapp';\n\nimport { RESIZE_HANDLE_CLASS_NAME } from '../../../config';\nimport { getWebAppKey } from '../../../global/helpers/bots';\nimport {\n  selectCurrentChat, selectTheme, selectUser,\n  selectWebApp,\n} from '../../../global/selectors';\nimport { selectSharedSettings } from '../../../global/selectors/sharedState';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { getColorLuma } from '../../../util/colors';\nimport { hexToRgb } from '../../../util/switchTheme';\nimport windowSize from '../../../util/windowSize';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useDraggable from '../../../hooks/useDraggable';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport Modal from '../../ui/Modal';\nimport MinimizedWebAppModal from './MinimizedWebAppModal';\nimport MoreAppsTabContent from './MoreAppsTabContent';\nimport WebAppModalTabContent from './WebAppModalTabContent';\n\nimport styles from './WebAppModal.module.scss';\n\ntype WebAppModalTab = {\n  bot?: ApiUser;\n  webApp: WebApp;\n  isOpen: boolean;\n};\n\nexport type OwnProps = {\n  modal?: TabState['webApps'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  bot?: ApiUser;\n  attachBot?: ApiAttachBot;\n  theme?: ThemeKey;\n  cachedSize?: Size;\n  cachedPosition?: Point;\n};\n\nconst PROLONG_INTERVAL = 45000; // 45s\nconst LUMA_THRESHOLD = 128;\n\nconst MINIMIZED_STATE_SIZE = { width: 300, height: 40 };\nconst DEFAULT_MAXIMIZED_STATE_SIZE = { width: 420, height: 730 };\nconst MAXIMIZED_STATE_MINIMUM_SIZE = { width: 300, height: 300 };\n\nconst WebAppModal: FC<OwnProps & StateProps> = ({\n  modal,\n  chat,\n  bot,\n  attachBot,\n  theme,\n  cachedSize,\n  cachedPosition,\n}) => {\n  const {\n    closeActiveWebApp,\n    closeWebAppModal,\n    prolongWebView,\n    toggleAttachBot,\n    openChat,\n    changeWebAppModalState,\n    openWebAppTab,\n    updateWebApp,\n    openMoreAppsTab,\n    closeMoreAppsTab,\n    updateMiniAppCachedPosition,\n    updateMiniAppCachedSize,\n  } = getActions();\n\n  const [getMaximizedStateSize, setMaximizedStateSize] = useSignal(cachedSize || DEFAULT_MAXIMIZED_STATE_SIZE);\n\n  function getSize() {\n    if (modal?.modalState === 'fullScreen') return windowSize.get();\n    if (modal?.modalState === 'maximized') return getMaximizedStateSize();\n    return MINIMIZED_STATE_SIZE;\n  }\n  function getMinimumSize() {\n    if (modal?.modalState === 'maximized') return MAXIMIZED_STATE_MINIMUM_SIZE;\n    return undefined;\n  }\n\n  const {\n    openedWebApps, activeWebAppKey, openedOrderedKeys, sessionKeys, isMoreAppsTabActive,\n  } = modal || {};\n  const activeWebApp = activeWebAppKey ? openedWebApps?.[activeWebAppKey] : undefined;\n  const {\n    isBackButtonVisible, headerColor, backgroundColor, isSettingsButtonVisible,\n  } = activeWebApp || {};\n\n  const tabs = useMemo(() => {\n    return openedOrderedKeys?.map((key) => {\n      const webApp = openedWebApps![key];\n      return {\n        bot: getGlobal().users.byId[webApp.botId],\n        webApp,\n        isOpen: Boolean(activeWebApp && (key === getWebAppKey(activeWebApp))),\n      };\n    });\n  }, [openedOrderedKeys, openedWebApps, activeWebApp]);\n\n  const { isMobile } = useAppLayout();\n  const isOpen = modal?.isModalOpen || false;\n  const isMaximizedState = modal?.modalState === 'maximized';\n  const isMinimizedState = modal?.modalState === 'minimized';\n  const isFullScreen = modal?.modalState === 'fullScreen';\n\n  const supportMultiTabMode = !isMobile;\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  const getTriggerElement = useLastCallback(() => ref.current!);\n\n  const getRootElement = useLastCallback(\n    () => ref.current!,\n  );\n\n  const getMenuElement = useLastCallback(\n    () => menuRef.current!,\n  );\n\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const [isDraggingEnabled, setIsDraggingEnabled] = useState(false);\n\n  const headerElement = headerRef.current;\n  const containerElement = ref.current;\n\n  useEffect(() => {\n    setIsDraggingEnabled(Boolean(supportMultiTabMode && headerElement && containerElement && !isFullScreen));\n  }, [supportMultiTabMode, headerElement, containerElement, isFullScreen]);\n\n  useEffect(() => {\n    changeWebAppModalState({ state: 'maximized' });\n  }, [supportMultiTabMode]);\n\n  const {\n    isDragging,\n    isResizing,\n    style: draggableStyle,\n    size,\n    position,\n  } = useDraggable(\n    ref,\n    headerRef,\n    isDraggingEnabled,\n    getSize(),\n    isFullScreen,\n    getMinimumSize(),\n    cachedPosition,\n  );\n\n  const x = position?.x;\n  const y = position?.y;\n  useEffect(() => {\n    if (!isDragging && x !== undefined && y !== undefined) {\n      updateMiniAppCachedPosition({ position: { x, y } });\n    }\n  }, [isDragging, x, y]);\n\n  useEffect(() => {\n    if (!isDragging && size && isMaximizedState) { updateMiniAppCachedSize({ size }); }\n  }, [isDragging, isMaximizedState, size]);\n\n  const currentSize = size || getSize();\n\n  const currentWidth = currentSize.width;\n  const currentHeight = currentSize.height;\n\n  useEffect(() => {\n    if (isResizing) {\n      setMaximizedStateSize({ width: currentWidth, height: currentHeight });\n    }\n  }, [currentHeight, currentWidth, isResizing, setMaximizedStateSize]);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const {\n    queryId,\n  } = activeWebApp || {};\n\n  const openTabsCount = openedWebApps ? Object.values(openedWebApps).length : 0;\n\n  useInterval(() => {\n    if (!openedWebApps) return;\n    Object.keys(openedWebApps).forEach((key) => {\n      const webApp = openedWebApps[key];\n      if (webApp.queryId) {\n        prolongWebView({\n          botId: webApp.botId,\n          queryId: webApp.queryId,\n          peerId: webApp.peerId || chat!.id,\n          replyInfo: webApp.replyInfo,\n        });\n      }\n    });\n  }, queryId ? PROLONG_INTERVAL : undefined, true);\n\n  // eslint-disable-next-line no-null/no-null\n  const sendEventCallback = useRef<((event: WebAppOutboundEvent) => void) | null>(null);\n  // eslint-disable-next-line no-null/no-null\n  const reloadFrameCallback = useRef<((url: string) => void) | null>(null);\n\n  const registerSendEventCallback = useLastCallback((callback: (event: WebAppOutboundEvent) => void) => {\n    sendEventCallback.current = callback;\n  });\n\n  const sendEvent = useLastCallback((event: WebAppOutboundEvent) => {\n    if (sendEventCallback.current) {\n      sendEventCallback.current(event);\n    }\n  });\n\n  const registerReloadFrameCallback = useLastCallback((callback: (url: string) => void) => {\n    reloadFrameCallback.current = callback;\n  });\n\n  const reloadFrame = useLastCallback((url: string) => {\n    if (reloadFrameCallback.current) {\n      reloadFrameCallback.current(url);\n    }\n  });\n\n  const handleSettingsButtonClick = useLastCallback(() => {\n    sendEvent({\n      eventType: 'settings_button_pressed',\n    });\n  });\n\n  const handleRefreshClick = useLastCallback(() => {\n    reloadFrame(activeWebApp!.url);\n  });\n\n  const handleModalClose = useLastCallback(() => {\n    closeWebAppModal();\n  });\n\n  const handleCloseMoreAppsTab = useLastCallback(() => {\n    closeMoreAppsTab();\n  });\n\n  const handleTabClose = useLastCallback(() => {\n    if (openTabsCount > 1) {\n      closeActiveWebApp();\n    } else {\n      closeWebAppModal();\n    }\n  });\n\n  const handleToggleClick = useLastCallback(() => {\n    if (attachBot) {\n      const key = getWebAppKey(activeWebApp!);\n      updateWebApp({\n        key,\n        update: {\n          isRemoveModalOpen: true,\n        },\n      });\n      return;\n    }\n\n    toggleAttachBot({\n      botId: bot!.id,\n      isEnabled: true,\n    });\n  });\n\n  const handleBackClick = useLastCallback(() => {\n    if (isBackButtonVisible) {\n      sendEvent({\n        eventType: 'back_button_pressed',\n      });\n    } else {\n      handleModalClose();\n    }\n  });\n\n  const handleCollapseClick = useLastCallback(() => {\n    changeWebAppModalState({ state: 'minimized' });\n  });\n\n  const handleFullscreenClick = useLastCallback(() => {\n    changeWebAppModalState({ state: 'fullScreen' });\n  });\n\n  const handleOpenMoreAppsTabClick = useLastCallback(() => {\n    openMoreAppsTab();\n  });\n\n  const handleTabClick = useLastCallback((tab: WebAppModalTab) => {\n    openWebAppTab({ webApp: tab.webApp });\n  });\n\n  const openBotChat = useLastCallback(() => {\n    openChat({\n      id: bot!.id,\n    });\n  });\n\n  const MoreMenuButton:\n  FC<{ onTrigger: (e: ReactMouseEvent<HTMLButtonElement, MouseEvent>) => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        className={\n          buildClassName(\n            supportMultiTabMode ? styles.tabMoreButton : styles.moreButton,\n            isMenuOpen && 'active',\n          )\n        }\n        round\n        ripple={!isMobile}\n        size={supportMultiTabMode ? 'tiny' : 'smaller'}\n        color=\"translucent\"\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile, supportMultiTabMode]);\n\n  function renderMenuItems() {\n    return (\n      <>\n        {chat && bot && chat.id !== bot.id && (\n          <MenuItem icon=\"bots\" onClick={openBotChat}>{oldLang('BotWebViewOpenBot')}</MenuItem>\n        )}\n        <MenuItem icon=\"reload\" onClick={handleRefreshClick}>{oldLang('WebApp.ReloadPage')}</MenuItem>\n        {isSettingsButtonVisible && (\n          <MenuItem icon=\"settings\" onClick={handleSettingsButtonClick}>\n            {oldLang('Settings')}\n          </MenuItem>\n        )}\n        {bot?.isAttachBot && (\n          <MenuItem\n            icon={attachBot ? 'stop' : 'install'}\n            onClick={handleToggleClick}\n            destructive={Boolean(attachBot)}\n          >\n            {oldLang(attachBot ? 'WebApp.RemoveBot' : 'WebApp.AddToAttachmentAdd')}\n          </MenuItem>\n        )}\n      </>\n    );\n  }\n\n  function renderMoreMenu() {\n    return (\n      <Menu\n        isOpen={isContextMenuOpen}\n        anchor={contextMenuAnchor}\n        ref={menuRef}\n        className={buildClassName(\n          supportMultiTabMode ? styles.webAppTabMoreMenu : 'web-app-more-menu',\n          'with-menu-transitions',\n        )}\n        getTriggerElement={getTriggerElement}\n        getMenuElement={getMenuElement}\n        getRootElement={getRootElement}\n        autoClose\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n      >\n        {renderMenuItems()}\n      </Menu>\n    );\n  }\n\n  function renderDropdownMoreMenu() {\n    return (\n      <DropdownMenu\n        className={buildClassName(\n          supportMultiTabMode ? styles.webAppTabMoreMenu : 'web-app-more-menu',\n          'with-menu-transitions',\n        )}\n        trigger={MoreMenuButton}\n        positionX={supportMultiTabMode ? 'left' : 'right'}\n      >\n        {renderMenuItems()}\n      </DropdownMenu>\n    );\n  }\n\n  const backButtonClassName = buildClassName(\n    styles.closeIcon,\n    isBackButtonVisible && styles.stateBack,\n  );\n\n  const headerTextVar = useMemo(() => {\n    if (isMoreAppsTabActive) return 'color-text';\n    if (!headerColor) return undefined;\n    const { r, g, b } = hexToRgb(headerColor);\n    const luma = getColorLuma([r, g, b]);\n    const adaptedLuma = theme === 'dark' ? 255 - luma : luma;\n    return adaptedLuma > LUMA_THRESHOLD ? 'color-text' : 'color-background';\n  }, [headerColor, theme, isMoreAppsTabActive]);\n\n  function renderTabCurveBorder(className: string) {\n    return (\n      <svg\n        className={className}\n        width=\"16\"\n        height=\"16\"\n        viewBox=\"0 0 16 16\"\n        fill=\"none\"\n      >\n        <path\n          className={styles.tabButtonCurvePath}\n          fill-rule=\"evenodd\"\n          clip-rule=\"evenodd\"\n          d=\"M16 16V0C16 12 12 16 0 16H16Z\"\n        />\n      </svg>\n    );\n  }\n\n  function renderActiveTab() {\n    const style = buildStyle(\n      headerTextVar && `--color-header-text: var(--${headerTextVar})`,\n      headerColor && `--active-tab-background: ${headerColor}`,\n    );\n    return (\n      <div\n        className={styles.tabButtonWrapper}\n        style={style}\n      >\n        {renderTabCurveBorder(styles.tabButtonLeftCurve)}\n        <div\n          className={styles.tabButton}\n        >\n          <div className={styles.avatarContainer}>\n            <Avatar\n              size=\"mini\"\n              peer={bot}\n            />\n            <MoreMenuButton onTrigger={handleContextMenu} isOpen={isContextMenuOpen} />\n          </div>\n          {attachBot?.shortName ?? bot?.firstName}\n          <div className={styles.tabRightMask} />\n          <Button\n            className={styles.tabCloseButton}\n            round\n            color=\"translucent\"\n            size=\"tiny\"\n            ariaLabel={oldLang('Close')}\n            onClick={handleTabClose}\n          >\n            <Icon className={styles.tabCloseIcon} name=\"close\" />\n          </Button>\n        </div>\n        {renderTabCurveBorder(styles.tabButtonRightCurve)}\n      </div>\n    );\n  }\n\n  function renderMoreAppsTab() {\n    return (\n      <div\n        className={styles.tabButtonWrapper}\n      >\n        {renderTabCurveBorder(styles.tabButtonLeftCurve)}\n        <div\n          className={styles.tabButton}\n        >\n          <div className={styles.moreAppsTabIcon}>\n            <Icon className={styles.icon} name=\"add\" />\n          </div>\n          {lang('OpenApp')}\n          <div className={styles.tabRightMask} />\n          <Button\n            className={styles.tabCloseButton}\n            round\n            color=\"translucent\"\n            size=\"tiny\"\n            ariaLabel={oldLang('Close')}\n            onClick={handleCloseMoreAppsTab}\n          >\n            <Icon className={styles.tabCloseIcon} name=\"close\" />\n          </Button>\n        </div>\n        {renderTabCurveBorder(styles.tabButtonRightCurve)}\n      </div>\n    );\n  }\n\n  function renderMoreAppsButton() {\n    return (\n      <Button\n        className={buildClassName(\n          styles.moreAppsButton,\n          'no-drag',\n        )}\n        round\n        color=\"translucent\"\n        size=\"tiny\"\n        onClick={handleOpenMoreAppsTabClick}\n      >\n        <Icon className={styles.icon} name=\"add\" />\n      </Button>\n    );\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  useHorizontalScroll(containerRef, !isOpen || isMinimizedState || !(containerRef.current));\n\n  function renderTabs() {\n    return (\n      <div\n        className={styles.tabs}\n        ref={containerRef}\n      >\n        {tabs?.map((tab) => (\n          tab.isOpen ? (\n            renderActiveTab()\n          ) : (\n            <Avatar\n              className={styles.tabAvatar}\n              size=\"mini\"\n              peer={tab.bot}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleTabClick(tab)}\n            />\n          )\n        ))}\n        {isMoreAppsTabActive && renderMoreAppsTab()}\n      </div>\n    );\n  }\n\n  function renderHeader() {\n    return (\n      <div\n        ref={headerRef}\n      >\n        {!supportMultiTabMode\n          ? renderSinglePageModeHeader()\n          : (isMaximizedState ? renderMultiTabHeader() : <MinimizedWebAppModal />)}\n      </div>\n    );\n  }\n\n  function renderMultiTabHeader() {\n    return (\n      <div\n        className={buildClassName(\n          'modal-header',\n          'multiTab',\n        )}\n        style={buildStyle(\n          headerTextVar && `--color-header-text: var(--${headerTextVar})`,\n        )}\n      >\n        <Button\n          className={styles.headerButton}\n          round\n          color=\"translucent\"\n          size=\"tiny\"\n          ariaLabel={oldLang(isBackButtonVisible ? 'Back' : 'Close')}\n          onClick={handleBackClick}\n        >\n          <div className={backButtonClassName} />\n        </Button>\n        {renderTabs()}\n        {renderMoreMenu()}\n\n        <div className={styles.toolBar}>\n          {!isMoreAppsTabActive && renderMoreAppsButton()}\n\n          {!isMoreAppsTabActive && (\n            <Button\n              className={buildClassName(\n                styles.windowStateButton,\n                styles.fullscreenButton,\n                'no-drag',\n              )}\n              round\n              color=\"translucent\"\n              size=\"tiny\"\n              onClick={handleFullscreenClick}\n            >\n              <Icon className={styles.stateIcon} name=\"expand-modal\" />\n            </Button>\n          )}\n\n          <Button\n            className={buildClassName(\n              styles.windowStateButton,\n              'no-drag',\n            )}\n            round\n            color=\"translucent\"\n            size=\"tiny\"\n            onClick={handleCollapseClick}\n          >\n            <Icon className={styles.stateIcon} name=\"collapse-modal\" />\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  function renderSinglePageModeHeader() {\n    return (\n      <div\n        className=\"modal-header\"\n        style={buildStyle(\n          headerColor && `background-color: ${headerColor}`,\n          headerTextVar && `--color-header-text: var(--${headerTextVar})`,\n        )}\n      >\n        <Button\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          ariaLabel={oldLang(isBackButtonVisible ? 'Back' : 'Close')}\n          onClick={handleBackClick}\n        >\n          <div className={backButtonClassName} />\n        </Button>\n        <div className=\"modal-title\">{attachBot?.shortName ?? bot?.firstName}</div>\n        {!isMoreAppsTabActive && renderDropdownMoreMenu()}\n      </div>\n    );\n  }\n\n  function buildResizeHandleClass(handleClassName: string) {\n    return buildClassName(RESIZE_HANDLE_CLASS_NAME, handleClassName);\n  }\n\n  function renderResizeHandles() {\n    return (\n      <>\n        <div className={buildResizeHandleClass('top')} />\n        <div className={buildResizeHandleClass('bottom')} />\n        <div className={buildResizeHandleClass('left')} />\n        <div className={buildResizeHandleClass('right')} />\n        <div className={buildResizeHandleClass('topLeft')} />\n        <div className={buildResizeHandleClass('topRight')} />\n        <div className={buildResizeHandleClass('bottomLeft')} />\n        <div className={buildResizeHandleClass('bottomRight')} />\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      dialogRef={ref}\n      className={buildClassName(\n        styles.root,\n        supportMultiTabMode && styles.multiTab,\n        isMinimizedState && styles.minimized,\n        isFullScreen && styles.fullScreen,\n      )}\n      dialogStyle={supportMultiTabMode ? draggableStyle : undefined}\n      dialogContent={isDraggingEnabled && !isMinimizedState ? renderResizeHandles() : undefined}\n      isOpen={isOpen}\n      isLowStackPriority\n      onClose={handleModalClose}\n      header={renderHeader()}\n      style={`background-color: ${backgroundColor || 'var(--color-background)'}`}\n      noBackdrop\n      noBackdropClose\n    >\n      {isFullScreen && renderMoreMenu()}\n      {openedWebApps && sessionKeys?.map((key) => (\n        <WebAppModalTabContent\n          key={key}\n          modal={modal}\n          registerSendEventCallback={registerSendEventCallback}\n          registerReloadFrameCallback={registerReloadFrameCallback}\n          webApp={openedWebApps[key]}\n          isTransforming={isDragging || isResizing}\n          onContextMenuButtonClick={handleContextMenu}\n          isMultiTabSupported={supportMultiTabMode}\n          modalHeight={currentHeight}\n        />\n      ))}\n      { isMoreAppsTabActive && (<MoreAppsTabContent />)}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const activeWebApp = modal?.activeWebAppKey ? selectWebApp(global, modal.activeWebAppKey) : undefined;\n    const { botId: activeBotId } = activeWebApp || {};\n\n    const attachBot = activeBotId ? global.attachMenu.bots[activeBotId] : undefined;\n    const bot = activeBotId ? selectUser(global, activeBotId) : undefined;\n    const chat = selectCurrentChat(global);\n    const theme = selectTheme(global);\n    const { miniAppsCachedPosition, miniAppsCachedSize } = selectSharedSettings(global);\n\n    return {\n      attachBot,\n      bot,\n      chat,\n      theme,\n      cachedPosition: miniAppsCachedPosition,\n      cachedSize: miniAppsCachedSize,\n    };\n  },\n)(WebAppModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiUser } from '../../api/types';\n\nimport { getUserFullName } from '../../global/helpers';\nimport renderText from '../common/helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  bot?: ApiUser;\n  type?: 'game' | 'webApp' | 'botApp';\n  shouldRequestWriteAccess?: boolean;\n};\n\nconst BotTrustModal: FC<OwnProps> = ({ bot, type, shouldRequestWriteAccess }) => {\n  const { cancelBotTrustRequest, markBotTrusted } = getActions();\n\n  const [isWriteAllowed, setIsWriteAllowed] = useState(shouldRequestWriteAccess || false);\n\n  const lang = useOldLang();\n\n  const handleBotTrustAccept = useCallback(() => {\n    markBotTrusted({ botId: bot!.id, isWriteAllowed });\n  }, [markBotTrusted, isWriteAllowed, bot]);\n\n  const handleBotTrustDecline = useCallback(() => {\n    cancelBotTrustRequest();\n  }, []);\n\n  const title = type === 'game' ? lang('AppName') : lang('BotOpenPageTitle');\n  const text = useMemo(() => {\n    switch (type) {\n      case 'game':\n        return lang('BotPermissionGameAlert', getUserFullName(bot));\n      case 'webApp':\n        return lang('BotOpenPageMessage', getUserFullName(bot));\n      case 'botApp':\n      default:\n        return lang('BotWebViewStartPermission');\n    }\n  }, [bot, type, lang]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(bot)}\n      onClose={handleBotTrustDecline}\n      title={title}\n      confirmHandler={handleBotTrustAccept}\n    >\n      {renderText(text, ['simple_markdown'])}\n      {shouldRequestWriteAccess && (\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={isWriteAllowed}\n          label={renderText(\n            lang('WebApp.AddToAttachmentAllowMessages', bot?.firstName),\n            ['simple_markdown'],\n          )}\n          onCheck={setIsWriteAllowed}\n        />\n      )}\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(BotTrustModal);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { MINI_APP_TOS_URL } from '../../../config';\nimport renderText from '../../common/helpers/renderText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  modal: TabState['requestedAttachBotInstall'];\n};\n\nconst AttachBotInstallModal: FC<OwnProps> = ({\n  modal,\n}) => {\n  const { confirmAttachBotInstall, cancelAttachBotInstall } = getActions();\n  const bot = modal?.bot;\n\n  const [isTosAccepted, setIsTosAccepted] = useState(false);\n\n  const lang = useOldLang();\n\n  const handleConfirm = useCallback(() => {\n    confirmAttachBotInstall({\n      isWriteAllowed: Boolean(bot?.shouldRequestWriteAccess),\n    });\n  }, [confirmAttachBotInstall, bot]);\n\n  // Reset on re-open\n  useEffect(() => {\n    if (bot) {\n      setIsTosAccepted(false);\n    }\n  }, [bot]);\n\n  const tosLabel = useMemo(() => {\n    const base = lang('lng_mini_apps_disclaimer_button');\n    const split = base.split('{link}');\n    const linkText = lang('lng_mini_apps_disclaimer_link');\n    return [\n      split[0],\n      <a href={MINI_APP_TOS_URL} target=\"_blank\" rel=\"noopener noreferrer\">{linkText}</a>,\n      split[1],\n    ];\n  }, [lang]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(bot)}\n      onClose={cancelAttachBotInstall}\n      title={lang('lng_mini_apps_disclaimer_title')}\n      confirmHandler={handleConfirm}\n      isConfirmDisabled={!isTosAccepted}\n    >\n      {renderText(lang('lng_mini_apps_disclaimer_text', bot?.shortName), ['simple_markdown'])}\n      <Checkbox\n        className=\"dialog-checkbox\"\n        checked={isTosAccepted}\n        label={tosLabel}\n        onCheck={setIsTosAccepted}\n      />\n      {renderText(lang('WebBot.Account.Desclaimer.Desc', bot?.shortName), ['simple_markdown'])}\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(AttachBotInstallModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  folder?: ApiChatFolder;\n};\n\nconst DeleteFolderDialog: FC<OwnProps> = ({\n  folder,\n}) => {\n  const { closeDeleteChatFolderModal, deleteChatFolder, openDeleteChatFolderModal } = getActions();\n  const lang = useOldLang();\n\n  const isOpen = Boolean(folder);\n\n  const renderingFolder = usePreviousDeprecated(folder) || folder;\n  const isMyChatlist = renderingFolder?.hasMyInvites;\n\n  const handleDeleteFolderMessage = useCallback(() => {\n    closeDeleteChatFolderModal();\n    if (isMyChatlist) {\n      openDeleteChatFolderModal({ folderId: renderingFolder!.id, isConfirmedForChatlist: true });\n    } else {\n      deleteChatFolder({ id: renderingFolder!.id });\n    }\n  }, [isMyChatlist, renderingFolder]);\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={closeDeleteChatFolderModal}\n      text={isMyChatlist ? lang('FilterDeleteAlertLinks') : lang('FilterDeleteAlert')}\n      confirmLabel={lang('Delete')}\n      confirmHandler={handleDeleteFolderMessage}\n      confirmIsDestructive\n    />\n  );\n};\n\nexport default memo(DeleteFolderDialog);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Wn7D2H1e\",\"text\":\"IQ1U2TrZ\",\"header\":\"F6qqXRvD\",\"description\":\"ILLaH6qQ\",\"icon\":\"DzGwbpu5\",\"font-icon\":\"Pa9h5mh3\",\"fontIcon\":\"Pa9h5mh3\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { IconName } from '../../../types/icons';\n\nimport { hexToRgb, lerpRgb } from '../../../util/switchTheme';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Icon from '../../common/icons/Icon';\nimport ListItem from '../../ui/ListItem';\n\nimport styles from './PremiumFeatureItem.module.scss';\n\ntype OwnProps<T> = {\n  title: string;\n  text: string;\n  index: number;\n  count: number;\n  section: T;\n  onClick?: (section: T) => void;\n} & ({\n  icon: IconName;\n  isFontIcon: true;\n} | {\n  icon: string;\n  isFontIcon?: false;\n});\n\nconst COLORS = [\n  '#F2862D', '#EB7B4D', '#E46D72', '#DD6091', '#CC5FBA', '#B464E7',\n  '#9873FF', '#768DFF', '#55A5FC', '#52B0C9', '#4FBC93', '#4CC663',\n].map(hexToRgb);\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst PremiumFeatureItem = <T,>({\n  icon,\n  isFontIcon,\n  title,\n  text,\n  index,\n  count,\n  section,\n  onClick,\n}: OwnProps<T>) => {\n  const newIndex = (index / count) * COLORS.length;\n  const colorA = COLORS[Math.floor(newIndex)];\n  const colorB = COLORS[Math.ceil(newIndex)] ?? colorA;\n  const { r, g, b } = lerpRgb(colorA, colorB, 0.5);\n\n  const handleClick = useLastCallback(() => {\n    onClick?.(section);\n  });\n\n  return (\n    <ListItem buttonClassName={styles.root} onClick={handleClick} inactive={!onClick}>\n      {isFontIcon ? (\n        <Icon name={icon} className={styles.fontIcon} style={`--item-color: rgb(${r},${g},${b})`} />\n      ) : (\n        <img src={icon} className={styles.icon} alt=\"\" style={`--item-color: rgb(${r},${g},${b})`} draggable={false} />\n      )}\n      <div className={styles.text}>\n        <div className={styles.title}>{renderText(title, ['br'])}</div>\n        <div className={styles.description}>{text}</div>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(PremiumFeatureItem);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"HmY1pYD9\",\"arrow\":\"cqNhvdib\",\"right\":\"hIgQCprt\",\"arrow-hidden\":\"wDzTWXzO\",\"arrowHidden\":\"wDzTWXzO\",\"dot\":\"Ac0pMX9w\",\"medium\":\"yDo_8Y7X\",\"small\":\"bhODNwmU\",\"invisible\":\"O9pyrgj0\",\"active\":\"NYDxCNdz\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\n\nimport Button from '../ui/Button';\nimport Icon from './icons/Icon';\n\nimport styles from './SliderDots.module.scss';\n\ntype OwnProps = {\n  length: number;\n  active: number;\n  onSelectSlide: (index: number) => void;\n};\n\nconst SliderDots: FC<OwnProps> = ({\n  length,\n  active,\n  onSelectSlide,\n}) => {\n  const startFrom = Math.max(0, Math.min(length - 8, active - 4));\n  const isPreLastBatch = startFrom === length - 8 - 1;\n  const isLastBatch = startFrom === length - 8;\n  const isFirstBatch = startFrom === 0;\n  const isPreFirstBatch = startFrom === 1;\n  const shownDotsCount = Math.min(length, 8);\n\n  const handleGoForward = useCallback(() => {\n    onSelectSlide(active + 1);\n  }, [active, onSelectSlide]);\n\n  const handleGoBack = useCallback(() => {\n    onSelectSlide(active - 1);\n  }, [active, onSelectSlide]);\n\n  const count = Math.min(8, length);\n\n  return (\n    <div>\n      {!IS_TOUCH_ENV && (\n        <Button\n          className={buildClassName(styles.arrow, active === 0 && styles.arrowHidden)}\n          color=\"translucent\"\n          disabled={active === 0}\n          round\n          onClick={handleGoBack}\n        >\n          <Icon name=\"previous\" />\n        </Button>\n      )}\n      <div className={styles.root} style={`--start-from: ${startFrom}; --length: ${length}; --count: ${count};`}>\n        {Array(length).fill(undefined).map((_, i) => {\n          const index = i;\n          const isLast = (i === startFrom + shownDotsCount - 1 && !isLastBatch && !isPreLastBatch);\n          const isPreLast = (i === startFrom + shownDotsCount - 2 && !isPreLastBatch && !isLastBatch)\n            || (i === startFrom + shownDotsCount - 1 && isPreLastBatch);\n          const isFirst = (i === startFrom) && !isFirstBatch && !isPreFirstBatch;\n          const isPreFirst = ((i === startFrom + 1) && !isFirstBatch && !isPreFirstBatch)\n            || (i === startFrom && isPreFirstBatch);\n          const isInvisible = i < startFrom || i >= startFrom + shownDotsCount;\n          return (\n            <div\n              onClick={() => onSelectSlide(i)}\n              className={buildClassName(\n                styles.dot,\n                index === active && styles.active,\n                (isPreLast || isPreFirst) && styles.medium,\n                (isLast || isFirst || isInvisible) && styles.small,\n                isInvisible && styles.invisible,\n              )}\n            />\n          );\n        })}\n      </div>\n      {!IS_TOUCH_ENV && (\n        <Button\n          className={buildClassName(styles.arrow, active === length - 1 && styles.arrowHidden, styles.right)}\n          color=\"translucent\"\n          round\n          disabled={active === length - 1}\n          onClick={handleGoForward}\n        >\n          <Icon name=\"next\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SliderDots);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"u84X0r2z\",\"floating-badge\":\"hPi4fICJ\",\"floatingBadge\":\"hPi4fICJ\",\"floating-badge-triangle\":\"jufjjcX9\",\"floatingBadgeTriangle\":\"jufjjcX9\",\"floating-badge-icon\":\"XkiOXdMP\",\"floatingBadgeIcon\":\"XkiOXdMP\",\"text\":\"YaiSoFKE\",\"floating-badge-value\":\"iC3LJrvy\",\"floatingBadgeValue\":\"iC3LJrvy\",\"left-text\":\"OejVAPj6 YaiSoFKE YaiSoFKE\",\"leftText\":\"OejVAPj6 YaiSoFKE YaiSoFKE\",\"right-text\":\"COQdFBQk YaiSoFKE YaiSoFKE\",\"rightText\":\"COQdFBQk YaiSoFKE YaiSoFKE\",\"right-value\":\"BEq3jFlz YaiSoFKE YaiSoFKE\",\"rightValue\":\"BEq3jFlz YaiSoFKE YaiSoFKE\",\"left-value\":\"RJosx238 YaiSoFKE\",\"leftValue\":\"RJosx238 YaiSoFKE\",\"line\":\"Hy5kWx0p\",\"left\":\"scGr4JS9\",\"right\":\"nPaUalQf\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { IconName } from '../../../../types/icons';\n\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './PremiumLimitsCompare.module.scss';\n\ntype OwnProps = {\n  floatingBadgeIcon?: IconName;\n  leftValue?: string;\n  rightValue?: string;\n  className?: string;\n  rightStyle?: string;\n};\n\nconst PremiumLimitsCompare: FC<OwnProps> = ({\n  leftValue,\n  rightValue,\n  className,\n  floatingBadgeIcon,\n  rightStyle,\n}) => {\n  const lang = useOldLang();\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      {floatingBadgeIcon && (\n        <div className={styles.floatingBadge}>\n          <Icon name={floatingBadgeIcon} className={styles.floatingBadgeIcon} />\n          <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>{leftValue}</div>\n          <div className={styles.floatingBadgeTriangle}>\n            <svg width=\"26\" height=\"9\" viewBox=\"0 0 26 9\" fill=\"none\">\n              <path d=\"M0 0H26H24.4853C22.894 0 21.3679 0.632141 20.2426 1.75736L14.4142 7.58579C13.6332 8.36684 12.3668 8.36683 11.5858 7.58579L5.75736 1.75736C4.63214 0.632139 3.10602 0 1.51472 0H0Z\" fill=\"#7E85FF\" />\n            </svg>\n          </div>\n        </div>\n      )}\n      <div className={buildClassName(styles.line, styles.left)}>\n        <div className={styles.leftText} dir={lang.isRtl ? 'rtl' : undefined}>{lang('LimitFree')}</div>\n        {!floatingBadgeIcon && <div className={styles.leftValue}>{leftValue}</div>}\n      </div>\n      <div className={buildClassName(styles.line, styles.right)} style={rightStyle}>\n        <div className={styles.rightText} dir={lang.isRtl ? 'rtl' : undefined}>{lang('LimitPremium')}</div>\n        <div className={styles.rightValue}>{rightValue}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumLimitsCompare);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../../lib/teact/teact';\n\nimport { lerp } from '../../../../util/math';\n\nimport PremiumLimitsCompare from './PremiumLimitsCompare';\n\nimport styles from './PremiumLimitPreview.module.scss';\n\ntype OwnProps = {\n  title: string;\n  description: string;\n  leftValue?: string;\n  rightValue?: string;\n  colorStepProgress: number;\n};\n\nconst COLOR_START = [91, 160, 255];\nconst COLOR_END = [197, 100, 243];\n\nconst PremiumLimitPreview: FC<OwnProps> = ({\n  title,\n  description,\n  leftValue,\n  rightValue,\n  colorStepProgress,\n}) => {\n  const color = useMemo(() => {\n    return COLOR_START.map((start, i) => lerp(start, COLOR_END[i], colorStepProgress));\n  }, [colorStepProgress]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.title}>{title}</div>\n      <div className={styles.description}>{description}</div>\n      <PremiumLimitsCompare\n        leftValue={leftValue}\n        rightValue={rightValue}\n        rightStyle={`background: rgb(${color.join(',')})`}\n      />\n    </div>\n  );\n};\n\nexport default memo(PremiumLimitPreview);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ZXp65Wgy\",\"title\":\"W1xG3pjS\",\"description\":\"b_CBXIkT\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"O1fqNCy0\",\"sticker\":\"ogaoEAcn\",\"effect-sticker\":\"Stdz4UIW ogaoEAcn\",\"effectSticker\":\"Stdz4UIW ogaoEAcn\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { GlobalState } from '../../../../global/types';\n\nimport cycleRestrict from '../../../../util/cycleRestrict';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../../common/AnimatedSticker';\n\nimport styles from './PremiumFeaturePreviewStickers.module.scss';\n\ntype OwnProps = {\n  isActive: boolean;\n};\n\ntype StateProps = {\n  stickers: GlobalState['stickers']['premium']['stickers'];\n};\n\nconst EMOJI_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 0.8;\nconst MAX_EMOJIS = 15;\nconst ENDED_DELAY = 150;\n\nconst AnimatedCircleSticker: FC<{\n  size: number;\n  realIndex: number;\n  sticker: ApiSticker;\n  index: number;\n  maxLength: number;\n  onClick: (index: number) => void;\n  onEnded: (index: number) => void;\n  canPlay: boolean;\n}> = ({\n  size, realIndex, canPlay,\n  sticker, index, maxLength, onClick, onEnded,\n}) => {\n  const mediaData = useMedia(`sticker${sticker.id}`);\n  const mediaDataAround = useMedia(`sticker${sticker.id}?size=f`);\n\n  const isActivated = index === 0;\n  const [isAnimated, animate, inanimate] = useFlag(isActivated);\n\n  const circleSize = size - size * EMOJI_SIZE_MULTIPLIER;\n  const width = circleSize * 3;\n  const height = circleSize * 3.2;\n\n  const a = index / maxLength;\n\n  const angle = a * (Math.PI * 2);\n  const scale = isActivated ? 1 : 0.66;\n\n  const x = Math.cos(angle) * width - circleSize * 2.8;\n  const y = Math.sin(angle) * height;\n\n  const handleClick = useLastCallback(() => {\n    onClick(realIndex);\n  });\n\n  const handleEnded = useLastCallback(() => {\n    inanimate();\n    onEnded(realIndex);\n  });\n\n  useEffect(() => {\n    if (isActivated) {\n      animate();\n    }\n  }, [isActivated, animate]);\n\n  return (\n    <>\n      {isActivated && (\n        <AnimatedSticker\n          className={styles.effectSticker}\n          tgsUrl={mediaDataAround}\n          play={canPlay}\n          isLowPriority\n          noLoop\n          size={EFFECT_SIZE_MULTIPLIER * size}\n          style={`--x: calc(${x}px - 10%); --y: ${y}px;`}\n        />\n      )}\n      <AnimatedSticker\n        className={styles.sticker}\n        tgsUrl={mediaData}\n        play={canPlay && isAnimated}\n        noLoop\n        size={EMOJI_SIZE_MULTIPLIER * size}\n        style={`--x: ${x}px; --y: ${y}px; --opacity: ${scale}`}\n        onClick={handleClick}\n        onEnded={handleEnded}\n      />\n    </>\n  );\n};\n\nconst PremiumFeaturePreviewStickers: FC<OwnProps & StateProps> = ({\n  stickers, isActive,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [offset, setOffset] = useState(0);\n  const [size, setSize] = useState(0);\n\n  const renderedStickers = stickers?.slice(0, MAX_EMOJIS);\n\n  const handleClick = useLastCallback((i: number) => {\n    setOffset(-i);\n  });\n\n  const handleEnded = useLastCallback((i: number) => {\n    const displayIndex = cycleRestrict(renderedStickers.length, i + offset);\n    if (displayIndex !== 0) return;\n\n    setTimeout(() => {\n      setOffset((current) => {\n        return cycleRestrict(renderedStickers.length, current + 1);\n      });\n    }, ENDED_DELAY);\n  });\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    setSize(container.closest('.modal-dialog')!.clientWidth);\n  }, []);\n\n  return (\n    <div\n      className={styles.root}\n      ref={containerRef}\n    >\n      {Boolean(size) && renderedStickers?.map((sticker, i) => {\n        return (\n          <AnimatedCircleSticker\n            size={size}\n            sticker={sticker}\n            realIndex={i}\n            index={(i + offset + renderedStickers.length) % renderedStickers.length}\n            maxLength={renderedStickers.length}\n            onClick={handleClick}\n            onEnded={handleEnded}\n            canPlay={isActive}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      stickers: global.stickers.premium.stickers,\n    };\n  },\n)(PremiumFeaturePreviewStickers));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mFElmm7a\",\"header\":\"Jjbochk6\",\"circle\":\"ChteQ9C3\",\"title\":\"d2ayix6L\",\"features\":\"ensyCeMe\",\"mobile\":\"DFbZJafh\",\"scrolled\":\"iN1T0a2Y\"};","import React, { memo, useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiUser } from '../../../../api/types';\nimport type { IconName } from '../../../../types/icons';\n\nimport { selectUser } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useOldLang from '../../../../hooks/useOldLang';\nimport useScrolledState from '../../../../hooks/useScrolledState';\nimport useDevicePixelRatio from '../../../../hooks/window/useDevicePixelRatio';\n\nimport Avatar, { AVATAR_SIZES } from '../../../common/Avatar';\nimport { drawGradientCircle } from '../../../common/AvatarStoryCircle';\nimport PremiumFeatureItem from '../PremiumFeatureItem';\n\nimport styles from './PremiumFeaturePreviewStories.module.scss';\n\ntype StateProps = {\n  currentUser: ApiUser;\n};\n\nconst STORY_FEATURE_TITLES = {\n  stories_order: 'PremiumStoriesPriority',\n  stories_stealth: 'PremiumStoriesStealth',\n  stories_views: 'PremiumStoriesViews',\n  stories_timer: 'lng_premium_stories_subtitle_expiration',\n  stories_save: 'PremiumStoriesSaveToGallery',\n  stories_caption: 'lng_premium_stories_subtitle_caption',\n  stories_link: 'lng_premium_stories_subtitle_links',\n};\n\nconst STORY_FEATURE_DESCRIPTIONS = {\n  stories_order: 'PremiumStoriesPriorityDescription',\n  stories_stealth: 'PremiumStoriesStealthDescription',\n  stories_views: 'PremiumStoriesViewsDescription',\n  stories_timer: 'PremiumStoriesExpirationDescription',\n  stories_save: 'PremiumStoriesSaveToGalleryDescription',\n  stories_caption: 'PremiumStoriesCaptionDescription',\n  stories_link: 'PremiumStoriesFormattingDescription',\n};\n\nconst STORY_FEATURE_ICONS: Record<string, IconName> = {\n  stories_order: 'story-priority',\n  stories_stealth: 'eye-crossed-outline',\n  stories_views: 'eye-outline',\n  stories_timer: 'timer',\n  stories_save: 'arrow-down-circle',\n  stories_caption: 'story-caption',\n  stories_link: 'link-badge',\n};\n\nconst STORY_FEATURE_ORDER = Object.keys(STORY_FEATURE_TITLES) as (keyof typeof STORY_FEATURE_TITLES)[];\n\nconst CIRCLE_SIZE = AVATAR_SIZES.giant + 0.25 * REM;\nconst CIRCLE_SEGMENTS = 8;\nconst CIRCLE_READ_SEGMENTS = 0;\n\nconst PremiumFeaturePreviewVideo = ({\n  currentUser,\n}: StateProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const circleRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n\n  const dpr = useDevicePixelRatio();\n\n  useLayoutEffect(() => {\n    if (!circleRef.current) {\n      return;\n    }\n\n    drawGradientCircle({\n      canvas: circleRef.current,\n      size: CIRCLE_SIZE * dpr,\n      segmentsCount: CIRCLE_SEGMENTS,\n      color: 'purple',\n      readSegmentsCount: CIRCLE_READ_SEGMENTS,\n      readSegmentColor: 'transparent',\n      dpr,\n    });\n  }, [dpr]);\n\n  const { handleScroll, isAtBeginning } = useScrolledState();\n\n  const maxSize = CIRCLE_SIZE;\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.header}>\n        <Avatar forPremiumPromo peer={currentUser} size=\"giant\" />\n        <canvas className={styles.circle} ref={circleRef} style={`max-width: ${maxSize}px; max-height: ${maxSize}px`} />\n      </div>\n      <div className={styles.title}>{lang('UpgradedStories')}</div>\n      <div\n        className={buildClassName(styles.features, !isAtBeginning && styles.scrolled, 'custom-scroll')}\n        onScroll={handleScroll}\n      >\n        {STORY_FEATURE_ORDER.map((section, index) => {\n          return (\n            <PremiumFeatureItem\n              key={section}\n              title={lang(STORY_FEATURE_TITLES[section])}\n              text={lang(STORY_FEATURE_DESCRIPTIONS[section])}\n              icon={STORY_FEATURE_ICONS[section]}\n              isFontIcon\n              index={index}\n              count={STORY_FEATURE_ORDER.length}\n              section={section}\n            />\n          );\n        })}\n        <div className={styles.mobile}>{lang('lng_premium_stories_about_mobile')}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      currentUser: selectUser(global, global.currentUserId!)!,\n    };\n  },\n)(PremiumFeaturePreviewVideo));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ot0dA1yZ\",\"wrapper\":\"yxSAGAc1\",\"down\":\"Jcy6cDoc\",\"frame\":\"Vn81yTTJ\",\"video\":\"rrVJClLL\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiThumbnail } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useCanvasBlur from '../../../../hooks/useCanvasBlur';\nimport useMedia from '../../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../../hooks/useMediaTransitionDeprecated';\n\nimport OptimizedVideo from '../../../ui/OptimizedVideo';\n\nimport styles from './PremiumFeaturePreviewVideo.module.scss';\n\nimport DeviceFrame from '../../../../assets/premium/DeviceFrame.svg';\n\ntype OwnProps = {\n  videoId: string;\n  isReverseAnimation: boolean;\n  isDown: boolean;\n  videoThumbnail: ApiThumbnail;\n  index: number;\n  isActive: boolean;\n};\n\nconst PremiumFeaturePreviewVideo: FC<OwnProps> = ({\n  videoId,\n  isReverseAnimation,\n  isDown,\n  videoThumbnail,\n  index,\n  isActive,\n}) => {\n  const mediaData = useMedia(`document${videoId}`);\n  const thumbnailRef = useCanvasBlur(videoThumbnail.dataUri);\n  const transitionClassNames = useMediaTransitionDeprecated(mediaData);\n\n  return (\n    <div className={styles.root}>\n      <div\n        className={buildClassName(\n          styles.wrapper,\n          isReverseAnimation && styles.reverse,\n          isDown && styles.down,\n        )}\n        id={`premium_feature_preview_video_${index}`}\n      >\n        <img src={DeviceFrame} alt=\"\" className={styles.frame} draggable={false} />\n        <canvas ref={thumbnailRef} className={styles.video} />\n        <OptimizedVideo\n          canPlay={isActive}\n          className={buildClassName(styles.video, transitionClassNames)}\n          src={mediaData}\n          disablePictureInPicture\n          playsInline\n          muted\n          loop\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumFeaturePreviewVideo);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"oyUTEj8I\",\"button\":\"EPfM7AgT\",\"button-content\":\"GysZk2mF\",\"buttonContent\":\"GysZk2mF\",\"back-button\":\"njYoMrKM\",\"backButton\":\"njYoMrKM\",\"white-back-button\":\"SB4pczOo\",\"whiteBackButton\":\"SB4pczOo\",\"content\":\"sJubG84j\",\"frame\":\"a7IoUtQG\",\"slide\":\"gubS9KP1\",\"limits\":\"U7ePgVBR\",\"stories\":\"J1M6fEdo\",\"limits-content\":\"n_rowVPI\",\"limitsContent\":\"n_rowVPI\",\"header\":\"mz2Hmd83\",\"no-header-border\":\"AgmNOqi7\",\"noHeaderBorder\":\"AgmNOqi7\",\"preview\":\"dIVBSdWi\",\"title\":\"iZLwcL8v\",\"description\":\"A7YHY8qF\",\"footer\":\"yN2611rA\",\"no-footer-border\":\"rCHMABcD\",\"noFooterBorder\":\"rCHMABcD\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { toggleExtraClass } from '../../../lib/teact/teact-dom';\n\nimport type {\n  ApiLimitTypeForPromo,\n  ApiPremiumPromo,\n  ApiPremiumSection,\n  ApiPremiumSubscriptionOption,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\n\nimport { PREMIUM_BOTTOM_VIDEOS, PREMIUM_FEATURE_SECTIONS, PREMIUM_LIMITS_ORDER } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport Icon from '../../common/icons/Icon';\nimport SliderDots from '../../common/SliderDots';\nimport Button from '../../ui/Button';\nimport PremiumLimitPreview from './common/PremiumLimitPreview';\nimport PremiumFeaturePreviewStickers from './previews/PremiumFeaturePreviewStickers';\nimport PremiumFeaturePreviewStories from './previews/PremiumFeaturePreviewStories';\nimport PremiumFeaturePreviewVideo from './previews/PremiumFeaturePreviewVideo';\n\nimport styles from './PremiumFeatureModal.module.scss';\n\nexport const PREMIUM_FEATURE_TITLES: Record<ApiPremiumSection, string> = {\n  double_limits: 'PremiumPreviewLimits',\n  infinite_reactions: 'PremiumPreviewReactions2',\n  premium_stickers: 'PremiumPreviewStickers',\n  animated_emoji: 'PremiumPreviewEmoji',\n  no_ads: 'PremiumPreviewNoAds',\n  voice_to_text: 'PremiumPreviewVoiceToText',\n  profile_badge: 'PremiumPreviewProfileBadge',\n  faster_download: 'PremiumPreviewDownloadSpeed',\n  more_upload: 'PremiumPreviewUploads',\n  advanced_chat_management: 'PremiumPreviewAdvancedChatManagement',\n  animated_userpics: 'PremiumPreviewAnimatedProfiles',\n  emoji_status: 'PremiumPreviewEmojiStatus',\n  translations: 'PremiumPreviewTranslations',\n  stories: 'PremiumPreviewStories',\n  saved_tags: 'PremiumPreviewTags2',\n  last_seen: 'PremiumPreviewLastSeen',\n  message_privacy: 'PremiumPreviewMessagePrivacy',\n  effects: 'Premium.MessageEffects',\n};\n\nexport const PREMIUM_FEATURE_DESCRIPTIONS: Record<ApiPremiumSection, string> = {\n  double_limits: 'PremiumPreviewLimitsDescription',\n  infinite_reactions: 'PremiumPreviewReactions2Description',\n  premium_stickers: 'PremiumPreviewStickersDescription',\n  no_ads: 'PremiumPreviewNoAdsDescription',\n  animated_emoji: 'PremiumPreviewEmojiDescription',\n  voice_to_text: 'PremiumPreviewVoiceToTextDescription',\n  profile_badge: 'PremiumPreviewProfileBadgeDescription',\n  faster_download: 'PremiumPreviewDownloadSpeedDescription',\n  more_upload: 'PremiumPreviewUploadsDescription',\n  advanced_chat_management: 'PremiumPreviewAdvancedChatManagementDescription',\n  animated_userpics: 'PremiumPreviewAnimatedProfilesDescription',\n  emoji_status: 'PremiumPreviewEmojiStatusDescription',\n  translations: 'PremiumPreviewTranslationsDescription',\n  stories: 'PremiumPreviewStoriesDescription',\n  saved_tags: 'PremiumPreviewTagsDescription2',\n  last_seen: 'PremiumPreviewLastSeenDescription',\n  message_privacy: 'PremiumPreviewMessagePrivacyDescription',\n  effects: 'Premium.MessageEffectsInfo',\n};\n\nconst LIMITS_TITLES: Record<ApiLimitTypeForPromo, string> = {\n  channels: 'GroupsAndChannelsLimitTitle',\n  dialogFolderPinned: 'PinChatsLimitTitle',\n  channelsPublic: 'PublicLinksLimitTitle',\n  savedGifs: 'SavedGifsLimitTitle',\n  stickersFaved: 'FavoriteStickersLimitTitle',\n  aboutLength: 'BioLimitTitle',\n  captionLength: 'CaptionsLimitTitle',\n  dialogFilters: 'FoldersLimitTitle',\n  dialogFiltersChats: 'ChatPerFolderLimitTitle',\n  recommendedChannels: 'SimilarChannelsLimitTitle',\n  moreAccounts: 'ConnectedAccountsLimitTitle',\n};\n\nconst LIMITS_DESCRIPTIONS: Record<ApiLimitTypeForPromo, string> = {\n  channels: 'GroupsAndChannelsLimitSubtitle',\n  dialogFolderPinned: 'PinChatsLimitSubtitle',\n  channelsPublic: 'PublicLinksLimitSubtitle',\n  savedGifs: 'SavedGifsLimitSubtitle',\n  stickersFaved: 'FavoriteStickersLimitSubtitle',\n  aboutLength: 'BioLimitSubtitle',\n  captionLength: 'CaptionsLimitSubtitle',\n  dialogFilters: 'FoldersLimitSubtitle',\n  dialogFiltersChats: 'ChatPerFolderLimitSubtitle',\n  recommendedChannels: 'SimilarChannelsLimitSubtitle',\n  moreAccounts: 'ConnectedAccountsLimitSubtitle',\n};\n\nconst BORDER_THRESHOLD = 20;\n\ntype OwnProps = {\n  initialSection: ApiPremiumSection;\n  promo: ApiPremiumPromo;\n  isPremium?: boolean;\n  limits?: NonNullable<GlobalState['appConfig']>['limits'];\n  premiumPromoOrder?: ApiPremiumSection[];\n  subscriptionOption?: ApiPremiumSubscriptionOption;\n  onBack: VoidFunction;\n  onClickSubscribe: (startParam?: string) => void;\n};\n\nconst PremiumFeatureModal: FC<OwnProps> = ({\n  promo,\n  initialSection,\n  isPremium,\n  limits,\n  premiumPromoOrder,\n  subscriptionOption,\n  onBack,\n  onClickSubscribe,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const scrollContainerRef = useRef<HTMLDivElement>(null);\n  const [currentSlideIndex, setCurrentSlideIndex] = useState(PREMIUM_FEATURE_SECTIONS.indexOf(initialSection));\n  const [reverseAnimationSlideIndex, setReverseAnimationSlideIndex] = useState(0);\n  const [isScrolling, startScrolling, stopScrolling] = useFlag();\n\n  const [isScrolledToTop, setIsScrolledToTop] = useState(true);\n  const [isScrolledToBottom, setIsScrolledToBottom] = useState(false);\n\n  const prevInitialSection = usePreviousDeprecated(initialSection);\n\n  const filteredSections = useMemo(() => {\n    if (!premiumPromoOrder) return PREMIUM_FEATURE_SECTIONS;\n    return premiumPromoOrder.filter((section) => PREMIUM_FEATURE_SECTIONS.includes(section));\n  }, [premiumPromoOrder]);\n\n  const subscriptionButtonText = useMemo(() => {\n    if (!subscriptionOption) return undefined;\n\n    const { amount, months, currency } = subscriptionOption;\n    const perMonthPrice = Math.floor(amount / months);\n\n    return isPremium\n      ? lang('OK')\n      : lang('SubscribeToPremium', { price: formatCurrency(lang, perMonthPrice, currency) }, { withNodes: true });\n  }, [isPremium, lang, subscriptionOption]);\n\n  const handleClick = useLastCallback(() => {\n    onClickSubscribe(initialSection);\n  });\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const target = e.currentTarget;\n    const { clientWidth, scrollLeft: scrollLeftOriginal } = target;\n\n    const scrollLeft = Math.round(scrollLeftOriginal);\n\n    const left = scrollLeft % (clientWidth);\n    const progress = left / (clientWidth);\n\n    const reverseIndex = Math.ceil((scrollLeft + 1) / clientWidth);\n\n    setReverseAnimationSlideIndex(reverseIndex);\n\n    const prevElement = target.querySelector<HTMLDivElement>(`#premium_feature_preview_video_${reverseIndex - 1}`);\n    const reverseElement = target.querySelector<HTMLDivElement>(`#premium_feature_preview_video_${reverseIndex}`);\n\n    requestMutation(() => {\n      target.style.setProperty('--scroll-progress', progress.toString());\n      target.style.setProperty('--abs-scroll-progress', Math.abs(progress).toString());\n\n      if (prevElement) toggleExtraClass(prevElement, 'reverse', false);\n      if (reverseElement) toggleExtraClass(reverseElement, 'reverse', true);\n    });\n\n    if (isScrolling) return;\n    const slide = Math.round(scrollLeft / clientWidth);\n    setCurrentSlideIndex(slide);\n  }\n\n  function handleLimitsScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop, clientHeight, scrollHeight } = e.currentTarget;\n    setIsScrolledToTop(scrollTop <= BORDER_THRESHOLD);\n    setIsScrolledToBottom(scrollTop >= scrollHeight - clientHeight - BORDER_THRESHOLD);\n  }\n\n  useEffect(() => {\n    const scrollContainer = scrollContainerRef.current;\n    if (!scrollContainer || (prevInitialSection === initialSection)) return;\n\n    const index = filteredSections.indexOf(initialSection);\n    setCurrentSlideIndex(index);\n    startScrolling();\n    animateHorizontalScroll(scrollContainer, scrollContainer.clientWidth * index, 0)\n      .then(stopScrolling);\n  }, [currentSlideIndex, filteredSections, initialSection, prevInitialSection]);\n\n  const handleSelectSlide = useLastCallback(async (index: number) => {\n    const scrollContainer = scrollContainerRef.current;\n    if (!scrollContainer) return;\n\n    setCurrentSlideIndex(index);\n\n    startScrolling();\n    await animateHorizontalScroll(scrollContainer, scrollContainer.clientWidth * index, 800);\n    stopScrolling();\n  });\n\n  const currentSection = filteredSections[currentSlideIndex];\n  const hasHeaderBackdrop = currentSection !== 'double_limits' && currentSection !== 'stories';\n\n  return (\n    <div className={styles.root}>\n      <Button\n        round\n        size=\"smaller\"\n        className={buildClassName(styles.backButton, hasHeaderBackdrop && styles.whiteBackButton)}\n        color={hasHeaderBackdrop ? 'translucent-white' : 'translucent'}\n        onClick={onBack}\n        ariaLabel={oldLang('Back')}\n      >\n        <Icon name=\"arrow-left\" />\n      </Button>\n\n      <div className={styles.preview} />\n\n      <div className={buildClassName(styles.content, 'no-scrollbar')} onScroll={handleScroll} ref={scrollContainerRef}>\n\n        {filteredSections.map((section, index) => {\n          if (section === 'double_limits') {\n            return (\n              <div className={buildClassName(styles.slide, styles.limits)}>\n                <h2 className={buildClassName(styles.header, isScrolledToTop && styles.noHeaderBorder)}>\n                  {oldLang(PREMIUM_FEATURE_TITLES.double_limits)}\n                </h2>\n                <div className={buildClassName(styles.limitsContent, 'custom-scroll')} onScroll={handleLimitsScroll}>\n                  {PREMIUM_LIMITS_ORDER.map((limit, i) => {\n                    const defaultLimit = limits?.[limit][0].toString();\n                    const premiumLimit = limits?.[limit][1].toString();\n                    return (\n                      <PremiumLimitPreview\n                        title={oldLang(LIMITS_TITLES[limit])}\n                        description={oldLang(LIMITS_DESCRIPTIONS[limit], premiumLimit)}\n                        leftValue={defaultLimit}\n                        rightValue={premiumLimit}\n                        colorStepProgress={i / (PREMIUM_LIMITS_ORDER.length - 1)}\n                      />\n                    );\n                  })}\n                </div>\n              </div>\n            );\n          }\n\n          if (section === 'premium_stickers') {\n            return (\n              <div className={styles.slide}>\n                <div className={styles.frame}>\n                  <PremiumFeaturePreviewStickers isActive={currentSlideIndex === index} />\n                </div>\n                <h1 className={styles.title}>\n                  {oldLang(PREMIUM_FEATURE_TITLES.premium_stickers)}\n                </h1>\n                <div className={styles.description}>\n                  {renderText(oldLang(PREMIUM_FEATURE_DESCRIPTIONS.premium_stickers), ['br'])}\n                </div>\n              </div>\n            );\n          }\n\n          if (section === 'stories') {\n            return (\n              <div className={buildClassName(styles.slide, styles.stories)}>\n                <PremiumFeaturePreviewStories />\n              </div>\n            );\n          }\n\n          const i = promo.videoSections.indexOf(section);\n          if (i === -1) return undefined;\n          return (\n            <div className={styles.slide}>\n              <div className={styles.frame}>\n                <PremiumFeaturePreviewVideo\n                  isActive={currentSlideIndex === index}\n                  videoId={promo.videos[i].id!}\n                  videoThumbnail={promo.videos[i].thumbnail!}\n                  isDown={PREMIUM_BOTTOM_VIDEOS.includes(section)}\n                  index={index}\n                  isReverseAnimation={index === reverseAnimationSlideIndex}\n                />\n              </div>\n              <h1 className={styles.title}>\n                {oldLang(PREMIUM_FEATURE_TITLES[promo.videoSections[i]!])}\n              </h1>\n              <div className={styles.description}>\n                {renderText(oldLang(PREMIUM_FEATURE_DESCRIPTIONS[promo.videoSections[i]!]), ['br'])}\n              </div>\n            </div>\n          );\n        })}\n\n      </div>\n\n      <div\n        className={buildClassName(\n          styles.footer,\n          (isScrolledToBottom || currentSlideIndex !== 0) && styles.noFooterBorder,\n        )}\n      >\n        <SliderDots\n          length={PREMIUM_FEATURE_SECTIONS.length}\n          active={currentSlideIndex}\n          onSelectSlide={handleSelectSlide}\n        />\n        {subscriptionButtonText && (\n          <Button\n            className={buildClassName(styles.button)}\n            isShiny={!isPremium}\n            withPremiumGradient={!isPremium}\n            onClick={isPremium ? onBack : handleClick}\n          >\n            {subscriptionButtonText}\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumFeatureModal);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiPremiumGiftCodeOption, ApiPremiumSubscriptionOption } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrencyAsString } from '../../../util/formatCurrency';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport styles from './PremiumSubscriptionOption.module.scss';\n\ntype OwnProps = {\n  option: ApiPremiumSubscriptionOption | ApiPremiumGiftCodeOption;\n  isGiveaway?: boolean;\n  checked?: boolean;\n  fullMonthlyAmount?: number;\n  className?: string;\n  onChange: (month: number) => void;\n};\n\nconst PremiumSubscriptionOption: FC<OwnProps> = ({\n  option, checked, fullMonthlyAmount,\n  onChange, className, isGiveaway,\n}) => {\n  const oldLang = useOldLang();\n\n  const {\n    months, amount, currency,\n  } = option;\n  const users = 'users' in option ? option.users : undefined;\n  const perMonth = Math.floor(amount / months);\n  const isUserCountPlural = users ? users > 1 : undefined;\n\n  const discount = useMemo(() => {\n    return fullMonthlyAmount && fullMonthlyAmount > perMonth\n      ? Math.ceil(100 - perMonth / (fullMonthlyAmount / 100))\n      : undefined;\n  }, [fullMonthlyAmount, perMonth]);\n\n  const handleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.checked) {\n      onChange(months);\n    }\n  }, [months, onChange]);\n\n  return (\n    <label\n      className={buildClassName(\n        isGiveaway ? styles.giveawayWrapper : styles.wrapper,\n        (checked && !isGiveaway) && styles.active,\n        className,\n      )}\n      dir={oldLang.isRtl ? 'rtl' : undefined}\n    >\n      <input\n        className={styles.input}\n        type=\"radio\"\n        name=\"subscription_option\"\n        value={months}\n        checked={checked}\n        onChange={handleChange}\n      />\n      <div className={styles.content}>\n        <div className={styles.month}>\n          {Boolean(discount) && (\n            <span\n              className={buildClassName(styles.giveawayDiscount, styles.discount)}\n              title={oldLang('GiftDiscount')}\n            > &minus;{discount}%\n            </span>\n          )}\n          {oldLang('Months', months)}\n        </div>\n        <div className={styles.perMonth}>\n          {(isGiveaway || isUserCountPlural) ? `${formatCurrencyAsString(amount, currency, oldLang.code)} x ${users!}`\n            : oldLang('PricePerMonth', formatCurrencyAsString(perMonth, currency, oldLang.code))}\n        </div>\n        <div className={styles.amount}>\n          {formatCurrencyAsString(amount, currency, oldLang.code)}\n        </div>\n      </div>\n    </label>\n  );\n};\n\nexport default memo(PremiumSubscriptionOption);\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"qZA6S2kc\",\"giveawayWrapper\":\"PkseWxFK\",\"active\":\"EJOQwnRj\",\"input\":\"WOEkhx6R\",\"content\":\"BHUCScsU\",\"month\":\"DfYCMUkL\",\"perMonth\":\"poxOXJ2o\",\"amount\":\"IGMrERf_\",\"discount\":\"uqDlP3Zt\",\"giveawayDiscount\":\"ublijP0j\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sfbpMFHM\",\"transition\":\"ELNkgPve\",\"button\":\"c1tMxuFH\",\"main\":\"ZpOIPrhp\",\"logo\":\"mlMezt6b\",\"status-emoji\":\"mQwvY9LA\",\"statusEmoji\":\"mQwvY9LA\",\"header-text\":\"y71v6ECL\",\"headerText\":\"y71v6ECL\",\"description\":\"cUcKXV3j\",\"list\":\"c3Ee2oSo\",\"no-button\":\"yWEHoJOL\",\"noButton\":\"yWEHoJOL\",\"header\":\"Bc_F0RKb\",\"hidden-header\":\"ltXo0Xi7\",\"hiddenHeader\":\"ltXo0Xi7\",\"close-button\":\"XyN3eWog\",\"closeButton\":\"XyN3eWog\",\"premium-header-text\":\"xysPdANX\",\"premiumHeaderText\":\"xysPdANX\",\"footer-text\":\"yKm9hKQP\",\"footerText\":\"yKm9hKQP\",\"primary-footer-text\":\"l1WlNpmu\",\"primaryFooterText\":\"l1WlNpmu\",\"footer\":\"nCnlO9UZ\",\"stickerSetText\":\"xw_GbDj7\",\"stickerSetLink\":\"FLzl2ng5\",\"stickerSetLinkIcon\":\"Y0jTcadE\",\"subscriptionOptions\":\"xZC_Oajr\",\"subscriptionOption\":\"gygsbDbE\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiPremiumPromo, ApiPremiumSection, ApiPremiumSubscriptionOption, ApiSticker, ApiStickerSet, ApiUser,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\n\nimport { PREMIUM_FEATURE_SECTIONS, TME_LINK_PREFIX } from '../../../config';\nimport { getUserFullName } from '../../../global/helpers';\nimport {\n  selectIsCurrentUserPremium, selectStickerSet,\n  selectTabState, selectUser,\n} from '../../../global/selectors';\nimport { selectPremiumLimit } from '../../../global/selectors/limits';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport CustomEmoji from '../../common/CustomEmoji';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport Transition from '../../ui/Transition';\nimport PremiumFeatureItem from './PremiumFeatureItem';\nimport PremiumFeatureModal, {\n  PREMIUM_FEATURE_DESCRIPTIONS,\n  PREMIUM_FEATURE_TITLES,\n} from './PremiumFeatureModal';\nimport PremiumSubscriptionOption from './PremiumSubscriptionOption';\n\nimport styles from './PremiumMainModal.module.scss';\n\nimport PremiumAds from '../../../assets/premium/PremiumAds.svg';\nimport PremiumBadge from '../../../assets/premium/PremiumBadge.svg';\nimport PremiumChats from '../../../assets/premium/PremiumChats.svg';\nimport PremiumEffects from '../../../assets/premium/PremiumEffects.svg';\nimport PremiumEmoji from '../../../assets/premium/PremiumEmoji.svg';\nimport PremiumFile from '../../../assets/premium/PremiumFile.svg';\nimport PremiumLastSeen from '../../../assets/premium/PremiumLastSeen.svg';\nimport PremiumLimits from '../../../assets/premium/PremiumLimits.svg';\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\nimport PremiumMessagePrivacy from '../../../assets/premium/PremiumMessagePrivacy.svg';\nimport PremiumReactions from '../../../assets/premium/PremiumReactions.svg';\nimport PremiumSpeed from '../../../assets/premium/PremiumSpeed.svg';\nimport PremiumStatus from '../../../assets/premium/PremiumStatus.svg';\nimport PremiumStickers from '../../../assets/premium/PremiumStickers.svg';\nimport PremiumTags from '../../../assets/premium/PremiumTags.svg';\nimport PremiumTranslate from '../../../assets/premium/PremiumTranslate.svg';\nimport PremiumVideo from '../../../assets/premium/PremiumVideo.svg';\nimport PremiumVoice from '../../../assets/premium/PremiumVoice.svg';\n\nconst LIMIT_ACCOUNTS = 4;\nconst STATUS_EMOJI_SIZE = 8 * REM;\n\nconst PREMIUM_FEATURE_COLOR_ICONS: Record<ApiPremiumSection, string> = {\n  stories: PremiumStatus,\n  double_limits: PremiumLimits,\n  infinite_reactions: PremiumReactions,\n  premium_stickers: PremiumStickers,\n  animated_emoji: PremiumEmoji,\n  no_ads: PremiumAds,\n  voice_to_text: PremiumVoice,\n  profile_badge: PremiumBadge,\n  faster_download: PremiumSpeed,\n  more_upload: PremiumFile,\n  advanced_chat_management: PremiumChats,\n  animated_userpics: PremiumVideo,\n  emoji_status: PremiumStatus,\n  translations: PremiumTranslate,\n  saved_tags: PremiumTags,\n  last_seen: PremiumLastSeen,\n  message_privacy: PremiumMessagePrivacy,\n  effects: PremiumEffects,\n};\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  promo?: ApiPremiumPromo;\n  fromUser?: ApiUser;\n  fromUserStatusEmoji?: ApiSticker;\n  fromUserStatusSet?: ApiStickerSet;\n  toUser?: ApiUser;\n  initialSection?: ApiPremiumSection;\n  isPremium?: boolean;\n  isSuccess?: boolean;\n  isGift?: boolean;\n  monthsAmount?: number;\n  limitChannels: number;\n  limitPins: number;\n  limitLinks: number;\n  limitFolders: number;\n  limits?: NonNullable<GlobalState['appConfig']>['limits'];\n  premiumSlug?: string;\n  premiumBotUsername?: string;\n  premiumPromoOrder?: ApiPremiumSection[];\n};\n\nconst PremiumMainModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  fromUser,\n  fromUserStatusEmoji,\n  fromUserStatusSet,\n  promo,\n  initialSection,\n  isPremium,\n  limitChannels,\n  limitLinks,\n  limitFolders,\n  limitPins,\n  limits,\n  premiumSlug,\n  premiumBotUsername,\n  isSuccess,\n  isGift,\n  toUser,\n  monthsAmount,\n  premiumPromoOrder,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const dialogRef = useRef<HTMLDivElement>(null);\n  const {\n    closePremiumModal, openInvoice, requestConfetti, openTelegramLink, loadStickers, openStickerSet,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const [isHeaderHidden, setHeaderHidden] = useState(true);\n  const [currentSection, setCurrentSection] = useState<ApiPremiumSection | undefined>(initialSection);\n  const [selectedSubscriptionOption, setSubscriptionOption] = useState<ApiPremiumSubscriptionOption>();\n\n  useEffect(() => {\n    if (!isOpen) {\n      setHeaderHidden(true);\n      setCurrentSection(undefined);\n    }\n  }, [isOpen]);\n\n  const handleOpenSection = useLastCallback((section: ApiPremiumSection) => {\n    setCurrentSection(section);\n  });\n\n  const handleResetSection = useLastCallback(() => {\n    setCurrentSection(undefined);\n  });\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop } = e.currentTarget;\n\n    setHeaderHidden(scrollTop <= 150);\n  }\n\n  const handleClickWithStartParam = useLastCallback((startParam?: string) => {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n\n    if (premiumSlug) {\n      openInvoice({\n        type: 'slug',\n        slug: premiumSlug,\n      });\n    } else if (premiumBotUsername) {\n      openTelegramLink({\n        url: `${TME_LINK_PREFIX}${premiumBotUsername}?start=${startParam || 'promo'}`,\n      });\n      closePremiumModal();\n    }\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (selectedSubscriptionOption) {\n      handleClickWithStartParam(String(selectedSubscriptionOption.months));\n    } else {\n      handleClickWithStartParam();\n    }\n  });\n\n  const handleChangeSubscriptionOption = useLastCallback((months: number) => {\n    const foundOption = promo?.options.find((option) => option.months === months);\n    setSubscriptionOption(foundOption);\n  });\n\n  const showConfetti = useLastCallback(() => {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n    if (isOpen) {\n      const {\n        top, left, width, height,\n      } = dialog.querySelector('.modal-content')!.getBoundingClientRect();\n      requestConfetti({\n        top,\n        left,\n        width,\n        height,\n        withStars: true,\n      });\n    }\n  });\n\n  useEffect(() => {\n    if (isSuccess) {\n      showConfetti();\n    }\n  }, [isSuccess, showConfetti]);\n\n  useSyncEffect(([prevIsPremium]) => {\n    if (prevIsPremium === isPremium) return;\n\n    showConfetti();\n  }, [isPremium, showConfetti]);\n\n  const filteredSections = useMemo(() => {\n    if (!premiumPromoOrder) return PREMIUM_FEATURE_SECTIONS;\n    return premiumPromoOrder.filter((section) => PREMIUM_FEATURE_SECTIONS.includes(section));\n  }, [premiumPromoOrder]);\n\n  useEffect(() => {\n    if (!fromUserStatusEmoji || fromUserStatusSet) return;\n    loadStickers({\n      stickerSetInfo: fromUserStatusEmoji.stickerSetInfo,\n    });\n  }, [loadStickers, fromUserStatusEmoji, fromUserStatusSet]);\n\n  useEffect(() => {\n    const [defaultOption] = promo?.options ?? [];\n    setSubscriptionOption(defaultOption);\n  }, [promo]);\n\n  const handleOpenStatusSet = useLastCallback(() => {\n    if (!fromUserStatusSet) return;\n\n    openStickerSet({\n      stickerSetInfo: fromUserStatusSet,\n    });\n  });\n\n  const fullMonthlyAmount = useMemo(() => {\n    const monthOption = promo?.options.find((option) => option.months === 1);\n    if (!monthOption) {\n      return undefined;\n    }\n    return Number(monthOption.amount);\n  }, [promo]);\n\n  const subscribeButtonText = useMemo(() => {\n    if (!selectedSubscriptionOption) {\n      return undefined;\n    }\n    const { amount, months, currency } = selectedSubscriptionOption;\n    const perMonthPrice = Math.floor(amount / months);\n    return formatCurrency(\n      lang,\n      perMonthPrice,\n      currency,\n    );\n  }, [selectedSubscriptionOption, lang]);\n\n  if (!promo || (fromUserStatusEmoji && !fromUserStatusSet)) return undefined;\n\n  function getHeaderText() {\n    if (isGift) {\n      return renderText(\n        fromUser?.id === currentUserId\n          ? oldLang('TelegramPremiumUserGiftedPremiumOutboundDialogTitle', [getUserFullName(toUser), monthsAmount])\n          : oldLang('TelegramPremiumUserGiftedPremiumDialogTitle', [getUserFullName(fromUser), monthsAmount]),\n        ['simple_markdown', 'emoji'],\n      );\n    }\n\n    if (fromUserStatusSet && fromUser) {\n      const template = oldLang('lng_premium_emoji_status_title').replace('{user}', getUserFullName(fromUser)!);\n      const [first, second] = template.split('{link}');\n\n      const emoji = fromUserStatusSet.thumbCustomEmojiId ? (\n        <CustomEmoji className={styles.stickerSetLinkIcon} documentId={fromUserStatusSet.thumbCustomEmojiId} />\n      ) : undefined;\n      const link = (\n        <span className={styles.stickerSetLink} onClick={handleOpenStatusSet}>\n          {emoji}{renderText(fromUserStatusSet.title)}\n        </span>\n      );\n      return [renderText(first), link, renderText(second)];\n    }\n\n    return renderText(\n      fromUser\n        ? oldLang('TelegramPremiumUserDialogTitle', getUserFullName(fromUser))\n        : oldLang(isPremium ? 'TelegramPremiumSubscribedTitle' : 'TelegramPremium'),\n      ['simple_markdown', 'emoji'],\n    );\n  }\n\n  function getHeaderDescription() {\n    if (isGift) {\n      return fromUser?.id === currentUserId\n        ? oldLang('TelegramPremiumUserGiftedPremiumOutboundDialogSubtitle', getUserFullName(toUser))\n        : oldLang('TelegramPremiumUserGiftedPremiumDialogSubtitle');\n    }\n\n    if (fromUserStatusSet) {\n      return oldLang('TelegramPremiumUserStatusDialogSubtitle');\n    }\n\n    return fromUser\n      ? oldLang('TelegramPremiumUserDialogSubtitle')\n      : oldLang(isPremium ? 'TelegramPremiumSubscribedSubtitle' : 'TelegramPremiumSubtitle');\n  }\n\n  function renderFooterText() {\n    if (!promo || (isGift && fromUser?.id === currentUserId)) {\n      return undefined;\n    }\n\n    return (\n      <div className={styles.footerText} dir={oldLang.isRtl ? 'rtl' : undefined}>\n        {renderTextWithEntities({\n          text: promo.statusText,\n          entities: promo.statusEntities,\n        })}\n      </div>\n    );\n  }\n\n  function renderSubscriptionOptions() {\n    return (\n      <div className={styles.subscriptionOptions}>\n        {promo?.options\n          .map((option) => (\n            <PremiumSubscriptionOption\n              className={styles.subscriptionOption}\n              key={option.amount}\n              option={option}\n              onChange={handleChangeSubscriptionOption}\n              fullMonthlyAmount={fullMonthlyAmount}\n              checked={selectedSubscriptionOption?.months === option.months}\n            />\n          ))}\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className={styles.root}\n      onClose={closePremiumModal}\n      isOpen={isOpen}\n      dialogRef={dialogRef}\n    >\n      <Transition name=\"slide\" activeKey={currentSection ? 1 : 0} className={styles.transition}>\n        {!currentSection ? (\n          <div className={buildClassName(styles.main, 'custom-scroll')} onScroll={handleScroll}>\n            <Button\n              round\n              size=\"smaller\"\n              className={styles.closeButton}\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => closePremiumModal()}\n              ariaLabel={oldLang('Close')}\n            >\n              <Icon name=\"close\" />\n            </Button>\n            {(fromUserStatusEmoji && !isGift) ? (\n              <CustomEmoji\n                className={styles.statusEmoji}\n                onClick={handleOpenStatusSet}\n                documentId={fromUserStatusEmoji.id}\n                isBig\n                size={STATUS_EMOJI_SIZE}\n              />\n            ) : (\n              <img className={styles.logo} src={PremiumLogo} alt=\"\" draggable={false} />\n            )}\n            <h2 className={buildClassName(styles.headerText, fromUserStatusSet && styles.stickerSetText)}>\n              {getHeaderText()}\n            </h2>\n            <div className={styles.description}>\n              {renderText(getHeaderDescription(), ['simple_markdown', 'emoji'])}\n            </div>\n            {!isPremium && !isGift && renderSubscriptionOptions()}\n            <div className={buildClassName(styles.header, isHeaderHidden && styles.hiddenHeader)}>\n              <h2 className={styles.premiumHeaderText}>\n                {oldLang('TelegramPremium')}\n              </h2>\n            </div>\n            <div className={buildClassName(styles.list, isPremium && styles.noButton)}>\n              {filteredSections.map((section, index) => {\n                return (\n                  <PremiumFeatureItem\n                    key={section}\n                    title={oldLang(PREMIUM_FEATURE_TITLES[section])}\n                    text={section === 'double_limits'\n                      ? oldLang(PREMIUM_FEATURE_DESCRIPTIONS[section],\n                        [limitChannels, limitFolders, limitPins, limitLinks, LIMIT_ACCOUNTS])\n                      : oldLang(PREMIUM_FEATURE_DESCRIPTIONS[section])}\n                    icon={PREMIUM_FEATURE_COLOR_ICONS[section]}\n                    index={index}\n                    count={filteredSections.length}\n                    section={section}\n                    onClick={handleOpenSection}\n                  />\n                );\n              })}\n              <div\n                className={buildClassName(styles.footerText, styles.primaryFooterText)}\n                dir={oldLang.isRtl ? 'rtl' : undefined}\n              >\n                <p>\n                  {renderText(oldLang('AboutPremiumDescription'), ['simple_markdown'])}\n                </p>\n                <p>\n                  {renderText(oldLang('AboutPremiumDescription2'), ['simple_markdown'])}\n                </p>\n              </div>\n              {renderFooterText()}\n            </div>\n            {!isPremium && selectedSubscriptionOption && (\n              <div className={styles.footer}>\n                <Button className={styles.button} isShiny withPremiumGradient onClick={handleClick}>\n                  {oldLang('SubscribeToPremium', subscribeButtonText)}\n                </Button>\n              </div>\n            )}\n          </div>\n        ) : (\n          <PremiumFeatureModal\n            initialSection={currentSection}\n            onBack={handleResetSection}\n            promo={promo}\n            onClickSubscribe={handleClickWithStartParam}\n            isPremium={isPremium}\n            limits={limits}\n            premiumPromoOrder={premiumPromoOrder}\n            subscriptionOption={selectedSubscriptionOption}\n          />\n        )}\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    premiumModal,\n  } = selectTabState(global);\n\n  const fromUser = premiumModal?.fromUserId ? selectUser(global, premiumModal.fromUserId) : undefined;\n  const fromUserStatusEmoji = fromUser?.emojiStatus ? global.customEmojis.byId[fromUser.emojiStatus.documentId]\n    : undefined;\n  const fromUserStatusSet = fromUserStatusEmoji ? selectStickerSet(global, fromUserStatusEmoji.stickerSetInfo)\n    : undefined;\n\n  return {\n    currentUserId: global.currentUserId,\n    promo: premiumModal?.promo,\n    isSuccess: premiumModal?.isSuccess,\n    isGift: premiumModal?.isGift,\n    monthsAmount: premiumModal?.monthsAmount,\n    fromUser,\n    fromUserStatusEmoji,\n    fromUserStatusSet,\n    toUser: premiumModal?.toUserId ? selectUser(global, premiumModal.toUserId) : undefined,\n    initialSection: premiumModal?.initialSection,\n    isPremium: selectIsCurrentUserPremium(global),\n    limitChannels: selectPremiumLimit(global, 'channels'),\n    limitFolders: selectPremiumLimit(global, 'dialogFilters'),\n    limitPins: selectPremiumLimit(global, 'dialogFolderPinned'),\n    limitLinks: selectPremiumLimit(global, 'channelsPublic'),\n    limits: global.appConfig?.limits,\n    premiumSlug: global.appConfig?.premiumInvoiceSlug,\n    premiumBotUsername: global.appConfig?.premiumBotUsername,\n    premiumPromoOrder: global.appConfig?.premiumPromoOrder,\n  };\n})(PremiumMainModal));\n","import type { TeactNode } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo,\n  useRef,\n} from '../../../lib/teact/teact';\n\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport Loading from '../../ui/Loading';\nimport Radio from '../../ui/Radio';\nimport Icon from '../icons/Icon';\nimport PickerItem from './PickerItem';\n\nimport styles from './PickerStyles.module.scss';\n\nexport type ItemPickerOption = {\n  label: TeactNode;\n  subLabel?: string;\n  disabled?: boolean;\n  isLoading?: boolean;\n  value: string;\n};\n\ntype SingleModeProps = {\n  allowMultiple?: false;\n  itemInputType?: 'radio';\n  selectedValue?: string;\n  selectedValues?: never; // Help TS to throw an error if this is passed\n  onSelectedValueChange?: (value: string) => void;\n};\n\ntype MultipleModeProps = {\n  allowMultiple: true;\n  itemInputType: 'checkbox';\n  selectedValue?: never;\n  selectedValues: string[];\n  lockedSelectedValues?: string[];\n  lockedUnselectedValues?: string[];\n  onSelectedValuesChange?: (values: string[]) => void;\n};\n\ntype OwnProps = {\n  className?: string;\n  isSearchable?: boolean;\n  searchInputId?: string;\n  items: ItemPickerOption[];\n  itemClassName?: string;\n  filterValue?: string;\n  filterPlaceholder?: string;\n  notFoundText?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  isViewOnly?: boolean;\n  withDefaultPadding?: boolean;\n  forceRenderAllItems?: boolean;\n  onFilterChange?: (value: string) => void;\n  onDisabledClick?: (value: string, isSelected: boolean) => void;\n  onLoadMore?: () => void;\n} & (SingleModeProps | MultipleModeProps);\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst ITEM_CLASS_NAME = 'ItemPickerItem';\n\nconst ItemPicker = ({\n  className,\n  isSearchable,\n  searchInputId,\n  items,\n  filterValue,\n  notFoundText,\n  isLoading,\n  noScrollRestore,\n  filterPlaceholder,\n  isViewOnly,\n  itemInputType,\n  itemClassName,\n  withDefaultPadding,\n  forceRenderAllItems,\n  onFilterChange,\n  onDisabledClick,\n  onLoadMore,\n  ...optionalProps\n}: OwnProps) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const allowMultiple = optionalProps.allowMultiple;\n  const lockedSelectedValues = allowMultiple ? optionalProps.lockedSelectedValues : undefined;\n  const lockedUnselectedValues = allowMultiple ? optionalProps.lockedUnselectedValues : undefined;\n\n  useEffect(() => {\n    if (!isSearchable) return undefined;\n    const timeoutId = window.setTimeout(() => {\n      requestMeasure(() => {\n        inputRef.current?.focus();\n      });\n    }, FOCUS_DELAY_MS);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [isSearchable]);\n\n  const selectedValues = useMemo(() => {\n    if (allowMultiple) {\n      return optionalProps.selectedValues;\n    }\n\n    return optionalProps.selectedValue ? [optionalProps.selectedValue] : MEMO_EMPTY_ARRAY;\n  }, [allowMultiple, optionalProps.selectedValue, optionalProps.selectedValues]);\n\n  const lockedSelectedValuesSet = useMemo(() => new Set(lockedSelectedValues), [lockedSelectedValues]);\n  const lockedUnselectedValuesSet = useMemo(() => new Set(lockedUnselectedValues), [lockedUnselectedValues]);\n\n  const sortedItemValuesList = useMemo(() => {\n    if (filterValue) {\n      return items.map((item) => item.value);\n    }\n\n    const lockedSelectedBucket: ItemPickerOption[] = [];\n    const unlockedBucket: ItemPickerOption[] = [];\n    const lockedUnselectableBucket: ItemPickerOption[] = [];\n\n    items.forEach((item) => {\n      if (lockedSelectedValuesSet.has(item.value)) {\n        lockedSelectedBucket.push(item);\n      } else if (lockedUnselectedValuesSet.has(item.value)) {\n        lockedUnselectableBucket.push(item);\n      } else {\n        unlockedBucket.push(item);\n      }\n    });\n\n    return lockedSelectedBucket.concat(unlockedBucket, lockedUnselectableBucket).map((item) => item.value);\n  }, [filterValue, items, lockedSelectedValuesSet, lockedUnselectedValuesSet]);\n\n  const handleItemClick = useLastCallback((value: string) => {\n    if (allowMultiple) {\n      const newSelectedValues = selectedValues.slice();\n      const index = newSelectedValues.indexOf(value);\n      if (index >= 0) {\n        newSelectedValues.splice(index, 1);\n      } else {\n        newSelectedValues.push(value);\n      }\n\n      optionalProps.onSelectedValuesChange?.(newSelectedValues);\n      return;\n    }\n\n    optionalProps.onSelectedValueChange?.(value);\n  });\n\n  const [viewportValuesList, getMore] = useInfiniteScroll(\n    onLoadMore, sortedItemValuesList, Boolean(forceRenderAllItems || filterValue),\n  );\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange?.(value);\n  });\n\n  const renderItem = useCallback((value: string) => {\n    const item = items.find((itemOption) => itemOption.value === value);\n    if (!item) return undefined;\n\n    const { label, subLabel, isLoading: isItemLoading } = item;\n    const isAlwaysUnselected = lockedUnselectedValuesSet.has(value);\n    const isAlwaysSelected = lockedSelectedValuesSet.has(value);\n    const isLocked = isAlwaysUnselected || isAlwaysSelected;\n    const isChecked = selectedValues.includes(value);\n\n    function getInputElement() {\n      if (isLocked) return <Icon name=\"lock-badge\" />;\n      if (itemInputType === 'radio') {\n        return <Radio checked={isChecked} disabled={isLocked} isLoading={isItemLoading} onlyInput />;\n      }\n      if (itemInputType === 'checkbox') {\n        return <Checkbox checked={isChecked} disabled={isLocked} isLoading={isItemLoading} onlyInput />;\n      }\n      return undefined;\n    }\n\n    return (\n      <PickerItem\n        key={value}\n        className={buildClassName(ITEM_CLASS_NAME, itemClassName)}\n        title={label}\n        subtitle={subLabel}\n        disabled={isLocked}\n        inactive={isViewOnly}\n        ripple\n        inputElement={getInputElement()}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleItemClick(value)}\n        // eslint-disable-next-line react/jsx-no-bind\n        onDisabledClick={onDisabledClick && (() => onDisabledClick(value, isAlwaysSelected))}\n      />\n    );\n  }, [\n    items, lockedUnselectedValuesSet, lockedSelectedValuesSet, selectedValues, isViewOnly, onDisabledClick,\n    itemInputType, itemClassName,\n  ]);\n\n  return (\n    <div className={buildClassName(styles.container, className)}>\n      {isSearchable && (\n        <div className={buildClassName(styles.header, 'custom-scroll')} dir={lang.isRtl ? 'rtl' : undefined}>\n          <InputText\n            id={searchInputId}\n            ref={inputRef}\n            value={filterValue}\n            onChange={handleFilterChange}\n            placeholder={filterPlaceholder || lang('Search')}\n          />\n        </div>\n      )}\n\n      {viewportValuesList?.length ? (\n        <InfiniteScroll\n          className={buildClassName(styles.pickerList, withDefaultPadding && styles.padded, 'custom-scroll')}\n          items={viewportValuesList}\n          itemSelector={`.${ITEM_CLASS_NAME}`}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportValuesList.map((value) => renderItem(value))}\n        </InfiniteScroll>\n      ) : !isLoading && viewportValuesList && !viewportValuesList.length ? (\n        <p className={styles.noResults}>{notFoundText || lang('SearchEmptyViewTitle')}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ItemPicker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wzzA3MFh\",\"pickerSelector\":\"xhujrq9i\",\"pickerTitle\":\"YuRK4e7S\",\"picker\":\"YF9nLkCK\",\"footer\":\"ATCZ2Q5G\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiCountry } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Icon from './icons/Icon';\nimport ItemPicker from './pickers/ItemPicker';\n\nimport styles from './CountryPickerModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  onSubmit: (value: string[]) => void;\n  countryList: ApiCountry[];\n  selectionLimit?: number | undefined;\n};\n\nconst CountryPickerModal: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  onSubmit,\n  countryList,\n  selectionLimit,\n}) => {\n  const { showNotification } = getActions();\n\n  const lang = useOldLang();\n\n  const [selectedCountryIds, setSelectedCountryIds] = useState<string[]>([]);\n  const prevSelectedCountryIds = usePreviousDeprecated(selectedCountryIds);\n  const noPickerScrollRestore = prevSelectedCountryIds === selectedCountryIds;\n\n  const displayedIds = useMemo(() => {\n    if (!countryList) {\n      return [];\n    }\n\n    return countryList.filter((country) => !country.isHidden && country.iso2 !== 'FT')\n      .map(({\n        iso2, defaultName,\n      }) => ({\n        value: iso2,\n        label: defaultName,\n      }));\n  }, [countryList]);\n\n  const handleSelectedIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    if (selectionLimit && newSelectedIds.length > selectionLimit) {\n      showNotification({\n        message: lang('BoostingSelectUpToWarningCountries', selectionLimit),\n      });\n      return;\n    }\n    setSelectedCountryIds(newSelectedIds);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    onSubmit(selectedCountryIds);\n    onClose();\n  });\n\n  return (\n    <Modal\n      className={styles.root}\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={handleSubmit}\n    >\n      <div className={styles.container}>\n        <div className={styles.pickerSelector}>\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            onClick={onClose}\n          >\n            <Icon name=\"close\" />\n          </Button>\n\n          <h4 className={styles.pickerTitle}>\n            {lang('BoostingSelectCountry')}\n          </h4>\n        </div>\n      </div>\n\n      <div className={buildClassName(styles.main, 'custom-scroll')}>\n        <ItemPicker\n          className={styles.picker}\n          items={displayedIds}\n          selectedValues={selectedCountryIds}\n          onSelectedValuesChange={handleSelectedIdsChange}\n          noScrollRestore={noPickerScrollRestore}\n          allowMultiple\n          itemInputType=\"checkbox\"\n        />\n      </div>\n\n      <div className={styles.footer}>\n        <Button\n          size=\"smaller\"\n          onClick={handleSubmit}\n        >\n          {lang('SelectCountries.OK')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(CountryPickerModal);\n","import React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport {\n  isChatChannel, isChatPublic, isChatSuperGroup,\n} from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport PickerModal from '../../common/pickers/PickerModal';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  giveawayChatId?: string;\n  selectionLimit: number;\n  initialSelectedIds: string[];\n  onSelectedIdsConfirmed: (newSelectedIds: string[]) => void;\n  onClose: NoneToVoidFunction;\n};\n\nconst GiveawayChannelPickerModal = ({\n  isOpen,\n  giveawayChatId,\n  selectionLimit,\n  initialSelectedIds,\n  onSelectedIdsConfirmed,\n  onClose,\n}: OwnProps) => {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n\n  const [pendingChannelId, setPendingChannelId] = useState<string | undefined>(undefined);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isConfirmModalOpen, openConfirmModal, closeConfirmModal] = useFlag();\n  const [selectedIds, setSelectedIds] = useState<string[]>(initialSelectedIds);\n\n  useEffect(() => {\n    setSelectedIds(initialSelectedIds);\n  }, [initialSelectedIds]);\n\n  const channelIds = useMemo(() => {\n    const global = getGlobal();\n    const chatsById = global.chats.byId;\n    const { active, archived } = global.chats.listIds;\n    const ids = (active || []).concat(archived || []);\n\n    return unique(ids).map((id) => chatsById[id])\n      .filter((chat) => (\n        chat && (\n          isChatChannel(chat) || isChatSuperGroup(chat)\n        ) && chat.id !== giveawayChatId\n      )).map((chat) => chat.id);\n  }, [giveawayChatId]);\n\n  const displayedChannelIds = useMemo(() => {\n    const foundChannelIds = channelIds ? filterPeersByQuery({ ids: channelIds, query: searchQuery, type: 'chat' }) : [];\n\n    return sortChatIds(foundChannelIds,\n      false,\n      selectedIds);\n  }, [channelIds, searchQuery, selectedIds]);\n\n  const handleSelectedChannelIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    const chatsById = getGlobal().chats.byId;\n    const newlyAddedIds = newSelectedIds.filter((id) => !selectedIds.includes(id));\n    const privateLinkChannelId = newlyAddedIds.find((id) => {\n      const chat = chatsById[id];\n      return chat && !isChatPublic(chat);\n    });\n\n    if (selectedIds?.length >= selectionLimit) {\n      showNotification({\n        message: lang('BoostingSelectUpToWarningChannelsPlural', selectionLimit),\n      });\n      return;\n    }\n\n    if (privateLinkChannelId) {\n      setPendingChannelId(privateLinkChannelId);\n      openConfirmModal();\n    } else {\n      setSelectedIds(newSelectedIds);\n    }\n  });\n\n  const confirmPrivateLinkChannelSelection = useLastCallback(() => {\n    if (pendingChannelId) {\n      setSelectedIds(unique([...selectedIds, pendingChannelId]));\n    }\n    closeConfirmModal();\n  });\n\n  const handleModalConfirm = useLastCallback(() => {\n    onSelectedIdsConfirmed(selectedIds);\n    onClose();\n  });\n\n  return (\n    <PickerModal\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('RequestPeer.ChooseChannelTitle')}\n      hasCloseButton\n      shouldAdaptToSearch\n      withFixedHeight\n      confirmButtonText={lang('Save')}\n      onConfirm={handleModalConfirm}\n      onEnter={handleModalConfirm}\n    >\n      <PeerPicker\n        itemIds={displayedChannelIds}\n        selectedIds={selectedIds}\n        filterValue={searchQuery}\n        filterPlaceholder={lang('Search')}\n        onSelectedIdsChange={handleSelectedChannelIdsChange}\n        onFilterChange={setSearchQuery}\n        isSearchable\n        withDefaultPadding\n        withStatus\n        allowMultiple\n        itemInputType=\"checkbox\"\n      />\n      <ConfirmDialog\n        title={lang('BoostingGiveawayPrivateChannel')}\n        text={lang('BoostingGiveawayPrivateChannelWarning')}\n        confirmLabel={lang('Add')}\n        isOpen={isConfirmModalOpen}\n        onClose={closeConfirmModal}\n        confirmHandler={confirmPrivateLinkChannelSelection}\n      />\n    </PickerModal>\n  );\n};\n\nexport default memo(GiveawayChannelPickerModal);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './GiveawayTypeOption.module.scss';\n\ntype ApiGiveawayType = 'premium_giveaway' | 'stars_giveaway';\n\ntype OwnProps = {\n  option: ApiGiveawayType;\n  name: string;\n  text: string;\n  img: string;\n  checked?: boolean;\n  isLink: boolean;\n  className?: string;\n  onChange: (value: ApiGiveawayType) => void;\n  onClickAction?: () => void;\n  userNames?: string;\n  selectedMemberIds?: string[];\n};\n\nconst GiveawayTypeOption: FC<OwnProps> = ({\n  option, checked,\n  name, text, img,\n  isLink, onChange, onClickAction, className,\n  userNames, selectedMemberIds,\n}) => {\n  const lang = useOldLang();\n\n  let displayText: string | undefined = lang(text);\n  if (isLink && selectedMemberIds?.length) {\n    displayText = selectedMemberIds.length > 2 ? `${selectedMemberIds.length}` : userNames;\n  }\n\n  const handleChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.checked) {\n      onChange(option);\n    }\n  });\n\n  const handleClick = useLastCallback(() => {\n    onClickAction?.();\n  });\n\n  return (\n    <label\n      className={buildClassName(styles.wrapper, className)}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      role=\"button\"\n      tabIndex={0}\n    >\n      <input\n        className={styles.input}\n        type=\"radio\"\n        name=\"giveaway_option\"\n        value={option}\n        checked={checked}\n        onChange={handleChange}\n        onClick={(e) => e.stopPropagation()}\n      />\n      <div className={styles.content}>\n        <img className={styles.optionImg} src={img} alt=\"\" draggable={false} />\n        <div className={styles.giveaway}>\n          <h3 className={styles.title}>\n            {lang(`${name}`)}\n          </h3>\n          {isLink ? (\n            <div className={styles.link} onClick={handleClick}>\n              <span>{displayText}</span>\n              <Icon name=\"next\" />\n            </div>\n          ) : (\n            <span className={styles.contentText}>{displayText}</span>\n          )}\n        </div>\n      </div>\n    </label>\n  );\n};\n\nexport default memo(GiveawayTypeOption);\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"w3OGYFKn\",\"input\":\"xy4AclZa\",\"content\":\"TTgSI7Xh\",\"notChecked\":\"JDcXsByU\",\"giveaway\":\"sEt7TF59\",\"title\":\"u4NzVBBi\",\"link\":\"y7XfPOoG\",\"optionImg\":\"lGhZJbMF\",\"contentText\":\"kt2ZKZ6j\"};","import React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChatMember } from '../../../api/types';\n\nimport {\n  isUserBot,\n  sortUserIds,\n} from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectChatFullInfo } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport PickerModal from '../../common/pickers/PickerModal';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  // eslint-disable-next-line react/no-unused-prop-types\n  giveawayChatId?: string;\n  selectionLimit: number;\n  initialSelectedIds: string[];\n  onSelectedIdsConfirmed: (newSelectedIds: string[]) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  members?: ApiChatMember[];\n  adminMembersById?: Record<string, ApiChatMember>;\n};\n\nconst GiveawayUserPickerModal = ({\n  isOpen,\n  selectionLimit,\n  members,\n  adminMembersById,\n  initialSelectedIds,\n  onSelectedIdsConfirmed,\n  onClose,\n}: OwnProps & StateProps) => {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [selectedIds, setSelectedIds] = useState<string[]>(initialSelectedIds);\n\n  useEffect(() => {\n    setSelectedIds(initialSelectedIds);\n  }, [initialSelectedIds]);\n\n  const memberIds = useMemo(() => {\n    const global = getGlobal();\n    const { byId, statusesById } = global.users;\n    if (!members?.length) {\n      return [];\n    }\n\n    const adminIdsSet = adminMembersById && new Set(Object.keys(adminMembersById));\n\n    const userIds = sortUserIds(\n      members.map(({ userId }) => userId),\n      byId,\n      statusesById,\n    );\n\n    return adminIdsSet ? userIds.filter((userId) => !adminIdsSet.has(userId)) : userIds;\n  }, [adminMembersById, members]);\n\n  const displayedMemberIds = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    const filteredUserIds = memberIds\n      ? filterPeersByQuery({ ids: memberIds, query: searchQuery, type: 'user' }) : [];\n\n    return sortChatIds(unique(filteredUserIds).filter((userId) => {\n      const user = usersById[userId];\n      if (!user) {\n        return true;\n      }\n\n      return !isUserBot(user);\n    }));\n  }, [memberIds, searchQuery]);\n\n  const handleSelectedMemberIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    if (newSelectedIds.length > selectionLimit) {\n      showNotification({\n        message: lang('BoostingSelectUpToWarningUsers', selectionLimit),\n      });\n      return;\n    }\n    setSelectedIds(newSelectedIds);\n  });\n\n  const handleModalConfirm = useLastCallback(() => {\n    onSelectedIdsConfirmed(selectedIds);\n    onClose();\n  });\n\n  return (\n    <PickerModal\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('BoostingAwardSpecificUsers')}\n      hasCloseButton\n      shouldAdaptToSearch\n      withFixedHeight\n      confirmButtonText={lang('Save')}\n      onConfirm={handleModalConfirm}\n      onEnter={handleModalConfirm}\n    >\n      <PeerPicker\n        itemIds={displayedMemberIds}\n        selectedIds={selectedIds}\n        filterValue={searchQuery}\n        filterPlaceholder={lang('Search')}\n        onSelectedIdsChange={handleSelectedMemberIdsChange}\n        onFilterChange={setSearchQuery}\n        isSearchable\n        withDefaultPadding\n        withStatus\n        allowMultiple\n        itemInputType=\"checkbox\"\n      />\n    </PickerModal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { giveawayChatId }): StateProps => {\n  const chatFullInfo = giveawayChatId ? selectChatFullInfo(global, giveawayChatId) : undefined;\n  if (!chatFullInfo) {\n    return {};\n  }\n\n  return {\n    members: chatFullInfo.members,\n    adminMembersById: chatFullInfo.adminMembersById,\n  };\n})(GiveawayUserPickerModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"P0kLOw15\",\"button\":\"ILuhBsJG\",\"main\":\"SqiN63Ef\",\"logo\":\"Me2hCsMs\",\"header-text\":\"UVDnB0Wq\",\"headerText\":\"UVDnB0Wq\",\"description\":\"v5yGzV6v\",\"header\":\"U6XNIToQ\",\"hidden-header\":\"tDZc21ZC\",\"hiddenHeader\":\"tDZc21ZC\",\"close-button\":\"OX6_HqAd\",\"closeButton\":\"OX6_HqAd\",\"premium-header-text\":\"v6hiGpEn\",\"premiumHeaderText\":\"v6hiGpEn\",\"primary-footer-text\":\"YGbiSd3e\",\"primaryFooterText\":\"YGbiSd3e\",\"section\":\"rZRDMqUL\",\"types\":\"sQ5PkKEs\",\"footer\":\"hD_AEzjd\",\"options\":\"JjDLNrKG\",\"giveawayTitle\":\"p5Hn4Q6E\",\"subscription\":\"rniPcuiP\",\"starSubscription\":\"bzRAETfR\",\"subscriptionOption\":\"ggZrgZnv\",\"status\":\"q1y2qUTn\",\"info\":\"IsT38nlq\",\"titleInfo\":\"nmsfBLut\",\"month\":\"TsGuei3B\",\"quantity\":\"G9H3tm6D\",\"floatingBadge\":\"xKl2UeV8\",\"floatingBadgeColor\":\"HLx3wTBD\",\"floatingBadgeButtonColor\":\"JLH0MExt\",\"floatingBadgeIcon\":\"Ftr7zf2v\",\"floatingBadgeValue\":\"Ce0Ob2tg\",\"subscriptionFooter\":\"rDFQAfTt\",\"premiumFeatures\":\"eNQ_nrKr\",\"dateButton\":\"GeKqKRgP\",\"title\":\"LZ3vPzak\",\"checkboxSection\":\"Z9QJQ6IS\",\"prizesSection\":\"eQVP0Nx8\",\"prizesInput\":\"qMYNwiUZ\",\"subLabelClassName\":\"txXJxVFu\",\"prepaidImg\":\"ldn4mh2T\",\"addButton\":\"sOXvh85b\",\"addChannel\":\"aGbyR60s\",\"removeChannel\":\"UZdErfVI\",\"starOptions\":\"cLhNkYPB\",\"transition\":\"vEI2Wewt\"};","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiCountry,\n  ApiPremiumGiftCodeOption,\n  ApiPrepaidGiveaway,\n  ApiPrepaidStarsGiveaway,\n  ApiStarGiveawayOption,\n  ApiTypePrepaidGiveaway,\n  ApiUser,\n} from '../../../api/types';\n\nimport {\n  GIVEAWAY_BOOST_PER_PREMIUM,\n  GIVEAWAY_MAX_ADDITIONAL_CHANNELS,\n  GIVEAWAY_MAX_ADDITIONAL_COUNTRIES,\n  GIVEAWAY_MAX_ADDITIONAL_USERS,\n  STARS_CURRENCY_CODE,\n} from '../../../config';\nimport { getUserFullName, isChatChannel } from '../../../global/helpers';\nimport {\n  selectChat,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport { unique } from '../../../util/iteratees';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport CalendarModal from '../../common/CalendarModal';\nimport CountryPickerModal from '../../common/CountryPickerModal';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport Icon from '../../common/icons/Icon';\nimport StarTopupOptionList from '../../modals/stars/StarTopupOptionList';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport InputText from '../../ui/InputText';\nimport Link from '../../ui/Link';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport RadioGroup from '../../ui/RadioGroup';\nimport RangeSliderWithMarks from '../../ui/RangeSliderWithMarks';\nimport Switcher from '../../ui/Switcher';\nimport GiveawayChannelPickerModal from './GiveawayChannelPickerModal';\nimport GiveawayTypeOption from './GiveawayTypeOption';\nimport GiveawayUserPickerModal from './GiveawayUserPickerModal';\nimport PremiumSubscriptionOption from './PremiumSubscriptionOption';\n\nimport styles from './GiveawayModal.module.scss';\n\nimport GiftBlueRound from '../../../assets/premium/GiftBlueRound.svg';\nimport GiftGreenRound from '../../../assets/premium/GiftGreenRound.svg';\nimport GiftRedRound from '../../../assets/premium/GiftRedRound.svg';\nimport GiftStar from '../../../assets/premium/GiftStar.svg';\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  userIds?: string[];\n};\n\ntype StateProps = {\n  chatId?: string;\n  gifts?: ApiPremiumGiftCodeOption[];\n  isOpen?: boolean;\n  fromUser?: ApiUser;\n  selectedMemberList?: string[] | undefined;\n  selectedChannelList?: string[] | undefined;\n  giveawayBoostPerPremiumLimit?: number;\n  userSelectionLimit?: number;\n  countryList: ApiCountry[];\n  prepaidGiveaway?: ApiTypePrepaidGiveaway;\n  countrySelectionLimit: number | undefined;\n  isChannel?: boolean;\n  isStarsGiftEnabled?: boolean;\n  starsGiftOptions?: ApiStarGiveawayOption[] | undefined;\n};\n\ntype GiveawayAction = 'createPremiumGiveaway' | 'createStarsGiveaway';\ntype ApiGiveawayType = 'premium_giveaway' | 'stars_giveaway';\ntype SubscribersType = 'all' | 'new';\n\ninterface TypeOption {\n  name: string;\n  text: string;\n  value: ApiGiveawayType;\n  img: string;\n  actions?: GiveawayAction;\n  isLink: boolean;\n  onClickAction?: () => void;\n}\n\nconst DEFAULT_CUSTOM_EXPIRE_DATE = 86400 * 3 * 1000; // 3 days\nconst MAX_ADDITIONAL_CHANNELS = 9;\nconst DEFAULT_BOOST_COUNT = 5;\n\nconst GIVEAWAY_IMG_LIST: { [key: number]: string } = {\n  3: GiftGreenRound,\n  6: GiftBlueRound,\n  12: GiftRedRound,\n};\n\nconst GiveawayModal: FC<OwnProps & StateProps> = ({\n  chatId,\n  gifts,\n  isOpen,\n  isChannel,\n  selectedMemberList,\n  selectedChannelList,\n  giveawayBoostPerPremiumLimit = GIVEAWAY_BOOST_PER_PREMIUM,\n  countryList,\n  prepaidGiveaway,\n  countrySelectionLimit = GIVEAWAY_MAX_ADDITIONAL_COUNTRIES,\n  userSelectionLimit = GIVEAWAY_MAX_ADDITIONAL_USERS,\n  isStarsGiftEnabled,\n  starsGiftOptions,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const dialogRef = useRef<HTMLDivElement>(null);\n  const {\n    closeGiveawayModal, openInvoice, openPremiumModal,\n    launchPrepaidGiveaway, launchPrepaidStarsGiveaway,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isCalendarOpened, openCalendar, closeCalendar] = useFlag();\n  const [isCountryPickerModalOpen, openCountryPickerModal, closeCountryPickerModal] = useFlag();\n  const [isConfirmModalOpen, openConfirmModal, closeConfirmModal] = useFlag();\n  const [isUserPickerModalOpen, openUserPickerModal, closeUserPickerModal] = useFlag();\n  const [isChannelPickerModalOpen, openChannelPickerModal, closeChannelPickerModal] = useFlag();\n\n  const TYPE_OPTIONS: TypeOption[] = [{\n    name: 'Premium.Title',\n    text: 'BoostingWinnersRandomly',\n    value: 'premium_giveaway',\n    img: GiftBlueRound,\n    actions: 'createPremiumGiveaway',\n    isLink: true,\n    onClickAction: () => {\n      openUserPickerModal();\n    },\n  }];\n\n  if (isStarsGiftEnabled) {\n    TYPE_OPTIONS.push({\n      name: 'TelegramStars',\n      text: 'BoostingWinnersRandomly',\n      value: 'stars_giveaway',\n      img: GiftStar,\n      actions: 'createStarsGiveaway',\n      isLink: false,\n    });\n  }\n\n  const [customExpireDate, setCustomExpireDate] = useState<number>(Date.now() + DEFAULT_CUSTOM_EXPIRE_DATE);\n  const [isHeaderHidden, setHeaderHidden] = useState(true);\n  const [selectedRandomUserCount, setSelectedRandomUserCount] = useState<number>(DEFAULT_BOOST_COUNT);\n  const [selectedGiveawayOption, setGiveawayOption] = useState<ApiGiveawayType>(TYPE_OPTIONS[0].value);\n  const [selectedStarOption, setSelectedStarOption] = useState<ApiStarGiveawayOption | undefined>();\n  const [selectedSubscriberOption, setSelectedSubscriberOption] = useState<SubscribersType>('all');\n  const [selectedMonthOption, setSelectedMonthOption] = useState<number | undefined>();\n  const [selectedUserIds, setSelectedUserIds] = useState<string[]>([]);\n  const [selectedChannelIds, setSelectedChannelIds] = useState<string[]>([]);\n  const [selectedCountryIds, setSelectedCountryIds] = useState<string[] | undefined>([]);\n  const [shouldShowWinners, setShouldShowWinners] = useState<boolean>(false);\n  const [shouldShowPrizes, setShouldShowPrizes] = useState<boolean>(false);\n  const [prizeDescription, setPrizeDescription] = useState<string | undefined>(undefined);\n  const [dataPrepaidGiveaway, setDataPrepaidGiveaway] = useState<ApiPrepaidGiveaway | undefined>(undefined);\n  const [\n    dataStarsPrepaidGiveaway, setDataStarsPrepaidGiveaway,\n  ] = useState<ApiPrepaidStarsGiveaway | undefined>(undefined);\n\n  const isPremiumGiveaway = selectedGiveawayOption === 'premium_giveaway';\n  const isStarsGiveaway = selectedGiveawayOption === 'stars_giveaway';\n  const selectedUserCount = isPremiumGiveaway\n  && !selectedUserIds.length ? selectedRandomUserCount : selectedUserIds.length;\n  const boostQuantity = selectedUserCount * giveawayBoostPerPremiumLimit;\n  const boostStarsQuantity = selectedStarOption?.yearlyBoosts;\n\n  const SUBSCRIBER_OPTIONS = useMemo(() => [\n    {\n      value: 'all',\n      label: lang(isChannel ? 'BoostingAllSubscribers' : 'BoostingAllMembers'),\n      subLabel: selectedCountryIds && selectedCountryIds.length > 0\n        ? lang('Giveaway.ReceiverType.Countries', selectedCountryIds.length)\n        : lang('BoostingFromAllCountries'),\n    },\n    {\n      value: 'new',\n      label: lang(isChannel ? 'BoostingNewSubscribers' : 'BoostingNewMembers'),\n      subLabel: selectedCountryIds && selectedCountryIds.length > 0\n        ? lang('Giveaway.ReceiverType.Countries', selectedCountryIds.length)\n        : lang('BoostingFromAllCountries'),\n    },\n  ], [isChannel, lang, selectedCountryIds]);\n\n  const monthQuantity = lang('Months', selectedMonthOption);\n  const isStarsPrepaidGiveaway = prepaidGiveaway?.type === 'starsGiveaway';\n  const isPremiumPrepaidGiveaway = prepaidGiveaway?.type === 'giveaway';\n\n  const selectedGift = useMemo(() => {\n    return gifts?.find((gift) => gift.months === selectedMonthOption && gift.users === selectedUserCount);\n  }, [gifts, selectedMonthOption, selectedUserCount]);\n\n  const selectedStarsGift = useMemo(() => {\n    return starsGiftOptions?.find((gift) => {\n      return isStarsPrepaidGiveaway && gift.stars === (dataStarsPrepaidGiveaway?.stars);\n    });\n  }, [dataStarsPrepaidGiveaway, starsGiftOptions, isStarsPrepaidGiveaway]);\n\n  const filteredGifts = useMemo(() => {\n    return gifts?.filter((gift) => gift.users === selectedUserCount && gift.currency !== STARS_CURRENCY_CODE);\n  }, [gifts, selectedUserCount]);\n\n  const fullMonthlyAmount = useMemo(() => {\n    const basicGift = filteredGifts?.reduce((acc, gift) => {\n      return gift.amount < acc.amount ? gift : acc;\n    }, filteredGifts[0]);\n\n    return basicGift && Math.floor(basicGift.amount / basicGift.months);\n  }, [filteredGifts]);\n\n  const userCountOptions = useMemo(() => {\n    return unique((gifts?.filter((gift) => gift.currency !== STARS_CURRENCY_CODE)\n      ?.map((winner) => winner.users) || [])).sort((a, b) => a - b);\n  }, [gifts]);\n\n  const winnerCountOptions = useMemo(() => {\n    return unique((selectedStarOption?.winners?.map((winner) => winner.users) || [])).sort((a, b) => a - b);\n  }, [selectedStarOption]);\n\n  useEffect(() => {\n    if (isOpen && gifts?.length && !isStarsPrepaidGiveaway) {\n      setSelectedMonthOption(gifts?.[0].months);\n    }\n  }, [isOpen, gifts, isStarsPrepaidGiveaway]);\n\n  useEffect(() => {\n    if (isOpen && starsGiftOptions?.length && !isPremiumPrepaidGiveaway) {\n      setSelectedStarOption(starsGiftOptions?.[0]);\n    }\n  }, [isOpen, starsGiftOptions, isPremiumPrepaidGiveaway]);\n\n  useEffect(() => {\n    if (isOpen && isStarsPrepaidGiveaway) {\n      setSelectedRandomUserCount(prepaidGiveaway.quantity);\n      setDataStarsPrepaidGiveaway(prepaidGiveaway);\n    }\n  }, [isOpen, isStarsPrepaidGiveaway, prepaidGiveaway]);\n\n  useEffect(() => {\n    if (isOpen && isPremiumPrepaidGiveaway) {\n      setSelectedRandomUserCount(prepaidGiveaway.quantity);\n      setDataPrepaidGiveaway(prepaidGiveaway);\n      setSelectedMonthOption(prepaidGiveaway.months);\n    }\n  }, [isOpen, isPremiumPrepaidGiveaway, prepaidGiveaway]);\n\n  useEffect(() => {\n    if (selectedMemberList) {\n      setSelectedUserIds(selectedMemberList);\n    }\n  }, [selectedMemberList]);\n\n  useEffect(() => {\n    if (selectedChannelList) {\n      setSelectedChannelIds(selectedChannelList);\n    }\n  }, [selectedChannelList]);\n\n  const handlePremiumClick = useLastCallback(() => {\n    openPremiumModal();\n  });\n\n  const handleClose = useLastCallback(() => {\n    setDataStarsPrepaidGiveaway(undefined);\n    setDataPrepaidGiveaway(undefined);\n    setSelectedStarOption(undefined);\n    setSelectedMonthOption(undefined);\n    setSelectedRandomUserCount(DEFAULT_BOOST_COUNT);\n    closeGiveawayModal();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isPremiumGiveaway) {\n      if (selectedUserIds?.length) {\n        openInvoice({\n          type: 'giftcode',\n          boostChannelId: chatId!,\n          userIds: selectedUserIds,\n          currency: selectedGift!.currency,\n          amount: selectedGift!.amount,\n          option: selectedGift!,\n        });\n      } else {\n        openInvoice({\n          type: 'giveaway',\n          chatId: chatId!,\n          additionalChannelIds: selectedChannelIds,\n          isOnlyForNewSubscribers: selectedSubscriberOption === 'new',\n          countries: selectedCountryIds,\n          areWinnersVisible: shouldShowWinners,\n          prizeDescription,\n          untilDate: customExpireDate / 1000,\n          currency: selectedGift!.currency,\n          amount: selectedGift!.amount,\n          option: selectedGift!,\n        });\n      }\n    } else {\n      openInvoice({\n        type: 'starsgiveaway',\n        chatId: chatId!,\n        additionalChannelIds: selectedChannelIds,\n        isOnlyForNewSubscribers: selectedSubscriberOption === 'new',\n        countries: selectedCountryIds,\n        areWinnersVisible: shouldShowWinners,\n        prizeDescription,\n        untilDate: customExpireDate / 1000,\n        currency: selectedStarOption!.currency,\n        amount: selectedStarOption!.amount,\n        stars: selectedStarOption!.stars,\n        users: selectedRandomUserCount,\n      });\n    }\n\n    handleClose();\n  });\n\n  const confirmLaunchPrepaidGiveaway = useLastCallback(() => {\n    if (isStarsPrepaidGiveaway) {\n      launchPrepaidStarsGiveaway({\n        chatId: chatId!,\n        giveawayId: dataStarsPrepaidGiveaway!.id,\n        paymentPurpose: {\n          additionalChannelIds: selectedChannelIds,\n          countries: selectedCountryIds,\n          prizeDescription,\n          areWinnersVisible: shouldShowWinners,\n          untilDate: customExpireDate / 1000,\n          stars: dataStarsPrepaidGiveaway!.stars,\n          currency: selectedStarsGift!.currency,\n          amount: selectedStarsGift!.amount,\n          users: dataStarsPrepaidGiveaway!.quantity,\n        },\n      });\n    } else {\n      launchPrepaidGiveaway({\n        chatId: chatId!,\n        giveawayId: dataPrepaidGiveaway!.id,\n        paymentPurpose: {\n          additionalChannelIds: selectedChannelIds,\n          countries: selectedCountryIds,\n          prizeDescription,\n          areWinnersVisible: shouldShowWinners,\n          untilDate: customExpireDate / 1000,\n          currency: selectedGift!.currency,\n          amount: selectedGift!.amount,\n        },\n      });\n    }\n\n    closeConfirmModal();\n    handleClose();\n  });\n\n  const handleRandomUserCountChange = useLastCallback((newValue) => {\n    setSelectedRandomUserCount(newValue);\n  });\n\n  const handleWinnerCountChange = useLastCallback((newValue) => {\n    setSelectedRandomUserCount(newValue);\n  });\n\n  const handlePrizeDescriptionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setPrizeDescription(e.target.value);\n  });\n\n  const userNames = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    return selectedUserIds?.map((userId) => getUserFullName(usersById[userId])).join(', ');\n  }, [selectedUserIds]);\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop } = e.currentTarget;\n\n    setHeaderHidden(scrollTop <= 150);\n  }\n\n  const handleChangeSubscriberOption = useLastCallback((value) => {\n    setSelectedSubscriberOption(value);\n  });\n\n  const handleChangeTypeOption = useLastCallback((value: ApiGiveawayType) => {\n    setGiveawayOption(value);\n    setSelectedUserIds([]);\n    setSelectedRandomUserCount(DEFAULT_BOOST_COUNT);\n  });\n\n  const handleExpireDateChange = useLastCallback((date: Date) => {\n    setCustomExpireDate(date.getTime());\n    closeCalendar();\n  });\n\n  const handleSetCountriesListChange = useLastCallback((value: string[]) => {\n    setSelectedCountryIds(value);\n  });\n\n  const handleSelectedUserIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    setSelectedUserIds(newSelectedIds);\n    if (!newSelectedIds.length) {\n      setGiveawayOption('premium_giveaway');\n    }\n  });\n\n  const handleSelectedChannelIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    setSelectedChannelIds(newSelectedIds);\n  });\n\n  const handleShouldShowWinnersChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setShouldShowWinners(e.target.checked);\n  });\n\n  const handleShouldShowPrizesChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setShouldShowPrizes(e.target.checked);\n  });\n\n  const onClickActionHandler = useLastCallback(() => {\n    openCountryPickerModal();\n  });\n\n  const handleStarClick = useLastCallback((option) => {\n    setSelectedStarOption(option);\n  });\n\n  function renderTypeOptions() {\n    return (\n      <div className={styles.options}>\n        {TYPE_OPTIONS.map((option) => {\n          return (\n            <GiveawayTypeOption\n              key={option.name}\n              name={option.name}\n              text={option.text}\n              option={option.value}\n              img={option.img}\n              onChange={handleChangeTypeOption}\n              checked={selectedGiveawayOption === option.value}\n              isLink={option.isLink}\n              userNames={userNames}\n              selectedMemberIds={selectedUserIds}\n              onClickAction={option.onClickAction}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n\n  function renderSubscribersOptions() {\n    return (\n      <div className={styles.options}>\n        <RadioGroup\n          name=\"subscribers\"\n          options={SUBSCRIBER_OPTIONS}\n          selected={selectedSubscriberOption}\n          onChange={handleChangeSubscriberOption}\n          onClickAction={onClickActionHandler}\n          subLabelClassName={styles.subLabelClassName}\n          isLink\n        />\n      </div>\n    );\n  }\n\n  function renderSubscriptionOptions() {\n    return (\n      <div className={styles.options}>\n        {filteredGifts?.map((gift) => (\n          <PremiumSubscriptionOption\n            isGiveaway\n            key={gift.months}\n            option={gift}\n            fullMonthlyAmount={fullMonthlyAmount!}\n            checked={gift.months === selectedMonthOption}\n            onChange={setSelectedMonthOption}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPremiumFeaturesLink() {\n    const info = lang('GiftPremiumListFeaturesAndTerms');\n    const parts = info.match(/([^*]*)\\*([^*]+)\\*(.*)/);\n\n    if (!parts || parts.length < 4) {\n      return undefined;\n    }\n\n    return (\n      <p className={styles.premiumFeatures}>\n        {parts[1]}\n        <Link isPrimary onClick={handlePremiumClick}>{parts[2]}</Link>\n        {parts[3]}\n      </p>\n    );\n  }\n\n  function deleteParticipantsHandler(id: string) {\n    const filteredChannelIds = selectedChannelIds.filter((channelId) => channelId !== id);\n    setSelectedChannelIds(filteredChannelIds);\n  }\n\n  function renderStarOptionList() {\n    return (\n      <StarTopupOptionList\n        className={styles.starOptions}\n        options={starsGiftOptions}\n        selectedStarCount={selectedRandomUserCount}\n        selectedStarOption={selectedStarOption}\n        onClick={handleStarClick}\n      />\n    );\n  }\n\n  function renderGiveawayOptionList() {\n    return (\n      <>\n        <div className={styles.section}>\n          <h2 className={styles.giveawayTitle}>\n            {lang('BoostingChannelsGroupsIncludedGiveaway')}\n          </h2>\n\n          <ListItem\n            inactive\n            className=\"chat-item-clickable contact-list-item\"\n          >\n            <GroupChatInfo\n              chatId={chatId!}\n              status={lang(isChannel ? 'BoostingChannelWillReceiveBoost'\n                : 'BoostingGroupWillReceiveBoost', boostQuantity || boostStarsQuantity, 'i')}\n            />\n          </ListItem>\n\n          {selectedChannelIds?.map((channelId) => {\n            return (\n              <ListItem\n                ripple\n                key={channelId}\n                className=\"chat-item-clickable contact-list-item\"\n                /* eslint-disable-next-line react/jsx-no-bind */\n                onClick={() => deleteParticipantsHandler(channelId)}\n                rightElement={(<Icon name=\"close\" className={styles.removeChannel} />)}\n              >\n                <GroupChatInfo\n                  chatId={channelId.toString()}\n                />\n              </ListItem>\n            );\n          })}\n\n          {selectedChannelIds.length < MAX_ADDITIONAL_CHANNELS && (\n            <ListItem\n              icon=\"add\"\n              ripple\n              onClick={openChannelPickerModal}\n              className={styles.addButton}\n              iconClassName={styles.addChannel}\n            >\n              {lang('BoostingAddChannelOrGroup')}\n            </ListItem>\n          )}\n        </div>\n\n        <div className={styles.section}>\n          <h2 className={styles.giveawayTitle}>\n            {lang('BoostingEligibleUsers')}\n          </h2>\n\n          {renderSubscribersOptions()}\n        </div>\n\n        <div className={styles.subscription}>\n          {renderText(lang(isChannel ? 'BoostGift.LimitSubscribersInfo' : 'lng_giveaway_users_about_group'))}\n        </div>\n\n        <div className={styles.section}>\n          <div className={styles.checkboxSection}>\n            <h2 className={styles.title}>\n              {lang('BoostingGiveawayAdditionalPrizes')}\n            </h2>\n\n            <Switcher\n              label={lang('BoostingGiveawayAdditionalPrizes')}\n              checked={shouldShowPrizes}\n              onChange={handleShouldShowPrizesChange}\n            />\n          </div>\n\n          {shouldShowPrizes && (\n            <div className={styles.prizesSection}>\n              <h2 className={styles.title}>\n                {selectedRandomUserCount}\n              </h2>\n              <InputText\n                className={styles.prizesInput}\n                value={prizeDescription}\n                onChange={handlePrizeDescriptionChange}\n                label={lang('BoostingGiveawayEnterYourPrize')}\n              />\n            </div>\n          )}\n        </div>\n\n        {shouldShowPrizes ? (\n          !isStarsGiveaway && !isStarsPrepaidGiveaway ? (\n            <div className={styles.subscription}>\n              {prizeDescription?.length ? renderText(lang('BoostingGiveawayAdditionPrizeCountNameHint',\n                dataPrepaidGiveaway\n                  ? [dataPrepaidGiveaway.quantity, prizeDescription, monthQuantity]\n                  : [selectedUserCount, prizeDescription, monthQuantity],\n                undefined,\n                selectedMonthOption), ['simple_markdown']) : renderText(lang('BoostingGiveawayAdditionPrizeCountHint',\n                dataPrepaidGiveaway\n                  ? [dataPrepaidGiveaway.quantity, monthQuantity]\n                  : [selectedUserCount, monthQuantity],\n                undefined,\n                selectedMonthOption), ['simple_markdown'])}\n            </div>\n          ) : undefined\n        ) : (\n          <div className={styles.subscription}>\n            {renderText(lang('BoostingGiveawayAdditionPrizeHint'))}\n          </div>\n        )}\n\n        <div className={styles.section}>\n          <div className={styles.checkboxSection}>\n            <h2 className={styles.title}>\n              {lang('BoostingGiveawayShowWinners')}\n            </h2>\n\n            <Switcher\n              label={lang('BoostingGiveawayAdditionalPrizes')}\n              checked={shouldShowWinners}\n              onChange={handleShouldShowWinnersChange}\n            />\n          </div>\n        </div>\n\n        <div className={styles.subscription}>\n          {renderText(lang('BoostingGiveawayShowWinnersHint'))}\n        </div>\n\n        <div className={buildClassName(styles.section,\n          (dataPrepaidGiveaway || dataStarsPrepaidGiveaway || isStarsGiveaway) && styles.subscriptionFooter)}\n        >\n          <h2 className={styles.giveawayTitle}>\n            {lang('BoostingDateWhenGiveawayEnds')}\n          </h2>\n\n          <Button\n            ariaLabel={lang('BoostGift.DateEnds')}\n            className={buildClassName(styles.dateButton, 'expire-limit')}\n            isText\n            onClick={openCalendar}\n          >\n            <h3 className={styles.title}>\n              {lang('BoostGift.DateEnds')}\n            </h3>\n            {formatDateTimeToString(customExpireDate, lang.code)}\n          </Button>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      className={styles.root}\n      onClose={handleClose}\n      isOpen={isOpen}\n      dialogRef={dialogRef}\n      onEnter={(dataPrepaidGiveaway || dataStarsPrepaidGiveaway) ? openConfirmModal : handleClick}\n    >\n      <div className={buildClassName(styles.main, 'custom-scroll')} onScroll={handleScroll}>\n        <Button\n          round\n          size=\"smaller\"\n          className={styles.closeButton}\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        <img className={styles.logo} src={PremiumLogo} alt=\"\" draggable={false} />\n        <h2 className={styles.headerText}>\n          {renderText(lang('BoostingBoostsViaGifts'))}\n        </h2>\n        <div className={styles.description}>\n          {renderText(lang(isChannel ? 'BoostingGetMoreBoost' : 'BoostingGetMoreBoostsGroup'))}\n        </div>\n        <div className={buildClassName(styles.header, isHeaderHidden && styles.hiddenHeader)}>\n          <h2 className={styles.premiumHeaderText}>\n            {lang('BoostingBoostsViaGifts')}\n          </h2>\n        </div>\n        {(dataPrepaidGiveaway || dataStarsPrepaidGiveaway) ? (\n          <div className={styles.status}>\n            <div>\n              {dataStarsPrepaidGiveaway ? (\n                <img className={styles.prepaidImg} src={GiftStar} alt=\"\" />\n              ) : (\n                <img className={styles.prepaidImg} src={GIVEAWAY_IMG_LIST[dataPrepaidGiveaway!.months]} alt=\"\" />\n              )}\n            </div>\n            <div className={styles.info}>\n              <h3 className={styles.title}>\n                {dataStarsPrepaidGiveaway ? lang('Giveaway.Stars.Prepaid.Title', dataStarsPrepaidGiveaway?.stars)\n                  : lang('BoostingTelegramPremiumCountPlural', dataPrepaidGiveaway!.quantity)}\n              </h3>\n              <p className={styles.month}>\n                {dataStarsPrepaidGiveaway ? lang('Giveaway.Stars.Prepaid.Desc', dataStarsPrepaidGiveaway?.quantity)\n                  : lang('PrepaidGiveawayMonths', dataPrepaidGiveaway?.months)}\n              </p>\n            </div>\n            <div className={styles.quantity}>\n              <div className={buildClassName(styles.floatingBadge, styles.floatingBadgeColor)}>\n                <Icon name=\"boost\" className={styles.floatingBadgeIcon} />\n                <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                  {dataStarsPrepaidGiveaway ? dataStarsPrepaidGiveaway?.boosts\n                    : dataPrepaidGiveaway!.quantity * (giveawayBoostPerPremiumLimit ?? GIVEAWAY_BOOST_PER_PREMIUM)}\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div className={buildClassName(styles.section, styles.types)}>\n            {renderTypeOptions()}\n          </div>\n        )}\n\n        {isPremiumGiveaway && !selectedUserIds?.length && (\n          <>\n            {!dataPrepaidGiveaway && !dataStarsPrepaidGiveaway && (\n              <>\n                <div className={styles.section}>\n                  <div className={styles.quantity}>\n                    <h2 className={styles.giveawayTitle}>\n                      {lang('BoostingQuantityPrizes')}\n                    </h2>\n                    <div className={buildClassName(styles.floatingBadge, styles.floatingBadgeColor)}>\n                      <Icon name=\"boost\" className={styles.floatingBadgeIcon} />\n                      <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                        {boostQuantity}\n                      </div>\n                    </div>\n                  </div>\n\n                  <RangeSliderWithMarks\n                    rangeCount={selectedUserCount}\n                    marks={userCountOptions}\n                    onChange={handleRandomUserCountChange}\n                  />\n                </div>\n\n                <div className={styles.subscription}>\n                  {renderText(lang('BoostingChooseHowMany'))}\n                </div>\n              </>\n            )}\n\n            {renderGiveawayOptionList()}\n          </>\n        )}\n\n        {isStarsGiveaway && (\n          <>\n            {!dataStarsPrepaidGiveaway && !dataPrepaidGiveaway && (\n              <>\n                <div className={styles.section}>\n                  <div className={styles.quantity}>\n                    <h2 className={styles.giveawayTitle}>\n                      {lang('BoostingStarsOptions')}\n                    </h2>\n                    <div className={buildClassName(styles.floatingBadge, styles.floatingBadgeColor)}>\n                      <Icon name=\"boost\" className={styles.floatingBadgeIcon} />\n                      <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                        {boostStarsQuantity}\n                      </div>\n                    </div>\n                  </div>\n\n                  {renderStarOptionList()}\n                </div>\n\n                <div className={buildClassName(styles.subscription, styles.starSubscription)}>\n                  {renderText(lang('BoostGift.Stars.Info'))}\n                </div>\n\n                <div className={styles.section}>\n                  <h2 className={styles.giveawayTitle}>\n                    {lang('BoostingStarsQuantityPrizes')}\n                  </h2>\n\n                  <RangeSliderWithMarks\n                    rangeCount={selectedRandomUserCount}\n                    marks={winnerCountOptions}\n                    onChange={handleWinnerCountChange}\n                  />\n\n                  <div className={styles.subscription}>\n                    {renderText(lang('BoostingStarsQuantityPrizesInfo'))}\n                  </div>\n                </div>\n              </>\n            )}\n\n            {renderGiveawayOptionList()}\n          </>\n        )}\n\n        {!dataPrepaidGiveaway && !dataStarsPrepaidGiveaway && isPremiumGiveaway && (\n          <>\n            <div className={styles.section}>\n              <h2 className={styles.giveawayTitle}>\n                {lang('BoostingDurationOfPremium')}\n              </h2>\n\n              {renderSubscriptionOptions()}\n            </div>\n\n            <div className={buildClassName(styles.subscription, styles.subscriptionFooter)}>\n              {renderPremiumFeaturesLink()}\n            </div>\n          </>\n        )}\n\n        {selectedGiveawayOption && (\n          <div className={styles.footer}>\n            <Button\n              className={styles.button}\n              onClick={(dataPrepaidGiveaway || dataStarsPrepaidGiveaway) ? openConfirmModal : handleClick}\n            >\n              {lang('BoostingStartGiveaway')}\n            </Button>\n          </div>\n        )}\n      </div>\n      <CalendarModal\n        isOpen={isCalendarOpened}\n        isFutureMode\n        withTimePicker\n        onClose={closeCalendar}\n        onSubmit={handleExpireDateChange}\n        selectedAt={customExpireDate}\n        submitButtonLabel={lang('Save')}\n      />\n      <CountryPickerModal\n        isOpen={isCountryPickerModalOpen}\n        onClose={closeCountryPickerModal}\n        countryList={countryList}\n        onSubmit={handleSetCountriesListChange}\n        selectionLimit={countrySelectionLimit}\n      />\n      <GiveawayUserPickerModal\n        isOpen={isUserPickerModalOpen}\n        onClose={closeUserPickerModal}\n        onSelectedIdsConfirmed={handleSelectedUserIdsChange}\n        initialSelectedIds={selectedUserIds}\n        selectionLimit={userSelectionLimit}\n        giveawayChatId={chatId}\n      />\n      <GiveawayChannelPickerModal\n        isOpen={isChannelPickerModalOpen}\n        onClose={closeChannelPickerModal}\n        initialSelectedIds={selectedChannelIds}\n        onSelectedIdsConfirmed={handleSelectedChannelIdsChange}\n        selectionLimit={GIVEAWAY_MAX_ADDITIONAL_CHANNELS}\n        giveawayChatId={chatId}\n      />\n      <ConfirmDialog\n        title={lang('BoostingStartGiveawayConfirmTitle')}\n        text={lang('BoostingStartGiveawayConfirmText')}\n        confirmLabel={lang('Start')}\n        isOpen={isConfirmModalOpen}\n        onClose={closeConfirmModal}\n        confirmHandler={confirmLaunchPrepaidGiveaway}\n      />\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    giveawayModal,\n  } = selectTabState(global);\n  const chatId = giveawayModal?.chatId;\n  const chat = chatId ? selectChat(global, chatId) : undefined;\n  const isChannel = chat && isChatChannel(chat);\n\n  return {\n    chatId,\n    gifts: giveawayModal?.gifts,\n    selectedMemberList: giveawayModal?.selectedMemberIds,\n    selectedChannelList: giveawayModal?.selectedChannelIds,\n    giveawayBoostPerPremiumLimit: global.appConfig?.giveawayBoostsPerPremium,\n    isStarsGiftEnabled: global.appConfig?.isStarsGiftEnabled,\n    userSelectionLimit: global.appConfig?.giveawayAddPeersMax,\n    countrySelectionLimit: global.appConfig?.giveawayCountriesMax,\n    countryList: global.countryList.general,\n    prepaidGiveaway: giveawayModal?.prepaidGiveaway,\n    isChannel,\n    starsGiftOptions: giveawayModal?.starOptions,\n  };\n})(GiveawayModal));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { ApiLimitTypeWithModal } from '../../../../api/types';\nimport type { OldLangFn } from '../../../../hooks/useOldLang';\nimport type { IconName } from '../../../../types/icons';\n\nimport { MAX_UPLOAD_FILEPART_SIZE } from '../../../../config';\nimport { selectIsCurrentUserPremium, selectIsPremiumPurchaseBlocked } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { formatFileSize } from '../../../../util/textFormat';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\nimport Button from '../../../ui/Button';\nimport Modal from '../../../ui/Modal';\nimport PremiumLimitsCompare from './PremiumLimitsCompare';\n\nimport styles from './PremiumLimitReachedModal.module.scss';\n\nconst LIMIT_DESCRIPTION: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFolders',\n  uploadMaxFileparts: 'LimitReachedFileSize',\n  dialogFilters: 'LimitReachedFolders',\n  dialogFolderPinned: 'LimitReachedPinDialogs',\n  channelsPublic: 'LimitReachedPublicLinks',\n  channels: 'LimitReachedCommunities',\n  chatlistInvites: 'LimitReachedFolderLinks',\n  chatlistJoined: 'LimitReachedSharedFolders',\n  savedDialogsPinned: 'LimitReachedPinSavedDialogs',\n};\n\nconst LIMIT_DESCRIPTION_BLOCKED: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFoldersLocked',\n  uploadMaxFileparts: 'LimitReachedFileSizeLocked',\n  dialogFilters: 'LimitReachedFoldersLocked',\n  dialogFolderPinned: 'LimitReachedPinDialogsLocked',\n  channelsPublic: 'LimitReachedPublicLinksLocked',\n  channels: 'LimitReachedCommunitiesLocked',\n  chatlistInvites: 'LimitReachedFolderLinksLocked',\n  chatlistJoined: 'LimitReachedSharedFoldersLocked',\n  savedDialogsPinned: 'LimitReachedPinSavedDialogsLocked',\n};\n\nconst LIMIT_DESCRIPTION_PREMIUM: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFoldersPremium',\n  uploadMaxFileparts: 'LimitReachedFileSizePremium',\n  dialogFilters: 'LimitReachedFoldersPremium',\n  dialogFolderPinned: 'LimitReachedPinDialogsPremium',\n  channelsPublic: 'LimitReachedPublicLinksPremium',\n  channels: 'LimitReachedCommunitiesPremium',\n  chatlistInvites: 'LimitReachedFolderLinksPremium',\n  chatlistJoined: 'LimitReachedSharedFoldersPremium',\n  savedDialogsPinned: 'LimitReachedPinSavedDialogsPremium',\n};\n\nconst LIMIT_ICON: Record<ApiLimitTypeWithModal, IconName> = {\n  dialogFiltersChats: 'chat-badge',\n  uploadMaxFileparts: 'file-badge',\n  dialogFilters: 'folder-badge',\n  dialogFolderPinned: 'pin-badge',\n  channelsPublic: 'link-badge',\n  channels: 'chats-badge',\n  chatlistInvites: 'link-badge',\n  chatlistJoined: 'folder-badge',\n  savedDialogsPinned: 'pin-badge',\n};\n\nconst LIMIT_VALUE_FORMATTER: Partial<Record<ApiLimitTypeWithModal, (...args: any[]) => string>> = {\n  uploadMaxFileparts: (lang: OldLangFn, value: number) => {\n    // The real size is not exactly 4gb, so we need to round it\n    if (value === 8000) return lang('FileSize.GB', '4');\n    if (value === 4000) return lang('FileSize.GB', '2');\n    return formatFileSize(lang, value * MAX_UPLOAD_FILEPART_SIZE);\n  },\n};\n\nfunction getLimiterDescription({\n  lang,\n  limitType,\n  isPremium,\n  canBuyPremium,\n  defaultValue,\n  premiumValue,\n  valueFormatter,\n}: {\n  lang: OldLangFn;\n  limitType?: ApiLimitTypeWithModal;\n  isPremium?: boolean;\n  canBuyPremium?: boolean;\n  defaultValue?: number;\n  premiumValue?: number;\n  valueFormatter?: (...args: any[]) => string;\n}) {\n  if (!limitType) {\n    return undefined;\n  }\n\n  const defaultValueFormatted = valueFormatter ? valueFormatter(lang, defaultValue) : defaultValue;\n  const premiumValueFormatted = valueFormatter ? valueFormatter(lang, premiumValue) : premiumValue;\n\n  if (isPremium) {\n    return lang(LIMIT_DESCRIPTION_PREMIUM[limitType], premiumValueFormatted);\n  }\n\n  return canBuyPremium\n    ? lang(LIMIT_DESCRIPTION[limitType],\n      limitType === 'channelsPublic' ? premiumValueFormatted : [defaultValueFormatted, premiumValueFormatted])\n    : lang(LIMIT_DESCRIPTION_BLOCKED[limitType], defaultValueFormatted);\n}\n\nexport type OwnProps = {\n  limit?: ApiLimitTypeWithModal;\n};\n\ntype StateProps = {\n  defaultValue?: number;\n  premiumValue?: number;\n  isPremium?: boolean;\n  canBuyPremium?: boolean;\n};\n\nconst PremiumLimitReachedModal: FC<OwnProps & StateProps> = ({\n  defaultValue,\n  premiumValue,\n  limit,\n  isPremium,\n  canBuyPremium,\n}) => {\n  const { closeLimitReachedModal, openPremiumModal } = getActions();\n  const lang = useOldLang();\n\n  const [isClosing, startClosing, stopClosing] = useFlag();\n\n  const handleClick = useCallback(() => {\n    openPremiumModal();\n    startClosing();\n  }, [openPremiumModal, startClosing]);\n\n  useEffect(() => {\n    if (!limit && isClosing) stopClosing();\n  }, [isClosing, limit, stopClosing]);\n\n  const title = lang('LimitReached');\n  const valueFormatter = limit && LIMIT_VALUE_FORMATTER[limit];\n  const description = getLimiterDescription({\n    lang,\n    limitType: limit,\n    isPremium,\n    canBuyPremium,\n    defaultValue,\n    premiumValue,\n    valueFormatter,\n  });\n  const icon = limit && LIMIT_ICON[limit];\n  const canUpgrade = canBuyPremium && !isPremium;\n\n  return (\n    <Modal\n      onClose={startClosing}\n      onCloseAnimationEnd={closeLimitReachedModal}\n      isOpen={Boolean(limit) && !isClosing}\n      title={title}\n      className={styles.root}\n    >\n      {!canUpgrade && (\n        <div className={styles.limitBadge}>\n          <i className={buildClassName(styles.limitIcon, icon, 'icon')} />\n          <div className={styles.limitValue}>{valueFormatter?.(\n            lang, isPremium ? premiumValue : defaultValue,\n          ) || (isPremium ? premiumValue : defaultValue)}\n          </div>\n        </div>\n      )}\n\n      {canUpgrade && (\n        <PremiumLimitsCompare\n          className={styles.limitCompare}\n          leftValue={valueFormatter?.(lang, defaultValue) || defaultValue?.toString()}\n          rightValue={valueFormatter?.(lang, premiumValue) || premiumValue?.toString()}\n          floatingBadgeIcon={icon}\n        />\n      )}\n\n      <div>\n        {renderText(description || '', ['simple_markdown', 'br'])}\n      </div>\n\n      <div className={styles.dialogButtons}>\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={startClosing}\n          color=\"primary\"\n        >\n          {lang(canUpgrade ? 'Cancel' : 'OK')}\n        </Button>\n        {canUpgrade\n      && (\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={handleClick}\n          color=\"primary\"\n        >\n          {lang('IncreaseLimit')}\n          <Icon name=\"double-badge\" className={styles.x2} />\n        </Button>\n      )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { limit }): StateProps => {\n    const { limits } = global.appConfig || {};\n    const isPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      defaultValue: limit ? limits?.[limit][0] : undefined,\n      premiumValue: limit ? limits?.[limit][1] : undefined,\n      canBuyPremium: !selectIsPremiumPurchaseBlocked(global),\n      isPremium,\n    };\n  },\n)(PremiumLimitReachedModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"QAs_iFxO\",\"limit-compare\":\"k0O6Rnjh\",\"limitCompare\":\"k0O6Rnjh\",\"limit-badge\":\"Q5d_7bB4\",\"limitBadge\":\"Q5d_7bB4\",\"limit-value\":\"ArEy3hhB\",\"limitValue\":\"ArEy3hhB\",\"limit-icon\":\"rbnU7JVX\",\"limitIcon\":\"rbnU7JVX\",\"dialog-buttons\":\"RVM_RSap\",\"dialogButtons\":\"RVM_RSap\",\"x2\":\"esB1OhAF\",\"button-icon\":\"ydpxmYS3\",\"buttonIcon\":\"ydpxmYS3\"};","import type { RefObject } from 'react';\nimport { useRef, useState } from '../../../lib/teact/teact';\n\nimport { ANIMATION_END_DELAY } from '../../../config';\nimport animateScroll from '../../../util/animateScroll';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nconst STICKER_INTERSECTION_THROTTLE = 200;\nconst STICKER_INTERSECTION_MARGIN = 100;\nconst SLIDE_TRANSITION_DURATION = 350 + ANIMATION_END_DELAY;\nconst SCROLL_MAX_DISTANCE_WHEN_CLOSE = 200;\nconst SCROLL_MAX_DISTANCE_WHEN_FAR = 80;\nexport const FOCUS_MARGIN = 0.5 * REM;\n\nexport function useStickerPickerObservers(\n  containerRef: RefObject<HTMLDivElement>,\n  headerRef: RefObject<HTMLDivElement>,\n  idPrefix: string,\n  isHidden?: boolean,\n) {\n  const stickerSetIntersectionsRef = useRef<boolean[]>([]);\n\n  const [activeSetIndex, setActiveSetIndex] = useState<number>(0);\n\n  const {\n    observe: observeIntersectionForSet,\n    freeze: freezeForSet,\n    unfreeze: unfreezeForSet,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n  }, (entries) => {\n    const stickerSetIntersections = stickerSetIntersectionsRef.current;\n\n    entries.forEach((entry) => {\n      const index = Number(entry.target.id.replace(`${idPrefix}-`, ''));\n      stickerSetIntersections[index] = entry.isIntersecting;\n    });\n\n    const minIntersectingIndex = stickerSetIntersections.reduce((lowestIndex, isIntersecting, index) => {\n      return isIntersecting && index < lowestIndex ? index : lowestIndex;\n    }, Infinity);\n\n    if (minIntersectingIndex === Infinity) {\n      setActiveSetIndex(-1);\n      return;\n    }\n\n    setActiveSetIndex(minIntersectingIndex);\n  });\n\n  const {\n    observe: observeIntersectionForShowingItems,\n    freeze: freezeForShowingItems,\n    unfreeze: unfreezeForShowingItems,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: STICKER_INTERSECTION_THROTTLE,\n    margin: STICKER_INTERSECTION_MARGIN,\n  });\n\n  const {\n    observe: observeIntersectionForPlayingItems,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: STICKER_INTERSECTION_THROTTLE,\n    margin: STICKER_INTERSECTION_MARGIN,\n  });\n\n  const {\n    observe: observeIntersectionForCovers,\n  } = useIntersectionObserver({\n    rootRef: headerRef,\n  });\n\n  useSyncEffect(() => {\n    if (isHidden) {\n      freezeForSet();\n      freezeForShowingItems();\n    } else {\n      setTimeout(() => {\n        unfreezeForShowingItems();\n        unfreezeForSet();\n      }, SLIDE_TRANSITION_DURATION);\n    }\n  }, [freezeForSet, freezeForShowingItems, isHidden, unfreezeForSet, unfreezeForShowingItems]);\n\n  const selectStickerSet = useLastCallback((index: number) => {\n    setActiveSetIndex((currentIndex) => {\n      const stickerSetEl = document.getElementById(`${idPrefix}-${index}`)!;\n      const isClose = Math.abs(currentIndex - index) === 1;\n\n      animateScroll({\n        container: containerRef.current!,\n        element: stickerSetEl,\n        position: 'start',\n        margin: FOCUS_MARGIN,\n        maxDistance: isClose ? SCROLL_MAX_DISTANCE_WHEN_CLOSE : SCROLL_MAX_DISTANCE_WHEN_FAR,\n      });\n\n      return index;\n    });\n  });\n\n  return {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForShowingItems,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"m6XpTzQX\",\"video\":\"OZHqKbDL\",\"image\":\"enA6c8gc\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiStickerSet } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_PICKER_HEADER } from '../../../config';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../global/selectors';\nimport { IS_WEBM_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { getFirstLetters } from '../../../util/textFormat';\n\nimport useColorFilter from '../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useCoordsInSharedCanvas from '../../../hooks/useCoordsInSharedCanvas';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\nimport useCustomEmoji from '../../common/hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport CustomEmoji from '../../common/CustomEmoji';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\n\nimport styles from './StickerSetCover.module.scss';\n\ntype OwnProps = {\n  stickerSet: ApiStickerSet;\n  size?: number;\n  noPlay?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection: ObserveFn;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n};\n\nconst StickerSetCover: FC<OwnProps> = ({\n  stickerSet,\n  size = STICKER_SIZE_PICKER_HEADER,\n  noPlay,\n  forcePlayback,\n  observeIntersection,\n  sharedCanvasRef,\n}) => {\n  const { loadStickers } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const {\n    hasThumbnail, hasVideoThumb, hasAnimatedThumb, hasStaticThumb, thumbCustomEmojiId,\n  } = stickerSet;\n\n  const { customEmoji } = useCustomEmoji(thumbCustomEmojiId);\n  const hasCustomColor = customEmoji?.shouldUseTextColor;\n  const customColor = useDynamicColorListener(containerRef, undefined, !hasCustomColor);\n  const colorFilter = useColorFilter(customColor);\n\n  const isIntersecting = useIsIntersecting(containerRef, observeIntersection);\n  const shouldPlay = isIntersecting && !noPlay;\n\n  const shouldFallbackToSticker = !hasThumbnail\n    || (hasVideoThumb && !IS_WEBM_SUPPORTED && !hasAnimatedThumb && !hasStaticThumb);\n  const firstStickerHash = shouldFallbackToSticker && stickerSet.stickers?.[0]\n    && getStickerMediaHash(stickerSet.stickers[0], 'preview');\n  const firstStickerMediaData = useMedia(firstStickerHash, !isIntersecting);\n\n  const mediaHash = ((hasThumbnail && !firstStickerHash) || hasAnimatedThumb) && `stickerSet${stickerSet.id}`;\n  const mediaData = useMedia(mediaHash, !isIntersecting);\n  const isReady = thumbCustomEmojiId || mediaData || firstStickerMediaData;\n  const transitionClassNames = useMediaTransitionDeprecated(isReady);\n\n  const coords = useCoordsInSharedCanvas(containerRef, sharedCanvasRef);\n\n  useEffect(() => {\n    if (isIntersecting && !stickerSet.stickers?.length) {\n      loadStickers({\n        stickerSetInfo: stickerSet,\n      });\n    }\n  }, [isIntersecting, loadStickers, stickerSet]);\n\n  return (\n    <div\n      ref={containerRef}\n      className={buildClassName(styles.root, 'sticker-set-cover')}\n      style={`--_size: ${size}px`}\n    >\n      {isReady ? (\n        thumbCustomEmojiId ? (\n          <CustomEmoji\n            documentId={thumbCustomEmojiId}\n            size={size}\n            observeIntersectionForPlaying={observeIntersection}\n            noPlay={noPlay}\n          />\n        ) : hasAnimatedThumb ? (\n          <AnimatedSticker\n            className={transitionClassNames}\n            tgsUrl={mediaData}\n            size={size}\n            play={shouldPlay}\n            isLowPriority={!selectIsAlwaysHighPriorityEmoji(getGlobal(), stickerSet)}\n            sharedCanvas={sharedCanvasRef?.current || undefined}\n            sharedCanvasCoords={coords}\n            forceAlways={forcePlayback}\n          />\n        ) : (hasVideoThumb && !shouldFallbackToSticker) ? (\n          <OptimizedVideo\n            className={buildClassName(styles.video, transitionClassNames)}\n            src={mediaData}\n            canPlay={shouldPlay}\n            style={colorFilter}\n            isPriority={forcePlayback}\n            loop\n            disablePictureInPicture\n          />\n        ) : (\n          <img\n            src={mediaData || firstStickerMediaData}\n            style={colorFilter}\n            className={buildClassName(styles.image, transitionClassNames)}\n            alt=\"\"\n            draggable={false}\n          />\n        )\n      ) : (\n        getFirstLetters(stickerSet.title, 2)\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerSetCover);\n","import type { MouseEvent as ReactMouseEvent, ReactNode } from 'react';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiBotInlineMediaResult, ApiSticker } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTime } from '../../util/serverTime';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useDynamicColorListener from '../../hooks/stickers/useDynamicColorListener';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport Icon from './icons/Icon';\nimport Sparkles from './Sparkles';\nimport StickerView from './StickerView';\n\nimport './StickerButton.scss';\n\ntype OwnProps<T> = {\n  sticker: ApiSticker;\n  size: number;\n  noPlay?: boolean;\n  title?: string;\n  className?: string;\n  noContextMenu?: boolean;\n  isSavedMessages?: boolean;\n  isStatusPicker?: boolean;\n  canViewSet?: boolean;\n  isSelected?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldIgnorePremium?: boolean;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n  withTranslucentThumb?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection: ObserveFn;\n  observeIntersectionForShowing?: ObserveFn;\n  noShowPremium?: boolean;\n  onClick?: (arg: OwnProps<T>['clickArg'], isSilent?: boolean, shouldSchedule?: boolean) => void;\n  clickArg: T;\n  onFaveClick?: (sticker: ApiSticker) => void;\n  onUnfaveClick?: (sticker: ApiSticker) => void;\n  onRemoveRecentClick?: (sticker: ApiSticker) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n  isEffectEmoji?: boolean;\n  withSparkles?: boolean;\n};\n\nconst contentForStatusMenuContext = [\n  { title: 'SetTimeoutFor.Hours', value: 1, arg: 3600 },\n  { title: 'SetTimeoutFor.Hours', value: 2, arg: 7200 },\n  { title: 'SetTimeoutFor.Hours', value: 8, arg: 28800 },\n  { title: 'SetTimeoutFor.Days', value: 1, arg: 86400 },\n  { title: 'SetTimeoutFor.Days', value: 2, arg: 172800 },\n];\n\nconst StickerButton = <T extends number | ApiSticker | ApiBotInlineMediaResult | undefined = undefined>({\n  sticker,\n  size,\n  noPlay,\n  title,\n  className,\n  noContextMenu,\n  isSavedMessages,\n  isStatusPicker,\n  canViewSet,\n  observeIntersection,\n  observeIntersectionForShowing,\n  isSelected,\n  isCurrentUserPremium,\n  shouldIgnorePremium,\n  noShowPremium,\n  sharedCanvasRef,\n  withTranslucentThumb,\n  forcePlayback,\n  onClick,\n  clickArg,\n  onFaveClick,\n  onUnfaveClick,\n  onRemoveRecentClick,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n  isEffectEmoji,\n  withSparkles,\n}: OwnProps<T>) => {\n  const { openStickerSet, openPremiumModal, setEmojiStatus } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const hasCustomColor = sticker.shouldUseTextColor;\n  const customColor = useDynamicColorListener(ref, undefined, !hasCustomColor);\n\n  const {\n    id, stickerSetInfo,\n  } = sticker;\n\n  const isPremium = (!sticker.isFree && isEffectEmoji) || sticker.hasEffect;\n  const isCustomEmoji = sticker.isCustomEmoji || isEffectEmoji;\n  const isLocked = !isCurrentUserPremium && isPremium && !shouldIgnorePremium;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const shouldLoad = isIntersecting;\n  const shouldPlay = isIntersecting && !noPlay;\n\n  const isIntesectingForShowing = useIsIntersecting(ref, observeIntersectionForShowing);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n  const shouldRenderContextMenu = Boolean(!noContextMenu && contextMenuAnchor);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => {\n    return isStatusPicker ? menuRef.current : ref.current!.querySelector('.sticker-context-menu .bubble');\n  });\n  const getLayout = useLastCallback(() => ({ withPortal: isStatusPicker, shouldAvoidNegativePosition: true }));\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onContextMenuOpen?.();\n    } else {\n      onContextMenuClose?.();\n    }\n  }, [isContextMenuOpen, onContextMenuClose, onContextMenuOpen]);\n\n  useEffect(() => {\n    if (!isIntersecting) handleContextMenuClose();\n  }, [handleContextMenuClose, isIntersecting]);\n\n  const handleClick = () => {\n    if (isContextMenuOpen) return;\n    if (isLocked) {\n      if (isEffectEmoji) {\n        openPremiumModal({ initialSection: 'effects' });\n      } else {\n        openPremiumModal({ initialSection: 'premium_stickers' });\n      }\n      return;\n    }\n    onClick?.(clickArg);\n  };\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handleRemoveClick = useLastCallback((e: ReactMouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n    e.preventDefault();\n\n    onRemoveRecentClick!(sticker);\n  });\n\n  const handleContextRemoveRecent = useLastCallback(() => {\n    onRemoveRecentClick!(sticker);\n  });\n\n  const handleContextUnfave = useLastCallback(() => {\n    onUnfaveClick!(sticker);\n  });\n\n  const handleContextFave = useLastCallback(() => {\n    onFaveClick!(sticker);\n  });\n\n  const handleSendQuiet = useLastCallback(() => {\n    onClick?.(clickArg, true);\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    onClick?.(clickArg, undefined, true);\n  });\n\n  const handleOpenSet = useLastCallback(() => {\n    openStickerSet({ stickerSetInfo });\n  });\n\n  const handleEmojiStatusExpiresClick = useLastCallback((e: React.SyntheticEvent, duration = 0) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    handleContextMenuClose();\n    onContextMenuClick?.();\n    setEmojiStatus({\n      emojiStatus: { type: 'regular', documentId: sticker.id, until: getServerTime() + duration },\n    });\n  });\n\n  const shouldShowCloseButton = !IS_TOUCH_ENV && onRemoveRecentClick;\n\n  const fullClassName = buildClassName(\n    'StickerButton',\n    onClick && 'interactive',\n    isSelected && 'selected',\n    isCustomEmoji && 'custom-emoji',\n    isEffectEmoji && 'effect-emoji',\n    className,\n  );\n\n  const contextMenuItems = useMemo(() => {\n    if (!shouldRenderContextMenu || noContextMenu || (isCustomEmoji && !isStatusPicker)) return [];\n\n    const items: ReactNode[] = [];\n\n    if (isCustomEmoji) {\n      contentForStatusMenuContext.forEach((item) => {\n        items.push(\n          <MenuItem onClick={handleEmojiStatusExpiresClick} clickArg={item.arg}>\n            {lang(item.title, item.value, 'i')}\n          </MenuItem>,\n        );\n      });\n\n      return items;\n    }\n\n    if (onUnfaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextUnfave}>\n          {lang('Stickers.RemoveFromFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (onFaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextFave}>\n          {lang('Stickers.AddToFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (!isLocked && onClick) {\n      if (!isSavedMessages) {\n        items.push(<MenuItem onClick={handleSendQuiet} icon=\"muted\">{lang('SendWithoutSound')}</MenuItem>);\n      }\n      items.push(\n        <MenuItem onClick={handleSendScheduled} icon=\"calendar\">\n          {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n        </MenuItem>,\n      );\n    }\n\n    if (canViewSet) {\n      items.push(\n        <MenuItem onClick={handleOpenSet} icon=\"stickers\">\n          {lang('ViewPackPreview')}\n        </MenuItem>,\n      );\n    }\n    if (onRemoveRecentClick) {\n      items.push(\n        <MenuItem icon=\"delete\" onClick={handleContextRemoveRecent}>\n          {lang('DeleteFromRecent')}\n        </MenuItem>,\n      );\n    }\n    return items;\n  }, [\n    shouldRenderContextMenu, noContextMenu, isCustomEmoji, isStatusPicker, onUnfaveClick, onFaveClick, isLocked,\n    onClick, canViewSet, onRemoveRecentClick, handleEmojiStatusExpiresClick, lang, handleContextUnfave,\n    handleContextFave, isSavedMessages, handleSendScheduled, handleSendQuiet, handleOpenSet, handleContextRemoveRecent,\n  ]);\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      title={title || (sticker?.emoji)}\n      data-sticker-id={id}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {withSparkles && <Sparkles preset=\"button\" /> }\n      {isIntesectingForShowing && (\n        <StickerView\n          containerRef={ref}\n          sticker={sticker}\n          isSmall\n          size={size}\n          shouldLoop\n          shouldPreloadPreview\n          noLoad={!shouldLoad}\n          noPlay={!shouldPlay}\n          noVideoOnMobile\n          withSharedAnimation\n          sharedCanvasRef={sharedCanvasRef}\n          withTranslucentThumb={withTranslucentThumb}\n          customColor={customColor}\n          forceAlways={forcePlayback}\n        />\n      )}\n      {!noShowPremium && isLocked && (\n        <div\n          className=\"sticker-locked\"\n        >\n          <Icon name=\"lock-badge\" />\n        </div>\n      )}\n      {!noShowPremium && isPremium && !isLocked && (\n        <div className=\"sticker-premium\">\n          <Icon name=\"star\" />\n        </div>\n      )}\n      {shouldShowCloseButton && (\n        <Button\n          className=\"sticker-remove-button\"\n          color=\"dark\"\n          round\n          noFastClick\n          onClick={handleRemoveClick}\n        >\n          <Icon name=\"close\" />\n        </Button>\n      )}\n      {Boolean(contextMenuItems.length) && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          className=\"sticker-context-menu\"\n          autoClose\n          withPortal={isStatusPicker}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {contextMenuItems}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerButton);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AVrrYEbM\",\"selected\":\"QkdO_lz1\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReactionWithPaid } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { EMOJI_SIZE_PICKER } from '../../../config';\nimport { getDocumentMediaHash, isSameReaction } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { LOCAL_TGS_URLS } from '../helpers/animatedAssets';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCoordsInSharedCanvas from '../../../hooks/useCoordsInSharedCanvas';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\n\nimport AnimatedIconWithPreview from '../AnimatedIconWithPreview';\nimport CustomEmoji from '../CustomEmoji';\n\nimport styles from './ReactionEmoji.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReactionWithPaid;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  isSelected?: boolean;\n  loadAndPlay?: boolean;\n  observeIntersection?: ObserveFn;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef?: React.RefObject<HTMLCanvasElement>;\n  forcePlayback?: boolean;\n  onClick: (reaction: ApiReactionWithPaid) => void;\n  onContextMenu?: (reaction: ApiReactionWithPaid) => void;\n};\n\nconst ReactionEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  isSelected,\n  loadAndPlay,\n  observeIntersection,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  forcePlayback,\n  onClick,\n  onContextMenu,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isCustom = reaction.type === 'custom';\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const thumbDataUri = availableReaction?.staticIcon?.thumbnail?.dataUri;\n  const animationId = availableReaction?.selectAnimation?.id;\n  const coords = useCoordsInSharedCanvas(ref, sharedCanvasRef);\n  const mediaData = useMedia(\n    availableReaction?.selectAnimation ? getDocumentMediaHash(availableReaction.selectAnimation, 'full') : undefined,\n    !animationId,\n  );\n\n  const {\n    isContextMenuOpen,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, reaction.type !== 'paid', undefined, undefined, undefined, true);\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onContextMenu?.(reaction);\n\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, onContextMenu, handleContextMenuHide, isContextMenuOpen, reaction]);\n\n  const tgsUrl = reaction.type === 'paid' ? LOCAL_TGS_URLS.StarReaction : mediaData;\n  const handleClick = useLastCallback(() => {\n    onClick(reaction);\n  });\n\n  const transitionClassNames = useMediaTransitionDeprecated(mediaData);\n  const fullClassName = buildClassName(\n    styles.root,\n    isSelected && styles.selected,\n    !isCustom && 'sticker-reaction',\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      onClick={handleClick}\n      title={availableReaction?.title}\n      data-sticker-id={isCustom ? reaction.documentId : undefined}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n    >\n      {isCustom ? (\n        <CustomEmoji\n          ref={ref}\n          documentId={reaction.documentId}\n          size={EMOJI_SIZE_PICKER}\n          noPlay={!loadAndPlay}\n          observeIntersectionForPlaying={observeIntersection}\n          sharedCanvasRef={sharedCanvasRef}\n          sharedCanvasHqRef={sharedCanvasHqRef}\n          withTranslucentThumb\n          forceAlways={forcePlayback}\n        />\n      ) : (\n        <AnimatedIconWithPreview\n          tgsUrl={tgsUrl}\n          thumbDataUri={thumbDataUri}\n          play={loadAndPlay}\n          noLoop={false}\n          size={EMOJI_SIZE_PICKER}\n          isLowPriority\n          className={transitionClassNames}\n          sharedCanvas={sharedCanvasRef!.current || undefined}\n          sharedCanvasCoords={coords}\n          forceAlways={forcePlayback}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionEmoji);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAvailableReaction, ApiEmojiStatusType, ApiReactionWithPaid, ApiSticker,\n} from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { StickerSetOrReactionsSetOrRecent } from '../../types';\n\nimport {\n  COLLECTIBLE_STATUS_SET_ID,\n  DEFAULT_STATUS_ICON_ID,\n  DEFAULT_TOPIC_ICON_STICKER_ID,\n  EFFECT_EMOJIS_SET_ID,\n  EFFECT_STICKERS_SET_ID,\n  EMOJI_SIZE_PICKER,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  STICKER_SIZE_PICKER,\n} from '../../config';\nimport { getReactionKey } from '../../global/helpers';\nimport { selectIsAlwaysHighPriorityEmoji, selectIsSetPremium } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\nimport useResizeObserver from '../../hooks/useResizeObserver';\nimport useWindowSize from '../../hooks/window/useWindowSize';\n\nimport Button from '../ui/Button';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport Icon from './icons/Icon';\nimport ReactionEmoji from './reactions/ReactionEmoji';\nimport StickerButton from './StickerButton';\n\nimport grey from '../../assets/icons/forumTopic/grey.svg';\n\ntype OwnProps = {\n  stickerSet: StickerSetOrReactionsSetOrRecent;\n  loadAndPlay: boolean;\n  index: number;\n  idPrefix: string;\n  isNearActive: boolean;\n  favoriteStickers?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isStatusPicker?: boolean;\n  isReactionPicker?: boolean;\n  folderIconPick?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldHideHeader?: boolean;\n  selectedReactionIds?: string[];\n  withDefaultTopicIcon?: boolean;\n  withDefaultStatusIcon?: boolean;\n  isChatEmojiSet?: boolean;\n  isChatStickerSet?: boolean;\n  isTranslucent?: boolean;\n  noContextMenus?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection?: ObserveFn;\n  observeIntersectionForPlayingItems: ObserveFn;\n  observeIntersectionForShowingItems: ObserveFn;\n  availableReactions?: ApiAvailableReaction[];\n  onStickerSelect?: (sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onReactionSelect?: (reaction: ApiReactionWithPaid) => void;\n  onReactionContext?: (reaction: ApiReactionWithPaid) => void;\n  onStickerUnfave?: (sticker: ApiSticker) => void;\n  onStickerFave?: (sticker: ApiSticker) => void;\n  onStickerRemoveRecent?: (sticker: ApiSticker) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  collectibleStatuses?: ApiEmojiStatusType[];\n};\n\nconst ITEMS_PER_ROW_FALLBACK = 8;\nconst ITEMS_MOBILE_PER_ROW_FALLBACK = 7;\nconst ITEMS_MINI_MOBILE_PER_ROW_FALLBACK = 6;\nconst MOBILE_WIDTH_THRESHOLD_PX = 440;\nconst MINI_MOBILE_WIDTH_THRESHOLD_PX = 362;\n\nconst StickerSet: FC<OwnProps & StateProps> = ({\n  stickerSet,\n  loadAndPlay,\n  index,\n  idPrefix,\n  isNearActive,\n  favoriteStickers,\n  availableReactions,\n  isSavedMessages,\n  folderIconPick,\n  isStatusPicker,\n  isReactionPicker,\n  isCurrentUserPremium,\n  shouldHideHeader,\n  withDefaultTopicIcon,\n  selectedReactionIds,\n  withDefaultStatusIcon,\n  isChatEmojiSet,\n  isChatStickerSet,\n  isTranslucent,\n  noContextMenus,\n  forcePlayback,\n  observeIntersection,\n  observeIntersectionForPlayingItems,\n  observeIntersectionForShowingItems,\n  onReactionSelect,\n  onReactionContext,\n  onStickerSelect,\n  onStickerUnfave,\n  onStickerFave,\n  onStickerRemoveRecent,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n  collectibleStatuses,\n}) => {\n  const {\n    clearRecentStickers,\n    clearRecentCustomEmoji,\n    clearRecentReactions,\n    openPremiumModal,\n    toggleStickerSet,\n    loadStickers,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n  const { width: windowWidth } = useWindowSize();\n  const [isConfirmModalOpen, openConfirmModal, closeConfirmModal] = useFlag();\n  const { isMobile } = useAppLayout();\n\n  const [itemsPerRow, setItemsPerRow] = useState(getItemsPerRowFallback(windowWidth));\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection ?? observeIntersectionForShowingItems);\n  const transitionClassNames = useMediaTransitionDeprecated(isIntersecting);\n\n  // `isNearActive` is set in advance during animation, but it is not reliable for short sets\n  const shouldRender = isNearActive || isIntersecting;\n\n  const stickerMarginPx = isMobile ? 8 : 4;\n  const emojiMarginPx = isMobile ? 8 : 10;\n  const emojiVerticalMarginPx = isMobile ? 8 : 4;\n  const isRecent = stickerSet.id === RECENT_SYMBOL_SET_ID;\n  const isStatusCollectible = stickerSet.id === COLLECTIBLE_STATUS_SET_ID;\n  const isFavorite = stickerSet.id === FAVORITE_SYMBOL_SET_ID;\n  const isPopular = stickerSet.id === POPULAR_SYMBOL_SET_ID;\n  const isEmoji = stickerSet.isEmoji;\n  const isPremiumSet = !isRecent && selectIsSetPremium(stickerSet);\n\n  const handleClearRecent = useLastCallback(() => {\n    if (isReactionPicker) {\n      clearRecentReactions();\n    } else if (isEmoji) {\n      clearRecentCustomEmoji();\n    } else {\n      clearRecentStickers();\n    }\n    closeConfirmModal();\n  });\n\n  const handleAddClick = useLastCallback(() => {\n    if (isPremiumSet && !isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'animated_emoji',\n      });\n    } else {\n      toggleStickerSet({\n        stickerSetId: stickerSet.id,\n      });\n    }\n  });\n\n  const handleDefaultTopicIconClick = useLastCallback(() => {\n    onStickerSelect?.({\n      mediaType: 'sticker',\n      id: DEFAULT_TOPIC_ICON_STICKER_ID,\n      isLottie: false,\n      isVideo: false,\n      stickerSetInfo: {\n        shortName: 'dummy',\n      },\n    } satisfies ApiSticker);\n  });\n\n  const handleDefaultStatusIconClick = useLastCallback(() => {\n    onStickerSelect?.({\n      mediaType: 'sticker',\n      id: DEFAULT_STATUS_ICON_ID,\n      isLottie: false,\n      isVideo: false,\n      stickerSetInfo: {\n        shortName: 'dummy',\n      },\n    } satisfies ApiSticker);\n  });\n\n  const itemSize = isEmoji ? EMOJI_SIZE_PICKER : STICKER_SIZE_PICKER;\n  const margin = isEmoji ? emojiMarginPx : stickerMarginPx;\n  const verticalMargin = isEmoji ? emojiVerticalMarginPx : stickerMarginPx;\n\n  const calculateItemsPerRow = useLastCallback((width: number) => {\n    if (!width) {\n      return getItemsPerRowFallback(windowWidth);\n    }\n\n    return Math.floor((width + margin) / (itemSize + margin));\n  });\n\n  const handleResize = useLastCallback((entry: ResizeObserverEntry) => {\n    setItemsPerRow(calculateItemsPerRow(entry.contentRect.width));\n  });\n\n  useResizeObserver(ref, handleResize);\n\n  useEffect(() => {\n    if (!ref.current) return;\n    setItemsPerRow(calculateItemsPerRow(ref.current.clientWidth));\n  }, [calculateItemsPerRow]);\n\n  useEffect(() => {\n    if (shouldRender && !stickerSet.stickers?.length && !stickerSet.reactions?.length && stickerSet.accessHash) {\n      loadStickers({\n        stickerSetInfo: {\n          id: stickerSet.id,\n          accessHash: stickerSet.accessHash,\n        },\n      });\n    }\n  }, [shouldRender, loadStickers, stickerSet]);\n\n  const isLocked = !folderIconPick && !isSavedMessages && !isCurrentUserPremium && isPremiumSet && !isChatEmojiSet;\n\n  const isInstalled = stickerSet.installedDate && !stickerSet.isArchived;\n\n  const canCut = !isInstalled && stickerSet.id !== RECENT_SYMBOL_SET_ID\n    && stickerSet.id !== POPULAR_SYMBOL_SET_ID && stickerSet.id !== EFFECT_EMOJIS_SET_ID\n    && stickerSet.id !== EFFECT_STICKERS_SET_ID && !isChatEmojiSet && !isChatStickerSet;\n\n  const [isCut, , expand] = useFlag(canCut);\n  const itemsBeforeCutout = itemsPerRow * 3 - 1;\n  const totalItemsCount = (withDefaultTopicIcon || withDefaultStatusIcon) ? stickerSet.count + 1 : stickerSet.count;\n\n  const itemHeight = itemSize + verticalMargin;\n  const heightWhenCut = Math.ceil(Math.min(itemsBeforeCutout, totalItemsCount) / itemsPerRow)\n    * itemHeight - verticalMargin;\n  const height = isCut ? heightWhenCut : Math.ceil(totalItemsCount / itemsPerRow) * itemHeight - verticalMargin;\n\n  const favoriteStickerIdsSet = useMemo(() => (\n    favoriteStickers ? new Set(favoriteStickers.map(({ id }) => id)) : undefined\n  ), [favoriteStickers]);\n  const collectibleEmojiIdsSet = useMemo(() => (\n    collectibleStatuses ? new Set(collectibleStatuses.map(({ documentId }) => documentId)) : undefined\n  ), [collectibleStatuses]);\n  const withAddSetButton = !shouldHideHeader && !isRecent && !isStatusCollectible\n   && isEmoji && !isPopular && !isChatEmojiSet\n    && (!isInstalled || (!isCurrentUserPremium && !isSavedMessages));\n  const addSetButtonText = useMemo(() => {\n    if (isLocked) {\n      if (isInstalled) return lang('lng_emoji_premium_restore');\n      return lang('Unlock');\n    }\n\n    return lang('Add');\n  }, [isLocked, lang, isInstalled]);\n\n  return (\n    <div\n      ref={ref}\n      key={stickerSet.id}\n      id={`${idPrefix}-${index}`}\n      className={\n        buildClassName('symbol-set', isLocked && 'symbol-set-locked')\n      }\n    >\n      {!shouldHideHeader && (\n        <div className=\"symbol-set-header\">\n          <p className={buildClassName('symbol-set-title', withAddSetButton && 'symbol-set-title-external')}>\n            {isLocked && <Icon name=\"lock-badge\" className=\"symbol-set-locked-icon\" />}\n            <span className=\"symbol-set-name\">{stickerSet.title}</span>\n            {(isChatEmojiSet || isChatStickerSet) && (\n              <span className=\"symbol-set-chat\">{lang(isChatEmojiSet ? 'GroupEmoji' : 'GroupStickers')}</span>\n            )}\n            {withAddSetButton && Boolean(stickerSet.stickers) && (\n              <span className=\"symbol-set-amount\">\n                {lang(isEmoji ? 'EmojiCount' : 'Stickers', stickerSet.stickers.length, 'i')}\n              </span>\n            )}\n          </p>\n          {isRecent && (\n            <Icon className=\"symbol-set-remove\" name=\"close\" onClick={openConfirmModal} />\n          )}\n          {withAddSetButton && (\n            <Button\n              className=\"symbol-set-add-button\"\n              withPremiumGradient={isPremiumSet && !isCurrentUserPremium}\n              onClick={handleAddClick}\n              pill\n              size=\"tiny\"\n              fluid\n            >\n              {addSetButtonText}\n            </Button>\n          )}\n        </div>\n      )}\n      <div\n        className={buildClassName(\n          'symbol-set-container shared-canvas-container',\n          transitionClassNames,\n          stickerSet.id === EFFECT_EMOJIS_SET_ID && 'effect-emojis',\n        )}\n        style={`height: ${height}px;`}\n      >\n        <canvas\n          ref={sharedCanvasRef}\n          className=\"shared-canvas\"\n          style={canCut ? `height: ${heightWhenCut}px;` : undefined}\n        />\n        {(isRecent || isFavorite || canCut) && <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />}\n        {withDefaultTopicIcon && (\n          <Button\n            className=\"StickerButton custom-emoji\"\n            color=\"translucent\"\n            onClick={handleDefaultTopicIconClick}\n            key=\"default-topic-icon\"\n          >\n            <img src={grey} alt=\"Reset\" className=\"sticker-media\" draggable={false} />\n          </Button>\n        )}\n        {withDefaultStatusIcon && (\n          <Button\n            className=\"StickerButton custom-emoji status-default\"\n            color=\"translucent\"\n            onClick={handleDefaultStatusIconClick}\n            key=\"default-status-icon\"\n          >\n            <Icon name=\"star\" />\n          </Button>\n        )}\n        {shouldRender && stickerSet.reactions?.map((reaction) => {\n          const reactionId = getReactionKey(reaction);\n          const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n          return (\n            <ReactionEmoji\n              key={`${stickerSet.id}_${reactionId}`}\n              reaction={reaction}\n              isSelected={isSelected}\n              loadAndPlay={loadAndPlay}\n              availableReactions={availableReactions}\n              observeIntersection={observeIntersectionForPlayingItems}\n              onClick={onReactionSelect!}\n              onContextMenu={onReactionContext}\n              sharedCanvasRef={sharedCanvasRef}\n              sharedCanvasHqRef={sharedCanvasHqRef}\n              forcePlayback={forcePlayback}\n            />\n          );\n        })}\n        {shouldRender && stickerSet.stickers?.slice(0, isCut ? itemsBeforeCutout : stickerSet.stickers.length)\n          .map((sticker, i) => {\n            const isHqEmoji = (isRecent || isFavorite)\n              && selectIsAlwaysHighPriorityEmoji(getGlobal(), sticker.stickerSetInfo);\n            const canvasRef = (canCut && i >= itemsBeforeCutout) || isHqEmoji\n              ? sharedCanvasHqRef\n              : sharedCanvasRef;\n            const reactionId = sticker.isCustomEmoji ? sticker.id : sticker.emoji;\n            const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n            const withSparkles = sticker.id === COLLECTIBLE_STATUS_SET_ID\n            || collectibleEmojiIdsSet?.has(sticker.id);\n\n            return (\n              <StickerButton\n                key={sticker.id}\n                sticker={sticker}\n                size={itemSize}\n                observeIntersection={observeIntersectionForPlayingItems}\n                observeIntersectionForShowing={observeIntersectionForShowingItems}\n                noPlay={!loadAndPlay}\n                isSavedMessages={isSavedMessages}\n                isStatusPicker={isStatusPicker}\n                canViewSet\n                noContextMenu={noContextMenus}\n                isCurrentUserPremium={isCurrentUserPremium}\n                shouldIgnorePremium={isChatEmojiSet}\n                sharedCanvasRef={canvasRef}\n                withTranslucentThumb={isTranslucent}\n                onClick={onStickerSelect}\n                clickArg={sticker}\n                isSelected={isSelected}\n                onUnfaveClick={isFavorite && favoriteStickerIdsSet?.has(sticker.id) ? onStickerUnfave : undefined}\n                onFaveClick={!favoriteStickerIdsSet?.has(sticker.id) ? onStickerFave : undefined}\n                onRemoveRecentClick={isRecent ? onStickerRemoveRecent : undefined}\n                onContextMenuOpen={onContextMenuOpen}\n                onContextMenuClose={onContextMenuClose}\n                onContextMenuClick={onContextMenuClick}\n                forcePlayback={forcePlayback}\n                isEffectEmoji={stickerSet.id === EFFECT_EMOJIS_SET_ID}\n                noShowPremium={isCurrentUserPremium\n                  && (stickerSet.id === EFFECT_STICKERS_SET_ID || stickerSet.id === EFFECT_EMOJIS_SET_ID)}\n                withSparkles={withSparkles}\n              />\n            );\n          })}\n        {isCut && totalItemsCount > itemsBeforeCutout && (\n          <Button\n            className=\"StickerButton custom-emoji set-expand\"\n            round\n            color=\"translucent\"\n            onClick={expand}\n            key=\"more\"\n          >\n            +{totalItemsCount - itemsBeforeCutout}\n          </Button>\n        )}\n      </div>\n\n      {isRecent && (\n        <ConfirmDialog\n          text={lang(isReactionPicker ? 'ClearRecentReactionsAlertMessage' : 'ClearRecentStickersAlertMessage')}\n          isOpen={isConfirmModalOpen}\n          onClose={closeConfirmModal}\n          confirmHandler={handleClearRecent}\n          confirmIsDestructive\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const collectibleStatuses = global.collectibleEmojiStatuses?.statuses;\n\n    return { collectibleStatuses };\n  },\n)(StickerSet));\n\nfunction getItemsPerRowFallback(windowWidth: number): number {\n  return windowWidth > MOBILE_WIDTH_THRESHOLD_PX\n    ? ITEMS_PER_ROW_FALLBACK\n    : (windowWidth < MINI_MOBILE_WIDTH_THRESHOLD_PX\n      ? ITEMS_MINI_MOBILE_PER_ROW_FALLBACK\n      : ITEMS_MOBILE_PER_ROW_FALLBACK);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"lq8BD6Hc\",\"main\":\"p7c8y0LH\",\"hasHeader\":\"zTGriBHY\",\"main_customEmoji\":\"U0BL1VvK\",\"mainCustomEmoji\":\"U0BL1VvK\",\"header\":\"Qn3lBUNs\",\"headerWithBorder\":\"HMspKpNp\",\"stickerCover\":\"YKO0Obwy\",\"activated\":\"y02WwQk6\",\"pickerDisabled\":\"BZfaP1GD\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Qk9PEGRE\",\"activated\":\"WYeuJNQx\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiEmojiStatusType,\n  ApiReaction, ApiReactionWithPaid, ApiSticker, ApiStickerSet,\n} from '../../api/types';\nimport type { StickerSetOrReactionsSetOrRecent } from '../../types';\n\nimport {\n  COLLECTIBLE_STATUS_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  SLIDE_TRANSITION_DURATION,\n  STICKER_PICKER_MAX_SHARED_COVERS,\n  STICKER_SIZE_PICKER_HEADER,\n  TOP_SYMBOL_SET_ID,\n} from '../../config';\nimport { isSameReaction } from '../../global/helpers';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChatFullInfo,\n  selectIsAlwaysHighPriorityEmoji,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n} from '../../global/selectors';\nimport animateHorizontalScroll from '../../util/animateHorizontalScroll';\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { pickTruthy, unique, uniqueByField } from '../../util/iteratees';\nimport { REM } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevDuringAnimation from '../../hooks/usePrevDuringAnimation';\nimport useScrolledState from '../../hooks/useScrolledState';\nimport useAsyncRendering from '../right/hooks/useAsyncRendering';\nimport { useStickerPickerObservers } from './hooks/useStickerPickerObservers';\n\nimport StickerSetCover from '../middle/composer/StickerSetCover';\nimport Button from '../ui/Button';\nimport Loading from '../ui/Loading';\nimport Icon from './icons/Icon';\nimport StickerButton from './StickerButton';\nimport StickerSet from './StickerSet';\n\nimport pickerStyles from '../middle/composer/StickerPicker.module.scss';\nimport styles from './CustomEmojiPicker.module.scss';\n\ntype OwnProps = {\n  chatId?: string;\n  className?: string;\n  pickerListClassName?: string;\n  isHidden?: boolean;\n  loadAndPlay: boolean;\n  idPrefix?: string;\n  withDefaultTopicIcons?: boolean;\n  selectedReactionIds?: string[];\n  isStatusPicker?: boolean;\n  isReactionPicker?: boolean;\n  isTranslucent?: boolean;\n  onCustomEmojiSelect: (sticker: ApiSticker) => void;\n  onReactionSelect?: (reaction: ApiReactionWithPaid) => void;\n  onReactionContext?: (reaction: ApiReactionWithPaid) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  customEmojisById?: Record<string, ApiSticker>;\n  recentCustomEmojiIds?: string[];\n  recentStatusEmojis?: ApiSticker[];\n  collectibleStatuses?: ApiEmojiStatusType[];\n  chatEmojiSetId?: string;\n  topReactions?: ApiReaction[];\n  recentReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  availableReactions?: ApiAvailableReaction[];\n  addedCustomEmojiIds?: string[];\n  defaultTopicIconsId?: string;\n  defaultStatusIconsId?: string;\n  customEmojiFeaturedIds?: string[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n  isWithPaidReaction?: boolean;\n};\n\nconst HEADER_BUTTON_WIDTH = 2.5 * REM; // px (including margin)\n\nconst DEFAULT_ID_PREFIX = 'custom-emoji-set';\nconst TOP_REACTIONS_COUNT = 16;\nconst RECENT_REACTIONS_COUNT = 32;\nconst RECENT_DEFAULT_STATUS_COUNT = 7;\nconst FADED_BUTTON_SET_IDS = new Set([RECENT_SYMBOL_SET_ID, FAVORITE_SYMBOL_SET_ID, POPULAR_SYMBOL_SET_ID]);\nconst STICKER_SET_IDS_WITH_COVER = new Set([\n  RECENT_SYMBOL_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n]);\n\nconst CustomEmojiPicker: FC<OwnProps & StateProps> = ({\n  className,\n  pickerListClassName,\n  isHidden,\n  loadAndPlay,\n  addedCustomEmojiIds,\n  customEmojisById,\n  recentCustomEmojiIds,\n  selectedReactionIds,\n  recentStatusEmojis,\n  collectibleStatuses,\n  stickerSetsById,\n  chatEmojiSetId,\n  topReactions,\n  recentReactions,\n  availableReactions,\n  idPrefix = DEFAULT_ID_PREFIX,\n  customEmojiFeaturedIds,\n  canAnimate,\n  isReactionPicker,\n  isStatusPicker,\n  isTranslucent,\n  isSavedMessages,\n  isCurrentUserPremium,\n  withDefaultTopicIcons,\n  defaultTopicIconsId,\n  defaultStatusIconsId,\n  defaultTagReactions,\n  isWithPaidReaction,\n  onCustomEmojiSelect,\n  onReactionSelect,\n  onReactionContext,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n\n  const { isMobile } = useAppLayout();\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const recentCustomEmojis = useMemo(() => {\n    return isStatusPicker\n      ? recentStatusEmojis\n      : Object.values(pickTruthy(customEmojisById!, recentCustomEmojiIds!));\n  }, [customEmojisById, isStatusPicker, recentCustomEmojiIds, recentStatusEmojis]);\n\n  const collectibleStatusEmojis = useMemo(() => {\n    const collectibleStatusEmojiIds = collectibleStatuses?.map((status) => status.documentId);\n    return customEmojisById && collectibleStatusEmojiIds?.map((id) => customEmojisById[id]).filter(Boolean);\n  }, [customEmojisById, collectibleStatuses]);\n\n  const prefix = `${idPrefix}-custom-emoji`;\n  const {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForShowingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  } = useStickerPickerObservers(containerRef, headerRef, prefix, isHidden);\n\n  const canLoadAndPlay = usePrevDuringAnimation(loadAndPlay || undefined, SLIDE_TRANSITION_DURATION);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const areAddedLoaded = Boolean(addedCustomEmojiIds);\n\n  const allSets = useMemo(() => {\n    const defaultSets: StickerSetOrReactionsSetOrRecent[] = [];\n\n    if (isReactionPicker && isSavedMessages) {\n      if (defaultTagReactions?.length) {\n        defaultSets.push({\n          id: TOP_SYMBOL_SET_ID,\n          accessHash: '',\n          title: oldLang('PremiumPreviewTags'),\n          reactions: defaultTagReactions,\n          count: defaultTagReactions.length,\n          isEmoji: true,\n        });\n      }\n    }\n\n    if (isReactionPicker && !isSavedMessages) {\n      const topReactionsSlice: ApiReactionWithPaid[] = topReactions?.slice(0, TOP_REACTIONS_COUNT) || [];\n      if (isWithPaidReaction) {\n        topReactionsSlice.unshift({ type: 'paid' });\n      }\n      if (topReactionsSlice?.length) {\n        defaultSets.push({\n          id: TOP_SYMBOL_SET_ID,\n          accessHash: '',\n          title: oldLang('Reactions'),\n          reactions: topReactionsSlice,\n          count: topReactionsSlice.length,\n          isEmoji: true,\n        });\n      }\n\n      const cleanRecentReactions = (recentReactions || [])\n        .filter((reaction) => !topReactionsSlice.some((topReaction) => isSameReaction(topReaction, reaction)))\n        .slice(0, RECENT_REACTIONS_COUNT);\n      const cleanAvailableReactions = (availableReactions || [])\n        .filter(({ isInactive }) => !isInactive)\n        .map(({ reaction }) => reaction)\n        .filter((reaction) => {\n          return !topReactionsSlice.some((topReaction) => isSameReaction(topReaction, reaction))\n            && !cleanRecentReactions.some((topReaction) => isSameReaction(topReaction, reaction));\n        });\n      if (cleanAvailableReactions?.length || cleanRecentReactions?.length) {\n        const isPopular = !cleanRecentReactions?.length;\n        const allRecentReactions = cleanRecentReactions.concat(cleanAvailableReactions);\n        defaultSets.push({\n          id: isPopular ? POPULAR_SYMBOL_SET_ID : RECENT_SYMBOL_SET_ID,\n          accessHash: '',\n          title: oldLang(isPopular ? 'PopularReactions' : 'RecentStickers'),\n          reactions: allRecentReactions,\n          count: allRecentReactions.length,\n          isEmoji: true,\n        });\n      }\n    } else if (isStatusPicker) {\n      const defaultStatusIconsPack = stickerSetsById[defaultStatusIconsId!];\n      if (defaultStatusIconsPack?.stickers?.length) {\n        const stickers = uniqueByField(defaultStatusIconsPack.stickers\n          .slice(0, RECENT_DEFAULT_STATUS_COUNT)\n          .concat(recentCustomEmojis || []), 'id');\n        defaultSets.push({\n          ...defaultStatusIconsPack,\n          stickers,\n          count: stickers.length,\n          id: RECENT_SYMBOL_SET_ID,\n          title: oldLang('RecentStickers'),\n          isEmoji: true,\n        });\n      }\n      if (collectibleStatusEmojis?.length) {\n        defaultSets.push({\n          id: COLLECTIBLE_STATUS_SET_ID,\n          accessHash: '',\n          count: collectibleStatusEmojis.length,\n          stickers: collectibleStatusEmojis,\n          title: lang('CollectibleStatusesCategory'),\n          isEmoji: true,\n        });\n      }\n    } else if (withDefaultTopicIcons) {\n      const defaultTopicIconsPack = stickerSetsById[defaultTopicIconsId!];\n      if (defaultTopicIconsPack.stickers?.length) {\n        defaultSets.push({\n          ...defaultTopicIconsPack,\n          id: RECENT_SYMBOL_SET_ID,\n          title: oldLang('RecentStickers'),\n        });\n      }\n    } else if (recentCustomEmojis?.length) {\n      defaultSets.push({\n        id: RECENT_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: oldLang('RecentStickers'),\n        stickers: recentCustomEmojis,\n        count: recentCustomEmojis.length,\n        isEmoji: true,\n      });\n    }\n\n    const userSetIds = [...(addedCustomEmojiIds || [])];\n    if (chatEmojiSetId) {\n      userSetIds.unshift(chatEmojiSetId);\n    }\n\n    const setIdsToDisplay = unique(userSetIds.concat(customEmojiFeaturedIds || []));\n\n    const setsToDisplay = Object.values(pickTruthy(stickerSetsById, setIdsToDisplay));\n\n    return [\n      ...defaultSets,\n      ...setsToDisplay,\n    ];\n  }, [\n    addedCustomEmojiIds, isReactionPicker, isStatusPicker, withDefaultTopicIcons, recentCustomEmojis,\n    customEmojiFeaturedIds, stickerSetsById, topReactions, availableReactions, oldLang, recentReactions,\n    defaultStatusIconsId, defaultTopicIconsId, isSavedMessages, defaultTagReactions, chatEmojiSetId,\n    isWithPaidReaction, collectibleStatusEmojis, lang,\n  ]);\n\n  const noPopulatedSets = useMemo(() => (\n    areAddedLoaded\n    && allSets.filter((set) => set.stickers?.length).length === 0\n  ), [allSets, areAddedLoaded]);\n\n  const canRenderContent = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n  const shouldRenderContent = areAddedLoaded && canRenderContent && !noPopulatedSets;\n\n  useHorizontalScroll(headerRef, isMobile || !shouldRenderContent);\n\n  // Scroll container and header when active set changes\n  useEffect(() => {\n    if (!areAddedLoaded) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeSetIndex * HEADER_BUTTON_WIDTH - (header.offsetWidth / 2 - HEADER_BUTTON_WIDTH / 2);\n\n    animateHorizontalScroll(header, newLeft);\n  }, [areAddedLoaded, activeSetIndex]);\n\n  const handleEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n  });\n\n  function renderCover(stickerSet: StickerSetOrReactionsSetOrRecent, index: number) {\n    const firstSticker = stickerSet.stickers?.[0];\n    const buttonClassName = buildClassName(\n      pickerStyles.stickerCover,\n      index === activeSetIndex && styles.activated,\n    );\n\n    const withSharedCanvas = index < STICKER_PICKER_MAX_SHARED_COVERS;\n    const isHq = selectIsAlwaysHighPriorityEmoji(getGlobal(), stickerSet as ApiStickerSet);\n\n    if (stickerSet.id === TOP_SYMBOL_SET_ID) {\n      return undefined;\n    }\n\n    if (STICKER_SET_IDS_WITH_COVER.has(stickerSet.id) || stickerSet.hasThumbnail || !firstSticker) {\n      const isRecent = stickerSet.id === RECENT_SYMBOL_SET_ID || stickerSet.id === POPULAR_SYMBOL_SET_ID;\n      const isFaded = FADED_BUTTON_SET_IDS.has(stickerSet.id);\n      return (\n        <Button\n          key={stickerSet.id}\n          className={buttonClassName}\n          ariaLabel={stickerSet.title}\n          round\n          faded={isFaded}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => selectStickerSet(isRecent ? 0 : index)}\n        >\n          {isRecent ? (\n            <Icon name=\"recent\" />\n          ) : (\n            <StickerSetCover\n              stickerSet={stickerSet as ApiStickerSet}\n              noPlay={!canAnimate || !canLoadAndPlay}\n              forcePlayback\n              observeIntersection={observeIntersectionForCovers}\n              sharedCanvasRef={withSharedCanvas ? (isHq ? sharedCanvasHqRef : sharedCanvasRef) : undefined}\n            />\n          )}\n        </Button>\n      );\n    }\n\n    return (\n      <StickerButton\n        key={stickerSet.id}\n        sticker={firstSticker}\n        size={STICKER_SIZE_PICKER_HEADER}\n        title={stickerSet.title}\n        className={buttonClassName}\n        noPlay={!canAnimate || !canLoadAndPlay}\n        observeIntersection={observeIntersectionForCovers}\n        noContextMenu\n        isCurrentUserPremium\n        sharedCanvasRef={withSharedCanvas ? (isHq ? sharedCanvasHqRef : sharedCanvasRef) : undefined}\n        withTranslucentThumb={isTranslucent}\n        onClick={selectStickerSet}\n        clickArg={index}\n        forcePlayback\n      />\n    );\n  }\n\n  const fullClassName = buildClassName('StickerPicker', styles.root, className);\n\n  if (!shouldRenderContent) {\n    return (\n      <div className={fullClassName}>\n        {noPopulatedSets ? (\n          <div className={pickerStyles.pickerDisabled}>{oldLang('NoStickers')}</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    pickerStyles.header,\n    'no-scrollbar',\n    !shouldHideTopBorder && pickerStyles.headerWithBorder,\n  );\n  const listClassName = buildClassName(\n    pickerStyles.main,\n    pickerStyles.main_customEmoji,\n    IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n    pickerListClassName,\n    pickerStyles.hasHeader,\n  );\n\n  return (\n    <div className={fullClassName}>\n      <div\n        ref={headerRef}\n        className={headerClassName}\n      >\n        <div className=\"shared-canvas-container\">\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          {allSets.map(renderCover)}\n        </div>\n      </div>\n      <div\n        ref={containerRef}\n        onScroll={handleContentScroll}\n        className={listClassName}\n      >\n        {allSets.map((stickerSet, i) => {\n          const shouldHideHeader = stickerSet.id === TOP_SYMBOL_SET_ID\n            || (stickerSet.id === RECENT_SYMBOL_SET_ID && (withDefaultTopicIcons || isStatusPicker));\n          const isChatEmojiSet = stickerSet.id === chatEmojiSetId;\n\n          return (\n            <StickerSet\n              key={stickerSet.id}\n              stickerSet={stickerSet}\n              loadAndPlay={Boolean(canAnimate && canLoadAndPlay)}\n              index={i}\n              idPrefix={prefix}\n              observeIntersection={observeIntersectionForSet}\n              observeIntersectionForPlayingItems={observeIntersectionForPlayingItems}\n              observeIntersectionForShowingItems={observeIntersectionForShowingItems}\n              isNearActive={activeSetIndex >= i - 1 && activeSetIndex <= i + 1}\n              isSavedMessages={isSavedMessages}\n              isStatusPicker={isStatusPicker}\n              isReactionPicker={isReactionPicker}\n              shouldHideHeader={shouldHideHeader}\n              withDefaultTopicIcon={withDefaultTopicIcons && stickerSet.id === RECENT_SYMBOL_SET_ID}\n              withDefaultStatusIcon={isStatusPicker && stickerSet.id === RECENT_SYMBOL_SET_ID}\n              isChatEmojiSet={isChatEmojiSet}\n              isCurrentUserPremium={isCurrentUserPremium}\n              selectedReactionIds={selectedReactionIds}\n              availableReactions={availableReactions}\n              isTranslucent={isTranslucent}\n              onReactionSelect={onReactionSelect}\n              onReactionContext={onReactionContext}\n              onStickerSelect={handleEmojiSelect}\n              onContextMenuOpen={onContextMenuOpen}\n              onContextMenuClose={onContextMenuClose}\n              onContextMenuClick={onContextMenuClick}\n              forcePlayback\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isStatusPicker, isReactionPicker }): StateProps => {\n    const {\n      stickers: {\n        setsById: stickerSetsById,\n      },\n      customEmojis: {\n        byId: customEmojisById,\n        featuredIds: customEmojiFeaturedIds,\n        statusRecent: {\n          emojis: recentStatusEmojis,\n        },\n      },\n      recentCustomEmojis: recentCustomEmojiIds,\n      reactions: {\n        availableReactions,\n        recentReactions,\n        topReactions,\n        defaultTags,\n      },\n    } = global;\n\n    const isSavedMessages = Boolean(chatId && selectIsChatWithSelf(global, chatId));\n    const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n    const collectibleStatuses = global.collectibleEmojiStatuses?.statuses;\n\n    return {\n      customEmojisById,\n      recentCustomEmojiIds: !isStatusPicker ? recentCustomEmojiIds : undefined,\n      recentStatusEmojis: isStatusPicker ? recentStatusEmojis : undefined,\n      collectibleStatuses: isStatusPicker ? collectibleStatuses : undefined,\n      stickerSetsById,\n      addedCustomEmojiIds: global.customEmojis.added.setIds,\n      canAnimate: selectCanPlayAnimatedEmojis(global),\n      isSavedMessages,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      customEmojiFeaturedIds,\n      defaultTopicIconsId: global.defaultTopicIconsId,\n      defaultStatusIconsId: global.defaultStatusIconsId,\n      topReactions: isReactionPicker ? topReactions : undefined,\n      recentReactions: isReactionPicker ? recentReactions : undefined,\n      chatEmojiSetId: chatFullInfo?.emojiSet?.id,\n      isWithPaidReaction: isReactionPicker && chatFullInfo?.isPaidReactionAvailable,\n      availableReactions: isReactionPicker ? availableReactions : undefined,\n      defaultTagReactions: isReactionPicker ? defaultTags : undefined,\n    };\n  },\n)(CustomEmojiPicker));\n","// extracted by mini-css-extract-plugin\nexport default {\"menuContent\":\"hRzvfaRb\"};","import type { RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { selectIsContextMenuTranslucent } from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\n\nimport CustomEmojiPicker from '../../common/CustomEmojiPicker';\nimport Menu from '../../ui/Menu';\nimport Portal from '../../ui/Portal';\n\nimport styles from './StatusPickerMenu.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  statusButtonRef: RefObject<HTMLButtonElement>;\n  onEmojiStatusSelect: (emojiStatus: ApiSticker) => void;\n  onClose: () => void;\n};\n\ninterface StateProps {\n  areFeaturedStickersLoaded?: boolean;\n  isTranslucent?: boolean;\n}\n\nconst StatusPickerMenu: FC<OwnProps & StateProps> = ({\n  isOpen,\n  statusButtonRef,\n  areFeaturedStickersLoaded,\n  isTranslucent,\n  onEmojiStatusSelect,\n  onClose,\n}) => {\n  const { loadFeaturedEmojiStickers } = getActions();\n\n  const transformOriginX = useRef<number>();\n  const [isContextMenuShown, markContextMenuShown, unmarkContextMenuShown] = useFlag();\n  useEffect(() => {\n    transformOriginX.current = statusButtonRef.current!.getBoundingClientRect().right;\n  }, [isOpen, statusButtonRef]);\n\n  useEffect(() => {\n    if (isOpen && !areFeaturedStickersLoaded) {\n      loadFeaturedEmojiStickers();\n    }\n  }, [areFeaturedStickersLoaded, isOpen, loadFeaturedEmojiStickers]);\n\n  const handleEmojiSelect = useCallback((sticker: ApiSticker) => {\n    onEmojiStatusSelect(sticker);\n    onClose();\n  }, [onClose, onEmojiStatusSelect]);\n\n  return (\n    <Portal>\n      <Menu\n        isOpen={isOpen}\n        noCompact\n        positionX=\"right\"\n        bubbleClassName={styles.menuContent}\n        onClose={onClose}\n        transformOriginX={transformOriginX.current}\n        noCloseOnBackdrop={isContextMenuShown}\n      >\n        <CustomEmojiPicker\n          idPrefix=\"status-emoji-set-\"\n          loadAndPlay={isOpen}\n          isHidden={!isOpen}\n          isStatusPicker\n          isTranslucent={isTranslucent}\n          onContextMenuOpen={markContextMenuShown}\n          onContextMenuClose={unmarkContextMenuShown}\n          onCustomEmojiSelect={handleEmojiSelect}\n          onContextMenuClick={onClose}\n        />\n      </Menu>\n    </Portal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    areFeaturedStickersLoaded: Boolean(global.customEmojis.featuredIds?.length),\n    isTranslucent: selectIsContextMenuTranslucent(global),\n  };\n})(StatusPickerMenu));\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"C9sWDINB\",\"topEmoji\":\"gdG3oY21\",\"description\":\"p7S4AH8A\",\"title\":\"KVpsce1g\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { formatShortDuration } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport CustomEmoji from '../../common/CustomEmoji';\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './SuggestedStatusModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['suggestedStatusModal'];\n};\n\ntype StateProps = {\n  bot?: ApiUser;\n  currentUser?: ApiUser;\n};\n\nconst CUSTOM_EMOJI_SIZE = 6 * REM;\n\nconst SuggestedStatusModal = ({ modal, currentUser, bot }: OwnProps & StateProps) => {\n  const { setEmojiStatus, closeSuggestedStatusModal, sendWebAppEvent } = getActions();\n\n  const lang = useLang();\n\n  const isOpen = Boolean(modal);\n  const renderingModal = useCurrentOrPrev(modal);\n\n  const mockPeerWithStatus = useMemo(() => {\n    if (!currentUser || !renderingModal) return undefined;\n    return {\n      ...currentUser,\n      emojiStatus: {\n        type: 'regular',\n        documentId: renderingModal.customEmojiId,\n      },\n    } satisfies ApiUser;\n  }, [currentUser, renderingModal]);\n\n  const description = useMemo(() => {\n    if (!renderingModal || !bot) return undefined;\n\n    const botName = getUserFullName(bot);\n\n    if (renderingModal.duration) {\n      return lang('BotSuggestedStatusFor', {\n        bot: botName,\n        duration: formatShortDuration(lang, renderingModal.duration),\n      }, {\n        withNodes: true,\n        withMarkdown: true,\n      });\n    }\n\n    return lang('BotSuggestedStatus', { bot: botName }, { withNodes: true, withMarkdown: true });\n  }, [bot, lang, renderingModal]);\n\n  const handleClose = useLastCallback(() => {\n    const webAppKey = renderingModal?.webAppKey;\n\n    if (webAppKey) {\n      sendWebAppEvent({\n        webAppKey,\n        event: {\n          eventType: 'emoji_status_failed',\n          eventData: {\n            error: 'USER_DECLINED',\n          },\n        },\n      });\n    }\n\n    closeSuggestedStatusModal();\n  });\n\n  const handleSetStatus = useLastCallback(() => {\n    if (!renderingModal) return;\n\n    const expires = renderingModal.duration ? getServerTime() + renderingModal.duration : undefined;\n\n    setEmojiStatus({\n      referrerWebAppKey: renderingModal.webAppKey,\n      emojiStatus: { type: 'regular', documentId: renderingModal.customEmojiId, until: expires },\n    });\n    closeSuggestedStatusModal();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      contentClassName={styles.content}\n      hasAbsoluteCloseButton\n      isSlim\n      onClose={handleClose}\n    >\n      {renderingModal && (\n        <CustomEmoji\n          className={styles.topEmoji}\n          documentId={renderingModal.customEmojiId}\n          size={CUSTOM_EMOJI_SIZE}\n          loopLimit={1}\n          forceAlways\n        />\n      )}\n      <div>\n        <h3 className={styles.title}>{lang('BotSuggestedStatusTitle')}</h3>\n        <p className={styles.description}>{description}</p>\n      </div>\n      {mockPeerWithStatus && (\n        <PeerChip\n          mockPeer={mockPeerWithStatus}\n          withEmojiStatus\n        />\n      )}\n      <Button size=\"smaller\" onClick={handleSetStatus}>\n        {lang('GeneralConfirm')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const currentUser = selectUser(global, global.currentUserId!);\n    const bot = modal?.botId ? selectUser(global, modal.botId) : undefined;\n\n    return {\n      currentUser,\n      bot,\n    };\n  },\n)(SuggestedStatusModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"pUyNTysT\",\"modal\":\"IK2mBqbm\",\"loading\":\"zjXCH3pT\",\"description\":\"j6xEoljc\",\"bold\":\"hAA6B1lc\",\"chip\":\"smWR78pO\",\"replaceModal\":\"GIFAjZPY\",\"replaceModalContent\":\"Jxyz9TaL\",\"avatarContainer\":\"OKp6HS1U\",\"arrow\":\"WSJdWV7L\",\"boostedWrapper\":\"NU9itcIm\",\"boostedMark\":\"upXvhNRY\"};","import React, { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatFullInfo, ApiMyBoost } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getChatTitle, isChatAdmin, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatShortDuration } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\nimport { getBoostProgressInfo } from '../../common/helpers/boostInfo';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport PremiumProgress from '../../common/PremiumProgress';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Loading from '../../ui/Loading';\nimport Modal from '../../ui/Modal';\n\nimport styles from './BoostModal.module.scss';\n\ntype LoadedParams = {\n  boost?: ApiMyBoost;\n  leftText: string;\n  rightText?: string;\n  value: string;\n  progress: number;\n  descriptionText: string;\n  isBoosted?: boolean;\n  canBoostMore?: boolean;\n};\n\ntype BoostInfo = ({\n  isStatusLoaded: false;\n  title: string;\n} & Undefined<LoadedParams>) | ({\n  isStatusLoaded: true;\n  title: string;\n} & LoadedParams);\n\nexport type OwnProps = {\n  modal: TabState['boostModal'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  prevBoostedChat?: ApiChat;\n  isCurrentUserPremium?: boolean;\n};\n\nconst BoostModal = ({\n  modal,\n  chat,\n  chatFullInfo,\n  prevBoostedChat,\n  isCurrentUserPremium,\n}: OwnProps & StateProps) => {\n  const {\n    applyBoost,\n    closeBoostModal,\n    requestConfetti,\n    openPremiumModal,\n    loadFullChat,\n  } = getActions();\n\n  const [isReplaceModalOpen, openReplaceModal, closeReplaceModal] = useFlag();\n  const [isWaitDialogOpen, openWaitDialog, closeWaitDialog] = useFlag();\n  const [isPremiumDialogOpen, openPremiumDialog, closePremiumDialog] = useFlag();\n\n  const isChannel = chat && isChatChannel(chat);\n\n  const isOpen = Boolean(modal);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useEffect(() => {\n    if (chat && !chatFullInfo) {\n      loadFullChat({ chatId: chat.id });\n    }\n  }, [chat, chatFullInfo]);\n\n  const chatTitle = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return getChatTitle(oldLang, chat);\n  }, [chat, oldLang]);\n\n  const boostedChatTitle = useMemo(() => {\n    if (!prevBoostedChat) {\n      return undefined;\n    }\n\n    return getChatTitle(oldLang, prevBoostedChat);\n  }, [prevBoostedChat, oldLang]);\n\n  const {\n    isStatusLoaded,\n    isBoosted,\n    boost,\n    title,\n    leftText,\n    rightText,\n    value,\n    progress,\n    descriptionText,\n    canBoostMore,\n  }: BoostInfo = useMemo(() => {\n    if (!modal?.boostStatus || !chat) {\n      return {\n        isStatusLoaded: false,\n        title: oldLang('Loading'),\n      };\n    }\n\n    const {\n      hasMyBoost,\n    } = modal.boostStatus;\n\n    const firstBoost = modal?.myBoosts && getFirstAvailableBoost(modal.myBoosts, chat.id);\n    const areBoostsInDifferentChannels = modal?.myBoosts && !areAllBoostsInChannel(modal.myBoosts, chat.id);\n\n    const {\n      boosts,\n      currentLevel,\n      hasNextLevel,\n      levelProgress,\n      remainingBoosts,\n      isMaxLevel,\n    } = getBoostProgressInfo(modal.boostStatus, true);\n\n    const hasBoost = hasMyBoost;\n\n    const left = oldLang('BoostsLevel', currentLevel);\n    const right = hasNextLevel ? oldLang('BoostsLevel', currentLevel + 1) : undefined;\n\n    const moreBoosts = oldLang('ChannelBoost.MoreBoosts', remainingBoosts);\n\n    const modalTitle = isChannel ? oldLang('BoostChannel') : oldLang('BoostGroup');\n\n    const boostsLeftToUnrestrict = (chatFullInfo?.boostsToUnrestrict || 0) - (chatFullInfo?.boostsApplied || 0);\n\n    let description: string | undefined;\n    if (isMaxLevel) {\n      description = oldLang('BoostsMaxLevelReached');\n    } else if (boostsLeftToUnrestrict > 0 && !isChatAdmin(chat)) {\n      const boostTimes = oldLang('GroupBoost.BoostToUnrestrict.Times', boostsLeftToUnrestrict);\n      description = oldLang('GroupBoost.BoostToUnrestrict', [boostTimes, chatTitle]);\n    } else {\n      description = oldLang('ChannelBoost.MoreBoostsNeeded.Text', [chatTitle, moreBoosts]);\n    }\n\n    return {\n      isStatusLoaded: true,\n      title: modalTitle,\n      leftText: left,\n      rightText: right,\n      value: boosts.toString(),\n      progress: levelProgress,\n      remainingBoosts,\n      descriptionText: description,\n      boost: firstBoost,\n      isBoosted: hasBoost,\n      canBoostMore: areBoostsInDifferentChannels && !isMaxLevel,\n    };\n  }, [chat, chatTitle, modal, oldLang, chatFullInfo, isChannel]);\n\n  const isBoostDisabled = !modal?.myBoosts?.length && isCurrentUserPremium;\n  const isReplacingBoost = boost?.chatId && boost.chatId !== modal?.chatId;\n\n  const handleApplyBoost = useLastCallback(() => {\n    closeReplaceModal();\n    applyBoost({ chatId: chat!.id, slots: [boost!.slot] });\n    requestConfetti({});\n  });\n\n  const handleProceedPremium = useLastCallback(() => {\n    openPremiumModal();\n    closePremiumDialog();\n    closeBoostModal();\n  });\n\n  const handleButtonClick = useLastCallback(() => {\n    if (!boost) {\n      if (!isCurrentUserPremium) {\n        openPremiumDialog();\n        return;\n      }\n\n      closeBoostModal();\n      return;\n    }\n\n    if (!canBoostMore) {\n      closeBoostModal();\n      return;\n    }\n\n    if (boost.cooldownUntil) {\n      openWaitDialog();\n      return;\n    }\n\n    if (isReplacingBoost) {\n      openReplaceModal();\n      return;\n    }\n\n    handleApplyBoost();\n  });\n\n  const handleCloseClick = useLastCallback(() => {\n    closeBoostModal();\n  });\n\n  function renderContent() {\n    if (!isStatusLoaded) {\n      return <Loading className={styles.loading} />;\n    }\n\n    return (\n      <>\n        <PremiumProgress\n          leftText={leftText}\n          rightText={rightText}\n          progress={progress}\n          floatingBadgeText={value}\n          floatingBadgeIcon=\"boost\"\n        />\n        {isBoosted && (\n          <div className={buildClassName(styles.description, styles.bold)}>\n            {oldLang('ChannelBoost.YouBoostedChannelText', chatTitle)}\n          </div>\n        )}\n        <div className={styles.description}>\n          {renderText(descriptionText, ['simple_markdown', 'emoji'])}\n        </div>\n        <div className=\"dialog-buttons\">\n          <Button isText className=\"confirm-dialog-button\" disabled={isBoostDisabled} onClick={handleButtonClick}>\n            {canBoostMore ? (\n              <>\n                <Icon name=\"boost\" />\n                {oldLang(isChannel ? 'ChannelBoost.BoostChannel' : 'GroupBoost.BoostGroup')}\n              </>\n            ) : oldLang('OK')}\n          </Button>\n          <Button isText className=\"confirm-dialog-button\" onClick={handleCloseClick}>\n            {oldLang('Cancel')}\n          </Button>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      title={title}\n      className={styles.modal}\n      contentClassName={styles.content}\n      onClose={closeBoostModal}\n    >\n      {renderContent()}\n      {isReplacingBoost && boostedChatTitle && (\n        <Modal\n          isOpen={isReplaceModalOpen}\n          className={styles.replaceModal}\n          contentClassName={styles.replaceModalContent}\n          onClose={closeReplaceModal}\n        >\n          <div className={styles.avatarContainer}>\n            <div className={styles.boostedWrapper}>\n              <Avatar peer={prevBoostedChat} size=\"large\" />\n              <Icon name=\"boostcircle\" className={styles.boostedMark} />\n            </div>\n            <Icon name=\"next\" className={styles.arrow} />\n            <Avatar peer={chat} size=\"large\" />\n          </div>\n          <div>\n            {renderText(\n              oldLang('ChannelBoost.ReplaceBoost', [boostedChatTitle, chatTitle]), ['simple_markdown', 'emoji'],\n            )}\n          </div>\n          <div className=\"dialog-buttons\">\n            <Button isText className=\"confirm-dialog-button\" onClick={handleApplyBoost}>\n              {oldLang('Replace')}\n            </Button>\n            <Button isText className=\"confirm-dialog-button\" onClick={closeReplaceModal}>\n              {oldLang('Cancel')}\n            </Button>\n          </div>\n        </Modal>\n      )}\n      {Boolean(boost?.cooldownUntil) && (\n        <ConfirmDialog\n          isOpen={isWaitDialogOpen}\n          isOnlyConfirm\n          confirmLabel={oldLang('OK')}\n          title={oldLang('ChannelBoost.Error.BoostTooOftenTitle')}\n          onClose={closeWaitDialog}\n          confirmHandler={closeWaitDialog}\n        >\n          {renderText(\n            oldLang(\n              'ChannelBoost.Error.BoostTooOftenText',\n              formatShortDuration(lang, boost!.cooldownUntil - getServerTime()),\n            ),\n            ['simple_markdown', 'emoji'],\n          )}\n        </ConfirmDialog>\n      )}\n      {!isCurrentUserPremium && (\n        <ConfirmDialog\n          isOpen={isPremiumDialogOpen}\n          confirmLabel={oldLang('Common.Yes')}\n          title={oldLang('PremiumNeeded')}\n          onClose={closePremiumDialog}\n          confirmHandler={handleProceedPremium}\n        >\n          {renderText(oldLang('PremiumNeededForBoosting'), ['simple_markdown', 'emoji'])}\n        </ConfirmDialog>\n      )}\n    </Modal>\n  );\n};\n\nfunction getFirstAvailableBoost(myBoosts: ApiMyBoost[], chatId?: string) {\n  return myBoosts.find((boost) => !boost.chatId)\n    || myBoosts.filter((b) => chatId && b.chatId !== chatId)\n      .sort((a, b) => a.date - b.date)[0];\n}\n\nfunction areAllBoostsInChannel(myBoosts: ApiMyBoost[], chatId: string) {\n  return myBoosts.every((boost) => boost.chatId === chatId);\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const chat = modal && selectChat(global, modal?.chatId);\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const firstBoost = modal?.myBoosts && getFirstAvailableBoost(modal.myBoosts, modal.chatId);\n    const boostedChat = firstBoost?.chatId ? selectChat(global, firstBoost?.chatId) : undefined;\n\n    return {\n      chat,\n      chatFullInfo,\n      prevBoostedChat: boostedChat,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(BoostModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"clickable\":\"IzcASdzD\",\"centered\":\"xVLGjLub\",\"logo\":\"Mtx4SWww\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPeer } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { TME_LINK_PREFIX } from '../../../config';\nimport { selectChatMessage, selectSender } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport LinkField from '../../common/LinkField';\nimport TableInfoModal, { type TableData } from '../common/TableInfoModal';\n\nimport styles from './GiftCodeModal.module.scss';\n\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\n\nexport type OwnProps = {\n  modal: TabState['giftCodeModal'];\n};\n\nexport type StateProps = {\n  currentUserId?: string;\n  messageSender?: ApiPeer;\n};\n\nconst GIFTCODE_PATH = 'giftcode';\n\nconst GiftCodeModal = ({\n  currentUserId,\n  modal,\n  messageSender,\n}: OwnProps & StateProps) => {\n  const {\n    closeGiftCodeModal, applyGiftCode, focusMessage,\n  } = getActions();\n  const lang = useOldLang();\n  const isOpen = Boolean(modal);\n\n  const canUse = (!modal?.info.toId || modal?.info.toId === currentUserId) && !modal?.info.usedAt;\n\n  const handleOpenGiveaway = useLastCallback(() => {\n    if (!modal || !modal.info.giveawayMessageId) return;\n    focusMessage({\n      chatId: modal.info.fromId!,\n      messageId: modal.info.giveawayMessageId,\n    });\n    closeGiftCodeModal();\n  });\n\n  const handleButtonClick = useLastCallback(() => {\n    if (canUse) {\n      applyGiftCode({ slug: modal!.slug });\n      return;\n    }\n    closeGiftCodeModal();\n  });\n\n  const modalData = useMemo(() => {\n    if (!modal) return undefined;\n    const { slug, info } = modal;\n\n    const fromId = info.fromId || messageSender?.id;\n\n    const header = (\n      <>\n        <img src={PremiumLogo} alt=\"\" className={styles.logo} />\n        <p className={styles.centered}>{renderText(lang('lng_gift_link_about'), ['simple_markdown'])}</p>\n        <LinkField title=\"BoostingGiftLink\" link={`${TME_LINK_PREFIX}/${GIFTCODE_PATH}/${slug}`} />\n      </>\n    );\n\n    const tableData = [\n      [lang('BoostingFrom'), fromId ? { chatId: fromId } : lang('BoostingNoRecipient')],\n      [lang('BoostingTo'), info.toId ? { chatId: info.toId } : lang('BoostingNoRecipient')],\n      [lang('BoostingGift'), lang('BoostingTelegramPremiumFor', lang('Months', info.months, 'i'))],\n      [lang('BoostingReason'), (\n        <span className={buildClassName(info.giveawayMessageId && styles.clickable)} onClick={handleOpenGiveaway}>\n          {info.isFromGiveaway && !info.toId ? lang('BoostingIncompleteGiveaway')\n            : lang(info.isFromGiveaway ? 'BoostingGiveaway' : 'BoostingYouWereSelected')}\n        </span>\n      )],\n      [lang('BoostingDate'), formatDateTimeToString(info.date * 1000, lang.code, true)],\n    ] satisfies TableData;\n\n    const footer = (\n      <span className={styles.centered}>\n        {renderText(\n          info.usedAt ? lang('BoostingUsedLinkDate', formatDateTimeToString(info.usedAt * 1000, lang.code, true))\n            : lang('BoostingSendLinkToAnyone'),\n          ['simple_markdown'],\n        )}\n      </span>\n    );\n\n    return {\n      header,\n      tableData,\n      footer,\n    };\n  }, [lang, messageSender?.id, modal]);\n\n  if (!modalData) return undefined;\n\n  return (\n    <TableInfoModal\n      isOpen={isOpen}\n      title={lang('lng_gift_link_title')}\n      tableData={modalData.tableData}\n      header={modalData.header}\n      footer={modalData.footer}\n      buttonText={canUse ? lang('BoostingUseLink') : lang('Close')}\n      onButtonClick={handleButtonClick}\n      onClose={closeGiftCodeModal}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const { message } = modal || {};\n    const chatMessage = message && selectChatMessage(global, message.chatId, message.messageId);\n    const sender = chatMessage && selectSender(global, chatMessage);\n\n    return {\n      currentUserId: global.currentUserId,\n      messageSender: sender,\n    };\n  },\n)(GiftCodeModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"description\":\"dl10exNi\",\"picker-wrapper\":\"gxWY5c6x\",\"pickerWrapper\":\"gxWY5c6x\",\"picker-header\":\"h8N7eyob\",\"pickerHeader\":\"h8N7eyob\",\"picker-header-info\":\"Rth2Qu07\",\"pickerHeaderInfo\":\"Rth2Qu07\",\"selection-toggle\":\"B6eAugx8\",\"selectionToggle\":\"B6eAugx8\",\"foldersWrapper\":\"mwcvgD2S\",\"folders\":\"LKavx8ww\",\"folder\":\"qglLx5Dn\",\"button-text\":\"bgaRuEMs\",\"buttonText\":\"bgaRuEMs\",\"button-badge\":\"rTe14Z22\",\"buttonBadge\":\"rTe14Z22\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChatFolder, ApiChatlistInviteAlready } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  invite: ApiChatlistInviteAlready;\n  folder: ApiChatFolder;\n};\n\nconst ChatlistAlready: FC<OwnProps> = ({ invite, folder }) => {\n  const { closeChatlistModal, joinChatlistInvite } = getActions();\n\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(invite.missingPeerIds);\n\n  const hasChatsToAdd = Boolean(invite.missingPeerIds.length);\n  const isNew = invite.alreadyPeerIds.length === 0;\n  const newChatsCount = hasChatsToAdd ? invite.missingPeerIds.length : 0;\n  const badgeText = selectedPeerIds.length ? selectedPeerIds.length.toString() : undefined;\n\n  const descriptionText = isNew ? lang('FolderLinkSubtitleNew')\n    : newChatsCount ? lang('FolderLinkSubtitleAdd', {\n      chats: lang('FolderLinkSubtitleAddCount', { count: newChatsCount }, { pluralValue: newChatsCount }),\n      title: renderTextWithEntities({\n        text: folder.title.text,\n        entities: folder.title.entities,\n        noCustomEmojiPlayback: folder.noTitleAnimations,\n      }),\n    }, {\n      withNodes: true,\n      withMarkdown: true,\n    }) : lang('FolderLinkSubtitleAlready');\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n\n    if (!selectedPeerIds.length) return;\n\n    joinChatlistInvite({\n      invite,\n      peerIds: selectedPeerIds,\n    });\n  }, [invite, selectedPeerIds]);\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === invite.missingPeerIds.length;\n    setSelectedPeerIds(areAllSelected ? [] : invite.missingPeerIds);\n  }, [invite.missingPeerIds, selectedPeerIds.length]);\n\n  return (\n    <div className={styles.content}>\n      <div className={styles.description}>\n        {renderText(descriptionText, ['simple_markdown', 'emoji'])}\n      </div>\n      <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n        {Boolean(invite.missingPeerIds.length) && (\n          <>\n            <div className={styles.pickerHeader}>\n              <div className={styles.pickerHeaderInfo}>\n                {oldLang('FolderLinkHeaderChatsJoin', selectedPeerIds.length, 'i')}\n              </div>\n              <div\n                className={styles.selectionToggle}\n                role=\"button\"\n                tabIndex={0}\n                onClick={handleSelectionToggle}\n              >\n                {selectedPeerIds.length === invite.missingPeerIds.length\n                  ? oldLang('DeselectAll') : oldLang('SelectAll')}\n              </div>\n            </div>\n            <PeerPicker\n              itemIds={invite.missingPeerIds}\n              onSelectedIdsChange={setSelectedPeerIds}\n              selectedIds={selectedPeerIds}\n              allowMultiple\n              withStatus\n              itemInputType=\"checkbox\"\n            />\n          </>\n        )}\n        <div className={styles.pickerHeader}>\n          <div className={styles.pickerHeaderInfo}>\n            {oldLang('FolderLinkHeaderAlready')}\n          </div>\n        </div>\n        <PeerPicker\n          itemIds={invite.alreadyPeerIds}\n          lockedSelectedIds={invite.alreadyPeerIds}\n          selectedIds={invite.alreadyPeerIds}\n          allowMultiple\n          withStatus\n          itemInputType=\"checkbox\"\n        />\n      </div>\n      <Button\n        size=\"smaller\"\n        onClick={handleButtonClick}\n      >\n        <div className={styles.buttonText}>\n          {!selectedPeerIds.length && oldLang('OK')}\n          {Boolean(selectedPeerIds.length) && (\n            <>\n              {oldLang('FolderLinkButtonJoinPlural', selectedPeerIds.length, 'i')}\n              <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n            </>\n          )}\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistAlready);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChatFolder } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport renderText from '../../common/helpers/renderText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  folder: ApiChatFolder;\n  suggestedPeerIds?: string[];\n};\n\nconst ChatlistDelete: FC<OwnProps> = ({\n  folder,\n  suggestedPeerIds = MEMO_EMPTY_ARRAY,\n}) => {\n  const { closeChatlistModal, leaveChatlist } = getActions();\n\n  const lang = useOldLang();\n\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>([]);\n\n  const badgeText = selectedPeerIds.length ? selectedPeerIds.length.toString() : undefined;\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === suggestedPeerIds.length;\n    setSelectedPeerIds(areAllSelected ? [] : suggestedPeerIds);\n  }, [suggestedPeerIds, selectedPeerIds.length]);\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n    leaveChatlist({ folderId: folder.id, peerIds: selectedPeerIds });\n  }, [folder.id, selectedPeerIds]);\n\n  return (\n    <div className={styles.content}>\n      {Boolean(suggestedPeerIds?.length) && (\n        <>\n          <div className={styles.description}>\n            {renderText(lang('FolderLinkSubtitleRemove'), ['simple_markdown', 'emoji'])}\n          </div>\n          <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n            <div className={styles.pickerHeader}>\n              <div className={styles.pickerHeaderInfo}>\n                {lang('FolderLinkHeaderChatsQuit', selectedPeerIds.length, 'i')}\n              </div>\n              <div\n                className={styles.selectionToggle}\n                role=\"button\"\n                tabIndex={0}\n                onClick={handleSelectionToggle}\n              >\n                {selectedPeerIds.length === suggestedPeerIds.length ? lang('DeselectAll') : lang('SelectAll')}\n              </div>\n            </div>\n            <PeerPicker\n              itemIds={suggestedPeerIds}\n              onSelectedIdsChange={setSelectedPeerIds}\n              selectedIds={selectedPeerIds}\n              allowMultiple\n              withStatus\n              itemInputType=\"checkbox\"\n            />\n          </div>\n        </>\n      )}\n      <Button\n        size=\"smaller\"\n        onClick={handleButtonClick}\n      >\n        <div className={styles.buttonText}>\n          {!selectedPeerIds.length && lang('FolderLinkButtonRemove')}\n          {Boolean(selectedPeerIds.length) && (\n            <>\n              {lang('FolderLinkButtonRemoveChats')}\n              <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n            </>\n          )}\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistDelete);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiChatlistInviteNew } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  invite: ApiChatlistInviteNew;\n};\n\nconst ChatlistNew: FC<OwnProps> = ({ invite }) => {\n  const { closeChatlistModal, joinChatlistInvite } = getActions();\n\n  const lang = useLang();\n  const oldLang = useOldLang();\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(invite.peerIds);\n\n  const joinedIds = useMemo(() => {\n    const chatsById = getGlobal().chats.byId;\n    return invite.peerIds.filter((id) => !chatsById[id].isNotJoined);\n  }, [invite.peerIds]);\n\n  const selectedCount = selectedPeerIds.length - joinedIds.length;\n\n  const badgeText = selectedCount ? selectedCount.toString() : undefined;\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n\n    joinChatlistInvite({\n      invite,\n      peerIds: selectedPeerIds,\n    });\n  }, [invite, selectedPeerIds]);\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === invite.peerIds.length;\n    setSelectedPeerIds(areAllSelected ? joinedIds : invite.peerIds);\n  }, [invite.peerIds, joinedIds, selectedPeerIds.length]);\n\n  return (\n    <div className={styles.content}>\n      <div className={styles.description}>\n        {lang('FolderLinkSubtitleNew')}\n      </div>\n      <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n        <div className={styles.pickerHeader}>\n          <div className={styles.pickerHeaderInfo}>\n            {oldLang('FolderLinkHeaderChatsJoin', selectedCount, 'i')}\n          </div>\n          <div\n            className={styles.selectionToggle}\n            role=\"button\"\n            tabIndex={0}\n            onClick={handleSelectionToggle}\n          >\n            {selectedPeerIds.length === invite.peerIds.length ? oldLang('DeselectAll') : oldLang('SelectAll')}\n          </div>\n        </div>\n        <PeerPicker\n          itemIds={invite.peerIds}\n          lockedSelectedIds={joinedIds}\n          onSelectedIdsChange={setSelectedPeerIds}\n          selectedIds={selectedPeerIds}\n          allowMultiple\n          withStatus\n          itemInputType=\"checkbox\"\n        />\n      </div>\n      <Button\n        onClick={handleButtonClick}\n        size=\"smaller\"\n        disabled={!selectedPeerIds.length}\n      >\n        <div className={styles.buttonText}>\n          {lang('FolderLinkAddFolder')}\n          <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistNew);\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChatFolder } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { selectChatFolder } from '../../../global/selectors';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport Modal from '../../ui/Modal';\nimport Tab from '../../ui/Tab';\nimport ChatlistAlready from './ChatlistAlready';\nimport ChatlistDelete from './ChatlistDelete';\nimport ChatlistNew from './ChatlistNew';\n\nimport styles from './ChatlistModal.module.scss';\n\nexport type OwnProps = {\n  modal?: TabState['chatlistModal'];\n};\n\ntype StateProps = {\n  folder?: ApiChatFolder;\n};\n\nconst ChatlistInviteModal: FC<OwnProps & StateProps> = ({\n  modal,\n  folder,\n}) => {\n  const { closeChatlistModal } = getActions();\n\n  const lang = useOldLang();\n\n  const isOpen = Boolean(modal);\n  const renderingInfo = usePreviousDeprecated(modal) || modal;\n  const renderingFolder = usePreviousDeprecated(folder) || folder;\n\n  const title = useMemo(() => {\n    if (!renderingInfo) return undefined;\n    if (renderingInfo.invite) {\n      const invite = renderingInfo.invite;\n      if ('alreadyPeerIds' in invite) {\n        return invite.missingPeerIds.length ? lang('FolderLinkTitleAddChats') : lang('FolderLinkTitleAlready');\n      }\n      return lang('FolderLinkTitleAdd');\n    }\n    if (renderingInfo.removal) {\n      return lang('FolderLinkTitleRemove');\n    }\n\n    return undefined;\n  }, [lang, renderingInfo]);\n\n  const renderingFolderTitle = useMemo(() => {\n    if (renderingFolder) {\n      return renderTextWithEntities({\n        text: renderingFolder.title.text,\n        entities: renderingFolder.title.entities,\n        noCustomEmojiPlayback: renderingFolder.noTitleAnimations,\n      });\n    }\n    if (renderingInfo?.invite && 'title' in renderingInfo.invite) {\n      return renderTextWithEntities({\n        text: renderingInfo.invite.title.text,\n        entities: renderingInfo.invite.title.entities,\n        noCustomEmojiPlayback: renderingInfo.invite.noTitleAnimations,\n      });\n    }\n    return undefined;\n  }, [renderingFolder, renderingInfo]);\n\n  const folderTabNumber = useMemo(() => {\n    if (!renderingInfo?.invite) return undefined;\n    if ('missingPeerIds' in renderingInfo.invite) return renderingInfo.invite.missingPeerIds.length;\n    return undefined;\n  }, [renderingInfo]);\n\n  function renderFolders(folderTitle: TeactNode) {\n    return (\n      <div className={styles.foldersWrapper}>\n        <div className={styles.folders}>\n          <Tab className={styles.folder} title={lang('FolderLinkPreviewLeft')} />\n          <Tab\n            className={styles.folder}\n            isActive\n            badgeCount={folderTabNumber}\n            isBadgeActive\n            title={folderTitle}\n          />\n          <Tab className={styles.folder} title={lang('FolderLinkPreviewRight')} />\n        </div>\n      </div>\n    );\n  }\n\n  const renderContent = useCallback(() => {\n    if (!renderingInfo) return undefined;\n    if (renderingInfo.invite) {\n      const invite = renderingInfo.invite;\n      if ('alreadyPeerIds' in invite) {\n        return <ChatlistAlready invite={invite} folder={renderingFolder!} />;\n      }\n\n      return <ChatlistNew invite={invite} />;\n    }\n\n    if (renderingInfo.removal) {\n      return <ChatlistDelete folder={renderingFolder!} suggestedPeerIds={renderingInfo.removal.suggestedPeerIds} />;\n    }\n\n    return undefined;\n  }, [renderingFolder, renderingInfo]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      title={title}\n      onClose={closeChatlistModal}\n      isSlim\n      hasCloseButton\n    >\n      {renderingFolderTitle && renderFolders(renderingFolderTitle)}\n      {renderContent()}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const { invite, removal } = modal || {};\n    const folderId = removal?.folderId || (invite && 'folderId' in invite ? invite.folderId : undefined);\n    const folder = folderId ? selectChatFolder(global, folderId) : undefined;\n\n    return {\n      folder,\n    };\n  },\n)(ChatlistInviteModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"MZ0RCecx\",\"title\":\"ar8XeydN\",\"participantCount\":\"un00TXYY\",\"participants\":\"YvkZ6c2D\",\"participant\":\"DHJSBDeE\",\"buttons\":\"KFtrPtNr\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { getCustomPeerFromInvite, getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport PeerBadge from '../../common/PeerBadge';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './ChatInviteModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['chatInviteModal'];\n};\n\nconst ChatInviteModal = ({ modal }: OwnProps) => {\n  const { acceptChatInvite, closeChatInviteModal, showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const participantsRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const prevModal = usePrevious(modal);\n  const { hash, inviteInfo } = modal || prevModal || {};\n  const {\n    about, isBroadcast, participantIds, participantsCount, photo, isRequestNeeded,\n  } = inviteInfo || {};\n\n  const handleClose = useLastCallback(() => {\n    closeChatInviteModal();\n  });\n\n  const handleAccept = useLastCallback(() => {\n    acceptChatInvite({ hash: hash! });\n\n    showNotification({\n      message: isBroadcast ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n    });\n\n    handleClose();\n  });\n\n  const acceptLangKey = isBroadcast ? 'ProfileJoinChannel' : 'JoinGroup';\n  const requestToJoinLangKey = isBroadcast ? 'MemberRequests.RequestToJoinChannel'\n    : 'MemberRequests.RequestToJoinGroup';\n\n  const customPeer = useMemo(() => {\n    if (!inviteInfo) return undefined;\n\n    return getCustomPeerFromInvite(inviteInfo);\n  }, [inviteInfo]);\n\n  const participants = useMemo(() => {\n    if (!participantIds) {\n      return undefined;\n    }\n\n    const global = getGlobal();\n    return participantIds.map((id) => selectUser(global, id)).filter(Boolean);\n  }, [participantIds]);\n\n  useHorizontalScroll(participantsRef, !modal || !participants);\n\n  return (\n    <Modal\n      isOpen={Boolean(modal)}\n      contentClassName={styles.content}\n      isSlim\n      onClose={handleClose}\n      onEnter={handleAccept}\n    >\n      {customPeer && <Avatar size=\"jumbo\" photo={photo} peer={customPeer} withVideo />}\n      {customPeer && <FullNameTitle className={styles.title} peer={customPeer} />}\n      {about && <p className={styles.about}>{about}</p>}\n      <p className={styles.participantCount}>\n        {lang(isBroadcast ? 'Subscribers' : 'Members', participantsCount, 'i')}\n      </p>\n      {participants && (\n        <div ref={participantsRef} className={buildClassName(styles.participants, 'no-scrollbar')}>\n          {participants.map((participant) => (\n            <PeerBadge className={styles.participant} peer={participant} text={getUserFullName(participant)} />\n          ))}\n        </div>\n      )}\n      <div className={buildClassName('dialog-buttons', styles.buttons)}>\n        <Button isText className=\"confirm-dialog-button\" onClick={handleAccept}>\n          {lang(isRequestNeeded ? requestToJoinLangKey : acceptLangKey)}\n        </Button>\n        <Button isText className=\"confirm-dialog-button\" onClick={handleClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ChatInviteModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"LFkgLoAk\",\"title\":\"La4sUYaq\",\"description\":\"Bn5kz5br\",\"moreButton\":\"JdN5pGTw\",\"secondary\":\"hbsLlXSH\",\"content\":\"TZE15Pt_\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\nimport type { TableAboutData } from '../common/TableAboutModal';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport SafeLink from '../../common/SafeLink';\nimport SponsoredMessageContextMenuContainer from '../../middle/message/SponsoredContextMenuContainer';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport TableAboutModal from '../common/TableAboutModal';\n\nimport styles from './AboutAdsModal.module.scss';\n\nexport type OwnProps = {\n  // eslint-disable-next-line react/no-unused-prop-types\n  modal: TabState['aboutAdsModal'];\n};\n\ntype StateProps = {\n  minLevelToRestrictAds?: number;\n};\n\nconst AboutAdsModal = ({ modal, minLevelToRestrictAds }: OwnProps & StateProps) => {\n  const { closeAboutAdsModal } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const moreMenuRef = useRef<HTMLButtonElement>(null);\n\n  const isOpen = Boolean(modal);\n  const renderingModal = useCurrentOrPrev(modal);\n  const {\n    canReport, randomId, additionalInfo, sponsorInfo,\n  } = renderingModal || {};\n  const isMonetizationSharing = canReport;\n\n  const renderingIsNewDesign = useCurrentOrPrev(isMonetizationSharing);\n\n  const oldLang = useOldLang();\n\n  const regularAdContent = useMemo(() => {\n    return (\n      <>\n        <h3>{oldLang('SponsoredMessageInfoScreen.Title')}</h3>\n        <p>{renderText(oldLang('SponsoredMessageInfoDescription1'), ['br'])}</p>\n        <p>{renderText(oldLang('SponsoredMessageInfoDescription2'), ['br'])}</p>\n        <p>{renderText(oldLang('SponsoredMessageInfoDescription3'), ['br'])}</p>\n        <p>\n          <SafeLink\n            url={oldLang('SponsoredMessageAlertLearnMoreUrl')}\n            text={oldLang('SponsoredMessageAlertLearnMoreUrl')}\n          />\n        </p>\n        <p>{renderText(oldLang('SponsoredMessageInfoDescription4'), ['br'])}</p>\n      </>\n    );\n  }, [oldLang]);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleContextMenu, handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(moreMenuRef, !renderingIsNewDesign);\n\n  const handleClose = useLastCallback(() => {\n    closeAboutAdsModal();\n    handleContextMenuClose();\n    handleContextMenuHide();\n  });\n\n  const modalData = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    const header = (\n      <>\n        <h3 className={styles.title}>{oldLang('AboutRevenueSharingAds')}</h3>\n        <p className={buildClassName(styles.description, styles.secondary)}>\n          {oldLang('RevenueSharingAdsAlertSubtitle')}\n        </p>\n        <Button\n          ref={moreMenuRef}\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          className={styles.moreButton}\n          onClick={handleContextMenu}\n        >\n          <Icon name=\"more\" />\n        </Button>\n      </>\n    );\n\n    const listItemData = [\n      ['lock', oldLang('RevenueSharingAdsInfo1Title'),\n        renderText(oldLang('RevenueSharingAdsInfo1Subtitle'), ['simple_markdown'])],\n      ['revenue-split', oldLang('RevenueSharingAdsInfo2Title'),\n        renderText(oldLang('RevenueSharingAdsInfo2Subtitle'), ['simple_markdown'])],\n      ['nochannel', oldLang('RevenueSharingAdsInfo3Title'),\n        renderText(oldLang('RevenueSharingAdsInfo3Subtitle', minLevelToRestrictAds), ['simple_markdown'])],\n    ] satisfies TableAboutData;\n\n    const footer = (\n      <>\n        <h3 className={styles.title}>{renderText(oldLang('RevenueSharingAdsInfo4Title'), ['simple_markdown'])}</h3>\n        <p className={styles.description}>\n          {renderText(oldLang('RevenueSharingAdsInfo4Subtitle2', ''), ['simple_markdown'])}\n          <SafeLink\n            url={oldLang('PromoteUrl')}\n            text={oldLang('LearnMoreArrow')}\n          />\n        </p>\n      </>\n    );\n\n    return {\n      header,\n      listItemData,\n      footer,\n    };\n  }, [isOpen, oldLang, handleContextMenu, minLevelToRestrictAds]);\n\n  if (renderingIsNewDesign) {\n    return (\n      <>\n        <TableAboutModal\n          isOpen={isOpen}\n          listItemData={modalData?.listItemData}\n          headerIconName=\"channel\"\n          withSeparator\n          header={modalData?.header}\n          footer={modalData?.footer}\n          buttonText={oldLang('RevenueSharingAdsUnderstood')}\n          onClose={handleClose}\n        />\n        {contextMenuAnchor && randomId && (\n          <SponsoredMessageContextMenuContainer\n            isOpen={isContextMenuOpen}\n            anchor={contextMenuAnchor}\n            triggerRef={moreMenuRef}\n            randomId={randomId}\n            additionalInfo={additionalInfo}\n            canReport={canReport}\n            sponsorInfo={sponsorInfo}\n            shouldSkipAbout\n            onItemClick={handleClose}\n            onClose={handleContextMenuClose}\n            onCloseAnimationEnd={handleContextMenuHide}\n          />\n        )}\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className={styles.root}\n      contentClassName={styles.content}\n      onClose={handleClose}\n    >\n      {regularAdContent}\n      <Button\n        size=\"smaller\"\n        onClick={handleClose}\n      >\n        {oldLang('RevenueSharingAdsUnderstood')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const minLevelToRestrictAds = global.appConfig?.channelRestrictAdsLevelMin;\n\n    return {\n      minLevelToRestrictAds,\n    };\n  },\n)(AboutAdsModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"t9iZUzOj\",\"description\":\"mjveZmdr\",\"toncoin\":\"ATkOSqJ7\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { TableAboutData } from '../modals/common/TableAboutModal';\n\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport TableAboutModal from '../modals/common/TableAboutModal';\nimport Icon from './icons/Icon';\nimport SafeLink from './SafeLink';\n\nimport styles from './AboutMonetizationModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\nconst AboutMonetizationModal: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const blockchainText = useMemo(() => {\n    const linkText = oldLang('LearnMore');\n    return lang(\n      'ChannelEarnLearnCoinAbout',\n      {\n        link: (\n          <SafeLink url={oldLang('MonetizationInfoTONLink')} text={linkText}>\n            {linkText}\n            <Icon name=\"next\" />\n          </SafeLink>\n        ),\n      },\n      {\n        withNodes: true,\n      },\n    );\n  }, [lang, oldLang]);\n\n  const monetizationTitle = useMemo(() => {\n    return lang(\n      'MonetizationInfoTONTitle',\n      undefined,\n      {\n        withNodes: true,\n        specialReplacement: { '💎': <Icon className={styles.toncoin} name=\"toncoin\" /> },\n      },\n    );\n  }, [lang]);\n\n  const modalData = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    const header = (\n      <h3 className={styles.title}>{oldLang('lng_channel_earn_learn_title')}</h3>\n    );\n\n    const listItemData = [\n      ['channel', oldLang('lng_channel_earn_learn_in_subtitle'),\n        renderText(oldLang('lng_channel_earn_learn_in_about'), ['simple_markdown'])],\n      ['revenue-split', oldLang('lng_channel_earn_learn_split_subtitle'),\n        renderText(oldLang('Monetization.Intro.Split.Text'), ['simple_markdown'])],\n      ['cash-circle', oldLang('lng_channel_earn_learn_out_subtitle'),\n        renderText(oldLang('lng_channel_earn_learn_out_about'), ['simple_markdown'])],\n    ] satisfies TableAboutData;\n\n    const footer = (\n      <>\n        <h3 className={styles.title}>{monetizationTitle}</h3>\n        <p className={styles.description}>{blockchainText}</p>\n      </>\n    );\n\n    return {\n      header,\n      listItemData,\n      footer,\n    };\n  }, [isOpen, oldLang, monetizationTitle, blockchainText]);\n\n  if (!modalData) {\n    return undefined;\n  }\n\n  return (\n    <TableAboutModal\n      isOpen={isOpen}\n      listItemData={modalData.listItemData}\n      headerIconName=\"cash-circle\"\n      withSeparator\n      header={modalData.header}\n      footer={modalData.footer}\n      buttonText={oldLang('RevenueSharingAdsUnderstood')}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(AboutMonetizationModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"WqeWhMAS\",\"content\":\"oofoCYlu\"};","import React, {\n  memo,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { TabState } from '../../global/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Modal from '../ui/Modal';\nimport PasswordForm from './PasswordForm';\n\nimport styles from './VerificationMonetizationModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['monetizationVerificationModal'];\n};\n\ntype StateProps = {\n  passwordHint?: string;\n};\n\nconst VerificationMonetizationModal = ({\n  modal,\n  passwordHint,\n}: OwnProps & StateProps) => {\n  const {\n    closeMonetizationVerificationModal, clearMonetizationVerificationError, processMonetizationRevenueWithdrawalUrl,\n  } = getActions();\n\n  const isOpen = Boolean(modal);\n\n  const renderingModal = useCurrentOrPrev(modal);\n\n  const lang = useLang();\n\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n\n  const handleSubmit = useLastCallback((password: string) => {\n    if (!renderingModal) return;\n    processMonetizationRevenueWithdrawalUrl({\n      peerId: renderingModal.chatId,\n      currentPassword: password,\n    });\n  });\n\n  const handleClearError = useLastCallback(() => {\n    clearMonetizationVerificationError();\n  });\n\n  const handleClose = useLastCallback(() => {\n    closeMonetizationVerificationModal();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      hasCloseButton\n      title={lang('CheckPasswordTitle')}\n      className={styles.root}\n      contentClassName={styles.content}\n      onClose={handleClose}\n    >\n      <div className={buildClassName(styles.content, 'settings-content password-form custom-scroll')}>\n        <div className=\"settings-item pt-0\">\n          <PasswordForm\n            shouldShowSubmit\n            placeholder={lang('CheckPasswordPlaceholder')}\n            error={renderingModal?.errorKey && lang.withRegular(renderingModal.errorKey)}\n            description={lang('CheckPasswordDescription')}\n            clearError={handleClearError}\n            isLoading={renderingModal?.isLoading}\n            hint={passwordHint}\n            isPasswordVisible={shouldShowPassword}\n            shouldResetValue={isOpen}\n            onChangePasswordVisibility={setShouldShowPassword}\n            onSubmit={handleSubmit}\n          />\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const {\n      twoFaSettings: {\n        hint: passwordHint,\n      },\n    } = global;\n\n    return {\n      passwordHint,\n    };\n  },\n)(VerificationMonetizationModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"MKdSUg2P\",\"chatItem\":\"qEIwBtp0\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiStickerSet, ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport {\n  selectIsCurrentUserFrozen, selectIsCurrentUserPremium, selectStickerSet, selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './EmojiStatusAccessModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['emojiStatusAccessModal'];\n};\n\nexport type StateProps = {\n  currentUser?: ApiUser;\n  stickerSet?: ApiStickerSet;\n  isPremium?: boolean;\n  isAccountFrozen?: boolean;\n};\n\nconst INTERVAL = 3200;\n\nconst EmojiStatusAccessModal: FC<OwnProps & StateProps> = ({\n  modal,\n  currentUser,\n  stickerSet,\n  isPremium,\n  isAccountFrozen,\n}) => {\n  const {\n    closeEmojiStatusAccessModal,\n    toggleUserEmojiStatusPermission,\n    sendWebAppEvent,\n    openPremiumModal,\n    loadDefaultStatusIcons,\n  } = getActions();\n\n  const isOpen = Boolean(modal);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [currentStatusIndex, setCurrentStatusIndex] = useState<number>(0);\n\n  useEffect(() => {\n    if (isOpen && !stickerSet?.stickers && !isAccountFrozen) {\n      loadDefaultStatusIcons();\n    }\n  }, [isOpen, stickerSet, isAccountFrozen]);\n\n  const mockPeerWithStatus = useMemo(() => {\n    if (!currentUser || !stickerSet?.stickers) return undefined;\n    return {\n      ...currentUser,\n      emojiStatus: {\n        type: 'regular',\n        documentId: stickerSet.stickers[currentStatusIndex].id,\n      },\n    } satisfies ApiUser;\n  }, [currentUser, stickerSet, currentStatusIndex]);\n\n  const totalCount = stickerSet?.stickers?.length;\n  useInterval(\n    () => {\n      if (!totalCount) return;\n      setCurrentStatusIndex((prevIndex) => (prevIndex + 1) % totalCount);\n    },\n    totalCount ? INTERVAL : undefined,\n  );\n\n  const renderPickerItem = useLastCallback(() => {\n    return (\n      <PeerChip\n        withEmojiStatus\n        className={styles.chatItem}\n        itemClassName={styles.itemName}\n        mockPeer={mockPeerWithStatus}\n      />\n    );\n  });\n\n  const confirmHandler = useLastCallback(() => {\n    if (!modal?.bot?.id) return;\n    closeEmojiStatusAccessModal();\n    if (modal?.webAppKey) {\n      if (isPremium) {\n        sendWebAppEvent({\n          webAppKey: modal.webAppKey,\n          event: {\n            eventType: 'emoji_status_access_requested',\n            eventData: {\n              status: 'allowed',\n            },\n          },\n        });\n        toggleUserEmojiStatusPermission({ botId: modal.bot.id, isEnabled: true, isBotAccessEmojiGranted: true });\n      } else {\n        openPremiumModal();\n        sendWebAppEvent({\n          webAppKey: modal.webAppKey,\n          event: {\n            eventType: 'emoji_status_access_requested',\n            eventData: {\n              status: 'cancelled',\n            },\n          },\n        });\n      }\n    }\n  });\n\n  const onCloseHandler = useLastCallback(() => {\n    if (!modal?.bot?.id) return;\n    closeEmojiStatusAccessModal();\n    if (modal?.webAppKey) {\n      sendWebAppEvent({\n        webAppKey: modal.webAppKey,\n        event: {\n          eventType: 'emoji_status_access_requested',\n          eventData: {\n            status: 'cancelled',\n          },\n        },\n      });\n    }\n    if (isPremium) {\n      toggleUserEmojiStatusPermission({ botId: modal.bot.id, isEnabled: false });\n    }\n  });\n\n  const renderStatusText = useLastCallback(() => {\n    if (!modal?.bot) return undefined;\n    return lang('EmojiStatusAccessText', {\n      name: getUserFullName(modal?.bot!),\n    }, {\n      withNodes: true,\n      withMarkdown: true,\n    });\n  });\n\n  return (\n    <Modal\n      className={buildClassName('confirm')}\n      contentClassName={styles.content}\n      isOpen={isOpen}\n      onClose={onCloseHandler}\n    >\n      {renderPickerItem()}\n      <div>\n        {renderStatusText()}\n        <div\n          className=\"dialog-buttons mt-2\"\n          ref={containerRef}\n        >\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            onClick={confirmHandler}\n            color=\"primary\"\n          >\n            {oldLang('lng_bot_allow_write_confirm')}\n          </Button>\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            onClick={onCloseHandler}\n          >\n            {lang('Cancel')}\n          </Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const currentUser = selectUser(global, global.currentUserId!);\n    const isPremium = selectIsCurrentUserPremium(global);\n    const stickerSet = global.defaultStatusIconsId ? selectStickerSet(global, global.defaultStatusIconsId) : undefined;\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n    return {\n      currentUser,\n      stickerSet,\n      isPremium,\n      isAccountFrozen,\n    };\n  },\n)(EmojiStatusAccessModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { getGeolocationStatus } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './LocationAccessModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['locationAccessModal'];\n};\n\nexport type StateProps = {\n  currentUser?: ApiUser;\n};\n\nconst LocationAccessModal: FC<OwnProps & StateProps> = ({\n  modal,\n  currentUser,\n}) => {\n  const {\n    closeLocationAccessModal, toggleUserLocationPermission, sendWebAppEvent,\n  } = getActions();\n\n  const isOpen = Boolean(modal);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const confirmHandler = useLastCallback(async () => {\n    const geolocationData = await getGeolocationStatus();\n    const { geolocation } = geolocationData;\n    if (!modal?.bot?.id) return;\n    closeLocationAccessModal();\n    if (modal?.webAppKey) {\n      toggleUserLocationPermission({\n        botId: modal.bot.id,\n        isAccessGranted: true,\n      });\n      sendWebAppEvent({\n        webAppKey: modal.webAppKey,\n        event: {\n          eventType: 'location_requested',\n          eventData: {\n            available: true,\n            latitude: geolocation?.latitude,\n            longitude: geolocation?.longitude,\n            altitude: geolocation?.altitude,\n            course: geolocation?.heading,\n            speed: geolocation?.speed,\n            horizontal_accuracy: geolocation?.accuracy,\n            vertical_accuracy: geolocation?.accuracy,\n          },\n        },\n      });\n    }\n  });\n\n  const onCloseHandler = useLastCallback(() => {\n    if (!modal?.bot?.id) return;\n    closeLocationAccessModal();\n    if (modal?.webAppKey) {\n      toggleUserLocationPermission({\n        botId: modal.bot.id,\n        isAccessGranted: false,\n      });\n      sendWebAppEvent({\n        webAppKey: modal.webAppKey,\n        event: {\n          eventType: 'location_requested',\n          eventData: {\n            available: false,\n          },\n        },\n      });\n    }\n  });\n\n  const renderInfo = useLastCallback(() => {\n    if (!modal?.bot) return undefined;\n    return (\n      <div className={styles.avatars}>\n        <Avatar\n          size=\"large\"\n          peer={currentUser}\n        />\n        <Icon name=\"next\" className={styles.arrow} />\n        <Avatar\n          size=\"large\"\n          peer={modal.bot}\n        />\n      </div>\n    );\n  });\n\n  const renderStatusText = useLastCallback(() => {\n    if (!modal?.bot) return undefined;\n    return lang('LocationPermissionText', {\n      name: getUserFullName(modal?.bot!),\n    }, {\n      withNodes: true,\n      withMarkdown: true,\n    });\n  });\n\n  return (\n    <Modal\n      className={buildClassName('confirm')}\n      isOpen={isOpen}\n      onClose={onCloseHandler}\n    >\n      {renderInfo()}\n      <div>\n        {renderStatusText()}\n        <div\n          className=\"dialog-buttons mt-2\"\n          ref={containerRef}\n        >\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            onClick={confirmHandler}\n            color=\"primary\"\n          >\n            {oldLang('lng_bot_allow_write_confirm')}\n          </Button>\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            onClick={onCloseHandler}\n          >\n            {lang('Cancel')}\n          </Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const currentUser = selectUser(global, global.currentUserId!);\n\n    return {\n      currentUser,\n    };\n  },\n)(LocationAccessModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"avatars\":\"CGPoDaLo\",\"arrow\":\"pzERgD5x\"};","// extracted by mini-css-extract-plugin\nexport default {\"slide\":\"qJDgUtjV\",\"root\":\"njPBcVYr\",\"modalTitle\":\"ZAdG13Ah\",\"optionText\":\"oWujoaSC\",\"option\":\"aFbjDzNo\",\"optionButton\":\"VbE0HzDs\",\"sectionTitle\":\"jrA2dOiw\",\"description\":\"k71Zrc_P\",\"title\":\"mMmY6YR4\",\"titleMultiline\":\"lVVyV0py\",\"subtitle\":\"gSkAFc4u\",\"transition\":\"HjsGIG6e\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport SafeLink from '../../common/SafeLink';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\n\nimport styles from './ReportAdModal.module.scss';\n\nconst ADDED_PADDING = 56;\n\nexport type OwnProps = {\n  modal: TabState['reportAdModal'];\n};\n\nconst ReportAdModal = ({\n  modal,\n}: OwnProps) => {\n  const {\n    reportSponsored, closeReportAdModal, openPreviousReportAdModal,\n  } = getActions();\n  const lang = useOldLang();\n  const isOpen = Boolean(modal);\n\n  // eslint-disable-next-line no-null/no-null\n  const transitionRef = useRef<HTMLDivElement>(null);\n\n  const handleOptionClick = useLastCallback((e, option: string) => {\n    const { chatId, randomId } = modal!;\n    reportSponsored({ peerId: chatId, randomId, option });\n  });\n\n  const [renderingSection, renderingDepth] = useMemo(() => {\n    if (!modal) return [undefined, 0];\n    const sectionDepth = modal.sections.length - 1;\n    return [modal.sections[sectionDepth], sectionDepth];\n  }, [modal]);\n\n  const handleBackClick = useLastCallback(() => {\n    if (!renderingDepth) {\n      closeReportAdModal();\n      return;\n    }\n\n    openPreviousReportAdModal();\n  });\n\n  const bottomText = useMemo(() => {\n    if (!modal) return undefined;\n    const template = lang('lng_report_sponsored_reported_learn');\n    const parts = template.split('{link}');\n    return [\n      parts[0],\n      <SafeLink\n        text={lang('lng_report_sponsored_reported_link')}\n        url={lang('ReportAd.Help_URL')}\n      />,\n      parts[1],\n    ];\n  }, [lang, modal]);\n\n  const header = useMemo(() => {\n    if (!modal) {\n      return undefined;\n    }\n\n    const hasSubtitle = Boolean(renderingSection?.subtitle);\n\n    return (\n      <div className=\"modal-header-condensed\">\n        <Button\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          ariaLabel={lang(renderingDepth ? 'Back' : 'Close')}\n          onClick={handleBackClick}\n        >\n          <Icon name={renderingDepth ? 'arrow-left' : 'close'} />\n        </Button>\n        <div className={buildClassName('modal-title', styles.modalTitle, hasSubtitle && styles.titleMultiline)}>\n          <h3 className={styles.title}>{lang('ReportAd')}</h3>\n          {hasSubtitle && (\n            <span className={styles.subtitle}>{renderingSection.subtitle}</span>\n          )}\n        </div>\n      </div>\n    );\n  }, [lang, modal, renderingDepth, renderingSection?.subtitle]);\n\n  useEffect(() => {\n    if (!modal) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.slide}`);\n    if (!slide) return;\n\n    const height = slide.scrollHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height + ADDED_PADDING}px`;\n    });\n  }, [modal]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.slide}`)!;\n\n    requestMeasure(() => {\n      const height = slide.scrollHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height + ADDED_PADDING}px`;\n      });\n    });\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      hasCloseButton\n      className={styles.root}\n      header={header}\n      onClose={closeReportAdModal}\n    >\n      <Transition\n        name=\"slide\"\n        className={styles.transition}\n        ref={transitionRef}\n        activeKey={renderingDepth}\n        onStart={handleAnimationStart}\n      >\n        <div className={styles.slide}>\n          <h3 className={styles.sectionTitle}>{renderingSection?.title}</h3>\n          {renderingSection?.options.map((option) => (\n            <ListItem\n              narrow\n              secondaryIcon=\"next\"\n              className={styles.option}\n              buttonClassName={styles.optionButton}\n              clickArg={option.option}\n              onClick={handleOptionClick}\n            >\n              <div className={styles.optionText}>{option.text}</div>\n            </ListItem>\n          ))}\n        </div>\n        <p className={styles.description}>{bottomText}</p>\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(ReportAdModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"slide\":\"kq9LwNTZ\",\"root\":\"E1bGWeON\",\"content\":\"tNysQgHL\",\"modalTitle\":\"Lj_ezEWU\",\"header\":\"AlMDkK7c\",\"optionText\":\"FU8m6NUU\",\"option\":\"RoxwMzvA\",\"optionButton\":\"Z6skYdvb\",\"sectionTitle\":\"GSfUuTet\",\"description\":\"zwfjNhF9\",\"title\":\"QawchdxB\",\"hasDepth\":\"CV7kzv9H\",\"titleMultiline\":\"OYFbu8fQ\",\"subtitle\":\"OUFckTb7\",\"transition\":\"n2VxPirU\",\"block\":\"KpptZ3Mk\",\"optionInfo\":\"yc3szGcx\",\"reportIcon\":\"kO8JC4gK\"};","import type { ChangeEvent } from 'react';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport TextArea from '../../ui/TextArea';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\n\nimport styles from './ReportModal.module.scss';\n\nconst MAX_DESCRIPTION = 512;\nconst ADDED_PADDING = 20;\n\nexport type OwnProps = {\n  modal: TabState['reportModal'];\n};\n\nconst ReportModal = ({\n  modal,\n}: OwnProps) => {\n  const {\n    reportMessages, reportStory, closeReportModal, openPreviousReportModal,\n  } = getActions();\n  const lang = useOldLang();\n  const isOpen = Boolean(modal);\n\n  // eslint-disable-next-line no-null/no-null\n  const transitionRef = useRef<HTMLDivElement>(null);\n\n  const [text, setText] = useState('');\n\n  const handleOptionClick = useLastCallback((e, option: string) => {\n    const {\n      messageIds, subject, peerId, chatId,\n    } = modal!;\n    if (!messageIds) return;\n    switch (subject) {\n      case 'message':\n        reportMessages({ chatId: chatId!, messageIds, option });\n        break;\n      case 'story':\n        reportStory({\n          storyId: messageIds[0], peerId: peerId!, option,\n        });\n        break;\n    }\n  });\n\n  const [renderingSection, renderingDepth] = useMemo(() => {\n    if (!modal) return [undefined, 0];\n    const sectionDepth = modal.sections.length - 1;\n    return [modal?.sections[sectionDepth], sectionDepth];\n  }, [modal]);\n\n  const handleBackClick = useLastCallback(() => {\n    openPreviousReportModal();\n  });\n\n  const handleCloseClick = useLastCallback(() => {\n    closeReportModal();\n  });\n\n  const header = useMemo(() => {\n    if (!modal) {\n      return undefined;\n    }\n\n    const hasSubtitle = Boolean(renderingSection?.subtitle);\n\n    return (\n      <div className=\"modal-header-condensed\">\n        {renderingDepth ? (\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Back')}\n            onClick={handleBackClick}\n          >\n            <Icon name=\"arrow-left\" />\n          </Button>\n        ) : (\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Close')}\n            onClick={handleCloseClick}\n          >\n            <Icon name=\"close\" />\n          </Button>\n        )}\n        <div className={buildClassName('modal-title', styles.modalTitle, hasSubtitle && styles.titleMultiline)}>\n          <h3 className={buildClassName(styles.title, renderingDepth && styles.hasDepth)}>\n            {renderingSection?.options\n              ? lang(modal?.subject === 'story' ? 'ReportStory' : 'Report') : renderingSection?.title}\n          </h3>\n          {hasSubtitle && (\n            <span className={styles.subtitle}>{renderingSection.subtitle}</span>\n          )}\n        </div>\n      </div>\n    );\n  }, [lang, modal, renderingDepth, renderingSection?.options, renderingSection?.subtitle, renderingSection?.title]);\n\n  const handleTextChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setText(e.target.value);\n  });\n\n  useEffect(() => {\n    if (!modal) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.slide}`);\n    if (!slide) return;\n\n    const height = slide.scrollHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height}px`;\n    });\n  }, [modal]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.slide}`)!;\n\n    requestMeasure(() => {\n      const height = slide.scrollHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height + ADDED_PADDING}px`;\n      });\n    });\n  });\n\n  const closeReportMessageModalHandler = useLastCallback(() => {\n    setText('');\n    closeReportModal();\n  });\n\n  const sendMessageReportHandler = useLastCallback(() => {\n    const {\n      messageIds, subject, peerId, chatId,\n    } = modal!;\n    switch (subject) {\n      case 'message':\n        reportMessages({\n          chatId: chatId!, messageIds, option: renderingSection?.option, description: text,\n        });\n        break;\n      case 'story':\n        reportStory({\n          storyId: messageIds?.[0], peerId: peerId!, option: renderingSection?.option, description: text,\n        });\n        break;\n    }\n    closeReportMessageModalHandler();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      header={header}\n      onClose={closeReportMessageModalHandler}\n      contentClassName={styles.content}\n      className={buildClassName(styles.root, modal?.subject === 'story' && 'component-theme-dark')}\n    >\n      <Transition\n        name=\"slide\"\n        className={styles.transition}\n        ref={transitionRef}\n        activeKey={renderingDepth}\n        onStart={handleAnimationStart}\n      >\n        <div className={styles.slide}>\n          {renderingSection?.options\n            ? <h3 className={styles.sectionTitle}>{renderingSection?.title}</h3> : undefined}\n          {renderingSection?.options?.map((option) => (\n            <ListItem\n              narrow\n              nonInteractive\n              secondaryIcon=\"next\"\n              className={styles.option}\n              buttonClassName={styles.optionButton}\n              clickArg={option.option}\n              onClick={handleOptionClick}\n            >\n              <div className={styles.optionText}>{option.text}</div>\n            </ListItem>\n          ))}\n          {renderingSection?.option ? (\n            <div className={styles.block}>\n              <AnimatedIconWithPreview\n                tgsUrl={LOCAL_TGS_URLS.Report}\n                size={100}\n                className={styles.reportIcon}\n                nonInteractive\n                forceAlways\n                noLoop={false}\n              />\n              <TextArea\n                id=\"option\"\n                className={styles.optionInfo}\n                label={renderingSection.isOptional ? lang('Report2CommentOptional') : lang('Report2Comment')}\n                onChange={handleTextChange}\n                value={text}\n                maxLength={MAX_DESCRIPTION}\n                maxLengthIndicator={(MAX_DESCRIPTION - text.length).toString()}\n                noReplaceNewlines\n              />\n              <Button\n                size=\"smaller\"\n                onClick={sendMessageReportHandler}\n                disabled={!renderingSection.isOptional ? !text.length : undefined}\n              >{lang('ReportSend')}\n              </Button>\n            </div>\n          ) : undefined}\n        </div>\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(ReportModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Rzj2LMLf\",\"content\":\"Ve4u2KVI\",\"modalTitle\":\"E42tgAwD\",\"container\":\"pNSCKAVN\",\"header\":\"P1fPh6h8\",\"actionMessageView\":\"McJgXCtB\",\"info\":\"xWnXsG7q\",\"background\":\"_6w75ldP\",\"customBgImage\":\"CZkpv8n0\",\"customBgColor\":\"VJAYrDF_\",\"withTransition\":\"lElCwweL\",\"blurred\":\"m8xzfVvU\",\"withRightColumn\":\"rJCyBVMB\"};","import React, {\n  type FC,\n  memo, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\nimport type { ThemeKey } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { getMockPreparedMessageFromResult, getUserFullName } from '../../../global/helpers';\nimport { selectTheme, selectThemeValues, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useCustomBackground from '../../../hooks/useCustomBackground';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Icon from '../../common/icons/Icon';\nimport Message from '../../middle/message/Message';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './PreparedMessageModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['preparedMessageModal'];\n};\n\ntype StateProps = {\n  theme: ThemeKey;\n  isBackgroundBlurred?: boolean;\n  patternColor?: string;\n  customBackground?: string;\n  backgroundColor?: string;\n  bot?: ApiUser;\n};\n\nconst PreparedMessageModal: FC<OwnProps & StateProps> = ({\n  modal,\n  theme,\n  isBackgroundBlurred,\n  patternColor,\n  customBackground,\n  backgroundColor,\n  bot,\n}) => {\n  const {\n    closePreparedInlineMessageModal, sendWebAppEvent, openSharePreparedMessageModal,\n  } = getActions();\n  const lang = useLang();\n  const isOpen = Boolean(modal);\n\n  const { webAppKey, message, botId } = modal || {};\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const customBackgroundValue = useCustomBackground(theme, customBackground);\n\n  const handleOpenClick = useLastCallback(() => {\n    if (webAppKey && botId && message) {\n      openSharePreparedMessageModal({\n        webAppKey,\n        message,\n      });\n      closePreparedInlineMessageModal();\n    }\n  });\n\n  const handleCloseClick = useLastCallback(() => {\n    closePreparedInlineMessageModal();\n    if (webAppKey) {\n      sendWebAppEvent({\n        webAppKey,\n        event: {\n          eventType: 'prepared_message_failed',\n          eventData: { error: 'USER_DECLINED' },\n        },\n      });\n    }\n  });\n\n  const header = useMemo(() => {\n    if (!modal) {\n      return undefined;\n    }\n\n    return (\n      <div className={styles.header}>\n        <Button\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          ariaLabel={lang('Close')}\n          onClick={handleCloseClick}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        <h3 className={buildClassName('modal-title', styles.modalTitle)}>\n          {lang('BotShareMessage')}\n        </h3>\n      </div>\n    );\n  }, [lang, modal]);\n\n  const localMessage = useMemo(() => {\n    if (!botId || !message || !webAppKey) return undefined;\n    return getMockPreparedMessageFromResult(botId, message);\n  }, [botId, message, webAppKey]);\n\n  const bgClassName = buildClassName(\n    styles.background,\n    styles.withTransition,\n    customBackground && styles.customBgImage,\n    backgroundColor && styles.customBgColor,\n    customBackground && isBackgroundBlurred && styles.blurred,\n  );\n\n  return (\n    <Modal\n      dialogRef={containerRef}\n      isOpen={isOpen}\n      header={header}\n      onClose={handleCloseClick}\n      className={styles.root}\n      contentClassName={styles.content}\n    >\n      <div\n        className={buildClassName(styles.actionMessageView, 'MessageList')}\n        // @ts-ignore -- FIXME: Find a way to disable interactions but keep a11y\n        inert\n        style={buildStyle(\n          `--pattern-color: ${patternColor}`,\n          backgroundColor && `--theme-background-color: ${backgroundColor}`,\n        )}\n      >\n        <div\n          className={bgClassName}\n          style={customBackgroundValue ? `--custom-background: ${customBackgroundValue}` : undefined}\n        />\n        {localMessage && (\n          <Message\n            key={botId}\n            message={localMessage}\n            threadId={MAIN_THREAD_ID}\n            messageListType=\"thread\"\n            noComments\n            noReplies\n            appearanceOrder={0}\n            isJustAdded={false}\n            isFirstInGroup\n            isLastInGroup\n            isLastInList={false}\n            isFirstInDocumentGroup={false}\n            isLastInDocumentGroup={false}\n          />\n        )}\n      </div>\n      <div className={styles.container}>\n        <p className={styles.info}>\n          {lang('WebAppShareMessageInfo', { user: getUserFullName(bot) })}\n        </p>\n        <Button\n          size=\"smaller\"\n          onClick={handleOpenClick}\n        >\n          {lang('BotShareMessageShare')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }) => {\n    const theme = selectTheme(global);\n    const {\n      isBlurred: isBackgroundBlurred,\n      patternColor,\n      background: customBackground,\n      backgroundColor,\n    } = selectThemeValues(global, theme) || {};\n    const bot = modal ? selectUser(global, modal?.botId) : undefined;\n\n    return {\n      theme,\n      isBackgroundBlurred,\n      patternColor,\n      customBackground,\n      backgroundColor,\n      bot,\n      currentUserId: global.currentUserId,\n    };\n  },\n)(PreparedMessageModal));\n","import React, {\n  type FC,\n  memo, useEffect,\n} from '../../../lib/teact/teact';\nimport {\n  getActions, getGlobal, withGlobal,\n} from '../../../global';\n\nimport type { TabState } from '../../../global/types';\nimport type { ThreadId } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n} from '../../../global/helpers';\nimport { getPeerTitle } from '../../../global/helpers/peers';\nimport {\n  selectPeer, selectTabState,\n} from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePaidMessageConfirmation from '../../middle/composer/hooks/usePaidMessageConfirmation';\n\nimport PaymentMessageConfirmDialog from '../../common/PaymentMessageConfirmDialog';\nimport RecipientPicker from '../../common/RecipientPicker';\n\nexport type OwnProps = {\n  modal: TabState['sharePreparedMessageModal'];\n};\n\ntype StateProps = {\n  isPaymentMessageConfirmDialogOpen: boolean;\n  starsBalance: number;\n  isStarsBalanceModalOpen: boolean;\n};\n\nexport type SendParams = {\n  peerName?: string;\n  starsForSendMessage: number;\n};\n\nconst SharePreparedMessageModal: FC<OwnProps & StateProps> = ({\n  modal, isPaymentMessageConfirmDialogOpen, isStarsBalanceModalOpen, starsBalance,\n}) => {\n  const {\n    closeSharePreparedMessageModal,\n    sendInlineBotResult,\n    sendWebAppEvent,\n    showNotification,\n    updateSharePreparedMessageModalSendArgs,\n  } = getActions();\n  const lang = useOldLang();\n  const isOpen = Boolean(modal);\n\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const {\n    message, filter, webAppKey, pendingSendArgs,\n  } = modal || {};\n\n  const {\n    starsForSendMessage,\n  } = pendingSendArgs || {};\n\n  const {\n    closeConfirmDialog: closeConfirmModalPayForMessage,\n    dialogHandler: paymentMessageConfirmDialogHandler,\n    shouldAutoApprove: shouldPaidMessageAutoApprove,\n    setAutoApprove: setShouldPaidMessageAutoApprove,\n    handleWithConfirmation: handleActionWithPaymentConfirmation,\n  } = usePaidMessageConfirmation(starsForSendMessage || 0, isStarsBalanceModalOpen, starsBalance);\n\n  const handleClose = useLastCallback(() => {\n    closeSharePreparedMessageModal();\n    if (webAppKey) {\n      sendWebAppEvent({\n        webAppKey,\n        event: {\n          eventType: 'prepared_message_failed',\n          eventData: { error: 'USER_DECLINED' },\n        },\n      });\n    }\n  });\n\n  const handleSend = useLastCallback((id: string, threadId?: ThreadId) => {\n    if (message && webAppKey) {\n      const global = getGlobal();\n      const peer = selectPeer(global, id);\n      sendInlineBotResult({\n        chatId: id,\n        threadId: threadId || MAIN_THREAD_ID,\n        id: message.result.id,\n        queryId: message.result.queryId,\n      });\n      if (!starsForSendMessage) {\n        showNotification({\n          message: lang('BotSharedToOne', getPeerTitle(lang, peer!)),\n        });\n      }\n      sendWebAppEvent({\n        webAppKey,\n        event: {\n          eventType: 'prepared_message_sent',\n        },\n      });\n      closeSharePreparedMessageModal();\n      updateSharePreparedMessageModalSendArgs({ args: undefined });\n    }\n  });\n\n  const handleSelectRecipient = useLastCallback((id: string, threadId?: ThreadId) => {\n    updateSharePreparedMessageModalSendArgs({ args: { peerId: id, threadId } });\n  });\n\n  const handleSendWithPaymentConfirmation = useLastCallback(() => {\n    if (pendingSendArgs) {\n      handleActionWithPaymentConfirmation(handleSend, pendingSendArgs.peerId, pendingSendArgs.threadId);\n    }\n  });\n\n  const handleClosePaymentMessageConfirmDialog = useLastCallback(() => {\n    closeConfirmModalPayForMessage();\n    updateSharePreparedMessageModalSendArgs({ args: undefined });\n  });\n\n  useEffect(() => {\n    if (pendingSendArgs) {\n      handleSendWithPaymentConfirmation();\n    }\n  }, [pendingSendArgs]);\n\n  const global = getGlobal();\n  const peer = pendingSendArgs ? selectPeer(global, pendingSendArgs.peerId) : undefined;\n  const peerName = peer ? getPeerTitle(lang, peer) : undefined;\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <>\n      <RecipientPicker\n        isOpen={isOpen}\n        searchPlaceholder={lang('Search')}\n        filter={filter}\n        onSelectRecipient={handleSelectRecipient}\n        onClose={handleClose}\n        onCloseAnimationEnd={unmarkIsShown}\n        isLowStackPriority\n      />\n      <PaymentMessageConfirmDialog\n        isOpen={isPaymentMessageConfirmDialogOpen}\n        onClose={handleClosePaymentMessageConfirmDialog}\n        userName={peerName}\n        messagePriceInStars={starsForSendMessage || 0}\n        messagesCount={1}\n        shouldAutoApprove={shouldPaidMessageAutoApprove}\n        setAutoApprove={setShouldPaidMessageAutoApprove}\n        confirmHandler={paymentMessageConfirmDialogHandler}\n      />\n    </>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const tabState = selectTabState(global);\n    const { isPaymentMessageConfirmDialogOpen } = tabState;\n    const starsBalance = global.stars?.balance.amount || 0;\n    const isStarsBalanceModalOpen = Boolean(tabState.starsBalanceModal);\n    return {\n      isPaymentMessageConfirmDialogOpen,\n      starsBalance,\n      isStarsBalanceModalOpen,\n    };\n  },\n)(SharePreparedMessageModal));\n","import type React from '../../../lib/teact/teact';\nimport { useCallback, useEffect, useState } from '../../../lib/teact/teact';\n\nimport type { ApiChatBannedRights } from '../../../api/types';\n\nconst FLOATING_BUTTON_ANIMATION_TIMEOUT_MS = 250;\nconst MEDIA_PERMISSIONS: Array<keyof ApiChatBannedRights> = [\n  'embedLinks',\n  'sendPolls',\n  'sendPhotos',\n  'sendVideos',\n  'sendRoundvideos',\n  'sendVoices',\n  'sendAudios',\n  'sendDocs',\n  'sendStickers',\n  'sendGifs',\n];\nconst MESSAGE_PERMISSIONS: typeof MEDIA_PERMISSIONS = [...MEDIA_PERMISSIONS, 'sendPlain'];\n\nexport default function useManagePermissions(defaultPermissions: ApiChatBannedRights | undefined) {\n  const [permissions, setPermissions] = useState<ApiChatBannedRights>({});\n  const [havePermissionChanged, setHavePermissionChanged] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setPermissions(defaultPermissions || {});\n    setHavePermissionChanged(false);\n    setTimeout(() => {\n      setIsLoading(false);\n    }, FLOATING_BUTTON_ANIMATION_TIMEOUT_MS);\n  }, [defaultPermissions]);\n\n  const handlePermissionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name: targetName } = e.target;\n\n    const name = targetName as Exclude<keyof ApiChatBannedRights, 'untilDate'>;\n\n    function getUpdatedPermissionValue(value: true | undefined) {\n      return value ? undefined : true;\n    }\n\n    const oldPermissions = permissions;\n\n    let newPermissions: ApiChatBannedRights = {\n      ...oldPermissions,\n      [name]: getUpdatedPermissionValue(oldPermissions[name]),\n      ...(name === 'sendStickers' && {\n        sendGifs: getUpdatedPermissionValue(oldPermissions[name]),\n      }),\n    };\n\n    const checkMedia = () => {\n      const mediaPermissions = MEDIA_PERMISSIONS.map((key) => newPermissions[key]);\n      if (mediaPermissions.some((v) => !v)) {\n        newPermissions = {\n          ...newPermissions,\n          sendMedia: undefined,\n        };\n      } else if (mediaPermissions.every(Boolean)) {\n        newPermissions = {\n          ...newPermissions,\n          sendMedia: true,\n        };\n      }\n    };\n\n    if (name !== 'sendMedia') {\n      checkMedia();\n    } else {\n      newPermissions = {\n        ...newPermissions,\n        ...(MEDIA_PERMISSIONS.reduce((acc, key) => (\n          Object.assign(acc, { [key]: newPermissions.sendMedia })\n        ), {})),\n      };\n    }\n\n    // Embed links can't be enabled if plain text is banned\n    if (name !== 'embedLinks' && !newPermissions.embedLinks && newPermissions.sendPlain) {\n      newPermissions = {\n        ...newPermissions,\n        embedLinks: true,\n      };\n    }\n\n    if (name !== 'sendPlain' && !newPermissions.embedLinks && newPermissions.sendPlain) {\n      newPermissions = {\n        ...newPermissions,\n        sendPlain: undefined,\n      };\n    }\n\n    if (name !== 'sendMedia') {\n      checkMedia();\n    }\n\n    const sendMessages = MESSAGE_PERMISSIONS.every((key) => newPermissions[key]);\n    newPermissions = {\n      ...newPermissions,\n      sendMessages: sendMessages ? true : undefined,\n    };\n\n    setPermissions(newPermissions);\n\n    setHavePermissionChanged(!defaultPermissions || Object.keys(newPermissions).some((k) => {\n      const key = k as Exclude<keyof ApiChatBannedRights, 'untilDate'>;\n      return Boolean(defaultPermissions[key]) !== Boolean(newPermissions[key]);\n    }));\n  }, [defaultPermissions, permissions]);\n\n  const resetPermissions = useCallback(() => {\n    setPermissions(defaultPermissions || {});\n    setHavePermissionChanged(false);\n  }, [defaultPermissions]);\n\n  return {\n    permissions,\n    isLoading,\n    havePermissionChanged,\n    handlePermissionChange,\n    setIsLoading,\n    resetPermissions,\n  };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiChatBannedRights } from '../../api/types';\n\nimport { isChatPublic } from '../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\n\nexport type OwnProps = {\n  chatId?: string;\n  handlePermissionChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  permissions: ApiChatBannedRights;\n  isMediaDropdownOpen: boolean;\n  setIsMediaDropdownOpen: (open: boolean) => void;\n  className?: string;\n  shiftedClassName?: string;\n  dropdownClassName?: string;\n  withCheckbox?: boolean;\n  permissionGroup?: boolean;\n  getControlIsDisabled?: (key: Exclude<keyof ApiChatBannedRights, 'untilDate'>) => boolean | undefined;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  hasLinkedChat?: boolean;\n};\n\nconst permissionKeyList: (keyof ApiChatBannedRights)[] = [\n  'sendPhotos', 'sendVideos', 'sendStickers',\n  'sendAudios', 'sendDocs', 'sendVoices', 'sendRoundvideos', 'embedLinks', 'sendPolls',\n];\n\nconst PermissionCheckboxList: FC<OwnProps & StateProps> = ({\n  chat,\n  isMediaDropdownOpen,\n  setIsMediaDropdownOpen,\n  hasLinkedChat,\n  permissions,\n  handlePermissionChange,\n  className,\n  shiftedClassName,\n  dropdownClassName,\n  withCheckbox,\n  getControlIsDisabled,\n  permissionGroup,\n}) => {\n  const {\n    showNotification,\n  } = getActions();\n\n  const { isForum } = chat || {};\n\n  const lang = useOldLang();\n\n  const isPublic = useMemo(() => chat && isChatPublic(chat), [chat]);\n  const shouldDisablePermissionForPublicGroup = hasLinkedChat || isPublic;\n\n  const countCheckedPermissions = useMemo(() => {\n    return permissionKeyList.reduce((count, key) => {\n      if (!permissions[key]) {\n        count += 1;\n      }\n      return count;\n    }, 0);\n  }, [permissions]);\n\n  const handleOpenMediaDropdown = useLastCallback((e: React.MouseEvent) => {\n    stopEvent(e);\n    setIsMediaDropdownOpen(!isMediaDropdownOpen);\n  });\n\n  const handleDisabledClick = useLastCallback(() => {\n    showNotification({ message: lang('lng_rights_permission_unavailable') });\n  });\n\n  return (\n    <>\n      <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n        <Checkbox\n          name=\"sendPlain\"\n          checked={!permissions.sendPlain}\n          label={lang('UserRestrictionsSend')}\n          blocking\n          permissionGroup={permissionGroup}\n          onChange={handlePermissionChange}\n          disabled={getControlIsDisabled && getControlIsDisabled('sendPlain')}\n        />\n      </div>\n      <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n        <Checkbox\n          name=\"sendMedia\"\n          checked={!permissions.sendMedia}\n          label={lang('UserRestrictionsSendMedia')}\n          labelText={`${countCheckedPermissions}/${permissionKeyList.length}`}\n          blocking\n          permissionGroup={permissionGroup}\n          rightIcon={isMediaDropdownOpen ? 'up' : 'down'}\n          onChange={handlePermissionChange}\n          onClickLabel={handleOpenMediaDropdown}\n          disabled={getControlIsDisabled && getControlIsDisabled('sendMedia')}\n        />\n      </div>\n      <div className={dropdownClassName}>\n        <div\n          className={className}\n        >\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendPhotos\"\n              checked={!permissions.sendPhotos}\n              label={lang('UserRestrictionsSendPhotos')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendPhotos')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendVideos\"\n              checked={!permissions.sendVideos}\n              label={lang('UserRestrictionsSendVideos')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendVideos')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendStickers\"\n              checked={!permissions.sendStickers && !permissions.sendGifs}\n              label={lang('UserRestrictionsSendStickers')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendStickers')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendAudios\"\n              checked={!permissions.sendAudios}\n              label={lang('UserRestrictionsSendMusic')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendAudios')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendDocs\"\n              checked={!permissions.sendDocs}\n              label={lang('UserRestrictionsSendFiles')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendDocs')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendVoices\"\n              checked={!permissions.sendVoices}\n              label={lang('UserRestrictionsSendVoices')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendVoices')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendRoundvideos\"\n              checked={!permissions.sendRoundvideos}\n              label={lang('UserRestrictionsSendRound')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendRoundvideos')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"embedLinks\"\n              checked={!permissions.embedLinks}\n              label={lang('UserRestrictionsEmbedLinks')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('embedLinks')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendPolls\"\n              checked={!permissions.sendPolls}\n              label={lang('UserRestrictionsSendPolls')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendPolls')}\n            />\n          </div>\n        </div>\n      </div>\n      <div className={shiftedClassName}>\n        <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n          <Checkbox\n            name=\"inviteUsers\"\n            checked={!permissions.inviteUsers}\n            label={lang('UserRestrictionsInviteUsers')}\n            blocking\n            permissionGroup={permissionGroup}\n            onChange={handlePermissionChange}\n            disabled={getControlIsDisabled && getControlIsDisabled('inviteUsers')}\n          />\n        </div>\n        <div\n          className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}\n          onClick={shouldDisablePermissionForPublicGroup ? handleDisabledClick : undefined}\n        >\n          <Checkbox\n            name=\"pinMessages\"\n            checked={!permissions.pinMessages}\n            label={lang('UserRestrictionsPinMessages')}\n            disabled={getControlIsDisabled ? getControlIsDisabled('pinMessages')\n              : shouldDisablePermissionForPublicGroup}\n            blocking\n            permissionGroup={permissionGroup}\n            onChange={handlePermissionChange}\n          />\n        </div>\n        <div\n          className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}\n          onClick={shouldDisablePermissionForPublicGroup ? handleDisabledClick : undefined}\n        >\n          <Checkbox\n            name=\"changeInfo\"\n            checked={!permissions.changeInfo}\n            label={lang('UserRestrictionsChangeInfo')}\n            blocking\n            permissionGroup={permissionGroup}\n            disabled={getControlIsDisabled ? getControlIsDisabled('changeInfo')\n              : shouldDisablePermissionForPublicGroup}\n            onChange={handlePermissionChange}\n          />\n        </div>\n        {isForum && (\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"manageTopics\"\n              checked={!permissions.manageTopics}\n              label={lang('CreateTopicsPermission')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('manageTopics')}\n            />\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const fullInfo = chat && selectChatFullInfo(global, chat.id);\n    const hasLinkedChat = Boolean(fullInfo?.linkedChatId);\n\n    return {\n      chat,\n      hasLinkedChat,\n    };\n  },\n)(PermissionCheckboxList));\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"_YNfwDqt\",\"root\":\"SeaF_shb\",\"container\":\"axa67kqo\",\"title\":\"U4IFhV0a\",\"singleTitle\":\"qd6OFHiG\",\"actionTitle\":\"yGhFKTl5\",\"restrictionTitle\":\"t3KOsBfm\",\"button\":\"goI3MITH\",\"options\":\"b6847Kh3\",\"dropdownList\":\"czTjjKim\",\"dialogButtons\":\"JTT_DIRv\",\"proceedButtons\":\"L4YzeG91\",\"restrictionContainer\":\"iv0u9Zw6\",\"restrictionContainerOpen\":\"qCQftA04\",\"dropdownListOpen\":\"Ifpyv7Jp\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useMemo,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiChatMember } from '../../api/types';\nimport type { IRadioOption } from '../ui/CheckboxGroup';\n\nimport {\n  getHasAdminRight,\n  getPrivateChatUserId,\n  getUserFirstOrLastName, isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isSystemBot,\n  isUserId,\n} from '../../global/helpers';\nimport { getPeerTitle } from '../../global/helpers/peers';\nimport {\n  getSendersFromSelectedMessages,\n  selectBot,\n  selectCanDeleteSelectedMessages,\n  selectChat,\n  selectChatFullInfo, selectIsChatWithBot,\n  selectSenderFromMessage,\n  selectTabState,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { buildCollectionByCallback, unique } from '../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useManagePermissions from '../right/hooks/useManagePermissions';\n\nimport PermissionCheckboxList from '../main/PermissionCheckboxList';\nimport Button from '../ui/Button';\nimport Checkbox from '../ui/Checkbox';\nimport CheckboxGroup from '../ui/CheckboxGroup';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\nimport AvatarList from './AvatarList';\nimport Icon from './icons/Icon';\n\nimport styles from './DeleteMessageModal.module.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isGroup?: boolean;\n  isChannel?: boolean;\n  isSuperGroup?: boolean;\n  messageIds?: number[];\n  canDeleteForAll?: boolean;\n  contactName?: string;\n  currentUserId?: string;\n  willDeleteForCurrentUserOnly?: boolean;\n  willDeleteForAll?: boolean;\n  adminMembersById?: Record<string, ApiChatMember>;\n  chatBot?: boolean;\n  isSchedule?: boolean;\n  onConfirm?: NoneToVoidFunction;\n  canBanUsers?: boolean;\n  isCreator?: boolean;\n  linkedChatId?: string;\n};\n\nconst DeleteMessageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isChannel,\n  isSuperGroup,\n  isSchedule,\n  currentUserId,\n  messageIds,\n  isCreator,\n  canDeleteForAll,\n  contactName,\n  willDeleteForCurrentUserOnly,\n  willDeleteForAll,\n  onConfirm,\n  chatBot,\n  adminMembersById,\n  canBanUsers,\n  linkedChatId,\n}) => {\n  const {\n    closeDeleteMessageModal,\n    deleteMessages,\n    reportChannelSpam,\n    deleteChatMember,\n    deleteScheduledMessages,\n    exitMessageSelectMode,\n    updateChatMemberBannedRights,\n    deleteParticipantHistory,\n  } = getActions();\n\n  const prevIsOpen = usePreviousDeprecated(isOpen);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const {\n    permissions, havePermissionChanged, handlePermissionChange, resetPermissions,\n  } = useManagePermissions(chat?.defaultBannedRights);\n\n  const [peerIdsToDeleteAll, setPeerIdsToDeleteAll] = useState<string[] | undefined>(undefined);\n  const [peerIdsToBan, setPeerIdsToBan] = useState<string[] | undefined>(undefined);\n  const [peerIdsToReportSpam, setPeerIdsToReportSpam] = useState<string[] | undefined>(undefined);\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n  const [isAdditionalOptionsVisible, setIsAdditionalOptionsVisible] = useState(false);\n  const [shouldDeleteForAll, setShouldDeleteForAll] = useState(true);\n\n  const peerList = useMemo(() => {\n    if (isChannel || !messageIds || !chat) {\n      return MEMO_EMPTY_ARRAY;\n    }\n    const global = getGlobal();\n    const senderArray = getSendersFromSelectedMessages(global, chat.id, messageIds);\n    return senderArray ? unique(senderArray)\n      .filter((peer) => peer?.id !== chat?.id && peer?.id !== linkedChatId) : MEMO_EMPTY_ARRAY;\n  }, [chat, isChannel, linkedChatId, messageIds]);\n\n  const buildNestedOptionListWithAvatars = useLastCallback(() => {\n    return peerList.map((member) => {\n      return {\n        value: `${member.id}`,\n        label: getPeerTitle(lang, member) || '',\n        leftElement: <Avatar size=\"small\" peer={member} />,\n      };\n    });\n  });\n\n  const peerListToDeleteAll = useMemo(() => {\n    return peerList.filter((peer) => peer.id !== linkedChatId && peer.id !== currentUserId);\n  }, [peerList, currentUserId, linkedChatId]);\n\n  const peerListToReportSpam = useMemo(() => {\n    return peerList.filter((peer) => peer.id !== currentUserId && peer.id !== linkedChatId);\n  }, [peerList, currentUserId, linkedChatId]);\n\n  const peerListToBan = useMemo(() => {\n    const isCurrentUserInList = peerList.some((peer) => peer.id === currentUserId);\n    const shouldReturnEmpty = !canBanUsers || isCurrentUserInList;\n\n    if (shouldReturnEmpty) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return peerList.filter((peer) => {\n      const isAdmin = adminMembersById?.[peer.id];\n      return isCreator || !isAdmin;\n    });\n  }, [peerList, isCreator, currentUserId, canBanUsers, adminMembersById]);\n\n  const shouldShowAdditionalOptions = useMemo(() => {\n    return Boolean(peerListToDeleteAll.length || peerListToReportSpam.length || peerListToBan.length);\n  }, [peerListToDeleteAll, peerListToReportSpam, peerListToBan]);\n\n  const shouldShowOption = shouldShowAdditionalOptions\n    && !canDeleteForAll && !isSchedule && isSuperGroup;\n\n  const peerNames = useMemo(() => {\n    if (!peerList || isSchedule) return {};\n    return buildCollectionByCallback(peerList, (peer) => [peer.id, getPeerTitle(lang, peer)]);\n  }, [isSchedule, lang, peerList]);\n\n  const ACTION_SPAM_OPTION: IRadioOption[] = useMemo(() => {\n    return [\n      {\n        value: messageIds && peerList.length >= 2 ? 'spam' : peerList?.[0]?.id,\n        label: oldLang('ReportSpamTitle'),\n        nestedOptions: messageIds && peerList.length >= 2 ? [\n          ...buildNestedOptionListWithAvatars().filter((opt) => opt.value !== linkedChatId\n            && opt.value !== currentUserId),\n        ] : undefined,\n      },\n    ];\n  }, [messageIds, peerList, oldLang, linkedChatId, currentUserId]);\n\n  const ACTION_DELETE_OPTION: IRadioOption[] = useMemo(() => {\n    return [\n      {\n        value: messageIds && peerList.length >= 2 ? 'delete_all' : peerList?.[0]?.id,\n        label: messageIds && peerList.length >= 2\n          ? oldLang('DeleteAllFromUsers')\n          : oldLang('DeleteAllFrom', Object.values(peerNames)[0]),\n        nestedOptions: messageIds && peerList.length >= 2 ? [\n          ...buildNestedOptionListWithAvatars().filter((opt) => opt.value !== linkedChatId\n            && opt.value !== currentUserId),\n        ] : undefined,\n      },\n    ];\n  }, [messageIds, peerList, oldLang, peerNames, linkedChatId, currentUserId]);\n\n  const ACTION_BAN_OPTION: IRadioOption[] = useMemo(() => {\n    return [\n      {\n        value: messageIds && peerList.length >= 2 ? 'ban' : peerList?.[0]?.id,\n        label: messageIds && peerList.length >= 2\n          ? (isAdditionalOptionsVisible ? oldLang('DeleteRestrictUsers') : oldLang('DeleteBanUsers'))\n          : (isAdditionalOptionsVisible ? oldLang('KickFromSupergroup')\n            : oldLang('DeleteBan', Object.values(peerNames)[0])),\n        nestedOptions: messageIds && peerList.length >= 2 ? [\n          ...buildNestedOptionListWithAvatars(),\n        ] : undefined,\n      },\n    ];\n  }, [isAdditionalOptionsVisible, oldLang, messageIds, peerList, peerNames]);\n\n  const toggleAdditionalOptions = useLastCallback(() => {\n    setIsAdditionalOptionsVisible((prev) => !prev);\n  });\n\n  const filterMessageIdByPeerId = useLastCallback((peerIds: string[], selectedMessageIdList: number[]) => {\n    if (!chat) return MEMO_EMPTY_ARRAY;\n    const global = getGlobal();\n    return selectedMessageIdList.filter((msgId) => {\n      const sender = selectSenderFromMessage(global, chat.id, msgId);\n      return sender && peerIds.includes(sender.id);\n    });\n  });\n\n  const handleReportSpam = useLastCallback((userMessagesMap: Record<string, number[]>) => {\n    Object.entries(userMessagesMap).forEach(([userId, messageIdList]) => {\n      if (messageIdList.length) {\n        reportChannelSpam({\n          participantId: userId,\n          chatId: chat!.id,\n          messageIds: messageIdList,\n        });\n      }\n    });\n  });\n\n  const handleDeleteMessages = useLastCallback((filteredMessageIdList: number[]) => {\n    deleteMessages({ messageIds: filteredMessageIdList, shouldDeleteForAll: true });\n  });\n\n  const handleDeleteAllPeerMessages = useLastCallback((peerIdList: string[]) => {\n    if (!chat) return;\n    peerIdList.forEach((peerId) => {\n      deleteParticipantHistory({ peerId, chatId: chat.id });\n    });\n  });\n\n  const handleDeleteMember = useLastCallback((filteredUserIdList: string[]) => {\n    filteredUserIdList.forEach((userId) => {\n      deleteChatMember({ chatId: chat!.id, userId });\n    });\n  });\n\n  const handleUpdateChatMemberBannedRights = useLastCallback((filteredUserIdList: string[]) => {\n    filteredUserIdList.forEach((userId) => {\n      updateChatMemberBannedRights({\n        chatId: chat!.id,\n        userId,\n        bannedRights: permissions,\n      });\n    });\n  });\n\n  const handleDeleteMessageList = useLastCallback(() => {\n    if (!chat || !messageIds) return;\n\n    onConfirm?.();\n    if (isSchedule) {\n      deleteScheduledMessages({ messageIds });\n    } else if (shouldShowOption) {\n      if (peerIdsToReportSpam) {\n        const global = getGlobal();\n        const peerIdList = peerIdsToReportSpam.filter((option) => !Number.isNaN(Number(option)));\n        const messageList = messageIds!.reduce<Record<string, number[]>>((acc, msgId) => {\n          const peer = selectSenderFromMessage(global, chat.id, msgId);\n          if (peer && peerIdList.includes(peer.id)) {\n            if (!acc[peer.id]) {\n              acc[peer.id] = [];\n            }\n            acc[peer.id].push(Number(msgId));\n          }\n          return acc;\n        }, {});\n\n        handleReportSpam(messageList);\n      }\n\n      if (peerIdsToDeleteAll) {\n        const peerIdList = peerIdsToDeleteAll.filter((option) => !Number.isNaN(Number(option)));\n        handleDeleteAllPeerMessages(peerIdList);\n      }\n\n      if (peerIdsToBan && !havePermissionChanged) {\n        const peerIdList = peerIdsToBan.filter((option) => !Number.isNaN(Number(option)));\n        handleDeleteMember(peerIdList);\n        const filteredMessageIdList = filterMessageIdByPeerId(peerIdList, messageIds!);\n        handleDeleteMessages(filteredMessageIdList);\n      }\n\n      if (peerIdsToBan && havePermissionChanged) {\n        const peerIdList = peerIdsToBan.filter((option) => !Number.isNaN(Number(option)));\n        handleUpdateChatMemberBannedRights(peerIdList);\n      }\n\n      if (!peerIdsToReportSpam || !peerIdsToDeleteAll || !peerIdsToBan) {\n        deleteMessages({ messageIds, shouldDeleteForAll });\n      }\n    } else {\n      deleteMessages({ messageIds, shouldDeleteForAll });\n    }\n\n    closeDeleteMessageModal();\n    exitMessageSelectMode();\n  });\n\n  const onCloseHandler = useLastCallback(() => {\n    closeDeleteMessageModal();\n  });\n\n  useEffect(() => {\n    if (!isOpen && prevIsOpen) {\n      setPeerIdsToReportSpam(undefined);\n      setPeerIdsToDeleteAll(undefined);\n      setPeerIdsToBan(undefined);\n      setShouldDeleteForAll(true);\n      setIsMediaDropdownOpen(false);\n      setIsAdditionalOptionsVisible(false);\n      resetPermissions();\n    }\n  }, [isOpen, prevIsOpen, resetPermissions]);\n\n  function renderHeader() {\n    return (\n      <div\n        className={shouldShowOption && styles.container}\n        dir={oldLang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldShowOption && (\n          <AvatarList\n            size=\"small\"\n            peers={peerList}\n          />\n        )}\n        <h3 className={buildClassName(shouldShowOption ? styles.title : styles.singleTitle)}>\n          {oldLang('Chat.DeleteMessagesConfirmation', messageIds?.length)}\n        </h3>\n      </div>\n    );\n  }\n\n  function renderAdditionalActionOptions() {\n    return (\n      <div className={styles.options}>\n        <CheckboxGroup\n          options={ACTION_SPAM_OPTION}\n          onChange={setPeerIdsToReportSpam}\n          selected={peerIdsToReportSpam}\n          nestedCheckbox={messageIds && peerList.length >= 2}\n        />\n        {peerListToDeleteAll?.length > 0 && (\n          <CheckboxGroup\n            options={ACTION_DELETE_OPTION}\n            onChange={setPeerIdsToDeleteAll}\n            selected={peerIdsToDeleteAll}\n            nestedCheckbox={messageIds && peerList.length >= 2}\n          />\n        )}\n        {peerListToBan?.length > 0 && (\n          <CheckboxGroup\n            options={ACTION_BAN_OPTION}\n            onChange={setPeerIdsToBan}\n            selected={peerIdsToBan}\n            nestedCheckbox={messageIds && peerList.length >= 2}\n          />\n        )}\n      </div>\n    );\n  }\n\n  function renderPartiallyRestrictedUser() {\n    return (\n      <div className={buildClassName(styles.restrictionContainer,\n        isAdditionalOptionsVisible && styles.restrictionContainerOpen)}\n      >\n        <h3 className={buildClassName(styles.actionTitle, styles.restrictionTitle)}>\n          {oldLang('UserRestrictionsCanDoUsers', peerList.length)}\n        </h3>\n        <PermissionCheckboxList\n          withCheckbox\n          chatId={chat?.id}\n          isMediaDropdownOpen={isMediaDropdownOpen}\n          setIsMediaDropdownOpen={setIsMediaDropdownOpen}\n          handlePermissionChange={handlePermissionChange}\n          permissions={permissions}\n          className={buildClassName(\n            styles.dropdownList,\n            isMediaDropdownOpen && styles.dropdownListOpen,\n          )}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onCloseHandler}\n      onEnter={canDeleteForAll ? undefined : handleDeleteMessageList}\n      className={styles.root}\n    >\n      <div className={styles.main}>\n        {renderHeader()}\n        {shouldShowOption && (\n          <>\n            <p className={styles.actionTitle}>{oldLang('DeleteAdditionalActions')}</p>\n            {renderAdditionalActionOptions()}\n            {renderPartiallyRestrictedUser()}\n            {\n              peerIdsToBan && canBanUsers ? (\n                <ListItem\n                  narrow\n                  buttonClassName={styles.button}\n                  onClick={toggleAdditionalOptions}\n                >\n                  {oldLang(isAdditionalOptionsVisible ? 'DeleteToggleBanUsers' : 'DeleteToggleRestrictUsers')}\n                  <Icon\n                    name={isAdditionalOptionsVisible ? 'up' : 'down'}\n                    className={buildClassName(styles.button, 'ml-2')}\n                  />\n                </ListItem>\n              ) : setIsAdditionalOptionsVisible(false)\n            }\n          </>\n        )}\n        {(canDeleteForAll || chatBot || !shouldShowOption) && (\n          <>\n            <p>{messageIds && messageIds.length > 1\n              ? lang('AreYouSureDeleteFewMessages') : lang('AreYouSureDeleteSingleMessage')}\n            </p>\n            {willDeleteForCurrentUserOnly && (\n              <p>{oldLang('lng_delete_for_me_chat_hint', 1, 'i')}</p>\n            )}\n            {willDeleteForAll && (\n              <p>{oldLang('lng_delete_for_everyone_hint', 1, 'i')}</p>\n            )}\n          </>\n        )}\n        {canDeleteForAll && (\n          <Checkbox\n            className=\"dialog-checkbox\"\n            label={contactName ? renderText(oldLang('DeleteMessagesOptionAlso', contactName))\n              : oldLang('Conversation.DeleteMessagesForEveryone')}\n            checked={shouldDeleteForAll}\n            onCheck={setShouldDeleteForAll}\n          />\n        )}\n        <div className={buildClassName('dialog-buttons',\n          isMediaDropdownOpen ? styles.dialogButtons : styles.proceedButtons)}\n        >\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageList}>\n            {shouldShowOption ? oldLang('DeleteProceedBtn') : lang('Delete')}\n          </Button>\n          <Button className=\"confirm-dialog-button\" isText onClick={onCloseHandler}>{oldLang('Cancel')}</Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      deleteMessageModal,\n    } = selectTabState(global);\n    const messageIds = deleteMessageModal?.messageIds;\n    const chatId = deleteMessageModal?.chatId;\n    const { canDeleteForAll } = selectCanDeleteSelectedMessages(global, messageIds);\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const linkedChatId = chatFullInfo?.linkedChatId;\n    const isChannel = Boolean(chat) && isChatChannel(chat);\n    const isSuperGroup = Boolean(chat) && isChatSuperGroup(chat);\n    const isSchedule = deleteMessageModal?.isSchedule;\n    const onConfirm = deleteMessageModal?.onConfirm;\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n    const chatBot = Boolean(chat && !isSystemBot(chat.id) && selectBot(global, chat.id));\n    const adminMembersById = chatFullInfo?.adminMembersById;\n    const canBanUsers = chat && getHasAdminRight(chat, 'banUsers');\n    const isCreator = chat?.isCreator;\n    const isChatWithBot = chat ? selectIsChatWithBot(global, chat) : undefined;\n    const willDeleteForCurrentUserOnly = (chat && isChatBasicGroup(chat) && !canDeleteForAll) || isChatWithBot;\n    const willDeleteForAll = chat && (isChatSuperGroup(chat) || isChannel);\n\n    return {\n      chat,\n      isChannel,\n      isSuperGroup,\n      messageIds,\n      currentUserId: global.currentUserId,\n      canDeleteForAll: !isSchedule && canDeleteForAll,\n      contactName,\n      willDeleteForCurrentUserOnly,\n      willDeleteForAll,\n      adminMembersById,\n      chatBot,\n      canBanUsers,\n      linkedChatId,\n      isSchedule,\n      isCreator,\n      onConfirm,\n    };\n  },\n)(DeleteMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport {\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserId,\n} from '../../global/helpers';\nimport { selectChat, selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  messageId: number;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isPrivateChat: boolean;\n  isChatWithSelf: boolean;\n  isGroup: boolean;\n  isSuperGroup: boolean;\n  canPinForAll: boolean;\n  contactName?: string;\n};\n\nconst PinMessageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chatId,\n  messageId,\n  isChannel,\n  isGroup,\n  isSuperGroup,\n  canPinForAll,\n  contactName,\n  onClose,\n}) => {\n  const { pinMessage } = getActions();\n\n  const handlePinMessageForAll = useCallback(() => {\n    pinMessage({\n      chatId, messageId, isUnpin: false,\n    });\n    onClose();\n  }, [chatId, messageId, onClose]);\n\n  const handlePinMessage = useCallback(() => {\n    pinMessage({\n      chatId, messageId, isUnpin: false, isOneSide: true, isSilent: true,\n    });\n    onClose();\n  }, [chatId, messageId, onClose]);\n\n  const lang = useOldLang();\n\n  function renderMessage() {\n    if (isChannel) {\n      return lang('PinMessageAlertChannel');\n    }\n\n    if (isGroup || isSuperGroup) {\n      return lang('PinMessageAlert');\n    }\n\n    return lang('PinMessageAlertChat');\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"pin\"\n      title={lang('PinMessageAlertTitle')}\n    >\n      <p>{renderMessage()}</p>\n      <div className=\"dialog-buttons-column\">\n        <Button className=\"confirm-dialog-button\" isText onClick={handlePinMessage}>\n          {lang('DialogPin')}\n        </Button>\n        {canPinForAll && (\n          <Button className=\"confirm-dialog-button\" isText onClick={handlePinMessageForAll}>\n            {contactName\n              ? renderText(lang('Conversation.PinMessagesFor', contactName))\n              : lang('Conversation.PinMessageAlert.PinAndNotifyMembers')}\n          </Button>\n        )}\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const isPrivateChat = isUserId(chatId);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat) && isChatChannel(chat);\n    const isGroup = Boolean(chat) && isChatBasicGroup(chat);\n    const isSuperGroup = Boolean(chat) && isChatSuperGroup(chat);\n    const canPinForAll = (isPrivateChat && !isChatWithSelf) || isSuperGroup || isGroup;\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isChannel,\n      isGroup,\n      isSuperGroup,\n      canPinForAll,\n      contactName,\n    };\n  },\n)(PinMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId?: string;\n  pinnedMessagesCount?: number;\n  onClose: () => void;\n  onUnpin: () => void;\n};\n\nconst UnpinAllMessagesModal: FC<OwnProps> = ({\n  isOpen,\n  pinnedMessagesCount = 0,\n  onClose,\n  onUnpin,\n}) => {\n  const lang = useOldLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"unpin-all\"\n      title={lang('Chat.PanelUnpinAllMessages')}\n    >\n      <p>{lang('Chat.UnpinAllMessagesConfirmation', pinnedMessagesCount, 'i')}</p>\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" isText onClick={onUnpin}>\n          {lang('DialogUnpin')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(UnpinAllMessagesModal);\n","import { useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport { useHotkeys } from '../../../hooks/useHotkeys';\n\nconst useCopySelectedMessages = (isActive?: boolean) => {\n  function handleCopy(e: KeyboardEvent) {\n    e.preventDefault();\n    getActions().copySelectedMessages();\n  }\n\n  useHotkeys(useMemo(() => (isActive ? {\n    'Mod+C': handleCopy,\n  } : undefined), [isActive]));\n};\n\nexport default useCopySelectedMessages;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\nimport type { MessageListType } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport {\n  selectCanDeleteSelectedMessages,\n  selectCanDownloadSelectedMessages,\n  selectCanForwardMessages,\n  selectCanReportSelectedMessages, selectCurrentChat,\n  selectCurrentMessageList, selectHasProtectedMessage,\n  selectSelectedMessagesCount,\n  selectTabState,\n} from '../../global/selectors';\nimport { selectSharedSettings } from '../../global/selectors/sharedState';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useCopySelectedMessages from './hooks/useCopySelectedMessages';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nimport './MessageSelectToolbar.scss';\n\nexport type OwnProps = {\n  isActive?: boolean;\n  canPost?: boolean;\n  messageListType?: MessageListType;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isSchedule: boolean;\n  selectedMessagesCount?: number;\n  canDeleteMessages?: boolean;\n  canReportMessages?: boolean;\n  canDownloadMessages?: boolean;\n  canForwardMessages?: boolean;\n  hasProtectedMessage?: boolean;\n  isAnyModalOpen?: boolean;\n  selectedMessageIds?: number[];\n  shouldWarnAboutSvg?: boolean;\n};\n\nconst MessageSelectToolbar: FC<OwnProps & StateProps> = ({\n  chat,\n  canPost,\n  isActive,\n  messageListType,\n  isSchedule,\n  selectedMessagesCount,\n  canDeleteMessages,\n  canReportMessages,\n  canDownloadMessages,\n  canForwardMessages,\n  hasProtectedMessage,\n  isAnyModalOpen,\n  selectedMessageIds,\n  shouldWarnAboutSvg,\n}) => {\n  const {\n    exitMessageSelectMode,\n    openForwardMenuForSelectedMessages,\n    downloadSelectedMessages,\n    copySelectedMessages,\n    showNotification,\n    reportMessages,\n    openDeleteMessageModal,\n    setSharedSettingOption,\n  } = getActions();\n  const lang = useOldLang();\n\n  useCopySelectedMessages(isActive);\n\n  const [isSvgDialogOpen, openSvgDialog, closeSvgDialog] = useFlag();\n  const [shouldNotWarnAboutSvg, setShouldNotWarnAboutSvg] = useState(false);\n\n  const handleExitMessageSelectMode = useLastCallback(() => {\n    exitMessageSelectMode();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    if (!selectedMessageIds || !chat) return;\n    openDeleteMessageModal({\n      chatId: chat.id,\n      messageIds: selectedMessageIds,\n      isSchedule,\n    });\n  });\n\n  useEffect(() => {\n    return isActive && !isAnyModalOpen\n      ? captureKeyboardListeners({\n        onBackspace: canDeleteMessages ? handleDelete : undefined,\n        onDelete: canDeleteMessages ? handleDelete : undefined,\n        onEsc: handleExitMessageSelectMode,\n      })\n      : undefined;\n  }, [\n    isActive, handleDelete, handleExitMessageSelectMode, isAnyModalOpen,\n    canDeleteMessages,\n  ]);\n\n  const handleCopy = useLastCallback(() => {\n    copySelectedMessages();\n    showNotification({\n      message: lang('Share.Link.Copied'),\n    });\n    exitMessageSelectMode();\n  });\n\n  const handleDownload = useLastCallback(() => {\n    downloadSelectedMessages();\n    exitMessageSelectMode();\n  });\n\n  const handleMessageDownload = useLastCallback(() => {\n    if (shouldWarnAboutSvg) {\n      openSvgDialog();\n      return;\n    }\n\n    handleDownload();\n  });\n\n  const handleSvgConfirm = useLastCallback(() => {\n    setSharedSettingOption({ shouldWarnAboutSvg: false });\n    closeSvgDialog();\n    handleDownload();\n  });\n\n  const prevSelectedMessagesCount = usePreviousDeprecated(selectedMessagesCount || undefined, true);\n  const renderingSelectedMessagesCount = isActive ? selectedMessagesCount : prevSelectedMessagesCount;\n\n  const formattedMessagesCount = lang('VoiceOver.Chat.MessagesSelected', renderingSelectedMessagesCount, 'i');\n\n  const openMessageReport = useLastCallback(() => {\n    if (!selectedMessageIds || !chat) return;\n    reportMessages({\n      chatId: chat.id,\n      messageIds: selectedMessageIds,\n    });\n    exitMessageSelectMode();\n  });\n\n  const className = buildClassName(\n    'MessageSelectToolbar',\n    canPost && 'with-composer',\n    isActive && 'shown',\n  );\n\n  const renderButton = (\n    icon: IconName, label: string, onClick: AnyToVoidFunction, destructive?: boolean,\n  ) => {\n    return (\n      <div\n        role=\"button\"\n        tabIndex={0}\n        className={buildClassName(\n          'div-button',\n          'item',\n          destructive && 'destructive',\n        )}\n        onClick={onClick}\n        title={label}\n        aria-label={label}\n      >\n        <Icon name={icon} />\n      </div>\n    );\n  };\n\n  return (\n    <>\n      <div className={className}>\n        <div className=\"MessageSelectToolbar-inner\">\n          <Button\n            color=\"translucent\"\n            round\n            onClick={handleExitMessageSelectMode}\n            ariaLabel=\"Exit select mode\"\n          >\n            <Icon name=\"close\" />\n          </Button>\n          <span className=\"MessageSelectToolbar-count\" title={formattedMessagesCount}>\n            {formattedMessagesCount}\n          </span>\n\n          {Boolean(selectedMessagesCount) && (\n            <div className=\"MessageSelectToolbar-actions\">\n              {messageListType !== 'scheduled' && canForwardMessages && (\n                renderButton(\n                  'forward', lang('Chat.ForwardActionHeader'), openForwardMenuForSelectedMessages,\n                )\n              )}\n              {canReportMessages && (\n                renderButton('flag', lang('Conversation.ReportMessages'), openMessageReport)\n              )}\n              {canDownloadMessages && !hasProtectedMessage && (\n                renderButton('download', lang('lng_media_download'), handleMessageDownload)\n              )}\n              {!hasProtectedMessage && (\n                renderButton('copy', lang('lng_context_copy_selected_items'), handleCopy)\n              )}\n              {canDeleteMessages && (\n                renderButton('delete', lang('EditAdminGroupDeleteMessages'), handleDelete, true)\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n      <ConfirmDialog\n        isOpen={isSvgDialogOpen}\n        onClose={closeSvgDialog}\n        confirmHandler={handleSvgConfirm}\n      >\n        {lang('lng_launch_svg_warning')}\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldNotWarnAboutSvg}\n          label={lang('lng_launch_exe_dont_ask')}\n          onCheck={setShouldNotWarnAboutSvg}\n        />\n      </ConfirmDialog>\n    </>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const tabState = selectTabState(global);\n    const { shouldWarnAboutSvg } = selectSharedSettings(global);\n    const chat = selectCurrentChat(global);\n\n    const { type: messageListType, chatId } = selectCurrentMessageList(global) || {};\n    const isSchedule = messageListType === 'scheduled';\n    const { canDelete } = selectCanDeleteSelectedMessages(global);\n    const canReport = Boolean(!isSchedule && selectCanReportSelectedMessages(global));\n    const canDownload = selectCanDownloadSelectedMessages(global);\n    const { messageIds: selectedMessageIds } = tabState.selectedMessages || {};\n    const hasProtectedMessage = chatId ? selectHasProtectedMessage(global, chatId, selectedMessageIds) : false;\n    const canForward = !isSchedule && chatId ? selectCanForwardMessages(global, chatId, selectedMessageIds) : false;\n    const isShareMessageModalOpen = tabState.isShareMessageModalShown;\n    const isAnyModalOpen = Boolean(isShareMessageModalOpen || tabState.requestedDraft\n      || tabState.requestedAttachBotInChat || tabState.requestedAttachBotInstall || tabState.reportModal\n      || tabState.deleteMessageModal);\n\n    return {\n      chat,\n      isSchedule,\n      selectedMessagesCount: selectSelectedMessagesCount(global),\n      canDeleteMessages: canDelete,\n      canReportMessages: canReport,\n      canDownloadMessages: canDownload,\n      canForwardMessages: canForward,\n      selectedMessageIds,\n      hasProtectedMessage,\n      isAnyModalOpen,\n      shouldWarnAboutSvg,\n    };\n  },\n)(MessageSelectToolbar));\n","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectChatMessage, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dates/dateFormat';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport PrivateChatInfo from './PrivateChatInfo';\n\nimport styles from './SeenByModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\nexport type StateProps = {\n  seenByDates?: Record<string, number>;\n};\n\nconst CLOSE_ANIMATION_DURATION = 100;\n\nfunction SeenByModal({\n  isOpen,\n  seenByDates,\n}: OwnProps & StateProps) {\n  const {\n    openChat,\n    closeSeenByModal,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const renderingSeenByDates = useCurrentOrPrev(seenByDates, true);\n  const memberIds = useMemo(() => {\n    if (!renderingSeenByDates) {\n      return undefined;\n    }\n\n    const result = Object.keys(renderingSeenByDates);\n    result.sort((leftId, rightId) => renderingSeenByDates[rightId] - renderingSeenByDates[leftId]);\n\n    return result;\n  }, [renderingSeenByDates]);\n\n  const handleClick = useLastCallback((userId: string) => {\n    closeSeenByModal();\n\n    setTimeout(() => {\n      openChat({ id: userId });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleCloseSeenByModal = useLastCallback(() => {\n    closeSeenByModal();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={closeSeenByModal}\n      className={buildClassName(styles.modal, 'narrow')}\n      title={`Seen by ${memberIds?.length} users`}\n    >\n      <div dir={lang.isRtl ? 'rtl' : undefined}>\n        {memberIds && memberIds.map((userId) => (\n          <ListItem\n            key={userId}\n            className=\"chat-item-clickable scroll-item small-icon\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleClick(userId)}\n          >\n            <PrivateChatInfo\n              userId={userId}\n              noStatusOrTyping\n              status={formatDateAtTime(lang, renderingSeenByDates![userId] * 1000)}\n              statusIcon=\"message-read\"\n            />\n          </ListItem>\n        ))}\n      </div>\n      <div className=\"dialog-buttons mt-2\">\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={handleCloseSeenByModal}\n        >\n          {lang('Close')}\n        </Button>\n      </div>\n    </Modal>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).seenByModal || {};\n    if (!chatId || !messageId) {\n      return {};\n    }\n\n    return {\n      seenByDates: selectChatMessage(global, chatId, messageId)?.seenByDates,\n    };\n  },\n)(SeenByModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"slqA9gR2\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"tauadiDm\",\"icon\":\"i4wZg_0J\",\"header\":\"MQxuEIRA\",\"desc\":\"AEAN1Au4\",\"separator\":\"sXXb5yOS\",\"button\":\"F7owtTHj\",\"closeButton\":\"i6iFv9YE\"};","import React, { memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiUser } from '../../api/types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectTabState, selectUser } from '../../global/selectors';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal, { ANIMATION_DURATION } from '../ui/Modal';\nimport Separator from '../ui/Separator';\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\nimport Icon from './icons/Icon';\n\nimport styles from './PrivacySettingsNoticeModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  isReadDate?: boolean;\n};\n\nconst CLOSE_ANIMATION_DURATION = ANIMATION_DURATION + ANIMATION_END_DELAY;\n\nconst PrivacySettingsNoticeModal = ({ isOpen, isReadDate, user }: OwnProps & StateProps) => {\n  const lang = useOldLang();\n  const {\n    updateGlobalPrivacySettings,\n    openPremiumModal,\n    closePrivacySettingsNoticeModal,\n    showNotification,\n    setPrivacyVisibility,\n    loadUser,\n  } = getActions();\n  const userName = getUserFirstOrLastName(user);\n\n  const handleShowReadTime = useLastCallback(() => {\n    updateGlobalPrivacySettings({ shouldHideReadMarks: false });\n    closePrivacySettingsNoticeModal();\n\n    setTimeout(() => {\n      showNotification({ message: lang('PremiumReadSet') });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleShowLastSeen = useLastCallback(() => {\n    setPrivacyVisibility({\n      privacyKey: 'lastSeen',\n      visibility: 'everybody',\n      onSuccess: () => loadUser({ userId: user!.id }),\n    });\n    closePrivacySettingsNoticeModal();\n\n    setTimeout(() => {\n      showNotification({ message: lang('PremiumLastSeenSet') });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleOpenPremium = useLastCallback(() => {\n    closePrivacySettingsNoticeModal();\n\n    setTimeout(() => {\n      openPremiumModal({ initialSection: 'last_seen' });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleClose = useLastCallback(() => {\n    closePrivacySettingsNoticeModal();\n  });\n\n  return (\n    <Modal isSlim isOpen={isOpen} onClose={handleClose}>\n      <div className={styles.container} dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button\n          className={styles.closeButton}\n          color=\"translucent\"\n          round\n          size=\"smaller\"\n          onClick={handleClose}\n          ariaLabel=\"Close\"\n        >\n          <Icon name=\"close\" />\n        </Button>\n        <AnimatedIconWithPreview\n          tgsUrl={isReadDate ? LOCAL_TGS_URLS.ReadTime : LOCAL_TGS_URLS.LastSeen}\n          size={84}\n          className={styles.icon}\n          nonInteractive\n          noLoop\n        />\n        <h2 className={styles.header}>\n          {lang(isReadDate ? 'PremiumReadHeader1' : 'PremiumLastSeenHeader1')}\n        </h2>\n        <p className={styles.desc}>\n          {renderText(\n            lang(\n              isReadDate ? 'PremiumReadText1' : 'PremiumLastSeenText1Locked',\n              userName,\n            ),\n            ['simple_markdown'],\n          )}\n        </p>\n        <Button\n          size=\"smaller\"\n          onClick={isReadDate ? handleShowReadTime : handleShowLastSeen}\n          className={styles.button}\n        >\n          {lang(isReadDate ? 'PremiumReadButton1' : 'PremiumLastSeenButton1')}\n        </Button>\n        <Separator className={styles.separator}>{lang('PremiumOr')}</Separator>\n        <h2 className={styles.header}>{lang('PremiumReadHeader2')}</h2>\n        <p className={styles.desc}>\n          {renderText(\n            lang(isReadDate ? 'PremiumReadText2' : 'PremiumLastSeenText2', userName),\n            ['simple_markdown'],\n          )}\n        </p>\n        <Button\n          withPremiumGradient\n          size=\"smaller\"\n          onClick={handleOpenPremium}\n          className={styles.button}\n        >\n          {lang('PremiumLastSeenButton2')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(\n  withGlobal<OwnProps>((global): StateProps => {\n    const { chatId, isReadDate } = selectTabState(global).privacySettingsNoticeModal || {};\n    const user = chatId ? selectUser(global, chatId) : undefined;\n\n    return { user, isReadDate };\n  })(PrivacySettingsNoticeModal),\n);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiAvailableReaction, ApiMessage, ApiReaction } from '../../api/types';\nimport { LoadMoreDirection } from '../../types';\n\nimport { getReactionKey, isSameReaction } from '../../global/helpers';\nimport {\n  selectChatMessage,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dates/dateFormat';\nimport { unique } from '../../util/iteratees';\nimport { formatIntegerCompact } from '../../util/textFormat';\n\nimport useFlag from '../../hooks/useFlag';\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport FullNameTitle from '../common/FullNameTitle';\nimport Icon from '../common/icons/Icon';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ReactionStaticEmoji from '../common/reactions/ReactionStaticEmoji';\nimport Button from '../ui/Button';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport Modal from '../ui/Modal';\n\nimport './ReactorListModal.scss';\n\nconst MIN_REACTIONS_COUNT_FOR_FILTERS = 10;\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\nexport type StateProps = Pick<ApiMessage, 'reactors' | 'reactions' | 'seenByDates'> & {\n  chatId?: string;\n  messageId?: number;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst ReactorListModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  reactors,\n  reactions,\n  chatId,\n  messageId,\n  seenByDates,\n  availableReactions,\n}) => {\n  const {\n    loadReactors,\n    closeReactorListModal,\n    openChat,\n  } = getActions();\n\n  // No need for expensive global updates on chats or users, so we avoid them\n  const chatsById = getGlobal().chats.byId;\n  const usersById = getGlobal().users.byId;\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const [isClosing, startClosing, stopClosing] = useFlag(false);\n  const [chosenTab, setChosenTab] = useState<ApiReaction | undefined>(undefined);\n  const canShowFilters = reactors && reactions && reactors.count >= MIN_REACTIONS_COUNT_FOR_FILTERS\n    && reactions.results.length > 1;\n  const chatIdRef = useRef<string>();\n\n  useEffect(() => {\n    if (isOpen && !isClosing) {\n      chatIdRef.current = undefined;\n    }\n\n    if (isClosing && !isOpen) {\n      stopClosing();\n      setChosenTab(undefined);\n    }\n  }, [isClosing, isOpen, stopClosing]);\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    if (chatIdRef.current) {\n      openChat({ id: chatIdRef.current });\n    }\n    closeReactorListModal();\n  });\n\n  const handleClose = useLastCallback(() => {\n    startClosing();\n  });\n\n  const handleClick = useLastCallback((userId: string) => {\n    chatIdRef.current = userId;\n    handleClose();\n  });\n\n  const handleLoadMore = useLastCallback(() => {\n    loadReactors({\n      chatId: chatId!,\n      messageId: messageId!,\n    });\n  });\n\n  const allReactions = useMemo(() => {\n    const uniqueReactions: ApiReaction[] = [];\n    reactors?.reactions?.forEach(({ reaction }) => {\n      if (!uniqueReactions.some((r) => isSameReaction(r, reaction))) {\n        uniqueReactions.push(reaction);\n      }\n    });\n    return uniqueReactions;\n  }, [reactors]);\n\n  const peerIds = useMemo(() => {\n    if (chosenTab) {\n      return reactors?.reactions\n        .filter(({ reaction }) => isSameReaction(reaction, chosenTab))\n        .map(({ peerId }) => peerId);\n    }\n\n    const seenByUserIds = Object.keys(seenByDates || {});\n\n    return unique(reactors?.reactions.map(({ peerId }) => peerId).concat(seenByUserIds || []) || []);\n  }, [chosenTab, reactors, seenByDates]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(\n    handleLoadMore, peerIds, reactors && reactors.nextOffset === undefined,\n  );\n\n  useEffect(() => {\n    getMore?.({ direction: LoadMoreDirection.Backwards });\n  }, [getMore]);\n\n  return (\n    <Modal\n      isOpen={isOpen && !isClosing}\n      onClose={handleClose}\n      className=\"ReactorListModal narrow\"\n      title={oldLang('Reactions')}\n      onCloseAnimationEnd={handleCloseAnimationEnd}\n    >\n      {canShowFilters && (\n        <div className=\"Reactions\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n          <Button\n            className={buildClassName(!chosenTab && 'chosen')}\n            size=\"tiny\"\n            ripple\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => setChosenTab(undefined)}\n          >\n            <Icon name=\"heart\" />\n            {Boolean(reactors?.count) && formatIntegerCompact(lang, reactors.count)}\n          </Button>\n          {allReactions.map((reaction) => {\n            const count = reactions?.results\n              .find((reactionsCount) => isSameReaction(reactionsCount.reaction, reaction))?.count;\n            return (\n              <Button\n                key={getReactionKey(reaction)}\n                className={buildClassName(isSameReaction(chosenTab, reaction) && 'chosen')}\n                size=\"tiny\"\n                ripple\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => setChosenTab(reaction)}\n              >\n                <ReactionStaticEmoji\n                  reaction={reaction}\n                  className=\"reaction-filter-emoji\"\n                  availableReactions={availableReactions}\n                />\n                {Boolean(count) && formatIntegerCompact(lang, count)}\n              </Button>\n            );\n          })}\n        </div>\n      )}\n\n      <div dir={oldLang.isRtl ? 'rtl' : undefined} className=\"reactor-list-wrapper\">\n        {viewportIds?.length ? (\n          <InfiniteScroll\n            className=\"reactor-list custom-scroll\"\n            items={viewportIds}\n            onLoadMore={getMore}\n          >\n            {viewportIds?.flatMap(\n              (peerId) => {\n                const peer = usersById[peerId] || chatsById[peerId];\n\n                const peerReactions = reactors?.reactions.filter((reactor) => reactor.peerId === peerId);\n                const items: React.ReactNode[] = [];\n                const seenByUser = seenByDates?.[peerId];\n\n                peerReactions?.forEach((r) => {\n                  if (chosenTab && !isSameReaction(r.reaction, chosenTab)) return;\n\n                  items.push(\n                    <ListItem\n                      key={`${peerId}-${getReactionKey(r.reaction)}`}\n                      className=\"chat-item-clickable reactors-list-item\"\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => handleClick(peerId)}\n                    >\n                      <Avatar peer={peer} size=\"medium\" />\n                      <div className=\"info\">\n                        <FullNameTitle peer={peer} withEmojiStatus />\n                        <span className=\"status\" dir=\"auto\">\n                          <Icon name=\"heart-outline\" className=\"status-icon\" />\n                          {formatDateAtTime(oldLang, r.addedDate * 1000)}\n                        </span>\n                      </div>\n                      {r.reaction && (\n                        <ReactionStaticEmoji\n                          className=\"reactors-list-emoji\"\n                          reaction={r.reaction}\n                          availableReactions={availableReactions}\n                        />\n                      )}\n                    </ListItem>,\n                  );\n                });\n\n                if (!chosenTab && !peerReactions?.length) {\n                  items.push(\n                    <ListItem\n                      key={`${peerId}-seen-by`}\n                      className=\"chat-item-clickable scroll-item small-icon\"\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => handleClick(peerId)}\n                    >\n                      <PrivateChatInfo\n                        userId={peerId}\n                        noStatusOrTyping\n                        avatarSize=\"medium\"\n                        status={seenByUser ? formatDateAtTime(oldLang, seenByUser * 1000) : undefined}\n                        statusIcon=\"message-read\"\n                      />\n                    </ListItem>,\n                  );\n                }\n                return items;\n              },\n            )}\n          </InfiniteScroll>\n        ) : <Loading />}\n      </div>\n      <Button\n        className=\"confirm-dialog-button\"\n        isText\n        onClick={handleClose}\n      >\n        {oldLang('Close')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).reactorModal || {};\n    const message = chatId && messageId ? selectChatMessage(global, chatId, messageId) : undefined;\n\n    return {\n      chatId,\n      messageId,\n      reactions: message?.reactions,\n      reactors: message?.reactors,\n      seenByDates: message?.seenByDates,\n      availableReactions: global.reactions.availableReactions,\n    };\n  },\n)(ReactorListModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  beginHeavyAnimation,\n  memo, useEffect, useLayoutEffect, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ActiveEmojiInteraction } from '../../types';\n\nimport {\n  selectAnimatedEmojiEffect,\n} from '../../global/selectors';\nimport { IS_ANDROID } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedSticker from '../common/AnimatedSticker';\n\nimport './EmojiInteractionAnimation.scss';\n\nexport type OwnProps = {\n  activeEmojiInteraction: ActiveEmojiInteraction;\n};\n\ntype StateProps = {\n  effectAnimationId?: string;\n};\n\nconst HIDE_ANIMATION_DURATION = 250;\nconst PLAYING_DURATION = 3000;\nconst EFFECT_SIZE = 309;\n\nconst EmojiInteractionAnimation: FC<OwnProps & StateProps> = ({\n  effectAnimationId,\n  activeEmojiInteraction,\n}) => {\n  const { stopActiveEmojiInteraction } = getActions();\n\n  const [isHiding, startHiding] = useFlag(false);\n  const [isPlaying, startPlaying] = useFlag(false);\n  const timeoutRef = useRef<NodeJS.Timeout>();\n\n  const stop = useLastCallback(() => {\n    startHiding();\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n    setTimeout(() => {\n      stopActiveEmojiInteraction({ id: activeEmojiInteraction.id });\n    }, HIDE_ANIMATION_DURATION);\n  });\n\n  const handleCancelAnimation = useLastCallback((e: UIEvent) => {\n    if (!(e.target as HTMLElement)?.closest('.AnimatedEmoji')) {\n      stop();\n    }\n  });\n\n  useEffect(() => {\n    document.addEventListener('touchstart', handleCancelAnimation);\n    document.addEventListener('touchmove', handleCancelAnimation);\n    document.addEventListener('mousedown', handleCancelAnimation);\n    document.addEventListener('wheel', handleCancelAnimation);\n\n    return () => {\n      document.removeEventListener('touchstart', handleCancelAnimation);\n      document.removeEventListener('touchmove', handleCancelAnimation);\n      document.removeEventListener('mousedown', handleCancelAnimation);\n      document.removeEventListener('wheel', handleCancelAnimation);\n    };\n  }, [handleCancelAnimation]);\n\n  useLayoutEffect(() => {\n    const endHeavyAnimation = beginHeavyAnimation();\n\n    timeoutRef.current = setTimeout(() => {\n      stop();\n      endHeavyAnimation();\n    }, PLAYING_DURATION);\n  }, [stop]);\n\n  const effectHash = effectAnimationId && `sticker${effectAnimationId}`;\n  const effectTgsUrl = useMedia(effectHash, !effectAnimationId);\n\n  if (!activeEmojiInteraction.startSize) {\n    return undefined;\n  }\n\n  const scale = (activeEmojiInteraction.startSize || 0) / EFFECT_SIZE;\n\n  return (\n    <div\n      className={buildClassName(\n        'EmojiInteractionAnimation',\n        isHiding && 'hiding',\n        isPlaying && 'playing',\n        activeEmojiInteraction.isReversed && 'reversed',\n      )}\n      style={`--scale: ${scale}; --start-x: ${activeEmojiInteraction.x}px; --start-y: ${activeEmojiInteraction.y}px;`}\n    >\n      <AnimatedSticker\n        key={`effect_${effectAnimationId}`}\n        size={EFFECT_SIZE}\n        tgsUrl={effectTgsUrl}\n        play\n        quality={IS_ANDROID ? 0.5 : undefined}\n        forceAlways\n        noLoop\n        onLoad={startPlaying}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { activeEmojiInteraction }): StateProps => {\n    const animatedEffect = activeEmojiInteraction.animatedEffect !== undefined\n      && selectAnimatedEmojiEffect(global, activeEmojiInteraction.animatedEffect);\n    return {\n      effectAnimationId: animatedEffect ? animatedEffect.id : undefined,\n    };\n  },\n)(EmojiInteractionAnimation));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { SUPPORTED_TRANSLATION_LANGUAGES } from '../../config';\nimport {\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from '../common/helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\n\nimport styles from './ChatLanguageModal.module.scss';\n\ntype LanguageItem = {\n  langCode: string;\n  translatedName: string;\n  originalName: string;\n};\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  chatId?: string;\n  messageId?: number;\n  activeTranslationLanguage?: string;\n  currentLanguageCode: string;\n};\n\nconst ChatLanguageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chatId,\n  messageId,\n  activeTranslationLanguage,\n  currentLanguageCode,\n}) => {\n  const {\n    requestMessageTranslation,\n    closeChatLanguageModal,\n    setSettingOption,\n    requestChatTranslation,\n  } = getActions();\n\n  const [search, setSearch] = useState('');\n  const lang = useOldLang();\n\n  const handleSelect = useLastCallback((langCode: string) => {\n    if (!chatId) return;\n\n    if (messageId) {\n      requestMessageTranslation({ chatId, id: messageId, toLanguageCode: langCode });\n    } else {\n      setSettingOption({ translationLanguage: langCode });\n      requestChatTranslation({ chatId, toLanguageCode: langCode });\n    }\n\n    closeChatLanguageModal();\n  });\n\n  const handleSearch = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearch(e.target.value);\n  });\n\n  const translateLanguages = useMemo(() => SUPPORTED_TRANSLATION_LANGUAGES.map((langCode: string) => {\n    const translatedNames = new Intl.DisplayNames([currentLanguageCode], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n\n    const originalNames = new Intl.DisplayNames([langCode], { type: 'language' });\n    const originalName = originalNames.of(langCode)!;\n\n    return {\n      langCode,\n      translatedName,\n      originalName,\n    } satisfies LanguageItem;\n  }), [currentLanguageCode]);\n\n  useEffect(() => {\n    if (!isOpen) setSearch('');\n  }, [isOpen]);\n\n  const filteredDisplayedLanguages = useMemo(() => {\n    if (!search.trim()) {\n      return translateLanguages;\n    }\n\n    return translateLanguages.filter(({ langCode, translatedName, originalName }) => (\n      translatedName.toLowerCase().includes(search.toLowerCase())\n      || originalName.toLowerCase().includes(search.toLowerCase())\n      || langCode.toLowerCase().includes(search.toLowerCase())\n    ));\n  }, [translateLanguages, search]);\n\n  return (\n    <Modal\n      className={styles.root}\n      isSlim\n      isOpen={isOpen}\n      hasCloseButton\n      title={lang('Language')}\n      onClose={closeChatLanguageModal}\n    >\n      <InputText\n        key=\"search\"\n        value={search}\n        onChange={handleSearch}\n        placeholder={lang('Search')}\n        teactExperimentControlled\n      />\n      <div className={buildClassName(styles.languages, 'custom-scroll')}>\n        {filteredDisplayedLanguages.map(({ langCode, originalName, translatedName }) => (\n          <ListItem\n            key={langCode}\n            className={buildClassName(styles.listItem, 'no-icon')}\n            secondaryIcon={activeTranslationLanguage === langCode ? 'check' : undefined}\n            disabled={activeTranslationLanguage === langCode}\n            multiline\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleSelect(langCode)}\n          >\n            <span className={buildClassName('title', styles.title)}>\n              {renderText(originalName, ['highlight'], { highlight: search })}\n            </span>\n            <span className={buildClassName('subtitle', styles.subtitle)}>\n              {renderText(translatedName, ['highlight'], { highlight: search })}\n            </span>\n          </ListItem>\n        ))}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).chatLanguageModal || {};\n\n    const currentLanguageCode = selectLanguageCode(global);\n    const activeTranslationLanguage = chatId\n      ? messageId\n        ? selectRequestedMessageTranslationLanguage(global, chatId, messageId)\n        : selectRequestedChatTranslationLanguage(global, chatId)\n      : undefined;\n\n    return {\n      chatId,\n      messageId,\n      activeTranslationLanguage,\n      currentLanguageCode,\n    };\n  },\n)(ChatLanguageModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"aMjNU9gm\",\"list-item\":\"T3An6Hoz\",\"listItem\":\"T3An6Hoz\",\"title\":\"dQ9wwFu1\",\"subtitle\":\"m_J41YYl\",\"languages\":\"r3YNWDQr\"};","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"WEJIbFQj\",\"closeButton\":\"_vwPuDEM\",\"icon\":\"BUiGM8qZ\",\"title\":\"Q3NhXpNI\",\"description\":\"frZbGQ0G\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiCountryCode } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatDateAtTime } from '../../../util/dates/dateFormat';\nimport { formatCurrencyAsString } from '../../../util/formatCurrency';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport formatUsername from '../../common/helpers/formatUsername';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport Icon from '../../common/icons/Icon';\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './CollectibleInfoModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['collectibleInfoModal'];\n};\n\ntype StateProps = {\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst TOP_ICON_SIZE = 60;\n\nconst CollectibleInfoModal: FC<OwnProps & StateProps> = ({\n  modal,\n  phoneCodeList,\n}) => {\n  const {\n    closeCollectibleInfoModal,\n    openChat,\n    openUrl,\n    showNotification,\n  } = getActions();\n  const lang = useOldLang();\n\n  const isUsername = modal?.type === 'username';\n\n  const handleClose = useLastCallback(() => {\n    closeCollectibleInfoModal();\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: modal!.peerId });\n    handleClose();\n  });\n\n  const handleOpenUrl = useLastCallback(() => {\n    openUrl({\n      url: modal!.url,\n      shouldSkipModal: true,\n    });\n    handleClose();\n  });\n\n  const handleCopy = useLastCallback(() => {\n    const text = isUsername ? formatUsername(modal!.collectible)\n      : formatPhoneNumberWithCode(phoneCodeList, modal!.collectible);\n    copyTextToClipboard(text);\n    showNotification({\n      message: lang(isUsername ? 'UsernameCopied' : 'PhoneCopied'),\n    });\n    handleClose();\n  });\n\n  const title = useMemo(() => {\n    if (!modal) return undefined;\n    const key = isUsername ? 'FragmentUsernameTitle' : 'FragmentPhoneTitle';\n    const formattedCollectible = isUsername\n      ? formatUsername(modal.collectible)\n      : formatPhoneNumberWithCode(phoneCodeList, modal.collectible);\n    return lang(key, formattedCollectible);\n  }, [modal, isUsername, phoneCodeList, lang]);\n\n  const description = useMemo(() => {\n    if (!modal) return undefined;\n    const key = isUsername ? 'FragmentUsernameMessage' : 'FragmentPhoneMessage';\n    const date = formatDateAtTime(lang, modal.purchaseDate * 1000);\n    const currency = formatCurrencyAsString(modal.amount, modal.currency, lang.code);\n    const cryptoCurrency = formatCurrencyAsString(modal.cryptoAmount, modal.cryptoCurrency, lang.code);\n    const paid = `${cryptoCurrency} (${currency})`;\n    return lang(key, [date, paid]);\n  }, [modal, isUsername, lang]);\n\n  return (\n    <Modal\n      isOpen={Boolean(modal)}\n      isSlim\n      contentClassName={styles.content}\n      onClose={closeCollectibleInfoModal}\n    >\n      <Button\n        round\n        color=\"translucent\"\n        size=\"smaller\"\n        className={styles.closeButton}\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <Icon name=\"close\" />\n      </Button>\n      <div className={styles.icon}>\n        <AnimatedIconWithPreview\n          tgsUrl={isUsername ? LOCAL_TGS_URLS.Mention : LOCAL_TGS_URLS.Fragment}\n          size={TOP_ICON_SIZE}\n        />\n      </div>\n      <h3 className={styles.title}>\n        {title && renderText(title, ['simple_markdown'])}\n      </h3>\n      <PeerChip\n        className={styles.chip}\n        peerId={modal?.peerId}\n        forceShowSelf\n        clickArg={modal?.peerId}\n        onClick={handleOpenChat}\n      />\n      <p className={styles.description}>\n        {description && renderText(description, ['simple_markdown'])}\n      </p>\n      <div className=\"dialog-buttons dialog-buttons-centered\">\n        <Button className=\"confirm-dialog-button\" onClick={handleOpenUrl}>\n          {lang('FragmentUsernameOpen')}\n        </Button>\n        <Button isText className=\"confirm-dialog-button\" onClick={handleCopy}>\n          {lang(isUsername ? 'FragmentUsernameCopy' : 'FragmentPhoneCopy')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { countryList } = global;\n\n    return {\n      phoneCodeList: countryList.phoneCodes,\n    };\n  },\n)(CollectibleInfoModal));\n","import type {\n  ApiChat, ApiGlobalMessageSearchType, ApiMessage, ApiUser,\n} from '../../../../api/types';\nimport type { GlobalState, TabState } from '../../../../global/types';\nimport type { ThemeKey } from '../../../../types';\nimport type { SearchResultKey } from '../../../../util/keys/searchResultKey';\n\nimport { selectChat, selectTabState, selectTheme } from '../../../../global/selectors';\nimport { selectSharedSettings } from '../../../../global/selectors/sharedState';\n\nexport type StateProps = {\n  theme: ThemeKey;\n  isLoading?: boolean;\n  chatsById: Record<string, ApiChat>;\n  usersById: Record<string, ApiUser>;\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  foundIds?: SearchResultKey[];\n  searchChatId?: string;\n  activeDownloads: TabState['activeDownloads'];\n  isChatProtected?: boolean;\n  shouldWarnAboutSvg?: boolean;\n};\n\nexport function createMapStateToProps(type: ApiGlobalMessageSearchType) {\n  return (global: GlobalState, props: any) => {\n    const tabState = selectTabState(global);\n    const { byId: chatsById } = global.chats;\n    const { byId: usersById } = global.users;\n    const {\n      fetchingStatus, resultsByType, chatId,\n    } = tabState.globalSearch;\n\n    const { shouldWarnAboutSvg } = selectSharedSettings(global);\n\n    // One component is used for two different types of results.\n    // The differences between them are only in the isVoice property.\n    // The rest of the search results use their own personal components.\n    const currentType = type !== 'audio' ? type : (props?.isVoice ? 'voice' : 'audio');\n\n    const { byChatId: globalMessagesByChatId } = global.messages;\n    const foundIds = resultsByType?.[currentType]?.foundIds;\n\n    const activeDownloads = tabState.activeDownloads;\n\n    return {\n      theme: selectTheme(global),\n      isLoading: foundIds === undefined\n        || (fetchingStatus ? Boolean(fetchingStatus.chats || fetchingStatus.messages) : false),\n      chatsById,\n      usersById,\n      globalMessagesByChatId,\n      foundIds,\n      searchChatId: chatId,\n      activeDownloads,\n      isChatProtected: chatId ? selectChat(global, chatId)?.isProtected : undefined,\n      shouldWarnAboutSvg,\n    };\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { AudioOrigin, LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { getIsDownloading, getMessageDownloadableMedia } from '../../../global/helpers';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dates/dateFormat';\nimport { parseSearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Audio from '../../common/Audio';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  isVoice?: boolean;\n  searchQuery?: string;\n};\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst AudioResults: FC<OwnProps & StateProps> = ({\n  theme,\n  isVoice,\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  activeDownloads,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n    openAudioPlayer,\n  } = getActions();\n\n  const lang = useOldLang();\n  const currentType = isVoice ? 'voice' : 'audio';\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: currentType,\n        });\n      });\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [currentType, searchMessagesGlobal, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = parseSearchResultKey(id);\n\n      return globalMessagesByChatId[chatId]?.byId[messageId];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((message: ApiMessage) => {\n    focusMessage({ chatId: message.chatId, messageId: message.id });\n  }, [focusMessage]);\n\n  const handlePlayAudio = useCallback((messageId: number, chatId: string) => {\n    openAudioPlayer({ chatId, messageId });\n  }, [openAudioPlayer]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n\n      const media = getMessageDownloadableMedia(message)!;\n      return (\n        <>\n          {shouldDrawDateDivider && (\n            <p\n              className=\"section-heading\"\n              key={message.date}\n              dir={lang.isRtl ? 'rtl' : undefined}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <div\n            className=\"ListItem small-icon\"\n            key={message.id}\n          >\n            <Audio\n              key={message.id}\n              theme={theme}\n              message={message}\n              origin={AudioOrigin.Search}\n              senderTitle={getSenderName(lang, message, chatsById, usersById)}\n              date={message.date}\n              className=\"scroll-item\"\n              onPlay={handlePlayAudio}\n              onDateClick={handleMessageFocus}\n              canDownload={!chatsById[message.chatId]?.isProtected && !message.isProtected}\n              isDownloading={getIsDownloading(activeDownloads, media)}\n            />\n          </div>\n        </>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={canRenderContents ? foundMessages : undefined}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps('audio'),\n)(AudioResults));\n","import { useCallback, useEffect, useRef } from '../lib/teact/teact';\n\nconst useSendWithEnter = (\n  onSelect: NoneToVoidFunction,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const buttonRef = useRef<HTMLDivElement>(null);\n\n  const handleKeyDown = useCallback((e: KeyboardEvent) => {\n    if (e.key !== 'Enter') return;\n    const isFocused = buttonRef.current === document.activeElement;\n\n    if (isFocused) {\n      onSelect();\n    }\n  }, [onSelect]);\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown, false);\n\n    return () => window.removeEventListener('keydown', handleKeyDown, false);\n  }, [handleKeyDown]);\n\n  return buttonRef;\n};\n\nexport default useSendWithEnter;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiUser } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { isUserId } from '../../../global/helpers';\nimport { getIsChatMuted } from '../../../global/helpers/notifications';\nimport {\n  selectChat, selectIsChatPinned, selectNotifyDefaults, selectNotifyException, selectUser,\n} from '../../../global/selectors';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\n\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\n\ntype OwnProps = {\n  chatId: string;\n  withUsername?: boolean;\n  withOpenAppButton?: boolean;\n  onClick: (id: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n};\n\nconst LeftSearchResultChat: FC<OwnProps & StateProps> = ({\n  chatId,\n  withUsername,\n  chat,\n  user,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  withOpenAppButton,\n  onClick,\n}) => {\n  const { requestMainWebView } = getActions();\n  const oldLang = useOldLang();\n\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const handleChatFolderChange = useCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  }, [markRenderChatFolderModal, openChatFolderModal]);\n\n  const handleMute = useCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  }, [markRenderMuteModal, openMuteModal]);\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    handleMute,\n    handleChatFolderChange,\n  }, true);\n\n  const handleClick = useLastCallback(() => {\n    onClick(chatId);\n  });\n\n  const handleOpenApp = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId: chatId,\n      peerId: chatId,\n      theme,\n    });\n  });\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  return (\n    <ListItem\n      className=\"chat-item-clickable search-result\"\n      onClick={handleClick}\n      contextActions={contextActions}\n      buttonRef={buttonRef}\n    >\n      {isUserId(chatId) ? (\n        <PrivateChatInfo\n          userId={chatId}\n          withUsername={withUsername}\n          withStory\n          avatarSize=\"medium\"\n          storyViewerOrigin={StoryViewerOrigin.SearchResult}\n        />\n      ) : (\n        <GroupChatInfo\n          chatId={chatId}\n          withUsername={withUsername}\n          avatarSize=\"medium\"\n          withStory\n          storyViewerOrigin={StoryViewerOrigin.SearchResult}\n        />\n      )}\n      {withOpenAppButton && user?.hasMainMiniApp && (\n        <Button\n          className=\"ChatBadge miniapp\"\n          pill\n          fluid\n          size=\"tiny\"\n          onClick={handleOpenApp}\n        >\n          {oldLang('BotOpen')}\n        </Button>\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const user = selectUser(global, chatId);\n    const isPinned = selectIsChatPinned(global, chatId);\n    const isMuted = chat && getIsChatMuted(chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id));\n\n    return {\n      chat,\n      user,\n      isPinned,\n      isMuted,\n      canChangeFolder: Boolean(global.chatFolders.orderedIds?.length),\n    };\n  },\n)(LeftSearchResultChat));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectTabState } from '../../../global/selectors';\nimport { throttle } from '../../../util/schedulers';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Link from '../../ui/Link';\nimport Loading from '../../ui/Loading';\nimport LeftSearchResultChat from './LeftSearchResultChat';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\ntype StateProps = {\n  isLoading?: boolean;\n  foundIds?: string[];\n  recentBotIds?: string[];\n};\n\nconst LESS_LIST_ITEMS_AMOUNT = 5;\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst BotAppResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  foundIds,\n  recentBotIds,\n}) => {\n  const {\n    searchPopularBotApps,\n    openChatWithInfo,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const [shouldShowMoreMine, setShouldShowMoreMine] = useState<boolean>(false);\n\n  const filteredFoundIds = useMemo(() => {\n    if (!foundIds) return [];\n    const recentSet = new Set(recentBotIds);\n    const withoutRecent = foundIds.filter((id) => !recentSet.has(id));\n\n    return filterPeersByQuery({ ids: withoutRecent, query: searchQuery, type: 'user' });\n  }, [foundIds, recentBotIds, searchQuery]);\n\n  const handleChatClick = useLastCallback((id: string) => {\n    openChatWithInfo({ id, shouldReplaceHistory: true });\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchPopularBotApps();\n      });\n    }\n  }, []);\n\n  const handleToggleShowMoreMine = useLastCallback(() => {\n    setShouldShowMoreMine((prev) => !prev);\n  });\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content custom-scroll\"\n        items={canRenderContents ? filteredFoundIds : undefined}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && !filteredFoundIds?.length && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && !searchQuery && Boolean(recentBotIds?.length) && (\n          <div className=\"search-section\">\n            <h3 className=\"section-heading\">\n              {recentBotIds.length > LESS_LIST_ITEMS_AMOUNT && (\n                <Link className=\"Link\" onClick={handleToggleShowMoreMine}>\n                  {lang(shouldShowMoreMine ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n                </Link>\n              )}\n              {lang('SearchAppsMine')}\n            </h3>\n            {recentBotIds.map((id, index) => {\n              if (!shouldShowMoreMine && index >= LESS_LIST_ITEMS_AMOUNT) {\n                return undefined;\n              }\n\n              return (\n                <LeftSearchResultChat\n                  chatId={id}\n                  onClick={handleChatClick}\n                  withOpenAppButton\n                />\n              );\n            })}\n          </div>\n        )}\n        {canRenderContents && filteredFoundIds?.length && (\n          <div className=\"search-section\">\n            <h3 className=\"section-heading\">{lang('SearchAppsPopular')}</h3>\n            {filteredFoundIds.map((id) => {\n              return (\n                <LeftSearchResultChat\n                  chatId={id}\n                  onClick={handleChatClick}\n                  withOpenAppButton\n                />\n              );\n            })}\n          </div>\n        )}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global) => {\n  const globalSearch = selectTabState(global).globalSearch;\n  const foundIds = globalSearch.popularBotApps?.peerIds;\n\n  return {\n    isLoading: !foundIds && globalSearch.fetchingStatus?.botApps,\n    foundIds,\n    recentBotIds: global.topBotApps.userIds,\n  };\n})(BotAppResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiMessageOutgoingStatus,\n  ApiUser,\n} from '../../../api/types';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\n\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSticker,\n  getMessageVideo,\n  getPrivateChatUserId,\n} from '../../../global/helpers';\nimport { selectChat, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPastTimeShort } from '../../../util/dates/dateFormat';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport Link from '../../ui/Link';\nimport ListItem from '../../ui/ListItem';\n\nimport './ChatMessage.scss';\n\ntype OwnProps = {\n  searchQuery?: string;\n  message: ApiMessage;\n  chatId: string;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  privateChatUser?: ApiUser;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n};\n\nconst ChatMessage: FC<OwnProps & StateProps> = ({\n  message,\n  searchQuery,\n  chatId,\n  chat,\n  privateChatUser,\n}) => {\n  const { focusMessage } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const mediaThumbnail = !getMessageSticker(message) ? getMessageMediaThumbDataUri(message) : undefined;\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'micro'));\n  const isRoundVideo = Boolean(getMessageRoundVideo(message));\n\n  const handleClick = useLastCallback(() => {\n    focusMessage({ chatId, messageId: message.id, shouldReplaceHistory: true });\n  });\n\n  const lang = useOldLang();\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = privateChatUser || chat;\n\n  return (\n    <ListItem\n      className=\"ChatMessage chat-item-clickable\"\n      ripple={!isMobile}\n      onClick={handleClick}\n      buttonRef={buttonRef}\n    >\n      <Avatar\n        peer={peer}\n        isSavedMessages={privateChatUser?.isSelf}\n      />\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === privateChatUser?.id && privateChatUser?.isSelf}\n          />\n          <div className=\"message-date\">\n            <Link className=\"date\">\n              {formatPastTimeShort(lang, message.date * 1000)}\n            </Link>\n          </div>\n\n        </div>\n        <div className=\"subtitle\">\n          <div className=\"message\" dir=\"auto\">\n            {renderSummary(lang, message, mediaBlobUrl || mediaThumbnail, searchQuery, isRoundVideo)}\n          </div>\n        </div>\n      </div>\n    </ListItem>\n  );\n};\n\nfunction renderSummary(\n  lang: OldLangFn, message: ApiMessage, blobUrl?: string, searchQuery?: string, isRoundVideo?: boolean,\n) {\n  if (!blobUrl) {\n    return renderMessageSummary(lang, message, undefined, searchQuery);\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <Icon name=\"play\" />}\n      {renderMessageSummary(lang, message, true, searchQuery)}\n    </span>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    const privateChatUserId = getPrivateChatUserId(chat);\n    const privateChatUser = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n\n    return {\n      chat,\n      ...(privateChatUserId && { privateChatUser }),\n    };\n  },\n)(ChatMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport { formatDateToString } from '../../../util/dates/dateFormat';\n\nimport Icon from '../../common/icons/Icon';\n\nimport './DateSuggest.scss';\n\nconst SUGGESTION_COUNT = 8;\n\nexport type OwnProps = {\n  searchDate: string;\n  onSelect: (value: Date) => void;\n};\n\nconst DateSuggest: FC<OwnProps> = ({\n  searchDate, onSelect,\n}) => {\n  const suggestions = useMemo(() => getSuggestionsFromDate(searchDate), [searchDate]);\n  return (\n    <section className=\"DateSuggest custom-scroll custom-scroll-x\">\n      {suggestions.map(({ date, text }) => {\n        return (\n          <div\n            onClick={() => onSelect(date)}\n            className=\"date-item\"\n            key={text}\n          >\n            <Icon name=\"calendar\" />\n            <span>{text}</span>\n          </div>\n        );\n      })}\n    </section>\n  );\n};\n\nfunction getSuggestionsFromDate(searchDate: string) {\n  const hasYear = searchDate.match(/^\\d{2,4}-\\d{2}-\\d{2}$/g);\n  if (hasYear) {\n    const date = new Date(searchDate);\n    return [{ date, text: formatDateToString(date) }];\n  }\n\n  const suggestion = [];\n  const currentDate = new Date();\n  const currentYear = currentDate.getFullYear();\n  const latestYear = currentDate.getTime() > (new Date(`${currentYear}-${searchDate}`)).getTime()\n    ? currentYear\n    : currentYear - 1;\n\n  for (let i = 0; i < SUGGESTION_COUNT; i++) {\n    const date = new Date(`${latestYear - i}-${searchDate}`);\n    suggestion.push({ date, text: formatDateToString(date) });\n  }\n\n  return suggestion;\n}\n\nexport default memo(DateSuggest);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiTopic } from '../../../api/types';\n\nimport { selectTopic } from '../../../global/selectors';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\n\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport TopicIcon from '../../common/TopicIcon';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  topicId: number;\n  onClick: (id: number) => void;\n};\n\ntype StateProps = {\n  topic?: ApiTopic;\n};\n\nconst TOPIC_ICON_SIZE = 2 * REM;\n\nconst LeftSearchResultTopic: FC<OwnProps & StateProps> = ({\n  topicId,\n  topic,\n  onClick,\n}) => {\n  const handleClick = useCallback(() => {\n    onClick(topicId);\n  }, [topicId, onClick]);\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  if (!topic) {\n    return undefined;\n  }\n\n  return (\n    <ListItem\n      className=\"chat-item-clickable search-result\"\n      onClick={handleClick}\n      buttonClassName=\"topic-item\"\n      buttonRef={buttonRef}\n    >\n      <TopicIcon\n        size={TOPIC_ICON_SIZE}\n        topic={topic}\n        className=\"topic-icon\"\n        letterClassName=\"topic-icon-letter\"\n      />\n      <div dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</div>\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topicId }): StateProps => {\n    const topic = selectTopic(global, chatId, topicId);\n\n    return {\n      topic,\n    };\n  },\n)(LeftSearchResultTopic));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiMessage } from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { parseSearchResultKey, type SearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ChatMessage from './ChatMessage';\nimport DateSuggest from './DateSuggest';\nimport LeftSearchResultTopic from './LeftSearchResultTopic';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  dateSearchQuery?: string;\n  onReset: () => void;\n  onSearchDateSelect: (value: Date) => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  foundIds?: SearchResultKey[];\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  chatsById: Record<string, ApiChat>;\n  fetchingStatus?: { chats?: boolean; messages?: boolean };\n  foundTopicIds?: number[];\n  searchChatId?: string;\n};\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst ChatMessageResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  dateSearchQuery,\n  foundIds,\n  globalMessagesByChatId,\n  chatsById,\n  fetchingStatus,\n  foundTopicIds,\n  searchChatId,\n  onSearchDateSelect,\n  onReset,\n}) => {\n  const { searchMessagesGlobal, openThread } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: 'text',\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const handleTopicClick = useCallback(\n    (id: number) => {\n      if (!searchChatId) return;\n      openThread({ chatId: searchChatId, threadId: id, shouldReplaceHistory: true });\n\n      if (!isMobile) {\n        onReset();\n      }\n    },\n    [searchChatId, isMobile, onReset],\n  );\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || foundIds.length === 0) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds\n      .map((id) => {\n        const [chatId, messageId] = parseSearchResultKey(id);\n\n        return globalMessagesByChatId?.[chatId]?.byId[messageId];\n      })\n      .filter(Boolean)\n      .sort((a, b) => b.date - a.date);\n  }, [foundIds, globalMessagesByChatId]);\n\n  function renderFoundMessage(message: ApiMessage) {\n    const text = renderMessageSummary(lang, message);\n    const chat = chatsById[message.chatId];\n\n    if (!text || !chat) {\n      return undefined;\n    }\n\n    return (\n      <ChatMessage\n        chatId={message.chatId}\n        message={message}\n        searchQuery={searchQuery}\n      />\n    );\n  }\n\n  const nothingFound = fetchingStatus && !fetchingStatus.chats && !fetchingStatus.messages && !foundMessages.length\n    && !foundTopicIds?.length;\n\n  return (\n    <div className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content custom-scroll chat-list\"\n        items={foundMessages}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {dateSearchQuery && (\n          <div className=\"chat-selection no-scrollbar\">\n            <DateSuggest\n              searchDate={dateSearchQuery}\n              onSelect={onSearchDateSelect}\n            />\n          </div>\n        )}\n        {nothingFound && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {Boolean(foundTopicIds?.length) && (\n          <div className=\"pb-2\">\n            <h3 className=\"section-heading topic-search-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n              {lang('Topics')}\n            </h3>\n            {foundTopicIds!.map((id) => {\n              return (\n                <LeftSearchResultTopic\n                  chatId={searchChatId!}\n                  topicId={id}\n                  onClick={handleTopicClick}\n                />\n              );\n            })}\n          </div>\n        )}\n        {Boolean(foundMessages.length) && (\n          <div className=\"pb-2\">\n            <h3 className=\"section-heading topic-search-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n              {lang('SearchMessages')}\n            </h3>\n            {foundMessages.map(renderFoundMessage)}\n          </div>\n        )}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byId: chatsById } = global.chats;\n    const { currentUserId, messages: { byChatId: globalMessagesByChatId } } = global;\n    const {\n      fetchingStatus, resultsByType, foundTopicIds, chatId: searchChatId,\n    } = selectTabState(global).globalSearch;\n\n    const { foundIds } = (resultsByType?.text) || {};\n\n    return {\n      currentUserId,\n      foundIds,\n      globalMessagesByChatId,\n      chatsById,\n      fetchingStatus,\n      foundTopicIds,\n      searchChatId,\n    };\n  },\n)(ChatMessageResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSponsoredPeer } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { isUserId } from '../../../global/helpers';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { type ObserveFn, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport BadgeButton from '../../common/BadgeButton';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport SponsoredMessageContextMenuContainer from '../../middle/message/SponsoredContextMenuContainer';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  sponsoredPeer: ApiSponsoredPeer;\n  observeIntersection?: ObserveFn;\n};\n\nconst LeftSearchResultSponsored: FC<OwnProps> = ({\n  sponsoredPeer,\n  observeIntersection,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const { clickSponsored, viewSponsored, openChat } = getActions();\n  const lang = useLang();\n\n  const {\n    peerId, randomId, additionalInfo, sponsorInfo,\n  } = sponsoredPeer;\n\n  useOnIntersect(ref, observeIntersection, (entry) => {\n    if (entry.intersectionRatio === 1) {\n      viewSponsored({ randomId });\n    }\n  });\n\n  const handleClick = useLastCallback(() => {\n    clickSponsored({ randomId });\n    openChat({ id: peerId });\n  });\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const {\n    handleClick: handleBadgeClick,\n    handleMouseDown: handleBadgeMouseDown,\n  } = useFastClick((e: React.MouseEvent) => {\n    e.stopPropagation();\n    handleContextMenu(e);\n  });\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  return (\n    <ListItem\n      ref={ref}\n      className=\"chat-item-clickable search-result\"\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n      buttonRef={buttonRef}\n    >\n      {isUserId(peerId) ? (\n        <PrivateChatInfo\n          userId={peerId}\n          withUsername\n          withStory\n          avatarSize=\"medium\"\n          storyViewerOrigin={StoryViewerOrigin.SearchResult}\n        />\n      ) : (\n        <GroupChatInfo\n          chatId={peerId}\n          withUsername\n          avatarSize=\"medium\"\n          withStory\n          storyViewerOrigin={StoryViewerOrigin.SearchResult}\n        />\n      )}\n      <BadgeButton className=\"search-sponsored-badge\" onMouseDown={handleBadgeMouseDown} onClick={handleBadgeClick}>\n        {lang('SponsoredPeerBadge')}\n        <Icon name=\"more\" />\n      </BadgeButton>\n      {contextMenuAnchor && (\n        <SponsoredMessageContextMenuContainer\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          triggerRef={ref}\n          randomId={randomId}\n          additionalInfo={additionalInfo}\n          canReport\n          sponsorInfo={sponsorInfo}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(LeftSearchResultSponsored);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { getUserFirstOrLastName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { throttle } from '../../../util/schedulers';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport LeftSearchResultChat from './LeftSearchResultChat';\n\nimport './RecentContacts.scss';\n\ntype OwnProps = {\n  onReset: () => void;\n};\n\ntype StateProps = {\n  topUserIds?: string[];\n  usersById: Record<string, ApiUser>;\n  recentlyFoundChatIds?: string[];\n};\n\nconst SEARCH_CLOSE_TIMEOUT_MS = 250;\nconst NBSP = '\\u00A0';\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst RecentContacts: FC<OwnProps & StateProps> = ({\n  topUserIds,\n  usersById,\n  recentlyFoundChatIds,\n  onReset,\n}) => {\n  const {\n    loadTopUsers, openChat,\n    addRecentlyFoundChatId, clearRecentlyFoundChats,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const topUsersRef = useRef<HTMLDivElement>(null);\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadTopUsers();\n    });\n  }, [loadTopUsers]);\n\n  useHorizontalScroll(topUsersRef, !topUserIds);\n\n  const handleClick = useCallback((id: string) => {\n    openChat({ id, shouldReplaceHistory: true });\n    onReset();\n    setTimeout(() => {\n      addRecentlyFoundChatId({ id });\n    }, SEARCH_CLOSE_TIMEOUT_MS);\n  }, [openChat, addRecentlyFoundChatId, onReset]);\n\n  const handleClearRecentlyFoundChats = useCallback(() => {\n    clearRecentlyFoundChats();\n  }, [clearRecentlyFoundChats]);\n\n  const lang = useOldLang();\n\n  return (\n    <div className=\"RecentContacts custom-scroll\">\n      {topUserIds && (\n        <div className=\"top-peers-section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <div ref={topUsersRef} className=\"top-peers\">\n            {topUserIds.map((userId) => (\n              <div\n                key={userId}\n                className=\"top-peer-item\"\n                onClick={() => handleClick(userId)}\n                dir={lang.isRtl ? 'rtl' : undefined}\n              >\n                <Avatar peer={usersById[userId]} />\n                <div className=\"top-peer-name\">{renderText(getUserFirstOrLastName(usersById[userId]) || NBSP)}</div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n      {recentlyFoundChatIds && (\n        <div className=\"search-section pt-1\">\n          <h3\n            className={buildClassName(\n              'section-heading mt-0 recent-chats-header',\n              !topUserIds && 'without-border',\n            )}\n            dir={lang.isRtl ? 'rtl' : undefined}\n          >\n            {lang('Recent')}\n\n            <Button\n              className=\"clear-recent-chats\"\n              round\n              size=\"smaller\"\n              color=\"translucent\"\n              ariaLabel={lang('Clear')}\n              onClick={handleClearRecentlyFoundChats}\n              isRtl={lang.isRtl}\n            >\n              <Icon name=\"close\" />\n            </Button>\n          </h3>\n          {recentlyFoundChatIds.map((id) => (\n            <LeftSearchResultChat\n              chatId={id}\n              withOpenAppButton\n              onClick={handleClick}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: topUserIds } = global.topPeers;\n    const usersById = global.users.byId;\n    const { recentlyFoundChatIds } = global;\n\n    return {\n      topUserIds,\n      usersById,\n      recentlyFoundChatIds,\n    };\n  },\n)(RecentContacts));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiMessage, ApiMessageSearchContext, ApiSponsoredPeer } from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { ALL_FOLDER_ID, GLOBAL_SUGGESTED_CHANNELS_ID } from '../../../config';\nimport {\n  isChatChannel,\n} from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectSimilarChannelIds, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderedIds } from '../../../util/folderManager';\nimport { unique } from '../../../util/iteratees';\nimport { parseSearchResultKey, type SearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useEffectOnce from '../../../hooks/useEffectOnce';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport NothingFound from '../../common/NothingFound';\nimport PeerChip from '../../common/PeerChip';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Link from '../../ui/Link';\nimport Loading from '../../ui/Loading';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport Transition from '../../ui/Transition';\nimport ChatMessage from './ChatMessage';\nimport DateSuggest from './DateSuggest';\nimport LeftSearchResultChat from './LeftSearchResultChat';\nimport LeftSearchResultSponsored from './LeftSearchResultSponsored';\nimport RecentContacts from './RecentContacts';\n\nimport './ChatResults.scss';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  dateSearchQuery?: string;\n  searchDate?: number;\n  isChannelList?: boolean;\n  onReset: () => void;\n  onSearchDateSelect: (value: Date) => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  contactIds?: string[];\n  accountPeerIds?: string[];\n  globalPeerIds?: string[];\n  foundIds?: SearchResultKey[];\n  sponsoredPeer?: ApiSponsoredPeer;\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  fetchingStatus?: { chats?: boolean; messages?: boolean };\n  suggestedChannelIds?: string[];\n};\n\nconst MIN_QUERY_LENGTH_FOR_GLOBAL_SEARCH = 4;\nconst LESS_LIST_ITEMS_AMOUNT = 5;\nconst INTERSECTION_THROTTLE = 200;\n\nconst runThrottled = throttle((cb) => cb(), 500, false);\n\nconst ChatResults: FC<OwnProps & StateProps> = ({\n  isChannelList,\n  searchQuery,\n  searchDate,\n  dateSearchQuery,\n  currentUserId,\n  contactIds,\n  accountPeerIds,\n  globalPeerIds,\n  foundIds,\n  globalMessagesByChatId,\n  fetchingStatus,\n  suggestedChannelIds,\n  sponsoredPeer,\n  onReset,\n  onSearchDateSelect,\n}) => {\n  const {\n    openChat, addRecentlyFoundChatId, searchMessagesGlobal,\n    setGlobalSearchChatId, loadChannelRecommendations,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const chatSelectionRef = useRef<HTMLDivElement>(null);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const [shouldShowMoreLocal, setShouldShowMoreLocal] = useState<boolean>(false);\n  const [shouldShowMoreGlobal, setShouldShowMoreGlobal] = useState<boolean>(false);\n  const [searchContext, setSearchContext] = useState<ApiMessageSearchContext>('all');\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useEffectOnce(() => {\n    if (isChannelList) loadChannelRecommendations({});\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: isChannelList ? 'channels' : 'text',\n          context: searchContext,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery, searchContext]);\n\n  const handleChatClick = useCallback(\n    (id: string) => {\n      openChat({ id, shouldReplaceHistory: true });\n\n      if (id !== currentUserId) {\n        addRecentlyFoundChatId({ id });\n      }\n\n      if (!isMobile) {\n        onReset();\n      }\n    },\n    [openChat, currentUserId, isMobile, addRecentlyFoundChatId, onReset],\n  );\n\n  const handlePickerItemClick = useCallback((id: string) => {\n    setGlobalSearchChatId({ id });\n  }, [setGlobalSearchChatId]);\n\n  function getSearchContextCaption(context: ApiMessageSearchContext) {\n    if (context === 'users') return lang('PrivateChatsSearchContext');\n    if (context === 'groups') return lang('GroupChatsSearchContext');\n    if (context === 'channels') return lang('ChannelsSearchContext');\n    return lang('AllChatsSearchContext');\n  }\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.chatResultsContextMenu .bubble'));\n  const getTriggerElement = useLastCallback(() => ref.current!.querySelector('.menuTrigger'));\n\n  const handleClickContext = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  const itemPlaceholderClass = buildClassName('icon', 'iconPlaceholder');\n\n  function renderContextMenu() {\n    return (\n      <Menu\n        isOpen={isContextMenuOpen}\n        anchor={contextMenuAnchor}\n        getTriggerElement={getTriggerElement}\n        getRootElement={getRootElement}\n        getMenuElement={getMenuElement}\n        className=\"chatResultsContextMenu\"\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n        autoClose\n      >\n        <>\n          <MenuItem\n            icon={searchContext === 'all' ? 'check' : undefined}\n            customIcon={searchContext !== 'all' ? <i className={itemPlaceholderClass} /> : undefined}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => setSearchContext('all')}\n          >\n            {getSearchContextCaption('all')}\n          </MenuItem>\n          <MenuItem\n            icon={searchContext === 'users' ? 'check' : undefined}\n            customIcon={searchContext !== 'users' ? <i className={itemPlaceholderClass} /> : undefined}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => setSearchContext('users')}\n          >\n            {getSearchContextCaption('users')}\n          </MenuItem>\n          <MenuItem\n            icon={searchContext === 'groups' ? 'check' : undefined}\n            customIcon={searchContext !== 'groups' ? <i className={itemPlaceholderClass} /> : undefined}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => setSearchContext('groups')}\n          >\n            {getSearchContextCaption('groups')}\n          </MenuItem>\n          <MenuItem\n            icon={searchContext === 'channels' ? 'check' : undefined}\n            customIcon={searchContext !== 'channels' ? <i className={itemPlaceholderClass} /> : undefined}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => setSearchContext('channels')}\n          >\n            {getSearchContextCaption('channels')}\n          </MenuItem>\n        </>\n      </Menu>\n    );\n  }\n\n  const localResults = useMemo(() => {\n    if (!isChannelList && (!searchQuery || (searchQuery.startsWith('@') && searchQuery.length < 2))) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    // No need for expensive global updates, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    const orderedChatIds = getOrderedIds(ALL_FOLDER_ID) ?? [];\n    const filteredChatIds = orderedChatIds.filter((id) => {\n      if (!isChannelList) return true;\n      const chat = chatsById[id];\n      return chat && isChatChannel(chat);\n    });\n    const localChatIds = filterPeersByQuery({ ids: filteredChatIds, query: searchQuery, type: 'chat' });\n\n    if (isChannelList) return localChatIds;\n\n    const contactIdsWithMe = [\n      ...(currentUserId ? [currentUserId] : []),\n      ...(contactIds || []),\n    ];\n\n    const localContactIds = filterPeersByQuery({\n      ids: contactIdsWithMe, query: searchQuery, type: 'user',\n    });\n\n    const localPeerIds = [\n      ...localContactIds,\n      ...localChatIds,\n    ];\n\n    return unique([\n      ...sortChatIds(localPeerIds, undefined, currentUserId ? [currentUserId] : undefined),\n      ...sortChatIds(accountPeerIds || []),\n    ]);\n  }, [searchQuery, currentUserId, contactIds, accountPeerIds, isChannelList]);\n\n  useHorizontalScroll(chatSelectionRef, !localResults.length || isChannelList, true);\n\n  const globalResults = useMemo(() => {\n    if (!searchQuery || searchQuery.length < MIN_QUERY_LENGTH_FOR_GLOBAL_SEARCH || !globalPeerIds) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    // No need for expensive global updates, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    const filteredIds = globalPeerIds.filter((id) => {\n      if (!isChannelList) return true;\n      const chat = chatsById[id];\n      return chat && isChatChannel(chat);\n    });\n\n    return sortChatIds(filteredIds, true);\n  }, [globalPeerIds, isChannelList, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if ((!searchQuery && !searchDate) || !foundIds || foundIds.length === 0) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    // No need for expensive global updates, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    return foundIds\n      .map((id) => {\n        const [chatId, messageId] = parseSearchResultKey(id);\n        const chat = chatsById[chatId];\n        if (!chat) return undefined;\n        if (isChannelList && !isChatChannel(chat)) return undefined;\n\n        return globalMessagesByChatId?.[chatId]?.byId[messageId];\n      })\n      .filter(Boolean);\n  }, [searchQuery, searchDate, foundIds, isChannelList, globalMessagesByChatId]);\n\n  useEffect(() => {\n    if (!searchQuery) return;\n    searchMessagesGlobal({\n      type: isChannelList ? 'channels' : 'text',\n      context: searchContext,\n      shouldResetResultsByType: true,\n      shouldCheckFetchingMessagesStatus: true,\n    });\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [searchContext]);\n\n  const handleClickShowMoreLocal = useCallback(() => {\n    setShouldShowMoreLocal(!shouldShowMoreLocal);\n  }, [shouldShowMoreLocal]);\n\n  const handleClickShowMoreGlobal = useCallback(() => {\n    setShouldShowMoreGlobal(!shouldShowMoreGlobal);\n  }, [shouldShowMoreGlobal]);\n\n  function renderFoundMessage(message: ApiMessage) {\n    const chatsById = getGlobal().chats.byId;\n\n    const text = renderMessageSummary(oldLang, message);\n    const chat = chatsById[message.chatId];\n\n    if (!text || !chat) {\n      return undefined;\n    }\n\n    return (\n      <ChatMessage\n        chatId={message.chatId}\n        message={message}\n        searchQuery={searchQuery}\n      />\n    );\n  }\n\n  const actualFoundIds = foundMessages;\n\n  const nothingFound = searchContext === 'all' && fetchingStatus && !fetchingStatus.chats && !fetchingStatus.messages\n    && !localResults.length && !globalResults.length && !actualFoundIds.length;\n  const isMessagesFetching = fetchingStatus?.messages;\n\n  const shouldRenderTopPeers = !searchQuery && !searchDate && !isChannelList;\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n    isDisabled: !shouldRenderTopPeers,\n  });\n\n  if (shouldRenderTopPeers) {\n    return <RecentContacts onReset={onReset} />;\n  }\n\n  const shouldRenderMessagesSection = searchContext === 'all' ? Boolean(actualFoundIds.length) : true;\n\n  return (\n    <InfiniteScroll\n      ref={containerRef}\n      className=\"LeftSearch--content custom-scroll\"\n      items={actualFoundIds}\n      onLoadMore={handleLoadMore}\n      // To prevent scroll jumps caused by delayed local results rendering\n      noScrollRestoreOnTop\n      noFastList\n    >\n      {dateSearchQuery && (\n        <div className=\"chat-selection no-scrollbar\">\n          <DateSuggest\n            searchDate={dateSearchQuery}\n            onSelect={onSearchDateSelect}\n          />\n        </div>\n      )}\n      {nothingFound && (\n        <NothingFound\n          text={oldLang('ChatList.Search.NoResults')}\n          description={oldLang('ChatList.Search.NoResultsDescription')}\n        />\n      )}\n      {Boolean(localResults.length) && !isChannelList && (\n        <div\n          className=\"chat-selection no-scrollbar\"\n          dir={oldLang.isRtl ? 'rtl' : undefined}\n          ref={chatSelectionRef}\n        >\n          {localResults.map((id) => (\n            <PeerChip\n              peerId={id}\n              className=\"left-search-local-suggestion\"\n              onClick={handlePickerItemClick}\n              clickArg={id}\n            />\n          ))}\n        </div>\n      )}\n      {Boolean(localResults.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={oldLang.isRtl ? 'auto' : undefined}>\n            {localResults.length > LESS_LIST_ITEMS_AMOUNT && (\n              <Link className=\"Link\" onClick={handleClickShowMoreLocal}>\n                {oldLang(shouldShowMoreLocal ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n              </Link>\n            )}\n            {oldLang(isChannelList ? 'SearchMyChannels' : 'DialogList.SearchSectionDialogs')}\n          </h3>\n          {localResults.map((id, index) => {\n            if (!shouldShowMoreLocal && index >= LESS_LIST_ITEMS_AMOUNT) {\n              return undefined;\n            }\n\n            return (\n              <LeftSearchResultChat\n                withOpenAppButton\n                chatId={id}\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      {Boolean(globalResults.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={oldLang.isRtl ? 'auto' : undefined}>\n            {globalResults.length > LESS_LIST_ITEMS_AMOUNT && (\n              <Link className=\"Link\" onClick={handleClickShowMoreGlobal}>\n                {oldLang(shouldShowMoreGlobal ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n              </Link>\n            )}\n            {oldLang('DialogList.SearchSectionGlobal')}\n          </h3>\n          {sponsoredPeer && (\n            <LeftSearchResultSponsored sponsoredPeer={sponsoredPeer} observeIntersection={observe} />\n          )}\n          {globalResults.map((id, index) => {\n            if (!shouldShowMoreGlobal && index >= LESS_LIST_ITEMS_AMOUNT) {\n              return undefined;\n            }\n\n            return (\n              <LeftSearchResultChat\n                chatId={id}\n                withUsername\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      {Boolean(suggestedChannelIds?.length) && !searchQuery && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={oldLang.isRtl ? 'auto' : undefined}>\n            {oldLang('SearchRecommendedChannels')}\n          </h3>\n          {suggestedChannelIds.map((id) => {\n            return (\n              <LeftSearchResultChat\n                chatId={id}\n                withUsername\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      <div className=\"menuOwner\" ref={ref}>\n        {renderContextMenu()}\n        {shouldRenderMessagesSection && (\n          <div className=\"search-section\">\n            <h3 className=\"section-heading\" dir={oldLang.isRtl ? 'auto' : undefined}>\n              {!isChannelList && (\n                <Link className=\"Link menuTrigger dropDownLink\" onClick={handleClickContext}>\n                  {lang('SearchContextCaption', {\n                    type: getSearchContextCaption(searchContext),\n                  }, {\n                    withNodes: true,\n                  })}\n\n                  <Transition\n                    name=\"fade\"\n                    shouldCleanup\n                    activeKey={Number(isMessagesFetching)}\n                    className=\"iconContainer\"\n                    slideClassName=\"iconContainerSlide\"\n                  >\n                    {isMessagesFetching && (<Loading />)}\n                    {!isMessagesFetching && <Icon name=\"down\" />}\n                  </Transition>\n                </Link>\n              )}\n              {oldLang('SearchMessages')}\n            </h3>\n            {actualFoundIds.map(renderFoundMessage)}\n          </div>\n        )}\n      </div>\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isChannelList }): StateProps => {\n    const { userIds: contactIds } = global.contactList || {};\n    const {\n      currentUserId, messages,\n    } = global;\n\n    if (!contactIds) {\n      return {};\n    }\n\n    const {\n      fetchingStatus, globalResults, localResults, resultsByType, sponsoredPeer,\n    } = selectTabState(global).globalSearch;\n    const { peerIds: globalPeerIds } = globalResults || {};\n    const { peerIds: accountPeerIds } = localResults || {};\n    const { byChatId: globalMessagesByChatId } = messages;\n    const foundIds = resultsByType?.[isChannelList ? 'channels' : 'text']?.foundIds;\n    const { similarChannelIds } = selectSimilarChannelIds(global, GLOBAL_SUGGESTED_CHANNELS_ID) || {};\n\n    return {\n      currentUserId,\n      contactIds,\n      accountPeerIds,\n      globalPeerIds,\n      foundIds,\n      globalMessagesByChatId,\n      fetchingStatus,\n      sponsoredPeer,\n      suggestedChannelIds: similarChannelIds,\n    };\n  },\n)(ChatResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { getIsDownloading, getMessageDocument } from '../../../global/helpers';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dates/dateFormat';\nimport { parseSearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Document from '../../common/Document';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'documents';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst FileResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  activeDownloads,\n  shouldWarnAboutSvg,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = parseSearchResultKey(id);\n      const message = globalMessagesByChatId[chatId]?.byId[messageId];\n\n      return message && getMessageDocument(message) ? message : undefined;\n    }).filter(Boolean) as ApiMessage[];\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((message: ApiMessage) => {\n    focusMessage({ chatId: message.chatId, messageId: message.id });\n  }, [focusMessage]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n      return (\n        <>\n          {shouldDrawDateDivider && (\n            <p\n              className=\"section-heading\"\n              dir={lang.isRtl ? 'rtl' : undefined}\n              key={message.date}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <div\n            className=\"ListItem small-icon\"\n            key={message.id}\n          >\n            <Document\n              document={getMessageDocument(message)!}\n              message={message}\n              withDate\n              datetime={message.date}\n              smaller\n              sender={getSenderName(lang, message, chatsById, usersById)}\n              className=\"scroll-item\"\n              isDownloading={getIsDownloading(activeDownloads, message.content.document!)}\n              shouldWarnAboutSvg={shouldWarnAboutSvg}\n              observeIntersection={observeIntersectionForMedia}\n              onDateClick={handleMessageFocus}\n            />\n          </div>\n        </>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={canRenderContents ? foundMessages : undefined}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(FileResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dates/dateFormat';\nimport { parseSearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport NothingFound from '../../common/NothingFound';\nimport WebLink from '../../common/WebLink';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'links';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst LinkResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  isChatProtected,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = parseSearchResultKey(id);\n\n      return globalMessagesByChatId[chatId]?.byId[messageId];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((message: ApiMessage) => {\n    focusMessage({ chatId: message.chatId, messageId: message.id });\n  }, [focusMessage]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n      return (\n        <>\n          {shouldDrawDateDivider && (\n            <p\n              className=\"section-heading\"\n              key={message.date}\n              dir={lang.isRtl ? 'rtl' : undefined}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <div\n            className=\"ListItem small-icon\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            key={message.id}\n          >\n            <WebLink\n              key={message.id}\n              message={message}\n              senderTitle={getSenderName(lang, message, chatsById, usersById)}\n              isProtected={isChatProtected || message.isProtected}\n              observeIntersection={observeIntersectionForMedia}\n              onMessageClick={handleMessageFocus}\n            />\n          </div>\n        </>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={canRenderContents ? foundMessages : undefined}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(LinkResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection, MediaViewerOrigin } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { parseSearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Media from '../../common/Media';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport ChatMessage from './ChatMessage';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'media';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst MediaResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  globalMessagesByChatId,\n  foundIds,\n  isChatProtected,\n}) => {\n  const {\n    searchMessagesGlobal,\n    openMediaViewer,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchMessagesGlobal, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = parseSearchResultKey(id);\n\n      return globalMessagesByChatId[chatId]?.byId[messageId];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleSelectMedia = useCallback((id: number, chatId: string) => {\n    openMediaViewer({\n      chatId,\n      messageId: id,\n      origin: MediaViewerOrigin.SearchResult,\n    });\n  }, [openMediaViewer]);\n\n  function renderGallery() {\n    return (\n      <div className=\"media-list\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {foundMessages.map((message) => (\n          <Media\n            key={`${message.chatId}-${message.id}`}\n            idPrefix=\"search-media\"\n            message={message}\n            isProtected={isChatProtected || message.isProtected}\n            observeIntersection={observeIntersectionForMedia}\n            onClick={handleSelectMedia}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderSearchResult() {\n    return foundMessages.map((message) => (\n      <ChatMessage\n        key={message.id}\n        chatId={message.chatId}\n        message={message}\n      />\n    ));\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n  const isMediaGrid = canRenderContents && foundIds && foundIds.length > 0 && !searchQuery;\n  const isMessageList = canRenderContents && foundIds && foundIds.length > 0 && searchQuery;\n\n  const classNames = buildClassName(\n    'search-content custom-scroll',\n    isMessageList && 'chat-list',\n  );\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch--content LeftSearch--media\">\n      <InfiniteScroll\n        className={classNames}\n        items={canRenderContents ? foundMessages : undefined}\n        itemSelector={!searchQuery ? '.Media' : '.ListItem'}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {isMediaGrid && renderGallery()}\n        {isMessageList && renderSearchResult()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(MediaResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo,\n  useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { RegularLangKey } from '../../../types/language';\nimport { GlobalSearchContent } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { parseDateString } from '../../../util/dates/dateFormat';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport TabList from '../../ui/TabList';\nimport Transition from '../../ui/Transition';\nimport AudioResults from './AudioResults';\nimport BotAppResults from './BotAppResults';\nimport ChatMessageResults from './ChatMessageResults';\nimport ChatResults from './ChatResults';\nimport FileResults from './FileResults';\nimport LinkResults from './LinkResults';\nimport MediaResults from './MediaResults';\n\nimport './LeftSearch.scss';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  searchDate?: number;\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentContent?: GlobalSearchContent;\n  chatId?: string;\n};\n\ntype TabInfo = {\n  type: GlobalSearchContent;\n  key: RegularLangKey;\n};\n\nconst TABS: TabInfo[] = [\n  { type: GlobalSearchContent.ChatList, key: 'SearchTabChats' },\n  { type: GlobalSearchContent.ChannelList, key: 'SearchTabChannels' },\n  { type: GlobalSearchContent.BotApps, key: 'SearchTabApps' },\n  { type: GlobalSearchContent.Media, key: 'SearchTabMedia' },\n  { type: GlobalSearchContent.Links, key: 'SearchTabLinks' },\n  { type: GlobalSearchContent.Files, key: 'SearchTabFiles' },\n  { type: GlobalSearchContent.Music, key: 'SearchTabMusic' },\n  { type: GlobalSearchContent.Voice, key: 'SearchTabVoice' },\n];\n\nconst CHAT_TABS: TabInfo[] = [\n  { type: GlobalSearchContent.ChatList, key: 'SearchTabMessages' },\n  ...TABS.slice(3), // Skip ChatList, ChannelList and BotApps, replaced with All Messages\n];\n\nconst LeftSearch: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  searchDate,\n  isActive,\n  currentContent = GlobalSearchContent.ChatList,\n  chatId,\n  onReset,\n}) => {\n  const {\n    setGlobalSearchContent,\n    setGlobalSearchDate,\n  } = getActions();\n\n  const lang = useLang();\n  const [activeTab, setActiveTab] = useState(currentContent);\n  const dateSearchQuery = useMemo(() => parseDateString(searchQuery), [searchQuery]);\n\n  const tabs = useMemo(() => {\n    const arr = chatId ? CHAT_TABS : TABS;\n    return arr.map((tab) => ({\n      ...tab,\n      title: lang(tab.key),\n    }));\n  }, [chatId, lang]);\n\n  const handleSwitchTab = useLastCallback((index: number) => {\n    const tab = tabs[index];\n    setGlobalSearchContent({ content: tab.type });\n    setActiveTab(index);\n  });\n\n  const handleSearchDateSelect = useLastCallback((value: Date) => {\n    setGlobalSearchDate({ date: value.getTime() / 1000 });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isActive, undefined, '.ListItem-button', true);\n\n  return (\n    <div className=\"LeftSearch\" ref={containerRef} onKeyDown={handleKeyDown}>\n      <TabList activeTab={activeTab} tabs={tabs} onSwitchTab={handleSwitchTab} />\n      <Transition\n        name={lang.isRtl ? 'slideOptimizedRtl' : 'slideOptimized'}\n        renderCount={tabs.length}\n        activeKey={currentContent}\n      >\n        {(() => {\n          switch (currentContent) {\n            case GlobalSearchContent.ChatList:\n            case GlobalSearchContent.ChannelList:\n              if (chatId) {\n                return (\n                  <ChatMessageResults\n                    searchQuery={searchQuery}\n                    dateSearchQuery={dateSearchQuery}\n                    onReset={onReset}\n                    onSearchDateSelect={handleSearchDateSelect}\n                  />\n                );\n              }\n              return (\n                <ChatResults\n                  isChannelList={currentContent === GlobalSearchContent.ChannelList}\n                  searchQuery={searchQuery}\n                  searchDate={searchDate}\n                  dateSearchQuery={dateSearchQuery}\n                  onReset={onReset}\n                  onSearchDateSelect={handleSearchDateSelect}\n                />\n              );\n            case GlobalSearchContent.Media:\n              return <MediaResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Links:\n              return <LinkResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Files:\n              return <FileResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Music:\n              return (\n                <AudioResults\n                  key=\"audio\"\n                  searchQuery={searchQuery}\n                />\n              );\n            case GlobalSearchContent.Voice:\n              return (\n                <AudioResults\n                  key=\"voice\"\n                  isVoice\n                  searchQuery={searchQuery}\n                />\n              );\n            case GlobalSearchContent.BotApps:\n              return (\n                <BotAppResults\n                  key=\"botApps\"\n                  searchQuery={searchQuery}\n                />\n              );\n            default:\n              return undefined;\n          }\n        })()}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentContent, chatId } = selectTabState(global).globalSearch;\n\n    return { currentContent, chatId };\n  },\n)(LeftSearch));\n","import type { Dispatch, StateReducer } from '../useReducer';\n\nimport useReducer from '../useReducer';\n\nexport type TwoFaActions = (\n  'setCurrentPassword' | 'setPassword' | 'setHint' | 'setEmail' | 'reset'\n);\nexport type TwoFaDispatch = Dispatch<TwoFaState, TwoFaActions>;\n\nexport type TwoFaState = {\n  currentPassword: string;\n  password: string;\n  hint: string;\n  email: string;\n};\n\nconst INITIAL_STATE: TwoFaState = {\n  currentPassword: '',\n  password: '',\n  hint: '',\n  email: '',\n};\n\nconst twoFaReducer: StateReducer<TwoFaState, TwoFaActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setCurrentPassword':\n      return {\n        ...state,\n        currentPassword: action.payload,\n      };\n\n    case 'setPassword':\n      return {\n        ...state,\n        password: action.payload,\n      };\n\n    case 'setHint':\n      return {\n        ...state,\n        hint: action.payload,\n      };\n\n    case 'setEmail':\n      return {\n        ...state,\n        email: action.payload,\n      };\n\n    case 'reset':\n      return INITIAL_STATE;\n\n    default:\n      return state;\n  }\n};\n\nconst useTwoFaReducer = () => {\n  return useReducer(twoFaReducer, INITIAL_STATE);\n};\n\nexport default useTwoFaReducer;\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { FolderEditDispatch, FoldersState } from '../../../../hooks/reducers/useFoldersReducer';\n\nimport { ALL_FOLDER_ID, ARCHIVED_FOLDER_ID } from '../../../../config';\nimport { filterPeersByQuery } from '../../../../global/helpers/peers';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { unique } from '../../../../util/iteratees';\nimport { CUSTOM_PEER_EXCLUDED_CHAT_TYPES, CUSTOM_PEER_INCLUDED_CHAT_TYPES } from '../../../../util/objects/customPeer';\n\nimport { selectChatFilters } from '../../../../hooks/reducers/useFoldersReducer';\nimport { useFolderManagerForOrderedIds } from '../../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\nimport PeerPicker from '../../../common/pickers/PeerPicker';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport Loading from '../../../ui/Loading';\n\ntype StateProps = {\n  maxChats: number;\n};\n\ntype OwnProps = {\n  mode: 'included' | 'excluded';\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  isActive?: boolean;\n  onReset: VoidFunction;\n  onSaveFilter: VoidFunction;\n};\n\nconst SettingsFoldersChatFilters: FC<OwnProps & StateProps> = ({\n  mode,\n  state,\n  dispatch,\n  isActive,\n  onReset,\n  onSaveFilter,\n  maxChats,\n}) => {\n  const lang = useOldLang();\n\n  const { openLimitReachedModal } = getActions();\n\n  const { chatFilter } = state;\n  const { selectedChatIds, selectedChatTypes } = useMemo(() => selectChatFilters(state, mode, true), [mode, state]);\n  const chatTypes = mode === 'included' ? CUSTOM_PEER_INCLUDED_CHAT_TYPES : CUSTOM_PEER_EXCLUDED_CHAT_TYPES;\n\n  const [isTouched, setIsTouched] = useState(false);\n\n  const folderAllOrderedIds = useFolderManagerForOrderedIds(ALL_FOLDER_ID);\n  const folderArchivedOrderedIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n\n  const shouldHideChatTypes = state.folder.isChatList;\n\n  useEffect(() => {\n    if (!isActive) {\n      setIsTouched(false);\n    }\n  }, [isActive]);\n\n  const displayedIds = useMemo(() => {\n    const chatIds = [...folderAllOrderedIds || [], ...folderArchivedOrderedIds || []];\n    return unique([\n      ...filterPeersByQuery({ ids: chatIds, query: chatFilter, type: 'chat' }),\n    ]);\n  }, [folderAllOrderedIds, folderArchivedOrderedIds, chatFilter]);\n\n  const handleFilterChange = useLastCallback((newFilter: string) => {\n    dispatch({\n      type: 'setChatFilter',\n      payload: newFilter,\n    });\n    setIsTouched(true);\n  });\n\n  const handleSelectedIdsChange = useLastCallback((ids: string[]) => {\n    if (mode === 'included') {\n      if (ids.length >= maxChats) {\n        openLimitReachedModal({\n          limit: 'dialogFiltersChats',\n        });\n        return;\n      }\n      dispatch({\n        type: 'setIncludeFilters',\n        payload: { ...state.includeFilters, includedChatIds: ids },\n      });\n    } else {\n      dispatch({\n        type: 'setExcludeFilters',\n        payload: { ...state.excludeFilters, excludedChatIds: ids },\n      });\n    }\n    setIsTouched(true);\n  });\n\n  const handleSelectedChatTypesChange = useLastCallback((keys: string[]) => {\n    const newFilters: Record<string, boolean> = {};\n    keys.forEach((key) => {\n      newFilters[key] = true;\n    });\n\n    if (mode === 'included') {\n      dispatch({\n        type: 'setIncludeFilters',\n        payload: {\n          includedChatIds: selectedChatIds,\n          ...newFilters,\n        },\n      });\n    } else {\n      dispatch({\n        type: 'setExcludeFilters',\n        payload: {\n          excludedChatIds: selectedChatIds,\n          ...newFilters,\n        },\n      });\n    }\n    setIsTouched(true);\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  if (!displayedIds) {\n    return <Loading />;\n  }\n\n  return (\n    <div className=\"Picker settings-folders-chat-list\">\n      <PeerPicker\n        categories={shouldHideChatTypes ? undefined : chatTypes}\n        itemIds={displayedIds}\n        selectedIds={selectedChatIds}\n        selectedCategories={selectedChatTypes}\n        filterValue={chatFilter}\n        filterPlaceholder={lang('Search')}\n        categoryPlaceholderKey=\"FilterChatTypes\"\n        searchInputId=\"new-group-picker-search\"\n        isSearchable\n        withDefaultPadding\n        withPeerTypes\n        allowMultiple\n        itemInputType=\"checkbox\"\n        onSelectedIdsChange={handleSelectedIdsChange}\n        onSelectedCategoriesChange={handleSelectedChatTypesChange}\n        onFilterChange={handleFilterChange}\n      />\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={onSaveFilter}\n        ariaLabel={lang('Save')}\n      >\n        <Icon name=\"check\" />\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      maxChats: selectCurrentLimit(global, 'dialogFiltersChats'),\n    };\n  },\n)(SettingsFoldersChatFilters));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport { BASE_URL, IS_PACKAGED_ELECTRON } from '../../../config';\nimport { IS_EMOJI_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { handleEmojiLoad, LOADED_EMOJIS } from '../../../util/emoji/emoji';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport './EmojiButton.scss';\n\ntype OwnProps = {\n  emoji: Emoji;\n  focus?: boolean;\n  onClick: (emoji: string, name: string) => void;\n};\n\nconst EmojiButton: FC<OwnProps> = ({\n  emoji, focus, onClick,\n}) => {\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    // Preventing safari from losing focus on Composer MessageInput\n    e.preventDefault();\n\n    onClick(emoji.native, emoji.id);\n  });\n\n  const className = buildClassName(\n    'EmojiButton',\n    focus && 'focus',\n  );\n\n  const src = `${IS_PACKAGED_ELECTRON ? BASE_URL : '.'}/img-apple-64/${emoji.image}.png`;\n  const isLoaded = LOADED_EMOJIS.has(src);\n\n  return (\n    <div\n      className={className}\n      onMouseDown={handleClick}\n      title={`:${emoji.names[0]}:`}\n    >\n      {IS_EMOJI_SUPPORTED ? emoji.native : (\n        <img\n          src={src}\n          className={!isLoaded ? 'opacity-transition shown' : undefined}\n          alt={emoji.native}\n          loading=\"lazy\"\n          data-path={src}\n          onLoad={!isLoaded ? handleEmojiLoad : undefined}\n          draggable={false}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(EmojiButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { EMOJI_SIZE_PICKER, RECENT_SYMBOL_SET_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport windowSize from '../../../util/windowSize';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport { useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport EmojiButton from './EmojiButton';\n\nexport const EMOJIS_PER_ROW_ON_DESKTOP = 8;\nexport const EMOJI_MARGIN = 0.625 * REM;\nexport const EMOJI_VERTICAL_MARGIN = 0.25 * REM;\nexport const EMOJI_VERTICAL_MARGIN_MOBILE = 0.5 * REM;\nexport const MOBILE_CONTAINER_PADDING = 0.5 * REM;\n\ntype OwnProps = {\n  category: EmojiCategory;\n  index: number;\n  allEmojis: AllEmojis;\n  observeIntersection: ObserveFn;\n  shouldRender: boolean;\n  onEmojiSelect: (emoji: string, name: string) => void;\n};\n\nconst EmojiCategory: FC<OwnProps> = ({\n  category, index, allEmojis, observeIntersection, shouldRender, onEmojiSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useOnIntersect(ref, observeIntersection);\n\n  const transitionClassNames = useMediaTransitionDeprecated(shouldRender);\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const emojisPerRow = isMobile\n    ? Math.floor(\n      (windowSize.get().width - MOBILE_CONTAINER_PADDING + EMOJI_MARGIN) / (EMOJI_SIZE_PICKER + EMOJI_MARGIN),\n    )\n    : EMOJIS_PER_ROW_ON_DESKTOP;\n  const height = Math.ceil(category.emojis.length / emojisPerRow)\n    * (EMOJI_SIZE_PICKER + (isMobile ? EMOJI_VERTICAL_MARGIN_MOBILE : EMOJI_VERTICAL_MARGIN));\n\n  return (\n    <div\n      ref={ref}\n      key={category.id}\n      id={`emoji-category-${index}`}\n      className=\"symbol-set\"\n    >\n      <div className=\"symbol-set-header\">\n        <p className=\"symbol-set-name\" dir=\"auto\">\n          {lang(category.id === RECENT_SYMBOL_SET_ID ? 'RecentStickers' : `Emoji${index}`)}\n        </p>\n      </div>\n      <div\n        className={buildClassName('symbol-set-container', transitionClassNames)}\n        style={`height: ${height}px;`}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldRender && category.emojis.map((name) => {\n          const emoji = allEmojis[name];\n          // Recent emojis may contain emoticons that are no longer in the list\n          if (!emoji) {\n            return undefined;\n          }\n          // Some emojis have multiple skins and are represented as an Object with emojis for all skins.\n          // For now, we select only the first emoji with 'neutral' skin.\n          const displayedEmoji = 'id' in emoji ? emoji : emoji[1];\n\n          return (\n            <EmojiButton\n              key={displayedEmoji.id}\n              emoji={displayedEmoji}\n              onClick={onEmojiSelect}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(EmojiCategory);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type { IconName } from '../../../types/icons';\nimport type {\n  EmojiData,\n  EmojiModule,\n  EmojiRawData,\n} from '../../../util/emoji/emoji';\n\nimport { MENU_TRANSITION_DURATION, RECENT_SYMBOL_SET_ID } from '../../../config';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport animateScroll from '../../../util/animateScroll';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { uncompressEmoji } from '../../../util/emoji/emoji';\nimport { pick } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Loading from '../../ui/Loading';\nimport EmojiCategory from './EmojiCategory';\n\nimport './EmojiPicker.scss';\n\ntype OwnProps = {\n  className?: string;\n  onEmojiSelect: (emoji: string, name: string) => void;\n};\n\ntype StateProps = Pick<GlobalState, 'recentEmojis'>;\n\ntype EmojiCategoryData = { id: string; name: string; emojis: string[] };\n\nexport const ICONS_BY_CATEGORY: Record<string, IconName> = {\n  recent: 'recent',\n  people: 'smile',\n  nature: 'animals',\n  foods: 'eats',\n  activity: 'sport',\n  places: 'car',\n  objects: 'lamp',\n  symbols: 'language',\n  flags: 'flag',\n};\n\nconst OPEN_ANIMATION_DELAY = 200;\nexport const SMOOTH_SCROLL_DISTANCE = 100;\nconst FOCUS_MARGIN = 3.25 * REM;\nconst HEADER_BUTTON_WIDTH = 2.625 * REM; // Includes margins\nexport const INTERSECTION_THROTTLE = 200;\n\nconst categoryIntersections: boolean[] = [];\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nconst EmojiPicker: FC<OwnProps & StateProps> = ({\n  className,\n  recentEmojis,\n  onEmojiSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n\n  const [categories, setCategories] = useState<EmojiCategoryData[]>();\n  const [emojis, setEmojis] = useState<AllEmojis>();\n  const [activeCategoryIndex, setActiveCategoryIndex] = useState(0);\n  const { isMobile } = useAppLayout();\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const { observe: observeIntersection } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  }, (entries) => {\n    entries.forEach((entry) => {\n      const { id } = entry.target as HTMLDivElement;\n      if (!id || !id.startsWith('emoji-category-')) {\n        return;\n      }\n\n      const index = Number(id.replace('emoji-category-', ''));\n      categoryIntersections[index] = entry.isIntersecting;\n    });\n\n    const minIntersectingIndex = categoryIntersections.reduce((lowestIndex, isIntersecting, index) => {\n      return isIntersecting && index < lowestIndex ? index : lowestIndex;\n    }, Infinity);\n\n    if (minIntersectingIndex === Infinity) {\n      return;\n    }\n\n    setActiveCategoryIndex(minIntersectingIndex);\n  });\n\n  const canRenderContents = useAsyncRendering([], MENU_TRANSITION_DURATION);\n  const shouldRenderContent = emojis && canRenderContents;\n\n  useHorizontalScroll(headerRef, !(isMobile && shouldRenderContent));\n\n  // Scroll header when active set updates\n  useEffect(() => {\n    if (!categories) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeCategoryIndex * HEADER_BUTTON_WIDTH - header.offsetWidth / 2 + HEADER_BUTTON_WIDTH / 2;\n\n    animateHorizontalScroll(header, newLeft);\n  }, [categories, activeCategoryIndex]);\n\n  const lang = useOldLang();\n\n  const allCategories = useMemo(() => {\n    if (!categories) {\n      return MEMO_EMPTY_ARRAY;\n    }\n    const themeCategories = [...categories];\n    if (recentEmojis?.length) {\n      themeCategories.unshift({\n        id: RECENT_SYMBOL_SET_ID,\n        name: lang('RecentStickers'),\n        emojis: recentEmojis,\n      });\n    }\n\n    return themeCategories;\n  }, [categories, lang, recentEmojis]);\n\n  // Initialize data on first render.\n  useEffect(() => {\n    setTimeout(() => {\n      const exec = () => {\n        setCategories(emojiData.categories);\n\n        setEmojis(emojiData.emojis as AllEmojis);\n      };\n\n      if (emojiData) {\n        exec();\n      } else {\n        ensureEmojiData()\n          .then(exec);\n      }\n    }, OPEN_ANIMATION_DELAY);\n  }, []);\n\n  const selectCategory = useLastCallback((index: number) => {\n    setActiveCategoryIndex(index);\n    const categoryEl = containerRef.current!.closest<HTMLElement>('.SymbolMenu-main')!\n      .querySelector(`#emoji-category-${index}`)! as HTMLElement;\n    animateScroll({\n      container: containerRef.current!,\n      element: categoryEl,\n      position: 'start',\n      margin: FOCUS_MARGIN,\n      maxDistance: SMOOTH_SCROLL_DISTANCE,\n    });\n  });\n\n  const handleEmojiSelect = useLastCallback((emoji: string, name: string) => {\n    onEmojiSelect(emoji, name);\n  });\n\n  function renderCategoryButton(category: EmojiCategoryData, index: number) {\n    const icon = ICONS_BY_CATEGORY[category.id];\n\n    return icon && (\n      <Button\n        className={`symbol-set-button ${index === activeCategoryIndex ? 'activated' : ''}`}\n        round\n        faded\n        color=\"translucent\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => selectCategory(index)}\n        ariaLabel={category.name}\n      >\n        <Icon name={icon} />\n      </Button>\n    );\n  }\n\n  const containerClassName = buildClassName('EmojiPicker', className);\n\n  if (!shouldRenderContent) {\n    return (\n      <div className={containerClassName}>\n        <Loading />\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    'EmojiPicker-header',\n    !shouldHideTopBorder && 'with-top-border',\n  );\n\n  return (\n    <div className={containerClassName}>\n      <div\n        ref={headerRef}\n        className={headerClassName}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {allCategories.map(renderCategoryButton)}\n      </div>\n      <div\n        ref={containerRef}\n        onScroll={handleContentScroll}\n        className={buildClassName('EmojiPicker-main', IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll')}\n      >\n        {allCategories.map((category, i) => (\n          <EmojiCategory\n            category={category}\n            index={i}\n            allEmojis={emojis}\n            observeIntersection={observeIntersection}\n            shouldRender={activeCategoryIndex >= i - 1 && activeCategoryIndex <= i + 1}\n            onEmojiSelect={handleEmojiSelect}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => pick(global, ['recentEmojis']),\n)(EmojiPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAvailableReaction, ApiReaction, ApiReactionWithPaid, ApiSticker, ApiStickerSet,\n} from '../../api/types';\nimport type { EmojiKeywords, StickerSetOrReactionsSetOrRecent } from '../../types';\nimport { type GlobalState } from '../../global/types';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  EMOJI_SIZE_PICKER,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  SLIDE_TRANSITION_DURATION,\n  STICKER_PICKER_MAX_SHARED_COVERS,\n  STICKER_SIZE_PICKER_HEADER,\n  TOP_SYMBOL_SET_ID,\n} from '../../config';\nimport { isSameReaction } from '../../global/helpers';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChatFullInfo,\n  selectIsAlwaysHighPriorityEmoji,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n} from '../../global/selectors';\nimport animateHorizontalScroll from '../../util/animateHorizontalScroll';\nimport animateScroll from '../../util/animateScroll';\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport\n{\n  type EmojiData, type EmojiModule, type EmojiRawData, uncompressEmoji,\n} from '../../util/emoji/emoji';\nimport { pickTruthy, unique } from '../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport { REM } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useDebouncedCallback from '../../hooks/useDebouncedCallback';\nimport useFlag from '../../hooks/useFlag';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevDuringAnimation from '../../hooks/usePrevDuringAnimation';\nimport useScrolledState from '../../hooks/useScrolledState';\nimport useAsyncRendering from '../right/hooks/useAsyncRendering';\nimport { FOCUS_MARGIN, useStickerPickerObservers } from './hooks/useStickerPickerObservers';\n\nimport { EMOTICON_TO_FOLDER_ICON } from '../left/main/ChatFolders';\nimport EmojiButton from '../middle/composer/EmojiButton';\nimport EmojiCategory from '../middle/composer/EmojiCategory';\nimport { ICONS_BY_CATEGORY, INTERSECTION_THROTTLE, SMOOTH_SCROLL_DISTANCE } from '../middle/composer/EmojiPicker';\nimport StickerSetCover from '../middle/composer/StickerSetCover';\nimport Button from '../ui/Button';\nimport Loading from '../ui/Loading';\nimport SearchInput from '../ui/SearchInput';\nimport Icon from './icons/Icon';\nimport StickerButton from './StickerButton';\nimport StickerSet from './StickerSet';\n\nimport pickerStyles from '../middle/composer/StickerPicker.module.scss';\nimport styles from './CustomEmojiPicker.module.scss';\n\ntype OwnProps = {\n  chatId?: string;\n  className?: string;\n  pickerListClassName?: string;\n  isHidden?: boolean;\n  loadAndPlay: boolean;\n  idPrefix?: string;\n  withDefaultTopicIcons?: boolean;\n  selectedReactionIds?: string[];\n  isStatusPicker?: boolean;\n  isReactionPicker?: boolean;\n  isTranslucent?: boolean;\n  onCustomEmojiSelect: (sticker: ApiSticker) => void;\n  onEmojiSelect: (emoji: string, name: string) => void;\n  onIconSelect: (emoji: string) => void;\n  onReactionSelect?: (reaction: ApiReactionWithPaid) => void;\n  onReactionContext?: (reaction: ApiReactionWithPaid) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  emojiKeywords?: Record<string, EmojiKeywords | undefined>;\n  customEmojisById?: Record<string, ApiSticker>;\n  recentCustomEmojiIds?: string[];\n  recentStatusEmojis?: ApiSticker[];\n  chatEmojiSetId?: string;\n  topReactions?: ApiReaction[];\n  recentReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  availableReactions?: ApiAvailableReaction[];\n  addedCustomEmojiIds?: string[];\n  defaultTopicIconsId?: string;\n  defaultStatusIconsId?: string;\n  customEmojiFeaturedIds?: string[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n  isWithPaidReaction?: boolean;\n  recentEmojis?: GlobalState['recentEmojis'];\n};\n\nconst { loadEmojiKeywords } = getActions();\n\nconst HEADER_BUTTON_WIDTH = 2.5 * REM; // px (including margin)\n\nconst DEFAULT_ID_PREFIX = 'custom-emoji-set';\nconst TOP_REACTIONS_COUNT = 16;\nconst RECENT_REACTIONS_COUNT = 32;\nconst RECENT_DEFAULT_STATUS_COUNT = 7;\nconst FADED_BUTTON_SET_IDS = new Set([RECENT_SYMBOL_SET_ID, FAVORITE_SYMBOL_SET_ID, POPULAR_SYMBOL_SET_ID]);\nconst STICKER_SET_IDS_WITH_COVER = new Set([\n  RECENT_SYMBOL_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n]);\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\nconst categoryIntersections: boolean[] = [];\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n    loadEmojiKeywords({ language: BASE_EMOJI_KEYWORD_LANG });\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\ntype EmojiCategoryData = { id: string; name: string; emojis: string[] };\n\nconst FolderIconPicker: FC<OwnProps & StateProps> = ({\n  emojiKeywords,\n  className,\n  pickerListClassName,\n  isHidden,\n  loadAndPlay,\n  addedCustomEmojiIds,\n  customEmojisById,\n  recentCustomEmojiIds,\n  selectedReactionIds,\n  recentStatusEmojis,\n  stickerSetsById,\n  chatEmojiSetId,\n  topReactions,\n  recentReactions,\n  availableReactions,\n  idPrefix = DEFAULT_ID_PREFIX,\n  customEmojiFeaturedIds,\n  canAnimate,\n  isReactionPicker,\n  isStatusPicker,\n  isTranslucent,\n  isSavedMessages,\n  isCurrentUserPremium,\n  withDefaultTopicIcons,\n  defaultTopicIconsId,\n  defaultStatusIconsId,\n  defaultTagReactions,\n  isWithPaidReaction,\n  recentEmojis,\n  onEmojiSelect,\n  onIconSelect,\n  onCustomEmojiSelect,\n  onReactionSelect,\n  onReactionContext,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n\n  const [categories, setCategories] = useState<EmojiCategoryData[]>();\n  const [emojis, setEmojis] = useState<AllEmojis>();\n  const [activeCategoryIndex, setActiveCategoryIndex] = useState(0);\n  const [emojiQuery, setEmojiQuery] = useState<string>('');\n  const [emojisFound, setEmojisFound] = useState<(Emoji | ApiSticker)[]>([]);\n\n  const textToEmojiMap = useMemo(() => {\n    const textToEmoji: Map<string, (Emoji | ApiSticker)[]> = new Map();\n    for (const emoji of Object.values(emojis ?? {})) {\n      const em = 'native' in emoji ? emoji : Object.values(emoji)[0];\n      const arr = textToEmoji.get(em.native) ?? [];\n      arr.push(em);\n      textToEmoji.set(em.native, arr);\n    }\n\n    for (const custEm of Object.values(customEmojisById ?? {})) {\n      if (!custEm?.emoji) continue;\n\n      const arr = textToEmoji.get(custEm.emoji) ?? [];\n      arr.push(custEm);\n      textToEmoji.set(custEm.emoji, arr);\n    }\n\n    return textToEmoji;\n  }, [emojis, customEmojisById]);\n\n  const { isMobile } = useAppLayout();\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const recentCustomEmojis = useMemo(() => {\n    return isStatusPicker\n      ? recentStatusEmojis\n      : Object.values(pickTruthy(customEmojisById!, recentCustomEmojiIds!));\n  }, [customEmojisById, isStatusPicker, recentCustomEmojiIds, recentStatusEmojis]);\n\n  const prefix = `${idPrefix}-custom-emoji`;\n  const {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForShowingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  } = useStickerPickerObservers(containerRef, headerRef, prefix, isHidden);\n\n  const canLoadAndPlay = usePrevDuringAnimation(loadAndPlay || undefined, SLIDE_TRANSITION_DURATION);\n\n  const lang = useOldLang();\n\n  const areAddedLoaded = Boolean(addedCustomEmojiIds);\n\n  const handleEmojiSearchQueryChange = useDebouncedCallback((query: string) => {\n    setEmojiQuery(query.toLowerCase());\n\n    const arr: Set<(Emoji | ApiSticker)> = new Set();\n\n    for (const emKw of Object.values(emojiKeywords ?? {})) {\n      if (!emKw || !emKw.keywords) continue;\n      for (const [kw, emojisKws] of Object.entries(emKw.keywords)) {\n        if (!kw.includes(query)) continue;\n\n        for (const em of emojisKws) {\n          for (const e of textToEmojiMap.get(em) ?? []) {\n            arr.add(e);\n          }\n        }\n      }\n    }\n    setEmojisFound([...arr.values()]);\n  }, [emojiKeywords, textToEmojiMap], 300, true);\n\n  const [isInputFocused, setFocused, setUnfocused] = useFlag();\n\n  // eslint-disable-next-line no-null/no-null\n  const sharedSearchCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const allSets = useMemo(() => {\n    const defaultSets: StickerSetOrReactionsSetOrRecent[] = [];\n\n    if (isReactionPicker && isSavedMessages) {\n      if (defaultTagReactions?.length) {\n        defaultSets.push({\n          id: TOP_SYMBOL_SET_ID,\n          accessHash: '',\n          title: lang('PremiumPreviewTags'),\n          reactions: defaultTagReactions,\n          count: defaultTagReactions.length,\n          isEmoji: true,\n        });\n      }\n    }\n\n    if (isReactionPicker && !isSavedMessages) {\n      const topReactionsSlice: ApiReactionWithPaid[] = topReactions?.slice(0, TOP_REACTIONS_COUNT) || [];\n      if (isWithPaidReaction) {\n        topReactionsSlice.unshift({ type: 'paid' });\n      }\n      if (topReactionsSlice?.length) {\n        defaultSets.push({\n          id: TOP_SYMBOL_SET_ID,\n          accessHash: '',\n          title: lang('Reactions'),\n          reactions: topReactionsSlice,\n          count: topReactionsSlice.length,\n          isEmoji: true,\n        });\n      }\n\n      const cleanRecentReactions = (recentReactions || [])\n        .filter((reaction) => !topReactionsSlice.some((topReaction) => isSameReaction(topReaction, reaction)))\n        .slice(0, RECENT_REACTIONS_COUNT);\n      const cleanAvailableReactions = (availableReactions || [])\n        .filter(({ isInactive }) => !isInactive)\n        .map(({ reaction }) => reaction)\n        .filter((reaction) => {\n          return !topReactionsSlice.some((topReaction) => isSameReaction(topReaction, reaction))\n            && !cleanRecentReactions.some((topReaction) => isSameReaction(topReaction, reaction));\n        });\n      if (cleanAvailableReactions?.length || cleanRecentReactions?.length) {\n        const isPopular = !cleanRecentReactions?.length;\n        const allRecentReactions = cleanRecentReactions.concat(cleanAvailableReactions);\n        defaultSets.push({\n          id: isPopular ? POPULAR_SYMBOL_SET_ID : RECENT_SYMBOL_SET_ID,\n          accessHash: '',\n          title: lang(isPopular ? 'PopularReactions' : 'RecentStickers'),\n          reactions: allRecentReactions,\n          count: allRecentReactions.length,\n          isEmoji: true,\n        });\n      }\n    } else if (isStatusPicker) {\n      const defaultStatusIconsPack = stickerSetsById[defaultStatusIconsId!];\n      if (defaultStatusIconsPack?.stickers?.length) {\n        const stickers = defaultStatusIconsPack.stickers\n          .slice(0, RECENT_DEFAULT_STATUS_COUNT)\n          .concat(recentCustomEmojis || []);\n        defaultSets.push({\n          ...defaultStatusIconsPack,\n          stickers,\n          count: stickers.length,\n          id: RECENT_SYMBOL_SET_ID,\n          title: lang('RecentStickers'),\n        });\n      }\n    } else if (withDefaultTopicIcons) {\n      const defaultTopicIconsPack = stickerSetsById[defaultTopicIconsId!];\n      if (defaultTopicIconsPack.stickers?.length) {\n        defaultSets.push({\n          ...defaultTopicIconsPack,\n          id: RECENT_SYMBOL_SET_ID,\n          title: lang('RecentStickers'),\n        });\n      }\n    } else if (recentCustomEmojis?.length) {\n      defaultSets.push({\n        id: RECENT_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('RecentStickers'),\n        stickers: recentCustomEmojis,\n        count: recentCustomEmojis.length,\n        isEmoji: true,\n      });\n    }\n\n    const userSetIds = [...(addedCustomEmojiIds || [])];\n    if (chatEmojiSetId) {\n      userSetIds.unshift(chatEmojiSetId);\n    }\n\n    const setIdsToDisplay = unique(userSetIds.concat(customEmojiFeaturedIds || []));\n\n    const setsToDisplay = Object.values(pickTruthy(stickerSetsById, setIdsToDisplay));\n\n    return [\n      ...defaultSets,\n      ...setsToDisplay,\n    ];\n  }, [\n    addedCustomEmojiIds, isReactionPicker, isStatusPicker, withDefaultTopicIcons, recentCustomEmojis,\n    customEmojiFeaturedIds, stickerSetsById, topReactions, availableReactions, lang, recentReactions,\n    defaultStatusIconsId, defaultTopicIconsId, isSavedMessages, defaultTagReactions, chatEmojiSetId,\n    isWithPaidReaction,\n  ]);\n\n  const noPopulatedSets = useMemo(() => (\n    areAddedLoaded\n    && allSets.filter((set) => set.stickers?.length).length === 0\n  ), [allSets, areAddedLoaded]);\n\n  const canRenderContent = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n  const shouldRenderContent = areAddedLoaded && canRenderContent && !noPopulatedSets;\n\n  useHorizontalScroll(headerRef, isMobile || !shouldRenderContent);\n\n  // Initialize data on first render.\n  useEffect(() => {\n    setTimeout(() => {\n      const exec = () => {\n        setCategories(emojiData.categories);\n        setEmojis(emojiData.emojis as AllEmojis);\n      };\n\n      if (emojiData) {\n        exec();\n      } else {\n        ensureEmojiData()\n          .then(exec);\n      }\n    }, 300); // OPEN_ANIMATION_DELAY\n  }, []);\n\n  // Scroll container and header when active set changes\n  useEffect(() => {\n    if (!areAddedLoaded) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeSetIndex * HEADER_BUTTON_WIDTH - (header.offsetWidth / 2 - HEADER_BUTTON_WIDTH / 2);\n\n    animateHorizontalScroll(header, newLeft);\n  }, [areAddedLoaded, activeSetIndex]);\n\n  const { observe: observeIntersection } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  }, (entries) => {\n    entries.forEach((entry) => {\n      const { id } = entry.target as HTMLDivElement;\n      if (!id || !id.startsWith('emoji-category-')) {\n        return;\n      }\n\n      const index = Number(id.replace('emoji-category-', ''));\n      categoryIntersections[index] = entry.isIntersecting;\n    });\n\n    const minIntersectingIndex = categoryIntersections.reduce((lowestIndex, isIntersecting, index) => {\n      return isIntersecting && index < lowestIndex ? index : lowestIndex;\n    }, Infinity);\n\n    if (minIntersectingIndex === Infinity) {\n      return;\n    }\n\n    setActiveCategoryIndex(minIntersectingIndex);\n  });\n\n  function renderCover(stickerSet: StickerSetOrReactionsSetOrRecent, index: number) {\n    const firstSticker = stickerSet.stickers?.[0];\n    const buttonClassName = buildClassName(\n      pickerStyles.stickerCover,\n      index === activeSetIndex && styles.activated,\n    );\n\n    if (stickerSet.id === RECENT_SYMBOL_SET_ID) return undefined;\n\n    const withSharedCanvas = index < STICKER_PICKER_MAX_SHARED_COVERS;\n    const isHq = selectIsAlwaysHighPriorityEmoji(getGlobal(), stickerSet as ApiStickerSet);\n\n    if (stickerSet.id === TOP_SYMBOL_SET_ID) {\n      return undefined;\n    }\n\n    if (STICKER_SET_IDS_WITH_COVER.has(stickerSet.id) || stickerSet.hasThumbnail || !firstSticker) {\n      const isRecent = false;\n      const isFaded = FADED_BUTTON_SET_IDS.has(stickerSet.id);\n      return (\n        <Button\n          key={stickerSet.id}\n          className={buttonClassName}\n          ariaLabel={stickerSet.title}\n          round\n          faded={isFaded}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => selectStickerSet(isRecent ? 0 : index)}\n        >\n          {isRecent ? (\n            <Icon name=\"recent\" />\n          ) : (\n            <StickerSetCover\n              stickerSet={stickerSet as ApiStickerSet}\n              noPlay={!canAnimate || !canLoadAndPlay}\n              forcePlayback\n              observeIntersection={observeIntersectionForCovers}\n              sharedCanvasRef={withSharedCanvas ? (isHq ? sharedCanvasHqRef : sharedCanvasRef) : undefined}\n            />\n          )}\n        </Button>\n      );\n    }\n\n    return (\n      <StickerButton\n        key={stickerSet.id}\n        sticker={firstSticker}\n        size={STICKER_SIZE_PICKER_HEADER}\n        title={stickerSet.title}\n        className={buttonClassName}\n        noPlay={!canAnimate || !canLoadAndPlay}\n        observeIntersection={observeIntersectionForCovers}\n        noContextMenu\n        isCurrentUserPremium\n        sharedCanvasRef={withSharedCanvas ? (isHq ? sharedCanvasHqRef : sharedCanvasRef) : undefined}\n        withTranslucentThumb={isTranslucent}\n        onClick={selectStickerSet}\n        clickArg={index}\n        forcePlayback\n      />\n    );\n  }\n\n  const selectCategory = useLastCallback((index: number) => {\n    setActiveCategoryIndex(index);\n    const categoryEl = containerRef.current!\n      .querySelector(`#emoji-category-${index}`)! as HTMLElement;\n\n    animateScroll({\n      container: containerRef.current!,\n      element: categoryEl,\n      position: 'start',\n      margin: FOCUS_MARGIN,\n      maxDistance: SMOOTH_SCROLL_DISTANCE,\n    });\n  });\n\n  function renderCategoryButton(category: EmojiCategoryData, index: number) {\n    const icon = ICONS_BY_CATEGORY[category.id];\n\n    return icon && (\n      <Button\n        className={`${pickerStyles.stickerCover} symbol-set-button ${index + 1\n          === activeCategoryIndex ? 'activated' : ''}`}\n        round\n        faded\n        color=\"translucent\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => selectCategory(index + 1)}\n        ariaLabel={category.name}\n      >\n        <Icon name={icon} />\n      </Button>\n    );\n  }\n\n  const allCategories = useMemo(() => {\n    if (!categories) {\n      return MEMO_EMPTY_ARRAY;\n    }\n    const themeCategories = [...categories];\n    if (recentEmojis?.length) {\n      themeCategories.unshift({\n        id: RECENT_SYMBOL_SET_ID,\n        name: lang('RecentStickers'),\n        emojis: recentEmojis,\n      });\n    }\n\n    return themeCategories;\n  }, [categories, lang, recentEmojis]);\n\n  const fullClassName = buildClassName('StickerPicker', styles.root, className);\n\n  if (!shouldRenderContent) {\n    return (\n      <div className={fullClassName}>\n        {noPopulatedSets ? (\n          <div className={pickerStyles.pickerDisabled}>{lang('NoStickers')}</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    pickerStyles.header,\n    'no-scrollbar',\n    !shouldHideTopBorder && pickerStyles.headerWithBorder,\n  );\n  const listClassName = buildClassName(\n    pickerStyles.main,\n    pickerStyles.main_customEmoji,\n    IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n    pickerListClassName,\n    pickerStyles.hasHeader,\n  );\n\n  return (\n    <div className={fullClassName}>\n      <div\n        ref={headerRef}\n        className={buildClassName(\n          headerClassName,\n          isInputFocused || emojiQuery ? 'header-hide' : '',\n          canAnimate ? 'animated-slide' : '',\n        )}\n\n      >\n        <div className=\"categories-emojis\">\n          <div className={buildClassName('emoji-category-stripe')}>\n            <div className={canAnimate ? 'animated-width' : ''}>\n              {allCategories.slice(1).map(renderCategoryButton)}\n            </div>\n          </div>\n          <div className=\"shared-canvas-container\">\n\n            <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n            <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n            {allSets.map(renderCover)}\n          </div>\n        </div>\n      </div>\n      <div\n        ref={containerRef}\n        onScroll={handleContentScroll}\n        className={buildClassName(\n          listClassName,\n          isInputFocused || emojiQuery ? 'main-hide' : '',\n          canAnimate ? 'animated-slide' : '',\n        )}\n      >\n        <SearchInput\n          onBlur={setUnfocused}\n          onFocus={setFocused}\n          value={emojiQuery}\n          className={buildClassName(\n\n          )}\n          // lang pack should have a proper key\n          placeholder={lang('Search Emoji')}\n          onChange={handleEmojiSearchQueryChange}\n        />\n        {!(emojiQuery) ? (\n          <>\n            <div className=\"symbol-set symbol-set-container custom-folder-icon-container\">\n              {Object.entries(EMOTICON_TO_FOLDER_ICON).map(([emoticon, v]) => (\n                <div\n                  className=\"EmojiButton custom-folder-icons\"\n                  onClick={() => { onIconSelect(emoticon); }}\n                >\n                  <Icon name={v} />\n                </div>\n              ))}\n            </div>\n            {allCategories.slice(1).map((category, i) => (\n              <EmojiCategory\n                category={category}\n                index={i + 1}\n                allEmojis={emojis!}\n                observeIntersection={observeIntersection}\n                shouldRender={activeCategoryIndex >= i && activeCategoryIndex <= i + 2}\n                onEmojiSelect={onEmojiSelect}\n              />\n            ))}\n            {allSets.map((stickerSet, i) => {\n              const shouldHideHeader = stickerSet.id === TOP_SYMBOL_SET_ID\n              || (stickerSet.id === RECENT_SYMBOL_SET_ID && (withDefaultTopicIcons || isStatusPicker));\n              const isChatEmojiSet = stickerSet.id === chatEmojiSetId;\n\n              if (stickerSet.id === RECENT_SYMBOL_SET_ID) return undefined;\n\n              return (\n                <StickerSet\n                  key={stickerSet.id}\n                  stickerSet={stickerSet}\n                  loadAndPlay={Boolean(canAnimate && canLoadAndPlay)}\n                  index={i}\n                  idPrefix={prefix}\n                  observeIntersection={observeIntersectionForSet}\n                  observeIntersectionForPlayingItems={observeIntersectionForPlayingItems}\n                  observeIntersectionForShowingItems={observeIntersectionForShowingItems}\n                  isNearActive={activeSetIndex >= i - 1 && activeSetIndex <= i + 1}\n                  isSavedMessages={isSavedMessages}\n                  folderIconPick\n                  isStatusPicker={isStatusPicker}\n                  isReactionPicker={isReactionPicker}\n                  shouldHideHeader={shouldHideHeader}\n                  withDefaultTopicIcon={withDefaultTopicIcons && stickerSet.id === RECENT_SYMBOL_SET_ID}\n                  withDefaultStatusIcon={isStatusPicker && stickerSet.id === RECENT_SYMBOL_SET_ID}\n                  isChatEmojiSet={isChatEmojiSet}\n                  isCurrentUserPremium={isCurrentUserPremium}\n                  selectedReactionIds={selectedReactionIds}\n                  availableReactions={availableReactions}\n                  isTranslucent={isTranslucent}\n                  onReactionSelect={onReactionSelect}\n                  onReactionContext={onReactionContext}\n                  onStickerSelect={onCustomEmojiSelect}\n                  onContextMenuOpen={onContextMenuOpen}\n                  onContextMenuClose={onContextMenuClose}\n                  onContextMenuClick={onContextMenuClick}\n                  forcePlayback\n                />\n              );\n            })}\n          </>\n        ) : (emojisFound.length ? (\n          <div className=\"symbol-set symbol-set-container\">\n            <canvas\n              ref={sharedSearchCanvasRef}\n              className=\"shared-canvas\"\n              style={undefined}\n            />\n            {\n              emojisFound.map((e) => ('native' in e\n                ? (\n                  <EmojiButton\n                    key={e.id}\n                    emoji={e}\n                    onClick={onEmojiSelect}\n                  />\n                )\n                : (\n                  <StickerButton\n                    key={e.id}\n                    sticker={e}\n                    size={EMOJI_SIZE_PICKER}\n                    observeIntersection={observeIntersectionForPlayingItems}\n                    observeIntersectionForShowing={observeIntersectionForShowingItems}\n                    noPlay={!loadAndPlay}\n                    isSavedMessages={isSavedMessages}\n                    isStatusPicker={isStatusPicker}\n                    canViewSet\n                    noContextMenu\n                    isCurrentUserPremium={isCurrentUserPremium}\n                    shouldIgnorePremium={false}\n                    sharedCanvasRef={sharedSearchCanvasRef}\n                    withTranslucentThumb={isTranslucent}\n                    onClick={onCustomEmojiSelect}\n                    clickArg={e}\n                    isSelected={false}\n                    onUnfaveClick={undefined}\n                    onFaveClick={undefined}\n                    onRemoveRecentClick={undefined}\n                    onContextMenuOpen={onContextMenuOpen}\n                    onContextMenuClose={onContextMenuClose}\n                    onContextMenuClick={onContextMenuClick}\n                    forcePlayback={false}\n                    isEffectEmoji={false}\n                    noShowPremium\n                  />\n                )\n\n              ))\n            }\n          </div>\n        ) : <p>{lang('NoEmojiFound')}</p>)}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isStatusPicker, isReactionPicker }): StateProps => {\n    const {\n      stickers: {\n        setsById: stickerSetsById,\n      },\n      emojiKeywords,\n      customEmojis: {\n        byId: customEmojisById,\n        featuredIds: customEmojiFeaturedIds,\n\n        statusRecent: {\n          emojis: recentStatusEmojis,\n        },\n\n      },\n      recentCustomEmojis: recentCustomEmojiIds,\n      reactions: {\n        availableReactions,\n        recentReactions,\n        topReactions,\n        defaultTags,\n      },\n      recentEmojis,\n    } = global;\n\n    const isSavedMessages = Boolean(chatId && selectIsChatWithSelf(global, chatId));\n    const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n\n    return {\n      emojiKeywords,\n      customEmojisById: !isStatusPicker ? customEmojisById : undefined,\n      recentCustomEmojiIds: !isStatusPicker ? recentCustomEmojiIds : undefined,\n      recentStatusEmojis: isStatusPicker ? recentStatusEmojis : undefined,\n      stickerSetsById,\n      addedCustomEmojiIds: global.customEmojis.added.setIds,\n      canAnimate: selectCanPlayAnimatedEmojis(global),\n      isSavedMessages,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      customEmojiFeaturedIds,\n      defaultTopicIconsId: global.defaultTopicIconsId,\n      defaultStatusIconsId: global.defaultStatusIconsId,\n      topReactions: isReactionPicker ? topReactions : undefined,\n      recentReactions: isReactionPicker ? recentReactions : undefined,\n      chatEmojiSetId: chatFullInfo?.emojiSet?.id,\n      isWithPaidReaction: isReactionPicker && chatFullInfo?.isPaidReactionAvailable,\n      availableReactions: isReactionPicker ? availableReactions : undefined,\n      defaultTagReactions: isReactionPicker ? defaultTags : undefined,\n      recentEmojis,\n    };\n  },\n)(FolderIconPicker));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport {\n  getActions, getGlobal, setGlobal, withGlobal,\n} from '../../../../global';\n\nimport type { ApiChatlistExportedInvite, ApiSticker, ApiThemeParameters } from '../../../../api/types';\nimport type { CustomEmojiIconsFolder } from '../../../../global/types';\nimport type {\n  FolderEditDispatch,\n  FoldersState,\n} from '../../../../hooks/reducers/useFoldersReducer';\nimport type { IAnchorPosition } from '../../../../types';\n\nimport { EMOJI_SIZE_PICKER, STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { isUserId } from '../../../../global/helpers';\nimport { selectCanPlayAnimatedEmojis, selectCanShareFolder } from '../../../../global/selectors';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { IS_TOUCH_ENV } from '../../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../../util/buildClassName';\nimport buildStyle from '../../../../util/buildStyle';\nimport { findIntersectionWithSet } from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { CUSTOM_PEER_EXCLUDED_CHAT_TYPES, CUSTOM_PEER_INCLUDED_CHAT_TYPES } from '../../../../util/objects/customPeer';\nimport { extractCurrentThemeParams } from '../../../../util/themeStyle';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport { selectChatFilters } from '../../../../hooks/reducers/useFoldersReducer';\nimport useColorFilter from '../../../../hooks/stickers/useColorFilter';\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useFlag from '../../../../hooks/useFlag';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useMouseInside from '../../../../hooks/useMouseInside';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport FolderIconPicker from '../../../common/FolderIconPicker';\nimport GroupChatInfo from '../../../common/GroupChatInfo';\nimport Icon from '../../../common/icons/Icon';\nimport PrivateChatInfo from '../../../common/PrivateChatInfo';\nimport StickerView from '../../../common/StickerView';\nimport Button from '../../../ui/Button';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport InputText from '../../../ui/InputText';\nimport ListItem from '../../../ui/ListItem';\nimport Menu from '../../../ui/Menu';\nimport Portal from '../../../ui/Portal';\nimport ResponsiveHoverButton from '../../../ui/ResponsiveHoverButton';\nimport Spinner from '../../../ui/Spinner';\nimport {\n  DEFAULT_FOLDER_ICON,\n  getIconNameByFolder,\n  getLocalStorageFolderIcons,\n  LOCSTOR_CUSTOM_EMOJI_KEY,\n} from '../../main/ChatFolders';\n\ntype OwnProps = {\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  onAddIncludedChats: VoidFunction;\n  onAddExcludedChats: VoidFunction;\n  onShareFolder: VoidFunction;\n  onOpenInvite: (url: string) => void;\n  isActive?: boolean;\n  isOnlyInvites?: boolean;\n  onReset: () => void;\n  onBack: () => void;\n  onSaveFolder: (cb?: VoidFunction) => void;\n};\n\ntype StateProps = {\n  customSticker?: ApiSticker;\n  customEmoji?: string;\n  loadedActiveChatIds?: string[];\n  loadedArchivedChatIds?: string[];\n  invites?: ApiChatlistExportedInvite[];\n  isRemoved?: boolean;\n  maxInviteLinks: number;\n  maxChatLists: number;\n  chatListCount: number;\n};\n\nconst SUBMIT_TIMEOUT = 500;\n\nconst INITIAL_CHATS_LIMIT = 5;\n\nexport const ERROR_NO_TITLE = 'Please provide a title for this folder.';\nexport const ERROR_NO_CHATS = 'ChatList.Filter.Error.Empty';\n\nconst SettingsFoldersEdit: FC<OwnProps & StateProps> = ({\n  state,\n  dispatch,\n  onAddIncludedChats,\n  onAddExcludedChats,\n  onShareFolder,\n  onOpenInvite,\n  isActive,\n  onReset,\n  isRemoved,\n  onBack,\n  customSticker,\n  customEmoji,\n  loadedActiveChatIds,\n  isOnlyInvites,\n  loadedArchivedChatIds,\n  invites,\n  maxInviteLinks,\n  maxChatLists,\n  chatListCount,\n  onSaveFolder,\n}) => {\n  const {\n    loadChatlistInvites,\n    openLimitReachedModal,\n    showNotification,\n  } = getActions();\n\n  const isCreating = state.mode === 'create';\n  const isEditingChatList = state.folder.isChatList;\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const btnRef = useRef<HTMLButtonElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [customStickerSelected, setCustomStickerSelected] = useState<ApiSticker | undefined>(customSticker);\n  const [customEmojiSelected, setCustomEmojiSelected] = useState<string | undefined>(customEmoji);\n\n  const [isIncludedChatsListExpanded, setIsIncludedChatsListExpanded] = useState(false);\n  const [isExcludedChatsListExpanded, setIsExcludedChatsListExpanded] = useState(false);\n\n  const { isMobile } = useAppLayout();\n  const [isOpen, setOpen, setClose] = useFlag();\n\n  useEffect(() => {\n    if (isRemoved) {\n      onReset();\n    }\n  }, [isRemoved, onReset]);\n  const [, setInputCoordinates] = useState<{\n    x: number;\n    y: number;\n    height: number;\n    width: number;\n    right: number;\n  }>({\n    x: 0, y: 0, height: 0, width: 0, right: 0,\n  });\n\n  useEffect(() => {\n    if (isActive && state.folderId && state.folder.isChatList) {\n      loadChatlistInvites({ folderId: state.folderId });\n    }\n  }, [isActive, state.folder.isChatList, state.folderId]);\n\n  const {\n    selectedChatIds: includedChatIds,\n    selectedChatTypes: includedChatTypes,\n  } = useMemo(() => selectChatFilters(state, 'included'), [state]);\n  const {\n    selectedChatIds: excludedChatIds,\n    selectedChatTypes: excludedChatTypes,\n  } = useMemo(() => selectChatFilters(state, 'excluded'), [state]);\n\n  useEffect(() => {\n    setIsIncludedChatsListExpanded(false);\n    setIsExcludedChatsListExpanded(false);\n  }, [state.folderId]);\n\n  const [visibleIncludedChatIds, visibleExcludedChatIds] = useMemo(() => {\n    const allLoadedChatsSet = new Set([\n      ...(loadedActiveChatIds || []),\n      ...(loadedArchivedChatIds || []),\n    ]);\n\n    const loadedIncludedChatIds = findIntersectionWithSet(includedChatIds, allLoadedChatsSet);\n    const loadedExcludedChatIds = findIntersectionWithSet(excludedChatIds, allLoadedChatsSet);\n\n    return [\n      isIncludedChatsListExpanded\n        ? loadedIncludedChatIds\n        : loadedIncludedChatIds.slice(0, INITIAL_CHATS_LIMIT - includedChatTypes.length),\n      isExcludedChatsListExpanded\n        ? loadedExcludedChatIds\n        : loadedExcludedChatIds.slice(0, INITIAL_CHATS_LIMIT - excludedChatTypes.length),\n    ];\n  }, [\n    excludedChatIds, includedChatIds, includedChatTypes, excludedChatTypes,\n    isExcludedChatsListExpanded, isIncludedChatsListExpanded,\n    loadedActiveChatIds, loadedArchivedChatIds,\n  ]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack,\n  });\n\n  const handleChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const { currentTarget } = event;\n    dispatch({ type: 'setTitle', payload: currentTarget.value.trim() });\n  }, [dispatch]);\n\n  const handleSubmit = useCallback(() => {\n    dispatch({ type: 'setIsLoading', payload: true });\n\n    const stickerOrEmojiSelected: string | ApiSticker | undefined = customEmojiSelected\n    ?? customStickerSelected ?? undefined;\n\n    if (stickerOrEmojiSelected) {\n      const newStorage: CustomEmojiIconsFolder = getLocalStorageFolderIcons();\n      newStorage[state.folderId ?? -1] = stickerOrEmojiSelected;\n      localStorage.setItem(\n        LOCSTOR_CUSTOM_EMOJI_KEY,\n        JSON.stringify(newStorage),\n      );\n\n      if (customStickerSelected) {\n        const global = getGlobal();\n        global.customEmojis.byId[customStickerSelected.id] = customStickerSelected;\n        setGlobal(global);\n      }\n    }\n\n    onSaveFolder(() => {\n      setTimeout(() => {\n        onReset();\n      }, SUBMIT_TIMEOUT);\n    });\n  }, [dispatch, customEmojiSelected, customStickerSelected, onSaveFolder, state.folderId, onReset]);\n\n  const handleCreateInviteClick = useCallback(() => {\n    if (!invites) {\n      if (isCreating) {\n        onSaveFolder(onShareFolder);\n      }\n      return;\n    }\n\n    // Ignoring global updates is a known drawback here\n    if (!selectCanShareFolder(getGlobal(), state.folderId!)) {\n      showNotification({ message: lang('ChatList.Filter.InviteLink.IncludeExcludeError') });\n      return;\n    }\n\n    if (chatListCount >= maxChatLists && !state.folder.isChatList) {\n      openLimitReachedModal({\n        limit: 'chatlistJoined',\n      });\n      return;\n    }\n\n    if (invites.length < maxInviteLinks) {\n      if (state.isTouched) {\n        onSaveFolder(onShareFolder);\n      } else {\n        onShareFolder();\n      }\n      return;\n    }\n\n    openLimitReachedModal({\n      limit: 'chatlistInvites',\n    });\n  }, [\n    invites, state.folderId, state.isTouched, chatListCount, maxInviteLinks, isCreating, onSaveFolder,\n    onShareFolder, lang, maxChatLists, state.folder.isChatList,\n  ]);\n\n  const handleEditInviteClick = useCallback((e: React.MouseEvent<HTMLElement>, url: string) => {\n    if (state.isTouched) {\n      onSaveFolder(() => onOpenInvite(url));\n    } else {\n      onOpenInvite(url);\n    }\n  }, [onSaveFolder, onOpenInvite, state.isTouched]);\n\n  function renderChatType(key: string, mode: 'included' | 'excluded') {\n    const chatType = mode === 'included'\n      ? CUSTOM_PEER_INCLUDED_CHAT_TYPES.find(({ type: typeKey }) => typeKey === key)\n      : CUSTOM_PEER_EXCLUDED_CHAT_TYPES.find(({ type: typeKey }) => typeKey === key);\n\n    if (!chatType) {\n      return undefined;\n    }\n\n    return (\n      <ListItem\n        key={chatType.type}\n        className=\"settings-folders-list-item mb-1\"\n        narrow\n        inactive\n      >\n        <PrivateChatInfo\n          avatarSize=\"small\"\n          customPeer={chatType}\n        />\n      </ListItem>\n    );\n  }\n\n  function renderChats(mode: 'included' | 'excluded') {\n    const selectedChatTypes = mode === 'included' ? includedChatTypes : excludedChatTypes;\n    const visibleChatIds = mode === 'included' ? visibleIncludedChatIds : visibleExcludedChatIds;\n\n    const isExpanded = mode === 'included' ? isIncludedChatsListExpanded : isExcludedChatsListExpanded;\n    const allChatIds = mode === 'included' ? includedChatIds : excludedChatIds;\n    const leftChatsCount = allChatIds.length - visibleChatIds.length;\n    const clickHandler = mode === 'included'\n      ? () => setIsIncludedChatsListExpanded(true)\n      : () => setIsExcludedChatsListExpanded(true);\n\n    return (\n      <>\n        {selectedChatTypes.map((key) => renderChatType(key, mode))}\n        {visibleChatIds.map((id) => (\n          <ListItem\n            className=\"settings-folders-list-item mb-1\"\n            narrow\n            inactive\n          >\n            {isUserId(id) ? (\n              <PrivateChatInfo avatarSize=\"small\" userId={id} />\n            ) : (\n              <GroupChatInfo avatarSize=\"small\" chatId={id} />\n            )}\n          </ListItem>\n        ))}\n        {(!isExpanded && leftChatsCount > 0) && (\n          <ListItem\n            key=\"load-more\"\n            className=\"settings-folders-list-item\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={clickHandler}\n            icon=\"down\"\n          >\n            {lang('FilterShowMoreChats', leftChatsCount, 'i')}\n          </ListItem>\n        )}\n      </>\n    );\n  }\n\n  useEffect(() => {\n    const rect = btnRef.current?.getBoundingClientRect();\n\n    if (rect) {\n      setInputCoordinates({\n        x: rect?.x ?? -10000,\n        y: rect?.y ?? -10000,\n        height: rect?.height ?? 0,\n        width: rect?.width ?? 0,\n        right: rect?.right ?? 0,\n      });\n    }\n  }, [btnRef, isOpen, isActive]);\n  // isOpen = true;\n  const [contextMenuAnchor, setContextMenuAnchor] = useState<IAnchorPosition | undefined>(undefined);\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, setClose, undefined, isMobile);\n\n  // eslint-disable-next-line no-null/no-null\n  const triggerRef = useRef<HTMLDivElement>(null);\n  const handleActivateSymbolMenu = useLastCallback(() => {\n    setOpen();\n    const triggerEl = triggerRef.current;\n    if (!triggerEl) return;\n    const { x, y } = triggerEl.getBoundingClientRect();\n    setContextMenuAnchor({ x, y });\n  });\n\n  const possibleIcon = getIconNameByFolder(state.folder);\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const canAnimate = selectCanPlayAnimatedEmojis(getGlobal());\n\n  const [theme, setTheme] = useState<ApiThemeParameters | undefined>(undefined);\n  const accentColorTheme = useColorFilter(theme?.accent_text_color ?? '#000000', true);\n  const textColorTheme = useColorFilter(theme?.secondary_text_color ?? '#000000', true);\n\n  useEffect(() => {\n    requestMeasure(() => {\n      const currTheme = extractCurrentThemeParams();\n      setTheme(currTheme);\n    });\n  }, []);\n\n  const handleClick = useLastCallback(() => {\n    if (isOpen) {\n      setClose();\n    } else {\n      setOpen();\n    }\n  });\n\n  const handleMenuClose = useLastCallback(() => {\n    setClose();\n  });\n\n  const onEmojiSelect = useLastCallback((emoji) => {\n    setCustomStickerSelected(undefined);\n    setCustomEmojiSelected(emoji.trim());\n    dispatch({ type: 'setEmoticon', payload: emoji.trim() });\n  });\n\n  const handleCustomEmojiSelect = useLastCallback((sticker) => {\n    setCustomStickerSelected(sticker);\n    setCustomEmojiSelected(undefined);\n\n    dispatch({\n      type: 'setEmoticon',\n      payload: (sticker.emoji ?? DEFAULT_FOLDER_ICON).trim(),\n    });\n  });\n\n  const handleIconSelect = useLastCallback((emoticon) => {\n    setCustomStickerSelected(undefined);\n    setCustomEmojiSelected(emoticon.trim());\n    dispatch({ type: 'setEmoticon', payload: emoticon.trim() });\n  });\n\n  return (\n    <div className=\"settings-fab-wrapper\" ref={ref}>\n      <div className=\"settings-content no-border custom-scroll\">\n        <div className=\"settings-content-header\">\n          <AnimatedIconWithPreview\n            size={STICKER_SIZE_FOLDER_SETTINGS}\n            tgsUrl={LOCAL_TGS_URLS.FoldersNew}\n            play={String(state.folderId)}\n            className=\"settings-content-icon\"\n          />\n\n          {isCreating && (\n            <p\n              className=\"settings-item-description mb-3\"\n              dir={lang.isRtl ? 'rtl' : undefined}\n            >\n              {lang('FilterIncludeInfo')}\n            </p>\n          )}\n\n          <div className=\"input-with-button\" ref={containerRef}>\n            <InputText\n              ref={inputRef}\n              className=\"mb-0\"\n              label={lang('FilterNameHint')}\n              value={state.folder.title.text}\n              onChange={handleChange}\n              // onKeyDown={}\n              error={\n                state.error && state.error === ERROR_NO_TITLE\n                  ? ERROR_NO_TITLE\n                  : undefined\n              }\n              maxLength={12}\n            />\n\n            {!isMobile ? (\n              <ResponsiveHoverButton\n                className={buildClassName(\n                  'button-for-emoji',\n                  isOpen && 'activated',\n                )}\n                color=\"translucent\"\n                onActivate={handleActivateSymbolMenu}\n                ariaLabel=\"Choose emoji, sticker or GIF\"\n                isRectangular\n              >\n                <div ref={triggerRef} className=\"symbol-menu-trigger\" />\n                {customStickerSelected ? (\n                  <div\n                    style={customStickerSelected.shouldUseTextColor ? `filter:${isOpen\n                      ? accentColorTheme : textColorTheme}` : ''}\n                  >\n                    <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n                    <StickerView\n                      containerRef={ref}\n                      sticker={customStickerSelected}\n                      size={EMOJI_SIZE_PICKER}\n                      shouldLoop\n                      shouldPreloadPreview\n                      noLoad={!true}\n                      noPlay={!canAnimate}\n                      noVideoOnMobile\n                      sharedCanvasRef={sharedCanvasRef}\n                      withTranslucentThumb={false}\n                    />\n                  </div>\n                ) : possibleIcon || !state.folder.emoticon ? (\n                  <Icon name={possibleIcon ?? 'folder-badge'} />\n                ) : (\n                  state.folder.emoticon\n                )}\n              </ResponsiveHoverButton>\n            ) : (\n              <Button\n                round\n                size=\"smaller\"\n                color=\"translucent\"\n                className=\"button-for-emoji\"\n                onClick={handleClick}\n              >\n                {possibleIcon || !state.folder.emoticon ? (\n                  <Icon name={possibleIcon ?? 'folder-badge'} />\n                ) : (\n                  state.folder.emoticon\n                )}\n              </Button>\n            )}\n            <Portal className=\"icon-folder-picker\">\n              <Menu\n                style={\n                  buildStyle(\n                    'position: fixed;',\n                    `top: ${contextMenuAnchor?.y}px;`,\n                    isMobile ? 'right: 18rem;' : `left: ${contextMenuAnchor?.x}px;`,\n                    isMobile && 'top: 15rem;',\n                  )\n                }\n                isOpen={isOpen}\n                onClose={handleMenuClose}\n                withPortal={false}\n                className={buildClassName('SymbolMenu')}\n                onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n                onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n                noCloseOnBackdrop={!IS_TOUCH_ENV}\n                noCompact\n                // eslint-disable-next-line react/jsx-props-no-spreading\n                {...{\n                  positionX: 'left',\n                  positionY: 'top',\n                }}\n              >\n                <FolderIconPicker\n                  onEmojiSelect={onEmojiSelect}\n                  onCustomEmojiSelect={handleCustomEmojiSelect}\n                  onIconSelect={handleIconSelect}\n                  className=\"picker-tab\"\n                  isHidden={!isOpen || !isActive}\n                  idPrefix=\"emoji-folder\"\n                  loadAndPlay={isOpen}\n                  chatId=\"\"\n                  isTranslucent={!isMobile}\n                />\n              </Menu>\n            </Portal>\n          </div>\n        </div>\n\n        {!isOnlyInvites && (\n          <div className=\"settings-item\">\n            {state.error && state.error === ERROR_NO_CHATS && (\n              <p\n                className=\"settings-item-description color-danger mb-2\"\n                dir={lang.isRtl ? 'rtl' : undefined}\n              >\n                {lang(state.error)}\n              </p>\n            )}\n\n            <h4\n              className=\"settings-item-header mb-3\"\n              dir={lang.isRtl ? 'rtl' : undefined}\n            >\n              {lang('FilterInclude')}\n            </h4>\n\n            <ListItem\n              className=\"settings-folders-list-item color-primary\"\n              icon=\"add\"\n              narrow\n              onClick={onAddIncludedChats}\n            >\n              {lang('FilterAddChats')}\n            </ListItem>\n\n            {renderChats('included')}\n          </div>\n        )}\n\n        {!isOnlyInvites && !isEditingChatList && (\n          <div className=\"settings-item pt-3\">\n            <h4\n              className=\"settings-item-header mb-3\"\n              dir={lang.isRtl ? 'rtl' : undefined}\n            >\n              {lang('FilterExclude')}\n            </h4>\n\n            <ListItem\n              className=\"settings-folders-list-item color-primary\"\n              icon=\"add\"\n              narrow\n              onClick={onAddExcludedChats}\n            >\n              {lang('FilterAddChats')}\n            </ListItem>\n\n            {renderChats('excluded')}\n          </div>\n        )}\n\n        <div className=\"settings-item pt-3\">\n          <h4\n            className=\"settings-item-header mb-3\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n          >\n            {lang('FolderLinkScreen.Title')}\n          </h4>\n\n          <ListItem\n            className=\"settings-folders-list-item color-primary\"\n            icon=\"add\"\n            narrow\n            onClick={handleCreateInviteClick}\n          >\n            {lang('ChatListFilter.CreateLinkNew')}\n          </ListItem>\n\n          {invites?.map((invite) => (\n            <ListItem\n              className=\"settings-folders-list-item\"\n              icon=\"link\"\n              narrow\n              multiline\n              onClick={handleEditInviteClick}\n              clickArg={invite.url}\n            >\n              <span className=\"title\" dir=\"auto\">\n                {invite.title || invite.url}\n              </span>\n              <span className=\"subtitle\">\n                {lang(\n                  'ChatListFilter.LinkLabelChatCount',\n                  invite.peerIds.length,\n                  'i',\n                )}\n              </span>\n            </ListItem>\n          ))}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={Boolean(state.isTouched)}\n        disabled={state.isLoading}\n        onClick={handleSubmit}\n        ariaLabel={state.mode === 'edit' ? 'Save changes' : 'Create folder'}\n      >\n        {state.isLoading ? <Spinner color=\"white\" /> : <Icon name=\"check\" />}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { state }): StateProps => {\n    const { listIds } = global.chats;\n    const { byId, invites } = global.chatFolders;\n    const chatListCount = Object.values(byId).reduce((acc, el) => acc + (el.isChatList ? 1 : 0), 0);\n\n    let customSticker: ApiSticker | undefined;\n    let customEmoji: string | undefined;\n    try {\n      if (state.folderId) {\n        const possibleEmoji = ((JSON.parse(localStorage.getItem(LOCSTOR_CUSTOM_EMOJI_KEY)\n        ?? '')) as CustomEmojiIconsFolder)[state.folderId];\n        if (typeof possibleEmoji === 'string') customEmoji = possibleEmoji;\n        else customSticker = possibleEmoji;\n      }\n    } catch {\n      localStorage.setItem(LOCSTOR_CUSTOM_EMOJI_KEY, JSON.stringify({}));\n    }\n\n    return {\n      customSticker,\n      customEmoji,\n      loadedActiveChatIds: listIds.active,\n      loadedArchivedChatIds: listIds.archived,\n      invites: state.folderId ? (invites[state.folderId] || MEMO_EMPTY_ARRAY) : undefined,\n      isRemoved: state.folderId !== undefined && !byId[state.folderId],\n      maxInviteLinks: selectCurrentLimit(global, 'chatlistInvites'),\n      maxChatLists: selectCurrentLimit(global, 'chatlistJoined'),\n      chatListCount,\n    };\n  },\n)(SettingsFoldersEdit));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { ApiChatFolder } from '../../../../api/types';\nimport type { FoldersView } from '../../../../types';\nimport type { IRadioOption } from '../../../ui/CheckboxGroup';\n\nimport { ALL_FOLDER_ID, STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { getFolderDescriptionText } from '../../../../global/helpers';\nimport { selectIsCurrentUserPremium } from '../../../../global/selectors';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { isBetween } from '../../../../util/math';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { throttle } from '../../../../util/schedulers';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\n\nimport { useFolderManagerForChatsCount } from '../../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport Icon from '../../../common/icons/Icon';\nimport Button from '../../../ui/Button';\nimport Draggable from '../../../ui/Draggable';\nimport ListItem from '../../../ui/ListItem';\nimport Loading from '../../../ui/Loading';\nimport RadioGroup from '../../../ui/RadioGroup';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onCreateFolder: () => void;\n  onEditFolder: (folder: ApiChatFolder) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  foldersView: FoldersView;\n  folderIds?: number[];\n  foldersById: Record<number, ApiChatFolder>;\n  recommendedChatFolders?: ApiChatFolder[];\n  maxFolders: number;\n  isPremium?: boolean;\n};\n\ntype SortState = {\n  orderedFolderIds?: number[];\n  dragOrderIds?: number[];\n  draggedIndex?: number;\n};\n\nconst FOLDER_HEIGHT_PX = 56;\nconst runThrottledForLoadRecommended = throttle((cb) => cb(), 60000, true);\n\nconst SettingsFoldersMain: FC<OwnProps & StateProps> = ({\n  isActive,\n  onCreateFolder,\n  onEditFolder,\n  onReset,\n  folderIds,\n  foldersView,\n  foldersById,\n  isPremium,\n  recommendedChatFolders,\n  maxFolders,\n}) => {\n  const {\n    loadRecommendedChatFolders,\n    addChatFolder,\n    openLimitReachedModal,\n    openDeleteChatFolderModal,\n    sortChatFolders,\n    setSettingOption,\n  } = getActions();\n\n  const [state, setState] = useState<SortState>({\n    orderedFolderIds: folderIds,\n    dragOrderIds: folderIds,\n    draggedIndex: undefined,\n  });\n\n  const prevFolderIds = usePreviousDeprecated(folderIds);\n\n  // Sync folders state after changing folders in other clients\n  useEffect(() => {\n    if (prevFolderIds !== folderIds) {\n      setState({\n        orderedFolderIds: folderIds,\n        dragOrderIds: folderIds,\n        draggedIndex: undefined,\n      });\n    }\n  }, [prevFolderIds, folderIds, state.orderedFolderIds?.length]);\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottledForLoadRecommended(() => {\n      loadRecommendedChatFolders();\n    });\n  }, [loadRecommendedChatFolders]);\n\n  const handleFoldersViewChange = useCallback((newFolderView: string) => {\n    setSettingOption({ foldersView: newFolderView as FoldersView });\n  }, [setSettingOption]);\n\n  const handleCreateFolder = useCallback(() => {\n    if (Object.keys(foldersById).length >= maxFolders - 1) {\n      openLimitReachedModal({\n        limit: 'dialogFilters',\n      });\n\n      return;\n    }\n\n    onCreateFolder();\n  }, [foldersById, maxFolders, onCreateFolder, openLimitReachedModal]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const chatsCountByFolderId = useFolderManagerForChatsCount();\n  const userFolders = useMemo(() => {\n    if (!folderIds) {\n      return undefined;\n    }\n\n    if (folderIds.length <= 1) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return folderIds.map((id) => {\n      const folder = foldersById[id];\n\n      if (id === ALL_FOLDER_ID) {\n        return {\n          id,\n          title: {\n            text: lang('FilterAllChats'),\n            entities: [],\n          },\n        };\n      }\n\n      return {\n        id: folder.id,\n        title: folder.title,\n        subtitle: getFolderDescriptionText(lang, folder, chatsCountByFolderId[folder.id]),\n        isChatList: folder.isChatList,\n        noTitleAnimations: folder.noTitleAnimations,\n      };\n    });\n  }, [folderIds, foldersById, lang, chatsCountByFolderId]);\n\n  const handleCreateFolderFromRecommended = useCallback((folder: ApiChatFolder) => {\n    if (Object.keys(foldersById).length >= maxFolders - 1) {\n      openLimitReachedModal({\n        limit: 'dialogFilters',\n      });\n\n      return;\n    }\n\n    addChatFolder({ folder });\n  }, [foldersById, maxFolders, addChatFolder, openLimitReachedModal]);\n\n  const handleDrag = useCallback((translation: { x: number; y: number }, id: string | number) => {\n    const delta = Math.round(translation.y / FOLDER_HEIGHT_PX);\n    const index = state.orderedFolderIds?.indexOf(id as number) || 0;\n    const dragOrderIds = state.orderedFolderIds?.filter((folderId) => folderId !== id);\n\n    if (!dragOrderIds || !isBetween(index + delta, 0, folderIds?.length || 0)) {\n      return;\n    }\n\n    dragOrderIds.splice(index + delta + (isPremium ? 0 : 1), 0, id as number);\n    setState((current) => ({\n      ...current,\n      draggedIndex: index,\n      dragOrderIds,\n    }));\n  }, [folderIds?.length, isPremium, state.orderedFolderIds]);\n\n  const handleDragEnd = useCallback(() => {\n    setState((current) => {\n      sortChatFolders({ folderIds: current.dragOrderIds! });\n\n      return {\n        ...current,\n        orderedFolderIds: current.dragOrderIds,\n        draggedIndex: undefined,\n      };\n    });\n  }, [sortChatFolders]);\n\n  const canCreateNewFolder = useMemo(() => {\n    return !isPremium || Object.keys(foldersById).length < maxFolders - 1;\n  }, [foldersById, isPremium, maxFolders]);\n\n  const folderViewOptions: IRadioOption[] = [{\n    label: lang('Folders on the Left'),\n    value: 'side',\n  }, {\n    label: lang('Folders Above'),\n    value: 'top',\n  }];\n\n  return (\n    <div className=\"settings-content no-border custom-scroll\">\n      <div className=\"settings-content-header\">\n        <AnimatedIconWithPreview\n          size={STICKER_SIZE_FOLDER_SETTINGS}\n          tgsUrl={LOCAL_TGS_URLS.FoldersAll}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('CreateNewFilterInfo')}\n        </p>\n\n        {canCreateNewFolder && (\n          <Button\n          // TODO: Refactor button component to handle icon placemenet with props\n            className=\"settings-button with-icon\"\n            color=\"primary\"\n            size=\"smaller\"\n            pill\n            fluid\n            onClick={handleCreateFolder}\n            isRtl={lang.isRtl}\n          >\n            <Icon name=\"add\" />\n            {lang('CreateNewFilter')}\n          </Button>\n        )}\n      </div>\n\n      <div className=\"settings-item pt-3\">\n        <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('Filters')}</h4>\n\n        <div className=\"settings-sortable-container\" style={`height: ${(folderIds?.length || 0) * FOLDER_HEIGHT_PX}px`}>\n          {userFolders?.length ? userFolders.map((folder, i) => {\n            const isBlocked = i > maxFolders - 1;\n            const isDragged = state.draggedIndex === i;\n            const draggedTop = (state.orderedFolderIds?.indexOf(folder.id) ?? 0) * FOLDER_HEIGHT_PX;\n            const top = (state.dragOrderIds?.indexOf(folder.id) ?? 0) * FOLDER_HEIGHT_PX;\n\n            if (folder.id === ALL_FOLDER_ID) {\n              return (\n                <Draggable\n                  key={folder.id}\n                  id={folder.id}\n                  onDrag={handleDrag}\n                  onDragEnd={handleDragEnd}\n                  style={`top: ${isDragged ? draggedTop : top}px;`}\n                  knobStyle={`${lang.isRtl ? 'left' : 'right'}: 0.375rem;`}\n                  isDisabled={!isPremium || !isActive}\n                >\n                  <ListItem\n                    key={folder.id}\n                    className=\"drag-item no-icon settings-sortable-item\"\n                    narrow\n                    inactive\n                    multiline\n                    isStatic\n                    allowSelection\n                  >\n                    <span className=\"title\">\n                      {renderTextWithEntities({\n                        text: folder.title.text,\n                        entities: folder.title.entities,\n                        noCustomEmojiPlayback: folder.noTitleAnimations,\n                      })}\n                    </span>\n                    <span className=\"subtitle\">{lang('FoldersAllChatsDesc')}</span>\n                  </ListItem>\n                </Draggable>\n              );\n            }\n\n            return (\n              <Draggable\n                key={folder.id}\n                id={folder.id}\n                onDrag={handleDrag}\n                onDragEnd={handleDragEnd}\n                style={`top: ${isDragged ? draggedTop : top}px;`}\n                knobStyle={`${lang.isRtl ? 'left' : 'right'}: 3rem;`}\n                isDisabled={isBlocked || !isActive}\n              >\n                <ListItem\n                  className=\"drag-item no-icon settings-sortable-item\"\n                  narrow\n                  secondaryIcon=\"more\"\n                  multiline\n                  contextActions={[\n                    {\n                      handler: () => {\n                        openDeleteChatFolderModal({ folderId: folder.id });\n                      },\n                      destructive: true,\n                      title: lang('Delete'),\n                      icon: 'delete',\n                    },\n                  ]}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => {\n                    if (isBlocked) {\n                      openLimitReachedModal({\n                        limit: 'dialogFilters',\n                      });\n                    } else {\n                      onEditFolder(foldersById[folder.id]);\n                    }\n                  }}\n                >\n                  <span className=\"title\">\n                    {renderTextWithEntities({\n                      text: folder.title.text,\n                      entities: folder.title.entities,\n                      noCustomEmojiPlayback: folder.noTitleAnimations,\n                    })}\n                    {isBlocked && <Icon name=\"lock-badge\" className=\"settings-folders-blocked-icon\" />}\n                  </span>\n                  <span className=\"subtitle\">\n                    {folder.isChatList && <Icon name=\"link\" className=\"mr-1\" />}\n                    {folder.subtitle}\n                  </span>\n                </ListItem>\n              </Draggable>\n            );\n          }) : userFolders && !userFolders.length ? (\n            <p className=\"settings-item-description my-4\" dir=\"auto\">\n              You have no folders yet.\n            </p>\n          ) : <Loading />}\n        </div>\n      </div>\n\n      {(recommendedChatFolders && Boolean(recommendedChatFolders.length)) && (\n        <div className=\"settings-item pt-3\">\n          <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('FilterRecommended')}\n          </h4>\n\n          {recommendedChatFolders.map((folder) => (\n            <ListItem\n              narrow\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleCreateFolderFromRecommended(folder)}\n            >\n              <div className=\"settings-folders-recommended-item\">\n                <div className=\"multiline-item\">\n                  <span className=\"title\">\n                    {renderTextWithEntities({\n                      text: folder.title.text,\n                      entities: folder.title.entities,\n                      noCustomEmojiPlayback: folder.noTitleAnimations,\n                    })}\n                  </span>\n                  <span className=\"subtitle\">{folder.description}</span>\n                </div>\n\n                <Button\n                  className=\"px-3\"\n                  color=\"primary\"\n                  size=\"tiny\"\n                  pill\n                  fluid\n                  isRtl={lang.isRtl}\n                >\n                  {lang('Add')}\n                </Button>\n              </div>\n            </ListItem>\n          ))}\n        </div>\n      )}\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('Folders View')}\n        </h4>\n        <RadioGroup\n          name=\"foldersView\"\n          options={folderViewOptions}\n          selected={foldersView}\n          onChange={handleFoldersViewChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      orderedIds: folderIds,\n      byId: foldersById,\n      recommended: recommendedChatFolders,\n    } = global.chatFolders;\n\n    return {\n      foldersView: global.settings.byKey.foldersView,\n      folderIds,\n      foldersById,\n      isPremium: selectIsCurrentUserPremium(global),\n      recommendedChatFolders,\n      maxFolders: selectCurrentLimit(global, 'dialogFilters'),\n    };\n  },\n)(SettingsFoldersMain));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type { ApiChatFolder } from '../../../../api/types';\n\nimport { STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { isChatChannel, isUserBot } from '../../../../global/helpers';\nimport {\n  selectCanInviteToChat, selectChat,\n  selectChatFolder,\n  selectTabState, selectUser,\n} from '../../../../global/selectors';\nimport { partition } from '../../../../util/iteratees';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\n\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Icon from '../../../common/icons/Icon';\nimport LinkField from '../../../common/LinkField';\nimport PeerPicker from '../../../common/pickers/PeerPicker';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport Spinner from '../../../ui/Spinner';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: VoidFunction;\n};\n\ntype StateProps = {\n  folderId?: number;\n  folder?: ApiChatFolder;\n  peerIds?: string[];\n  url?: string;\n  isLoading?: boolean;\n};\n\nconst SettingsShareChatlist: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  folderId,\n  folder,\n  peerIds,\n  url,\n  isLoading,\n}) => {\n  const {\n    createChatlistInvite, deleteChatlistInvite, editChatlistInvite, showNotification,\n  } = getActions();\n\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  const [isTouched, setIsTouched] = useState(false);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  useEffect(() => {\n    if (!isLoading) {\n      setIsTouched(false);\n    }\n  }, [isLoading]);\n\n  useEffect(() => {\n    if (!url && folderId && isActive) {\n      createChatlistInvite({ folderId });\n    }\n  }, [folderId, isActive, url]);\n\n  const handleRevoke = useLastCallback(() => {\n    if (!url || !folderId) return;\n\n    deleteChatlistInvite({ folderId, url });\n    onReset();\n  });\n\n  const itemIds = useMemo(() => {\n    return (folder?.includedChatIds || []).concat(folder?.pinnedChatIds || []);\n  }, [folder?.includedChatIds, folder?.pinnedChatIds]);\n\n  const [unlockedIds, lockedIds] = useMemo(() => {\n    const global = getGlobal();\n    return partition(itemIds, (id) => selectCanInviteToChat(global, id));\n  }, [itemIds]);\n\n  const [selectedIds, setSelectedIds] = useState<string[]>(peerIds || []);\n\n  const isFirstRenderRef = useRef(true);\n  useEffectWithPrevDeps(([prevUrl]) => {\n    if (prevUrl !== url) {\n      isFirstRenderRef.current = true;\n    }\n    if (!isFirstRenderRef.current) return;\n    isFirstRenderRef.current = false;\n    if (!url) {\n      setSelectedIds(unlockedIds);\n    } else if (peerIds) {\n      setSelectedIds(peerIds);\n    }\n  }, [url, unlockedIds, peerIds]);\n\n  const handleClickDisabled = useLastCallback((id: string) => {\n    const global = getGlobal();\n    const user = selectUser(global, id);\n    const chat = selectChat(global, id);\n    if (user && isUserBot(user)) {\n      showNotification({\n        message: oldLang('FolderLinkScreen.AlertTextUnavailableBot'),\n      });\n    } else if (user) {\n      showNotification({\n        message: oldLang('FolderLinkScreen.AlertTextUnavailableUser'),\n      });\n    } else if (chat && isChatChannel(chat)) {\n      showNotification({\n        message: oldLang('FolderLinkScreen.AlertTextUnavailablePublicChannel'),\n      });\n    } else {\n      showNotification({\n        message: oldLang('FolderLinkScreen.AlertTextUnavailablePublicGroup'),\n      });\n    }\n  });\n\n  const handleSelectedIdsChange = useLastCallback((ids: string[]) => {\n    setSelectedIds(ids);\n    setIsTouched(true);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    if (!folderId || !url || !isTouched) return;\n    editChatlistInvite({ folderId, peerIds: selectedIds, url });\n  });\n\n  const chatsCount = selectedIds.length;\n  const isDisabled = !chatsCount || isLoading;\n\n  return (\n    <div className=\"settings-content no-border custom-scroll SettingsFoldersChatsPicker\">\n      <div className=\"settings-content-header\">\n        <AnimatedIcon\n          size={STICKER_SIZE_FOLDER_SETTINGS}\n          tgsUrl={LOCAL_TGS_URLS.FoldersShare}\n          className=\"settings-content-icon\"\n        />\n\n        {folder && (\n          <p className=\"settings-item-description mb-3\" dir=\"auto\">\n            {lang('FolderLinkTitleDescription', {\n              folder: renderTextWithEntities({\n                text: folder.title.text,\n                entities: folder.title.entities,\n                noCustomEmojiPlayback: folder.noTitleAnimations,\n              }),\n              chats: lang('FolderLinkTitleDescriptionChats', { count: chatsCount }, { pluralValue: chatsCount }),\n            }, {\n              withMarkdown: true,\n              withNodes: true,\n            })}\n          </p>\n        )}\n      </div>\n\n      <LinkField\n        className=\"settings-item\"\n        link={!url ? oldLang('Loading') : url}\n        withShare\n        onRevoke={handleRevoke}\n        isDisabled={!chatsCount || isTouched}\n      />\n\n      <div className=\"settings-item settings-item-picker\">\n        <PeerPicker\n          itemIds={itemIds}\n          lockedUnselectedIds={lockedIds}\n          onSelectedIdsChange={handleSelectedIdsChange}\n          selectedIds={selectedIds}\n          onDisabledClick={handleClickDisabled}\n          allowMultiple\n          withStatus\n          itemInputType=\"checkbox\"\n        />\n      </div>\n\n      <FloatingActionButton\n        isShown={isLoading || isTouched}\n        disabled={isDisabled}\n        onClick={handleSubmit}\n        ariaLabel=\"Save changes\"\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { folderId, url, isLoading } = selectTabState(global).shareFolderScreen || {};\n    const folder = folderId ? selectChatFolder(global, folderId) : undefined;\n    const invite = folderId ? global.chatFolders.invites[folderId]?.find((i) => i.url === url) : undefined;\n\n    return {\n      folderId,\n      folder,\n      url,\n      isLoading,\n      peerIds: invite?.peerIds,\n    };\n  },\n)(SettingsShareChatlist));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChatFolder } from '../../../../api/types';\nimport type { FolderEditDispatch, FoldersState } from '../../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../../types';\n\nimport { selectChatFilters } from '../../../../hooks/reducers/useFoldersReducer';\n\nimport SettingsFoldersChatFilters from './SettingsFoldersChatFilters';\nimport SettingsFoldersEdit, { ERROR_NO_CHATS, ERROR_NO_TITLE } from './SettingsFoldersEdit';\nimport SettingsFoldersMain from './SettingsFoldersMain';\nimport SettingsShareChatlist from './SettingsShareChatlist';\n\nimport './SettingsFolders.scss';\n\nconst TRANSITION_DURATION = 200;\n\nexport type OwnProps = {\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsFolders: FC<OwnProps> = ({\n  currentScreen,\n  shownScreen,\n  state,\n  dispatch,\n  isActive,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    openShareChatFolderModal,\n    editChatFolder,\n    addChatFolder,\n  } = getActions();\n\n  const handleReset = useCallback(() => {\n    if (\n      currentScreen === SettingsScreens.FoldersCreateFolder\n      || currentScreen === SettingsScreens.FoldersEditFolder\n      || currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      || currentScreen === SettingsScreens.FoldersEditFolderInvites\n    ) {\n      setTimeout(() => {\n        dispatch({ type: 'reset' });\n      }, TRANSITION_DURATION);\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersIncludedChats\n      || currentScreen === SettingsScreens.FoldersExcludedChats\n    ) {\n      if (state.mode === 'create') {\n        onScreenSelect(SettingsScreens.FoldersCreateFolder);\n      } else {\n        onScreenSelect(SettingsScreens.FoldersEditFolder);\n      }\n      return;\n    }\n\n    onReset();\n  }, [\n    state.mode, dispatch,\n    currentScreen, onReset, onScreenSelect,\n  ]);\n\n  const isCreating = state.mode === 'create';\n\n  const saveState = useCallback((newState: FoldersState) => {\n    const { title } = newState.folder;\n\n    if (!title) {\n      dispatch({ type: 'setError', payload: ERROR_NO_TITLE });\n      return false;\n    }\n\n    const {\n      selectedChatIds: includedChatIds,\n      selectedChatTypes: includedChatTypes,\n    } = selectChatFilters(newState, 'included');\n\n    if (!includedChatIds.length && !Object.keys(includedChatTypes).length) {\n      dispatch({ type: 'setError', payload: ERROR_NO_CHATS });\n      return false;\n    }\n\n    if (!isCreating) {\n      editChatFolder({ id: newState.folderId!, folderUpdate: newState.folder });\n    } else {\n      addChatFolder({ folder: newState.folder as ApiChatFolder });\n    }\n\n    dispatch({ type: 'setError', payload: undefined });\n    dispatch({ type: 'setIsTouched', payload: false });\n\n    return true;\n  }, [dispatch, isCreating]);\n\n  const handleSaveFolder = useCallback((cb?: NoneToVoidFunction) => {\n    if (!saveState(state)) {\n      return;\n    }\n    cb?.();\n  }, [saveState, state]);\n\n  const handleSaveFilter = useCallback(() => {\n    const newState = dispatch({ type: 'saveFilters' });\n    handleReset();\n    saveState(newState);\n  }, [dispatch, handleReset, saveState]);\n\n  const handleCreateFolder = useCallback(() => {\n    dispatch({ type: 'reset' });\n    onScreenSelect(SettingsScreens.FoldersCreateFolder);\n  }, [onScreenSelect, dispatch]);\n\n  const handleEditFolder = useCallback((folder: ApiChatFolder) => {\n    dispatch({ type: 'editFolder', payload: folder });\n    onScreenSelect(SettingsScreens.FoldersEditFolder);\n  }, [dispatch, onScreenSelect]);\n\n  const handleAddIncludedChats = useCallback(() => {\n    dispatch({ type: 'editIncludeFilters' });\n    onScreenSelect(currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      ? SettingsScreens.FoldersIncludedChatsFromChatList\n      : SettingsScreens.FoldersIncludedChats);\n  }, [currentScreen, dispatch, onScreenSelect]);\n\n  const handleAddExcludedChats = useCallback(() => {\n    dispatch({ type: 'editExcludeFilters' });\n    onScreenSelect(currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      ? SettingsScreens.FoldersExcludedChatsFromChatList\n      : SettingsScreens.FoldersExcludedChats);\n  }, [currentScreen, dispatch, onScreenSelect]);\n\n  const handleShareFolder = useCallback(() => {\n    openShareChatFolderModal({ folderId: state.folderId!, noRequestNextScreen: true });\n    dispatch({ type: 'setIsChatlist', payload: true });\n    onScreenSelect(SettingsScreens.FoldersShare);\n  }, [dispatch, onScreenSelect, state.folderId]);\n\n  const handleOpenInvite = useCallback((url: string) => {\n    openShareChatFolderModal({ folderId: state.folderId!, url, noRequestNextScreen: true });\n    onScreenSelect(SettingsScreens.FoldersShare);\n  }, [onScreenSelect, state.folderId]);\n\n  switch (currentScreen) {\n    case SettingsScreens.Folders:\n      return (\n        <SettingsFoldersMain\n          onCreateFolder={handleCreateFolder}\n          onEditFolder={handleEditFolder}\n          isActive={isActive || [\n            SettingsScreens.FoldersCreateFolder,\n            SettingsScreens.FoldersEditFolder,\n            SettingsScreens.FoldersIncludedChats,\n            SettingsScreens.FoldersExcludedChats,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n    case SettingsScreens.FoldersCreateFolder:\n    case SettingsScreens.FoldersEditFolder:\n    case SettingsScreens.FoldersEditFolderFromChatList:\n    case SettingsScreens.FoldersEditFolderInvites:\n      return (\n        <SettingsFoldersEdit\n          state={state}\n          dispatch={dispatch}\n          onAddIncludedChats={handleAddIncludedChats}\n          onAddExcludedChats={handleAddExcludedChats}\n          onShareFolder={handleShareFolder}\n          onOpenInvite={handleOpenInvite}\n          onReset={handleReset}\n          isActive={isActive || [\n            SettingsScreens.FoldersIncludedChats,\n            SettingsScreens.FoldersExcludedChats,\n          ].includes(shownScreen)}\n          isOnlyInvites={currentScreen === SettingsScreens.FoldersEditFolderInvites}\n          onBack={onReset}\n          onSaveFolder={handleSaveFolder}\n        />\n      );\n    case SettingsScreens.FoldersIncludedChats:\n    case SettingsScreens.FoldersIncludedChatsFromChatList:\n      return (\n        <SettingsFoldersChatFilters\n          mode=\"included\"\n          state={state}\n          dispatch={dispatch}\n          onReset={handleReset}\n          onSaveFilter={handleSaveFilter}\n          isActive={isActive}\n        />\n      );\n    case SettingsScreens.FoldersExcludedChats:\n    case SettingsScreens.FoldersExcludedChatsFromChatList:\n      return (\n        <SettingsFoldersChatFilters\n          mode=\"excluded\"\n          state={state}\n          dispatch={dispatch}\n          onReset={handleReset}\n          onSaveFilter={handleSaveFilter}\n          isActive={isActive}\n        />\n      );\n\n    case SettingsScreens.FoldersShare:\n      return (\n        <SettingsShareChatlist\n          isActive={isActive}\n          onReset={handleReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(SettingsFolders);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PasswordForm from '../../common/PasswordForm';\nimport PasswordMonkey from '../../common/PasswordMonkey';\n\ntype OwnProps = {\n  error?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  expectedPassword?: string;\n  placeholder?: string;\n  hint?: string;\n  submitLabel?: string;\n  clearError?: NoneToVoidFunction;\n  onSubmit: (password: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst EQUAL_PASSWORD_ERROR = 'Passwords Should Be Equal';\n\nconst SettingsPasswordForm: FC<OwnProps> = ({\n  isActive,\n  onReset,\n  error,\n  isLoading,\n  shouldDisablePasswordManager,\n  expectedPassword,\n  placeholder = 'Current Password',\n  hint,\n  submitLabel,\n  clearError,\n  onSubmit,\n}) => {\n  const [validationError, setValidationError] = useState<string>('');\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n\n  const handleSubmit = useCallback((newPassword) => {\n    if (expectedPassword && newPassword !== expectedPassword) {\n      setValidationError(EQUAL_PASSWORD_ERROR);\n    } else {\n      onSubmit(newPassword);\n    }\n  }, [onSubmit, expectedPassword]);\n\n  const handleClearError = useCallback(() => {\n    if (clearError) {\n      clearError();\n    }\n    setValidationError('');\n  }, [clearError]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content password-form custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <PasswordMonkey isBig isPasswordVisible={shouldShowPassword} />\n      </div>\n\n      <div className=\"settings-item settings-group\">\n        <PasswordForm\n          error={validationError || error}\n          hint={hint}\n          placeholder={placeholder}\n          shouldDisablePasswordManager={shouldDisablePasswordManager}\n          submitLabel={submitLabel || lang('Next')}\n          clearError={handleClearError}\n          isLoading={isLoading}\n          isPasswordVisible={shouldShowPassword}\n          shouldResetValue={isActive}\n          onChangePasswordVisibility={setShouldShowPassword}\n          onSubmit={handleSubmit}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasswordForm);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\n\nimport { STICKER_SIZE_PASSCODE } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Button from '../../../ui/Button';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: (forceReturnToChatList?: boolean) => void;\n};\n\nconst SettingsPasscodeCongratulations: FC<OwnProps> = ({\n  isActive, onReset,\n}) => {\n  const lang = useOldLang();\n\n  const fullReset = useCallback(() => {\n    onReset(true);\n  }, [onReset]);\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          size={STICKER_SIZE_PASSCODE}\n          tgsUrl={LOCAL_TGS_URLS.Congratulations}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Congratulations!\n        </p>\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Now you can lock the app with a passcode so that others can&apos;t open it.\n        </p>\n      </div>\n\n      <div className=\"settings-item settings-group\">\n        <Button onClick={fullReset}>{lang('Back')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeCongratulations);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport ListItem from '../../../ui/ListItem';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsPasscodeEnabled: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Local passcode is enabled.\n        </p>\n      </div>\n\n      <div className=\"settings-item\">\n        <ListItem\n          icon=\"edit\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PasscodeChangePasscodeCurrent)}\n        >\n          {lang('Passcode.Change')}\n        </ListItem>\n        <ListItem\n          icon=\"password-off\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PasscodeTurnOff)}\n        >\n          {lang('Passcode.TurnOff')}\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeEnabled);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { STICKER_SIZE_PASSCODE } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport Button from '../../../ui/Button';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  onStart: NoneToVoidFunction;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst SettingsPasscodeStart: FC<OwnProps> = ({\n  isActive, onReset, onStart,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={STICKER_SIZE_PASSCODE}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description\" dir=\"auto\">\n          When you set up an additional passcode, a lock icon will appear on the chats page.\n          Tap it to lock and unlock your Telegram Web A.\n        </p>\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Note: if you forget your local passcode, you&apos;ll need to log out of Telegram Web A and log in again.\n        </p>\n      </div>\n\n      <div className=\"settings-item settings-group\">\n        <Button onClick={onStart}>{lang('EnablePasscode')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeStart);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { GlobalState } from '../../../../global/types';\nimport { SettingsScreens } from '../../../../types';\n\nimport { decryptSession } from '../../../../util/passcode';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport SettingsPasscodeForm from '../SettingsPasswordForm';\nimport SettingsPasscodeCongratulations from './SettingsPasscodeCongratulations';\nimport SettingsPasscodeEnabled from './SettingsPasscodeEnabled';\nimport SettingsPasscodeStart from './SettingsPasscodeStart';\n\nexport type OwnProps = {\n  passcode: string;\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  isActive?: boolean;\n  onSetPasscode: (passcode: string) => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = GlobalState['passcode'];\n\nconst SettingsPasscode: FC<OwnProps & StateProps> = ({\n  passcode,\n  currentScreen,\n  shownScreen,\n  error,\n  isActive,\n  isLoading,\n  onScreenSelect,\n  onSetPasscode,\n  onReset,\n}) => {\n  const {\n    setPasscode,\n    clearPasscode,\n    setPasscodeError,\n    clearPasscodeError,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleStartWizard = useCallback(() => {\n    onSetPasscode('');\n    onScreenSelect(SettingsScreens.PasscodeNewPasscode);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleNewPassword = useCallback((value: string) => {\n    onSetPasscode(value);\n    onScreenSelect(SettingsScreens.PasscodeNewPasscodeConfirm);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleNewPasswordConfirm = useCallback(() => {\n    setPasscode({ passcode });\n    onSetPasscode('');\n    onScreenSelect(SettingsScreens.PasscodeCongratulations);\n  }, [onScreenSelect, onSetPasscode, passcode, setPasscode]);\n\n  const handleChangePasswordCurrent = useCallback((currentPasscode: string) => {\n    onSetPasscode('');\n    decryptSession(currentPasscode).then(() => {\n      onScreenSelect(SettingsScreens.PasscodeChangePasscodeNew);\n    }, () => {\n      setPasscodeError({\n        error: lang('PasscodeController.Error.Current'),\n      });\n    });\n  }, [lang, onScreenSelect, onSetPasscode, setPasscodeError]);\n\n  const handleChangePasswordNew = useCallback((value: string) => {\n    onSetPasscode(value);\n    onScreenSelect(SettingsScreens.PasscodeChangePasscodeConfirm);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleTurnOff = useCallback((currentPasscode: string) => {\n    decryptSession(currentPasscode).then(() => {\n      clearPasscode();\n      onScreenSelect(SettingsScreens.Privacy);\n    }, () => {\n      setPasscodeError({\n        error: lang('PasscodeController.Error.Current'),\n      });\n    });\n  }, [clearPasscode, lang, onScreenSelect, setPasscodeError]);\n\n  switch (currentScreen) {\n    case SettingsScreens.PasscodeDisabled:\n      return (\n        <SettingsPasscodeStart\n          onStart={handleStartWizard}\n          isActive={isActive || [\n            SettingsScreens.PasscodeNewPasscode,\n            SettingsScreens.PasscodeNewPasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeNewPasscode:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          placeholder={lang('EnterNewPasscode')}\n          submitLabel={lang('Continue')}\n          onSubmit={handleNewPassword}\n          isActive={isActive || [\n            SettingsScreens.PasscodeNewPasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeNewPasscodeConfirm:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          expectedPassword={passcode}\n          placeholder={lang('ReEnterYourPasscode')}\n          submitLabel={lang('Continue')}\n          isLoading={isLoading}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeCongratulations:\n      return (\n        <SettingsPasscodeCongratulations\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeEnabled:\n      return (\n        <SettingsPasscodeEnabled\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeCurrent,\n            SettingsScreens.PasscodeChangePasscodeNew,\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n            SettingsScreens.PasscodeTurnOff,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeCurrent:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          error={error}\n          clearError={clearPasscodeError}\n          placeholder={lang('PasscodeController.Current.Placeholder')}\n          onSubmit={handleChangePasswordCurrent}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeNew,\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeNew:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          placeholder={lang('PleaseEnterNewFirstPassword')}\n          onSubmit={handleChangePasswordNew}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeConfirm:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          expectedPassword={passcode}\n          placeholder={lang('PasscodeController.ReEnterPasscode.Placeholder')}\n          isLoading={isLoading}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeTurnOff:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          error={error ? lang(error) : undefined}\n          clearError={clearPasscodeError}\n          placeholder={lang('PasscodeController.Current.Placeholder')}\n          onSubmit={handleTurnOff}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => ({ ...global.passcode }),\n)(SettingsPasscode));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatStarsAsText } from '../../../util/localization/format';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Icon from '../icons/Icon';\n\ntype OwnProps = {\n  min?: number;\n  max: number;\n  value: number;\n  disabled?: boolean;\n  readOnly?: boolean;\n  bold?: boolean;\n  className?: string;\n  defaultValue: number;\n  onChange: (value: number) => void;\n  canChangeChargeForMessages?: boolean;\n};\n\nconst DEFAULT_POINTS = [50, 100, 500, 1000, 2000, 5000, 10000];\n\nconst PaidMessageSlider: FC<OwnProps> = ({\n  min = 0,\n  max,\n  value,\n  disabled,\n  readOnly,\n  bold,\n  className,\n  defaultValue,\n  onChange,\n  canChangeChargeForMessages,\n}) => {\n  const lang = useLang();\n\n  const points = useMemo(() => {\n    const result = [];\n    for (let i = 0; i < DEFAULT_POINTS.length; i++) {\n      if (DEFAULT_POINTS[i] < max) {\n        result.push(DEFAULT_POINTS[i]);\n      }\n\n      if (DEFAULT_POINTS[i] >= max) {\n        result.push(max);\n        break;\n      }\n    }\n\n    return result;\n  }, [max]);\n\n  const handleChange = useLastCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = Number(event.currentTarget.value);\n    onChange(getValue(points, newValue));\n  });\n\n  const mainClassName = buildClassName(\n    className,\n    'RangeSlider',\n    disabled && 'disabled',\n    readOnly && 'readOnly',\n    bold && 'bold',\n  );\n\n  function renderTopRow() {\n    return (\n      <div className=\"slider-top-row\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <span className=\"value-min\" dir=\"auto\">{lang.number(min)}</span>\n        <span className=\"settings-range-value\">\n          {!canChangeChargeForMessages && (<Icon name=\"lock-badge\" />)}\n          {formatStarsAsText(lang, getValue(points, getProgress(points, value)))}\n        </span>\n        <span className=\"value-max\" dir=\"auto\">{lang.number(max)}</span>\n      </div>\n    );\n  }\n\n  return (\n    <div className={mainClassName}>\n      {renderTopRow()}\n      <div className=\"slider-main\">\n        <div\n          className=\"slider-fill-track\"\n          style={`width: ${(getProgress(points, value) / points.length) * 100}%`}\n        />\n        <input\n          min={0}\n          max={points.length}\n          defaultValue={getProgress(points, defaultValue)}\n          step=\"any\"\n          type=\"range\"\n          className=\"RangeSlider__input\"\n          onChange={handleChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nfunction getProgress(points: number[], value: number) {\n  const pointIndex = points.findIndex((point) => value <= point);\n  const prevPoint = points[pointIndex - 1] || 1;\n  const nextPoint = points[pointIndex] || points[points.length - 1];\n  const progress = (value - prevPoint) / (nextPoint - prevPoint);\n  return pointIndex + progress;\n}\n\nfunction getValue(points: number[], progress: number) {\n  const pointIndex = Math.floor(progress);\n  const prevPoint = points[pointIndex - 1] || 1;\n  const nextPoint = points[pointIndex] || points[points.length - 1];\n  const pointValue = prevPoint + (nextPoint - prevPoint) * (progress - pointIndex);\n  return pointValue < 100 ? Math.round(pointValue) : Math.round(pointValue / 10) * 10;\n}\n\nexport default memo(PaidMessageSlider);\n","import React, {\n  memo,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport {\n  DEFAULT_MAXIMUM_CHARGE_FOR_MESSAGES,\n  MINIMUM_CHARGE_FOR_MESSAGES,\n} from '../../../config';\nimport { formatCurrencyAsString } from '../../../util/formatCurrency';\nimport { formatPercent } from '../../../util/textFormat';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Button from '../../ui/Button';\nimport Icon from '../icons/Icon';\nimport PaidMessageSlider from './PaidMessageSlider';\n\ntype OwnProps = {\n  chargeForMessages: number;\n  canChangeChargeForMessages?: boolean;\n  isGroupChat?: boolean;\n  onChange: (value: number) => void;\n};\n\ntype StateProps = {\n  starsUsdWithdrawRate: number;\n  starsPaidMessageAmountMax: number;\n  starsPaidMessageCommissionPermille: number;\n};\n\nfunction PaidMessagePrice({\n  starsUsdWithdrawRate,\n  starsPaidMessageAmountMax,\n  starsPaidMessageCommissionPermille,\n  canChangeChargeForMessages,\n  isGroupChat,\n  chargeForMessages,\n  onChange,\n}: OwnProps & StateProps) {\n  const { openPremiumModal } = getActions();\n\n  const lang = useLang();\n\n  const handleChargeForMessagesChange = useLastCallback((value: number) => {\n    onChange?.(value);\n  });\n\n  const handleUnlockWithPremium = useLastCallback(() => {\n    openPremiumModal({ initialSection: 'message_privacy' });\n  });\n\n  return (\n    <>\n      <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {lang('SectionTitleStarsForForMessages')}\n      </h4>\n      <PaidMessageSlider\n        defaultValue={chargeForMessages}\n        min={MINIMUM_CHARGE_FOR_MESSAGES}\n        max={starsPaidMessageAmountMax}\n        value={chargeForMessages}\n        onChange={handleChargeForMessagesChange}\n        canChangeChargeForMessages={canChangeChargeForMessages}\n        readOnly={!canChangeChargeForMessages}\n      />\n      {!canChangeChargeForMessages && (\n        <Button\n          color=\"primary\"\n          fluid\n          size=\"smaller\"\n          noForcedUpperCase\n          className=\"settings-unlock-button\"\n          onClick={handleUnlockWithPremium}\n        >\n          <span className=\"settings-unlock-button-title\">\n            {lang('UnlockButtonTitle')}\n            <Icon name=\"lock-badge\" className=\"settings-unlock-button-icon\" />\n          </span>\n        </Button>\n      )}\n      {canChangeChargeForMessages && (\n        <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang(isGroupChat ? 'SetPriceGroupDescription' : 'SectionDescriptionStarsForForMessages', {\n            percent: formatPercent(starsPaidMessageCommissionPermille * 100),\n            amount: formatCurrencyAsString(\n              chargeForMessages * starsUsdWithdrawRate * starsPaidMessageCommissionPermille,\n              'USD',\n              lang.code,\n            ),\n          }, {\n            withNodes: true,\n          })}\n        </p>\n      )}\n    </>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const starsUsdWithdrawRateX1000 = global.appConfig?.starsUsdWithdrawRateX1000;\n    const starsUsdWithdrawRate = starsUsdWithdrawRateX1000 ? starsUsdWithdrawRateX1000 / 1000 : 1;\n    const configStarsPaidMessageCommissionPermille = global.appConfig?.starsPaidMessageCommissionPermille;\n    const starsPaidMessageCommissionPermille = configStarsPaidMessageCommissionPermille\n      ? configStarsPaidMessageCommissionPermille / 1000 : 100;\n\n    return {\n      starsPaidMessageCommissionPermille,\n      starsUsdWithdrawRate,\n      starsPaidMessageAmountMax: global.appConfig?.starsPaidMessageAmountMax || DEFAULT_MAXIMUM_CHARGE_FOR_MESSAGES,\n    };\n  },\n)(PaidMessagePrice));\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPremiumSection } from '../../../api/types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  premiumSection?: ApiPremiumSection;\n};\n\nfunction PremiumStatusItem({ premiumSection }: OwnProps) {\n  const { openPremiumModal } = getActions();\n  const lang = useOldLang();\n  const handleOpenPremiumModal = useLastCallback(() => openPremiumModal({ initialSection: premiumSection }));\n\n  return (\n    <div className=\"settings-item\">\n      <ListItem\n        leftElement={<StarIcon className=\"icon ListItem-main-icon\" type=\"premium\" size=\"big\" />}\n        onClick={handleOpenPremiumModal}\n      >\n        {lang('PrivacyLastSeenPremium')}\n      </ListItem>\n      <p\n        className=\"settings-item-description-larger premium-info\"\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {lang('lng_messages_privacy_premium_about')}\n      </p>\n    </div>\n  );\n}\n\nexport default memo(PremiumStatusItem);\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './PrivacyLockedOption.module.scss';\n\ntype OwnProps = {\n  label: string;\n  isChecked?: boolean;\n};\n\nfunction PrivacyLockedOption({ label, isChecked }: OwnProps) {\n  const lang = useOldLang();\n  const { showNotification } = getActions();\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isChecked && styles.checked,\n      )}\n      onClick={() => showNotification({ message: lang('OptionPremiumRequiredMessage') })}\n    >\n      <span>{label}</span>\n      <Icon name=\"lock-badge\" className={styles.lockIcon} />\n    </div>\n  );\n}\n\nexport default memo(PrivacyLockedOption);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sBptmiga\",\"lock-icon\":\"jWxrRbkh\",\"lockIcon\":\"jWxrRbkh\",\"checked\":\"U_6O1ebL\"};","import React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { SettingsScreens } from '../../../types';\n\nimport {\n  DEFAULT_CHARGE_FOR_MESSAGES,\n} from '../../../config';\nimport {\n  selectIsCurrentUserPremium,\n  selectNewNoncontactPeersRequirePremium,\n  selectNonContactPeersPaidStars,\n} from '../../../global/selectors';\n\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PaidMessagePrice from '../../common/paidMessage/PaidMessagePrice';\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport PremiumStatusItem from './PremiumStatusItem';\nimport PrivacyLockedOption from './PrivacyLockedOption';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: VoidFunction;\n  onScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  shouldNewNonContactPeersRequirePremium?: boolean;\n  shouldChargeForMessages?: boolean;\n  canLimitNewMessagesWithoutPremium?: boolean;\n  canChargeForMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n  nonContactPeersPaidStars: number;\n  noPaidReactionsForUsersCount: number;\n};\n\nfunction PrivacyMessages({\n  isActive,\n  canLimitNewMessagesWithoutPremium,\n  canChargeForMessages,\n  shouldNewNonContactPeersRequirePremium,\n  shouldChargeForMessages,\n  nonContactPeersPaidStars,\n  isCurrentUserPremium,\n  noPaidReactionsForUsersCount,\n  onReset,\n  onScreenSelect,\n}: OwnProps & StateProps) {\n  const { updateGlobalPrivacySettings } = getActions();\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const canChangeForContactsAndPremium = isCurrentUserPremium || canLimitNewMessagesWithoutPremium;\n  const canChangeChargeForMessages = isCurrentUserPremium && canChargeForMessages;\n  const [chargeForMessages, setChargeForMessages] = useState<number>(nonContactPeersPaidStars);\n\n  const selectedValue = useMemo(() => {\n    if (shouldChargeForMessages) return 'charge_for_messages';\n    if (shouldNewNonContactPeersRequirePremium) return 'contacts_and_premium';\n    return 'everybody';\n  }, [shouldChargeForMessages, shouldNewNonContactPeersRequirePremium]);\n\n  const options = useMemo(() => {\n    return [\n      { value: 'everybody', label: oldLang('P2PEverybody') },\n      {\n        value: 'contacts_and_premium',\n        label: canChangeForContactsAndPremium ? (\n          oldLang('PrivacyMessagesContactsAndPremium')\n        ) : (\n          <PrivacyLockedOption\n            label={oldLang('PrivacyMessagesContactsAndPremium')}\n            isChecked={selectedValue === 'contacts_and_premium'}\n          />\n        ),\n        hidden: !canChangeForContactsAndPremium,\n        isCanCheckedInDisabled: true,\n      },\n      {\n        value: 'charge_for_messages',\n        label: canChangeChargeForMessages ? (\n          lang('PrivacyChargeForMessages')\n        ) : (\n          <PrivacyLockedOption\n            label={lang('PrivacyChargeForMessages')}\n            isChecked={selectedValue === 'charge_for_messages'}\n          />\n        ),\n        hidden: !canChangeChargeForMessages,\n        isCanCheckedInDisabled: true,\n      },\n    ];\n  }, [oldLang, lang, canChangeForContactsAndPremium, canChangeChargeForMessages, selectedValue]);\n\n  const handleChange = useLastCallback((privacy: string) => {\n    updateGlobalPrivacySettings({\n      shouldNewNonContactPeersRequirePremium: privacy === 'contacts_and_premium',\n      // eslint-disable-next-line no-null/no-null\n      nonContactPeersPaidStars: privacy === 'charge_for_messages' ? chargeForMessages : null,\n    });\n  });\n\n  const updateGlobalPrivacySettingsWithDebounced = useDebouncedCallback((value: number) => {\n    updateGlobalPrivacySettings({\n      nonContactPeersPaidStars: value,\n    });\n  }, [updateGlobalPrivacySettings], 300, true);\n\n  const handleChargeForMessagesChange = useCallback((value: number) => {\n    setChargeForMessages(value);\n    updateGlobalPrivacySettingsWithDebounced(value);\n  }, [setChargeForMessages, updateGlobalPrivacySettingsWithDebounced]);\n\n  function renderSectionNoPaidMessagesForUsers() {\n    const itemSubtitle = !noPaidReactionsForUsersCount ? lang('SubtitlePrivacyAddUsers')\n      : oldLang('Users', noPaidReactionsForUsersCount, 'i');\n\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n          {lang('RemoveFeeTitle')}\n        </h4>\n        <ListItem\n          narrow\n          icon=\"delete-user\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => {\n            onScreenSelect(SettingsScreens.PrivacyNoPaidMessages);\n          }}\n        >\n          <div className=\"multiline-item full-size\">\n            <span className=\"title\">{lang('ExceptionTitlePrivacyChargeForMessages')}</span>\n            <span className=\"subtitle\">{\n              itemSubtitle\n            }\n            </span>\n          </div>\n        </ListItem>\n      </div>\n    );\n  }\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const privacyDescription = useMemo(() => {\n    if (shouldChargeForMessages) return lang('PrivacyDescriptionChargeForMessages');\n    return lang('PrivacyDescriptionMessagesContactsAndPremium');\n  }, [shouldChargeForMessages, lang]);\n\n  return (\n    <>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n          {oldLang('PrivacyMessagesTitle')}\n        </h4>\n        <RadioGroup\n          name=\"privacy-messages\"\n          options={options}\n          onChange={handleChange}\n          selected={selectedValue}\n        />\n        <p className=\"settings-item-description-larger\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n          {privacyDescription}\n        </p>\n      </div>\n      {selectedValue === 'charge_for_messages' && (\n        <div className=\"settings-item fluid-container\">\n          <PaidMessagePrice\n            canChangeChargeForMessages={canChangeChargeForMessages}\n            chargeForMessages={chargeForMessages}\n            onChange={handleChargeForMessagesChange}\n          />\n        </div>\n      )}\n      {canChangeChargeForMessages && selectedValue === 'charge_for_messages' && renderSectionNoPaidMessagesForUsers()}\n      {!isCurrentUserPremium && selectedValue !== 'charge_for_messages'\n      && <PremiumStatusItem premiumSection=\"message_privacy\" />}\n    </>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const nonContactPeersPaidStars = selectNonContactPeersPaidStars(global);\n\n  const noPaidReactionsForUsersCount = global.settings.privacy.noPaidMessages?.allowUserIds.length || 0;\n\n  return {\n    shouldNewNonContactPeersRequirePremium: selectNewNoncontactPeersRequirePremium(global),\n    shouldChargeForMessages: Boolean(nonContactPeersPaidStars),\n    nonContactPeersPaidStars: nonContactPeersPaidStars || DEFAULT_CHARGE_FOR_MESSAGES,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    canLimitNewMessagesWithoutPremium: global.appConfig?.canLimitNewMessagesWithoutPremium,\n    canChargeForMessages: global.appConfig?.starsPaidMessagesAvailable,\n    noPaidReactionsForUsersCount,\n  };\n})(PrivacyMessages));\n","import type { ApiSession } from '../../../../api/types';\nimport type { DeviceType } from '../../../../types/icons/device';\n\nexport default function getSessionIcon(session: ApiSession): DeviceType {\n  const platform = session.platform.toLowerCase();\n  const device = session.deviceModel.toLowerCase();\n  const systemVersion = session.systemVersion.toLowerCase();\n\n  if (device.includes('xbox')) {\n    return 'xbox';\n  }\n\n  if (device.includes('chrome') && !device.includes('chromebook')) {\n    return 'chrome';\n  }\n  if (device.includes('brave')) {\n    return 'brave';\n  }\n  if (device.includes('vivaldi')) {\n    return 'vivaldi';\n  }\n  if (device.includes('safari')) {\n    return 'safari';\n  }\n  if (device.includes('firefox')) {\n    return 'firefox';\n  }\n  if (device.includes('opera')) {\n    return 'opera';\n  }\n  if (device.includes('samsungbrowser')) {\n    return 'samsung';\n  }\n  if (platform.includes('android')) {\n    return 'android';\n  }\n  if (\n    device.includes('iphone')\n    || device.includes('ipad')\n    || platform.includes('ios')\n    || platform.includes('macos')\n    || systemVersion.includes('macos')\n  ) {\n    return 'apple';\n  }\n  if (platform.includes('ubuntu') || systemVersion.includes('ubuntu')) {\n    return 'ubuntu';\n  }\n  if (platform.includes('linux') || systemVersion.includes('linux')) {\n    return 'linux';\n  }\n  if (platform.includes('windows') || systemVersion.includes('windows')) {\n    return 'windows';\n  }\n\n  return 'unknown';\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"SettingsActiveSession\":\"M84mrPgu\",\"settingsActiveSession\":\"M84mrPgu\",\"iconDevice\":\"Add8P_K4\",\"iconDevice__android\":\"onkXVGY4\",\"iconDeviceAndroid\":\"onkXVGY4\",\"iconDevice__apple\":\"xw13aT8u\",\"iconDeviceApple\":\"xw13aT8u\",\"iconDevice__brave\":\"HESrGUdv\",\"iconDeviceBrave\":\"HESrGUdv\",\"iconDevice__chrome\":\"Vpej7wm7\",\"iconDeviceChrome\":\"Vpej7wm7\",\"iconDevice__edge\":\"ueWE77x9\",\"iconDeviceEdge\":\"ueWE77x9\",\"iconDevice__firefox\":\"_lMTmvya\",\"iconDeviceFirefox\":\"_lMTmvya\",\"iconDevice__linux\":\"cDVfvyG_\",\"iconDeviceLinux\":\"cDVfvyG_\",\"iconDevice__opera\":\"nWqlTxZt\",\"iconDeviceOpera\":\"nWqlTxZt\",\"iconDevice__safari\":\"ldFLp1Gf\",\"iconDeviceSafari\":\"ldFLp1Gf\",\"iconDevice__samsung\":\"VHNORBGL\",\"iconDeviceSamsung\":\"VHNORBGL\",\"iconDevice__ubuntu\":\"QBVivtdu\",\"iconDeviceUbuntu\":\"QBVivtdu\",\"iconDevice__unknown\":\"GbjIgrwU\",\"iconDeviceUnknown\":\"GbjIgrwU\",\"iconDevice__vivaldi\":\"yieVnjoI\",\"iconDeviceVivaldi\":\"yieVnjoI\",\"iconDevice__windows\":\"_0dnTFOE\",\"iconDeviceWindows\":\"_0dnTFOE\",\"iconDevice__xbox\":\"fbCjjDpU\",\"iconDeviceXbox\":\"fbCjjDpU\",\"title\":\"c6edjhlh\",\"note\":\"lRqTZAYn\",\"date\":\"oLnN6crs\",\"box\":\"wVEXuPlZ\",\"actionHeader\":\"olQS2T1n\",\"actionName\":\"KuX1APpO\",\"headerButton\":\"VT8pZfMu\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport getSessionIcon from './helpers/getSessionIcon';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport Switcher from '../../ui/Switcher';\n\nimport styles from './SettingsActiveSession.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  hash?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  session?: ApiSession;\n};\n\nconst SettingsActiveSession: FC<OwnProps & StateProps> = ({\n  isOpen, session, onClose,\n}) => {\n  const { changeSessionSettings, terminateAuthorization } = getActions();\n  const lang = useOldLang();\n\n  const renderingSession = useCurrentOrPrev(session, true);\n\n  const handleSecretChatsStateChange = useCallback(() => {\n    changeSessionSettings({\n      hash: session!.hash,\n      areSecretChatsEnabled: !session!.areSecretChatsEnabled,\n    });\n  }, [changeSessionSettings, session]);\n\n  const handleCallsStateChange = useCallback(() => {\n    changeSessionSettings({\n      hash: session!.hash,\n      areCallsEnabled: !session!.areCallsEnabled,\n    });\n  }, [changeSessionSettings, session]);\n\n  const handleTerminateSessionClick = useCallback(() => {\n    terminateAuthorization({ hash: session!.hash });\n    onClose();\n  }, [onClose, session, terminateAuthorization]);\n\n  if (!renderingSession) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <Icon name=\"close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('SessionPreview.Title')}</div>\n        <Button\n          color=\"danger\"\n          onClick={handleTerminateSessionClick}\n          className={buildClassName('modal-action-button', styles.headerButton)}\n        >\n          {lang('SessionPreview.TerminateSession')}\n        </Button>\n      </div>\n    );\n  }\n  return (\n    <Modal\n      header={renderHeader()}\n      isOpen={isOpen}\n      hasCloseButton\n      onClose={onClose}\n      className={styles.SettingsActiveSession}\n    >\n      <div className={buildClassName(\n        styles.iconDevice,\n        renderingSession && styles[`iconDevice__${getSessionIcon(renderingSession)}`],\n      )}\n      />\n      <h3 className={styles.title} dir=\"auto\">{renderingSession?.deviceModel}</h3>\n      <div className={styles.date} aria-label={lang('PrivacySettings.LastSeen')}>\n        {formatDateTimeToString(renderingSession.dateActive * 1000, lang.code)}\n      </div>\n\n      <dl className={styles.box}>\n        <dt>{lang('SessionPreview.App')}</dt>\n        <dd>\n          {renderingSession?.appName} {renderingSession?.appVersion},{' '}\n          {renderingSession?.platform} {renderingSession?.systemVersion}\n        </dd>\n\n        <dt>{lang('SessionPreview.Ip')}</dt>\n        <dd>{renderingSession?.ip}</dd>\n\n        <dt>{lang('SessionPreview.Location')}</dt>\n        <dd>{renderingSession && getLocation(renderingSession)}</dd>\n      </dl>\n\n      <p className={styles.note}>{lang('SessionPreview.IpDesc')}</p>\n\n      <h4 className={styles.actionHeader}>{lang('AuthSessions.View.AcceptTitle')}</h4>\n\n      <ListItem onClick={handleSecretChatsStateChange}>\n        <span className={styles.actionName}>{lang('SessionPreview.Accept.Secret')}</span>\n        <Switcher\n          id=\"accept_secrets\"\n          label=\"On\"\n          checked={renderingSession.areSecretChatsEnabled}\n        />\n      </ListItem>\n      <ListItem onClick={handleCallsStateChange}>\n        <span className={styles.actionName}>{lang('SessionPreview.Accept.Calls')}</span>\n        <Switcher\n          id=\"accept_calls\"\n          label=\"On\"\n          checked={renderingSession.areCallsEnabled}\n        />\n      </ListItem>\n    </Modal>\n  );\n};\n\nfunction getLocation(session: ApiSession) {\n  return [session.region, session.country].filter(Boolean).join(', ');\n}\n\nexport default memo(withGlobal<OwnProps>((global, { hash }) => {\n  return {\n    session: hash ? global.activeSessions.byHash[hash] : undefined,\n  };\n})(SettingsActiveSession));\n","/* eslint-disable react/jsx-no-bind */\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport { formatPastTimeShort } from '../../../util/dates/dateFormat';\nimport getSessionIcon from './helpers/getSessionIcon';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport SettingsActiveSession from './SettingsActiveSession';\n\nimport './SettingsActiveSessions.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  byHash: Record<string, ApiSession>;\n  orderedHashes: string[];\n  ttlDays?: number;\n};\n\nconst SettingsActiveSessions: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  byHash,\n  orderedHashes,\n  ttlDays,\n}) => {\n  const {\n    terminateAuthorization,\n    terminateAllAuthorizations,\n    changeSessionTtl,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isConfirmTerminateAllDialogOpen, openConfirmTerminateAllDialog, closeConfirmTerminateAllDialog] = useFlag();\n  const [openedSessionHash, setOpenedSessionHash] = useState<string | undefined>();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const autoTerminateValue = useMemo(() => {\n    // eslint-disable-next-line max-len\n    // https://github.com/DrKLO/Telegram/blob/96dce2c9aabc33b87db61d830aa087b6b03fe397/TMessagesProj/src/main/java/org/telegram/ui/SessionsActivity.java#L195\n    if (ttlDays === undefined) {\n      return undefined;\n    }\n\n    if (ttlDays <= 7) {\n      return '7';\n    }\n\n    if (ttlDays <= 30) {\n      return '30';\n    }\n\n    if (ttlDays <= 93) {\n      return '90';\n    }\n\n    if (ttlDays <= 183) {\n      return '183';\n    }\n\n    if (ttlDays > 183) {\n      return '365';\n    }\n\n    return undefined;\n  }, [ttlDays]);\n\n  const AUTO_TERMINATE_OPTIONS = useMemo(() => {\n    const options = [{\n      label: lang('Weeks', 1, 'i'),\n      value: '7',\n    }, {\n      label: lang('Months', 1, 'i'),\n      value: '30',\n    }, {\n      label: lang('Months', 3, 'i'),\n      value: '90',\n    }, {\n      label: lang('Months', 6, 'i'),\n      value: '183',\n    }];\n    if (ttlDays && ttlDays >= 365) {\n      options.push({\n        label: lang('Years', 1, 'i'),\n        value: '365',\n      });\n    }\n    return options;\n  }, [lang, ttlDays]);\n\n  const handleTerminateSessionClick = useCallback((hash: string) => {\n    terminateAuthorization({ hash });\n  }, [terminateAuthorization]);\n\n  const handleTerminateAllSessions = useCallback(() => {\n    closeConfirmTerminateAllDialog();\n    terminateAllAuthorizations();\n  }, [closeConfirmTerminateAllDialog, terminateAllAuthorizations]);\n\n  const handleOpenSessionModal = useCallback((hash: string) => {\n    setOpenedSessionHash(hash);\n    openModal();\n  }, [openModal]);\n\n  const handleCloseSessionModal = useCallback(() => {\n    setOpenedSessionHash(undefined);\n    closeModal();\n  }, [closeModal]);\n\n  const handleChangeSessionTtl = useCallback((value: string) => {\n    changeSessionTtl({ days: Number(value) });\n  }, [changeSessionTtl]);\n\n  const currentSession = useMemo(() => {\n    const currentSessionHash = orderedHashes.find((hash) => byHash[hash].isCurrent);\n\n    return currentSessionHash ? byHash[currentSessionHash] : undefined;\n  }, [byHash, orderedHashes]);\n\n  const otherSessionHashes = useMemo(() => {\n    return orderedHashes.filter((hash) => !byHash[hash].isCurrent);\n  }, [byHash, orderedHashes]);\n  const hasOtherSessions = Boolean(otherSessionHashes.length);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  function renderCurrentSession(session: ApiSession) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('AuthSessions.CurrentSession')}\n        </h4>\n\n        <ListItem narrow inactive icon={`device-${getSessionIcon(session)}`} iconClassName=\"icon-device\">\n          <div className=\"multiline-item full-size\" dir=\"auto\">\n            <span className=\"title\" dir=\"auto\">{session.deviceModel}</span>\n            <span className=\"subtitle black tight\">\n              {session.appName} {session.appVersion}, {session.platform} {session.systemVersion}\n            </span>\n            <span className=\"subtitle\">{session.ip} - {getLocation(session)}</span>\n          </div>\n        </ListItem>\n\n        {hasOtherSessions && (\n          <ListItem\n            className=\"destructive mb-0 no-icon\"\n            icon=\"stop\"\n            ripple\n            narrow\n            onClick={openConfirmTerminateAllDialog}\n          >\n            {lang('TerminateAllSessions')}\n          </ListItem>\n        )}\n      </div>\n    );\n  }\n\n  function renderOtherSessions(sessionHashes: string[]) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('OtherSessions')}\n        </h4>\n\n        {sessionHashes.map(renderSession)}\n      </div>\n    );\n  }\n\n  function renderAutoTerminate() {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('TerminateOldSessionHeader')}\n        </h4>\n\n        <p className=\"settings-item-description-larger\">{lang('IfInactiveFor')}</p>\n        <RadioGroup\n          name=\"session_ttl\"\n          options={AUTO_TERMINATE_OPTIONS}\n          selected={autoTerminateValue}\n          onChange={handleChangeSessionTtl}\n        />\n      </div>\n    );\n  }\n\n  function renderSession(sessionHash: string) {\n    const session = byHash[sessionHash];\n\n    return (\n      <ListItem\n        key={session.hash}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Terminate',\n          icon: 'stop',\n          destructive: true,\n          handler: () => {\n            handleTerminateSessionClick(session.hash);\n          },\n        }]}\n        icon={`device-${getSessionIcon(session)}`}\n        iconClassName=\"icon-device\"\n        onClick={() => { handleOpenSessionModal(session.hash); }}\n      >\n        <div className=\"multiline-item full-size\" dir=\"auto\">\n          <span className=\"date\">{formatPastTimeShort(lang, session.dateActive * 1000)}</span>\n          <span className=\"title\">{session.deviceModel}</span>\n          <span className=\"subtitle black tight\">\n            {session.appName} {session.appVersion}, {session.platform} {session.systemVersion}\n          </span>\n          <span className=\"subtitle\">{session.ip} {getLocation(session)}</span>\n        </div>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll SettingsActiveSessions\">\n      {currentSession && renderCurrentSession(currentSession)}\n      {hasOtherSessions && renderOtherSessions(otherSessionHashes)}\n      {renderAutoTerminate()}\n      {hasOtherSessions && (\n        <ConfirmDialog\n          isOpen={isConfirmTerminateAllDialogOpen}\n          onClose={closeConfirmTerminateAllDialog}\n          text={lang('AreYouSureSessions')}\n          confirmLabel={lang('TerminateAllSessions')}\n          confirmHandler={handleTerminateAllSessions}\n          confirmIsDestructive\n          areButtonsInColumn\n        />\n      )}\n      <SettingsActiveSession isOpen={isModalOpen} hash={openedSessionHash} onClose={handleCloseSessionModal} />\n    </div>\n  );\n};\n\nfunction getLocation(session: ApiSession) {\n  return [session.region, session.country].filter(Boolean).join(', ');\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => global.activeSessions,\n)(SettingsActiveSessions));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Wd0fmiSY\",\"avatar\":\"OhZHdRsP\",\"title\":\"EQ7__xGn\",\"note\":\"YRYk96ki\",\"box\":\"kmCTIfvf\",\"action-header\":\"qkq5Fa0V\",\"actionHeader\":\"qkq5Fa0V\",\"action-name\":\"zFYUiy13\",\"actionName\":\"zFYUiy13\",\"header-button\":\"lUf0RJ2h\",\"headerButton\":\"lUf0RJ2h\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser, ApiWebSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './SettingsActiveWebsite.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  hash?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  session?: ApiWebSession;\n  bot?: ApiUser;\n};\n\nconst SettingsActiveWebsite: FC<OwnProps & StateProps> = ({\n  isOpen,\n  session,\n  bot,\n  onClose,\n}) => {\n  const { terminateWebAuthorization } = getActions();\n  const lang = useOldLang();\n\n  const renderingSession = useCurrentOrPrev(session, true);\n  const renderingBot = useCurrentOrPrev(bot, true);\n\n  const handleTerminateSessionClick = useCallback(() => {\n    terminateWebAuthorization({ hash: session!.hash });\n    onClose();\n  }, [onClose, session, terminateWebAuthorization]);\n\n  if (!renderingSession) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <Icon name=\"close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('WebSessionsTitle')}</div>\n        <Button\n          color=\"danger\"\n          onClick={handleTerminateSessionClick}\n          className={buildClassName('modal-action-button', styles.headerButton)}\n        >\n          {lang('AuthSessions.LogOut')}\n        </Button>\n      </div>\n    );\n  }\n  return (\n    <Modal\n      header={renderHeader()}\n      isOpen={isOpen}\n      hasCloseButton\n      onClose={onClose}\n      className={styles.root}\n    >\n      <Avatar\n        className={styles.avatar}\n        peer={renderingBot}\n        size=\"large\"\n      />\n      {renderingBot && <FullNameTitle className={styles.title} peer={renderingBot} />}\n      <div className={styles.note}>\n        {renderingSession?.domain}\n      </div>\n\n      <dl className={styles.box}>\n        <dt>{lang('AuthSessions.View.Browser')}</dt>\n        <dd>\n          {renderingSession?.browser}\n        </dd>\n\n        <dt>{lang('SessionPreview.Ip')}</dt>\n        <dd>{renderingSession?.ip}</dd>\n\n        <dt>{lang('SessionPreview.Location')}</dt>\n        <dd>{renderingSession?.region}</dd>\n      </dl>\n      <p className={styles.note}>{lang('AuthSessions.View.LocationInfo')}</p>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { hash }): StateProps => {\n  const session = hash ? global.activeWebSessions.byHash[hash] : undefined;\n  const bot = session ? global.users.byId[session.botId] : undefined;\n\n  return {\n    session,\n    bot,\n  };\n})(SettingsActiveWebsite));\n","// extracted by mini-css-extract-plugin\nexport default {\"avatar\":\"v0wP46TR\",\"clear-help\":\"WnnxcARX\",\"clearHelp\":\"WnnxcARX\",\"subtitle\":\"uEUfjByC\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiWebSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPastTimeShort } from '../../../util/dates/dateFormat';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport SettingsActiveWebsite from './SettingsActiveWebsite';\n\nimport styles from './SettingsActiveWebsites.module.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  byHash: Record<string, ApiWebSession>;\n  orderedHashes: string[];\n};\n\nconst SettingsActiveWebsites: FC<OwnProps & StateProps> = ({\n  isActive,\n  byHash,\n  orderedHashes,\n  onReset,\n}) => {\n  const {\n    terminateWebAuthorization,\n    terminateAllWebAuthorizations,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isConfirmTerminateAllDialogOpen, openConfirmTerminateAllDialog, closeConfirmTerminateAllDialog] = useFlag();\n  const [openedWebsiteHash, setOpenedWebsiteHash] = useState<string | undefined>();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const handleTerminateAuthClick = useCallback((hash: string) => {\n    terminateWebAuthorization({ hash });\n  }, [terminateWebAuthorization]);\n\n  const handleTerminateAllAuth = useCallback(() => {\n    closeConfirmTerminateAllDialog();\n    terminateAllWebAuthorizations();\n  }, [closeConfirmTerminateAllDialog, terminateAllWebAuthorizations]);\n\n  const handleOpenSessionModal = useCallback((hash: string) => {\n    setOpenedWebsiteHash(hash);\n    openModal();\n  }, [openModal]);\n\n  const handleCloseWebsiteModal = useCallback(() => {\n    setOpenedWebsiteHash(undefined);\n    closeModal();\n  }, [closeModal]);\n\n  // Close when empty\n  useEffect(() => {\n    if (!orderedHashes.length) {\n      onReset();\n    }\n  }, [onReset, orderedHashes]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  function renderSessions(sessionHashes: string[]) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('WebSessionsTitle')}\n        </h4>\n\n        {sessionHashes.map(renderSession)}\n      </div>\n    );\n  }\n\n  function renderSession(sessionHash: string) {\n    const session = byHash[sessionHash];\n    const bot = getGlobal().users.byId[session.botId];\n\n    return (\n      <ListItem\n        key={session.hash}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Terminate',\n          icon: 'stop',\n          destructive: true,\n          handler: () => {\n            handleTerminateAuthClick(session.hash);\n          },\n        }]}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleOpenSessionModal(session.hash)}\n      >\n        <Avatar className={styles.avatar} peer={bot} size=\"tiny\" />\n        <div className=\"multiline-item full-size\" dir=\"auto\">\n          <span className=\"date\">{formatPastTimeShort(lang, session.dateActive * 1000)}</span>\n          {bot && <FullNameTitle className={styles.title} peer={bot} />}\n          <span className={buildClassName('subtitle', 'black', 'tight', styles.platform)}>\n            {session.domain}, {session.browser}, {session.platform}\n          </span>\n          <span className={buildClassName('subtitle', styles.subtitle)}>{session.ip} {session.region}</span>\n        </div>\n      </ListItem>\n    );\n  }\n\n  if (!orderedHashes.length) return undefined;\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <ListItem\n          className=\"destructive mb-0 no-icon\"\n          icon=\"stop\"\n          ripple\n          narrow\n          onClick={openConfirmTerminateAllDialog}\n        >\n          {lang('AuthSessions.LogOutApplications')}\n        </ListItem>\n        <p className={buildClassName('settings-item-description', styles.clearHelp)}>\n          {lang('ClearOtherWebSessionsHelp')}\n        </p>\n      </div>\n      {renderSessions(orderedHashes)}\n      <ConfirmDialog\n        isOpen={isConfirmTerminateAllDialogOpen}\n        onClose={closeConfirmTerminateAllDialog}\n        title={lang('AuthSessions.LogOutApplications')}\n        text={lang('AreYouSureWebSessions')}\n        confirmHandler={handleTerminateAllAuth}\n        confirmIsDestructive\n      />\n      <SettingsActiveWebsite isOpen={isModalOpen} hash={openedWebsiteHash} onClose={handleCloseWebsiteModal} />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byHash, orderedHashes } = global.activeWebSessions;\n    return {\n      byHash,\n      orderedHashes,\n    };\n  },\n)(SettingsActiveWebsites));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { CHAT_HEIGHT_PX, STICKER_SIZE_GENERAL_SETTINGS } from '../../config';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StickerSetCover from '../middle/composer/StickerSetCover';\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport StickerButton from './StickerButton';\n\nimport './StickerSetCard.scss';\n\ntype OwnProps = {\n  stickerSet?: ApiStickerSet;\n  noPlay?: boolean;\n  className?: string;\n  observeIntersection: ObserveFn;\n  onClick: (value: ApiSticker) => void;\n};\n\nconst StickerSetCard: FC<OwnProps> = ({\n  stickerSet,\n  noPlay,\n  className,\n  observeIntersection,\n  onClick,\n}) => {\n  const lang = useOldLang();\n\n  const firstSticker = stickerSet?.stickers?.[0];\n\n  const handleCardClick = useLastCallback(() => {\n    if (firstSticker) onClick(firstSticker);\n  });\n\n  if (!stickerSet?.stickers) {\n    return undefined;\n  }\n\n  function renderPreview() {\n    if (!stickerSet) return undefined;\n    if (stickerSet.hasThumbnail || !firstSticker) {\n      return (\n        <Button\n          ariaLabel={stickerSet.title}\n          color=\"translucent\"\n          isRtl={lang.isRtl}\n        >\n          <StickerSetCover\n            stickerSet={stickerSet}\n            size={STICKER_SIZE_GENERAL_SETTINGS}\n            noPlay={noPlay}\n            observeIntersection={observeIntersection}\n          />\n        </Button>\n      );\n    } else {\n      return (\n        <StickerButton\n          sticker={firstSticker}\n          size={STICKER_SIZE_GENERAL_SETTINGS}\n          title={stickerSet.title}\n          noPlay={noPlay}\n          observeIntersection={observeIntersection}\n          noContextMenu\n          isCurrentUserPremium\n          clickArg={undefined}\n        />\n      );\n    }\n  }\n\n  return (\n    <ListItem\n      className={buildClassName('StickerSetCard', 'chat-item-clickable small-icon', className)}\n      style={`height: ${CHAT_HEIGHT_PX}px;`}\n      inactive={!firstSticker}\n      onClick={handleCardClick}\n    >\n      {renderPreview()}\n      <div className=\"multiline-item\">\n        <div className=\"title\">{stickerSet.title}</div>\n        <div className=\"subtitle\">{lang('StickerPack.StickerCount', stickerSet.count, 'i')}</div>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(StickerSetCard);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../../api/types';\nimport type { AccountSettings } from '../../../types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport { pick } from '../../../util/iteratees';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StickerSetCard from '../../common/StickerSetCard';\nimport Checkbox from '../../ui/Checkbox';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<AccountSettings, (\n  'shouldSuggestCustomEmoji'\n)> & {\n  customEmojiSetIds?: string[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst SettingsCustomEmoji: FC<OwnProps & StateProps> = ({\n  isActive,\n  customEmojiSetIds,\n  stickerSetsById,\n  shouldSuggestCustomEmoji,\n  canPlayAnimatedEmojis,\n  onReset,\n}) => {\n  const { openStickerSet, setSettingOption } = getActions();\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const stickerSettingsRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({ rootRef: stickerSettingsRef });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleStickerSetClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  }, [openStickerSet]);\n\n  const handleSuggestCustomEmojiChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldSuggestCustomEmoji: newValue });\n  }, [setSettingOption]);\n\n  const customEmojiSets = useMemo(() => (\n    customEmojiSetIds && Object.values(pick(stickerSetsById, customEmojiSetIds))\n  ), [customEmojiSetIds, stickerSetsById]);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      {customEmojiSets && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('SuggestAnimatedEmoji')}\n            checked={shouldSuggestCustomEmoji}\n            onCheck={handleSuggestCustomEmojiChange}\n          />\n          <div className=\"mt-4\" ref={stickerSettingsRef}>\n            {customEmojiSets.map((stickerSet: ApiStickerSet) => (\n              <StickerSetCard\n                key={stickerSet.id}\n                stickerSet={stickerSet}\n                observeIntersection={observeIntersectionForCovers}\n                onClick={handleStickerSetClick}\n                noPlay={!canPlayAnimatedEmojis}\n              />\n            ))}\n          </div>\n          <p className=\"settings-item-description mt-3\" dir=\"auto\">\n            {renderText(lang('EmojiBotInfo'), ['links'])}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      ...pick(global.settings.byKey, [\n        'shouldSuggestCustomEmoji',\n      ]),\n      customEmojiSetIds: global.customEmojis.added.setIds,\n      stickerSetsById: global.stickers.setsById,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(SettingsCustomEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { AccountSettings } from '../../../types';\n\nimport { AUTODOWNLOAD_FILESIZE_MB_LIMITS } from '../../../config';\nimport { pick } from '../../../util/iteratees';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<AccountSettings, (\n  'canAutoLoadPhotoFromContacts' |\n  'canAutoLoadPhotoInPrivateChats' |\n  'canAutoLoadPhotoInGroups' |\n  'canAutoLoadPhotoInChannels' |\n  'canAutoLoadVideoFromContacts' |\n  'canAutoLoadVideoInPrivateChats' |\n  'canAutoLoadVideoInGroups' |\n  'canAutoLoadVideoInChannels' |\n  'canAutoLoadFileFromContacts' |\n  'canAutoLoadFileInPrivateChats' |\n  'canAutoLoadFileInGroups' |\n  'canAutoLoadFileInChannels' |\n  'autoLoadFileMaxSizeMb'\n)>;\n\nconst SettingsDataStorage: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  canAutoLoadPhotoFromContacts,\n  canAutoLoadPhotoInPrivateChats,\n  canAutoLoadPhotoInGroups,\n  canAutoLoadPhotoInChannels,\n  canAutoLoadVideoFromContacts,\n  canAutoLoadVideoInPrivateChats,\n  canAutoLoadVideoInGroups,\n  canAutoLoadVideoInChannels,\n  canAutoLoadFileFromContacts,\n  canAutoLoadFileInPrivateChats,\n  canAutoLoadFileInGroups,\n  canAutoLoadFileInChannels,\n  autoLoadFileMaxSizeMb,\n}) => {\n  const { setSettingOption } = getActions();\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const renderFileSizeCallback = useCallback((value: number) => {\n    return lang('AutodownloadSizeLimitUpTo', {\n      limit: lang('FileSizeMB', { count: AUTODOWNLOAD_FILESIZE_MB_LIMITS[value] }),\n    });\n  }, [lang]);\n\n  const handleFileSizeChange = useCallback((value: number) => {\n    setSettingOption({ autoLoadFileMaxSizeMb: AUTODOWNLOAD_FILESIZE_MB_LIMITS[value] });\n  }, [setSettingOption]);\n\n  function renderContentSizeSlider() {\n    const value = AUTODOWNLOAD_FILESIZE_MB_LIMITS.indexOf(autoLoadFileMaxSizeMb);\n\n    return (\n      <div className=\"pt-5\">\n        <RangeSlider\n          label={lang('AutoDownloadMaxFileSize')}\n          min={0}\n          max={5}\n          value={value !== -1 ? value : 2}\n          renderValue={renderFileSizeCallback}\n          onChange={handleFileSizeChange}\n        />\n      </div>\n    );\n  }\n\n  function renderAutoDownloadBlock(\n    title: string,\n    key: 'Photo' | 'Video' | 'File',\n    canAutoLoadFromContacts: boolean,\n    canAutoLoadInPrivateChats: boolean,\n    canAutoLoadInGroups: boolean,\n    canAutoLoadInChannels: boolean,\n  ) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{title}</h4>\n\n        <Checkbox\n          label={lang('AutoDownloadSettingsContacts')}\n          checked={canAutoLoadFromContacts}\n          // TODO rewrite to support `useCallback`\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}FromContacts`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettingsPrivateChats')}\n          checked={canAutoLoadInPrivateChats}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InPrivateChats`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettingsGroupChats')}\n          checked={canAutoLoadInGroups}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InGroups`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettingsChannels')}\n          checked={canAutoLoadInChannels}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InChannels`]: isChecked })}\n        />\n\n        {key === 'File' && renderContentSizeSlider()}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      {renderAutoDownloadBlock(\n        lang('AutoDownloadPhotosTitle'),\n        'Photo',\n        canAutoLoadPhotoFromContacts,\n        canAutoLoadPhotoInPrivateChats,\n        canAutoLoadPhotoInGroups,\n        canAutoLoadPhotoInChannels,\n      )}\n      {renderAutoDownloadBlock(\n        lang('AutoDownloadVideosTitle'),\n        'Video',\n        canAutoLoadVideoFromContacts,\n        canAutoLoadVideoInPrivateChats,\n        canAutoLoadVideoInGroups,\n        canAutoLoadVideoInChannels,\n      )}\n      {renderAutoDownloadBlock(\n        lang('AutoDownloadFilesTitle'),\n        'File',\n        canAutoLoadFileFromContacts,\n        canAutoLoadFileInPrivateChats,\n        canAutoLoadFileInGroups,\n        canAutoLoadFileInChannels,\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return pick(global.settings.byKey, [\n      'canAutoLoadPhotoFromContacts',\n      'canAutoLoadPhotoInPrivateChats',\n      'canAutoLoadPhotoInGroups',\n      'canAutoLoadPhotoInChannels',\n      'canAutoLoadVideoFromContacts',\n      'canAutoLoadVideoInPrivateChats',\n      'canAutoLoadVideoInGroups',\n      'canAutoLoadVideoInChannels',\n      'canAutoLoadFileFromContacts',\n      'canAutoLoadFileInPrivateChats',\n      'canAutoLoadFileInGroups',\n      'canAutoLoadFileInChannels',\n      'autoLoadFileMaxSizeMb',\n    ]);\n  },\n)(SettingsDataStorage));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ys1i4ssl\",\"item\":\"skaVPMTF\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { AccountSettings } from '../../../types';\n\nimport { SUPPORTED_TRANSLATION_LANGUAGES } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { partition } from '../../../util/iteratees';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ItemPicker, { type ItemPickerOption } from '../../common/pickers/ItemPicker';\n\nimport styles from './SettingsDoNotTranslate.module.scss';\n\n// https://fasttext.cc/docs/en/language-identification.html\nconst LOCAL_SUPPORTED_DETECTION_LANGUAGES = [\n  'af', 'als', 'am', 'an', 'ar', 'arz', 'as', 'ast', 'av', 'az',\n  'azb', 'ba', 'bar', 'bcl', 'be', 'bg', 'bh', 'bn', 'bo', 'bpy',\n  'br', 'bs', 'bxr', 'ca', 'cbk', 'ce', 'ceb', 'ckb', 'co', 'cs',\n  'cv', 'cy', 'da', 'de', 'diq', 'dsb', 'dty', 'dv', 'el', 'eml',\n  'en', 'eo', 'es', 'et', 'eu', 'fa', 'fi', 'fr', 'frr', 'fy',\n  'ga', 'gd', 'gl', 'gn', 'gom', 'gu', 'gv', 'he', 'hi', 'hif',\n  'hr', 'hsb', 'ht', 'hu', 'hy', 'ia', 'id', 'ie', 'ilo', 'io',\n  'is', 'it', 'ja', 'jbo', 'jv', 'ka', 'kk', 'km', 'kn', 'ko',\n  'krc', 'ku', 'kv', 'kw', 'ky', 'la', 'lb', 'lez', 'li', 'lmo',\n  'lo', 'lrc', 'lt', 'lv', 'mai', 'mg', 'mhr', 'min', 'mk', 'ml',\n  'mn', 'mr', 'mrj', 'ms', 'mt', 'mwl', 'my', 'myv', 'mzn', 'nah',\n  'nap', 'nds', 'ne', 'new', 'nl', 'nn', 'no', 'oc', 'or', 'os',\n  'pa', 'pam', 'pfl', 'pl', 'pms', 'pnb', 'ps', 'pt', 'qu', 'rm',\n  'ro', 'ru', 'rue', 'sa', 'sah', 'sc', 'scn', 'sco', 'sd', 'sh',\n  'si', 'sk', 'sl', 'so', 'sq', 'sr', 'su', 'sv', 'sw', 'ta', 'te',\n  'tg', 'th', 'tk', 'tl', 'tr', 'tt', 'tyv', 'ug', 'uk', 'ur', 'uz',\n  'vec', 'vep', 'vi', 'vls', 'vo', 'wa', 'war', 'wuu', 'xal', 'xmf',\n  'yi', 'yo', 'yue', 'zh',\n];\n\nconst SUPPORTED_LANGUAGES = SUPPORTED_TRANSLATION_LANGUAGES.filter((lang: string) => (\n  LOCAL_SUPPORTED_DETECTION_LANGUAGES.includes(lang)\n));\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<AccountSettings, 'doNotTranslate'>;\n\nconst SettingsDoNotTranslate: FC<OwnProps & StateProps> = ({\n  isActive,\n  doNotTranslate,\n  onReset,\n}) => {\n  const { setSettingOption } = getActions();\n\n  const lang = useOldLang();\n  const language = lang.code || 'en';\n  const [displayedOptions, setDisplayedOptions] = useState<string[]>([]);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n\n  const displayedOptionList: ItemPickerOption[] = useMemo(() => {\n    const options = SUPPORTED_LANGUAGES.map((langCode: string) => {\n      const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n      const translatedName = translatedNames.of(langCode)!;\n\n      const originalNames = new Intl.DisplayNames([langCode], { type: 'language' });\n      const originalName = originalNames.of(langCode)!;\n\n      return {\n        langCode,\n        translatedName,\n        originalName,\n      };\n    }).filter(Boolean).map(({ langCode, translatedName, originalName }) => ({\n      label: translatedName,\n      subLabel: originalName,\n      value: langCode,\n    }));\n\n    if (!searchQuery.trim()) {\n      const currentLanguageOption = options.find((option) => option.value === language);\n      const otherOptionList = options.filter((option) => option.value !== language);\n      return currentLanguageOption ? [currentLanguageOption, ...otherOptionList] : options;\n    }\n\n    return options?.filter((option) => option.label.toLowerCase().includes(searchQuery.toLowerCase()));\n  }, [language, searchQuery]);\n\n  useEffectWithPrevDeps(([prevIsActive, prevLanguage]) => {\n    if (prevIsActive === isActive && prevLanguage?.find((option) => option === language)) return;\n    const [selected] = partition(displayedOptionList, (option) => doNotTranslate.includes(option.value));\n    setDisplayedOptions([...selected.map((option) => option.value)]);\n  }, [isActive, doNotTranslate, displayedOptions.length, language, displayedOptionList]);\n\n  const handleChange = useLastCallback((newSelectedIds: string[]) => {\n    setDisplayedOptions(newSelectedIds);\n    setSettingOption({\n      doNotTranslate: newSelectedIds,\n    });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className={buildClassName(styles.root, 'settings-content infinite-scroll')}>\n      <div className={buildClassName(styles.item)}>\n        <ItemPicker\n          className={styles.picker}\n          items={displayedOptionList}\n          selectedValues={displayedOptions}\n          onSelectedValuesChange={handleChange}\n          filterValue={searchQuery}\n          onFilterChange={setSearchQuery}\n          isSearchable\n          allowMultiple\n          withDefaultPadding\n          itemInputType=\"checkbox\"\n          searchInputId=\"lang-picker-search\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      doNotTranslate,\n    } = global.settings.byKey;\n\n    return {\n      doNotTranslate,\n    };\n  },\n)(SettingsDoNotTranslate));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiUsername } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport { isBetween } from '../../util/math';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport Draggable from '../ui/Draggable';\nimport ListItem from '../ui/ListItem';\n\nimport styles from './ManageUsernames.module.scss';\n\ntype SortState = {\n  orderedUsernames?: string[];\n  dragOrderUsernames?: string[];\n  draggedIndex?: number;\n};\n\ntype OwnProps = {\n  chatId?: string;\n  usernames: ApiUsername[];\n  onEditUsername: (username: string) => void;\n};\n\nconst USERNAME_HEIGHT_PX = 56;\n\nconst ManageUsernames: FC<OwnProps> = ({\n  chatId,\n  usernames,\n  onEditUsername,\n}) => {\n  const {\n    showNotification,\n    toggleUsername,\n    toggleChatUsername,\n    sortUsernames,\n    sortChatUsernames,\n  } = getActions();\n  const lang = useOldLang();\n  const [usernameForConfirm, setUsernameForConfirm] = useState<ApiUsername | undefined>();\n\n  const usernameList = useMemo(() => usernames.map(({ username }) => username), [usernames]);\n  const prevUsernameList = usePreviousDeprecated(usernameList);\n\n  const [state, setState] = useState<SortState>({\n    orderedUsernames: usernameList,\n    dragOrderUsernames: usernameList,\n    draggedIndex: undefined,\n  });\n\n  // Sync folders state after changing folders in other clients\n  useEffect(() => {\n    if (prevUsernameList !== usernameList) {\n      setState({\n        orderedUsernames: usernameList,\n        dragOrderUsernames: usernameList,\n        draggedIndex: undefined,\n      });\n    }\n  }, [prevUsernameList, usernameList]);\n\n  const handleCopyUsername = useCallback((value: string) => {\n    copyTextToClipboard(`@${value}`);\n    showNotification({\n      message: lang('UsernameCopied'),\n    });\n  }, [lang, showNotification]);\n\n  const handleUsernameClick = useCallback((data: ApiUsername) => {\n    if (data.isEditable) {\n      onEditUsername(data.username);\n    } else {\n      setUsernameForConfirm(data);\n    }\n  }, [onEditUsername]);\n\n  const closeConfirmUsernameDialog = useCallback(() => {\n    setUsernameForConfirm(undefined);\n  }, []);\n\n  const handleUsernameToggle = useCallback(() => {\n    if (!usernameForConfirm) {\n      return;\n    }\n\n    if (chatId) {\n      toggleChatUsername({\n        chatId,\n        username: usernameForConfirm.username,\n        isActive: !usernameForConfirm.isActive,\n      });\n    } else {\n      toggleUsername({\n        username: usernameForConfirm.username,\n        isActive: !usernameForConfirm.isActive,\n      });\n    }\n    closeConfirmUsernameDialog();\n  }, [chatId, closeConfirmUsernameDialog, toggleChatUsername, toggleUsername, usernameForConfirm]);\n\n  const handleDrag = useCallback((translation: { x: number; y: number }, id: string | number) => {\n    const delta = Math.round(translation.y / USERNAME_HEIGHT_PX);\n    const index = state.orderedUsernames?.indexOf(id as string) || 0;\n    const dragOrderUsernames = state.orderedUsernames?.filter((username) => username !== id);\n\n    if (!dragOrderUsernames || !isBetween(index + delta, 0, usernameList.length)) {\n      return;\n    }\n\n    dragOrderUsernames.splice(index + delta, 0, id as string);\n    setState((current) => ({\n      ...current,\n      draggedIndex: index,\n      dragOrderUsernames,\n    }));\n  }, [state.orderedUsernames, usernameList.length]);\n\n  const handleDragEnd = useCallback(() => {\n    setState((current) => {\n      if (chatId) {\n        sortChatUsernames({\n          chatId,\n          usernames: current.dragOrderUsernames!,\n        });\n      } else {\n        sortUsernames({ usernames: current.dragOrderUsernames! });\n      }\n\n      return {\n        ...current,\n        orderedUsernames: current.dragOrderUsernames,\n        draggedIndex: undefined,\n      };\n    });\n  }, [chatId, sortChatUsernames, sortUsernames]);\n\n  return (\n    <>\n      <div className={styles.container}>\n        <h4 className={styles.header} dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('lng_usernames_subtitle')}\n        </h4>\n        <div className={styles.sortableContainer} style={`height: ${(usernames.length) * USERNAME_HEIGHT_PX}px`}>\n          {usernames.map((usernameData, i) => {\n            const isDragged = state.draggedIndex === i;\n            const draggedTop = (state.orderedUsernames?.indexOf(usernameData.username) ?? 0) * USERNAME_HEIGHT_PX;\n            const top = (state.dragOrderUsernames?.indexOf(usernameData.username) ?? 0) * USERNAME_HEIGHT_PX;\n            const subtitle = usernameData.isEditable\n              ? 'lng_usernames_edit'\n              : (usernameData.isActive ? 'lng_usernames_active' : 'lng_usernames_non_active');\n\n            return (\n              <Draggable\n                key={usernameData.username}\n                id={usernameData.username}\n                onDrag={handleDrag}\n                onDragEnd={handleDragEnd}\n                style={`top: ${isDragged ? draggedTop : top}px;`}\n                knobStyle={`${lang.isRtl ? 'left' : 'right'}: 3rem;`}\n                isDisabled={!usernameData.isActive}\n              >\n                <ListItem\n                  key={usernameData.username}\n                  className={buildClassName('drag-item no-icon', styles.item)}\n                  narrow\n                  secondaryIcon=\"more\"\n                  icon={usernameData.isActive ? 'link' : 'link-broken'}\n                  multiline\n                  contextActions={[\n                    {\n                      handler: () => {\n                        handleCopyUsername(usernameData.username);\n                      },\n                      title: lang('Copy'),\n                      icon: 'copy',\n                    },\n                  ]}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => {\n                    handleUsernameClick(usernameData);\n                  }}\n                >\n                  <span className=\"title\">@{usernameData.username}</span>\n                  <span className=\"subtitle\">{lang(subtitle)}</span>\n                </ListItem>\n              </Draggable>\n            );\n          })}\n        </div>\n        <p className={styles.description} dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('lng_usernames_description')}\n        </p>\n      </div>\n      <ConfirmDialog\n        isOpen={Boolean(usernameForConfirm)}\n        onClose={closeConfirmUsernameDialog}\n        title={lang(usernameForConfirm?.isActive ? 'Username.DeactivateAlertTitle' : 'Username.ActivateAlertTitle')}\n        text={lang(usernameForConfirm?.isActive ? 'Username.DeactivateAlertText' : 'Username.ActivateAlertText')}\n        confirmLabel={lang(usernameForConfirm?.isActive\n          ? 'Username.DeactivateAlertHide'\n          : 'Username.ActivateAlertShow')}\n        confirmHandler={handleUsernameToggle}\n        confirmIsDestructive={!usernameForConfirm?.isActive}\n      />\n    </>\n  );\n};\n\nexport default memo(ManageUsernames);\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"PaO1MMi5\",\"header\":\"wSswdVkR\",\"description\":\"oiJc22Aj\",\"sortableContainer\":\"lAeeBh9K\",\"item\":\"l04OwRBg\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { TME_LINK_PREFIX } from '../../config';\nimport { debounce } from '../../util/schedulers';\nimport {\n  isUsernameValid, MAX_USERNAME_LENGTH, MIN_UPDATE_USERNAME_LENGTH, USERNAME_REGEX,\n} from '../../util/username';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport InputText from '../ui/InputText';\n\ntype OwnProps = {\n  currentUsername?: string;\n  asLink?: boolean;\n  isLoading?: boolean;\n  isUsernameAvailable?: boolean;\n  checkedUsername?: string;\n  onChange: (value: string) => void;\n};\n\nconst LINK_PREFIX_REGEX = /https:\\/\\/t\\.me\\/?/i;\n\nconst runDebouncedForCheckUsername = debounce((cb) => cb(), 250, false);\n\nconst UsernameInput: FC<OwnProps> = ({\n  currentUsername,\n  asLink,\n  isLoading,\n  isUsernameAvailable,\n  checkedUsername,\n  onChange,\n}) => {\n  const { checkUsername, checkPublicLink } = getActions();\n  const [username, setUsername] = useState(currentUsername || '');\n\n  const lang = useOldLang();\n  const langPrefix = asLink ? 'SetUrl' : 'Username';\n  const label = asLink ? lang('SetUrlPlaceholder') : lang('Username');\n\n  const previousIsUsernameAvailable = usePreviousDeprecated(isUsernameAvailable);\n  const renderingIsUsernameAvailable = currentUsername !== username\n    ? (isUsernameAvailable ?? previousIsUsernameAvailable) : undefined;\n  const isChecking = username && currentUsername !== username && checkedUsername !== username;\n\n  const [usernameSuccess, usernameError] = useMemo(() => {\n    if (!username.length) {\n      return [];\n    }\n\n    if (username.length < MIN_UPDATE_USERNAME_LENGTH) {\n      return [undefined, lang(`${langPrefix}InvalidShort`)];\n    }\n    if (username.length > MAX_USERNAME_LENGTH) {\n      return [undefined, lang(`${langPrefix}InvalidLong`)];\n    }\n    if (!USERNAME_REGEX.test(username)) {\n      return [undefined, lang(`${langPrefix}Invalid`)];\n    }\n\n    if (renderingIsUsernameAvailable === undefined || isChecking) {\n      return [];\n    }\n\n    // Variable `isUsernameAvailable` is initialized with `undefined`, so a strict false check is required\n    return [\n      renderingIsUsernameAvailable ? lang(`${langPrefix}Available`, label) : undefined,\n      renderingIsUsernameAvailable === false ? lang(`${langPrefix}InUse`) : undefined,\n    ];\n  }, [username, renderingIsUsernameAvailable, isChecking, lang, langPrefix, label]);\n\n  useEffect(() => {\n    setUsername(currentUsername || '');\n  }, [asLink, currentUsername]);\n\n  const handleUsernameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.trim();\n    // Prevent prefix editing\n    if (asLink && !value.match(LINK_PREFIX_REGEX)) {\n      if (!value.length) {\n        setUsername('');\n        onChange?.('');\n      }\n      return;\n    }\n    const newUsername = value.replace(LINK_PREFIX_REGEX, '');\n\n    setUsername(newUsername);\n\n    const isValid = newUsername === '' ? true : isUsernameValid(newUsername, true);\n    if (!isValid) return;\n\n    onChange?.(newUsername);\n\n    runDebouncedForCheckUsername(() => {\n      if (newUsername !== currentUsername) {\n        const check = asLink ? checkPublicLink : checkUsername;\n        check({ username: newUsername });\n      }\n    });\n  }, [asLink, checkPublicLink, checkUsername, currentUsername, onChange]);\n\n  return (\n    <InputText\n      value={`${asLink ? TME_LINK_PREFIX : ''}${username}`}\n      onChange={handleUsernameChange}\n      label={isChecking ? lang('Checking') : label}\n      error={usernameError}\n      success={usernameSuccess}\n      readOnly={isLoading}\n      teactExperimentControlled\n    />\n  );\n};\n\nexport default memo(UsernameInput);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUsername } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ProfileEditProgress } from '../../../types';\n\nimport { PURCHASE_USERNAME, TME_LINK_PREFIX, USERNAME_PURCHASE_ERROR } from '../../../config';\nimport { getChatAvatarHash } from '../../../global/helpers';\nimport { selectTabState, selectUser, selectUserFullInfo } from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport { throttle } from '../../../util/schedulers';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport Icon from '../../common/icons/Icon';\nimport ManageUsernames from '../../common/ManageUsernames';\nimport SafeLink from '../../common/SafeLink';\nimport UsernameInput from '../../common/UsernameInput';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport Spinner from '../../ui/Spinner';\nimport TextArea from '../../ui/TextArea';\n\ntype OwnProps = {\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentAvatarHash?: string;\n  currentFirstName?: string;\n  currentLastName?: string;\n  currentBio?: string;\n  progress?: ProfileEditProgress;\n  checkedUsername?: string;\n  editUsernameError?: string;\n  isUsernameAvailable?: boolean;\n  maxBioLength: number;\n  usernames?: ApiUsername[];\n};\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst ERROR_FIRST_NAME_MISSING = 'Please provide your first name';\n\nconst SettingsEditProfile: FC<OwnProps & StateProps> = ({\n  isActive,\n  currentAvatarHash,\n  currentFirstName,\n  currentLastName,\n  currentBio,\n  progress,\n  checkedUsername,\n  editUsernameError,\n  isUsernameAvailable,\n  maxBioLength,\n  usernames,\n  onReset,\n}) => {\n  const {\n    loadCurrentUser,\n    updateProfile,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const firstEditableUsername = useMemo(() => usernames?.find(({ isEditable }) => isEditable), [usernames]);\n  const currentUsername = firstEditableUsername?.username || '';\n  const [isUsernameTouched, setIsUsernameTouched] = useState(false);\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [error, setError] = useState<string | undefined>();\n\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [firstName, setFirstName] = useState(currentFirstName || '');\n  const [lastName, setLastName] = useState(currentLastName || '');\n  const [bio, setBio] = useState(currentBio || '');\n  const [editableUsername, setEditableUsername] = useState<string | false>(currentUsername);\n\n  const currentAvatarBlobUrl = useMedia(currentAvatarHash, false, ApiMediaFormat.BlobUrl);\n\n  const isLoading = progress === ProfileEditProgress.InProgress;\n  const isUsernameError = editableUsername === false;\n\n  const previousIsUsernameAvailable = usePreviousDeprecated(isUsernameAvailable);\n  const renderingIsUsernameAvailable = isUsernameAvailable ?? previousIsUsernameAvailable;\n  const shouldRenderUsernamesManage = usernames && usernames.length > 1;\n\n  const isSaveButtonShown = useMemo(() => {\n    if (isUsernameError) {\n      return false;\n    }\n\n    return Boolean(photo) || isProfileFieldsTouched || (isUsernameTouched && renderingIsUsernameAvailable === true);\n  }, [isUsernameError, photo, isProfileFieldsTouched, isUsernameTouched, renderingIsUsernameAvailable]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadCurrentUser();\n    });\n  }, [loadCurrentUser]);\n\n  useEffect(() => {\n    setPhoto(undefined);\n  }, [currentAvatarBlobUrl]);\n\n  useEffect(() => {\n    setFirstName(currentFirstName || '');\n    setLastName(currentLastName || '');\n    setBio(currentBio || '');\n  }, [currentFirstName, currentLastName, currentBio]);\n\n  useEffect(() => {\n    setEditableUsername(currentUsername || '');\n  }, [currentUsername]);\n\n  useEffect(() => {\n    if (progress === ProfileEditProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setIsUsernameTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handlePhotoChange = useCallback((newPhoto: File) => {\n    setPhoto(newPhoto);\n  }, []);\n\n  const handleFirstNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleLastNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleBioChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setBio(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleUsernameChange = useCallback((value: string | false) => {\n    setEditableUsername(value);\n    setIsUsernameTouched(currentUsername !== value);\n  }, [currentUsername]);\n\n  const handleProfileSave = useCallback(() => {\n    const trimmedFirstName = firstName.trim();\n    const trimmedLastName = lastName.trim();\n    const trimmedBio = bio.trim();\n\n    if (!editableUsername) return;\n\n    if (!trimmedFirstName.length) {\n      setError(ERROR_FIRST_NAME_MISSING);\n      return;\n    }\n\n    updateProfile({\n      photo,\n      ...(isProfileFieldsTouched && {\n        firstName: trimmedFirstName,\n        lastName: trimmedLastName,\n        bio: trimmedBio,\n      }),\n      ...(isUsernameTouched && {\n        username: editableUsername,\n      }),\n    });\n  }, [\n    photo,\n    firstName, lastName, bio, isProfileFieldsTouched,\n    editableUsername, isUsernameTouched,\n    updateProfile,\n  ]);\n\n  function renderPurchaseLink() {\n    const purchaseInfoLink = `${TME_LINK_PREFIX}${PURCHASE_USERNAME}`;\n\n    return (\n      <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {(lang('lng_username_purchase_available') as string)\n          .replace('{link}', '%PURCHASE_LINK%')\n          .split('%')\n          .map((s) => {\n            return (s === 'PURCHASE_LINK' ? <SafeLink url={purchaseInfoLink} text={`@${PURCHASE_USERNAME}`} /> : s);\n          })}\n      </p>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content no-border custom-scroll\">\n        <div className=\"settings-item\">\n          <div className=\"settings-input\">\n            <AvatarEditable\n              currentAvatarBlobUrl={currentAvatarBlobUrl}\n              onChange={handlePhotoChange}\n              title=\"Edit your profile photo\"\n              disabled={isLoading}\n            />\n            <InputText\n              value={firstName}\n              onChange={handleFirstNameChange}\n              label={lang('FirstName')}\n              disabled={isLoading}\n              error={error === ERROR_FIRST_NAME_MISSING ? error : undefined}\n            />\n            <InputText\n              value={lastName}\n              onChange={handleLastNameChange}\n              label={lang('LastName')}\n              disabled={isLoading}\n            />\n            <TextArea\n              value={bio}\n              onChange={handleBioChange}\n              label={lang('UserBio')}\n              disabled={isLoading}\n              maxLength={maxBioLength}\n              maxLengthIndicator={maxBioLength ? (maxBioLength - bio.length).toString() : undefined}\n            />\n          </div>\n\n          <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('lng_settings_about_bio'), ['br', 'simple_markdown'])}\n          </p>\n        </div>\n\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('Username')}</h4>\n\n          <div className=\"settings-input\">\n            <UsernameInput\n              currentUsername={currentUsername}\n              isLoading={isLoading}\n              isUsernameAvailable={isUsernameAvailable}\n              checkedUsername={checkedUsername}\n              onChange={handleUsernameChange}\n            />\n          </div>\n\n          {editUsernameError === USERNAME_PURCHASE_ERROR && renderPurchaseLink()}\n          <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('UsernameHelp'), ['br', 'simple_markdown'])}\n          </p>\n          {editableUsername && (\n            <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang('lng_username_link')}<br />\n              <span className=\"username-link\">{TME_LINK_PREFIX}{editableUsername}</span>\n            </p>\n          )}\n        </div>\n\n        {shouldRenderUsernamesManage && (\n          <ManageUsernames\n            usernames={usernames}\n            onEditUsername={setEditableUsername}\n          />\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={isSaveButtonShown}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentUserId } = global;\n    const {\n      progress, isUsernameAvailable, checkedUsername, error: editUsernameError,\n    } = selectTabState(global).profileEdit || {};\n    const currentUser = currentUserId ? selectUser(global, currentUserId) : undefined;\n\n    const maxBioLength = selectCurrentLimit(global, 'aboutLength');\n\n    if (!currentUser) {\n      return {\n        progress,\n        checkedUsername,\n        isUsernameAvailable,\n        editUsernameError,\n        maxBioLength,\n      };\n    }\n\n    const {\n      firstName: currentFirstName,\n      lastName: currentLastName,\n      usernames,\n    } = currentUser;\n    const currentUserFullInfo = currentUserId ? selectUserFullInfo(global, currentUserId) : undefined;\n    const currentAvatarHash = getChatAvatarHash(currentUser);\n\n    return {\n      currentAvatarHash,\n      currentFirstName,\n      currentLastName,\n      currentBio: currentUserFullInfo?.bio,\n      progress,\n      isUsernameAvailable,\n      checkedUsername,\n      editUsernameError,\n      maxBioLength,\n      usernames,\n    };\n  },\n)(SettingsEditProfile));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { DEBUG_LOG_FILENAME } from '../../../config';\nimport { selectSharedSettings } from '../../../global/selectors/sharedState';\nimport {\n  IS_ELECTRON,\n  IS_SNAP_EFFECT_SUPPORTED,\n  IS_WAVE_TRANSFORM_SUPPORTED,\n} from '../../../util/browser/windowEnvironment';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport download from '../../../util/download';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport { animateSnap } from '../../main/visualEffects/SnapEffectContainer';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  shouldForceHttpTransport?: boolean;\n  shouldAllowHttpTransport?: boolean;\n  shouldCollectDebugLogs?: boolean;\n  shouldDebugExportedSenders?: boolean;\n};\n\nconst SettingsExperimental: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  shouldForceHttpTransport,\n  shouldAllowHttpTransport,\n  shouldCollectDebugLogs,\n  shouldDebugExportedSenders,\n}) => {\n  const { requestConfetti, setSharedSettingOption, requestWave } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const snapButtonRef = useRef<HTMLDivElement>(null);\n  const [isSnapButtonAnimating, setIsSnapButtonAnimating] = useState(false);\n\n  const lang = useOldLang();\n\n  const [isAutoUpdateEnabled, setIsAutoUpdateEnabled] = useState(false);\n  useEffect(() => {\n    window.electron?.getIsAutoUpdateEnabled().then(setIsAutoUpdateEnabled);\n  }, []);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleDownloadLog = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    const url = URL.createObjectURL(file);\n    download(url, DEBUG_LOG_FILENAME);\n  });\n\n  const handleIsAutoUpdateEnabledChange = useCallback((isChecked: boolean) => {\n    window.electron?.setIsAutoUpdateEnabled(isChecked);\n  }, []);\n\n  const handleRequestWave = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    requestWave({ startX: e.clientX, startY: e.clientY });\n  });\n\n  const handleRequestConfetti = useLastCallback(() => {\n    requestConfetti({ withStars: true });\n  });\n\n  const handleSnap = useLastCallback(() => {\n    const button = snapButtonRef.current;\n    if (!button) return;\n\n    if (animateSnap(button)) {\n      setIsSnapButtonAnimating(true);\n      // Manual reset for debug\n      setTimeout(() => {\n        setIsSnapButtonAnimating(false);\n      }, 1500);\n    }\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Experimental}\n          size={200}\n          className=\"experimental-duck\"\n          nonInteractive\n          noLoop={false}\n        />\n        <p className=\"settings-item-description pt-3\" dir=\"auto\">{lang('lng_settings_experimental_about')}</p>\n      </div>\n      <div className=\"settings-item\">\n        <ListItem\n          onClick={handleRequestConfetti}\n          icon=\"animations\"\n        >\n          <div className=\"title\">Launch some confetti!</div>\n        </ListItem>\n        <ListItem\n          onClick={handleRequestWave}\n          icon=\"story-expired\"\n          disabled={!IS_WAVE_TRANSFORM_SUPPORTED}\n        >\n          <div className=\"title\">Start wave</div>\n        </ListItem>\n        <ListItem\n          ref={snapButtonRef}\n          onClick={handleSnap}\n          icon=\"spoiler\"\n          disabled={!IS_SNAP_EFFECT_SUPPORTED}\n          style={isSnapButtonAnimating ? 'visibility: hidden' : ''}\n        >\n          <div className=\"title\">Vaporize this button</div>\n        </ListItem>\n\n        <Checkbox\n          label=\"Allow HTTP Transport\"\n          checked={Boolean(shouldAllowHttpTransport)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSharedSettingOption({ shouldAllowHttpTransport: !shouldAllowHttpTransport })}\n        />\n\n        <Checkbox\n          label=\"Force HTTP Transport\"\n          disabled={!shouldAllowHttpTransport}\n          checked={Boolean(shouldForceHttpTransport)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSharedSettingOption({ shouldForceHttpTransport: !shouldForceHttpTransport })}\n        />\n\n        <Checkbox\n          label={lang('DebugMenuEnableLogs')}\n          checked={Boolean(shouldCollectDebugLogs)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSharedSettingOption({ shouldCollectDebugLogs: !shouldCollectDebugLogs })}\n        />\n\n        <Checkbox\n          label=\"Enable exported senders debug\"\n          checked={Boolean(shouldDebugExportedSenders)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSharedSettingOption({ shouldDebugExportedSenders: !shouldDebugExportedSenders })}\n        />\n\n        {IS_ELECTRON && (\n          <Checkbox\n            label=\"Enable autoupdates\"\n            checked={Boolean(isAutoUpdateEnabled)}\n            onCheck={handleIsAutoUpdateEnabledChange}\n          />\n        )}\n\n        <ListItem\n          onClick={handleDownloadLog}\n          icon=\"bug\"\n        >\n          <div className=\"title\">Download log</div>\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const {\n      shouldForceHttpTransport,\n      shouldAllowHttpTransport,\n      shouldCollectDebugLogs,\n      shouldDebugExportedSenders,\n    } = selectSharedSettings(global);\n\n    return {\n      shouldForceHttpTransport,\n      shouldAllowHttpTransport,\n      shouldCollectDebugLogs,\n      shouldDebugExportedSenders,\n    };\n  },\n)(SettingsExperimental));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { SharedSettings, ThemeKey, TimeFormat } from '../../../types';\nimport type { IRadioOption } from '../../ui/RadioGroup';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectSharedSettings } from '../../../global/selectors/sharedState';\nimport {\n  IS_ANDROID, IS_ELECTRON, IS_IOS, IS_MAC_OS, IS_WINDOWS,\n} from '../../../util/browser/windowEnvironment';\nimport { setTimeFormat } from '../../../util/oldLangProvider';\nimport { getSystemTheme } from '../../../util/systemTheme';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps =\n  Pick<SharedSettings, (\n    'messageTextSize' |\n    'messageSendKeyCombo' |\n    'timeFormat' |\n    'theme' |\n    'shouldUseSystemTheme'\n  )>;\n\nconst SettingsGeneral: FC<OwnProps & StateProps> = ({\n  isActive,\n  messageTextSize,\n  messageSendKeyCombo,\n  timeFormat,\n  theme,\n  shouldUseSystemTheme,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    setSharedSettingOption,\n  } = getActions();\n\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const timeFormatOptions: IRadioOption[] = [{\n    label: lang('SettingsTimeFormat12'),\n    value: '12h',\n  }, {\n    label: lang('SettingsTimeFormat24'),\n    value: '24h',\n  }];\n\n  const appearanceThemeOptions: IRadioOption[] = [{\n    label: lang('EmptyChatAppearanceLight'),\n    value: 'light',\n  }, {\n    label: lang('EmptyChatAppearanceDark'),\n    value: 'dark',\n  }, {\n    label: lang('EmptyChatAppearanceSystem'),\n    value: 'auto',\n  }];\n\n  const keyboardSendOptions = !isMobileDevice ? [\n    { value: 'enter', label: lang('SettingsSendEnter'), subLabel: lang('SettingsSendEnterDescription') },\n    {\n      value: 'ctrl-enter',\n      label: lang(IS_MAC_OS || IS_IOS ? 'SettingsSendCmdenter' : 'SettingsSendCtrlenter'),\n      subLabel: lang('SettingsSendPlusEnterDescription'),\n    },\n  ] : undefined;\n\n  const handleMessageTextSizeChange = useCallback((newSize: number) => {\n    document.documentElement.style.setProperty(\n      '--composer-text-size', `${Math.max(newSize, IS_IOS ? 16 : 15)}px`,\n    );\n    document.documentElement.style.setProperty('--message-meta-height', `${Math.floor(newSize * 1.3125)}px`);\n    document.documentElement.style.setProperty('--message-text-size', `${newSize}px`);\n    document.documentElement.setAttribute('data-message-text-size', newSize.toString());\n\n    setSharedSettingOption({ messageTextSize: newSize });\n  }, []);\n\n  const handleAppearanceThemeChange = useCallback((value: string) => {\n    const newTheme = value === 'auto' ? getSystemTheme() : value as ThemeKey;\n\n    setSharedSettingOption({ theme: newTheme });\n    setSharedSettingOption({ shouldUseSystemTheme: value === 'auto' });\n  }, []);\n\n  const handleTimeFormatChange = useCallback((newTimeFormat: string) => {\n    setSharedSettingOption({ timeFormat: newTimeFormat as TimeFormat });\n    setSharedSettingOption({ wasTimeFormatSetManually: true });\n\n    setTimeFormat(newTimeFormat as TimeFormat);\n  }, []);\n\n  const handleMessageSendComboChange = useCallback((newCombo: string) => {\n    setSharedSettingOption({ messageSendKeyCombo: newCombo as SharedSettings['messageSendKeyCombo'] });\n  }, []);\n\n  const [isTrayIconEnabled, setIsTrayIconEnabled] = useState(false);\n  useEffect(() => {\n    window.electron?.getIsTrayIconEnabled().then(setIsTrayIconEnabled);\n  }, []);\n\n  const handleIsTrayIconEnabledChange = useCallback((isChecked: boolean) => {\n    window.electron?.setIsTrayIconEnabled(isChecked);\n  }, []);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('Settings')}</h4>\n\n        <RangeSlider\n          label={lang('TextSize')}\n          min={12}\n          max={20}\n          value={messageTextSize}\n          onChange={handleMessageTextSizeChange}\n        />\n\n        <ListItem\n          icon=\"photo\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.GeneralChatBackground)}\n        >\n          {lang('ChatBackground')}\n        </ListItem>\n\n        {IS_ELECTRON && IS_WINDOWS && (\n          <Checkbox\n            label={lang('SettingsTray')}\n            checked={Boolean(isTrayIconEnabled)}\n            onCheck={handleIsTrayIconEnabledChange}\n          />\n        )}\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('Theme')}\n        </h4>\n        <RadioGroup\n          name=\"theme\"\n          options={appearanceThemeOptions}\n          selected={shouldUseSystemTheme ? 'auto' : theme}\n          onChange={handleAppearanceThemeChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('SettingsTimeFormat')}\n        </h4>\n        <RadioGroup\n          name=\"timeformat\"\n          options={timeFormatOptions}\n          selected={timeFormat}\n          onChange={handleTimeFormatChange}\n        />\n      </div>\n\n      {keyboardSendOptions && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('SettingsKeyboard')}</h4>\n\n          <RadioGroup\n            name=\"keyboard-send-settings\"\n            options={keyboardSendOptions}\n            onChange={handleMessageSendComboChange}\n            selected={messageSendKeyCombo}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      theme,\n      shouldUseSystemTheme,\n      messageSendKeyCombo,\n      messageTextSize,\n      timeFormat,\n    } = selectSharedSettings(global);\n\n    return {\n      messageSendKeyCombo,\n      messageTextSize,\n      timeFormat,\n      theme,\n      shouldUseSystemTheme,\n    };\n  },\n)(SettingsGeneral));\n","import { AnimBgRender } from './AnimBackgroundRender';\nimport { BaseAnimBgRender } from './BaseAnimBackgroundRender';\n\n// eslint-disable-next-line no-null/no-null\nlet OFFSCR_RENDERER: AnimBgRender | null = null;\nlet OFFSCR_RENDERER_REFCNT = 0;\n\nexport class PreviewAnimgBgRender extends BaseAnimBgRender {\n  private ctx: ImageBitmapRenderingContext | null;\n\n  private renderer: AnimBgRender;\n\n  // eslint-disable-next-line class-methods-use-this\n  syncState() {}\n\n  constructor(canvas: HTMLCanvasElement | null, container: HTMLDivElement | null) {\n    super(canvas, container);\n\n    // @ts-ignore\n    this.ctx = this.canvas.getContext('bitmaprenderer');\n\n    if (!OFFSCR_RENDERER) {\n      OFFSCR_RENDERER_REFCNT = 1;\n      // eslint-disable-next-line no-null/no-null\n      OFFSCR_RENDERER = new AnimBgRender(null, null);\n    } else {\n      OFFSCR_RENDERER_REFCNT++;\n    }\n\n    this.renderer = OFFSCR_RENDERER;\n  }\n\n  public detach(): void {\n    OFFSCR_RENDERER_REFCNT--;\n    if (OFFSCR_RENDERER_REFCNT === 0) {\n      // eslint-disable-next-line no-null/no-null\n      OFFSCR_RENDERER = null;\n    }\n\n    super.detach();\n  }\n\n  protected render() {\n    if (!this.ctx) return;\n\n    const bm = this.renderer.renderBitmap(\n      [this.canvas.width, this.canvas.height],\n      this.colors,\n      this.curPos,\n      this.getTransitionProgress(),\n    );\n    this.ctx.transferFromImageBitmap(bm);\n  }\n}\n","/* eslint-disable no-null/no-null */\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport type { ApiWallpaper } from '../../../api/types';\nimport type { ThemeKey, WallPaperPatternThemeSettings } from '../../../types';\nimport { UPLOADING_WALLPAPER_SLUG } from '../../../types';\n\nimport { CUSTOM_BG_CACHE_NAME } from '../../../config';\nimport { selectCanAnimateInterface } from '../../../global/selectors';\nimport { transformStringsToColors } from '../../../util/BaseAnimBackgroundRender';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport * as cacheApi from '../../../util/cacheApi';\nimport { fetchBlob } from '../../../util/files';\nimport { PreviewAnimgBgRender } from '../../../util/PreviewBackgroundRender';\n\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './WallpaperTile.scss';\n\ntype OwnProps = {\n  wallpaper: ApiWallpaper;\n  theme: ThemeKey;\n  fill?: WallPaperPatternThemeSettings;\n  isSelected: boolean;\n  onClick: (slug?: string, settings?: WallPaperPatternThemeSettings) => void;\n};\n\nconst WallpaperTile: FC<OwnProps> = ({\n  wallpaper,\n  theme,\n  fill,\n  isSelected,\n  onClick,\n}) => {\n  const { slug, document } = wallpaper;\n  const localMediaHash = `wallpaper${document?.id!}`;\n  const localBlobUrl = document?.previewBlobUrl;\n  const previewBlobUrl = useMedia(`${localMediaHash}?size=m`);\n\n  const thumbRef = useCanvasBlur(document?.thumbnail?.dataUri, Boolean(previewBlobUrl), true);\n\n  const mouseRef = useRef<HTMLDivElement>(null);\n  const bgRef = useRef<HTMLCanvasElement>(null);\n  const animDivRef = useRef<HTMLDivElement>(null);\n  const [renderer, setRenderer] = useState<PreviewAnimgBgRender | null>(null);\n\n  const isGradientWithoutPattern = !fill?.pattern && fill?.settings;\n\n  useEffect(() => {\n    if (!bgRef.current || !animDivRef.current) return () => {};\n    const renderer2 = new PreviewAnimgBgRender(bgRef.current, animDivRef.current);\n    setRenderer(renderer2);\n    renderer2.setColors(transformStringsToColors({\n      first: fill?.settings.backgroundColor,\n      second: fill?.settings.secondBackgroundColor,\n      third: fill?.settings.thirdBackgroundColor,\n      fourth: fill?.settings.fourthBackgroundColor,\n    }));\n    return () => renderer2?.detach();\n  }, [bgRef, animDivRef,\n    fill?.settings.backgroundColor,\n    fill?.settings.secondBackgroundColor,\n    fill?.settings.thirdBackgroundColor,\n    fill?.settings.fourthBackgroundColor]);\n\n  const { transitionClassNames } = useShowTransitionDeprecated(\n    Boolean(previewBlobUrl || localBlobUrl),\n    undefined,\n    undefined,\n    'slow',\n  );\n  const isLoadingRef = useRef(false);\n  const [isLoadAllowed, setIsLoadAllowed] = useState(false);\n\n  const res = useMediaWithLoadProgress(localMediaHash, !isLoadAllowed || !slug);\n  const fullMedia: string | undefined = res.mediaData;\n  const loadProgress = res.loadProgress;\n\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n  const { shouldRender: shouldRenderSpinner, transitionClassNames: spinnerClassNames } = useShowTransitionDeprecated(\n    (isLoadAllowed && !fullMedia) || slug === UPLOADING_WALLPAPER_SLUG,\n    undefined,\n    wasLoadDisabled,\n    'slow',\n  );\n\n  // To prevent triggering of the effect for useCallback\n  const cacheKeyRef = useRef<string>();\n  cacheKeyRef.current = theme;\n\n  const canAnimate = selectCanAnimateInterface(getGlobal());\n\n  useEffect(() => {\n    const handleMouse = () => {\n      if (canAnimate) {\n        renderer?.nextState();\n      }\n    };\n\n    if (mouseRef.current && !IS_TOUCH_ENV && canAnimate) {\n      mouseRef.current.addEventListener('mouseenter', handleMouse);\n    }\n\n    const mouseRefCurr = mouseRef.current;\n\n    return () => {\n      mouseRefCurr?.removeEventListener('mouseenter', handleMouse);\n    };\n  }, [canAnimate, mouseRef, renderer]);\n\n  const handleSelect = useCallback(() => {\n    (async () => {\n      const blob = await fetchBlob(fullMedia!);\n      await cacheApi.save(CUSTOM_BG_CACHE_NAME, cacheKeyRef.current!, blob);\n      onClick(slug, fill);\n    })();\n  }, [fill, fullMedia, onClick, slug]);\n\n  useEffect(() => {\n    // If we've clicked on a wallpaper, select it when full media is loaded\n    if (fullMedia && isLoadingRef.current) {\n      handleSelect();\n      isLoadingRef.current = false;\n    }\n  }, [fullMedia, handleSelect]);\n\n  const handleClick = useCallback(() => {\n    if (fullMedia || isGradientWithoutPattern) {\n      handleSelect();\n      if (canAnimate) {\n        renderer?.nextState();\n      }\n    } else {\n      isLoadingRef.current = true;\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n    }\n  }, [canAnimate, fullMedia, handleSelect, isGradientWithoutPattern, renderer]);\n\n  const className = buildClassName(\n    'WallpaperTile',\n    isSelected && 'selected',\n  );\n\n  return (\n    <div\n      className={className}\n      onClick={handleClick}\n      ref={mouseRef}\n      style={`--bg-image: url(${previewBlobUrl || localBlobUrl});`}\n    >\n      <div\n        className=\"media-inner\"\n        ref={animDivRef}\n        style={fill?.dark ? 'background: #000;' : ''}\n      >\n        <canvas ref={thumbRef} className=\"thumbnail\" />\n        <canvas ref={bgRef} className={buildClassName('thumbnail', fill?.dark && fill?.pattern && 'dark')} />\n        {!fill?.pattern && slug && !fill?.settings && (\n          <img\n            src={previewBlobUrl || localBlobUrl}\n            className={buildClassName('full-media', transitionClassNames)}\n            alt=\"\"\n            draggable={false}\n          />\n        )}\n        {((!fill?.pattern && !slug && fill?.settings)\n          || (fill?.pattern && slug && fill?.settings)) && (\n          <div\n            className={buildClassName('full-media', transitionClassNames, fill?.pattern && 'with-pattern')}\n            draggable={false}\n          />\n        )}\n\n        {shouldRenderSpinner && (\n          <div\n            className={buildClassName('spinner-container', spinnerClassNames)}\n          >\n            <ProgressSpinner progress={loadProgress} onClick={handleClick} />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(WallpaperTile);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiWallpaper } from '../../../api/types';\nimport type { ThemeKey, WallPaperPatternThemeSettings } from '../../../types';\nimport { SettingsScreens, UPLOADING_WALLPAPER_SLUG } from '../../../types';\n\nimport { DARK_THEME_PATTERN_COLOR, DEFAULT_PATTERN_COLOR } from '../../../config';\nimport { selectTheme, selectThemeValues } from '../../../global/selectors';\nimport { getAverageColor, getPatternColor, rgb2hex } from '../../../util/colors';\nimport { validateFiles } from '../../../util/files';\nimport { throttle } from '../../../util/schedulers';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport WallpaperTile from './WallpaperTile';\n\nimport './SettingsGeneralBackground.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  pattern?: WallPaperPatternThemeSettings;\n  background?: string;\n  isBlurred?: boolean;\n  loadedWallpapers?: ApiWallpaper[];\n  theme: ThemeKey;\n};\n\nconst SUPPORTED_TYPES = 'image/jpeg';\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst SettingsGeneralBackground: FC<OwnProps & StateProps> = ({\n  isActive,\n  onScreenSelect,\n  onReset,\n  background,\n  pattern,\n  isBlurred,\n  loadedWallpapers,\n  theme,\n}) => {\n  const {\n    loadWallpapers,\n    uploadWallpaper,\n    setThemeSettings,\n  } = getActions();\n\n  const themeRef = useRef<ThemeKey>();\n  themeRef.current = theme;\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadWallpapers();\n    });\n  }, [loadWallpapers]);\n\n  const handleFileSelect = useCallback((e: Event) => {\n    const { files } = e.target as HTMLInputElement;\n\n    const validatedFiles = validateFiles(files);\n    if (validatedFiles?.length) {\n      uploadWallpaper(validatedFiles[0]);\n    }\n  }, [uploadWallpaper]);\n\n  const handleUploadWallpaper = useCallback(() => {\n    openSystemFilesDialog(SUPPORTED_TYPES, handleFileSelect, true);\n  }, [handleFileSelect]);\n\n  const handleSetColor = useCallback(() => {\n    onScreenSelect(SettingsScreens.GeneralChatBackgroundColor);\n  }, [onScreenSelect]);\n\n  const handleResetToDefault = useCallback(() => {\n    setThemeSettings({\n      theme,\n      background: undefined,\n      backgroundColor: undefined,\n      isBlurred: true,\n      fill: undefined,\n      patternColor: theme === 'dark' ? DARK_THEME_PATTERN_COLOR : DEFAULT_PATTERN_COLOR,\n    });\n  }, [setThemeSettings, theme]);\n\n  const handleWallPaperSelect = useCallback(\n    (slug?: string, fill?: WallPaperPatternThemeSettings) => {\n      setThemeSettings({\n        theme: themeRef.current!,\n        background: slug,\n        fill,\n        isBlurred: fill?.pattern\n          ? false : isBlurred,\n      });\n      const currentWallpaper = loadedWallpapers\n        && loadedWallpapers.find((wallpaper) => wallpaper.slug === slug);\n      if (currentWallpaper?.document?.thumbnail) {\n        getAverageColor(currentWallpaper.document.thumbnail.dataUri).then(\n          (color) => {\n            const patternColor = getPatternColor(color);\n            const rgbColor = `#${rgb2hex(color)}`;\n            setThemeSettings({\n              theme: themeRef.current!,\n              backgroundColor: rgbColor,\n              patternColor,\n              fill,\n            });\n          },\n        );\n      } else {\n        const color: [number, number, number] = [\n          fill?.settings.backgroundColor ?? 255,\n          fill?.settings.secondBackgroundColor\n            ?? fill?.settings.backgroundColor\n            ?? 255,\n          fill?.settings.thirdBackgroundColor\n            ?? fill?.settings.backgroundColor\n            ?? 255,\n        ];\n        const patternColor = getPatternColor(color);\n        const rgbColor = `#${rgb2hex(color)}`;\n        setThemeSettings({\n          theme: themeRef.current!,\n          backgroundColor: rgbColor,\n          patternColor,\n          fill,\n        });\n      }\n    },\n    [loadedWallpapers, setThemeSettings, isBlurred],\n  );\n\n  const handleWallPaperBlurChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setThemeSettings({ theme: themeRef.current!, isBlurred: e.target.checked });\n  }, [setThemeSettings]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const isUploading = loadedWallpapers?.[0] && loadedWallpapers[0].slug === UPLOADING_WALLPAPER_SLUG;\n\n  return (\n    <div className=\"SettingsGeneralBackground settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <ListItem\n          icon=\"camera-add\"\n          className=\"mb-0\"\n          disabled={isUploading}\n          onClick={handleUploadWallpaper}\n        >\n          {lang('UploadImage')}\n        </ListItem>\n\n        <ListItem\n          icon=\"colorize\"\n          className=\"mb-0\"\n          onClick={handleSetColor}\n        >\n          {lang('SetColor')}\n        </ListItem>\n\n        <ListItem icon=\"favorite\" onClick={handleResetToDefault}>\n          {lang('ThemeResetToDefaults')}\n        </ListItem>\n\n        <Checkbox\n          disabled={!!pattern}\n          label={lang('BackgroundBlurred')}\n          checked={Boolean(isBlurred)}\n          onChange={handleWallPaperBlurChange}\n        />\n      </div>\n\n      {loadedWallpapers ? (\n        <div className=\"settings-wallpapers\">\n          {loadedWallpapers.map((wallpaper) => (\n            <WallpaperTile\n              fill={\n                wallpaper.settings\n                  ? {\n                    dark: wallpaper.dark,\n                    pattern: wallpaper.pattern,\n                    settings: wallpaper.settings,\n                  }\n                  : undefined\n              }\n              key={`${wallpaper.slug}_${wallpaper.settings?.backgroundColor}_\n              ${wallpaper.settings?.secondBackgroundColor}_\n              ${wallpaper.settings?.thirdBackgroundColor}_\n              ${wallpaper.settings?.fourthBackgroundColor}_${wallpaper.dark}`}\n              wallpaper={wallpaper}\n              theme={theme}\n              isSelected={\n                background === wallpaper.slug\n                && wallpaper.settings?.backgroundColor\n                  === pattern?.settings.backgroundColor\n                && wallpaper.settings?.secondBackgroundColor\n                  === pattern?.settings.secondBackgroundColor\n                && wallpaper.settings?.thirdBackgroundColor\n                  === pattern?.settings.thirdBackgroundColor\n                && wallpaper.settings?.fourthBackgroundColor\n                  === pattern?.settings.fourthBackgroundColor\n                && wallpaper.settings?.CONSTRUCTOR_ID\n                  === pattern?.settings.CONSTRUCTOR_ID\n                && wallpaper.settings?.SUBCLASS_OF_ID\n                  === pattern?.settings.SUBCLASS_OF_ID\n                && wallpaper.dark === pattern?.dark\n              }\n              onClick={handleWallPaperSelect}\n            />\n          ))}\n        </div>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const theme = selectTheme(global);\n    const { background, isBlurred, fill: pattern } = selectThemeValues(global, theme) || {};\n\n    const { loadedWallpapers } = global.settings;\n\n    return {\n      pattern,\n      background,\n      isBlurred,\n      loadedWallpapers,\n      theme,\n    };\n  },\n)(SettingsGeneralBackground));\n","import type { ChangeEvent, MutableRefObject, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ThemeKey } from '../../../types';\nimport type { RealTouchEvent } from '../../../util/captureEvents';\n\nimport { selectTheme, selectThemeValues } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { captureEvents } from '../../../util/captureEvents';\nimport {\n  getPatternColor, hex2rgb, hsb2rgb, rgb2hex, rgb2hsb,\n} from '../../../util/colors';\nimport { pick } from '../../../util/iteratees';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport InputText from '../../ui/InputText';\n\nimport './SettingsGeneralBackgroundColor.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  backgroundColor?: string;\n  theme: ThemeKey;\n};\n\ninterface CanvasRects {\n  colorRect: {\n    offsetLeft: number;\n    top: number;\n    width: number;\n    height: number;\n  };\n  hueRect: {\n    offsetLeft: number;\n    width: number;\n  };\n}\n\nconst DEFAULT_HSB = rgb2hsb(hex2rgb('e6ebee'));\nconst PREDEFINED_COLORS = [\n  '#e6ebee', '#b2cee1', '#008dd0', '#c6e7cb', '#c4e1a6', '#60b16e',\n  '#ccd0af', '#a6a997', '#7a7072', '#fdd7af', '#fdb76e', '#dd8851',\n];\n\nconst SettingsGeneralBackground: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  theme,\n  backgroundColor,\n}) => {\n  const { setThemeSettings } = getActions();\n\n  const themeRef = useRef<ThemeKey>();\n  themeRef.current = theme;\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const colorPickerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const huePickerRef = useRef<HTMLDivElement>(null);\n  const isFirstRunRef = useRef(true);\n\n  const [hsb, setHsb] = useState(getInitialHsb(backgroundColor));\n  // Cache for drag handlers\n  const hsbRef = useRef(hsb);\n  useEffect(() => {\n    hsbRef.current = hsb;\n  }, [hsb]);\n\n  const [isDragging, markIsDragging, unmarkIsDragging] = useFlag();\n  const [rgbInput, setRgbInput] = useState('');\n  const [hexInput, setHexInput] = useState('');\n\n  const rectsRef = useRef<CanvasRects>();\n  const colorCtxRef = useRef<CanvasRenderingContext2D>();\n\n  // Setup: cache rects, subscribe for drag events\n  useEffect(() => {\n    // We use `offsetLeft` instead of `left` to support screen transition\n    const colorRect = {\n      offsetLeft: colorPickerRef.current!.offsetLeft,\n      ...pick(colorPickerRef.current!.getBoundingClientRect(), ['top', 'width', 'height']),\n    };\n    const hueRect = {\n      offsetLeft: huePickerRef.current!.offsetLeft,\n      ...pick(huePickerRef.current!.getBoundingClientRect(), ['width']),\n    };\n\n    rectsRef.current = { colorRect, hueRect };\n\n    function handleColorDrag(e: MouseEvent | RealTouchEvent) {\n      const colorPosition = [\n        Math.min(Math.max(0, e.pageX! - colorRect.offsetLeft), colorRect.width - 1),\n        Math.min(Math.max(0, e.pageY! - colorRect.top + containerRef.current!.scrollTop), colorRect.height - 1),\n      ];\n\n      const { huePosition } = hsb2positions(hsbRef.current, rectsRef.current!);\n\n      setHsb(positions2hsb({ colorPosition, huePosition }, rectsRef.current!));\n      markIsDragging();\n\n      return true;\n    }\n\n    captureEvents(colorPickerRef.current!, {\n      onCapture: handleColorDrag,\n      onDrag: handleColorDrag,\n      onRelease: unmarkIsDragging,\n      onClick: unmarkIsDragging,\n      selectorToPreventScroll: '.SettingsGeneralBackgroundColor',\n      withCursor: true,\n    });\n\n    function handleHueDrag(e: MouseEvent | RealTouchEvent) {\n      const { colorPosition } = hsb2positions(hsbRef.current, rectsRef.current!);\n      const huePosition = Math.min(Math.max(0, e.pageX! - hueRect.offsetLeft), hueRect.width - 1);\n\n      setHsb(positions2hsb({ colorPosition, huePosition }, rectsRef.current!));\n      markIsDragging();\n\n      return true;\n    }\n\n    captureEvents(huePickerRef.current!, {\n      onCapture: handleHueDrag,\n      onDrag: handleHueDrag,\n      onRelease: unmarkIsDragging,\n      onClick: unmarkIsDragging,\n      selectorToPreventScroll: '.SettingsGeneralBackgroundColor',\n      withCursor: true,\n    });\n  }, [markIsDragging, unmarkIsDragging]);\n\n  const { colorPosition = [0, 0], huePosition = 0 } = rectsRef.current ? hsb2positions(hsb, rectsRef.current) : {};\n  const hex = rgb2hex(hsb2rgb(hsb));\n  const hue = hsb[0];\n  const hueHex = rgb2hex(hsb2rgb([hue, 1, 1]));\n\n  // Save value and update inputs when HSL changes\n  useEffect(() => {\n    const rgb = hsb2rgb(hsb);\n    const color = `#${rgb2hex(rgb)}`;\n\n    setRgbInput(rgb.join(', '));\n    setHexInput(color);\n\n    if (!isFirstRunRef.current) {\n      const patternColor = getPatternColor(rgb);\n      setThemeSettings({\n        theme: themeRef.current!,\n        background: undefined,\n        backgroundColor: color,\n        patternColor,\n        fill: undefined,\n      });\n    }\n    isFirstRunRef.current = false;\n  }, [hsb, setThemeSettings]);\n\n  // Redraw color picker when hue changes\n  useEffect(() => {\n    drawColor(colorPickerRef.current!.firstChild as HTMLCanvasElement, hue, colorCtxRef, rectsRef);\n  }, [hue]);\n\n  // Initially draw hue picker\n  useEffect(() => {\n    drawHue(huePickerRef.current!.firstChild as HTMLCanvasElement);\n  }, []);\n\n  const handleRgbChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const rgbValue = e.currentTarget.value.replace(/[^\\d, ]/g, '').slice(0, 13);\n\n    if (rgbValue.match(/^\\d{1,3},\\s?\\d{1,3},\\s?\\d{1,3}$/)) {\n      const rgb = rgbValue.split(',').map((channel) => Number(channel.trim())) as [number, number, number];\n      setHsb(rgb2hsb(rgb));\n    }\n\n    e.currentTarget.value = rgbValue;\n  }, []);\n\n  const handleHexChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const hexValue = e.currentTarget.value.replace(/[^0-9a-fA-F]/g, '').slice(0, 6);\n\n    if (hexValue.match(/^#?[0-9a-fA-F]{6}$/)) {\n      setHsb(rgb2hsb(hex2rgb(hexValue.replace('#', ''))));\n    }\n\n    e.currentTarget.value = hexValue;\n  }, []);\n\n  const handlePredefinedColorClick = useCallback((e: React.MouseEvent<HTMLInputElement>) => {\n    setHsb(rgb2hsb(hex2rgb(e.currentTarget.dataset.color!.replace('#', ''))));\n  }, []);\n\n  const className = buildClassName(\n    'SettingsGeneralBackgroundColor settings-content custom-scroll',\n    isDragging && 'is-dragging',\n  );\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div ref={containerRef} className={className}>\n      <div className=\"settings-item pt-3\">\n        <div ref={colorPickerRef} className=\"color-picker\">\n          <canvas />\n          <div\n            className=\"handle\"\n            style={`transform: translate(${colorPosition[0]}px, ${colorPosition[1]}px); background-color: #${hex};`}\n          />\n        </div>\n        <div ref={huePickerRef} className=\"hue-picker\">\n          <canvas />\n          <div\n            className=\"handle\"\n            style={`transform: translateX(${huePosition}px); background-color: #${hueHex};`}\n          />\n        </div>\n        <div className=\"tools\">\n          <InputText value={hexInput} label=\"HEX\" onChange={handleHexChange} />\n          <InputText value={rgbInput} label=\"RGB\" onChange={handleRgbChange} />\n        </div>\n      </div>\n      <div className=\"predefined-colors\">\n        {PREDEFINED_COLORS.map((color) => (\n          <div\n            className={buildClassName('predefined-color', color === `#${hex}` ? 'active' : undefined)}\n            data-color={color}\n            style={`background-color: ${color};`}\n            onClick={handlePredefinedColorClick}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nfunction getInitialHsb(backgroundColor?: string) {\n  return backgroundColor && backgroundColor.startsWith('#')\n    ? rgb2hsb(hex2rgb(backgroundColor.replace('#', '')))\n    : DEFAULT_HSB;\n}\n\nfunction hsb2positions(hsb: [number, number, number], rects: CanvasRects) {\n  return {\n    colorPosition: [\n      Math.round((hsb[1]) * (rects.colorRect.width - 1)),\n      Math.round((1 - hsb[2]) * (rects.colorRect.height - 1)),\n    ],\n    huePosition: Math.round(hsb[0] * (rects.hueRect.width - 1)),\n  };\n}\n\nfunction positions2hsb(\n  { colorPosition, huePosition }: { colorPosition: number[]; huePosition: number },\n  rects: CanvasRects,\n): [number, number, number] {\n  return [\n    huePosition / (rects.hueRect.width - 1),\n    colorPosition[0] / (rects.colorRect.width - 1),\n    1 - colorPosition[1] / (rects.colorRect.height - 1),\n  ];\n}\n\nfunction drawColor(\n  canvas: HTMLCanvasElement,\n  hue: number,\n  colorCtxRef: MutableRefObject<CanvasRenderingContext2D | undefined>,\n  rectsRef: RefObject<CanvasRects | undefined>,\n) {\n  let w: number;\n  let h: number;\n  let ctx: CanvasRenderingContext2D;\n\n  if (!colorCtxRef.current || !rectsRef.current) {\n    // First run\n    w = canvas.offsetWidth;\n    h = canvas.offsetHeight;\n    ctx = canvas.getContext('2d')!;\n\n    canvas.width = w;\n    canvas.height = h;\n\n    colorCtxRef.current = ctx;\n  } else {\n    w = rectsRef.current.colorRect.width;\n    h = rectsRef.current.colorRect.height;\n    ctx = colorCtxRef.current;\n  }\n\n  const imgData = ctx!.createImageData(w, h);\n  const pixels = imgData.data;\n  const col = hsb2rgb([hue, 1, 1]);\n\n  let index = 0;\n\n  for (let y = 0; y < h; y++) {\n    const perY = 1 - y / (h - 1);\n    const st = [255 * perY, 255 * perY, 255 * perY];\n    const ed = [col[0] * perY, col[1] * perY, col[2] * perY];\n    for (let x = 0; x < w; x++) {\n      const perX = x / (w - 1);\n      pixels[index++] = st[0] + (ed[0] - st[0]) * perX;\n      pixels[index++] = st[1] + (ed[1] - st[1]) * perX;\n      pixels[index++] = st[2] + (ed[2] - st[2]) * perX;\n      pixels[index++] = 255;\n    }\n  }\n\n  ctx!.putImageData(imgData, 0, 0);\n}\n\nfunction drawHue(canvas: HTMLCanvasElement) {\n  const w = canvas.offsetWidth;\n  const h = 1;\n  canvas.width = w;\n  canvas.height = h;\n  const ctx = canvas.getContext('2d')!;\n\n  const imgData = ctx.createImageData(w, h);\n  const pixels = imgData.data;\n\n  let index = 0;\n\n  for (let x = 0; x < w; x++) {\n    const hue = x / (w - 1);\n    const rgb = hsb2rgb([hue, 1, 1]);\n    /* eslint-disable prefer-destructuring */\n    pixels[index++] = rgb[0];\n    pixels[index++] = rgb[1];\n    pixels[index++] = rgb[2];\n    /* eslint-enable prefer-destructuring */\n    pixels[index++] = 255;\n  }\n\n  ctx.putImageData(imgData, 0, 0);\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const theme = selectTheme(global);\n    const { backgroundColor } = selectThemeValues(global, theme) || {};\n    return {\n      backgroundColor,\n      theme,\n    };\n  },\n)(SettingsGeneralBackground));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport { SettingsScreens } from '../../../types';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLang from '../../../hooks/useLang';\nimport useMultiClick from '../../../hooks/useMultiClick';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\n\ntype OwnProps = {\n  currentScreen: SettingsScreens;\n  editedFolderId?: number;\n  onReset: () => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n};\n\nconst SettingsHeader: FC<OwnProps> = ({\n  currentScreen,\n  editedFolderId,\n  onReset,\n  onScreenSelect,\n}) => {\n  const {\n    signOut,\n    openDeleteChatFolderModal,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isSignOutDialogOpen, setIsSignOutDialogOpen] = useState(false);\n\n  const handleMultiClick = useMultiClick(5, () => {\n    onScreenSelect(SettingsScreens.Experimental);\n  });\n\n  const openSignOutConfirmation = useCallback(() => {\n    setIsSignOutDialogOpen(true);\n  }, []);\n\n  const closeSignOutConfirmation = useCallback(() => {\n    setIsSignOutDialogOpen(false);\n  }, []);\n\n  const openDeleteFolderConfirmation = useCallback(() => {\n    if (!editedFolderId) return;\n\n    openDeleteChatFolderModal({ folderId: editedFolderId });\n  }, [editedFolderId, openDeleteChatFolderModal]);\n\n  const handleSignOutMessage = useCallback(() => {\n    closeSignOutConfirmation();\n    signOut({ forceInitApi: true });\n  }, [closeSignOutConfirmation, signOut]);\n\n  const SettingsMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  function renderHeaderContent() {\n    switch (currentScreen) {\n      case SettingsScreens.EditProfile:\n        return <h3>{oldLang('lng_settings_information')}</h3>;\n      case SettingsScreens.General:\n        return <h3>{oldLang('General')}</h3>;\n      case SettingsScreens.QuickReaction:\n        return <h3>{oldLang('DoubleTapSetting')}</h3>;\n      case SettingsScreens.CustomEmoji:\n        return <h3>{oldLang('Emoji')}</h3>;\n      case SettingsScreens.Notifications:\n        return <h3>{oldLang('Notifications')}</h3>;\n      case SettingsScreens.DataStorage:\n        return <h3>{oldLang('DataSettings')}</h3>;\n      case SettingsScreens.Privacy:\n        return <h3>{oldLang('PrivacySettings')}</h3>;\n      case SettingsScreens.Language:\n        return <h3>{oldLang('Language')}</h3>;\n      case SettingsScreens.DoNotTranslate:\n        return <h3>{oldLang('DoNotTranslate')}</h3>;\n      case SettingsScreens.Stickers:\n        return <h3>{oldLang('StickersName')}</h3>;\n      case SettingsScreens.Experimental:\n        return <h3>{oldLang('lng_settings_experimental')}</h3>;\n\n      case SettingsScreens.GeneralChatBackground:\n        return <h3>{oldLang('ChatBackground')}</h3>;\n      case SettingsScreens.GeneralChatBackgroundColor:\n        return <h3>{oldLang('SetColor')}</h3>;\n\n      case SettingsScreens.PrivacyPhoneNumber:\n        return <h3>{oldLang('PrivacyPhone')}</h3>;\n      case SettingsScreens.PrivacyLastSeen:\n        return <h3>{oldLang('PrivacyLastSeen')}</h3>;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return <h3>{oldLang('Privacy.ProfilePhoto')}</h3>;\n      case SettingsScreens.PrivacyBio:\n        return <h3>{oldLang('PrivacyBio')}</h3>;\n      case SettingsScreens.PrivacyBirthday:\n        return <h3>{oldLang('PrivacyBirthday')}</h3>;\n      case SettingsScreens.PrivacyGifts:\n        return <h3>{lang('PrivacyGifts')}</h3>;\n      case SettingsScreens.PrivacyForwarding:\n        return <h3>{oldLang('PrivacyForwards')}</h3>;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return <h3>{oldLang('PrivacyVoiceMessages')}</h3>;\n      case SettingsScreens.PrivacyMessages:\n        return <h3>{oldLang('PrivacyMessages')}</h3>;\n      case SettingsScreens.PrivacyGroupChats:\n        return <h3>{oldLang('AutodownloadGroupChats')}</h3>;\n      case SettingsScreens.PrivacyPhoneCall:\n        return <h3>{oldLang('Calls')}</h3>;\n\n      case SettingsScreens.PrivacyLastSeenAllowedContacts:\n      case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n      case SettingsScreens.PrivacyBioAllowedContacts:\n      case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n        return <h3>{oldLang('AlwaysShareWith')}</h3>;\n\n      case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      case SettingsScreens.PrivacyBioDeniedContacts:\n      case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n        return <h3>{oldLang('NeverShareWith')}</h3>;\n\n      case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n      case SettingsScreens.PrivacyBirthdayAllowedContacts:\n      case SettingsScreens.PrivacyGiftsAllowedContacts:\n      case SettingsScreens.PrivacyForwardingAllowedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n      case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n      case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n        return <h3>{oldLang('AlwaysAllow')}</h3>;\n\n      case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      case SettingsScreens.PrivacyGiftsDeniedContacts:\n      case SettingsScreens.PrivacyForwardingDeniedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n        return <h3>{oldLang('NeverAllow')}</h3>;\n\n      case SettingsScreens.PrivacyNoPaidMessages:\n        return <h3>{lang('RemoveFeeTitle')}</h3>;\n\n      case SettingsScreens.Performance:\n        return <h3>{lang('MenuAnimations')}</h3>;\n\n      case SettingsScreens.ActiveSessions:\n        return <h3>{oldLang('SessionsTitle')}</h3>;\n      case SettingsScreens.ActiveWebsites:\n        return <h3>{oldLang('OtherWebSessions')}</h3>;\n      case SettingsScreens.PrivacyBlockedUsers:\n        return <h3>{oldLang('BlockedUsers')}</h3>;\n\n      case SettingsScreens.TwoFaDisabled:\n      case SettingsScreens.TwoFaEnabled:\n        return <h3>{oldLang('TwoStepVerification')}</h3>;\n      case SettingsScreens.TwoFaNewPassword:\n      case SettingsScreens.TwoFaChangePasswordNew:\n      case SettingsScreens.TwoFaChangePasswordConfirm:\n        return <h3>{oldLang('PleaseEnterCurrentPassword')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordConfirm:\n        return <h3>{oldLang('PleaseReEnterPassword')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordHint:\n      case SettingsScreens.TwoFaChangePasswordHint:\n        return <h3>{oldLang('PasswordHint')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordEmail:\n      case SettingsScreens.TwoFaRecoveryEmail:\n        return <h3>{oldLang('RecoveryEmailTitle')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordEmailCode:\n      case SettingsScreens.TwoFaRecoveryEmailCode:\n        return <h3>Recovery Email Code</h3>;\n      case SettingsScreens.TwoFaCongratulations:\n        return <h3>{oldLang('TwoStepVerificationPasswordSet')}</h3>;\n      case SettingsScreens.TwoFaChangePasswordCurrent:\n      case SettingsScreens.TwoFaTurnOff:\n      case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n        return <h3>{oldLang('PleaseEnterCurrentPassword')}</h3>;\n\n      case SettingsScreens.PasscodeDisabled:\n      case SettingsScreens.PasscodeEnabled:\n      case SettingsScreens.PasscodeNewPasscode:\n      case SettingsScreens.PasscodeNewPasscodeConfirm:\n      case SettingsScreens.PasscodeCongratulations:\n        return <h3>{oldLang('Passcode')}</h3>;\n\n      case SettingsScreens.PasscodeTurnOff:\n        return <h3>{oldLang('PasscodeController.Disable.Title')}</h3>;\n\n      case SettingsScreens.PasscodeChangePasscodeCurrent:\n      case SettingsScreens.PasscodeChangePasscodeNew:\n        return <h3>{oldLang('PasscodeController.Change.Title')}</h3>;\n\n      case SettingsScreens.PasscodeChangePasscodeConfirm:\n        return <h3>{oldLang('PasscodeController.ReEnterPasscode.Placeholder')}</h3>;\n\n      case SettingsScreens.Folders:\n        return <h3>{oldLang('Filters')}</h3>;\n      case SettingsScreens.FoldersCreateFolder:\n        return <h3>{oldLang('FilterNew')}</h3>;\n      case SettingsScreens.FoldersShare:\n        return <h3>{oldLang('FolderLinkScreen.Title')}</h3>;\n      case SettingsScreens.FoldersEditFolder:\n      case SettingsScreens.FoldersEditFolderFromChatList:\n      case SettingsScreens.FoldersEditFolderInvites:\n        return (\n          <div className=\"settings-main-header\">\n            <h3>{oldLang('FilterEdit')}</h3>\n            {Boolean(editedFolderId) && (\n              <DropdownMenu\n                className=\"settings-more-menu\"\n                trigger={SettingsMenuButton}\n                positionX=\"right\"\n              >\n                <MenuItem icon=\"delete\" destructive onClick={openDeleteFolderConfirmation}>\n                  {oldLang('Delete')}\n                </MenuItem>\n              </DropdownMenu>\n            )}\n          </div>\n        );\n      case SettingsScreens.FoldersIncludedChats:\n      case SettingsScreens.FoldersIncludedChatsFromChatList:\n      case SettingsScreens.FoldersExcludedChats:\n      case SettingsScreens.FoldersExcludedChatsFromChatList:\n        return (\n          <h3>\n            {oldLang(\n              currentScreen === SettingsScreens.FoldersIncludedChats\n                  || currentScreen === SettingsScreens.FoldersIncludedChatsFromChatList\n                ? 'FilterInclude' : 'FilterExclude',\n            )}\n          </h3>\n        );\n      default:\n        return (\n          <div className=\"settings-main-header\">\n            {/* eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions */}\n            <h3 onClick={handleMultiClick}>\n              {oldLang('SETTINGS')}\n            </h3>\n\n            <Button\n              round\n              ripple={!isMobile}\n              size=\"smaller\"\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => onScreenSelect(SettingsScreens.EditProfile)}\n              ariaLabel={oldLang('lng_settings_information')}\n            >\n              <Icon name=\"edit\" />\n            </Button>\n            <DropdownMenu\n              className=\"settings-more-menu\"\n              trigger={SettingsMenuButton}\n              positionX=\"right\"\n            >\n              <MenuItem icon=\"logout\" onClick={openSignOutConfirmation}>{oldLang('LogOutTitle')}</MenuItem>\n            </DropdownMenu>\n          </div>\n        );\n    }\n  }\n\n  return (\n    <div className=\"left-header\">\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent\"\n        onClick={onReset}\n        ariaLabel={oldLang('AccDescrGoBack')}\n      >\n        <Icon name=\"arrow-left\" />\n      </Button>\n      {renderHeaderContent()}\n      <ConfirmDialog\n        isOpen={isSignOutDialogOpen}\n        onClose={closeSignOutConfirmation}\n        text={oldLang('lng_sure_logout')}\n        confirmLabel={oldLang('AccountSettings.Logout')}\n        confirmHandler={handleSignOutMessage}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(SettingsHeader);\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nconst CLICK_TIMEOUT = 300;\n\nexport default function useMultiClick(amount: number, callback: NoneToVoidFunction) {\n  const currentAmountRef = useRef(0);\n  const timeoutRef = useRef<ReturnType<typeof setTimeout>>();\n  const handleClick = useCallback(() => {\n    currentAmountRef.current++;\n    if (currentAmountRef.current === amount) {\n      currentAmountRef.current = 0;\n      callback();\n      return;\n    }\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n\n    timeoutRef.current = setTimeout(() => {\n      currentAmountRef.current = 0;\n    }, CLICK_TIMEOUT);\n  }, [amount, callback]);\n\n  return handleClick;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { AccountSettings, LangCode, SharedSettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectIsCurrentUserPremium } from '../../../global/selectors';\nimport { selectSharedSettings } from '../../../global/selectors/sharedState';\nimport { IS_TRANSLATION_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport { oldSetLanguage } from '../../../util/oldLangProvider';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ItemPicker, { type ItemPickerOption } from '../../common/pickers/ItemPicker';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  isCurrentUserPremium: boolean;\n} & Pick<AccountSettings, 'canTranslate' | 'canTranslateChats' | 'doNotTranslate'>\n& Pick<SharedSettings, 'language' | 'languages'>;\n\nconst SettingsLanguage: FC<OwnProps & StateProps> = ({\n  isActive,\n  isCurrentUserPremium,\n  languages,\n  language,\n  canTranslate,\n  canTranslateChats,\n  doNotTranslate,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    loadLanguages,\n    setSettingOption,\n    setSharedSettingOption,\n    openPremiumModal,\n  } = getActions();\n\n  const [selectedLanguage, setSelectedLanguage] = useState<string>(language);\n  const [isLoading, markIsLoading, unmarkIsLoading] = useFlag();\n\n  const canTranslateChatsEnabled = isCurrentUserPremium && canTranslateChats;\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!languages?.length) {\n      loadLanguages();\n    }\n  }, [languages]);\n\n  const handleChange = useLastCallback((langCode: string) => {\n    setSelectedLanguage(langCode);\n    markIsLoading();\n\n    void oldSetLanguage(langCode as LangCode, () => {\n      unmarkIsLoading();\n\n      setSharedSettingOption({ language: langCode as LangCode });\n    });\n  });\n\n  const options = useMemo(() => {\n    if (!languages) return undefined;\n    const currentLangCode = (window.navigator.language || 'en').toLowerCase();\n    const shortLangCode = currentLangCode.substr(0, 2);\n\n    return languages.map(({ langCode, nativeName, name }) => ({\n      value: langCode,\n      label: nativeName,\n      subLabel: name,\n      isLoading: langCode === selectedLanguage && isLoading,\n    } satisfies ItemPickerOption)).sort((a) => {\n      return currentLangCode && (a.value === currentLangCode || a.value === shortLangCode) ? -1 : 0;\n    });\n  }, [isLoading, languages, selectedLanguage]);\n\n  const handleShouldTranslateChange = useLastCallback((newValue: boolean) => {\n    setSettingOption({ canTranslate: newValue });\n  });\n\n  const handleShouldTranslateChatsChange = useLastCallback((newValue: boolean) => {\n    setSettingOption({ canTranslateChats: newValue });\n  });\n\n  const handleShouldTranslateChatsClick = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'translations',\n      });\n    }\n  });\n\n  const doNotTranslateText = useMemo(() => {\n    if (!IS_TRANSLATION_SUPPORTED || !doNotTranslate.length) {\n      return undefined;\n    }\n\n    if (doNotTranslate.length === 1) {\n      const originalNames = new Intl.DisplayNames([language], { type: 'language' });\n      return originalNames.of(doNotTranslate[0])!;\n    }\n\n    return lang('Languages', doNotTranslate.length);\n  }, [doNotTranslate, lang, language]);\n\n  const handleDoNotSelectOpen = useLastCallback(() => {\n    onScreenSelect(SettingsScreens.DoNotTranslate);\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content settings-language custom-scroll\">\n      {IS_TRANSLATION_SUPPORTED && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('ShowTranslateButton')}\n            checked={canTranslate}\n            onCheck={handleShouldTranslateChange}\n          />\n          <Checkbox\n            label={lang('ShowTranslateChatButton')}\n            checked={canTranslateChatsEnabled}\n            disabled={!isCurrentUserPremium}\n            rightIcon={!isCurrentUserPremium ? 'lock' : undefined}\n            onClickLabel={handleShouldTranslateChatsClick}\n            onCheck={handleShouldTranslateChatsChange}\n          />\n          {(canTranslate || canTranslateChatsEnabled) && (\n            <ListItem\n              narrow\n              onClick={handleDoNotSelectOpen}\n            >\n              {lang('DoNotTranslate')}\n              <span className=\"settings-item__current-value\">{doNotTranslateText}</span>\n            </ListItem>\n          )}\n          <p className=\"settings-item-description mb-0 mt-1\">\n            {lang('lng_translate_settings_about')}\n          </p>\n        </div>\n      )}\n      <div className=\"settings-item settings-item-picker\">\n        <h4 className=\"settings-item-header\">\n          {lang('Localization.InterfaceLanguage')}\n        </h4>\n        {options ? (\n          <ItemPicker\n            items={options}\n            selectedValue={selectedLanguage}\n            forceRenderAllItems\n            onSelectedValueChange={handleChange}\n            itemInputType=\"radio\"\n            className=\"settings-picker\"\n          />\n        ) : (\n          <Loading />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      canTranslate, canTranslateChats, doNotTranslate,\n    } = global.settings.byKey;\n    const { language, languages } = selectSharedSettings(global);\n\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      isCurrentUserPremium,\n      languages,\n      language,\n      canTranslate,\n      canTranslateChats,\n      doNotTranslate,\n    };\n  },\n)(SettingsLanguage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiStarsAmount } from '../../../api/types';\nimport { SettingsScreens } from '../../../types';\n\nimport { FAQ_URL, PRIVACY_URL } from '../../../config';\nimport { formatStarsAmount } from '../../../global/helpers/payments';\nimport {\n  selectIsGiveawayGiftsPurchaseAvailable,\n  selectIsPremiumPurchaseBlocked,\n} from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport ChatExtra from '../../common/profile/ChatExtra';\nimport ProfileInfo from '../../common/ProfileInfo';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  sessionCount: number;\n  currentUserId?: string;\n  canBuyPremium?: boolean;\n  isGiveawayAvailable?: boolean;\n  starsBalance?: ApiStarsAmount;\n};\n\nconst SettingsMain: FC<OwnProps & StateProps> = ({\n  isActive,\n  currentUserId,\n  sessionCount,\n  canBuyPremium,\n  isGiveawayAvailable,\n  starsBalance,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    loadMoreProfilePhotos,\n    openPremiumModal,\n    openSupportChat,\n    openUrl,\n    openGiftRecipientPicker,\n    openStarsBalanceModal,\n  } = getActions();\n\n  const [isSupportDialogOpen, openSupportDialog, closeSupportDialog] = useFlag(false);\n\n  const lang = useLang();\n\n  useEffect(() => {\n    if (currentUserId) {\n      loadMoreProfilePhotos({ peerId: currentUserId, isPreload: true });\n    }\n  }, [currentUserId]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleOpenSupport = useLastCallback(() => {\n    openSupportChat();\n    closeSupportDialog();\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-main-menu self-profile\">\n        {currentUserId && (\n          <ProfileInfo\n            peerId={currentUserId}\n            canPlayVideo={Boolean(isActive)}\n            forceShowSelf\n          />\n        )}\n        {currentUserId && (\n          <ChatExtra\n            chatOrUserId={currentUserId}\n            isInSettings\n          />\n        )}\n      </div>\n      <div className=\"settings-main-menu\">\n        <ListItem\n          icon=\"settings\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.General)}\n        >\n          {lang('TelegramGeneralSettingsViewController')}\n        </ListItem>\n        <ListItem\n          icon=\"animations\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Performance)}\n        >\n          {lang('MenuAnimations')}\n        </ListItem>\n        <ListItem\n          icon=\"unmute\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Notifications)}\n        >\n          {lang('Notifications')}\n        </ListItem>\n        <ListItem\n          icon=\"data\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.DataStorage)}\n        >\n          {lang('DataSettings')}\n        </ListItem>\n        <ListItem\n          icon=\"lock\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Privacy)}\n        >\n          {lang('PrivacySettings')}\n        </ListItem>\n        <ListItem\n          icon=\"folder\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Folders)}\n        >\n          {lang('Filters')}\n        </ListItem>\n        <ListItem\n          icon=\"active-sessions\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.ActiveSessions)}\n        >\n          {lang('SessionsTitle')}\n          {sessionCount > 0 && (<span className=\"settings-item__current-value\">{sessionCount}</span>)}\n        </ListItem>\n        <ListItem\n          icon=\"language\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Language)}\n        >\n          {lang('Language')}\n          <span className=\"settings-item__current-value\">{lang.languageInfo.nativeName}</span>\n        </ListItem>\n        <ListItem\n          icon=\"stickers\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Stickers)}\n        >\n          {lang('MenuStickers')}\n        </ListItem>\n      </div>\n      <div className=\"settings-main-menu\">\n        {canBuyPremium && (\n          <ListItem\n            leftElement={<StarIcon className=\"icon ListItem-main-icon\" type=\"premium\" size=\"big\" />}\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openPremiumModal()}\n          >\n            {lang('TelegramPremium')}\n          </ListItem>\n        )}\n        <ListItem\n          leftElement={<StarIcon className=\"icon ListItem-main-icon\" type=\"gold\" size=\"big\" />}\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openStarsBalanceModal({})}\n        >\n          {lang('MenuStars')}\n          {Boolean(starsBalance) && (\n            <span className=\"settings-item__current-value\">\n              {formatStarsAmount(lang, starsBalance)}\n            </span>\n          )}\n        </ListItem>\n        {isGiveawayAvailable && (\n          <ListItem\n            icon=\"gift\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openGiftRecipientPicker()}\n          >\n            {lang('MenuSendGift')}\n          </ListItem>\n        )}\n      </div>\n      <div className=\"settings-main-menu\">\n        <ListItem\n          icon=\"ask-support\"\n          narrow\n          onClick={openSupportDialog}\n        >\n          {lang('AskAQuestion')}\n        </ListItem>\n        <ListItem\n          icon=\"help\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openUrl({ url: FAQ_URL })}\n        >\n          {lang('MenuTelegramFaq')}\n        </ListItem>\n        <ListItem\n          icon=\"privacy-policy\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openUrl({ url: PRIVACY_URL })}\n        >\n          {lang('MenuPrivacyPolicy')}\n        </ListItem>\n      </div>\n      <ConfirmDialog\n        isOpen={isSupportDialogOpen}\n        confirmLabel={lang('OK')}\n        title={lang('AskAQuestion')}\n        textParts={lang('MenuAskText', undefined, { withNodes: true, renderTextFilters: ['br'] })}\n        confirmHandler={handleOpenSupport}\n        onClose={closeSupportDialog}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentUserId } = global;\n    const isGiveawayAvailable = selectIsGiveawayGiftsPurchaseAvailable(global);\n    const starsBalance = global.stars?.balance;\n\n    return {\n      sessionCount: global.activeSessions.orderedHashes.length,\n      currentUserId,\n      canBuyPremium: !selectIsPremiumPurchaseBlocked(global),\n      isGiveawayAvailable,\n      starsBalance,\n    };\n  },\n)(SettingsMain));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiNotifyPeerType, ApiPeerNotifySettings } from '../../../api/types';\n\nimport {\n  checkIfNotificationsSupported,\n  checkIfOfflinePushFailed,\n  playNotifySound,\n} from '../../../util/notifications';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useRunDebounced from '../../../hooks/useRunDebounced';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  notifyDefaults?: Record<ApiNotifyPeerType, ApiPeerNotifySettings>;\n  hasContactJoinedNotifications: boolean;\n  hasWebNotifications: boolean;\n  hasPushNotifications: boolean;\n  notificationSoundVolume: number;\n};\n\nconst SettingsNotifications: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  notifyDefaults,\n  hasContactJoinedNotifications,\n  hasPushNotifications,\n  hasWebNotifications,\n  notificationSoundVolume,\n}) => {\n  const {\n    loadNotificationSettings,\n    updateContactSignUpNotification,\n    updateNotificationSettings,\n    updateWebNotificationSettings,\n  } = getActions();\n\n  useEffect(() => {\n    loadNotificationSettings();\n  }, [loadNotificationSettings]);\n\n  const runDebounced = useRunDebounced(500, true);\n\n  const areNotificationsSupported = checkIfNotificationsSupported();\n  const areOfflineNotificationsSupported = areNotificationsSupported && !checkIfOfflinePushFailed();\n\n  const handleSettingsChange = useCallback((\n    e: ChangeEvent<HTMLInputElement>,\n    peerType: ApiNotifyPeerType,\n    setting: 'mute' | 'showPreviews',\n  ) => {\n    const currentIsMuted = Boolean(notifyDefaults?.[peerType]?.mutedUntil);\n    const currentShouldShowPreviews = Boolean(notifyDefaults?.[peerType]?.shouldShowPreviews);\n\n    updateNotificationSettings({\n      peerType,\n      isMuted: setting === 'mute' ? !e.target.checked : currentIsMuted,\n      shouldShowPreviews: setting === 'showPreviews' ? e.target.checked : currentShouldShowPreviews,\n    });\n  }, [notifyDefaults]);\n\n  const handleWebNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const isEnabled = e.target.checked;\n    updateWebNotificationSettings({\n      hasWebNotifications: isEnabled,\n      ...(!isEnabled && { hasPushNotifications: false }),\n    });\n  }, [updateWebNotificationSettings]);\n\n  const handlePushNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    updateWebNotificationSettings({\n      hasPushNotifications: e.target.checked,\n    });\n  }, [updateWebNotificationSettings]);\n\n  const handlePrivateChatsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'users', 'mute');\n  }, [handleSettingsChange]);\n\n  const handlePrivateChatsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'users', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleGroupsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'groups', 'mute');\n  }, [handleSettingsChange]);\n\n  const handleGroupsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'groups', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleChannelsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'channels', 'mute');\n  }, [handleSettingsChange]);\n\n  const handleChannelsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'channels', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleContactNotificationChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    updateContactSignUpNotification({\n      isSilent: !e.target.checked,\n    });\n  }, [updateContactSignUpNotification]);\n\n  const handleVolumeChange = useCallback((volume: number) => {\n    updateWebNotificationSettings({\n      notificationSoundVolume: volume,\n    });\n    runDebounced(() => playNotifySound(undefined, volume));\n  }, [runDebounced, updateWebNotificationSettings]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('NotificationsWeb')}\n        </h4>\n        <Checkbox\n          label={lang('NotificationsWeb')}\n          subLabel={lang(hasWebNotifications ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')}\n          checked={hasWebNotifications}\n          disabled={!areNotificationsSupported}\n          onChange={handleWebNotificationsChange}\n        />\n        <Checkbox\n          label={lang('NotificationsOffline')}\n          disabled={!hasWebNotifications || !areOfflineNotificationsSupported}\n          subLabel={areOfflineNotificationsSupported\n            ? lang(hasPushNotifications ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')\n            : lang('SettingsOfflineNotificationUnsupported')}\n          checked={hasPushNotifications}\n          onChange={handlePushNotificationsChange}\n        />\n        <div className=\"settings-item-slider\">\n          <RangeSlider\n            label={lang('NotificationsSound')}\n            min={0}\n            max={10}\n            disabled={!areNotificationsSupported}\n            value={notificationSoundVolume}\n            onChange={handleVolumeChange}\n          />\n        </div>\n      </div>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('AutodownloadPrivateChats')}\n        </h4>\n\n        <Checkbox\n          label={lang('NotificationsForPrivateChats')}\n          subLabel={lang(notifyDefaults?.users?.mutedUntil\n            ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')}\n          checked={Boolean(notifyDefaults?.users?.mutedUntil)}\n          onChange={handlePrivateChatsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!notifyDefaults?.users?.mutedUntil}\n          subLabel={lang(notifyDefaults?.users?.shouldShowPreviews\n            ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')}\n          checked={Boolean(notifyDefaults?.users?.shouldShowPreviews)}\n          onChange={handlePrivateChatsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterGroups')}</h4>\n\n        <Checkbox\n          label={lang('NotificationsForGroups')}\n          subLabel={lang(notifyDefaults?.groups?.mutedUntil\n            ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')}\n          checked={Boolean(notifyDefaults?.groups?.mutedUntil)}\n          onChange={handleGroupsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!notifyDefaults?.groups?.mutedUntil}\n          subLabel={lang(notifyDefaults?.groups?.shouldShowPreviews\n            ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')}\n          checked={Boolean(notifyDefaults?.groups?.shouldShowPreviews)}\n          onChange={handleGroupsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterChannels')}</h4>\n\n        <Checkbox\n          label={lang('NotificationsForChannels')}\n          subLabel={lang(notifyDefaults?.channels?.mutedUntil\n            ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')}\n          checked={Boolean(notifyDefaults?.channels?.mutedUntil)}\n          onChange={handleChannelsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!notifyDefaults?.channels?.mutedUntil}\n          subLabel={lang(notifyDefaults?.channels?.shouldShowPreviews\n            ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')}\n          checked={Boolean(notifyDefaults?.channels?.shouldShowPreviews)}\n          onChange={handleChannelsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('PhoneOther')}</h4>\n\n        <Checkbox\n          label={lang('ContactJoined')}\n          checked={hasContactJoinedNotifications}\n          onChange={handleContactNotificationChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      hasContactJoinedNotifications: Boolean(global.settings.byKey.hasContactJoinedNotifications),\n      hasWebNotifications: global.settings.byKey.hasWebNotifications,\n      hasPushNotifications: global.settings.byKey.hasPushNotifications,\n      notificationSoundVolume: global.settings.byKey.notificationSoundVolume,\n    };\n  },\n)(SettingsNotifications));\n","import React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { AnimationLevel, PerformanceType, PerformanceTypeKey } from '../../../types';\nimport type { RegularLangKey } from '../../../types/language';\n\nimport {\n  ANIMATION_LEVEL_CUSTOM, ANIMATION_LEVEL_MAX, ANIMATION_LEVEL_MED, ANIMATION_LEVEL_MIN,\n} from '../../../config';\nimport {\n  INITIAL_PERFORMANCE_STATE_MAX,\n  INITIAL_PERFORMANCE_STATE_MID,\n  INITIAL_PERFORMANCE_STATE_MIN,\n} from '../../../global/initialState';\nimport { selectPerformanceSettings } from '../../../global/selectors';\nimport { areDeepEqual } from '../../../util/areDeepEqual';\nimport { IS_BACKDROP_BLUR_SUPPORTED, IS_SNAP_EFFECT_SUPPORTED } from '../../../util/browser/windowEnvironment';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype PerformanceSection = [RegularLangKey, PerformanceOption[]];\ntype PerformanceOption = {\n  key: PerformanceTypeKey;\n  label: RegularLangKey;\n  disabled?: boolean;\n};\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  performanceSettings: PerformanceType;\n};\n\nconst ANIMATION_LEVEL_OPTIONS: RegularLangKey[] = [\n  'SettingsPerformanceSliderLow',\n  'SettingsPerformanceSliderMedium',\n  'SettingsPerformanceSliderHigh',\n];\n\nconst ANIMATION_LEVEL_CUSTOM_OPTIONS: RegularLangKey[] = [\n  'SettingsPerformanceSliderLow',\n  'SettingsPerformanceSliderCustom',\n  'SettingsPerformanceSliderHigh',\n];\n\nconst PERFORMANCE_OPTIONS: PerformanceSection[] = [\n  ['SettingsPerformanceInterfaceAnimations', [\n    { key: 'pageTransitions', label: 'SettingsPerformancePageTransitions' },\n    { key: 'messageSendingAnimations', label: 'SettingsPerformanceSending' },\n    { key: 'mediaViewerAnimations', label: 'SettingsPerformanceMediaViewer' },\n    { key: 'messageComposerAnimations', label: 'SettingsPerformanceComposer' },\n    { key: 'contextMenuAnimations', label: 'SettingsPerformanceContextAnimation' },\n    { key: 'contextMenuBlur', label: 'SettingsPerformanceContextBlur', disabled: !IS_BACKDROP_BLUR_SUPPORTED },\n    { key: 'rightColumnAnimations', label: 'SettingsPerformanceRightColumn' },\n    { key: 'snapEffect', label: 'SettingsPerformanceThanos' },\n  ]],\n  ['SettingsPerformanceStickers', [\n    { key: 'animatedEmoji', label: 'SettingsPerformanceAnimatedEmoji' },\n    { key: 'loopAnimatedStickers', label: 'SettingsPerformanceLoopStickers' },\n    { key: 'reactionEffects', label: 'SettingsPerformanceReactionEffects' },\n    { key: 'stickerEffects', label: 'SettingsPerformanceStickerEffects' },\n  ]],\n  ['SettingsPerformanceMediaAutoplay', [\n    { key: 'autoplayGifs', label: 'SettingsPerformanceAutoplayGif' },\n    { key: 'autoplayVideos', label: 'SettingsPerformanceAutoplayVideo' },\n  ]],\n];\n\nfunction SettingsPerformance({\n  isActive,\n  performanceSettings,\n  onReset,\n}: OwnProps & StateProps) {\n  const {\n    setSharedSettingOption,\n    updatePerformanceSettings,\n  } = getActions();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const lang = useLang();\n  const [sectionExpandedStates, setSectionExpandedStates] = useState<Record<number, boolean>>({});\n\n  const sectionCheckedStates = useMemo(() => {\n    return PERFORMANCE_OPTIONS.reduce((acc, [, options], index) => {\n      acc[index] = options.every(({ key }) => performanceSettings[key]);\n\n      return acc;\n    }, {} as Record<number, boolean>);\n  }, [performanceSettings]);\n\n  const animationLevelState = useMemo(() => {\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MAX)) {\n      return ANIMATION_LEVEL_MAX;\n    }\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MIN)) {\n      return ANIMATION_LEVEL_MIN;\n    }\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MID)) {\n      return ANIMATION_LEVEL_MED;\n    }\n\n    return ANIMATION_LEVEL_CUSTOM;\n  }, [performanceSettings]);\n\n  const animationLevelOptions = useMemo(() => {\n    const options = animationLevelState === ANIMATION_LEVEL_CUSTOM\n      ? ANIMATION_LEVEL_CUSTOM_OPTIONS\n      : ANIMATION_LEVEL_OPTIONS;\n\n    return options.map((option) => lang(option));\n  }, [animationLevelState, lang]);\n\n  const handleToggleSection = useCallback((e: React.MouseEvent, index?: string) => {\n    e.preventDefault();\n    const sectionIndex = Number(index);\n\n    setSectionExpandedStates((prev) => ({\n      ...prev,\n      [sectionIndex]: !prev[sectionIndex],\n    }));\n  }, []);\n\n  const handleAnimationLevelChange = useCallback((newLevel: number) => {\n    const performance = newLevel === ANIMATION_LEVEL_MIN\n      ? INITIAL_PERFORMANCE_STATE_MIN\n      : (newLevel === ANIMATION_LEVEL_MED ? INITIAL_PERFORMANCE_STATE_MID : INITIAL_PERFORMANCE_STATE_MAX);\n\n    setSharedSettingOption({ animationLevel: newLevel as AnimationLevel });\n    updatePerformanceSettings(performance);\n  }, []);\n\n  const handlePropertyGroupChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, checked } = e.target;\n    const perfomanceSection = PERFORMANCE_OPTIONS.find(([sectionName]) => sectionName === name);\n    if (!perfomanceSection) {\n      return;\n    }\n\n    const newSettings = perfomanceSection[1].reduce((acc, { key }) => {\n      acc[key] = checked;\n      return acc;\n    }, {} as Partial<PerformanceType>);\n\n    updatePerformanceSettings(newSettings);\n  }, []);\n\n  const handlePropertyChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, checked } = e.target;\n\n    updatePerformanceSettings({ [name as PerformanceTypeKey]: checked });\n  }, []);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('SettingsPerformanceSliderTitle')}\n        </h4>\n        <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('SettingsPerformanceSliderSubtitle')}\n        </p>\n\n        <RangeSlider\n          options={animationLevelOptions}\n          value={animationLevelState === ANIMATION_LEVEL_CUSTOM ? ANIMATION_LEVEL_MED : animationLevelState}\n          onChange={handleAnimationLevelChange}\n        />\n      </div>\n\n      <div className=\"settings-item-simple settings-item__with-shifted-dropdown\">\n        <h3 className=\"settings-item-header\" dir=\"auto\">Resource-Intensive Processes</h3>\n\n        {PERFORMANCE_OPTIONS.map(([sectionName, options], index) => {\n          return (\n            <div\n              key={sectionName}\n              className=\"settings-dropdown-section\"\n            >\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name={sectionName}\n                  value={index.toString()}\n                  checked={sectionCheckedStates[index]}\n                  label={lang(sectionName)}\n                  rightIcon={sectionExpandedStates[index] ? 'up' : 'down'}\n                  onChange={handlePropertyGroupChange}\n                  onClickLabel={handleToggleSection}\n                />\n              </div>\n              {Boolean(sectionExpandedStates[index]) && (\n                <div className=\"DropdownList DropdownList--open\">\n                  {options.map(({ key, label, disabled }) => {\n                    if (key === 'snapEffect' && !IS_SNAP_EFFECT_SUPPORTED) return undefined;\n                    return (\n                      <Checkbox\n                        key={key}\n                        name={key}\n                        checked={performanceSettings[key]}\n                        label={lang(label)}\n                        disabled={disabled}\n                        onChange={handlePropertyChange}\n                      />\n                    );\n                  })}\n                </div>\n              )}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    performanceSettings: selectPerformanceSettings(global),\n  };\n})(SettingsPerformance));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPrivacySettings } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport { SettingsScreens } from '../../../types';\n\nimport {\n  selectCanSetPasscode, selectIsCurrentUserFrozen,\n  selectIsCurrentUserPremium,\n} from '../../../global/selectors';\nimport { selectSharedSettings } from '../../../global/selectors/sharedState';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  isCurrentUserPremium?: boolean;\n  hasPassword?: boolean;\n  hasPasscode?: boolean;\n  canSetPasscode?: boolean;\n  blockedCount: number;\n  webAuthCount: number;\n  isSensitiveEnabled?: boolean;\n  canChangeSensitive?: boolean;\n  canDisplayAutoarchiveSetting: boolean;\n  shouldArchiveAndMuteNewNonContact?: boolean;\n  shouldNewNonContactPeersRequirePremium?: boolean;\n  shouldChargeForMessages: boolean;\n  canDisplayChatInTitle?: boolean;\n  isCurrentUserFrozen?: boolean;\n  privacy: GlobalState['settings']['privacy'];\n};\n\nconst SettingsPrivacy: FC<OwnProps & StateProps> = ({\n  isActive,\n  isCurrentUserPremium,\n  hasPassword,\n  hasPasscode,\n  blockedCount,\n  webAuthCount,\n  isSensitiveEnabled,\n  canChangeSensitive,\n  canDisplayAutoarchiveSetting,\n  shouldArchiveAndMuteNewNonContact,\n  shouldNewNonContactPeersRequirePremium,\n  shouldChargeForMessages,\n  canDisplayChatInTitle,\n  canSetPasscode,\n  privacy,\n  onScreenSelect,\n  onReset,\n  isCurrentUserFrozen,\n}) => {\n  const {\n    loadPrivacySettings,\n    loadBlockedUsers,\n    loadContentSettings,\n    updateContentSettings,\n    loadGlobalPrivacySettings,\n    updateGlobalPrivacySettings,\n    loadWebAuthorizations,\n    setSharedSettingOption,\n  } = getActions();\n\n  useEffect(() => {\n    if (!isCurrentUserFrozen) {\n      loadBlockedUsers();\n      loadPrivacySettings();\n      loadContentSettings();\n      loadWebAuthorizations();\n    }\n  }, [isCurrentUserFrozen]);\n\n  useEffect(() => {\n    if (isActive && !isCurrentUserFrozen) {\n      loadGlobalPrivacySettings();\n    }\n  }, [isActive, isCurrentUserFrozen, loadGlobalPrivacySettings]);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleArchiveAndMuteChange = useCallback((isEnabled: boolean) => {\n    updateGlobalPrivacySettings({\n      shouldArchiveAndMuteNewNonContact: isEnabled,\n    });\n  }, [updateGlobalPrivacySettings]);\n\n  const handleChatInTitleChange = useCallback((isChecked: boolean) => {\n    setSharedSettingOption({\n      canDisplayChatInTitle: isChecked,\n    });\n  }, []);\n\n  const handleUpdateContentSettings = useCallback((isChecked: boolean) => {\n    updateContentSettings(isChecked);\n  }, [updateContentSettings]);\n\n  function getVisibilityValue(setting?: ApiPrivacySettings) {\n    if (!setting) return oldLang('Loading');\n\n    const { visibility, shouldAllowPremium, botsPrivacy } = setting;\n\n    const isAllowBots = botsPrivacy === 'allow';\n    const isVisibilityEverybody = visibility === 'everybody';\n    const shouldShowBotsString = isAllowBots && !isVisibilityEverybody;\n\n    const blockCount = setting.blockChatIds.length + setting.blockUserIds.length;\n    const allowCount = setting.allowChatIds.length + setting.allowUserIds.length;\n    const total = [];\n    if (blockCount) total.push(`-${blockCount}`);\n    if (allowCount && !isVisibilityEverybody) total.push(`+${allowCount}`);\n\n    const botPrivacyString = shouldShowBotsString ? lang('PrivacyValueBots') : '';\n    const totalString = lang.conjunction(total);\n\n    const exceptionString = [botPrivacyString, totalString].filter(Boolean).join(' ');\n    if (shouldShowBotsString && !isVisibilityEverybody) return exceptionString;\n\n    if (shouldAllowPremium) {\n      return oldLang(exceptionString ? 'ContactsAndPremium' : 'PrivacyPremium');\n    }\n\n    switch (visibility) {\n      case 'everybody':\n        return `${oldLang('P2PEverybody')} ${exceptionString}`;\n\n      case 'contacts':\n        return `${oldLang('P2PContacts')} ${exceptionString}`;\n\n      case 'nobody':\n        return `${oldLang('P2PNobody')} ${exceptionString}`;\n    }\n\n    return undefined;\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <ListItem\n          icon=\"delete-user\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyBlockedUsers)}\n        >\n          {oldLang('BlockedUsers')}\n          <span className=\"settings-item__current-value\">{blockedCount || ''}</span>\n        </ListItem>\n        {canSetPasscode && (\n          <ListItem\n            icon=\"key\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(\n              hasPasscode ? SettingsScreens.PasscodeEnabled : SettingsScreens.PasscodeDisabled,\n            )}\n          >\n            <div className=\"multiline-item\">\n              <span className=\"title\">{oldLang('Passcode')}</span>\n              <span className=\"subtitle\" dir=\"auto\">\n                {oldLang(hasPasscode ? 'PasswordOn' : 'PasswordOff')}\n              </span>\n            </div>\n          </ListItem>\n        )}\n        <ListItem\n          icon=\"lock\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(\n            hasPassword ? SettingsScreens.TwoFaEnabled : SettingsScreens.TwoFaDisabled,\n          )}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('TwoStepVerification')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {oldLang(hasPassword ? 'PasswordOn' : 'PasswordOff')}\n            </span>\n          </div>\n        </ListItem>\n        {webAuthCount > 0 && (\n          <ListItem\n            icon=\"web\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(SettingsScreens.ActiveWebsites)}\n          >\n            {oldLang('PrivacySettings.WebSessions')}\n            <span className=\"settings-item__current-value\">{webAuthCount}</span>\n          </ListItem>\n        )}\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>{oldLang('PrivacyTitle')}</h4>\n\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyPhoneNumber)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyPhoneTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.phoneNumber)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyLastSeen)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('LastSeenTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.lastSeen)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyProfilePhoto)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyProfilePhotoTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.profilePhoto)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyBio)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyBio')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.bio)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyBirthday)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyBirthday')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.birthday)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyGifts)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{lang('PrivacyGifts')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.gifts)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyForwarding)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyForwardsTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.forwards)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyPhoneCall)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('WhoCanCallMe')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.phoneCall)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          allowDisabledClick\n          rightElement={isCurrentUserPremium && <StarIcon size=\"big\" type=\"premium\" />}\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyVoiceMessages)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyVoiceMessagesTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.voiceMessages)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          rightElement={isCurrentUserPremium && <StarIcon size=\"big\" type=\"premium\" />}\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyMessages)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyMessagesTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {shouldChargeForMessages ? lang('PrivacyPaidMessagesValue')\n                : shouldNewNonContactPeersRequirePremium\n                  ? oldLang('PrivacyMessagesContactsAndPremium')\n                  : oldLang('P2PEverybody')}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyGroupChats)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('WhoCanAddMe')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.chatInvite)}\n            </span>\n          </div>\n        </ListItem>\n      </div>\n\n      {canChangeSensitive && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n            {oldLang('lng_settings_sensitive_title')}\n          </h4>\n          <Checkbox\n            label={oldLang('lng_settings_sensitive_disable_filtering')}\n            subLabel={oldLang('lng_settings_sensitive_about')}\n            checked={Boolean(isSensitiveEnabled)}\n            disabled={!canChangeSensitive}\n            onCheck={handleUpdateContentSettings}\n          />\n        </div>\n      )}\n\n      {canDisplayAutoarchiveSetting && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n            {oldLang('NewChatsFromNonContacts')}\n          </h4>\n          <Checkbox\n            label={oldLang('ArchiveAndMute')}\n            subLabel={oldLang('ArchiveAndMuteInfo')}\n            checked={Boolean(shouldArchiveAndMuteNewNonContact)}\n            onCheck={handleArchiveAndMuteChange}\n          />\n        </div>\n      )}\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n          {oldLang('lng_settings_window_system')}\n        </h4>\n        <Checkbox\n          label={oldLang('lng_settings_title_chat_name')}\n          checked={Boolean(canDisplayChatInTitle)}\n          onCheck={handleChatInTitleChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      settings: {\n        byKey: {\n          hasPassword, isSensitiveEnabled, canChangeSensitive, shouldArchiveAndMuteNewNonContact,\n          shouldNewNonContactPeersRequirePremium, nonContactPeersPaidStars,\n        },\n        privacy,\n      },\n      blocked,\n      passcode: {\n        hasPasscode,\n      },\n      appConfig,\n    } = global;\n\n    const { canDisplayChatInTitle } = selectSharedSettings(global);\n    const shouldChargeForMessages = Boolean(nonContactPeersPaidStars);\n    const isCurrentUserFrozen = selectIsCurrentUserFrozen(global);\n\n    return {\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      hasPassword,\n      hasPasscode: Boolean(hasPasscode),\n      blockedCount: blocked.totalCount,\n      webAuthCount: global.activeWebSessions.orderedHashes.length,\n      isSensitiveEnabled,\n      canDisplayAutoarchiveSetting: Boolean(appConfig?.canDisplayAutoarchiveSetting),\n      shouldArchiveAndMuteNewNonContact,\n      canChangeSensitive,\n      shouldNewNonContactPeersRequirePremium,\n      shouldChargeForMessages,\n      privacy,\n      canDisplayChatInTitle,\n      canSetPasscode: selectCanSetPasscode(global),\n      isCurrentUserFrozen,\n    };\n  },\n)(SettingsPrivacy));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ChatOrUserPicker from '../../common/pickers/ChatOrUserPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  blockedIds: string[];\n  contactIds?: string[];\n  localContactIds?: string[];\n  currentUserId?: string;\n};\n\nconst BlockUserModal: FC<OwnProps & StateProps> = ({\n  usersById,\n  blockedIds,\n  contactIds,\n  localContactIds,\n  currentUserId,\n  isOpen,\n  onClose,\n}) => {\n  const {\n    setUserSearchQuery,\n    blockUser,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [search, setSearch] = useState('');\n\n  useEffect(() => {\n    setUserSearchQuery({ query: search });\n  }, [search, setUserSearchQuery]);\n\n  const filteredContactIds = useMemo(() => {\n    const availableContactIds = unique([\n      ...(contactIds || []),\n      ...(localContactIds || []),\n    ].filter((contactId) => {\n      return contactId !== currentUserId && !blockedIds.includes(contactId);\n    }));\n\n    return filterPeersByQuery({ ids: availableContactIds, query: search, type: 'user' })\n      .sort((firstId, secondId) => {\n        const firstName = getUserFullName(usersById[firstId]) || '';\n        const secondName = getUserFullName(usersById[secondId]) || '';\n\n        return firstName.localeCompare(secondName);\n      });\n  }, [blockedIds, contactIds, currentUserId, search, localContactIds, usersById]);\n\n  const handleRemoveUser = useCallback((userId: string) => {\n    blockUser({ userId });\n    onClose();\n  }, [onClose]);\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      chatOrUserIds={filteredContactIds}\n      searchPlaceholder={lang('BlockedUsers.BlockUser')}\n      search={search}\n      onSearchChange={setSearch}\n      onSelectChatOrUser={handleRemoveUser}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      users: {\n        byId: usersById,\n      },\n      blocked: {\n        ids: blockedIds,\n      },\n      contactList,\n      currentUserId,\n    } = global;\n\n    return {\n      usersById,\n      blockedIds,\n      contactIds: contactList?.userIds,\n      localContactIds: selectTabState(global).userSearch.localUserIds,\n      currentUserId,\n    };\n  },\n)(BlockUserModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiCountryCode, ApiUser } from '../../../api/types';\n\nimport { CHAT_HEIGHT_PX } from '../../../config';\nimport { getMainUsername, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport BlockUserModal from './BlockUserModal';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  chatsByIds: Record<string, ApiChat>;\n  usersByIds: Record<string, ApiUser>;\n  blockedIds: string[];\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst SettingsPrivacyBlockedUsers: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  chatsByIds,\n  usersByIds,\n  blockedIds,\n  phoneCodeList,\n}) => {\n  const { unblockUser } = getActions();\n\n  const lang = useOldLang();\n  const [isBlockUserModalOpen, openBlockUserModal, closeBlockUserModal] = useFlag();\n  const handleUnblockClick = useCallback((userId: string) => {\n    unblockUser({ userId });\n  }, [unblockUser]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const blockedUsernamesById = useMemo(() => {\n    return blockedIds.reduce((acc, userId) => {\n      const isPrivate = isUserId(userId);\n      const user = isPrivate ? usersByIds[userId] : undefined;\n      const mainUsername = user && !user.phoneNumber && getMainUsername(user);\n\n      if (mainUsername) {\n        acc[userId] = mainUsername;\n      }\n\n      return acc;\n    }, {} as Record<string, string>);\n  }, [blockedIds, usersByIds]);\n\n  function renderContact(contactId: string, i: number, viewportOffset: number) {\n    const isPrivate = isUserId(contactId);\n    const user = usersByIds[contactId];\n    const chat = chatsByIds[contactId];\n    const peer = user || chat;\n\n    const className = buildClassName(\n      'Chat chat-item-clickable blocked-list-item small-icon',\n      isPrivate ? 'private' : 'group',\n    );\n\n    const userMainUsername = blockedUsernamesById[contactId];\n\n    return (\n      <ListItem\n        key={`blocked_${contactId}`}\n        className={className}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Unblock',\n          icon: 'unlock',\n          handler: () => {\n            handleUnblockClick(contactId);\n          },\n        }]}\n        style={`top: ${(viewportOffset + i) * CHAT_HEIGHT_PX}px;`}\n      >\n        <Avatar\n          size=\"medium\"\n          peer={peer}\n        />\n        <div className=\"contact-info\" dir=\"auto\">\n          {peer && <FullNameTitle peer={peer} />}\n          {user?.phoneNumber && (\n            <div className=\"contact-phone\" dir=\"auto\">{formatPhoneNumberWithCode(phoneCodeList, user.phoneNumber)}</div>\n          )}\n          {userMainUsername && (<div className=\"contact-username\" dir=\"auto\">@{userMainUsername}</div>)}\n        </div>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content infinite-scroll\">\n        <div className=\"settings-item no-border\">\n          <p className=\"settings-item-description-larger mt-0 mb-2\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('BlockedUsersInfo')}\n          </p>\n        </div>\n\n        <div className=\"chat-list custom-scroll\">\n          {blockedIds?.length ? (\n            <div className=\"scroll-container settings-item\">\n              {blockedIds!.map((contactId, i) => renderContact(contactId, i, 0))}\n            </div>\n          ) : blockedIds && !blockedIds.length ? (\n            <div className=\"no-results\" dir=\"auto\">{lang('NoBlocked')}</div>\n          ) : (\n            <Loading key=\"loading\" />\n          )}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown\n        className=\"block-user-button\"\n        onClick={openBlockUserModal}\n        ariaLabel={lang('BlockContact')}\n      >\n        <Icon name=\"add\" />\n      </FloatingActionButton>\n      <BlockUserModal\n        isOpen={isBlockUserModalOpen}\n        onClose={closeBlockUserModal}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      chats: {\n        byId: chatsByIds,\n      },\n      users: {\n        byId: usersByIds,\n      },\n      blocked: {\n        ids,\n      },\n      countryList: {\n        phoneCodes: phoneCodeList,\n      },\n    } = global;\n\n    return {\n      chatsByIds,\n      usersByIds,\n      blockedIds: ids,\n      phoneCodeList,\n    };\n  },\n)(SettingsPrivacyBlockedUsers));\n","import type { ApiPrivacyKey } from '../../../../api/types';\nimport { SettingsScreens } from '../../../../types';\n\nexport function getPrivacyKey(screen: SettingsScreens): ApiPrivacyKey | undefined {\n  switch (screen) {\n    case SettingsScreens.PrivacyPhoneNumber:\n    case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n    case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      return 'phoneNumber';\n    case SettingsScreens.PrivacyLastSeen:\n    case SettingsScreens.PrivacyLastSeenAllowedContacts:\n    case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      return 'lastSeen';\n    case SettingsScreens.PrivacyProfilePhoto:\n    case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n    case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      return 'profilePhoto';\n    case SettingsScreens.PrivacyBio:\n    case SettingsScreens.PrivacyBioAllowedContacts:\n    case SettingsScreens.PrivacyBioDeniedContacts:\n      return 'bio';\n    case SettingsScreens.PrivacyBirthday:\n    case SettingsScreens.PrivacyBirthdayAllowedContacts:\n    case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      return 'birthday';\n    case SettingsScreens.PrivacyGifts:\n    case SettingsScreens.PrivacyGiftsAllowedContacts:\n    case SettingsScreens.PrivacyGiftsDeniedContacts:\n      return 'gifts';\n    case SettingsScreens.PrivacyForwarding:\n    case SettingsScreens.PrivacyForwardingAllowedContacts:\n    case SettingsScreens.PrivacyForwardingDeniedContacts:\n      return 'forwards';\n    case SettingsScreens.PrivacyVoiceMessages:\n    case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n    case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      return 'voiceMessages';\n    case SettingsScreens.PrivacyGroupChats:\n    case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n    case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n      return 'chatInvite';\n    case SettingsScreens.PrivacyPhoneCall:\n    case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n    case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      return 'phoneCall';\n    case SettingsScreens.PrivacyPhoneP2P:\n    case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n    case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      return 'phoneP2P';\n    case SettingsScreens.PrivacyAddByPhone:\n      return 'addByPhone';\n    case SettingsScreens.PrivacyNoPaidMessages:\n      return 'noPaidMessages';\n  }\n\n  return undefined;\n}\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiDisallowedGiftsSettings } from '../../../api/types';\n\nimport { selectIsCurrentUserPremium } from '../../../global/selectors';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport ListItem from '../../ui/ListItem';\nimport Switcher from '../../ui/Switcher';\n\ntype StateProps = {\n  disallowedGifts?: ApiDisallowedGiftsSettings;\n  isCurrentUserPremium: boolean;\n};\n\nconst SettingsAcceptedGift = ({\n  disallowedGifts, isCurrentUserPremium,\n}: StateProps) => {\n  const { showNotification, updateGlobalPrivacySettings } = getActions();\n\n  const lang = useLang();\n\n  const handleOpenTelegramPremiumModal = useLastCallback(() => {\n    showNotification({\n      message: lang('PrivacySubscribeToTelegramPremium'),\n      action: {\n        action: 'openPremiumModal',\n        payload: {},\n      },\n      actionText: { key: 'Open' },\n      icon: 'star',\n    });\n  });\n\n  const handleLimitedEditionChange = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      handleOpenTelegramPremiumModal();\n      return;\n    }\n\n    updateGlobalPrivacySettings({\n      disallowedGifts: {\n        ...disallowedGifts,\n        shouldDisallowLimitedStarGifts: !disallowedGifts?.shouldDisallowLimitedStarGifts || undefined,\n      },\n    });\n  });\n\n  const handleUnlimitedEditionChange = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      handleOpenTelegramPremiumModal();\n      return;\n    }\n    updateGlobalPrivacySettings({\n      disallowedGifts: {\n        ...disallowedGifts,\n        shouldDisallowUnlimitedStarGifts: !disallowedGifts?.shouldDisallowUnlimitedStarGifts || undefined,\n      },\n    });\n  });\n\n  const handleUniqueChange = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      handleOpenTelegramPremiumModal();\n      return;\n    }\n    updateGlobalPrivacySettings({\n      disallowedGifts: {\n        ...disallowedGifts,\n        shouldDisallowUniqueStarGifts: !disallowedGifts?.shouldDisallowUniqueStarGifts || undefined,\n      },\n    });\n  });\n\n  const handlePremiumSubscriptionChange = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      handleOpenTelegramPremiumModal();\n      return;\n    }\n    updateGlobalPrivacySettings({\n      disallowedGifts: {\n        ...disallowedGifts,\n        shouldDisallowPremiumGifts: !disallowedGifts?.shouldDisallowPremiumGifts || undefined,\n      },\n    });\n  });\n\n  return (\n    <div className=\"settings-item\">\n      <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {lang('PrivacyAcceptedGiftTitle')}\n      </h4>\n      <ListItem onClick={handleLimitedEditionChange}>\n        <span>{lang('PrivacyGiftLimitedEdition')}</span>\n        <Switcher\n          id=\"limited_edition\"\n          label={disallowedGifts?.shouldDisallowLimitedStarGifts ? lang('PrivacyDisableLimitedEditionStarGifts')\n            : lang('PrivacyEnableLimitedEditionStarGifts')}\n          disabled={!isCurrentUserPremium}\n          checked={!isCurrentUserPremium ? true : !disallowedGifts?.shouldDisallowLimitedStarGifts}\n        />\n      </ListItem>\n      <ListItem onClick={handleUnlimitedEditionChange}>\n        <span>{lang('PrivacyGiftUnlimited')}</span>\n        <Switcher\n          id=\"unlimited\"\n          label={disallowedGifts?.shouldDisallowUnlimitedStarGifts ? lang('PrivacyDisableUnlimitedStarGifts')\n            : lang('PrivacyEnableUnlimitedStarGifts')}\n          disabled={!isCurrentUserPremium}\n          checked={!isCurrentUserPremium ? true : !disallowedGifts?.shouldDisallowUnlimitedStarGifts}\n        />\n      </ListItem>\n      <ListItem onClick={handleUniqueChange}>\n        <span>{lang('PrivacyGiftUnique')}</span>\n        <Switcher\n          id=\"unique\"\n          label={disallowedGifts?.shouldDisallowUniqueStarGifts ? lang('PrivacyDisableUniqueStarGifts')\n            : lang('PrivacyEnableUniqueStarGifts')}\n          disabled={!isCurrentUserPremium}\n          checked={!isCurrentUserPremium ? true : !disallowedGifts?.shouldDisallowUniqueStarGifts}\n        />\n      </ListItem>\n      <ListItem onClick={handlePremiumSubscriptionChange}>\n        <span>{lang('PrivacyGiftPremiumSubscription')}</span>\n        <Switcher\n          id=\"premium_subscription\"\n          label={disallowedGifts?.shouldDisallowPremiumGifts ? lang('PrivacyDisablePremiumGifts')\n            : lang('PrivacyEnablePremiumGifts')}\n          disabled={!isCurrentUserPremium}\n          checked={!isCurrentUserPremium ? true : !disallowedGifts?.shouldDisallowPremiumGifts}\n        />\n      </ListItem>\n      <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {lang('PrivacyAcceptedGiftInfo')}\n      </p>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const {\n      settings: {\n        byKey: {\n          disallowedGifts,\n        },\n      },\n    } = global;\n\n    return {\n      disallowedGifts,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(SettingsAcceptedGift));\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { PrivacyVisibility } from '../../../api/types';\n\nimport { selectIsCurrentUserPremium, selectShouldHideReadMarks } from '../../../global/selectors';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  visibility?: PrivacyVisibility;\n};\n\ntype StateProps = {\n  isCurrentUserPremium: boolean;\n  shouldHideReadMarks: boolean;\n};\n\nconst SettingsPrivacyLastSeen = ({\n  isCurrentUserPremium, shouldHideReadMarks, visibility,\n}: OwnProps & StateProps) => {\n  const { updateGlobalPrivacySettings, openPremiumModal } = getActions();\n  const lang = useOldLang();\n  const canShowHideReadTime = visibility === 'nobody' || visibility === 'contacts';\n\n  const handleChangeShouldHideReadMarks = useLastCallback(\n    (isEnabled) => updateGlobalPrivacySettings({ shouldHideReadMarks: isEnabled }),\n  );\n\n  const handleOpenPremiumModal = useLastCallback(() => {\n    openPremiumModal({\n      initialSection: 'last_seen',\n    });\n  });\n\n  return (\n    <>\n      {canShowHideReadTime && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('HideReadTime')}\n            checked={shouldHideReadMarks}\n            onCheck={handleChangeShouldHideReadMarks}\n          />\n          <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('HideReadTimeInfo'), ['br'])}\n          </p>\n        </div>\n      )}\n      <div className=\"settings-item\">\n        <ListItem\n          leftElement={<StarIcon className=\"icon ListItem-main-icon\" type=\"premium\" size=\"big\" />}\n          onClick={handleOpenPremiumModal}\n        >\n          {isCurrentUserPremium ? lang('PrivacyLastSeenPremiumForPremium') : lang('PrivacyLastSeenPremium')}\n        </ListItem>\n        <p\n          className=\"settings-item-description-larger premium-info\"\n          dir={lang.isRtl ? 'rtl' : undefined}\n        >\n          {isCurrentUserPremium\n            ? lang('PrivacyLastSeenPremiumInfoForPremium')\n            : lang('PrivacyLastSeenPremiumInfo')}\n        </p>\n      </div>\n    </>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      shouldHideReadMarks: Boolean(selectShouldHideReadMarks(global)),\n    };\n  },\n)(SettingsPrivacyLastSeen));\n","// extracted by mini-css-extract-plugin\nexport default {\"fallback-photo\":\"Qvhl9Jjv\",\"fallbackPhoto\":\"Qvhl9Jjv\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPhoto } from '../../../api/types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\n\nimport styles from './SettingsPrivacyPublicPhoto.module.scss';\n\ntype OwnProps = {\n  currentUserId: string;\n  hasCurrentUserFullInfo?: boolean;\n  currentUserFallbackPhoto?: ApiPhoto;\n};\n\nconst SettingsPrivacyPublicProfilePhoto: FC<OwnProps> = ({\n  currentUserId,\n  hasCurrentUserFullInfo,\n  currentUserFallbackPhoto,\n}) => {\n  const {\n    loadFullUser, uploadProfilePhoto, deleteProfilePhoto, showNotification,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isDeleteFallbackPhotoModalOpen, openDeleteFallbackPhotoModal, closeDeleteFallbackPhotoModal] = useFlag(false);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (!hasCurrentUserFullInfo) {\n      loadFullUser({ userId: currentUserId });\n    }\n  }, [hasCurrentUserFullInfo, currentUserId, loadFullUser]);\n\n  const handleSelectFile = useCallback((file: File) => {\n    uploadProfilePhoto({\n      file,\n      isFallback: true,\n    });\n    showNotification({\n      message: lang('Privacy.ProfilePhoto.PublicPhotoSuccess'),\n    });\n  }, [lang, showNotification, uploadProfilePhoto]);\n\n  const handleConfirmDelete = useCallback(() => {\n    closeDeleteFallbackPhotoModal();\n    deleteProfilePhoto({ photo: currentUserFallbackPhoto! });\n  }, [closeDeleteFallbackPhotoModal, deleteProfilePhoto, currentUserFallbackPhoto]);\n\n  const handleOpenFileSelector = useCallback(() => {\n    inputRef.current?.click();\n  }, []);\n\n  return (\n    <div className=\"settings-item\">\n      <ListItem\n        narrow\n        icon=\"camera-add\"\n        onClick={handleOpenFileSelector}\n      >\n        <SelectAvatar\n          onChange={handleSelectFile}\n          inputRef={inputRef}\n        />\n        {lang(currentUserFallbackPhoto\n          ? 'Privacy.ProfilePhoto.UpdatePublicPhoto'\n          : 'Privacy.ProfilePhoto.SetPublicPhoto')}\n      </ListItem>\n      {currentUserFallbackPhoto && (\n        <ListItem\n          narrow\n          leftElement={<Avatar photo={currentUserFallbackPhoto} size=\"mini\" className={styles.fallbackPhoto} />}\n          onClick={openDeleteFallbackPhotoModal}\n          destructive\n        >\n          {lang(currentUserFallbackPhoto.isVideo\n            ? 'Privacy.ProfilePhoto.RemovePublicVideo'\n            : 'Privacy.ProfilePhoto.RemovePublicPhoto')}\n          <ConfirmDialog\n            isOpen={isDeleteFallbackPhotoModalOpen}\n            onClose={closeDeleteFallbackPhotoModal}\n            text={lang('Privacy.ResetPhoto.Confirm')}\n            confirmLabel={lang('Delete')}\n            confirmHandler={handleConfirmDelete}\n            confirmIsDestructive\n          />\n        </ListItem>\n      )}\n      <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {lang('Privacy.ProfilePhoto.PublicPhotoInfo')}\n      </p>\n    </div>\n  );\n};\n\nexport default memo(SettingsPrivacyPublicProfilePhoto);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPhoto, ApiPrivacySettings, BotsPrivacyType } from '../../../api/types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectIsCurrentUserPremium, selectUserFullInfo } from '../../../global/selectors';\nimport { getPrivacyKey } from './helpers/privacy';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport Switcher from '../../ui/Switcher';\nimport PremiumStatusItem from './PremiumStatusItem';\nimport PrivacyLockedOption from './PrivacyLockedOption';\nimport SettingsAcceptedGift from './SettingsAcceptedGift';\nimport SettingsPrivacyLastSeen from './SettingsPrivacyLastSeen';\nimport SettingsPrivacyPublicProfilePhoto from './SettingsPrivacyPublicProfilePhoto';\n\ntype OwnProps = {\n  screen: SettingsScreens;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentUserId: string;\n  hasCurrentUserFullInfo?: boolean;\n  currentUserFallbackPhoto?: ApiPhoto;\n  primaryPrivacy?: ApiPrivacySettings;\n  secondaryPrivacy?: ApiPrivacySettings;\n  isPremiumRequired?: boolean;\n  shouldDisplayGiftsButton?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst SettingsPrivacyVisibility: FC<OwnProps & StateProps> = ({\n  screen,\n  isActive,\n  primaryPrivacy,\n  secondaryPrivacy,\n  currentUserId,\n  hasCurrentUserFullInfo,\n  currentUserFallbackPhoto,\n  isPremiumRequired,\n  onScreenSelect,\n  onReset,\n  shouldDisplayGiftsButton,\n  isCurrentUserPremium,\n}) => {\n  const lang = useLang();\n\n  const { updateGlobalPrivacySettings, showNotification } = getActions();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleShowGiftIconInChats = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      showNotification({\n        message: lang('PrivacySubscribeToTelegramPremium'),\n        action: {\n          action: 'openPremiumModal',\n          payload: {},\n        },\n        actionText: { key: 'Open' },\n        icon: 'star',\n      });\n      return;\n    }\n    updateGlobalPrivacySettings({\n      shouldDisplayGiftsButton: !shouldDisplayGiftsButton,\n    });\n  });\n\n  const secondaryScreen = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneP2P;\n      case SettingsScreens.PrivacyPhoneNumber: {\n        return primaryPrivacy?.visibility === 'nobody' ? SettingsScreens.PrivacyAddByPhone : undefined;\n      }\n      default:\n        return undefined;\n    }\n  }, [primaryPrivacy, screen]);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      {screen === SettingsScreens.PrivacyGifts && (\n        <div className=\"settings-item\">\n          <ListItem onClick={handleShowGiftIconInChats}>\n            <span>{lang('PrivacyDisplayGiftsButton')}</span>\n            <Switcher\n              id=\"gift\"\n              disabled={!isCurrentUserPremium}\n              label={shouldDisplayGiftsButton ? lang('HideGiftsButton') : lang('DisplayGiftsButton')}\n              checked={shouldDisplayGiftsButton}\n            />\n          </ListItem>\n          <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('PrivacyDisplayGiftIconInChats', {\n              icon: <Icon name=\"gift\" className=\"gift-icon\" />,\n              gift: lang('PrivacyDisplayGift'),\n            }, {\n              withNodes: true,\n            })}\n          </p>\n        </div>\n      )}\n      <PrivacySubsection\n        screen={screen}\n        privacy={primaryPrivacy}\n        onScreenSelect={onScreenSelect}\n        isPremiumRequired={isPremiumRequired}\n      />\n      {screen === SettingsScreens.PrivacyProfilePhoto && primaryPrivacy?.visibility !== 'everybody' && (\n        <SettingsPrivacyPublicProfilePhoto\n          currentUserId={currentUserId}\n          hasCurrentUserFullInfo={hasCurrentUserFullInfo}\n          currentUserFallbackPhoto={currentUserFallbackPhoto}\n        />\n      )}\n      {screen === SettingsScreens.PrivacyLastSeen && (\n        <SettingsPrivacyLastSeen visibility={primaryPrivacy?.visibility} />\n      )}\n      {screen === SettingsScreens.PrivacyGifts && (\n        <SettingsAcceptedGift />\n      )}\n      {secondaryScreen && (\n        <PrivacySubsection\n          screen={secondaryScreen}\n          privacy={secondaryPrivacy}\n          onScreenSelect={onScreenSelect}\n        />\n      )}\n    </div>\n  );\n};\n\nfunction PrivacySubsection({\n  screen,\n  privacy,\n  onScreenSelect,\n  isPremiumRequired,\n}: {\n  screen: SettingsScreens;\n  privacy?: ApiPrivacySettings;\n  isPremiumRequired?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n}) {\n  const { setPrivacyVisibility } = getActions();\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const visibilityOptions = useMemo(() => {\n    const hasNobody = screen !== SettingsScreens.PrivacyAddByPhone;\n    const options = [\n      { value: 'everybody', label: oldLang('P2PEverybody') },\n      {\n        value: 'contacts',\n        label: isPremiumRequired ? (\n          <PrivacyLockedOption label={oldLang('P2PContacts')} />\n        ) : (\n          oldLang('P2PContacts')\n        ),\n        hidden: isPremiumRequired,\n      },\n    ];\n\n    if (hasNobody) {\n      options.push({\n        value: 'nobody',\n        label: isPremiumRequired ? (\n          <PrivacyLockedOption label={oldLang('P2PNobody')} />\n        ) : (\n          oldLang('P2PNobody')\n        ),\n        hidden: isPremiumRequired,\n      });\n    }\n    return options;\n  }, [oldLang, screen, isPremiumRequired]);\n\n  const primaryExceptionLists = useMemo(() => {\n    if (screen === SettingsScreens.PrivacyAddByPhone) {\n      return {\n        shouldShowDenied: false,\n        shouldShowAllowed: false,\n      };\n    }\n\n    return {\n      shouldShowDenied: privacy?.visibility !== 'nobody',\n      shouldShowAllowed: privacy?.visibility !== 'everybody',\n    };\n  }, [privacy, screen]);\n\n  const privacyKey = getPrivacyKey(screen);\n\n  const descriptionText = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyGifts:\n        return lang('PrivacyGiftsInfo');\n      case SettingsScreens.PrivacyLastSeen:\n        return oldLang('CustomHelp');\n      case SettingsScreens.PrivacyAddByPhone: {\n        return privacy?.visibility === 'everybody' ? oldLang('PrivacyPhoneInfo') : oldLang('PrivacyPhoneInfo3');\n      }\n      case SettingsScreens.PrivacyVoiceMessages:\n        return oldLang('PrivacyVoiceMessagesInfo');\n      default:\n        return undefined;\n    }\n  }, [oldLang, lang, screen, privacy]);\n\n  const headerText = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return oldLang('PrivacyPhoneTitle');\n      case SettingsScreens.PrivacyAddByPhone:\n        return oldLang('PrivacyPhoneTitle2');\n      case SettingsScreens.PrivacyLastSeen:\n        return oldLang('LastSeenTitle');\n      case SettingsScreens.PrivacyProfilePhoto:\n        return oldLang('PrivacyProfilePhotoTitle');\n      case SettingsScreens.PrivacyBio:\n        return oldLang('PrivacyBioTitle');\n      case SettingsScreens.PrivacyBirthday:\n        return oldLang('PrivacyBirthdayTitle');\n      case SettingsScreens.PrivacyGifts:\n        return lang('PrivacyGiftsTitle');\n      case SettingsScreens.PrivacyForwarding:\n        return oldLang('PrivacyForwardsTitle');\n      case SettingsScreens.PrivacyVoiceMessages:\n        return oldLang('PrivacyVoiceMessagesTitle');\n      case SettingsScreens.PrivacyGroupChats:\n        return oldLang('WhoCanAddMe');\n      case SettingsScreens.PrivacyPhoneCall:\n        return oldLang('WhoCanCallMe');\n      case SettingsScreens.PrivacyPhoneP2P:\n        return oldLang('PrivacyP2P');\n      default:\n        return undefined;\n    }\n  }, [oldLang, lang, screen]);\n\n  const prepareSubtitle = useLastCallback(\n    (userIds?: string[], chatIds?: string[], shouldAllowPremium?: boolean, botsPrivacy?: BotsPrivacyType) => {\n      const userIdsCount = userIds?.length || 0;\n      const chatIdsCount = chatIds?.length || 0;\n      const isAllowBots = botsPrivacy === 'allow';\n      const hasPeers = userIdsCount || chatIdsCount;\n\n      if (!hasPeers && !isAllowBots) {\n        return shouldAllowPremium ? oldLang('PrivacyPremium') : oldLang('EditAdminAddUsers');\n      } else if (shouldAllowPremium) {\n        return oldLang('ContactsAndPremium');\n      }\n\n      const userCountString = userIdsCount > 0 ? oldLang('Users', userIdsCount) : undefined;\n      const chatCountString = chatIdsCount > 0 ? oldLang('Chats', chatIdsCount) : undefined;\n\n      const botPrivacyString = isAllowBots ? lang('PrivacyValueBots') : '';\n      const peersString = lang.conjunction([userCountString, chatCountString].filter(Boolean));\n\n      return [botPrivacyString, peersString].filter(Boolean).join(' ');\n    },\n  );\n\n  const allowedString = useMemo(() => {\n    return prepareSubtitle(\n      privacy?.allowUserIds,\n      privacy?.allowChatIds,\n      privacy?.shouldAllowPremium,\n      privacy?.botsPrivacy,\n    );\n  }, [privacy]);\n\n  const blockString = useMemo(() => {\n    return prepareSubtitle(privacy?.blockUserIds, privacy?.blockChatIds);\n  }, [privacy]);\n\n  const handleVisibilityChange = useCallback((value) => {\n    setPrivacyVisibility({\n      privacyKey: privacyKey!,\n      visibility: value,\n    });\n  }, [privacyKey]);\n\n  const allowedContactsScreen = (() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return SettingsScreens.PrivacyPhoneNumberAllowedContacts;\n      case SettingsScreens.PrivacyLastSeen:\n        return SettingsScreens.PrivacyLastSeenAllowedContacts;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return SettingsScreens.PrivacyProfilePhotoAllowedContacts;\n      case SettingsScreens.PrivacyBio:\n        return SettingsScreens.PrivacyBioAllowedContacts;\n      case SettingsScreens.PrivacyBirthday:\n        return SettingsScreens.PrivacyBirthdayAllowedContacts;\n      case SettingsScreens.PrivacyGifts:\n        return SettingsScreens.PrivacyGiftsAllowedContacts;\n      case SettingsScreens.PrivacyForwarding:\n        return SettingsScreens.PrivacyForwardingAllowedContacts;\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneCallAllowedContacts;\n      case SettingsScreens.PrivacyPhoneP2P:\n        return SettingsScreens.PrivacyPhoneP2PAllowedContacts;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return SettingsScreens.PrivacyVoiceMessagesAllowedContacts;\n      default:\n        return SettingsScreens.PrivacyGroupChatsAllowedContacts;\n    }\n  })();\n\n  const deniedContactsScreen = (() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return SettingsScreens.PrivacyPhoneNumberDeniedContacts;\n      case SettingsScreens.PrivacyLastSeen:\n        return SettingsScreens.PrivacyLastSeenDeniedContacts;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return SettingsScreens.PrivacyProfilePhotoDeniedContacts;\n      case SettingsScreens.PrivacyBio:\n        return SettingsScreens.PrivacyBioDeniedContacts;\n      case SettingsScreens.PrivacyBirthday:\n        return SettingsScreens.PrivacyBirthdayDeniedContacts;\n      case SettingsScreens.PrivacyGifts:\n        return SettingsScreens.PrivacyGiftsDeniedContacts;\n      case SettingsScreens.PrivacyForwarding:\n        return SettingsScreens.PrivacyForwardingDeniedContacts;\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneCallDeniedContacts;\n      case SettingsScreens.PrivacyPhoneP2P:\n        return SettingsScreens.PrivacyPhoneP2PDeniedContacts;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return SettingsScreens.PrivacyVoiceMessagesDeniedContacts;\n      default:\n        return SettingsScreens.PrivacyGroupChatsDeniedContacts;\n    }\n  })();\n\n  return (\n    <>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>{headerText}</h4>\n        <RadioGroup\n          name={`visibility-${privacyKey}`}\n          options={visibilityOptions}\n          onChange={handleVisibilityChange}\n          selected={privacy?.visibility}\n        />\n        {descriptionText && (\n          <p className=\"settings-item-description-larger\" dir={oldLang.isRtl ? 'rtl' : undefined}>{descriptionText}</p>\n        )}\n      </div>\n      {!isPremiumRequired && (primaryExceptionLists.shouldShowAllowed || primaryExceptionLists.shouldShowDenied) && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n            {oldLang('PrivacyExceptions')}\n          </h4>\n          {primaryExceptionLists.shouldShowAllowed && (\n            <ListItem\n              narrow\n              icon=\"add-user\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => {\n                onScreenSelect(allowedContactsScreen);\n              }}\n            >\n              <div className=\"multiline-item full-size\">\n                <span className=\"title\">{oldLang('AlwaysAllow')}</span>\n                <span className=\"subtitle\">{allowedString}</span>\n              </div>\n            </ListItem>\n          )}\n          {primaryExceptionLists.shouldShowDenied && (\n            <ListItem\n              narrow\n              icon=\"delete-user\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => {\n                onScreenSelect(deniedContactsScreen);\n              }}\n            >\n              <div className=\"multiline-item full-size\">\n                <span className=\"title\">{oldLang('NeverAllow')}</span>\n                <span className=\"subtitle\">{blockString}</span>\n              </div>\n            </ListItem>\n          )}\n        </div>\n      )}\n      {isPremiumRequired && <PremiumStatusItem />}\n    </>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { screen }): StateProps => {\n    let primaryPrivacy: ApiPrivacySettings | undefined;\n    let secondaryPrivacy: ApiPrivacySettings | undefined;\n\n    const {\n      currentUserId,\n      settings: {\n        privacy,\n        byKey: {\n          shouldDisplayGiftsButton,\n        },\n      },\n    } = global;\n\n    const currentUserFullInfo = selectUserFullInfo(global, currentUserId!);\n\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        primaryPrivacy = privacy.phoneNumber;\n        secondaryPrivacy = privacy.addByPhone;\n        break;\n\n      case SettingsScreens.PrivacyLastSeen:\n        primaryPrivacy = privacy.lastSeen;\n        break;\n\n      case SettingsScreens.PrivacyProfilePhoto:\n        primaryPrivacy = privacy.profilePhoto;\n        break;\n\n      case SettingsScreens.PrivacyBio:\n        primaryPrivacy = privacy.bio;\n        break;\n\n      case SettingsScreens.PrivacyBirthday:\n        primaryPrivacy = privacy.birthday;\n        break;\n\n      case SettingsScreens.PrivacyGifts:\n        primaryPrivacy = privacy.gifts;\n        break;\n\n      case SettingsScreens.PrivacyPhoneP2P:\n      case SettingsScreens.PrivacyPhoneCall:\n        primaryPrivacy = privacy.phoneCall;\n        secondaryPrivacy = privacy.phoneP2P;\n        break;\n\n      case SettingsScreens.PrivacyForwarding:\n        primaryPrivacy = privacy.forwards;\n        break;\n\n      case SettingsScreens.PrivacyVoiceMessages:\n        primaryPrivacy = privacy.voiceMessages;\n        break;\n\n      case SettingsScreens.PrivacyGroupChats:\n        primaryPrivacy = privacy.chatInvite;\n        break;\n    }\n\n    if (!primaryPrivacy) {\n      return {\n        currentUserId: currentUserId!,\n        hasCurrentUserFullInfo: Boolean(currentUserFullInfo),\n        currentUserFallbackPhoto: currentUserFullInfo?.fallbackPhoto,\n      };\n    }\n\n    return {\n      primaryPrivacy,\n      secondaryPrivacy,\n      currentUserId: currentUserId!,\n      hasCurrentUserFullInfo: Boolean(currentUserFullInfo),\n      currentUserFallbackPhoto: currentUserFullInfo?.fallbackPhoto,\n      isPremiumRequired: screen === SettingsScreens.PrivacyVoiceMessages && !selectIsCurrentUserPremium(global),\n      shouldDisplayGiftsButton,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(SettingsPrivacyVisibility));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiPrivacySettings } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { CustomPeerType, UniqueCustomPeer } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { ALL_FOLDER_ID, ARCHIVED_FOLDER_ID, SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport {\n  isChatChannel, isDeletedUser,\n} from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { unique } from '../../../util/iteratees';\nimport { CUSTOM_PEER_PREMIUM } from '../../../util/objects/customPeer';\nimport { getPrivacyKey } from './helpers/privacy';\n\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nexport type OwnProps = {\n  isAllowList?: boolean;\n  withPremiumCategory?: boolean;\n  withMiniAppsCategory?: boolean;\n  usersOnly?: boolean;\n  screen: SettingsScreens;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  settings?: ApiPrivacySettings;\n};\n\nconst PREMIUM_CATEGORY = [CUSTOM_PEER_PREMIUM];\n\nconst SettingsPrivacyVisibilityExceptionList: FC<OwnProps & StateProps> = ({\n  isAllowList,\n  withPremiumCategory,\n  withMiniAppsCategory,\n  screen,\n  isActive,\n  currentUserId,\n  settings,\n  usersOnly = false,\n  onReset,\n}) => {\n  const { setPrivacySettings } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const customPeerBots : UniqueCustomPeer = useMemo(() => {\n    return {\n      isCustomPeer: true,\n      type: 'bots',\n      title: lang('PrivacyValueBots'),\n      avatarIcon: 'bots',\n      isAvatarSquare: true,\n      peerColorId: 6,\n    };\n  }, [lang]);\n\n  const miniAppsCategory = useMemo(() => {\n    return [customPeerBots];\n  }, [customPeerBots]);\n\n  const selectedContactIds = useMemo(() => {\n    if (!settings) {\n      return [];\n    }\n\n    if (isAllowList) {\n      return [...settings.allowUserIds, ...settings.allowChatIds];\n    } else {\n      return [...settings.blockUserIds, ...settings.blockChatIds];\n    }\n  }, [isAllowList, settings]);\n  const selectedCategoryTypes = useMemo(() => {\n    if (!settings) {\n      return [];\n    }\n    if (settings.shouldAllowPremium) { return [CUSTOM_PEER_PREMIUM.type]; }\n    if (settings.botsPrivacy === 'allow' && isAllowList) { return [customPeerBots.type]; }\n    return [];\n  }, [settings, isAllowList, customPeerBots]);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isSubmitShown, setIsSubmitShown] = useState<boolean>(false);\n  const [newSelectedContactIds, setNewSelectedContactIds] = useState<string[]>(selectedContactIds);\n  const [newSelectedCategoryTypes, setNewSelectedCategoryTypes] = useState<CustomPeerType[]>(selectedCategoryTypes);\n\n  // Reset selected contact ids on change from other client when screen is not active\n  useEffect(() => {\n    if (!isActive) {\n      setNewSelectedContactIds(selectedContactIds);\n      setNewSelectedCategoryTypes(selectedCategoryTypes);\n    }\n  }, [isActive, selectedCategoryTypes, selectedContactIds]);\n\n  const folderAllOrderedIds = useFolderManagerForOrderedIds(ALL_FOLDER_ID);\n  const folderArchivedOrderedIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on chats, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n    const usersById = getGlobal().users.byId;\n\n    const chatIds = unique([...folderAllOrderedIds || [], ...folderArchivedOrderedIds || []])\n      .filter((chatId) => {\n        const chat = chatsById[chatId];\n        const user = usersById[chatId];\n        const isDeleted = user && isDeletedUser(user);\n        const isChannel = chat && isChatChannel(chat);\n        return (!usersOnly || user)\n          && chatId !== currentUserId\n          && chatId !== SERVICE_NOTIFICATIONS_USER_ID\n          && !isChannel && !isDeleted;\n      });\n\n    const filteredChats = filterPeersByQuery({ ids: chatIds, query: searchQuery });\n\n    // Show only relevant items\n    if (searchQuery) return filteredChats;\n\n    return unique([\n      ...selectedContactIds,\n      ...chatIds,\n    ]);\n  }, [folderAllOrderedIds, folderArchivedOrderedIds, selectedContactIds, searchQuery, currentUserId, usersOnly]);\n\n  const handleSelectedCategoriesChange = useCallback((value: CustomPeerType[]) => {\n    setNewSelectedCategoryTypes(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSelectedContactIdsChange = useCallback((value: string[]) => {\n    setNewSelectedContactIds(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSubmit = useCallback(() => {\n    setPrivacySettings({\n      privacyKey: getPrivacyKey(screen)!,\n      isAllowList: Boolean(isAllowList),\n      updatedIds: newSelectedContactIds,\n      isPremiumAllowed: newSelectedCategoryTypes.includes(CUSTOM_PEER_PREMIUM.type) || undefined,\n      botsPrivacy: (!withMiniAppsCategory) ? 'none'\n        : (newSelectedCategoryTypes.includes(customPeerBots.type) ? 'allow' : 'disallow'),\n    });\n\n    onReset();\n  }, [\n    isAllowList,\n    withMiniAppsCategory,\n    newSelectedCategoryTypes,\n    newSelectedContactIds,\n    onReset,\n    screen,\n    customPeerBots,\n  ]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  function getCustomCategory() {\n    if (withPremiumCategory) return PREMIUM_CATEGORY;\n    if (withMiniAppsCategory && isAllowList) return miniAppsCategory;\n    return undefined;\n  }\n\n  return (\n    <div className=\"NewChat-inner step-1\">\n      <PeerPicker\n        categories={getCustomCategory()}\n        itemIds={displayedIds || []}\n        selectedIds={newSelectedContactIds}\n        selectedCategories={newSelectedCategoryTypes}\n        filterValue={searchQuery}\n        filterPlaceholder={isAllowList ? oldLang('AlwaysAllowPlaceholder') : oldLang('NeverAllowPlaceholder')}\n        categoryPlaceholderKey=\"PrivacyUserTypes\"\n        searchInputId=\"new-group-picker-search\"\n        isSearchable\n        onSelectedIdsChange={handleSelectedContactIdsChange}\n        onSelectedCategoriesChange={handleSelectedCategoriesChange}\n        onFilterChange={setSearchQuery}\n        allowMultiple\n        itemInputType=\"checkbox\"\n        withDefaultPadding\n        withStatus\n      />\n\n      <FloatingActionButton\n        isShown={isSubmitShown}\n        onClick={handleSubmit}\n        ariaLabel={isAllowList ? oldLang('AlwaysAllow') : oldLang('NeverAllow')}\n      >\n        <Icon name=\"check\" />\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nfunction getCurrentPrivacySettings(global: GlobalState, screen: SettingsScreens) {\n  const { privacy } = global.settings;\n  switch (screen) {\n    case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n    case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      return privacy.phoneNumber;\n    case SettingsScreens.PrivacyLastSeenAllowedContacts:\n    case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      return privacy.lastSeen;\n    case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n    case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      return privacy.profilePhoto;\n    case SettingsScreens.PrivacyBioAllowedContacts:\n    case SettingsScreens.PrivacyBioDeniedContacts:\n      return privacy.bio;\n    case SettingsScreens.PrivacyBirthdayAllowedContacts:\n    case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      return privacy.birthday;\n    case SettingsScreens.PrivacyGiftsAllowedContacts:\n    case SettingsScreens.PrivacyGiftsDeniedContacts:\n      return privacy.gifts;\n    case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n    case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      return privacy.phoneCall;\n    case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n    case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      return privacy.phoneP2P;\n    case SettingsScreens.PrivacyForwardingAllowedContacts:\n    case SettingsScreens.PrivacyForwardingDeniedContacts:\n      return privacy.forwards;\n    case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n    case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      return privacy.voiceMessages;\n    case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n    case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n      return privacy.chatInvite;\n    case SettingsScreens.PrivacyNoPaidMessages:\n      return privacy.noPaidMessages;\n  }\n\n  return undefined;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { screen }): StateProps => {\n    return {\n      currentUserId: global.currentUserId,\n      settings: getCurrentPrivacySettings(global, screen),\n    };\n  },\n)(SettingsPrivacyVisibilityExceptionList));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiAvailableReaction } from '../../../api/types';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport ReactionStaticEmoji from '../../common/reactions/ReactionStaticEmoji';\nimport RadioGroup from '../../ui/RadioGroup';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  availableReactions?: ApiAvailableReaction[];\n  selectedReaction?: string;\n};\n\nconst SettingsQuickReaction: FC<OwnProps & StateProps> = ({\n  isActive,\n  availableReactions,\n  selectedReaction,\n  onReset,\n}) => {\n  const { setDefaultReaction } = getActions();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const options = useMemo(() => (\n    (availableReactions || []).filter((availableReaction) => !availableReaction.isInactive)\n      .map((availableReaction) => ({\n        label: (\n          <>\n            <ReactionStaticEmoji reaction={availableReaction.reaction} availableReactions={availableReactions} />\n            {availableReaction.title}\n          </>\n        ),\n        value: availableReaction.reaction.emoticon,\n      }))\n  ), [availableReactions]);\n\n  const handleChange = useCallback((reaction: string) => {\n    setDefaultReaction({\n      reaction: { type: 'emoji', emoticon: reaction },\n    });\n  }, [setDefaultReaction]);\n\n  return (\n    <div className=\"settings-content settings-item custom-scroll settings-quick-reaction\">\n      <RadioGroup\n        name=\"quick-reaction-settings\"\n        options={options}\n        selected={selectedReaction}\n        onChange={handleChange}\n        withIcon\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global) => {\n    const { config, reactions } = global;\n\n    return {\n      availableReactions: reactions.availableReactions,\n      selectedReaction: config?.defaultReaction,\n    };\n  },\n)(SettingsQuickReaction));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n  ApiSticker,\n  ApiStickerSet,\n} from '../../../api/types';\nimport type { AccountSettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport { pick } from '../../../util/iteratees';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ReactionStaticEmoji from '../../common/reactions/ReactionStaticEmoji';\nimport StickerSetCard from '../../common/StickerSetCard';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\nconst DEFAULT_REACTION_SIZE = 1.5 * REM;\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps =\n  Pick<AccountSettings, (\n    'shouldSuggestStickers' | 'shouldUpdateStickerSetOrder'\n  )> & {\n    addedSetIds?: string[];\n    customEmojiSetIds?: string[];\n    stickerSetsById: Record<string, ApiStickerSet>;\n    defaultReaction?: ApiReaction;\n    availableReactions?: ApiAvailableReaction[];\n    canPlayAnimatedEmojis: boolean;\n  };\n\nconst SettingsStickers: FC<OwnProps & StateProps> = ({\n  isActive,\n  addedSetIds,\n  customEmojiSetIds,\n  stickerSetsById,\n  defaultReaction,\n  shouldSuggestStickers,\n  shouldUpdateStickerSetOrder,\n  availableReactions,\n  canPlayAnimatedEmojis,\n  onReset,\n  onScreenSelect,\n}) => {\n  const {\n    setSettingOption,\n    openStickerSet,\n  } = getActions();\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const stickerSettingsRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({ rootRef: stickerSettingsRef });\n\n  const handleStickerSetClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  }, [openStickerSet]);\n\n  const handleSuggestStickerSetOrderChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldUpdateStickerSetOrder: newValue });\n  }, [setSettingOption]);\n\n  const handleSuggestStickersChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldSuggestStickers: newValue });\n  }, [setSettingOption]);\n\n  const stickerSets = useMemo(() => (\n    addedSetIds && Object.values(pick(stickerSetsById, addedSetIds))\n  ), [addedSetIds, stickerSetsById]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <Checkbox\n          label={lang('SuggestStickers')}\n          checked={shouldSuggestStickers}\n          onCheck={handleSuggestStickersChange}\n        />\n        <ListItem\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.CustomEmoji)}\n          icon=\"smile\"\n        >\n          {lang('StickersList.EmojiItem')}\n          {customEmojiSetIds && <span className=\"settings-item__current-value\">{customEmojiSetIds.length}</span>}\n        </ListItem>\n        {defaultReaction && (\n          <ListItem\n            className=\"SettingsDefaultReaction\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(SettingsScreens.QuickReaction)}\n          >\n            <ReactionStaticEmoji\n              reaction={defaultReaction}\n              className=\"current-default-reaction\"\n              size={DEFAULT_REACTION_SIZE}\n              availableReactions={availableReactions}\n            />\n            <div className=\"title\">{lang('DoubleTapSetting')}</div>\n          </ListItem>\n        )}\n      </div>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('InstalledStickers.DynamicPackOrder')}\n        </h4>\n        <Checkbox\n          label={lang('InstalledStickers.DynamicPackOrder')}\n          checked={shouldUpdateStickerSetOrder}\n          onCheck={handleSuggestStickerSetOrderChange}\n        />\n        <p className=\"settings-item-description mt-3\" dir=\"auto\">\n          {lang('InstalledStickers.DynamicPackOrderInfo')}\n        </p>\n      </div>\n      {stickerSets && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('ChooseStickerMyStickerSets')}\n          </h4>\n          <div ref={stickerSettingsRef}>\n            {stickerSets.map((stickerSet: ApiStickerSet) => (\n              <StickerSetCard\n                key={stickerSet.id}\n                stickerSet={stickerSet}\n                observeIntersection={observeIntersectionForCovers}\n                onClick={handleStickerSetClick}\n                noPlay={!canPlayAnimatedEmojis}\n              />\n            ))}\n          </div>\n          <p className=\"settings-item-description mt-3\" dir=\"auto\">\n            {renderText(lang('StickersBotInfo'), ['links'])}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      ...pick(global.settings.byKey, [\n        'shouldSuggestStickers',\n        'shouldUpdateStickerSetOrder',\n      ]),\n      addedSetIds: global.stickers.added.setIds,\n      customEmojiSetIds: global.customEmojis.added.setIds,\n      stickerSetsById: global.stickers.setsById,\n      defaultReaction: global.config?.defaultReaction,\n      availableReactions: global.reactions.availableReactions,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(SettingsStickers));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { STICKER_SIZE_TWO_FA } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Button from '../../../ui/Button';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaCongratulations: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useOldLang();\n\n  const handleClick = useCallback(() => {\n    onScreenSelect(SettingsScreens.Privacy);\n  }, [onScreenSelect]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          size={STICKER_SIZE_TWO_FA}\n          tgsUrl={LOCAL_TGS_URLS.Congratulations}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('TwoStepVerificationPasswordSetInfo')}\n        </p>\n      </div>\n\n      <div className=\"settings-item settings-group\">\n        <Button onClick={handleClick}>{lang('TwoStepVerificationPasswordReturnSettings')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaCongratulations);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\n\nimport { selectAnimatedEmoji, selectTabState } from '../../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../../util/browser/windowEnvironment';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport InputText from '../../../ui/InputText';\nimport Loading from '../../../ui/Loading';\n\ntype OwnProps = {\n  isLoading?: boolean;\n  error?: string;\n  clearError: NoneToVoidFunction;\n  onSubmit: (hint: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  animatedEmoji: ApiSticker;\n  codeLength: number;\n  recoveryEmail: string;\n};\n\nconst ICON_SIZE = 160;\n\nconst SettingsTwoFaEmailCode: FC<OwnProps & StateProps> = ({\n  animatedEmoji,\n  codeLength,\n  isLoading,\n  error,\n  clearError,\n  onSubmit,\n  isActive,\n  onReset,\n  recoveryEmail,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const { isMobile } = useAppLayout();\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  const [value, setValue] = useState<string>('');\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      setTimeout(() => {\n        inputRef.current!.focus();\n      }, focusDelayTimeoutMs);\n    }\n  }, [focusDelayTimeoutMs]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (error && clearError) {\n      clearError();\n    }\n\n    const newValue = e.target.value.slice(0, codeLength);\n\n    if (newValue.length === codeLength) {\n      onSubmit(newValue);\n    }\n\n    setValue(newValue);\n    e.target.value = newValue;\n  }, [clearError, codeLength, error, onSubmit]);\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} className=\"settings-content-icon\" />\n        {recoveryEmail && (\n          <p className=\"settings-item-description mb-3\" dir=\"auto\">\n            {lang('TwoStepAuth.ConfirmEmailDescription', recoveryEmail)}\n          </p>\n        )}\n      </div>\n\n      <div className=\"settings-item settings-group\">\n        <InputText\n          value={value}\n          ref={inputRef}\n          inputMode=\"decimal\"\n          label={lang('YourEmailCode')}\n          error={error}\n          onChange={handleInputChange}\n        />\n        {isLoading && <Loading />}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global) => {\n  const tabState = selectTabState(global);\n  const recoveryEmail = tabState.recoveryEmail;\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '💌'),\n    codeLength: global.twoFaSettings.waitingEmailCodeLength,\n    recoveryEmail,\n  };\n})(SettingsTwoFaEmailCode));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport ListItem from '../../../ui/ListItem';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaEnabled: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {renderText(lang('EnabledPasswordText'), ['br'])}\n        </p>\n      </div>\n\n      <div className=\"settings-item\">\n        <ListItem\n          icon=\"edit\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaChangePasswordCurrent)}\n        >\n          {lang('ChangePassword')}\n        </ListItem>\n        <ListItem\n          icon=\"password-off\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaTurnOff)}\n        >\n          {lang('TurnPasswordOff')}\n        </ListItem>\n        <ListItem\n          icon=\"email\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaRecoveryEmailCurrentPassword)}\n        >\n          {lang('SetRecoveryEmail')}\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaEnabled);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\n\nimport { selectAnimatedEmoji } from '../../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../../util/browser/windowEnvironment';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useFlag from '../../../../hooks/useFlag';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport Button from '../../../ui/Button';\nimport InputText from '../../../ui/InputText';\nimport Modal from '../../../ui/Modal';\n\ntype OwnProps = {\n  icon: 'hint' | 'email';\n  type?: 'text' | 'email';\n  isLoading?: boolean;\n  error?: string;\n  placeholder: string;\n  shouldConfirm?: boolean;\n  clearError?: NoneToVoidFunction;\n  onSubmit: (value?: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  animatedEmoji: ApiSticker;\n};\n\nconst ICON_SIZE = 160;\n\nconst SettingsTwoFaSkippableForm: FC<OwnProps & StateProps> = ({\n  animatedEmoji,\n  type = 'text',\n  isLoading,\n  error,\n  placeholder,\n  shouldConfirm,\n  clearError,\n  onSubmit,\n  isActive,\n  onReset,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const { isMobile } = useAppLayout();\n\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n  const [value, setValue] = useState<string>('');\n  const [isConfirmShown, markIsConfirmShown, unmarkIsConfirmShown] = useFlag(false);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      setTimeout(() => {\n        inputRef.current!.focus();\n      }, focusDelayTimeoutMs);\n    }\n  }, [focusDelayTimeoutMs]);\n\n  const handleInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (error && clearError) {\n      clearError();\n    }\n\n    setValue(e.target.value);\n  }, [clearError, error]);\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (!inputRef.current) {\n      return;\n    }\n\n    onSubmit(value);\n  };\n\n  const handleSkip = useCallback(() => {\n    onSubmit();\n  }, [onSubmit]);\n\n  const handleSkipConfirm = useCallback(() => {\n    unmarkIsConfirmShown();\n    onSubmit();\n  }, [onSubmit, unmarkIsConfirmShown]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} className=\"settings-content-icon\" />\n        {type === 'email' && (\n          <p className=\"settings-item-description mb-3\" dir=\"auto\">\n            {lang('RecoveryEmailSubtitle')}\n          </p>\n        )}\n      </div>\n\n      <div className=\"settings-item settings-group\">\n        <form action=\"\" onSubmit={handleSubmit}>\n          <InputText\n            ref={inputRef}\n            value={value}\n            inputMode={type}\n            label={placeholder}\n            error={error}\n            onChange={handleInputChange}\n          />\n\n          {value ? (\n            <Button type=\"submit\" isLoading={isLoading} ripple>{lang('Continue')}</Button>\n          ) : (\n            <Button\n              isText\n              isLoading={isLoading}\n              ripple\n              onClick={shouldConfirm ? markIsConfirmShown : handleSkip}\n            >\n              {lang('YourEmailSkip')}\n            </Button>\n          )}\n        </form>\n        {shouldConfirm && (\n          <Modal\n            className=\"narrow\"\n            isOpen={isConfirmShown}\n            title={lang('YourEmailSkipWarning')}\n            onClose={unmarkIsConfirmShown}\n          >\n            {renderText(lang('YourEmailSkipWarningText'), ['br', 'simple_markdown'])}\n            <div className=\"dialog-buttons\">\n              <Button\n                color=\"danger\"\n                ripple\n                isText\n                className=\"confirm-dialog-button\"\n                onClick={handleSkipConfirm}\n              >\n                {lang('YourEmailSkip')}\n              </Button>\n              <Button\n                color=\"primary\"\n                ripple\n                isText\n                className=\"confirm-dialog-button\"\n                onClick={unmarkIsConfirmShown}\n              >\n                {lang('Cancel')}\n              </Button>\n            </div>\n          </Modal>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { icon }) => {\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, icon === 'email' ? '💌' : '💡'),\n  };\n})(SettingsTwoFaSkippableForm));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport Button from '../../../ui/Button';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  onStart: NoneToVoidFunction;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaStart: FC<OwnProps> = ({\n  isActive, onReset, onStart,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('SetAdditionalPasswordInfo')}\n        </p>\n      </div>\n\n      <div className=\"settings-item settings-group\">\n        <Button onClick={onStart}>{lang('EditAdminTransferSetPassword')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaStart);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { GlobalState } from '../../../../global/types';\nimport type { TwoFaDispatch, TwoFaState } from '../../../../hooks/reducers/useTwoFaReducer';\nimport { SettingsScreens } from '../../../../types';\n\nimport useLang from '../../../../hooks/useLang';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport SettingsTwoFaPassword from '../SettingsPasswordForm';\nimport SettingsTwoFaCongratulations from './SettingsTwoFaCongratulations';\nimport SettingsTwoFaEmailCode from './SettingsTwoFaEmailCode';\nimport SettingsTwoFaEnabled from './SettingsTwoFaEnabled';\nimport SettingsTwoFaSkippableForm from './SettingsTwoFaSkippableForm';\nimport SettingsTwoFaStart from './SettingsTwoFaStart';\n\nexport type OwnProps = {\n  state: TwoFaState;\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  dispatch: TwoFaDispatch;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = GlobalState['twoFaSettings'];\n\nconst SettingsTwoFa: FC<OwnProps & StateProps> = ({\n  currentScreen,\n  shownScreen,\n  state,\n  hint,\n  isLoading,\n  errorKey,\n  waitingEmailCodeLength,\n  dispatch,\n  isActive,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    updatePassword,\n    checkPassword,\n    clearTwoFaError,\n    updateRecoveryEmail,\n    provideTwoFaEmailCode,\n    clearPassword,\n  } = getActions();\n\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  useEffect(() => {\n    if (waitingEmailCodeLength) {\n      if (currentScreen === SettingsScreens.TwoFaNewPasswordEmail) {\n        onScreenSelect(SettingsScreens.TwoFaNewPasswordEmailCode);\n      } else if (currentScreen === SettingsScreens.TwoFaRecoveryEmail) {\n        onScreenSelect(SettingsScreens.TwoFaRecoveryEmailCode);\n      }\n    }\n  }, [currentScreen, onScreenSelect, waitingEmailCodeLength]);\n\n  const handleStartWizard = useCallback(() => {\n    dispatch({ type: 'reset' });\n    onScreenSelect(SettingsScreens.TwoFaNewPassword);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPassword = useCallback((value: string) => {\n    dispatch({ type: 'setPassword', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordConfirm);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPasswordConfirm = useCallback(() => {\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordHint);\n  }, [onScreenSelect]);\n\n  const handleNewPasswordHint = useCallback((value?: string) => {\n    dispatch({ type: 'setHint', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordEmail);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPasswordEmail = useCallback((value?: string) => {\n    dispatch({ type: 'setEmail', payload: value });\n    updatePassword({\n      ...state,\n      email: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updatePassword]);\n\n  const handleChangePasswordCurrent = useCallback((value: string) => {\n    dispatch({ type: 'setCurrentPassword', payload: value });\n    checkPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaChangePasswordNew);\n      },\n    });\n  }, [checkPassword, dispatch, onScreenSelect]);\n\n  const handleChangePasswordNew = useCallback((value: string) => {\n    dispatch({ type: 'setPassword', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaChangePasswordConfirm);\n  }, [dispatch, onScreenSelect]);\n\n  const handleChangePasswordConfirm = useCallback(() => {\n    onScreenSelect(SettingsScreens.TwoFaChangePasswordHint);\n  }, [onScreenSelect]);\n\n  const handleChangePasswordHint = useCallback((value?: string) => {\n    dispatch({ type: 'setHint', payload: value });\n    updatePassword({\n      ...state,\n      hint: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updatePassword]);\n\n  const handleTurnOff = useCallback((value: string) => {\n    clearPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.Privacy);\n      },\n    });\n  }, [clearPassword, onScreenSelect]);\n\n  const handleRecoveryEmailCurrentPassword = useCallback((value: string) => {\n    dispatch({ type: 'setCurrentPassword', payload: value });\n    checkPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaRecoveryEmail);\n      },\n    });\n  }, [checkPassword, dispatch, onScreenSelect]);\n\n  const handleRecoveryEmail = useCallback((value?: string) => {\n    dispatch({ type: 'setEmail', payload: value });\n    updateRecoveryEmail({\n      ...state,\n      email: value!,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updateRecoveryEmail]);\n\n  const handleEmailCode = useCallback((code: string) => {\n    provideTwoFaEmailCode({ code });\n  }, [provideTwoFaEmailCode]);\n\n  switch (currentScreen) {\n    case SettingsScreens.TwoFaDisabled:\n      return (\n        <SettingsTwoFaStart\n          onStart={handleStartWizard}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPassword,\n            SettingsScreens.TwoFaNewPasswordConfirm,\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPassword:\n      return (\n        <SettingsTwoFaPassword\n          placeholder={oldLang('PleaseEnterPassword')}\n          submitLabel={oldLang('Continue')}\n          onSubmit={handleNewPassword}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordConfirm,\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordConfirm:\n      return (\n        <SettingsTwoFaPassword\n          expectedPassword={state.password}\n          placeholder={oldLang('PleaseReEnterPassword')}\n          submitLabel={oldLang('Continue')}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordHint:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"hint\"\n          placeholder={oldLang('PasswordHintPlaceholder')}\n          onSubmit={handleNewPasswordHint}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordEmail:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"email\"\n          type=\"email\"\n          isLoading={isLoading}\n          error={errorKey && lang.withRegular(errorKey)}\n          clearError={clearTwoFaError}\n          placeholder={oldLang('RecoveryEmailTitle')}\n          shouldConfirm\n          onSubmit={handleNewPasswordEmail}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordEmailCode:\n      return (\n        <SettingsTwoFaEmailCode\n          isLoading={isLoading}\n          error={errorKey && lang.withRegular(errorKey)}\n          clearError={clearTwoFaError}\n          onSubmit={handleEmailCode}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaCongratulations:\n      return (\n        <SettingsTwoFaCongratulations\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaEnabled:\n      return (\n        <SettingsTwoFaEnabled\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordCurrent,\n            SettingsScreens.TwoFaChangePasswordNew,\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaTurnOff,\n            SettingsScreens.TwoFaRecoveryEmailCurrentPassword,\n            SettingsScreens.TwoFaRecoveryEmail,\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordCurrent:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={errorKey && lang.withRegular(errorKey)}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleChangePasswordCurrent}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordNew,\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordNew:\n      return (\n        <SettingsTwoFaPassword\n          placeholder={oldLang('PleaseEnterNewFirstPassword')}\n          onSubmit={handleChangePasswordNew}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordConfirm:\n      return (\n        <SettingsTwoFaPassword\n          expectedPassword={state.password}\n          placeholder={oldLang('PleaseReEnterPassword')}\n          onSubmit={handleChangePasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordHint:\n      return (\n        <SettingsTwoFaSkippableForm\n          isLoading={isLoading}\n          error={errorKey && lang.withRegular(errorKey)}\n          clearError={clearTwoFaError}\n          icon=\"hint\"\n          placeholder={oldLang('PasswordHintPlaceholder')}\n          onSubmit={handleChangePasswordHint}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaTurnOff:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={errorKey && lang.withRegular(errorKey)}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleTurnOff}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={errorKey && lang.withRegular(errorKey)}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleRecoveryEmailCurrentPassword}\n          isActive={isActive || [\n            SettingsScreens.TwoFaRecoveryEmail,\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmail:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"email\"\n          type=\"email\"\n          placeholder={oldLang('RecoveryEmailTitle')}\n          onSubmit={handleRecoveryEmail}\n          isActive={isActive || [\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmailCode:\n      return (\n        <SettingsTwoFaEmailCode\n          isLoading={isLoading}\n          error={errorKey && lang.withRegular(errorKey)}\n          clearError={clearTwoFaError}\n          onSubmit={handleEmailCode}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => ({ ...global.twoFaSettings }),\n)(SettingsTwoFa));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { FolderEditDispatch, FoldersState } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { LAYERS_ANIMATION_NAME } from '../../../util/browser/windowEnvironment';\n\nimport useTwoFaReducer from '../../../hooks/reducers/useTwoFaReducer';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMarkScrolled from '../../../hooks/useMarkScrolled/useMarkScrolled';\n\nimport Transition from '../../ui/Transition';\nimport SettingsFolders from './folders/SettingsFolders';\nimport SettingsPasscode from './passcode/SettingsPasscode';\nimport PrivacyMessages from './PrivacyMessages';\nimport SettingsActiveSessions from './SettingsActiveSessions';\nimport SettingsActiveWebsites from './SettingsActiveWebsites';\nimport SettingsCustomEmoji from './SettingsCustomEmoji';\nimport SettingsDataStorage from './SettingsDataStorage';\nimport SettingsDoNotTranslate from './SettingsDoNotTranslate';\nimport SettingsEditProfile from './SettingsEditProfile';\nimport SettingsExperimental from './SettingsExperimental';\nimport SettingsGeneral from './SettingsGeneral';\nimport SettingsGeneralBackground from './SettingsGeneralBackground';\nimport SettingsGeneralBackgroundColor from './SettingsGeneralBackgroundColor';\nimport SettingsHeader from './SettingsHeader';\nimport SettingsLanguage from './SettingsLanguage';\nimport SettingsMain from './SettingsMain';\nimport SettingsNotifications from './SettingsNotifications';\nimport SettingsPerformance from './SettingsPerformance';\nimport SettingsPrivacy from './SettingsPrivacy';\nimport SettingsPrivacyBlockedUsers from './SettingsPrivacyBlockedUsers';\nimport SettingsPrivacyVisibility from './SettingsPrivacyVisibility';\nimport SettingsPrivacyVisibilityExceptionList from './SettingsPrivacyVisibilityExceptionList';\nimport SettingsQuickReaction from './SettingsQuickReaction';\nimport SettingsStickers from './SettingsStickers';\nimport SettingsTwoFa from './twoFa/SettingsTwoFa';\n\nimport './Settings.scss';\n\nconst TRANSITION_RENDER_COUNT = Object.keys(SettingsScreens).length / 2;\nconst TRANSITION_DURATION = 200;\n\nconst TWO_FA_SCREENS = [\n  SettingsScreens.TwoFaDisabled,\n  SettingsScreens.TwoFaNewPassword,\n  SettingsScreens.TwoFaNewPasswordConfirm,\n  SettingsScreens.TwoFaNewPasswordHint,\n  SettingsScreens.TwoFaNewPasswordEmail,\n  SettingsScreens.TwoFaNewPasswordEmailCode,\n  SettingsScreens.TwoFaCongratulations,\n  SettingsScreens.TwoFaEnabled,\n  SettingsScreens.TwoFaChangePasswordCurrent,\n  SettingsScreens.TwoFaChangePasswordNew,\n  SettingsScreens.TwoFaChangePasswordConfirm,\n  SettingsScreens.TwoFaChangePasswordHint,\n  SettingsScreens.TwoFaTurnOff,\n  SettingsScreens.TwoFaRecoveryEmailCurrentPassword,\n  SettingsScreens.TwoFaRecoveryEmail,\n  SettingsScreens.TwoFaRecoveryEmailCode,\n];\n\nconst PASSCODE_SCREENS = [\n  SettingsScreens.PasscodeDisabled,\n  SettingsScreens.PasscodeEnabled,\n];\n\nconst FOLDERS_SCREENS = [\n  SettingsScreens.Folders,\n  SettingsScreens.FoldersCreateFolder,\n  SettingsScreens.FoldersEditFolder,\n  SettingsScreens.FoldersEditFolderFromChatList,\n  SettingsScreens.FoldersEditFolderInvites,\n  SettingsScreens.FoldersIncludedChats,\n  SettingsScreens.FoldersIncludedChatsFromChatList,\n  SettingsScreens.FoldersExcludedChats,\n  SettingsScreens.FoldersExcludedChatsFromChatList,\n  SettingsScreens.FoldersShare,\n];\n\nconst PRIVACY_SCREENS = [\n  SettingsScreens.PrivacyBlockedUsers,\n  SettingsScreens.ActiveWebsites,\n];\n\nconst PRIVACY_PHONE_NUMBER_SCREENS = [\n  SettingsScreens.PrivacyPhoneNumberAllowedContacts,\n  SettingsScreens.PrivacyPhoneNumberDeniedContacts,\n];\n\nconst PRIVACY_LAST_SEEN_PHONE_SCREENS = [\n  SettingsScreens.PrivacyLastSeenAllowedContacts,\n  SettingsScreens.PrivacyLastSeenDeniedContacts,\n];\n\nconst PRIVACY_PROFILE_PHOTO_SCREENS = [\n  SettingsScreens.PrivacyProfilePhotoAllowedContacts,\n  SettingsScreens.PrivacyProfilePhotoDeniedContacts,\n];\n\nconst PRIVACY_BIO_SCREENS = [\n  SettingsScreens.PrivacyBioAllowedContacts,\n  SettingsScreens.PrivacyBioDeniedContacts,\n];\n\nconst PRIVACY_BIRTHDAY_SCREENS = [\n  SettingsScreens.PrivacyBirthdayAllowedContacts,\n  SettingsScreens.PrivacyBirthdayDeniedContacts,\n];\n\nconst PRIVACY_GIFTS_SCREENS = [\n  SettingsScreens.PrivacyGiftsAllowedContacts,\n  SettingsScreens.PrivacyGiftsDeniedContacts,\n];\n\nconst PRIVACY_PHONE_CALL_SCREENS = [\n  SettingsScreens.PrivacyPhoneCallAllowedContacts,\n  SettingsScreens.PrivacyPhoneCallDeniedContacts,\n];\n\nconst PRIVACY_PHONE_P2P_SCREENS = [\n  SettingsScreens.PrivacyPhoneP2PAllowedContacts,\n  SettingsScreens.PrivacyPhoneP2PDeniedContacts,\n];\n\nconst PRIVACY_FORWARDING_SCREENS = [\n  SettingsScreens.PrivacyForwardingAllowedContacts,\n  SettingsScreens.PrivacyForwardingDeniedContacts,\n];\n\nconst PRIVACY_VOICE_MESSAGES_SCREENS = [\n  SettingsScreens.PrivacyVoiceMessagesAllowedContacts,\n  SettingsScreens.PrivacyVoiceMessagesDeniedContacts,\n];\n\nconst PRIVACY_GROUP_CHATS_SCREENS = [\n  SettingsScreens.PrivacyGroupChatsAllowedContacts,\n  SettingsScreens.PrivacyGroupChatsDeniedContacts,\n];\n\nconst PRIVACY_MESSAGES_SCREENS = [\n  SettingsScreens.PrivacyNoPaidMessages,\n];\n\nexport type OwnProps = {\n  isActive: boolean;\n  currentScreen: SettingsScreens;\n  foldersState: FoldersState;\n  foldersDispatch: FolderEditDispatch;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  shouldSkipTransition?: boolean;\n  onReset: (forceReturnToChatList?: true | Event) => void;\n};\n\nconst Settings: FC<OwnProps> = ({\n  isActive,\n  currentScreen,\n  foldersState,\n  foldersDispatch,\n  onScreenSelect,\n  onReset,\n  shouldSkipTransition,\n}) => {\n  const { closeShareChatFolderModal } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [twoFaState, twoFaDispatch] = useTwoFaReducer();\n  const [privacyPasscode, setPrivacyPasscode] = useState<string>('');\n\n  useMarkScrolled({\n    containerRef,\n    selector: '.settings-content',\n  }, [currentScreen]);\n\n  const handleReset = useLastCallback((forceReturnToChatList?: true | Event) => {\n    const isFromSettings = selectTabState(getGlobal()).shareFolderScreen?.isFromSettings;\n\n    if (currentScreen === SettingsScreens.FoldersShare) {\n      closeShareChatFolderModal();\n    }\n\n    if (forceReturnToChatList === true || (isFromSettings !== undefined && !isFromSettings)) {\n      onReset(true);\n      return;\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersCreateFolder\n      || currentScreen === SettingsScreens.FoldersEditFolder\n      || currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      || currentScreen === SettingsScreens.FoldersEditFolderInvites\n    ) {\n      setTimeout(() => {\n        foldersDispatch({ type: 'reset' });\n      }, TRANSITION_DURATION);\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersIncludedChats\n      || currentScreen === SettingsScreens.FoldersExcludedChats\n    ) {\n      if (foldersState.mode === 'create') {\n        onScreenSelect(SettingsScreens.FoldersCreateFolder);\n      } else {\n        onScreenSelect(SettingsScreens.FoldersEditFolder);\n      }\n      return;\n    }\n\n    onReset();\n  });\n\n  function renderCurrentSectionContent(isScreenActive: boolean, activeScreen: SettingsScreens) {\n    const privacyAllowScreens: Record<number, boolean> = {\n      [SettingsScreens.PrivacyPhoneNumber]: PRIVACY_PHONE_NUMBER_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyLastSeen]: PRIVACY_LAST_SEEN_PHONE_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyProfilePhoto]: PRIVACY_PROFILE_PHOTO_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyBio]: PRIVACY_BIO_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyBirthday]: PRIVACY_BIRTHDAY_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyGifts]: PRIVACY_GIFTS_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyPhoneCall]: PRIVACY_PHONE_CALL_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyPhoneP2P]: PRIVACY_PHONE_P2P_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyForwarding]: PRIVACY_FORWARDING_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyVoiceMessages]: PRIVACY_VOICE_MESSAGES_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyGroupChats]: PRIVACY_GROUP_CHATS_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyMessages]: PRIVACY_MESSAGES_SCREENS.includes(activeScreen),\n    };\n\n    const isTwoFaScreen = TWO_FA_SCREENS.includes(activeScreen);\n    const isPasscodeScreen = PASSCODE_SCREENS.includes(activeScreen);\n    const isFoldersScreen = FOLDERS_SCREENS.includes(activeScreen);\n    const isPrivacyScreen = PRIVACY_SCREENS.includes(activeScreen)\n      || isTwoFaScreen\n      || isPasscodeScreen\n      || Object.keys(privacyAllowScreens).map(Number).includes(activeScreen)\n      || Object.values(privacyAllowScreens).includes(true);\n\n    switch (currentScreen) {\n      case SettingsScreens.Main:\n        return (\n          <SettingsMain onScreenSelect={onScreenSelect} isActive={isActive} onReset={handleReset} />\n        );\n      case SettingsScreens.EditProfile:\n        return (\n          <SettingsEditProfile\n            isActive={isActive && isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.General:\n        return (\n          <SettingsGeneral\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive\n              || activeScreen === SettingsScreens.GeneralChatBackgroundColor\n              || activeScreen === SettingsScreens.GeneralChatBackground\n              || activeScreen === SettingsScreens.QuickReaction\n              || activeScreen === SettingsScreens.CustomEmoji\n              || isPrivacyScreen || isFoldersScreen}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.QuickReaction:\n        return (\n          <SettingsQuickReaction isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.CustomEmoji:\n        return (\n          <SettingsCustomEmoji isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Notifications:\n        return (\n          <SettingsNotifications isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.DataStorage:\n        return (\n          <SettingsDataStorage isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Privacy:\n        return (\n          <SettingsPrivacy\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || isPrivacyScreen}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.Language:\n        return (\n          <SettingsLanguage\n            isActive={isScreenActive || activeScreen === SettingsScreens.DoNotTranslate}\n            onReset={handleReset}\n            onScreenSelect={onScreenSelect}\n          />\n        );\n      case SettingsScreens.DoNotTranslate:\n        return (\n          <SettingsDoNotTranslate isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Stickers:\n        return (\n          <SettingsStickers isActive={isScreenActive} onReset={handleReset} onScreenSelect={onScreenSelect} />\n        );\n      case SettingsScreens.Experimental:\n        return (\n          <SettingsExperimental isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.GeneralChatBackground:\n        return (\n          <SettingsGeneralBackground\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || activeScreen === SettingsScreens.GeneralChatBackgroundColor}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.GeneralChatBackgroundColor:\n        return (\n          <SettingsGeneralBackgroundColor\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.ActiveSessions:\n        return (\n          <SettingsActiveSessions\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.ActiveWebsites:\n        return (\n          <SettingsActiveWebsites\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.PrivacyBlockedUsers:\n        return (\n          <SettingsPrivacyBlockedUsers\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.PrivacyPhoneNumber:\n      case SettingsScreens.PrivacyLastSeen:\n      case SettingsScreens.PrivacyProfilePhoto:\n      case SettingsScreens.PrivacyBio:\n      case SettingsScreens.PrivacyBirthday:\n      case SettingsScreens.PrivacyGifts:\n      case SettingsScreens.PrivacyPhoneCall:\n      case SettingsScreens.PrivacyForwarding:\n      case SettingsScreens.PrivacyVoiceMessages:\n      case SettingsScreens.PrivacyGroupChats:\n        return (\n          <SettingsPrivacyVisibility\n            screen={currentScreen}\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || privacyAllowScreens[currentScreen]}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n      case SettingsScreens.PrivacyLastSeenAllowedContacts:\n      case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n      case SettingsScreens.PrivacyBioAllowedContacts:\n      case SettingsScreens.PrivacyBirthdayAllowedContacts:\n      case SettingsScreens.PrivacyGiftsAllowedContacts:\n      case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n      case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n      case SettingsScreens.PrivacyForwardingAllowedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n      case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n      case SettingsScreens.PrivacyNoPaidMessages:\n        return (\n          <SettingsPrivacyVisibilityExceptionList\n            isAllowList\n            usersOnly={currentScreen === SettingsScreens.PrivacyNoPaidMessages}\n            withPremiumCategory={currentScreen === SettingsScreens.PrivacyGroupChatsAllowedContacts}\n            withMiniAppsCategory={currentScreen === SettingsScreens.PrivacyGiftsAllowedContacts}\n            screen={currentScreen}\n            isActive={isScreenActive || privacyAllowScreens[currentScreen]}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      case SettingsScreens.PrivacyBioDeniedContacts:\n      case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      case SettingsScreens.PrivacyGiftsDeniedContacts:\n      case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      case SettingsScreens.PrivacyForwardingDeniedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n        return (\n          <SettingsPrivacyVisibilityExceptionList\n            screen={currentScreen}\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyMessages:\n        return (\n          <PrivacyMessages\n            isActive={isScreenActive}\n            onReset={handleReset}\n            onScreenSelect={onScreenSelect}\n          />\n        );\n\n      case SettingsScreens.Folders:\n      case SettingsScreens.FoldersCreateFolder:\n      case SettingsScreens.FoldersEditFolder:\n      case SettingsScreens.FoldersEditFolderFromChatList:\n      case SettingsScreens.FoldersEditFolderInvites:\n      case SettingsScreens.FoldersIncludedChats:\n      case SettingsScreens.FoldersIncludedChatsFromChatList:\n      case SettingsScreens.FoldersExcludedChats:\n      case SettingsScreens.FoldersExcludedChatsFromChatList:\n      case SettingsScreens.FoldersShare:\n        return (\n          <SettingsFolders\n            currentScreen={currentScreen}\n            shownScreen={activeScreen}\n            state={foldersState}\n            dispatch={foldersDispatch}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.TwoFaDisabled:\n      case SettingsScreens.TwoFaNewPassword:\n      case SettingsScreens.TwoFaNewPasswordConfirm:\n      case SettingsScreens.TwoFaNewPasswordHint:\n      case SettingsScreens.TwoFaNewPasswordEmail:\n      case SettingsScreens.TwoFaNewPasswordEmailCode:\n      case SettingsScreens.TwoFaCongratulations:\n      case SettingsScreens.TwoFaEnabled:\n      case SettingsScreens.TwoFaChangePasswordCurrent:\n      case SettingsScreens.TwoFaChangePasswordNew:\n      case SettingsScreens.TwoFaChangePasswordConfirm:\n      case SettingsScreens.TwoFaChangePasswordHint:\n      case SettingsScreens.TwoFaTurnOff:\n      case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n      case SettingsScreens.TwoFaRecoveryEmail:\n      case SettingsScreens.TwoFaRecoveryEmailCode:\n        return (\n          <SettingsTwoFa\n            currentScreen={currentScreen}\n            state={twoFaState}\n            dispatch={twoFaDispatch}\n            shownScreen={activeScreen}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PasscodeDisabled:\n      case SettingsScreens.PasscodeNewPasscode:\n      case SettingsScreens.PasscodeNewPasscodeConfirm:\n      case SettingsScreens.PasscodeChangePasscodeCurrent:\n      case SettingsScreens.PasscodeChangePasscodeNew:\n      case SettingsScreens.PasscodeChangePasscodeConfirm:\n      case SettingsScreens.PasscodeCongratulations:\n      case SettingsScreens.PasscodeEnabled:\n      case SettingsScreens.PasscodeTurnOff:\n        return (\n          <SettingsPasscode\n            currentScreen={currentScreen}\n            passcode={privacyPasscode}\n            onSetPasscode={setPrivacyPasscode}\n            shownScreen={activeScreen}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.Performance:\n        return (\n          <SettingsPerformance\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      default:\n        return undefined;\n    }\n  }\n\n  function renderCurrentSection(\n    isScreenActive: boolean,\n    _isFrom: boolean,\n    _currentKey: SettingsScreens,\n    activeKey: SettingsScreens,\n  ) {\n    return (\n      <>\n        <SettingsHeader\n          currentScreen={currentScreen}\n          onReset={handleReset}\n          onScreenSelect={onScreenSelect}\n          editedFolderId={foldersState.folderId}\n        />\n        {renderCurrentSectionContent(isScreenActive, activeKey)}\n      </>\n    );\n  }\n\n  return (\n    <Transition\n      ref={containerRef}\n      id=\"Settings\"\n      name={shouldSkipTransition ? 'none' : LAYERS_ANIMATION_NAME}\n      activeKey={currentScreen}\n      renderCount={TRANSITION_RENDER_COUNT}\n      shouldWrap\n      withSwipeControl\n    >\n      {renderCurrentSection}\n    </Transition>\n  );\n};\n\nexport default memo(Settings);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser, ApiUserStatus } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { sortUserIds } from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  filter: string;\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  userStatusesById: Record<string, ApiUserStatus>;\n  contactIds?: string[];\n};\n\nconst ContactList: FC<OwnProps & StateProps> = ({\n  isActive,\n  filter,\n  usersById,\n  userStatusesById,\n  contactIds,\n  onReset,\n}) => {\n  const {\n    openChat,\n    openNewContactDialog,\n  } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleClick = useCallback((id: string) => {\n    openChat({ id, shouldReplaceHistory: true });\n  }, [openChat]);\n\n  const listIds = useMemo(() => {\n    if (!contactIds) {\n      return undefined;\n    }\n\n    const filteredIds = filterPeersByQuery({ ids: contactIds, query: filter, type: 'user' });\n\n    return sortUserIds(filteredIds, usersById, userStatusesById);\n  }, [contactIds, filter, usersById, userStatusesById]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, listIds, Boolean(filter));\n\n  return (\n    <InfiniteScroll items={viewportIds} onLoadMore={getMore} className=\"chat-list custom-scroll\">\n      {viewportIds?.length ? (\n        viewportIds.map((id) => (\n          <ListItem\n            key={id}\n            className=\"chat-item-clickable contact-list-item\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleClick(id)}\n          >\n            <PrivateChatInfo\n              userId={id}\n              forceShowSelf\n              avatarSize=\"large\"\n              withStory\n              storyViewerOrigin={StoryViewerOrigin.ChatList}\n              ripple={!isMobile}\n            />\n          </ListItem>\n        ))\n      ) : viewportIds && !viewportIds.length ? (\n        <p className=\"no-results\" key=\"no-results\" dir=\"auto\">\n          {filter.length ? 'No contacts matched your search.' : 'Contact list is empty.'}\n        </p>\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n      <FloatingActionButton\n        key=\"create-new-contact\"\n        isShown\n        onClick={openNewContactDialog}\n        ariaLabel={lang('CreateNewContact')}\n      >\n        <Icon name=\"add-user-filled\" />\n      </FloatingActionButton>\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: contactIds } = global.contactList || {};\n    const { byId: usersById, statusesById: userStatusesById } = global.users;\n\n    return {\n      usersById,\n      userStatusesById,\n      contactIds,\n    };\n  },\n)(ContactList));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport { isUserBot } from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Button from '../../ui/Button';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nexport type OwnProps = {\n  isChannel?: boolean;\n  isActive: boolean;\n  selectedMemberIds: string[];\n  onSelectedMemberIdsChange: (ids: string[]) => void;\n  onNextStep: () => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  localContactIds?: string[];\n  searchQuery?: string;\n  isSearching?: boolean;\n  localPeerIds?: string[];\n  globalPeerIds?: string[];\n};\n\nconst NewChatStep1: FC<OwnProps & StateProps> = ({\n  isChannel,\n  isActive,\n  selectedMemberIds,\n  localContactIds,\n  searchQuery,\n  isSearching,\n  localPeerIds,\n  globalPeerIds,\n  onSelectedMemberIdsChange,\n  onNextStep,\n  onReset,\n}) => {\n  const {\n    setGlobalSearchQuery,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleFilterChange = useCallback((query: string) => {\n    setGlobalSearchQuery({ query });\n  }, []);\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const foundContactIds = localContactIds\n      ? filterPeersByQuery({ ids: localContactIds, query: searchQuery, type: 'user' }) : [];\n\n    return sortChatIds(\n      unique([\n        ...foundContactIds,\n        ...(localPeerIds || []),\n        ...(globalPeerIds || []),\n      ]).filter((contactId) => {\n        const user = usersById[contactId];\n\n        return user && !user.isSelf && (user.canBeInvitedToGroup || !isUserBot(user));\n      }),\n      false,\n      selectedMemberIds,\n    );\n  }, [localContactIds, searchQuery, localPeerIds, globalPeerIds, selectedMemberIds]);\n\n  const handleNextStep = useCallback(() => {\n    setGlobalSearchQuery({ query: '' });\n    onNextStep();\n  }, [onNextStep]);\n\n  return (\n    <div className=\"NewChat step-1\">\n      <div className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={onReset}\n          ariaLabel=\"Return to Chat List\"\n        >\n          <Icon name=\"arrow-left\" />\n        </Button>\n        <h3>{lang('GroupAddMembers')}</h3>\n      </div>\n      <div className=\"NewChat-inner step-1\">\n        <PeerPicker\n          itemIds={displayedIds}\n          selectedIds={selectedMemberIds}\n          filterValue={searchQuery}\n          filterPlaceholder={lang('SendMessageTo')}\n          searchInputId=\"new-group-picker-search\"\n          isLoading={isSearching}\n          isSearchable\n          allowMultiple\n          withStatus\n          itemInputType=\"checkbox\"\n          withDefaultPadding\n          onSelectedIdsChange={onSelectedMemberIdsChange}\n          onFilterChange={handleFilterChange}\n        />\n\n        <FloatingActionButton\n          isShown\n          onClick={handleNextStep}\n          ariaLabel={isChannel ? 'Continue To Channel Info' : 'Continue To Group Info'}\n        >\n          <Icon name=\"arrow-right\" />\n        </FloatingActionButton>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: localContactIds } = global.contactList || {};\n\n    const {\n      query: searchQuery,\n      fetchingStatus,\n      globalResults,\n      localResults,\n    } = selectTabState(global).globalSearch;\n    const { peerIds: globalPeerIds } = globalResults || {};\n    const { peerIds: localPeerIds } = localResults || {};\n\n    return {\n      localContactIds,\n      searchQuery,\n      isSearching: fetchingStatus?.chats,\n      globalPeerIds,\n      localPeerIds,\n    };\n  },\n)(NewChatStep1));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport { ChatCreationProgress } from '../../../types';\n\nimport { getUserFirstOrLastName } from '../../../global/helpers';\nimport { selectTabState } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport Button from '../../ui/Button';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\nexport type OwnProps = {\n  isChannel?: boolean;\n  isActive: boolean;\n  memberIds: string[];\n  onReset: (forceReturnToChatList?: boolean) => void;\n};\n\ntype StateProps = {\n  creationProgress?: ChatCreationProgress;\n  creationError?: string;\n  maxGroupSize?: number;\n};\n\nconst MAX_MEMBERS_FOR_GENERATE_CHAT_NAME = 4;\n\nconst NewChatStep2: FC<OwnProps & StateProps > = ({\n  isChannel,\n  isActive,\n  memberIds,\n  maxGroupSize,\n  creationProgress,\n  creationError,\n  onReset,\n}) => {\n  const {\n    createGroupChat,\n    createChannel,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const [title, setTitle] = useState('');\n  const [about, setAbout] = useState('');\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n\n  const chatTitleEmptyError = 'Chat title can\\'t be empty';\n  const channelTitleEmptyError = 'Channel title can\\'t be empty';\n  const chatTooManyUsersError = 'Sorry, creating supergroups is not yet supported';\n\n  const isLoading = creationProgress === ChatCreationProgress.InProgress;\n\n  useEffect(() => {\n    if (isChannel) {\n      return;\n    }\n    if (!memberIds.length || memberIds.length > MAX_MEMBERS_FOR_GENERATE_CHAT_NAME) {\n      setTitle('');\n      return;\n    }\n    const global = getGlobal();\n    const usersById = global.users.byId;\n    const memberFirstNames = [global.currentUserId!, ...memberIds]\n      .map((userId) => getUserFirstOrLastName(usersById[userId]))\n      .filter(Boolean);\n    const generatedChatName = memberFirstNames.slice(0, -1).join(', ')\n      + lang('CreateGroup.PeersTitleLastDelimeter')\n      + memberFirstNames[memberFirstNames.length - 1];\n    setTitle(generatedChatName);\n  }, [isChannel, memberIds, lang]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    const newValue = value.replace(/^\\s+/, '');\n\n    setTitle(newValue);\n\n    if (newValue !== value) {\n      e.currentTarget.value = newValue;\n    }\n  }, []);\n\n  const handleDescriptionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setAbout(e.currentTarget.value);\n  }, []);\n\n  const handleCreateGroup = useCallback(() => {\n    if (!title.length) {\n      setError(chatTitleEmptyError);\n      return;\n    }\n\n    if (maxGroupSize && memberIds.length >= maxGroupSize) {\n      setError(chatTooManyUsersError);\n      return;\n    }\n\n    createGroupChat({\n      title,\n      photo,\n      memberIds,\n    });\n  }, [title, memberIds, maxGroupSize, createGroupChat, photo]);\n\n  const handleCreateChannel = useCallback(() => {\n    if (!title.length) {\n      setError(channelTitleEmptyError);\n      return;\n    }\n\n    createChannel({\n      title,\n      about,\n      photo,\n      memberIds,\n    });\n  }, [title, createChannel, about, photo, memberIds, channelTitleEmptyError]);\n\n  useEffect(() => {\n    if (creationProgress === ChatCreationProgress.Complete) {\n      onReset(true);\n    }\n  }, [creationProgress, onReset]);\n\n  const renderedError = (creationError && lang(creationError)) || (\n    error !== chatTitleEmptyError && error !== channelTitleEmptyError\n      ? error\n      : undefined\n  );\n\n  return (\n    <div className=\"NewChat\">\n      <div className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onReset()}\n          ariaLabel=\"Return to member selection\"\n        >\n          <Icon name=\"arrow-left\" />\n        </Button>\n        <h3>{lang(isChannel ? 'NewChannel' : 'NewGroup')}</h3>\n      </div>\n      <div className=\"NewChat-inner step-2\">\n        <AvatarEditable\n          onChange={setPhoto}\n          title={lang('AddPhoto')}\n        />\n        <InputText\n          value={title}\n          onChange={handleTitleChange}\n          label={lang(isChannel ? 'EnterChannelName' : 'GroupName')}\n          error={error === chatTitleEmptyError || error === channelTitleEmptyError ? error : undefined}\n        />\n        {isChannel && (\n          <>\n            <InputText\n              value={about}\n              onChange={handleDescriptionChange}\n              label={lang('DescriptionOptionalPlaceholder')}\n            />\n            <p className=\"note\">{lang('DescriptionInfo')}</p>\n          </>\n        )}\n\n        {renderedError && (\n          <p className=\"error\">{renderedError}</p>\n        )}\n\n        {memberIds.length > 0 && (\n          <>\n            <h3 className=\"chat-members-heading\">{lang('GroupInfo.ParticipantCount', memberIds.length, 'i')}</h3>\n\n            <div className=\"chat-members-list custom-scroll\">\n              {memberIds.map((id) => (\n                <ListItem inactive className=\"chat-item-clickable\">\n                  <PrivateChatInfo userId={id} />\n                </ListItem>\n              ))}\n            </div>\n          </>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={title.length !== 0}\n        onClick={isChannel ? handleCreateChannel : handleCreateGroup}\n        disabled={isLoading}\n        ariaLabel={isChannel ? lang('ChannelIntro.CreateChannel') : 'Create Group'}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"arrow-right\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      progress: creationProgress,\n      error: creationError,\n    } = selectTabState(global).chatCreation || {};\n\n    return {\n      creationProgress,\n      creationError,\n      maxGroupSize: global.config?.maxGroupSize,\n    };\n  },\n)(NewChatStep2));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\n\nimport { LeftColumnContent } from '../../../types';\n\nimport { LAYERS_ANIMATION_NAME } from '../../../util/browser/windowEnvironment';\n\nimport Transition from '../../ui/Transition';\nimport NewChatStep1 from './NewChatStep1';\nimport NewChatStep2 from './NewChatStep2';\n\nimport './NewChat.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n  isChannel?: boolean;\n  content: LeftColumnContent;\n  onContentChange: (content: LeftColumnContent) => void;\n  onReset: () => void;\n};\n\nconst RENDER_COUNT = Object.keys(LeftColumnContent).length / 2;\n\nconst NewChat: FC<OwnProps> = ({\n  isActive,\n  isChannel = false,\n  content,\n  onContentChange,\n  onReset,\n}) => {\n  const [newChatMemberIds, setNewChatMemberIds] = useState<string[]>([]);\n\n  const handleNextStep = useCallback(() => {\n    onContentChange(isChannel ? LeftColumnContent.NewChannelStep2 : LeftColumnContent.NewGroupStep2);\n  }, [isChannel, onContentChange]);\n\n  return (\n    <Transition\n      id=\"NewChat\"\n      name={LAYERS_ANIMATION_NAME}\n      renderCount={RENDER_COUNT}\n      activeKey={content}\n    >\n      {(isStepActive) => {\n        switch (content) {\n          case LeftColumnContent.NewChannelStep1:\n          case LeftColumnContent.NewGroupStep1:\n            return (\n              <NewChatStep1\n                isChannel={isChannel}\n                isActive={isActive}\n                selectedMemberIds={newChatMemberIds}\n                onSelectedMemberIdsChange={setNewChatMemberIds}\n                onNextStep={handleNextStep}\n                onReset={onReset}\n              />\n            );\n          case LeftColumnContent.NewChannelStep2:\n          case LeftColumnContent.NewGroupStep2:\n            return (\n              <NewChatStep2\n                isChannel={isChannel}\n                isActive={isStepActive && isActive}\n                memberIds={newChatMemberIds}\n                onReset={onReset}\n              />\n            );\n          default:\n            return undefined;\n        }\n      }}\n    </Transition>\n  );\n};\n\nexport default memo(NewChat);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { GlobalState } from '../../global/types';\nimport type { FolderEditDispatch } from '../../hooks/reducers/useFoldersReducer';\nimport type { LeftColumnContent, SettingsScreens } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport { ANIMATION_DURATION } from '../story/helpers/ribbonAnimation';\n\nimport useForumPanelRender from '../../hooks/useForumPanelRender';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport useLeftHeaderButtonRtlForumTransition from './main/hooks/useLeftHeaderButtonRtlForumTransition';\n\nimport Icon from '../common/icons/Icon';\nimport StoryRibbon from '../story/StoryRibbon';\nimport StoryToggler from '../story/StoryToggler';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport ChatList from './main/ChatList';\nimport ForumPanel from './main/ForumPanel';\n\nimport './ArchivedChats.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n  isForumPanelOpen?: boolean;\n  archiveSettings: GlobalState['archiveSettings'];\n  isStoryRibbonShown?: boolean;\n  onReset: () => void;\n  onTopicSearch: NoneToVoidFunction;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n  foldersDispatch: FolderEditDispatch;\n  onLeftColumnContentChange: (content: LeftColumnContent) => void;\n};\n\nconst ArchivedChats: FC<OwnProps> = ({\n  isActive,\n  isForumPanelOpen,\n  archiveSettings,\n  isStoryRibbonShown,\n  onReset,\n  onTopicSearch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n  foldersDispatch,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleDisplayArchiveInChats = useLastCallback(() => {\n    updateArchiveSettings({ isHidden: false });\n  });\n\n  const {\n    shouldDisableDropdownMenuTransitionRef,\n    handleDropdownMenuTransitionEnd,\n  } = useLeftHeaderButtonRtlForumTransition(isForumPanelOpen);\n\n  const {\n    shouldRender: shouldRenderTitle,\n    transitionClassNames: titleClassNames,\n  } = useShowTransitionDeprecated(!isForumPanelOpen, undefined, undefined, false);\n\n  const {\n    shouldRenderForumPanel, handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart, isAnimationStarted,\n  } = useForumPanelRender(isForumPanelOpen);\n  const isForumPanelVisible = isForumPanelOpen && isAnimationStarted;\n\n  const {\n    shouldRender: shouldRenderStoryRibbon,\n    transitionClassNames: storyRibbonClassNames,\n    isClosing: isStoryRibbonClosing,\n  } = useShowTransitionDeprecated(\n    isStoryRibbonShown, undefined, undefined, '', false, ANIMATION_DURATION + ANIMATION_END_DELAY,\n  );\n\n  return (\n    <div className=\"ArchivedChats\">\n      <div className={buildClassName('left-header', !shouldRenderStoryRibbon && 'left-header-shadow')}>\n        {lang.isRtl && <div className=\"DropdownMenuFiller\" />}\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={onReset}\n          ariaLabel=\"Return to chat list\"\n          className={buildClassName(\n            lang.isRtl && 'rtl',\n            isForumPanelVisible && lang.isRtl && 'right-aligned',\n            shouldDisableDropdownMenuTransitionRef.current && lang.isRtl && 'disable-transition',\n          )}\n          onTransitionEnd={handleDropdownMenuTransitionEnd}\n        >\n          <Icon name=\"arrow-left\" />\n        </Button>\n        {shouldRenderTitle && <h3 className={titleClassNames}>{lang('ArchivedChats')}</h3>}\n        <div className=\"story-toggler-wrapper\">\n          <StoryToggler canShow isArchived />\n        </div>\n        {archiveSettings.isHidden && (\n          <DropdownMenu\n            className=\"archived-chats-more-menu\"\n            positionX=\"right\"\n            onTransitionEnd={lang.isRtl ? handleDropdownMenuTransitionEnd : undefined}\n          >\n            <MenuItem icon=\"archive-from-main\" onClick={handleDisplayArchiveInChats}>\n              {lang('lng_context_archive_to_list')}\n            </MenuItem>\n          </DropdownMenu>\n        )}\n      </div>\n      <div\n        className={buildClassName(\n          'chat-list-wrapper',\n          shouldRenderStoryRibbon && 'with-story-ribbon',\n          storyRibbonClassNames,\n        )}\n      >\n        {shouldRenderStoryRibbon && (\n          <StoryRibbon isArchived className=\"left-header-shadow\" isClosing={isStoryRibbonClosing} />\n        )}\n        <ChatList\n          folderType=\"archived\"\n          isActive={isActive}\n          isForumPanelOpen={isForumPanelVisible}\n          onSettingsScreenSelect={onSettingsScreenSelect}\n          onLeftColumnContentChange={onLeftColumnContentChange}\n          foldersDispatch={foldersDispatch}\n          archiveSettings={archiveSettings}\n        />\n      </div>\n      {shouldRenderForumPanel && (\n        <ForumPanel\n          isOpen={isForumPanelOpen}\n          onTopicSearch={onTopicSearch}\n          onOpenAnimationStart={handleForumPanelAnimationStart}\n          onCloseAnimationEnd={handleForumPanelAnimationEnd}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ArchivedChats);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\n\nimport { ALL_FOLDER_ID } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport { renderTextWithEntities } from '../common/helpers/renderTextWithEntities';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport CheckboxGroup from '../ui/CheckboxGroup';\nimport Modal from '../ui/Modal';\n\nimport styles from './ChatFolderModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  foldersById?: Record<number, ApiChatFolder>;\n  folderOrderedIds?: number[];\n};\n\nconst ChatFolderModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chatId,\n  foldersById,\n  folderOrderedIds,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const { editChatFolders } = getActions();\n\n  const lang = useOldLang();\n\n  const initialSelectedFolderIds = useMemo(() => {\n    if (!foldersById) {\n      return [];\n    }\n\n    return Object.keys(foldersById).reduce((result, folderId) => {\n      const { includedChatIds, pinnedChatIds } = foldersById[Number(folderId)];\n      if (includedChatIds.includes(chatId) || pinnedChatIds?.includes(chatId)) {\n        result.push(folderId);\n      }\n\n      return result;\n    }, [] as string[]);\n  }, [chatId, foldersById]);\n\n  const [selectedFolderIds, setSelectedFolderIds] = useState<string[]>(initialSelectedFolderIds);\n\n  const folders = useMemo(() => {\n    return folderOrderedIds?.filter((folderId) => folderId !== ALL_FOLDER_ID)\n      .map((folderId) => {\n        const folder = foldersById ? foldersById[folderId] : undefined;\n        const label = folder ? renderTextWithEntities({\n          text: folder.title.text,\n          entities: folder.title.entities,\n          noCustomEmojiPlayback: folder.noTitleAnimations,\n        }) : '';\n        return {\n          label,\n          value: String(folderId),\n        };\n      }) || [];\n  }, [folderOrderedIds, foldersById]);\n\n  const handleSubmit = useCallback(() => {\n    const idsToRemove = initialSelectedFolderIds.filter((id) => !selectedFolderIds.includes(id)).map(Number);\n    const idsToAdd = selectedFolderIds.filter((id) => !initialSelectedFolderIds.includes(id)).map(Number);\n\n    editChatFolders({ chatId, idsToRemove, idsToAdd });\n    onClose();\n  }, [chatId, editChatFolders, initialSelectedFolderIds, onClose, selectedFolderIds]);\n\n  if (!foldersById || !folderOrderedIds) {\n    return undefined;\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onEnter={handleSubmit}\n      className={buildClassName(styles.root, 'delete')}\n      contentClassName={styles.modalContent}\n      title={lang('FilterAddTo')}\n    >\n      <div className={buildClassName(styles.main, 'custom-scroll')}>\n        <CheckboxGroup\n          options={folders}\n          selected={selectedFolderIds}\n          onChange={setSelectedFolderIds}\n        />\n      </div>\n      <div className={styles.footer}>\n        <div className=\"dialog-buttons\">\n          <Button color=\"primary\" className=\"confirm-dialog-button\" isText onClick={handleSubmit}>\n            {lang('FilterAddTo')}\n          </Button>\n          <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byId: foldersById, orderedIds: folderOrderedIds } = global.chatFolders;\n\n    return {\n      foldersById,\n      folderOrderedIds,\n    };\n  },\n)(ChatFolderModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"modalContent\":\"EG5lPWY1\",\"root\":\"_fJBBCCE\",\"main\":\"heYMHiUt\",\"footer\":\"_jtqAaUU\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { MAX_INT_32 } from '../../config';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport RadioGroup from '../ui/RadioGroup';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  topicId?: number;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nenum MuteDuration {\n  OneHour = '3600',\n  FourHours = '14400',\n  EightHours = '28800',\n  OneDay = '86400',\n  ThreeDays = '259200',\n  Forever = '-1',\n}\n\nconst MuteChatModal: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  topicId,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const [muteUntilOption, setMuteUntilOption] = useState(MuteDuration.Forever);\n  const { updateChatMutedState, updateTopicMutedState } = getActions();\n\n  const lang = useOldLang();\n\n  const muteForOptions = useMemo(() => [\n    { label: lang('MuteFor.Hours', 1), value: MuteDuration.OneHour },\n    { label: lang('MuteFor.Hours', 4), value: MuteDuration.FourHours },\n    { label: lang('MuteFor.Hours', 8), value: MuteDuration.EightHours },\n    { label: lang('MuteFor.Days', 1), value: MuteDuration.OneDay },\n    { label: lang('MuteFor.Days', 3), value: MuteDuration.ThreeDays },\n    { label: lang('MuteFor.Forever'), value: MuteDuration.Forever },\n  ], [lang]);\n\n  const handleSubmit = useCallback(() => {\n    let mutedUntil: number;\n    if (muteUntilOption === MuteDuration.Forever) {\n      mutedUntil = MAX_INT_32;\n    } else {\n      mutedUntil = Math.floor(Date.now() / 1000) + Number(muteUntilOption);\n    }\n    if (topicId) {\n      updateTopicMutedState({ chatId, topicId, mutedUntil });\n    } else {\n      updateChatMutedState({ chatId, mutedUntil });\n    }\n    onClose();\n  }, [chatId, muteUntilOption, onClose, topicId]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onEnter={handleSubmit}\n      className=\"delete\"\n      title={lang('Notifications')}\n    >\n      <RadioGroup\n        className=\"dialog-checkbox-group\"\n        name=\"muteFor\"\n        options={muteForOptions}\n        selected={muteUntilOption}\n        onChange={setMuteUntilOption as any}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"primary\" className=\"confirm-dialog-button\" isText onClick={handleSubmit}>\n          {lang('Common.Done')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(MuteChatModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { MessageList } from '../../types';\n\nimport { EMOJI_SIZE_MODAL, STICKER_SIZE_MODAL, TME_LINK_PREFIX } from '../../config';\nimport { getAllowedAttachmentOptions, getCanPostInChat } from '../../global/helpers';\nimport {\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectPeerPaidMessagesStars,\n  selectShouldSchedule,\n  selectStickerSet,\n  selectThreadInfo,\n  selectTopic,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useSchedule from '../../hooks/useSchedule';\nimport useScrolledState from '../../hooks/useScrolledState';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport Loading from '../ui/Loading';\nimport MenuItem from '../ui/MenuItem';\nimport Modal from '../ui/Modal';\nimport Icon from './icons/Icon';\nimport StickerButton from './StickerButton';\n\nimport './StickerSetModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  fromSticker?: ApiSticker;\n  stickerSetShortName?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  currentMessageList?: MessageList;\n  canSendStickers?: boolean;\n  stickerSet?: ApiStickerSet;\n  canScheduleUntilOnline?: boolean;\n  shouldSchedule?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldUpdateStickerSetOrder?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst StickerSetModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  fromSticker,\n  stickerSetShortName,\n  stickerSet,\n  canSendStickers,\n  canScheduleUntilOnline,\n  shouldSchedule,\n  isSavedMessages,\n  isCurrentUserPremium,\n  shouldUpdateStickerSetOrder,\n  currentMessageList,\n  onClose,\n}) => {\n  const {\n    loadStickers,\n    toggleStickerSet,\n    sendMessage,\n    showNotification,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n\n  const prevStickerSet = usePreviousDeprecated(stickerSet);\n  const renderingStickerSet = stickerSet || prevStickerSet;\n\n  const isAdded = Boolean(!renderingStickerSet?.isArchived && renderingStickerSet?.installedDate);\n  const isEmoji = renderingStickerSet?.isEmoji;\n\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline);\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  useEffect(() => {\n    if (isOpen && !renderingStickerSet?.stickers) {\n      loadStickers({\n        stickerSetInfo: fromSticker ? fromSticker.stickerSetInfo : { shortName: stickerSetShortName! },\n      });\n    }\n  }, [isOpen, fromSticker, loadStickers, stickerSetShortName, renderingStickerSet]);\n\n  const handleSelect = useCallback((sticker: ApiSticker, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList) {\n      return;\n    }\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (shouldSchedule || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        sendMessage({\n          messageList: currentMessageList, sticker, isSilent, scheduledAt,\n        });\n        onClose();\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        sticker,\n        isSilent,\n        shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && isAdded,\n      });\n      onClose();\n    }\n  }, [currentMessageList, shouldSchedule, requestCalendar, onClose, shouldUpdateStickerSetOrder, isAdded]);\n\n  const handleButtonClick = useCallback(() => {\n    if (renderingStickerSet) {\n      toggleStickerSet({ stickerSetId: renderingStickerSet.id });\n      onClose();\n    }\n  }, [onClose, renderingStickerSet, toggleStickerSet]);\n\n  const handleCopyLink = useCallback(() => {\n    if (!renderingStickerSet) return;\n    const { shortName } = renderingStickerSet;\n    const suffix = isEmoji ? 'addemoji' : 'addstickers';\n    const url = `${TME_LINK_PREFIX}${suffix}/${shortName}`;\n    copyTextToClipboard(url);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  }, [isEmoji, lang, renderingStickerSet, showNotification]);\n\n  const renderButtonText = () => {\n    if (!renderingStickerSet) return lang('Loading');\n\n    const suffix = isEmoji ? 'Emoji' : 'Sticker';\n\n    return lang(\n      isAdded ? `StickerPack.Remove${suffix}Count` : `StickerPack.Add${suffix}Count`,\n      renderingStickerSet.count,\n      'i',\n    );\n  };\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isMenuOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  function renderHeader() {\n    const fullClassName = buildClassName('modal-header', !shouldHideTopBorder && 'with-top-border');\n\n    return (\n      <div className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <Icon name=\"close\" />\n        </Button>\n        <div className=\"modal-title\">\n          {renderingStickerSet ? renderText(renderingStickerSet.title, ['emoji', 'links']) : lang('AccDescrStickerSet')}\n        </div>\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"copy\" onClick={handleCopyLink}>{lang('StickersCopy')}</MenuItem>\n        </DropdownMenu>\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className={buildClassName('StickerSetModal', isEmoji && 'custom-emoji')}\n      isOpen={isOpen}\n      onClose={onClose}\n      header={renderHeader()}\n    >\n      {renderingStickerSet?.stickers ? (\n        <>\n          <div ref={containerRef} className=\"stickers custom-scroll\" onScroll={handleContentScroll}>\n            <div className=\"shared-canvas-container stickers-grid\">\n              <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n              {renderingStickerSet.stickers.map((sticker) => (\n                <StickerButton\n                  sticker={sticker}\n                  size={isEmoji ? EMOJI_SIZE_MODAL : STICKER_SIZE_MODAL}\n                  observeIntersection={observeIntersection}\n                  onClick={canSendStickers && !isEmoji ? handleSelect : undefined}\n                  clickArg={sticker}\n                  isSavedMessages={isSavedMessages}\n                  isCurrentUserPremium={isCurrentUserPremium}\n                  sharedCanvasRef={sharedCanvasRef}\n                />\n              ))}\n            </div>\n          </div>\n          <div className=\"button-wrapper\">\n            <Button\n              size=\"smaller\"\n              fluid\n              color={isAdded ? 'danger' : 'primary'}\n              onClick={handleButtonClick}\n            >\n              {renderButtonText()}\n            </Button>\n          </div>\n        </>\n      ) : (\n        <Loading />\n      )}\n      {calendar}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { fromSticker, stickerSetShortName }): StateProps => {\n    const currentMessageList = selectCurrentMessageList(global);\n    const { chatId, threadId } = currentMessageList || {};\n    const chat = chatId && selectChat(global, chatId);\n    const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n    const sendOptions = chat ? getAllowedAttachmentOptions(chat, chatFullInfo) : undefined;\n    const threadInfo = chatId && threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const isMessageThread = Boolean(!threadInfo?.isCommentsInfo && threadInfo?.fromChannelId);\n    const topic = chatId && threadId ? selectTopic(global, chatId, threadId) : undefined;\n    const canSendStickers = Boolean(\n      chat && threadId && getCanPostInChat(chat, topic, isMessageThread, chatFullInfo)\n        && sendOptions?.canSendStickers,\n    );\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n\n    const stickerSetInfo = fromSticker ? fromSticker.stickerSetInfo\n      : stickerSetShortName ? { shortName: stickerSetShortName } : undefined;\n\n    const stickerSet = stickerSetInfo ? selectStickerSet(global, stickerSetInfo) : undefined;\n    const paidMessagesStars = chatId ? selectPeerPaidMessagesStars(global, chatId) : undefined;\n\n    return {\n      canScheduleUntilOnline: Boolean(chatId) && selectCanScheduleUntilOnline(global, chatId),\n      canSendStickers,\n      isSavedMessages,\n      shouldSchedule: !paidMessagesStars && selectShouldSchedule(global),\n      stickerSet,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      shouldUpdateStickerSetOrder: global.settings.byKey.shouldUpdateStickerSetOrder,\n      currentMessageList,\n    };\n  },\n)(StickerSetModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nZYT4vJ3\",\"sets\":\"JzkmXjFF\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo,\n  useRef,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiSticker } from '../../api/types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Modal from '../ui/Modal';\nimport StickerSetCard from './StickerSetCard';\n\nimport styles from './CustomEmojiSetsModal.module.scss';\n\nexport type OwnProps = {\n  customEmojiSetIds?: string[];\n  onClose: () => void;\n};\n\ntype StateProps = {\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst CustomEmojiSetsModal: FC<OwnProps & StateProps> = ({\n  customEmojiSetIds,\n  canPlayAnimatedEmojis,\n  onClose,\n}) => {\n  const { openStickerSet } = getActions();\n  const lang = useOldLang();\n\n  const customEmojiSets = useMemo(() => {\n    return customEmojiSetIds?.map((id) => getGlobal().stickers.setsById[id]);\n  }, [customEmojiSetIds]);\n\n  // eslint-disable-next-line no-null/no-null\n  const customEmojiModalRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({\n    rootRef: customEmojiModalRef, isDisabled: !customEmojiSets,\n  });\n\n  const prevCustomEmojiSets = usePreviousDeprecated(customEmojiSets);\n  const renderingCustomEmojiSets = customEmojiSets || prevCustomEmojiSets;\n\n  const handleSetClick = useLastCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  });\n\n  return (\n    <Modal\n      isOpen={Boolean(customEmojiSets)}\n      className={styles.root}\n      onClose={onClose}\n      hasCloseButton\n      title={lang('lng_custom_emoji_used_sets')}\n    >\n      <div className={buildClassName(styles.sets, 'custom-scroll')} ref={customEmojiModalRef} teactFastList>\n        {renderingCustomEmojiSets?.map((customEmojiSet) => {\n          return (\n            <StickerSetCard\n              key={customEmojiSet.id}\n              className={styles.setCard}\n              stickerSet={customEmojiSet}\n              onClick={handleSetClick}\n              observeIntersection={observeIntersectionForCovers}\n              noPlay={!canPlayAnimatedEmojis}\n            />\n          );\n        })}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(CustomEmojiSetsModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiBotCommand, ApiChat, ApiDisallowedGifts,\n} from '../../api/types';\nimport type { IAnchorPosition, ThreadId } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport {\n  getCanAddContact,\n  getCanDeleteChat,\n  getCanManageTopic,\n  getHasAdminRight,\n  getIsSavedDialog,\n  isChatChannel,\n  isChatGroup,\n  isSystemBot,\n  isUserId,\n  isUserRightBanned,\n} from '../../global/helpers';\nimport { getIsChatMuted } from '../../global/helpers/notifications';\nimport {\n  selectBot,\n  selectCanGift,\n  selectCanManage,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsCurrentUserFrozen,\n  selectIsRightColumnShown,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectTabState,\n  selectTopic,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { disableScrolling } from '../../util/scrollLock';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevDuringAnimation from '../../hooks/usePrevDuringAnimation';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport DeleteChatModal from '../common/DeleteChatModal';\nimport MuteChatModal from '../left/MuteChatModal.async';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport Portal from '../ui/Portal';\n\nimport './HeaderMenuContainer.scss';\n\nconst BOT_BUTTONS: Record<string, { icon: IconName; label: string }> = {\n  settings: {\n    icon: 'bots',\n    label: 'BotSettings',\n  },\n  help: {\n    icon: 'help',\n    label: 'BotHelp',\n  },\n};\n\nexport type OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  isOpen: boolean;\n  withExtraActions: boolean;\n  anchor: IAnchorPosition;\n  isChannel?: boolean;\n  canStartBot?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewBoosts?: boolean;\n  canViewMonetization?: boolean;\n  canShowBoostModal?: boolean;\n  withForumActions?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  canTranslate?: boolean;\n  onSubscribeChannel: () => void;\n  onSearchClick: () => void;\n  onAsMessagesClick: () => void;\n  onClose: () => void;\n  onCloseAnimationEnd: () => void;\n  onJoinRequestsClick?: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  botCommands?: ApiBotCommand[];\n  botPrivacyPolicyUrl?: string;\n  isPrivate?: boolean;\n  isMuted?: boolean;\n  isTopic?: boolean;\n  isForum?: boolean;\n  isForumAsMessages?: true;\n  canAddContact?: boolean;\n  canDeleteChat?: boolean;\n  canReportChat?: boolean;\n  canGift?: boolean;\n  canCreateTopic?: boolean;\n  canEditTopic?: boolean;\n  hasLinkedChat?: boolean;\n  isChatInfoShown?: boolean;\n  isRightColumnShown?: boolean;\n  canManage?: boolean;\n  canTranslate?: boolean;\n  isBlocked?: boolean;\n  isBot?: boolean;\n  isChatWithSelf?: boolean;\n  savedDialog?: ApiChat;\n  disallowedGifts?: ApiDisallowedGifts;\n  isAccountFrozen?: boolean;\n};\n\nconst CLOSE_MENU_ANIMATION_DURATION = 200;\n\nconst HeaderMenuContainer: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  withExtraActions,\n  anchor,\n  isChannel,\n  botCommands,\n  botPrivacyPolicyUrl,\n  withForumActions,\n  isTopic,\n  isForum,\n  isForumAsMessages,\n  isChatInfoShown,\n  canStartBot,\n  canSubscribe,\n  canReportChat,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewMonetization,\n  canViewBoosts,\n  pendingJoinRequests,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  chat,\n  isPrivate,\n  isMuted,\n  canDeleteChat,\n  canGift,\n  hasLinkedChat,\n  canAddContact,\n  canCreateTopic,\n  canEditTopic,\n  canManage,\n  isRightColumnShown,\n  canTranslate,\n  isBlocked,\n  isBot,\n  isChatWithSelf,\n  savedDialog,\n  canShowBoostModal,\n  onJoinRequestsClick,\n  onSubscribeChannel,\n  onSearchClick,\n  onAsMessagesClick,\n  onClose,\n  onCloseAnimationEnd,\n  disallowedGifts,\n  isAccountFrozen,\n}) => {\n  const {\n    updateChatMutedState,\n    enterMessageSelectMode,\n    sendBotCommand,\n    restartBot,\n    requestMasterAndJoinGroupCall,\n    createGroupCall,\n    openLinkedChat,\n    openAddContactDialog,\n    openFrozenAccountModal,\n    requestMasterAndRequestCall,\n    toggleStatistics,\n    openMonetizationStatistics,\n    openBoostStatistics,\n    openGiftModal,\n    openThreadWithInfo,\n    openCreateTopicPanel,\n    openEditTopicPanel,\n    openChat,\n    openUrl,\n    toggleManagement,\n    togglePeerTranslations,\n    blockUser,\n    unblockUser,\n    setViewForumAsMessages,\n    openBoostModal,\n    reportMessages,\n    showNotification,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const [isMenuOpen, setIsMenuOpen] = useState(true);\n  const [shouldCloseFast, setShouldCloseFast] = useState(false);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [isMuteModalOpen, setIsMuteModalOpen] = useState(false);\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const { x, y } = anchor;\n\n  useShowTransitionDeprecated(isOpen, onCloseAnimationEnd, undefined, false);\n  const isViewGroupInfoShown = usePrevDuringAnimation(\n    (!isChatInfoShown && isForum) ? true : undefined, CLOSE_MENU_ANIMATION_DURATION,\n  );\n\n  const areAllGiftsDisallowed = useMemo(() => {\n    if (!disallowedGifts) {\n      return undefined;\n    }\n    return Object.values(disallowedGifts).every(Boolean);\n  }, [disallowedGifts]);\n\n  const closeMuteModal = useLastCallback(() => {\n    setIsMuteModalOpen(false);\n    onClose();\n  });\n\n  const handleReport = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      setIsMenuOpen(false);\n      reportMessages({ chatId, messageIds: [] });\n    }\n    onClose();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      onClose();\n    } else {\n      setIsDeleteModalOpen(true);\n    }\n    setIsMenuOpen(false);\n  });\n\n  const closeMenu = useLastCallback(() => {\n    setIsMenuOpen(false);\n    onClose();\n  });\n\n  const handleViewGroupInfo = useLastCallback(() => {\n    openThreadWithInfo({ chatId, threadId });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const closeDeleteModal = useLastCallback(() => {\n    setIsDeleteModalOpen(false);\n    onClose();\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      sendBotCommand({ command: '/start' });\n    }\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      restartBot({ chatId });\n    }\n  });\n\n  const handleUnmuteClick = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      updateChatMutedState({ chatId, isMuted: false });\n    }\n    closeMenu();\n  });\n\n  const handleMuteClick = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      closeMenu();\n    } else {\n      markRenderMuteModal();\n      setIsMuteModalOpen(true);\n    }\n    setIsMenuOpen(false);\n  });\n\n  const handleCreateTopicClick = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      openCreateTopicPanel({ chatId });\n      setShouldCloseFast(!isRightColumnShown);\n    }\n    closeMenu();\n  });\n\n  const handleEditClick = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      toggleManagement({ force: true });\n      setShouldCloseFast(!isRightColumnShown);\n    }\n    closeMenu();\n  });\n\n  const handleEditTopicClick = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      openEditTopicPanel({ chatId, topicId: Number(threadId) });\n      setShouldCloseFast(!isRightColumnShown);\n    }\n    closeMenu();\n  });\n\n  const handleViewAsTopicsClick = useLastCallback(() => {\n    openChat({ id: undefined });\n    setViewForumAsMessages({ chatId, isEnabled: false });\n    closeMenu();\n  });\n\n  const handleEnterVoiceChatClick = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else if (canCreateVoiceChat) {\n      // TODO Show popup to schedule\n      createGroupCall({\n        chatId,\n      });\n    } else {\n      requestMasterAndJoinGroupCall({\n        chatId,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleLinkedChatClick = useLastCallback(() => {\n    openLinkedChat({ id: chatId });\n    closeMenu();\n  });\n\n  const handleGiftClick = useLastCallback(() => {\n    if (areAllGiftsDisallowed && chat) {\n      showNotification({ message: lang('SendDisallowError') });\n      return;\n    }\n    openGiftModal({ forUserId: chatId });\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      openGiftModal({ forUserId: chatId });\n    }\n    closeMenu();\n  });\n\n  const handleAddContactClick = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      openAddContactDialog({ userId: chatId });\n    }\n    closeMenu();\n  });\n\n  const handleSubscribe = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      onSubscribeChannel();\n    }\n    closeMenu();\n  });\n\n  const handleVideoCall = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      requestMasterAndRequestCall({ userId: chatId, isVideo: true });\n    }\n    closeMenu();\n  });\n\n  const handleCall = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      requestMasterAndRequestCall({ userId: chatId });\n    }\n    closeMenu();\n  });\n\n  const handleSearch = useLastCallback(() => {\n    onSearchClick();\n    closeMenu();\n  });\n\n  const handleStatisticsClick = useLastCallback(() => {\n    toggleStatistics();\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleMonetizationClick = useLastCallback(() => {\n    openMonetizationStatistics({ chatId });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleBoostClick = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else if (canViewBoosts) {\n      openBoostStatistics({ chatId });\n      setShouldCloseFast(!isRightColumnShown);\n    } else {\n      openBoostModal({ chatId });\n    }\n    closeMenu();\n  });\n\n  const handleEnableTranslations = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: true });\n    closeMenu();\n  });\n\n  const handleSelectMessages = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      enterMessageSelectMode();\n    }\n    closeMenu();\n  });\n\n  const handleOpenAsMessages = useLastCallback(() => {\n    onAsMessagesClick();\n    closeMenu();\n  });\n\n  const handleBlock = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      blockUser({ userId: chatId });\n    }\n    closeMenu();\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      unblockUser({ userId: chatId });\n    }\n    closeMenu();\n  });\n\n  useEffect(disableScrolling, []);\n\n  const botButtons = useMemo(() => {\n    const commandButtons = botCommands?.map(({ command }) => {\n      const cmd = BOT_BUTTONS[command];\n      if (!cmd) return undefined;\n\n      const handleClick = () => {\n        sendBotCommand({ command: `/${command}` });\n        closeMenu();\n      };\n\n      return (\n        <MenuItem\n          key={command}\n          icon={cmd.icon}\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={handleClick}\n        >\n          {oldLang(cmd.label)}\n        </MenuItem>\n      );\n    });\n\n    const hasPrivacyCommand = botCommands?.some(({ command }) => command === 'privacy');\n\n    const privacyButton = isBot && (\n      <MenuItem\n        icon=\"privacy-policy\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => {\n          if (hasPrivacyCommand && !botPrivacyPolicyUrl) {\n            sendBotCommand({ command: '/privacy' });\n          } else {\n            openUrl({ url: botPrivacyPolicyUrl || oldLang('BotDefaultPrivacyPolicy') });\n          }\n          closeMenu();\n        }}\n      >\n        {oldLang('BotPrivacyPolicy')}\n      </MenuItem>\n    );\n\n    return [...commandButtons || [], privacyButton].filter(Boolean);\n  }, [botCommands, oldLang, botPrivacyPolicyUrl, isBot]);\n\n  const deleteTitle = useMemo(() => {\n    if (!chat) return undefined;\n\n    if (savedDialog) {\n      return oldLang('Delete');\n    }\n\n    if (isPrivate) {\n      return oldLang('DeleteChatUser');\n    }\n\n    if (canDeleteChat) {\n      return oldLang('GroupInfo.DeleteAndExit');\n    }\n\n    if (isChannel) {\n      return oldLang('LeaveChannel');\n    }\n\n    return oldLang('Group.LeaveGroup');\n  }, [canDeleteChat, chat, isChannel, isPrivate, savedDialog, oldLang]);\n\n  return (\n    <Portal>\n      <div className=\"HeaderMenuContainer\">\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${x}px;top: ${y}px;`}\n          onClose={closeMenu}\n          shouldCloseFast={shouldCloseFast}\n        >\n          {isMobile && canSearch && (\n            <MenuItem\n              icon=\"search\"\n              onClick={handleSearch}\n            >\n              {oldLang('Search')}\n            </MenuItem>\n          )}\n          {withForumActions && canCreateTopic && (\n            <>\n              <MenuItem\n                icon=\"comments\"\n                onClick={handleCreateTopicClick}\n              >\n                {oldLang('lng_forum_create_topic')}\n              </MenuItem>\n              <MenuSeparator />\n            </>\n          )}\n          {isViewGroupInfoShown && (\n            <MenuItem\n              icon=\"info\"\n              onClick={handleViewGroupInfo}\n            >\n              {isTopic ? oldLang('lng_context_view_topic') : oldLang('lng_context_view_group')}\n            </MenuItem>\n          )}\n          {canManage && !canEditTopic && (\n            <MenuItem\n              icon=\"edit\"\n              onClick={handleEditClick}\n            >\n              {oldLang('Edit')}\n            </MenuItem>\n          )}\n          {canEditTopic && (\n            <MenuItem\n              icon=\"edit\"\n              onClick={handleEditTopicClick}\n            >\n              {oldLang('lng_forum_topic_edit')}\n            </MenuItem>\n          )}\n          {isMobile && !withForumActions && isForum && !isTopic && (\n            <MenuItem\n              icon=\"forums\"\n              onClick={handleViewAsTopicsClick}\n            >\n              {oldLang('Chat.ContextViewAsTopics')}\n            </MenuItem>\n          )}\n          {withForumActions && Boolean(pendingJoinRequests) && (\n            <MenuItem\n              icon=\"user\"\n              onClick={onJoinRequestsClick}\n            >\n              {isChannel ? oldLang('SubscribeRequests') : oldLang('MemberRequests')}\n              <div className=\"right-badge\">{pendingJoinRequests}</div>\n            </MenuItem>\n          )}\n          {withForumActions && !isTopic && !isForumAsMessages && (\n            <MenuItem\n              icon=\"message\"\n              onClick={handleOpenAsMessages}\n            >\n              {oldLang('lng_forum_view_as_messages')}\n            </MenuItem>\n          )}\n          {withExtraActions && canStartBot && (\n            <MenuItem\n              icon=\"bots\"\n              onClick={handleStartBot}\n            >\n              {oldLang('BotStart')}\n            </MenuItem>\n          )}\n          {withExtraActions && canSubscribe && (\n            <MenuItem\n              icon={isChannel ? 'channel' : 'group'}\n              onClick={handleSubscribe}\n            >\n              {oldLang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </MenuItem>\n          )}\n          {canShowBoostModal && !canViewBoosts && (\n            <MenuItem\n              icon=\"boost-outline\"\n              onClick={handleBoostClick}\n            >\n              {oldLang(isChannel ? 'BoostingBoostChannelMenu' : 'BoostingBoostGroupMenu')}\n            </MenuItem>\n          )}\n          {canAddContact && (\n            <MenuItem\n              icon=\"add-user\"\n              onClick={handleAddContactClick}\n            >\n              {oldLang('AddContact')}\n            </MenuItem>\n          )}\n          {isMobile && canCall && (\n            <MenuItem\n              icon=\"phone\"\n              onClick={handleCall}\n            >\n              {oldLang('Call')}\n            </MenuItem>\n          )}\n          {canCall && (\n            <MenuItem\n              icon=\"video-outlined\"\n              onClick={handleVideoCall}\n            >\n              {oldLang('VideoCall')}\n            </MenuItem>\n          )}\n          {canMute && (isMuted ? (\n            <MenuItem\n              icon=\"unmute\"\n              onClick={handleUnmuteClick}\n            >\n              {oldLang('ChatsUnmute')}\n            </MenuItem>\n          )\n            : (\n              <MenuItem\n                icon=\"mute\"\n                onClick={handleMuteClick}\n              >\n                {oldLang('ChatsMute')}...\n              </MenuItem>\n            )\n          )}\n          {(canEnterVoiceChat || canCreateVoiceChat) && (\n            <MenuItem\n              icon=\"voice-chat\"\n              onClick={handleEnterVoiceChatClick}\n            >\n              {oldLang(canCreateVoiceChat ? 'StartVoipChat' : 'VoipGroupJoinCall')}\n            </MenuItem>\n          )}\n          {hasLinkedChat && (\n            <MenuItem\n              icon={isChannel ? 'comments' : 'channel'}\n              onClick={handleLinkedChatClick}\n            >\n              {oldLang(isChannel ? 'ViewDiscussion' : 'lng_profile_view_channel')}\n            </MenuItem>\n          )}\n          {!withForumActions && (\n            <MenuItem\n              icon=\"select\"\n              onClick={handleSelectMessages}\n            >\n              {oldLang('ReportSelectMessages')}\n            </MenuItem>\n          )}\n          {canViewBoosts && (\n            <MenuItem\n              icon=\"boost-outline\"\n              onClick={handleBoostClick}\n            >\n              {oldLang('Boosts')}\n            </MenuItem>\n          )}\n          {canViewStatistics && (\n            <MenuItem\n              icon=\"stats\"\n              onClick={handleStatisticsClick}\n            >\n              {oldLang('Statistics')}\n            </MenuItem>\n          )}\n          {isChannel && canViewMonetization && (\n            <MenuItem\n              icon=\"cash-circle\"\n              onClick={handleMonetizationClick}\n            >\n              {oldLang('lng_channel_earn_title')}\n            </MenuItem>\n          )}\n          {canTranslate && (\n            <MenuItem\n              icon=\"language\"\n              onClick={handleEnableTranslations}\n            >\n              {oldLang('lng_context_translate')}\n            </MenuItem>\n          )}\n          {canReportChat && (\n            <MenuItem\n              icon=\"flag\"\n              onClick={handleReport}\n            >\n              {oldLang('ReportPeer.Report')}\n            </MenuItem>\n          )}\n          {botButtons}\n          {canGift && (\n            <MenuItem\n              icon=\"gift\"\n              onClick={handleGiftClick}\n            >\n              {oldLang('ProfileSendAGift')}\n            </MenuItem>\n          )}\n          {isBot && (\n            <MenuItem\n              icon={isBlocked ? 'bots' : 'hand-stop'}\n              onClick={isBlocked ? handleRestartBot : handleBlock}\n            >\n              {isBlocked ? oldLang('BotRestart') : oldLang('Bot.Stop')}\n            </MenuItem>\n          )}\n          {isPrivate && !isChatWithSelf && !isBot && (\n            <MenuItem\n              icon={isBlocked ? 'user' : 'hand-stop'}\n              onClick={isBlocked ? handleUnblock : handleBlock}\n            >\n              {isBlocked ? oldLang('Unblock') : oldLang('BlockUser')}\n            </MenuItem>\n          )}\n          {canLeave && (\n            <>\n              <MenuSeparator />\n              <MenuItem\n                destructive\n                icon=\"delete\"\n                onClick={handleDelete}\n              >\n                {deleteTitle}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n        {chat && (\n          <DeleteChatModal\n            isOpen={isDeleteModalOpen}\n            onClose={closeDeleteModal}\n            chat={savedDialog || chat}\n            isSavedDialog={Boolean(savedDialog)}\n          />\n        )}\n        {canMute && shouldRenderMuteModal && chat?.id && (\n          <MuteChatModal\n            isOpen={isMuteModalOpen}\n            onClose={closeMuteModal}\n            onCloseAnimationEnd={unmarkRenderMuteModal}\n            chatId={chat.id}\n          />\n        )}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat || chat.isRestricted) {\n      return {};\n    }\n    const isPrivate = isUserId(chat.id);\n    const user = isPrivate ? selectUser(global, chatId) : undefined;\n    const canAddContact = user && getCanAddContact(user);\n    const isMainThread = threadId === MAIN_THREAD_ID;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n    const canReportChat = isMainThread && !user && (isChatChannel(chat) || isChatGroup(chat));\n\n    const chatBot = !isSystemBot(chatId) ? selectBot(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const fullInfo = userFullInfo || chatFullInfo;\n    const canGift = selectCanGift(global, chatId);\n\n    const topic = selectTopic(global, chatId, threadId);\n    const canCreateTopic = chat.isForum && (\n      chat.isCreator || !isUserRightBanned(chat, 'manageTopics') || getHasAdminRight(chat, 'manageTopics')\n    );\n    const canEditTopic = topic && getCanManageTopic(chat, topic);\n    const canManage = selectCanManage(global, chatId);\n    // Context menu item should only be displayed if user hid translation panel\n    const canTranslate = selectCanTranslateChat(global, chatId) && fullInfo?.isTranslationDisabled;\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n    const savedDialog = isSavedDialog ? selectChat(global, String(threadId)) : undefined;\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n    return {\n      chat,\n      isMuted: getIsChatMuted(chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id)),\n      isPrivate,\n      isTopic: chat?.isForum && !isMainThread,\n      isForum: chat?.isForum,\n      isForumAsMessages: chat?.isForumAsMessages,\n      canAddContact,\n      canDeleteChat: getCanDeleteChat(chat),\n      canReportChat,\n      canGift,\n      hasLinkedChat: Boolean(chatFullInfo?.linkedChatId),\n      botCommands: chatBot ? userFullInfo?.botInfo?.commands : undefined,\n      botPrivacyPolicyUrl: chatBot ? userFullInfo?.botInfo?.privacyPolicyUrl : undefined,\n      isChatInfoShown: selectTabState(global).isChatInfoShown\n        && currentChatId === chatId && currentThreadId === threadId,\n      canCreateTopic,\n      canEditTopic,\n      canManage,\n      isRightColumnShown: selectIsRightColumnShown(global),\n      canTranslate,\n      isBlocked: userFullInfo?.isBlocked,\n      isBot: Boolean(chatBot),\n      isChatWithSelf,\n      savedDialog,\n      disallowedGifts: userFullInfo?.disallowedGifts,\n      isAccountFrozen,\n    };\n  },\n)(HeaderMenuContainer));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"vv5ppXel\",\"active\":\"FVgqrSSK\",\"info\":\"DboxqiZd\",\"topRow\":\"Ymu2m1PR\",\"meta\":\"A2rsvUBm\",\"subtitle\":\"qUzmwaIn\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiChat, ApiMessage, ApiPeer } from '../../../api/types';\n\nimport { getMessageSenderName } from '../../../global/helpers/peers';\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport MessageSummary from '../../common/MessageSummary';\n\nimport styles from './MiddleSearchResult.module.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  message: ApiMessage;\n  senderPeer?: ApiPeer;\n  messageChat?: ApiChat;\n  shouldShowChat?: boolean;\n  query?: string;\n  className?: string;\n  onClick: (message: ApiMessage) => void;\n};\n\nconst TRUNCATE_LENGTH = 200;\n\nconst MiddleSearchResult = ({\n  isActive,\n  message,\n  senderPeer,\n  messageChat,\n  shouldShowChat,\n  query,\n  className,\n  onClick,\n}: OwnProps) => {\n  const lang = useOldLang();\n  const hiddenForwardTitle = message.forwardInfo?.hiddenUserName;\n\n  const peer = shouldShowChat ? messageChat : senderPeer;\n\n  const senderName = shouldShowChat ? getMessageSenderName(lang, message.chatId, senderPeer) : undefined;\n\n  const handleClick = useLastCallback(() => {\n    onClick(message);\n  });\n\n  return (\n    <div\n      role=\"button\"\n      tabIndex={0}\n      className={buildClassName(styles.root, isActive && styles.active, className)}\n      onClick={handleClick}\n    >\n      <Avatar\n        className={styles.avatar}\n        peer={peer}\n        text={hiddenForwardTitle}\n        size=\"medium\"\n      />\n      <div className={styles.info}>\n        <div className={styles.topRow}>\n          {(peer && <FullNameTitle peer={peer} withEmojiStatus />) || hiddenForwardTitle}\n          <LastMessageMeta className={styles.meta} message={message} />\n        </div>\n        <div className={styles.subtitle} dir=\"auto\">\n          {senderName && (\n            <>\n              <span className=\"sender-name\">{renderText(senderName)}</span>\n              <span className=\"colon\">:</span>\n            </>\n          )}\n          <MessageSummary message={message} highlight={query} truncateLength={TRUNCATE_LENGTH} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(MiddleSearchResult);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"FTMljUuX\",\"header\":\"OvmjSMwA\",\"active\":\"DEIUzXQd\",\"avatar\":\"mp1PmoMq\",\"input\":\"z2K8Q7ib\",\"mobile\":\"u0fb78AA\",\"focused\":\"dqF8dYNx\",\"withDropdown\":\"AqhBggrp\",\"adaptSearchBorders\":\"Q9RZQaTu\",\"dropdown\":\"MFGvbICO\",\"dropdownHidden\":\"Alee0CKy\",\"results\":\"RtfTOE72\",\"placeholder\":\"O1HoZFge\",\"separator\":\"_Yy43QLl\",\"savedTags\":\"BcvAfv1E\",\"wrap\":\"JkESCST6\",\"searchTags\":\"rO3pH3LI\",\"savedSearchTag\":\"qA4gov4D\",\"hash\":\"q5NOmUAM\",\"searchTypes\":\"rVYZG__K\",\"searchType\":\"nE1Xwoo7\",\"selectedType\":\"i29dP8iT\",\"footer\":\"jyS1l9yn\",\"keyboard-visible\":\"ao05jKHW\",\"keyboardVisible\":\"ao05jKHW\",\"counter\":\"NmmL_cO3\",\"mobileNavigation\":\"dLO1hlHU\",\"navigationButton\":\"Z4vLAlsu\",\"navigationDisabled\":\"IqA7R2xO\",\"jumpIn\":\"n9kXbTu6\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiReaction, ApiReactionKey, ApiSavedReactionTag,\n} from '../../../api/types';\nimport type {\n  CustomPeer, MiddleSearchParams, MiddleSearchType, ThreadId,\n} from '../../../types';\n\nimport { ANONYMOUS_USER_ID } from '../../../config';\nimport { requestMeasure, requestMutation, requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  getIsSavedDialog, getReactionKey, isSameReaction, isSystemBot,\n} from '../../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectCurrentMiddleSearch,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport { IS_IOS } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { getDayStartAt } from '../../../util/dates/dateFormat';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport { getSearchResultKey, parseSearchResultKey, type SearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { debounce, fastRaf } from '../../../util/schedulers';\n\nimport { useClickOutside } from '../../../hooks/events/useOutsideClick';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport SearchInput from '../../ui/SearchInput';\nimport SavedTagButton from '../message/reactions/SavedTagButton';\nimport MiddleSearchResult from './MiddleSearchResult';\n\nimport styles from './MiddleSearch.module.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n};\n\ntype StateProps = {\n  isActive?: boolean;\n  chat?: ApiChat;\n  threadId?: ThreadId;\n  requestedQuery?: string;\n  savedTags?: Record<ApiReactionKey, ApiSavedReactionTag>;\n  savedTag?: ApiReaction;\n  totalCount?: number;\n  lastSearchQuery?: string;\n  foundIds?: SearchResultKey[];\n  isHistoryCalendarOpen?: boolean;\n  isCurrentUserPremium?: boolean;\n  isSavedMessages?: boolean;\n  fetchingQuery?: string;\n  isHashtagQuery?: boolean;\n  searchType?: MiddleSearchType;\n  currentUserId?: string;\n};\n\nconst CHANNELS_PEER: CustomPeer = {\n  isCustomPeer: true,\n  avatarIcon: 'channel-filled',\n  titleKey: 'SearchPublicPosts',\n};\nconst FOCUSED_SEARCH_TRIGGER_OFFSET = 5;\nconst HIDE_TIMEOUT = 200;\nconst RESULT_ITEM_CLASS_NAME = 'MiddleSearchResult';\n\nconst runDebouncedForSearch = debounce((cb) => cb(), 200, false);\n\nconst MiddleSearch: FC<StateProps> = ({\n  isActive,\n  chat,\n  threadId,\n  requestedQuery,\n  savedTags,\n  savedTag,\n  totalCount,\n  lastSearchQuery,\n  foundIds,\n  isHistoryCalendarOpen,\n  isCurrentUserPremium,\n  isSavedMessages,\n  fetchingQuery,\n  isHashtagQuery,\n  searchType = 'chat',\n  currentUserId,\n}) => {\n  const {\n    updateMiddleSearch,\n    resetMiddleSearch,\n    performMiddleSearch,\n    focusMessage,\n    closeMiddleSearch,\n    openHistoryCalendar,\n    openPremiumModal,\n    loadSavedReactionTags,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const shouldCancelSearchRef = useRef(false);\n\n  const { isMobile } = useAppLayout();\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [query, setQuery] = useState(requestedQuery || '');\n  const [focusedIndex, setFocusedIndex] = useState(0);\n  const canFocusNewer = foundIds && focusedIndex > 0;\n  const canFocusOlder = foundIds && focusedIndex < foundIds.length - 1;\n\n  const [isFullyHidden, setIsFullyHidden] = useState(!isActive);\n  const hiddenTimerRef = useRef<number>();\n  const maybeLongPressActiveRef = useRef(true);\n\n  const [isFocused, markFocused, markBlurred] = useFlag();\n  const [isViewAsList, setIsViewAsList] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleClickOutside = useLastCallback((event: MouseEvent) => {\n    if (maybeLongPressActiveRef.current) return;\n    // Ignore clicks inside modals\n    if ((event.target as HTMLElement).closest('.Modal')) return;\n    markBlurred();\n  });\n  useClickOutside([ref], handleClickOutside);\n\n  const hasResultsContainer = Boolean((query && foundIds) || isHashtagQuery);\n  const isOnlyHash = isHashtagQuery && !query;\n  const areResultsEmpty = Boolean(query && foundIds && !foundIds.length && !isLoading && !isOnlyHash);\n  const hasResultsPlaceholder = areResultsEmpty || isOnlyHash;\n  const isNonFocusedDropdownForced = searchType === 'myChats' || searchType === 'channels';\n  const hasResultsDropdown = isActive && (isViewAsList || !isMobile) && (isFocused || isNonFocusedDropdownForced)\n    && Boolean(\n      hasResultsContainer || hasResultsPlaceholder || savedTags,\n    );\n\n  const hasQueryData = Boolean((query && !isOnlyHash) || savedTag);\n  const hasNavigationButtons = searchType === 'chat' && Boolean(foundIds?.length);\n\n  const handleClose = useLastCallback(() => {\n    closeMiddleSearch();\n  });\n\n  const focusInput = useLastCallback(() => {\n    requestMeasure(() => {\n      inputRef.current?.focus();\n    });\n  });\n\n  const blurInput = useLastCallback(() => {\n    inputRef.current?.blur();\n  });\n\n  // Fix for iOS keyboard\n  useEffect(() => {\n    const { visualViewport } = window;\n    if (!visualViewport) {\n      return undefined;\n    }\n\n    const mainEl = document.getElementById('Main') as HTMLDivElement;\n    const handleResize = () => {\n      const { activeElement } = document;\n      if (activeElement && (activeElement === inputRef.current)) {\n        const { pageTop, height } = visualViewport;\n\n        requestMutation(() => {\n          mainEl.style.transform = `translateY(${pageTop}px)`;\n          mainEl.style.height = `${height}px`;\n          document.documentElement.scrollTop = pageTop;\n        });\n      } else {\n        requestMutation(() => {\n          mainEl.style.transform = '';\n          mainEl.style.height = '';\n        });\n      }\n    };\n\n    visualViewport.addEventListener('resize', handleResize);\n\n    return () => {\n      visualViewport.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  // Reset focus on query result\n  useEffect(() => {\n    setFocusedIndex(-1);\n  }, [lastSearchQuery]);\n\n  // Disable native up/down buttons on iOS\n  useLayoutEffect(() => {\n    if (!IS_IOS) return;\n\n    Array.from(document.querySelectorAll<HTMLInputElement>('input')).forEach((input) => {\n      input.disabled = Boolean(isActive && input !== inputRef.current);\n    });\n  }, [isActive]);\n\n  // Blur on exit\n  useEffect(() => {\n    if (!isActive) {\n      inputRef.current!.blur();\n      setIsViewAsList(true);\n      setFocusedIndex(0);\n      setQuery('');\n      hiddenTimerRef.current = window.setTimeout(() => setIsFullyHidden(true), HIDE_TIMEOUT);\n    } else {\n      setIsFullyHidden(false);\n      clearTimeout(hiddenTimerRef.current);\n    }\n  }, [isActive]);\n\n  useEffect(() => {\n    if (!requestedQuery || !chat?.id) return;\n    setQuery(requestedQuery);\n    updateMiddleSearch({ chatId: chat.id, threadId, update: { requestedQuery: undefined } });\n    setIsLoading(true);\n\n    requestNextMutation(() => {\n      const input = inputRef.current;\n      if (!input) return;\n      focusEditableElement(input, true, true);\n      markFocused();\n    });\n  }, [chat?.id, requestedQuery, threadId]);\n\n  useEffectWithPrevDeps(([prevIsActive]) => {\n    if (isActive !== prevIsActive && !query && lastSearchQuery) {\n      setQuery(lastSearchQuery); // Restore query when returning back\n    }\n  }, [isActive, lastSearchQuery, query]);\n\n  useEffectWithPrevDeps(([prevIsCalendarOpen]) => {\n    if (!isActive || prevIsCalendarOpen === isHistoryCalendarOpen) return;\n    if (isHistoryCalendarOpen) {\n      blurInput();\n      markBlurred();\n    } else {\n      focusInput();\n    }\n  }, [isHistoryCalendarOpen, isActive]);\n\n  const handleReset = useLastCallback(() => {\n    if (!query?.length && !savedTag) {\n      handleClose();\n      return;\n    }\n\n    setQuery('');\n    setIsLoading(false);\n    resetMiddleSearch();\n    focusInput();\n  });\n\n  useEffect(() => (isActive ? captureEscKeyListener(handleReset) : undefined), [isActive, handleClose]);\n\n  const savedTagsArray = useMemo(() => {\n    if (!savedTags) return undefined;\n    return Object.values(savedTags);\n  }, [savedTags]);\n\n  const hasSavedTags = Boolean(savedTagsArray?.length);\n  const areSavedTagsDisabled = hasSavedTags && !isCurrentUserPremium;\n\n  useEffect(() => {\n    if (isSavedMessages && isActive) loadSavedReactionTags();\n  }, [isSavedMessages, isActive]);\n\n  const handleSearch = useLastCallback(() => {\n    const chatId = chat?.id;\n    if (!chatId) {\n      return;\n    }\n\n    runDebouncedForSearch(() => {\n      if (shouldCancelSearchRef.current) return;\n      performMiddleSearch({ chatId, threadId, query });\n    });\n  });\n\n  const handleQueryChange = useLastCallback((newQuery: string) => {\n    shouldCancelSearchRef.current = false;\n\n    if (newQuery.startsWith('#') && !isHashtagQuery) {\n      updateMiddleSearch({ chatId: chat!.id, threadId, update: { isHashtag: true } });\n      setQuery(newQuery.slice(1));\n      handleSearch();\n      return;\n    }\n\n    setQuery(newQuery);\n\n    if (!newQuery) {\n      setIsLoading(false);\n      resetMiddleSearch();\n      shouldCancelSearchRef.current = true;\n    }\n  });\n\n  useEffect(() => {\n    if (query) {\n      handleSearch();\n    }\n  }, [query]);\n\n  useEffect(() => {\n    setIsLoading(Boolean(fetchingQuery));\n  }, [fetchingQuery]);\n\n  useEffect(() => {\n    if (!foundIds?.length) return;\n    const isClose = foundIds.length - focusedIndex < FOCUSED_SEARCH_TRIGGER_OFFSET;\n    if (isClose) {\n      handleSearch();\n    }\n  }, [focusedIndex, foundIds?.length]);\n\n  useEffect(() => {\n    if (!isActive) return undefined;\n\n    maybeLongPressActiveRef.current = true;\n\n    function focus() {\n      inputRef.current?.focus();\n      markFocused();\n\n      fastRaf(() => {\n        maybeLongPressActiveRef.current = false;\n      });\n    }\n\n    function removeListeners() {\n      window.removeEventListener('touchend', focus);\n      window.removeEventListener('mouseup', focus);\n\n      fastRaf(() => {\n        maybeLongPressActiveRef.current = false;\n      });\n    }\n\n    window.addEventListener('touchend', focus);\n    window.addEventListener('mouseup', focus);\n\n    window.addEventListener('touchstart', removeListeners);\n    window.addEventListener('mousedown', removeListeners);\n\n    return () => {\n      removeListeners();\n      window.removeEventListener('touchstart', removeListeners);\n      window.removeEventListener('mousedown', removeListeners);\n    };\n  }, [isActive]);\n\n  useHistoryBack({\n    isActive,\n    onBack: handleClose,\n  });\n\n  const [viewportIds, getMore, viewportOffset = 0] = useInfiniteScroll(handleSearch, foundIds);\n\n  const viewportResults = useMemo(() => {\n    if ((!query && !savedTag) || !viewportIds?.length) {\n      return MEMO_EMPTY_ARRAY;\n    }\n    const global = getGlobal();\n\n    return viewportIds.map((searchResultKey) => {\n      const [chatId, id] = parseSearchResultKey(searchResultKey);\n      const message = selectChatMessage(global, chatId, id);\n      if (!message) {\n        return undefined;\n      }\n\n      const originalSender = (isSavedMessages || isSystemBot(chatId) || chatId === ANONYMOUS_USER_ID)\n        ? selectForwardedSender(global, message) : undefined;\n      const messageSender = selectSender(global, message);\n      const messageChat = selectChat(global, message.chatId);\n\n      const senderPeer = originalSender || messageSender;\n\n      return {\n        searchResultKey,\n        message,\n        messageChat,\n        senderPeer,\n      };\n    }).filter(Boolean);\n  }, [query, savedTag, viewportIds, isSavedMessages]);\n\n  const handleMessageClick = useLastCallback((message: ApiMessage) => {\n    const searchResultKey = getSearchResultKey(message);\n    const index = foundIds?.indexOf(searchResultKey) || 0;\n    const realIndex = index + viewportOffset;\n    setFocusedIndex(realIndex);\n\n    if (searchType === 'chat') {\n      setIsViewAsList(false);\n    }\n\n    focusMessage({\n      chatId: message.chatId,\n      messageId: message.id,\n      threadId: !isHashtagQuery ? threadId : undefined,\n    });\n\n    markBlurred();\n  });\n\n  const handleTriggerViewStyle = useLastCallback(() => {\n    setIsViewAsList((prev) => !prev);\n    markFocused();\n  });\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, hasResultsContainer, (index) => {\n    const foundResult = viewportResults?.[index === -1 ? 0 : index];\n    if (foundResult) {\n      handleMessageClick(foundResult.message);\n      setFocusedIndex(index + viewportOffset);\n    }\n  }, `.${RESULT_ITEM_CLASS_NAME}`, true);\n\n  const updateSearchParams = useLastCallback((update: Partial<MiddleSearchParams>) => {\n    updateMiddleSearch({ chatId: chat!.id, threadId, update });\n\n    handleSearch();\n  });\n\n  const activateSearchTag = useLastCallback((tag: ApiReaction) => {\n    if (areSavedTagsDisabled) {\n      openPremiumModal({\n        initialSection: 'saved_tags',\n      });\n      return;\n    }\n\n    updateSearchParams({ savedTag: tag });\n  });\n\n  const removeSearchSavedTag = useLastCallback(() => {\n    updateSearchParams({ savedTag: undefined });\n  });\n\n  const handleDeleteTag = useLastCallback(() => {\n    if (isHashtagQuery) {\n      updateSearchParams({ isHashtag: false });\n      return;\n    }\n\n    if (savedTag) {\n      removeSearchSavedTag();\n    }\n  });\n\n  const handleChangeSearchType = useLastCallback((type: MiddleSearchType) => {\n    updateSearchParams({ type });\n    setIsViewAsList(true);\n  });\n\n  const handleFocusOlder = useLastCallback(() => {\n    if (searchType !== 'chat') return;\n    markBlurred();\n    blurInput();\n    if (foundIds) {\n      const newFocusIndex = focusedIndex + 1;\n      const [chatId, messageId] = parseSearchResultKey(foundIds[newFocusIndex]);\n      focusMessage({ chatId, messageId, threadId });\n      setFocusedIndex(newFocusIndex);\n    }\n  });\n\n  const handleFocusNewer = useLastCallback(() => {\n    if (searchType !== 'chat') return;\n    markBlurred();\n    blurInput();\n    if (foundIds) {\n      const newFocusIndex = focusedIndex - 1;\n      const [chatId, messageId] = parseSearchResultKey(foundIds[newFocusIndex]);\n      focusMessage({ chatId, messageId, threadId });\n      setFocusedIndex(newFocusIndex);\n    }\n  });\n\n  function renderTypeTag(type: MiddleSearchType, isForTag?: boolean) {\n    const isSelected = !isForTag && searchType === type;\n    switch (type) {\n      case 'chat':\n        return (\n          <PeerChip\n            className={buildClassName(styles.searchType, isSelected && styles.selectedType)}\n            peerId={chat?.id}\n            title={oldLang('SearchThisChat')}\n            clickArg=\"chat\"\n            onClick={isForTag ? handleDeleteTag : handleChangeSearchType}\n          />\n        );\n      case 'myChats':\n        return (\n          <PeerChip\n            className={buildClassName(styles.searchType, isSelected && styles.selectedType)}\n            peerId={currentUserId}\n            forceShowSelf\n            title={oldLang('SearchMyMessages')}\n            clickArg=\"myChats\"\n            onClick={isForTag ? handleDeleteTag : handleChangeSearchType}\n          />\n        );\n      case 'channels':\n        return (\n          <PeerChip\n            className={buildClassName(styles.searchType, isSelected && styles.selectedType)}\n            customPeer={CHANNELS_PEER}\n            title={oldLang('SearchPublicPosts')}\n            clickArg=\"channels\"\n            onClick={isForTag ? handleDeleteTag : handleChangeSearchType}\n          />\n        );\n    }\n    return undefined;\n  }\n\n  function renderDropdown() {\n    return (\n      <div className={buildClassName(styles.dropdown, !hasResultsDropdown && styles.dropdownHidden)}>\n        {!isMobile && <div className={styles.separator} />}\n        {hasSavedTags && !isHashtagQuery && (\n          <div\n            className={buildClassName(\n              styles.savedTags,\n              !isMobile && styles.wrap,\n              'no-scrollbar',\n            )}\n          >\n            {savedTagsArray.map((tag) => {\n              const isChosen = isSameReaction(tag.reaction, savedTag);\n              return (\n                <SavedTagButton\n                  containerId=\"local-search\"\n                  key={getReactionKey(tag.reaction)}\n                  reaction={tag.reaction}\n                  tag={tag}\n                  withCount\n                  isDisabled={areSavedTagsDisabled}\n                  isChosen={isChosen}\n                  onClick={isChosen ? removeSearchSavedTag : activateSearchTag}\n                />\n              );\n            })}\n          </div>\n        )}\n        {isHashtagQuery && (\n          <div\n            className={buildClassName(styles.searchTypes, 'no-scrollbar')}\n          >\n            {renderTypeTag('chat')}\n            {renderTypeTag('myChats')}\n            {renderTypeTag('channels')}\n          </div>\n        )}\n        {hasResultsContainer && (\n          <InfiniteScroll\n            ref={containerRef}\n            className={buildClassName(styles.results, 'custom-scroll')}\n            items={viewportResults}\n            itemSelector={`.${RESULT_ITEM_CLASS_NAME}`}\n            preloadBackwards={0}\n            onLoadMore={getMore}\n            onKeyDown={handleKeyDown}\n          >\n            {areResultsEmpty && (\n              <span key=\"nothing\" className={styles.placeholder}>\n                {oldLang('NoResultFoundFor', query)}\n              </span>\n            )}\n            {isOnlyHash && (\n              <span key=\"enterhash\" className={styles.placeholder}>\n                {oldLang('HashtagSearchPlaceholder')}\n              </span>\n            )}\n            {viewportResults?.map(({\n              message, senderPeer, messageChat, searchResultKey,\n            }, i) => (\n              <MiddleSearchResult\n                key={searchResultKey}\n                teactOrderKey={-message.date}\n                className={RESULT_ITEM_CLASS_NAME}\n                query={query}\n                message={message}\n                senderPeer={senderPeer}\n                messageChat={messageChat}\n                shouldShowChat={isHashtagQuery}\n                isActive={focusedIndex - viewportOffset === i}\n                onClick={handleMessageClick}\n              />\n            ))}\n          </InfiniteScroll>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      id=\"MiddleSearch\"\n      className={buildClassName(\n        styles.root,\n        isActive && styles.active,\n        !isActive && isFullyHidden && 'visually-hidden', // `display: none` would prevent focus on iOS\n        isFocused && styles.focused,\n        isMobile && styles.mobile,\n      )}\n      ref={ref}\n    >\n      <div className={styles.header}>\n        {!isMobile && (\n          <Avatar\n            className={styles.avatar}\n            peer={chat}\n            size=\"medium\"\n            isSavedMessages={isSavedMessages}\n          />\n        )}\n        <SearchInput\n          ref={inputRef}\n          value={query}\n          className={buildClassName(\n            styles.input,\n            hasResultsDropdown && styles.withDropdown,\n            hasResultsDropdown && !isMobile && styles.adaptSearchBorders,\n          )}\n          canClose={!isMobile}\n          isLoading={isLoading}\n          resultsItemSelector={`.${styles.results} .${RESULT_ITEM_CLASS_NAME}`}\n          hasUpButton={hasNavigationButtons && !isMobile}\n          hasDownButton={hasNavigationButtons && !isMobile}\n          placeholder={isHashtagQuery ? oldLang('SearchHashtagsHint') : oldLang('Search')}\n          teactExperimentControlled\n          onChange={handleQueryChange}\n          onStartBackspace={handleDeleteTag}\n          onReset={handleReset}\n          withBackIcon={isMobile}\n          onFocus={markFocused}\n          focused={isFocused}\n          onUpClick={canFocusOlder ? handleFocusOlder : undefined}\n          onDownClick={canFocusNewer ? handleFocusNewer : undefined}\n        >\n          <div className={styles.searchTags}>\n            {savedTag && (\n              <SavedTagButton\n                containerId=\"local-search-tags\"\n                className={styles.savedSearchTag}\n                reaction={savedTag}\n                tag={savedTags![getReactionKey(savedTag)]}\n                onClick={removeSearchSavedTag}\n              />\n            )}\n            {isHashtagQuery && <div className={styles.hash}>#</div>}\n          </div>\n          {!isMobile && renderDropdown()}\n        </SearchInput>\n        {!isMobile && (\n          <div className={styles.icons}>\n            <Button\n              round\n              size=\"smaller\"\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => openHistoryCalendar({ selectedAt: getDayStartAt(Date.now()) })}\n              ariaLabel={oldLang('JumpToDate')}\n            >\n              <Icon name=\"calendar\" />\n            </Button>\n          </div>\n        )}\n      </div>\n      {isMobile && renderDropdown()}\n      {isMobile && (\n        <div className={styles.footer}>\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openHistoryCalendar({ selectedAt: getDayStartAt(Date.now()) })}\n            ariaLabel={oldLang('JumpToDate')}\n          >\n            <Icon name=\"calendar\" />\n          </Button>\n          <div className={styles.counter}>\n            {hasQueryData && (\n              foundIds?.length ? (\n                oldLang('Of', [Math.max(focusedIndex + 1, 1), totalCount])\n              ) : foundIds && !foundIds.length && (\n                oldLang('NoResult')\n              )\n            )}\n          </div>\n          {searchType === 'chat' && Boolean(foundIds?.length) && (\n            <Button\n              className={styles.viewStyle}\n              size=\"smaller\"\n              isText\n              fluid\n              noForcedUpperCase\n              onClick={handleTriggerViewStyle}\n            >\n              {isViewAsList ? oldLang('SearchAsChat') : oldLang('SearchAsList')}\n            </Button>\n          )}\n          {hasNavigationButtons && !hasResultsDropdown && (\n            <div className={styles.mobileNavigation}>\n              <Button\n                className={buildClassName(styles.navigationButton, !canFocusOlder && styles.navigationDisabled)}\n                round\n                size=\"smaller\"\n                color=\"secondary\"\n                onClick={handleFocusOlder}\n                nonInteractive={!canFocusOlder}\n                ariaLabel={lang('AriaSearchOlderResult')}\n              >\n                <Icon name=\"up\" />\n              </Button>\n              <Button\n                className={buildClassName(styles.navigationButton, !canFocusNewer && styles.navigationDisabled)}\n                round\n                size=\"smaller\"\n                color=\"secondary\"\n                onClick={handleFocusNewer}\n                nonInteractive={!canFocusNewer}\n                ariaLabel={lang('AriaSearchNewerResult')}\n              >\n                <Icon name=\"down\" />\n              </Button>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const currentMessageList = selectCurrentMessageList(global);\n    if (!currentMessageList) {\n      return {};\n    }\n    const { chatId, threadId } = currentMessageList;\n\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    const {\n      requestedQuery, savedTag, results, fetchingQuery, isHashtag, type,\n    } = selectCurrentMiddleSearch(global) || {};\n    const { totalCount, foundIds, query: lastSearchQuery } = results || {};\n\n    const currentUserId = global.currentUserId;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, currentUserId);\n\n    const savedTags = isSavedMessages && !isSavedDialog ? global.savedReactionTags?.byKey : undefined;\n\n    return {\n      chat,\n      requestedQuery,\n      totalCount,\n      threadId,\n      foundIds,\n      isHistoryCalendarOpen: Boolean(selectTabState(global).historyCalendarSelectedAt),\n      savedTags,\n      savedTag,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isSavedMessages,\n      fetchingQuery,\n      isHashtagQuery: isHashtag,\n      currentUserId,\n      searchType: type,\n      lastSearchQuery,\n    };\n  },\n)(MiddleSearch));\n","import { useEffect } from '../../lib/teact/teact';\n\nimport useLastCallback from '../useLastCallback';\n\nexport function useClickOutside(\n  refs: React.RefObject<HTMLElement>[], callback: (event: MouseEvent) => void,\n) {\n  const handleClickOutside = useLastCallback((event: MouseEvent) => {\n    const clickedOutside = refs.every((ref) => {\n      return ref.current && !ref.current.contains(event.target as Node);\n    });\n\n    if (clickedOutside) callback(event);\n  });\n\n  useEffect(() => {\n    document.addEventListener('click', handleClickOutside);\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, [handleClickOutside]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getGlobal } from '../../global';\n\nimport { selectCanAnimateInterface } from '../../global/selectors';\nimport animateHorizontalScroll from '../../util/animateHorizontalScroll';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport SearchInput from '../ui/SearchInput';\nimport Icon from './icons/Icon';\n\nimport emojiPickerStyles from './CustomEmojiPicker.module.scss';\n\nexport const HEADER_BUTTON_WIDTH = 2.625 * REM; // px (including margin)\n\nexport const manualGroups = [\n  { name: 'msg-emoji-happy', keywords: ['happy', 'smile'] },\n  { name: 'msg-emoji-activities2', keywords: ['sport', 'art'] },\n  { name: 'msg-emoji-away', keywords: ['vacation', 'holiday'] },\n  { name: 'msg-emoji-bath', keywords: ['bath', 'clean', 'shower', 'nail'] },\n  { name: 'msg-emoji-busy', keywords: ['busy', 'stop', 'time', 'work'] },\n  { name: 'msg-emoji-food', keywords: ['food', 'tasty'] },\n  { name: 'msg-emoji-hi2', keywords: ['hello', 'nice', 'hand'] },\n  { name: 'msg-emoji-home', keywords: ['home', 'city', 'house'] },\n  { name: 'msg-emoji-sleep', keywords: ['sleep', 'tired'] },\n  { name: 'msg-emoji-study', keywords: ['study', 'school', 'write', 'book'] },\n  { name: 'msg-emoji-vacation3', keywords: ['vacation', 'holiday'] },\n  { name: 'msg-emoji-work', keywords: ['work'] },\n];\nexport const manualGroupNames = manualGroups.map((group) => group.name);\n\ntype OwnProps = {\n  onBlur: () => void;\n  onFocus: () => void;\n  emojiQuery: string;\n  isInputFocused: boolean;\n  onChange: (emojiQuery: string) => void;\n  onGroupSelect: (name: string) => void;\n  onReset: () => void;\n  className?: string;\n  inputId?: string;\n  placeholder?: string;\n};\n\nconst ScrollableSearchInputWithEmojis: FC<OwnProps> = ({\n  onBlur,\n  onReset,\n  onFocus,\n  emojiQuery,\n  className,\n  placeholder,\n  onChange,\n  onGroupSelect,\n  inputId,\n}) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  const { isMobile } = useAppLayout();\n\n  useHorizontalScroll(headerRef, isMobile, true);\n  const [activeSetIndex, setActiveSetIndex] = useState(0);\n\n  useEffect(() => {\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeSetIndex * HEADER_BUTTON_WIDTH\n      - (header.offsetWidth / 2 - HEADER_BUTTON_WIDTH / 2);\n\n    animateHorizontalScroll(header, newLeft);\n  }, [activeSetIndex]);\n\n  const canAnimate = selectCanAnimateInterface(getGlobal());\n\n  const groups = [\n    { name: 'msg-emoji-heart', group_name: 'Love' },\n    { name: 'msg-emoji-like', group_name: 'Approval' },\n    { name: 'msg-emoji-dislike', group_name: 'Disapproval' },\n    { name: 'msg-emoji-party', group_name: 'Cheers' },\n    { name: 'msg-emoji-haha', group_name: 'Laughter' },\n    { name: 'msg-emoji-omg', group_name: 'Astonishment' },\n    { name: 'msg-emoji-sad', group_name: 'Sadness' },\n    { name: 'msg-emoji-angry', group_name: 'Anger' },\n    { name: 'msg-emoji-neutral', group_name: 'Neutral' },\n    { name: 'msg-emoji-what', group_name: 'Doubt' },\n    { name: 'msg-emoji-tongue', group_name: 'Silly' },\n    { name: 'msg-emoji-happy', group_name: '' },\n    { name: 'msg-emoji-activities2', group_name: '' },\n    { name: 'msg-emoji-away', group_name: '' },\n    { name: 'msg-emoji-bath', group_name: '' },\n    { name: 'msg-emoji-busy', group_name: '' },\n    { name: 'msg-emoji-food', group_name: '' },\n    { name: 'msg-emoji-hi2', group_name: '' },\n    { name: 'msg-emoji-home', group_name: '' },\n    { name: 'msg-emoji-sleep', group_name: '' },\n    { name: 'msg-emoji-study', group_name: '' },\n    { name: 'msg-emoji-vacation3', group_name: '' },\n    { name: 'msg-emoji-work', group_name: '' },\n  ];\n\n  const [activeGroup, setActiveGroup] = useState<string | undefined>(undefined);\n\n  const onInputReset = useLastCallback(() => {\n    setActiveGroup(undefined);\n    onGroupSelect('');\n    onReset();\n  });\n\n  return (\n    <SearchInput\n      onBlur={onBlur}\n      onFocus={onFocus}\n      value={emojiQuery}\n      // hasTransition={false}\n      withBackIcon={activeGroup !== undefined}\n      backIconAsButton\n      onReset={onInputReset}\n      className={buildClassName(\n        emojiPickerStyles.SearchInput,\n        className,\n        'with-emojis',\n      )}\n      // eslint-disable-next-line react/jsx-no-bind\n      onChange={(e: string) => {\n        onChange(e);\n        setActiveGroup(undefined);\n      }}\n      inputId={inputId ?? ''}\n    >\n      <div className={buildClassName('placeholder-with-categories')}>\n\n        <div\n          className={buildClassName(\n            'emoji-categories',\n            'no-scrollbar',\n            emojiQuery && 'hidden',\n            canAnimate && 'animated',\n          )}\n          ref={headerRef}\n        >\n          <p\n            className={buildClassName(\n              emojiQuery && 'hidden',\n              canAnimate && 'animated',\n            )}\n          >\n            {/* @ts-ignore */}\n            {placeholder || lang('Search Emoji')}\n          </p>\n\n          <div>\n            {groups.map((group, index) => (\n              <Button\n                round\n                size=\"tiny\"\n                color=\"translucent\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => {\n                  onFocus();\n                  if (emojiQuery) onChange('');\n                  setActiveSetIndex(index);\n                  setActiveGroup(group.name);\n                  onGroupSelect(group.group_name ? group.group_name : group.name);\n                }}\n                className={buildClassName(\n                  emojiQuery && 'visible',\n                  canAnimate && 'animated',\n                  activeGroup === group.name && 'activatedIcon',\n                )}\n              >\n                <Icon\n                  name={group.name as any}\n                />\n              </Button>\n            ))}\n\n          </div>\n        </div>\n\n      </div>\n    </SearchInput>\n  );\n};\n\nexport default memo(ScrollableSearchInputWithEmojis);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"udxS0VL0\",\"activated\":\"KXA_y43q\",\"animatedSlide\":\"PGy6cv7q\",\"SearchInput\":\"U90gvasX\",\"searchInput\":\"U90gvasX\",\"categoriesEmojis\":\"lFuw2IBw\",\"headerHide\":\"RiXOtABB\",\"mainHide\":\"vahGDgAT\",\"emojiCategoryStripe\":\"hATbd32x\",\"emojiCategoryStripeInner\":\"s6_vP0XI\",\"animatedWidth\":\"JIY6CUky\",\"symbolSetButton\":\"jIpW4Rvm\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiSticker, ApiStickerSet } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type {\n  EmojiKeywords,\n  StickerSetOrReactionsSetOrRecent,\n  ThreadId,\n} from '../../../types';\n\nimport {\n  CHAT_STICKER_SET_ID,\n  EFFECT_EMOJIS_SET_ID,\n  EFFECT_STICKERS_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  SLIDE_TRANSITION_DURATION,\n  STICKER_PICKER_MAX_SHARED_COVERS,\n  STICKER_SIZE_PICKER,\n  STICKER_SIZE_PICKER_HEADER,\n} from '../../../config';\nimport { isUserId } from '../../../global/helpers';\nimport {\n  selectChat, selectChatFullInfo, selectIsChatWithSelf, selectIsCurrentUserPremium, selectShouldLoopStickers,\n} from '../../../global/selectors';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport { IS_MOBILE, IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { pickTruthy } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport useFlag from '../../../hooks/useFlag';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useSendMessageAction from '../../../hooks/useSendMessageAction';\nimport { useStickerPickerObservers } from '../../common/hooks/useStickerPickerObservers';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport ScrollableSearchInputWithEmojis, {\n  manualGroupNames,\n  manualGroups,\n} from '../../common/ScrollableSearchInputWithEmojis';\nimport StickerButton from '../../common/StickerButton';\nimport StickerSet from '../../common/StickerSet';\nimport Button from '../../ui/Button';\nimport Loading from '../../ui/Loading';\nimport StickerSetCover from './StickerSetCover';\n\nimport headerStyles from '../../common/EsgEmojiPicker.module.scss';\nimport styles from './StickerPicker.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  className: string;\n  isHidden?: boolean;\n  isTranslucent?: boolean;\n  loadAndPlay: boolean;\n  canSendStickers?: boolean;\n  noContextMenus?: boolean;\n  idPrefix: string;\n  onStickerSelect: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  isForEffects?: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  recentStickers: ApiSticker[];\n  favoriteStickers: ApiSticker[];\n  customEmojisById?: Record<string, ApiSticker>;\n  effectStickers?: ApiSticker[];\n  effectEmojis?: ApiSticker[];\n  emojiKeywords?: Record<string, EmojiKeywords | undefined>;\n  stickerSetsById: Record<string, ApiStickerSet>;\n  chatStickerSetId?: string;\n  addedSetIds?: string[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n  emojiGroups?: GlobalState['emojiGroups'];\n};\n\nconst HEADER_BUTTON_WIDTH = 2.5 * REM; // px (including margin)\n\nconst StickerPicker: FC<OwnProps & StateProps> = ({\n  chat,\n  threadId,\n  emojiKeywords,\n  className,\n  isHidden,\n  isTranslucent,\n  loadAndPlay,\n  canSendStickers,\n  emojiGroups,\n  recentStickers,\n  favoriteStickers,\n  effectStickers,\n  effectEmojis,\n  addedSetIds,\n  stickerSetsById,\n  chatStickerSetId,\n  canAnimate,\n  isSavedMessages,\n  isCurrentUserPremium,\n  noContextMenus,\n  idPrefix,\n  onStickerSelect,\n  isForEffects,\n}) => {\n  const {\n    loadRecentStickers,\n    addRecentSticker,\n    unfaveSticker,\n    faveSticker,\n    removeRecentSticker,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  const [isInputFocused, setFocused, setUnfocused] = useFlag();\n  const [emojisFound, setEmojisFound] = useState<ApiSticker[]>([]);\n  const [emojisCategoryFound, setEmojisCategoryFound] = useState<ApiSticker[]>(\n    [],\n  );\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const sharedSearchCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const [emojiQuery, setEmojiQuery] = useState<string>('');\n\n  const textToEmojiMap = useMemo(() => {\n    const textToEmoji: Map<string, ApiSticker[]> = new Map();\n    for (const emojis of Object.values(getGlobal().stickers.setsById)\n      .filter((e) => !e.isEmoji)\n      .map((s) => s.packs) ?? {}) {\n      if (!emojis || Object.keys(emojis).length === 0) continue;\n      for (const [emoji, stickers] of Object.entries(emojis)) {\n        const arr = textToEmoji.get(emoji) ?? [];\n        arr.push(...stickers);\n        textToEmoji.set(emoji, arr);\n      }\n    }\n\n    for (const [emoji, stickers] of textToEmoji.entries()) {\n      const seenId = new Set();\n      const uniqueStickers = stickers.filter((s) => {\n        if (seenId.has(s.id)) {\n          return false;\n        }\n        seenId.add(s.id);\n        return true;\n      });\n      textToEmoji.set(emoji, uniqueStickers);\n    }\n\n    return textToEmoji;\n  }, []);\n\n  const getStickerSearch = useCallback((\n    query: string,\n    _emojiKeywords: Record<string, EmojiKeywords | undefined> | undefined,\n  ) => {\n    const arr: Set<ApiSticker> = new Set();\n\n    for (const emKw of Object.values(_emojiKeywords ?? {})) {\n      if (!emKw || !emKw.keywords) continue;\n      for (const [kw, emojisKws] of Object.entries(emKw.keywords)) {\n        if (!kw.includes(query)) continue;\n\n        for (const em of emojisKws) {\n          for (const e of textToEmojiMap.get(em) ?? []) {\n            arr.add(e);\n          }\n        }\n      }\n    }\n    return [...arr.values()];\n  }, [textToEmojiMap]);\n\n  const handleEmojiSearchQueryChange = useDebouncedCallback(\n    (query: string) => {\n      setEmojiQuery(query.toLowerCase());\n\n      const arr = getStickerSearch(query, emojiKeywords);\n      setEmojisFound([...arr.values()]);\n      if (query === '') {\n        setEmojisFound([]);\n        setEmojisCategoryFound([]);\n        setUnfocused();\n      } else {\n        setEmojisCategoryFound([]);\n      }\n    },\n    [emojiKeywords, getStickerSearch],\n    300,\n    true,\n  );\n\n  const [groupSelected, setGroupSelected] = useState<boolean>(false);\n  const handleEmojiGroupSelect = useLastCallback((category: string) => {\n    if (category === '') {\n      setGroupSelected(false);\n    }\n    if (manualGroupNames.includes(category)) {\n      const keywords = manualGroups.find((g) => g.name === category)?.keywords!;\n\n      const arr: ApiSticker[] = [];\n\n      for (const kw of keywords) {\n        arr.push(...getStickerSearch(kw, emojiKeywords));\n      }\n\n      setEmojisCategoryFound(onlyUniqueById(arr));\n      setGroupSelected(true);\n      return;\n    }\n\n    const groupCat = emojiGroups?.find((g) => g.title === category);\n    if (!groupCat) return;\n\n    const arr: Set<ApiSticker> = new Set();\n\n    for (const em of groupCat?.emoticons ?? []) {\n      for (const e of textToEmojiMap.get(em) ?? []) {\n        arr.add(e);\n      }\n    }\n    setGroupSelected(true);\n\n    setEmojisCategoryFound([...arr.values()]);\n  });\n\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const sendMessageAction = useSendMessageAction(chat?.id, threadId);\n\n  const prefix = `${idPrefix}-sticker-set`;\n  const {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForShowingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  } = useStickerPickerObservers(containerRef, headerRef, prefix, isHidden);\n\n  const lang = useOldLang();\n\n  const areAddedLoaded = Boolean(addedSetIds);\n\n  const allSets = useMemo(() => {\n    if (isForEffects && effectStickers) {\n      const effectSets: StickerSetOrReactionsSetOrRecent[] = [];\n      if (effectEmojis?.length) {\n        effectSets.push({\n          id: EFFECT_EMOJIS_SET_ID,\n          accessHash: '0',\n          title: '',\n          stickers: effectEmojis,\n          count: effectEmojis.length,\n          isEmoji: true,\n        });\n      }\n      if (effectStickers?.length) {\n        effectSets.push({\n          id: EFFECT_STICKERS_SET_ID,\n          accessHash: '0',\n          title: lang('StickerEffects'),\n          stickers: effectStickers,\n          count: effectStickers.length,\n        });\n      }\n      return effectSets;\n    }\n\n    if (!addedSetIds) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    const defaultSets = [];\n\n    if (favoriteStickers.length) {\n      defaultSets.push({\n        id: FAVORITE_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('FavoriteStickers'),\n        stickers: favoriteStickers,\n        count: favoriteStickers.length,\n      });\n    }\n\n    if (recentStickers.length) {\n      defaultSets.push({\n        id: RECENT_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('RecentStickers'),\n        stickers: recentStickers,\n        count: recentStickers.length,\n      });\n    }\n\n    const userSetIds = [...(addedSetIds || [])];\n    if (chatStickerSetId) {\n      userSetIds.unshift(chatStickerSetId);\n    }\n\n    const existingAddedSetIds = Object.values(\n      pickTruthy(stickerSetsById, userSetIds),\n    );\n\n    return [...defaultSets, ...existingAddedSetIds];\n  }, [\n    addedSetIds,\n    stickerSetsById,\n    favoriteStickers,\n    recentStickers,\n    chatStickerSetId,\n    lang,\n    effectStickers,\n    isForEffects,\n    effectEmojis,\n  ]);\n\n  const noPopulatedSets = useMemo(\n    () => areAddedLoaded\n      && allSets.filter((set) => set.stickers?.length).length === 0,\n    [allSets, areAddedLoaded],\n  );\n\n  useEffect(() => {\n    if (!loadAndPlay) return;\n    loadRecentStickers();\n    if (!canSendStickers) return;\n    sendMessageAction({ type: 'chooseSticker' });\n  }, [canSendStickers, loadAndPlay, loadRecentStickers, sendMessageAction]);\n\n  const canRenderContents = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n  const shouldRenderContents = areAddedLoaded\n    && canRenderContents\n    && !noPopulatedSets\n    && (canSendStickers || isForEffects);\n\n  useHorizontalScroll(headerRef, !shouldRenderContents || !headerRef.current);\n\n  // Scroll container and header when active set changes\n  useEffect(() => {\n    if (!areAddedLoaded) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeSetIndex * HEADER_BUTTON_WIDTH\n      - (header.offsetWidth / 2 - HEADER_BUTTON_WIDTH / 2);\n\n    animateHorizontalScroll(header, newLeft);\n  }, [areAddedLoaded, activeSetIndex]);\n\n  const handleStickerSelect = useLastCallback(\n    (sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => {\n      onStickerSelect(sticker, isSilent, shouldSchedule, true);\n      addRecentSticker({ sticker });\n    },\n  );\n\n  const handleStickerUnfave = useLastCallback((sticker: ApiSticker) => {\n    unfaveSticker({ sticker });\n  });\n\n  const handleStickerFave = useLastCallback((sticker: ApiSticker) => {\n    faveSticker({ sticker });\n  });\n\n  const handleMouseMove = useLastCallback(() => {\n    if (!canSendStickers) return;\n    sendMessageAction({ type: 'chooseSticker' });\n  });\n\n  const handleRemoveRecentSticker = useLastCallback((sticker: ApiSticker) => {\n    removeRecentSticker({ sticker });\n  });\n\n  const onReset = useLastCallback(() => {\n    setEmojiQuery('');\n    setEmojisFound([]);\n    setEmojisCategoryFound([]);\n    setUnfocused();\n  });\n\n  if (!chat) return undefined;\n\n  function renderCover(\n    stickerSet: StickerSetOrReactionsSetOrRecent,\n    index: number,\n  ) {\n    const firstSticker = stickerSet.stickers?.[0];\n    const buttonClassName = buildClassName(\n      styles.stickerCover,\n      index === activeSetIndex && styles.activated,\n    );\n    const withSharedCanvas = index < STICKER_PICKER_MAX_SHARED_COVERS;\n\n    if (\n      stickerSet.id === RECENT_SYMBOL_SET_ID\n      || stickerSet.id === FAVORITE_SYMBOL_SET_ID\n      || stickerSet.id === CHAT_STICKER_SET_ID\n      || stickerSet.hasThumbnail\n      || !firstSticker\n    ) {\n      return (\n        <Button\n          key={stickerSet.id}\n          className={buttonClassName}\n          ariaLabel={stickerSet.title}\n          round\n          faded={\n            stickerSet.id === RECENT_SYMBOL_SET_ID\n            || stickerSet.id === FAVORITE_SYMBOL_SET_ID\n          }\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => selectStickerSet(index)}\n        >\n          {stickerSet.id === RECENT_SYMBOL_SET_ID ? (\n            <Icon name=\"recent\" />\n          ) : stickerSet.id === FAVORITE_SYMBOL_SET_ID ? (\n            <Icon name=\"favorite\" />\n          ) : stickerSet.id === CHAT_STICKER_SET_ID ? (\n            <Avatar peer={chat} size=\"small\" />\n          ) : (\n            <StickerSetCover\n              stickerSet={stickerSet as ApiStickerSet}\n              noPlay={!canAnimate || !loadAndPlay}\n              observeIntersection={observeIntersectionForCovers}\n              sharedCanvasRef={withSharedCanvas ? sharedCanvasRef : undefined}\n              forcePlayback\n            />\n          )}\n        </Button>\n      );\n    } else {\n      return (\n        <StickerButton\n          key={stickerSet.id}\n          sticker={firstSticker}\n          size={STICKER_SIZE_PICKER_HEADER}\n          title={stickerSet.title}\n          className={buttonClassName}\n          noPlay={!canAnimate || !loadAndPlay}\n          observeIntersection={observeIntersectionForCovers}\n          noContextMenu\n          isCurrentUserPremium\n          sharedCanvasRef={withSharedCanvas ? sharedCanvasRef : undefined}\n          withTranslucentThumb={isTranslucent}\n          onClick={selectStickerSet}\n          clickArg={index}\n          forcePlayback\n        />\n      );\n    }\n  }\n\n  const fullClassName = buildClassName(\n    'StickerPicker',\n    styles.root,\n    className,\n    'esg-searcheable',\n  );\n\n  if (!shouldRenderContents) {\n    return (\n      <div className={fullClassName}>\n        {!canSendStickers && !isForEffects ? (\n          <div className={styles.pickerDisabled}>\n            {lang('ErrorSendRestrictedStickersAll')}\n          </div>\n        ) : noPopulatedSets ? (\n          <div className={styles.pickerDisabled}>{lang('NoStickers')}</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    styles.header,\n    'no-scrollbar',\n    isInputFocused || emojiQuery ? headerStyles.headerHide : '',\n    canAnimate ? headerStyles.animatedSlide : '',\n    !shouldHideTopBorder && styles.headerWithBorder,\n  );\n  function onlyUniqueById(array: ApiSticker[]) {\n    const seenIds = new Set();\n    return array.filter((obj) => {\n      if (seenIds.has(obj.id)) {\n        return false;\n      }\n      seenIds.add(obj.id);\n      return true;\n    });\n  }\n\n  const marginRight = !emojiQuery && !emojisCategoryFound.length && !groupSelected\n    ? (0)\n    : emojisFound.length\n      ? (IS_MOBILE ? emojisFound.length < 9 ? 0.5 : 0 : emojisFound.length < 16 ? 0.5 : 0)\n      : emojisCategoryFound.length\n        ? (IS_MOBILE ? emojisCategoryFound.length < 9 ? 0.5 : 0 : emojisCategoryFound.length < 16 ? 0.5 : 0) : (0.5);\n\n  return (\n    <div className={fullClassName}>\n      {!isForEffects && (\n        <div ref={headerRef} className={buildClassName(headerClassName)}>\n          <div className=\"shared-canvas-container\">\n            <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n            {allSets.map(renderCover)}\n          </div>\n        </div>\n      )}\n      <div\n        ref={containerRef}\n        onMouseMove={handleMouseMove}\n        onScroll={handleContentScroll}\n        className={buildClassName(\n          styles.main,\n          IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n          !isForEffects && styles.hasHeader,\n          isInputFocused || emojiQuery ? headerStyles.mainHide : '',\n          canAnimate ? headerStyles.animatedSlide : '',\n        )}\n        style={`margin-right: ${marginRight}rem;`}\n\n      >\n        <ScrollableSearchInputWithEmojis\n          onBlur={setUnfocused}\n          onFocus={setFocused}\n          onReset={onReset}\n          emojiQuery={emojiQuery}\n          isInputFocused={isInputFocused}\n          // lang pack should have a proper key\n          // @ts-ignore\n          placeholder={lang('Search Stickers')}\n          onChange={handleEmojiSearchQueryChange}\n          onGroupSelect={handleEmojiGroupSelect}\n          inputId=\"emoji-search\"\n        />\n        {!emojiQuery && !emojisCategoryFound.length && !groupSelected ? (\n          <>\n            {allSets.map((stickerSet, i) => (\n              <StickerSet\n                key={stickerSet.id}\n                stickerSet={stickerSet}\n                loadAndPlay={Boolean(canAnimate && loadAndPlay)}\n                noContextMenus={noContextMenus}\n                index={i}\n                idPrefix={prefix}\n                observeIntersection={observeIntersectionForSet}\n                observeIntersectionForPlayingItems={\n                  observeIntersectionForPlayingItems\n                }\n                observeIntersectionForShowingItems={\n                  observeIntersectionForShowingItems\n                }\n                isNearActive={\n                  activeSetIndex >= i - 1 && activeSetIndex <= i + 1\n                }\n                favoriteStickers={favoriteStickers}\n                isSavedMessages={isSavedMessages}\n                isCurrentUserPremium={isCurrentUserPremium}\n                isTranslucent={isTranslucent}\n                isChatStickerSet={stickerSet.id === chatStickerSetId}\n                onStickerSelect={handleStickerSelect}\n                onStickerUnfave={handleStickerUnfave}\n                onStickerFave={handleStickerFave}\n                onStickerRemoveRecent={handleRemoveRecentSticker}\n                forcePlayback\n                shouldHideHeader={stickerSet.id === EFFECT_EMOJIS_SET_ID}\n              />\n            ))}\n          </>\n        ) : emojisFound.length ? (\n\n          <div ref={ref} className=\"symbol-set symbol-set-container\">\n            <canvas\n              ref={sharedSearchCanvasRef}\n              className=\"shared-canvas\"\n              style={undefined}\n            />\n            {onlyUniqueById(emojisFound).map((e) => (\n              <StickerButton\n                key={e.id}\n                sticker={e}\n                size={STICKER_SIZE_PICKER}\n                observeIntersection={observeIntersectionForPlayingItems}\n                observeIntersectionForShowing={\n                  observeIntersectionForShowingItems\n                }\n                noPlay={!loadAndPlay}\n                isSavedMessages={isSavedMessages}\n                isStatusPicker={false}\n                canViewSet\n                noContextMenu\n                isCurrentUserPremium={isCurrentUserPremium}\n                shouldIgnorePremium={false}\n                sharedCanvasRef={sharedSearchCanvasRef}\n                withTranslucentThumb={isTranslucent}\n                onClick={onStickerSelect}\n                clickArg={e}\n                isSelected={false}\n                onUnfaveClick={undefined}\n                onFaveClick={undefined}\n                onRemoveRecentClick={undefined}\n                onContextMenuOpen={undefined}\n                onContextMenuClose={undefined}\n                onContextMenuClick={undefined}\n                forcePlayback={false}\n                isEffectEmoji={false}\n                noShowPremium\n              />\n            ))}\n          </div>\n        ) : emojisCategoryFound.length ? (\n          <div className=\"symbol-set symbol-set-container\">\n            <canvas\n              ref={sharedSearchCanvasRef}\n              className=\"shared-canvas\"\n              style={undefined}\n            />\n            {onlyUniqueById(emojisCategoryFound).map((e) => (\n              <StickerButton\n                key={e.id}\n                sticker={e}\n                size={STICKER_SIZE_PICKER}\n                observeIntersection={observeIntersectionForPlayingItems}\n                observeIntersectionForShowing={\n                  observeIntersectionForShowingItems\n                }\n                noPlay={!loadAndPlay}\n                isSavedMessages={isSavedMessages}\n                isStatusPicker={false}\n                canViewSet\n                noContextMenu\n                isCurrentUserPremium={isCurrentUserPremium}\n                shouldIgnorePremium={false}\n                sharedCanvasRef={sharedSearchCanvasRef}\n                withTranslucentThumb={isTranslucent}\n                onClick={onStickerSelect}\n                clickArg={e}\n                isSelected={false}\n                onUnfaveClick={undefined}\n                onFaveClick={undefined}\n                onRemoveRecentClick={undefined}\n                onContextMenuOpen={undefined}\n                onContextMenuClose={undefined}\n                onContextMenuClick={undefined}\n                forcePlayback={false}\n                isEffectEmoji={false}\n                noShowPremium\n              />\n            ))}\n          </div>\n        ) : (\n          'Stickers not found'\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(\n  withGlobal<OwnProps>((global, { chatId }): StateProps => {\n    const {\n      stickers: {\n        setsById, added, recent, favorite, effect,\n      },\n      customEmojis: { byId: customEmojisById },\n      emojiKeywords,\n      emojiGroups,\n    } = global;\n\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const chat = selectChat(global, chatId);\n    const chatStickerSetId = !isUserId(chatId)\n      ? selectChatFullInfo(global, chatId)?.stickerSet?.id\n      : undefined;\n\n    return {\n      emojiKeywords,\n      chat,\n      effectStickers: effect?.stickers,\n      effectEmojis: effect?.emojis,\n      customEmojisById,\n      recentStickers: recent.stickers,\n      favoriteStickers: favorite.stickers,\n      stickerSetsById: setsById,\n      addedSetIds: added.setIds,\n      canAnimate: selectShouldLoopStickers(global),\n      isSavedMessages,\n      emojiGroups,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      chatStickerSetId,\n    };\n  })(StickerPicker),\n);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo, useRef,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChatReactions, ApiMessage,\n  ApiReaction,\n  ApiReactionWithPaid,\n} from '../../../../api/types';\n\nimport {\n  getReactionKey, sortReactions,\n} from '../../../../global/helpers';\nimport { selectChatFullInfo } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useWindowSize from '../../../../hooks/window/useWindowSize';\n\nimport ReactionEmoji from '../../../common/reactions/ReactionEmoji';\n\nimport styles from './ReactionPickerLimited.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  loadAndPlay: boolean;\n  selectedReactionIds?: string[];\n  message?: ApiMessage;\n  onReactionSelect: (reaction: ApiReactionWithPaid) => void;\n  onReactionContext?: (reaction: ApiReactionWithPaid) => void;\n};\n\ntype StateProps = {\n  enabledReactions?: ApiChatReactions;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions: ApiReaction[];\n  isWithPaidReaction?: boolean;\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  reactionsLimit?: number;\n  isCurrentUserPremium?: boolean;\n};\n\nconst REACTION_SIZE = 36;\nconst GRID_GAP_THRESHOLD = 600;\nconst MODAL_PADDING_SIZE_REM = 0.5;\nconst MODAL_MAX_HEIGHT_REM = 18;\nconst MODAL_MAX_WIDTH_REM = 26.25;\nconst GRID_GAP_DESKTOP_REM = 0.625;\nconst GRID_GAP_MOBILE_REM = 0.5;\n\nconst ReactionPickerLimited: FC<OwnProps & StateProps> = ({\n  loadAndPlay,\n  enabledReactions,\n  availableReactions,\n  topReactions,\n  selectedReactionIds,\n  isWithPaidReaction,\n  message,\n  reactionsLimit,\n  onReactionSelect,\n  onReactionContext,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  const { width: windowWidth } = useWindowSize();\n  const { isTouchScreen } = useAppLayout();\n\n  const currentReactions = message?.reactions?.results;\n\n  const shouldUseCurrentReactions = reactionsLimit && currentReactions\n   && currentReactions.length >= reactionsLimit;\n\n  const allAvailableReactions = useMemo(() => {\n    if (shouldUseCurrentReactions) {\n      const reactions = currentReactions.map(({ reaction }) => reaction);\n      if (isWithPaidReaction) {\n        reactions.unshift({ type: 'paid' });\n      }\n      return reactions;\n    }\n\n    if (!enabledReactions) {\n      return [];\n    }\n\n    if (enabledReactions.type === 'all') {\n      const reactionsToSort: ApiReactionWithPaid[] = (availableReactions || []).map(({ reaction }) => reaction);\n      if (isWithPaidReaction) {\n        reactionsToSort.unshift({ type: 'paid' });\n      }\n      return sortReactions(reactionsToSort, topReactions);\n    }\n\n    const reactionsToSort: ApiReactionWithPaid[] = enabledReactions.allowed.slice();\n    if (isWithPaidReaction) {\n      reactionsToSort.unshift({ type: 'paid' });\n    }\n\n    return sortReactions(reactionsToSort, topReactions);\n  }, [\n    availableReactions, enabledReactions, topReactions, shouldUseCurrentReactions, currentReactions, isWithPaidReaction,\n  ]);\n\n  const pickerHeight = useMemo(() => {\n    const pickerWidth = Math.min(MODAL_MAX_WIDTH_REM * REM, windowWidth);\n    const gapWidth = (windowWidth > GRID_GAP_THRESHOLD ? GRID_GAP_DESKTOP_REM : GRID_GAP_MOBILE_REM) * REM;\n    const availableWidth = pickerWidth - MODAL_PADDING_SIZE_REM * REM;\n\n    const itemsInRow = Math.floor((availableWidth + gapWidth) / (REACTION_SIZE + gapWidth));\n    const rowsCount = Math.ceil(allAvailableReactions.length / itemsInRow);\n\n    const pickerMaxHeight = rowsCount * REACTION_SIZE + (rowsCount - 1) * gapWidth + MODAL_PADDING_SIZE_REM * REM * 2;\n\n    return Math.min(MODAL_MAX_HEIGHT_REM * REM, pickerMaxHeight);\n  }, [allAvailableReactions.length, windowWidth]);\n\n  return (\n    <div className={styles.root} style={`height: ${pickerHeight}px`}>\n      <div className={buildClassName(styles.wrapper, isTouchScreen ? 'no-scrollbar' : 'custom-scroll')}>\n        <div className=\"symbol-set-container shared-canvas-container\">\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          {allAvailableReactions.map((reaction) => {\n            const reactionId = getReactionKey(reaction);\n            const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n            return (\n              <ReactionEmoji\n                key={reactionId}\n                reaction={reaction}\n                isSelected={isSelected}\n                loadAndPlay={loadAndPlay}\n                availableReactions={availableReactions}\n                onClick={onReactionSelect!}\n                onContextMenu={onReactionContext}\n                sharedCanvasRef={sharedCanvasRef}\n                sharedCanvasHqRef={sharedCanvasHqRef}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { availableReactions, topReactions } = global.reactions;\n\n    const { maxUniqueReactions } = global.appConfig || {};\n    const { enabledReactions, isPaidReactionAvailable } = selectChatFullInfo(global, chatId) || {};\n\n    return {\n      enabledReactions,\n      availableReactions,\n      topReactions,\n      reactionsLimit: maxUniqueReactions,\n      isWithPaidReaction: isPaidReactionAvailable,\n    };\n  },\n)(ReactionPickerLimited));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MhpiTAwi\",\"wrapper\":\"NIaqmosK\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type {\n  ApiAvailableEffect,\n  ApiMessage,\n  ApiMessageEntity,\n  ApiReaction,\n  ApiReactionWithPaid,\n  ApiSticker,\n  ApiStory,\n  ApiStorySkipped,\n} from '../../../../api/types';\nimport type { IAnchorPosition } from '../../../../types';\nimport { MAIN_THREAD_ID } from '../../../../api/types';\n\nimport { getReactionKey, getStoryKey, isUserId } from '../../../../global/helpers';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectIsContextMenuTranslucent,\n  selectIsCurrentUserPremium,\n  selectPeerStory,\n  selectTabState,\n} from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { REM } from '../../../common/helpers/mediaDimensions';\nimport { buildCustomEmojiHtml } from '../../../common/richinput/customEmoji';\n\nimport { getIsMobile } from '../../../../hooks/useAppLayout';\nimport useCurrentOrPrev from '../../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport CustomEmojiPicker from '../../../common/CustomEmojiPicker';\nimport Menu from '../../../ui/Menu';\nimport StickerPicker from '../../composer/StickerPicker';\nimport ReactionPickerLimited from './ReactionPickerLimited';\n\nimport styles from './ReactionPicker.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ninterface StateProps {\n  shouldUseFullPicker?: boolean;\n  message?: ApiMessage;\n  story?: ApiStory | ApiStorySkipped;\n  isCurrentUserPremium?: boolean;\n  position?: IAnchorPosition;\n  isTranslucent?: boolean;\n  sendAsMessage?: boolean;\n  chatId?: string;\n  isForEffects?: boolean;\n  availableEffectById: Record<string, ApiAvailableEffect>;\n}\n\nconst FULL_PICKER_SHIFT_DELTA = { x: -23, y: -64 };\nconst LIMITED_PICKER_SHIFT_DELTA = { x: -21, y: -10 };\nconst REACTION_SELECTOR_WIDTH = 16.375 * REM;\n\nconst ReactionPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  message,\n  story,\n  position,\n  isTranslucent,\n  isCurrentUserPremium,\n  shouldUseFullPicker,\n  sendAsMessage,\n  chatId,\n  isForEffects,\n  availableEffectById,\n}) => {\n  const {\n    toggleReaction, closeReactionPicker, sendMessage, showNotification, sendStoryReaction, saveEffectInDraft,\n    requestEffectInComposer, addLocalPaidReaction, openPaidReactionModal,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const renderedMessageId = useCurrentOrPrev(message?.id, true);\n  const renderedChatId = useCurrentOrPrev(message?.chatId, true);\n  const renderedStoryPeerId = useCurrentOrPrev(story?.peerId, true);\n  const renderedStoryId = useCurrentOrPrev(story?.id);\n  const storedPosition = useCurrentOrPrev(position, true);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const renderingPosition = useMemo((): IAnchorPosition | undefined => {\n    if (!storedPosition) {\n      return undefined;\n    }\n\n    if (renderedStoryId) {\n      return storedPosition;\n    }\n\n    return {\n      x: storedPosition.x + (shouldUseFullPicker ? FULL_PICKER_SHIFT_DELTA.x : LIMITED_PICKER_SHIFT_DELTA.x),\n      y: storedPosition.y + (shouldUseFullPicker ? FULL_PICKER_SHIFT_DELTA.y : LIMITED_PICKER_SHIFT_DELTA.y),\n    };\n  }, [renderedStoryId, storedPosition, shouldUseFullPicker]);\n\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getLayout = useLastCallback(() => ({\n    withPortal: true,\n    isDense: !renderedStoryPeerId,\n    deltaX: !getIsMobile() && menuRef.current\n      ? -(menuRef.current.offsetWidth - REACTION_SELECTOR_WIDTH) / 2 - FULL_PICKER_SHIFT_DELTA.x / 2\n      : 0,\n  }));\n\n  const handleToggleCustomReaction = useLastCallback((sticker: ApiSticker) => {\n    if (!renderedChatId || !renderedMessageId) {\n      return;\n    }\n    const reaction: ApiReaction = sticker.isCustomEmoji\n      ? { type: 'custom', documentId: sticker.id }\n      : { type: 'emoji', emoticon: sticker.emoji! };\n\n    toggleReaction({\n      chatId: renderedChatId, messageId: renderedMessageId, reaction, shouldAddToRecent: true,\n    });\n    closeReactionPicker();\n  });\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReactionWithPaid) => {\n    if (!renderedChatId || !renderedMessageId) {\n      return;\n    }\n\n    if (reaction.type === 'paid') {\n      addLocalPaidReaction({\n        chatId: renderedChatId, messageId: renderedMessageId, count: 1,\n      });\n    } else {\n      toggleReaction({\n        chatId: renderedChatId, messageId: renderedMessageId, reaction, shouldAddToRecent: true,\n      });\n    }\n    closeReactionPicker();\n  });\n\n  const handleReactionContextMenu = useLastCallback((reaction: ApiReactionWithPaid) => {\n    if (reaction.type !== 'paid') return;\n\n    openPaidReactionModal({\n      chatId: renderedChatId!,\n      messageId: renderedMessageId!,\n    });\n    closeReactionPicker();\n  });\n\n  const handleStoryReactionSelect = useLastCallback((item: ApiReactionWithPaid | ApiSticker) => {\n    if ('type' in item && item.type === 'paid') return; // Not supported for stories\n\n    const reaction = 'id' in item ? { type: 'custom', documentId: item.id } as const : item;\n\n    const sticker = 'type' in item && item.type === 'custom' ? getGlobal().customEmojis.byId[item.documentId]\n      : 'id' in item ? item : undefined;\n\n    if (sticker && !sticker.isFree && !isCurrentUserPremium) {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n\n      closeReactionPicker();\n\n      return;\n    }\n\n    if (!sendAsMessage) {\n      sendStoryReaction({\n        peerId: renderedStoryPeerId!,\n        storyId: renderedStoryId!,\n        containerId: getStoryKey(renderedStoryPeerId!, renderedStoryId!),\n        reaction,\n        shouldAddToRecent: true,\n      });\n      closeReactionPicker();\n      return;\n    }\n\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if ('type' in item && item.type === 'emoji') {\n      text = item.emoticon;\n    } else {\n      const customEmojiMessage = parseHtmlAsFormattedText(buildCustomEmojiHtml(sticker!));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    sendMessage({ text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleStickerSelect = useLastCallback((sticker: ApiSticker) => {\n    const availableEffects = Object.values(availableEffectById);\n    const effectId = availableEffects.find((effect) => effect.effectStickerId === sticker.id)?.id;\n\n    if (chatId) saveEffectInDraft({ chatId, threadId: MAIN_THREAD_ID, effectId });\n\n    if (effectId) requestEffectInComposer({});\n    closeReactionPicker();\n  });\n\n  const selectedReactionIds = useMemo(() => {\n    return (message?.reactions?.results || []).reduce<string[]>((acc, { chosenOrder, reaction }) => {\n      if (chosenOrder !== undefined) {\n        acc.push(getReactionKey(reaction));\n      }\n\n      return acc;\n    }, []);\n  }, [message?.reactions?.results]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      ref={menuRef}\n      className={buildClassName(styles.menu, 'ReactionPicker')}\n      bubbleClassName={buildClassName(\n        styles.menuContent,\n        !shouldUseFullPicker && !renderedStoryId && styles.onlyReactions,\n        renderedStoryId && styles.storyMenu,\n      )}\n      withPortal\n      noCompact\n      anchor={renderingPosition}\n      positionY={story && 'bottom'}\n      getTriggerElement={getTriggerElement}\n      getRootElement={getRootElement}\n      getMenuElement={getMenuElement}\n      getLayout={getLayout}\n      backdropExcludedSelector=\".Modal.confirm\"\n      onClose={closeReactionPicker}\n    >\n      {isForEffects && chatId ? (\n        <StickerPicker\n          className=\"\"\n          isHidden={!isOpen}\n          loadAndPlay={Boolean(isOpen && shouldUseFullPicker)}\n          idPrefix=\"message-effect\"\n          canSendStickers={false}\n          noContextMenus={false}\n          chatId={chatId}\n          isTranslucent={isTranslucent}\n          onStickerSelect={handleStickerSelect}\n          isForEffects={isForEffects}\n        />\n      ) : (\n        <>\n          <CustomEmojiPicker\n            chatId={renderedChatId}\n            idPrefix=\"message-emoji-set-\"\n            isHidden={!isOpen || !(shouldUseFullPicker || renderedStoryId)}\n            loadAndPlay={Boolean(isOpen && shouldUseFullPicker)}\n            isReactionPicker\n            className={!shouldUseFullPicker && !renderedStoryId ? styles.hidden : undefined}\n            selectedReactionIds={selectedReactionIds}\n            isTranslucent={isTranslucent}\n            onCustomEmojiSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleCustomReaction}\n            onReactionSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleReaction}\n            onReactionContext={handleReactionContextMenu}\n          />\n          {!shouldUseFullPicker && Boolean(renderedChatId) && (\n            <ReactionPickerLimited\n              chatId={renderedChatId}\n              loadAndPlay={isOpen}\n              onReactionSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleReaction}\n              onReactionContext={handleReactionContextMenu}\n              selectedReactionIds={selectedReactionIds}\n              message={message}\n            />\n          )}\n        </>\n      )}\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const state = selectTabState(global);\n  const availableEffectById = global.availableEffectById;\n  const {\n    chatId, messageId, storyPeerId, storyId, position, sendAsMessage, isForEffects,\n  } = state.reactionPicker || {};\n  const story = storyPeerId && storyId\n    ? selectPeerStory(global, storyPeerId, storyId) as ApiStory | ApiStorySkipped\n    : undefined;\n  const chat = chatId ? selectChat(global, chatId) : undefined;\n  const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n  const message = chatId && messageId ? selectChatMessage(global, chatId, messageId) : undefined;\n  const isPrivateChat = isUserId(chatId || storyPeerId || '');\n  const areSomeReactionsAllowed = chatFullInfo?.enabledReactions?.type === 'some';\n  const { maxUniqueReactions } = global.appConfig || {};\n  const areAllReactionsAllowed = chatFullInfo?.enabledReactions?.type === 'all'\n    && chatFullInfo?.enabledReactions?.areCustomAllowed;\n\n  const currentReactions = message?.reactions?.results;\n  const shouldUseCurrentReactions = Boolean(maxUniqueReactions && currentReactions\n    && currentReactions.length >= maxUniqueReactions);\n\n  return {\n    message,\n    story,\n    position,\n    shouldUseFullPicker: (chat?.isForbidden || areSomeReactionsAllowed || shouldUseCurrentReactions) ? false\n      : (areAllReactionsAllowed || isPrivateChat),\n    isTranslucent: selectIsContextMenuTranslucent(global),\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    sendAsMessage,\n    isForEffects,\n    chatId,\n    availableEffectById,\n  };\n})(ReactionPicker));\n\nfunction getTriggerElement(): HTMLElement | null {\n  return document.querySelector('body');\n}\n\nfunction getRootElement() {\n  return document.querySelector('body');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"menu\":\"gBh4WvBC\",\"menuContent\":\"qSfKwMzX\",\"storyMenu\":\"srpBMrqr\",\"onlyReactions\":\"dRNSqkOC\",\"hidden\":\"KVwgF6DG\"};","const extractorEl = document.createElement('div');\n\nexport function getHtmlBeforeSelection(container?: HTMLElement, useCommonAncestor?: boolean) {\n  if (!container) {\n    return '';\n  }\n\n  const sel = window.getSelection();\n  if (!sel || !sel.rangeCount) {\n    return container.innerHTML;\n  }\n\n  const range = sel.getRangeAt(0).cloneRange();\n  if (!range.intersectsNode(container)) {\n    return container.innerHTML;\n  }\n\n  if (!useCommonAncestor && !container.contains(range.commonAncestorContainer)) {\n    return '';\n  }\n\n  range.collapse(true);\n  range.setStart(container, 0);\n\n  extractorEl.innerHTML = '';\n  extractorEl.appendChild(range.cloneContents());\n\n  return extractorEl.innerHTML;\n}\n\n// https://stackoverflow.com/a/3976125\nexport function getCaretPosition(element: HTMLElement) {\n  let caretPosition = 0;\n  const selection = window.getSelection();\n  if (!selection || selection.rangeCount === 0) {\n    return caretPosition;\n  }\n\n  const range = selection.getRangeAt(0);\n  const caretRange = range.cloneRange();\n  caretRange.selectNodeContents(element);\n  caretRange.setEnd(range.endContainer, range.endOffset);\n  caretPosition = caretRange.toString().length;\n\n  return caretPosition;\n}\n\n// https://stackoverflow.com/a/36953852\nexport function setCaretPosition(element: Node, position: number) {\n  for (const node of element.childNodes) {\n    if (node.nodeType === Node.TEXT_NODE) {\n      if ((node as Text).length >= position) {\n        const range = document.createRange();\n        const selection = window.getSelection()!;\n        range.setStart(node, position);\n        range.collapse(true);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        return -1;\n      } else {\n        position -= 'length' in node ? node.length as number : 0;\n      }\n    } else {\n      position = setCaretPosition(node, position);\n      if (position === -1) {\n        return -1;\n      }\n    }\n  }\n\n  return position;\n}\n\nexport function removeAllSelections() {\n  const selection = window.getSelection();\n  selection?.removeAllRanges();\n}\n\nexport function selectAfterNode(node: Node) {\n  const range = document.createRange();\n  range.setStartAfter(node);\n  range.setEndAfter(node);\n  range.collapse(true);\n  const selection = window.getSelection()!;\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","import { fixImageContent } from '../../../../util/parseHtmlAsFormattedText';\n\nconst div = document.createElement('div');\n\nexport function getHtmlTextLength(html: string) {\n  div.innerHTML = html;\n  fixImageContent(div);\n  div.querySelectorAll('br').forEach((br) => {\n    br.replaceWith('\\n');\n  });\n  return div.textContent?.trim().length || 0;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"QucaiGVU\",\"preview\":\"SHoF85Vw\",\"duration\":\"nI2M1SBH\",\"single\":\"FjrnqGba\",\"no-grouping\":\"g0cTsM9d\",\"noGrouping\":\"g0cTsM9d\",\"file\":\"B6f6GcvN\",\"overlay\":\"bX7LdgxW\",\"action-item\":\"Zo7u5epf\",\"actionItem\":\"Zo7u5epf\",\"delete-file\":\"CYJwy9T_\",\"deleteFile\":\"CYJwy9T_\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiAttachment } from '../../../api/types';\n\nimport { SUPPORTED_PHOTO_CONTENT_TYPES, SUPPORTED_VIDEO_CONTENT_TYPES } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { getFileExtension } from '../../common/helpers/documentInfo';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport File from '../../common/File';\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\n\nimport styles from './AttachmentModalItem.module.scss';\n\ntype OwnProps = {\n  attachment: ApiAttachment;\n  className?: string;\n  shouldDisplayCompressed?: boolean;\n  shouldDisplayGrouped?: boolean;\n  isSingle?: boolean;\n  index: number;\n  onDelete?: (index: number) => void;\n  onToggleSpoiler?: (index: number) => void;\n};\n\nconst BLUR_CANVAS_SIZE = 15 * REM;\n\nconst AttachmentModalItem: FC<OwnProps> = ({\n  attachment,\n  className,\n  isSingle,\n  shouldDisplayCompressed,\n  shouldDisplayGrouped,\n  index,\n  onDelete,\n  onToggleSpoiler,\n}) => {\n  const displayType = getDisplayType(attachment, shouldDisplayCompressed);\n\n  const handleSpoilerClick = useLastCallback(() => {\n    onToggleSpoiler?.(index);\n  });\n\n  const content = useMemo(() => {\n    switch (displayType) {\n      case 'photo':\n        return (\n          <img\n            className={styles.preview}\n            src={attachment.blobUrl}\n            alt=\"\"\n            draggable={false}\n          />\n        );\n      case 'video':\n        return (\n          <>\n            {Boolean(attachment.quick?.duration) && (\n              <div className={styles.duration}>{formatMediaDuration(attachment.quick!.duration)}</div>\n            )}\n            <video\n              className={styles.preview}\n              src={attachment.blobUrl}\n              autoPlay\n              muted\n              loop\n              disablePictureInPicture\n            />\n          </>\n        );\n      default:\n        return (\n          <>\n            <File\n              className={styles.file}\n              name={attachment.filename}\n              extension={getFileExtension(attachment.filename, attachment.mimeType)}\n              previewData={attachment.previewBlobUrl}\n              size={attachment.size}\n              smaller\n            />\n            {onDelete && (\n              <Icon\n                name=\"delete\"\n                className={buildClassName(styles.actionItem, styles.deleteFile)}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => onDelete(index)}\n              />\n            )}\n          </>\n        );\n    }\n  }, [attachment, displayType, index, onDelete]);\n\n  const shouldSkipGrouping = displayType === 'file' || !shouldDisplayGrouped;\n  const shouldDisplaySpoiler = Boolean(displayType !== 'file' && attachment.shouldSendAsSpoiler);\n  const shouldRenderOverlay = displayType !== 'file';\n\n  const rootClassName = buildClassName(\n    className, styles.root, isSingle && styles.single, shouldSkipGrouping && styles.noGrouping,\n  );\n\n  return (\n    <div className={rootClassName}>\n      {content}\n      <MediaSpoiler\n        isVisible={shouldDisplaySpoiler}\n        thumbDataUri={attachment.previewBlobUrl || attachment.blobUrl}\n        width={BLUR_CANVAS_SIZE}\n        height={BLUR_CANVAS_SIZE}\n      />\n      {shouldRenderOverlay && (\n        <div className={styles.overlay}>\n          <Icon\n            name={attachment.shouldSendAsSpoiler ? 'spoiler-disable' : 'spoiler'}\n            className={styles.actionItem}\n            onClick={handleSpoilerClick}\n          />\n          {onDelete && (\n            // eslint-disable-next-line react/jsx-no-bind\n            <Icon name=\"delete\" className={styles.actionItem} onClick={() => onDelete(index)} />\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport function getDisplayType(attachment: ApiAttachment, shouldDisplayCompressed?: boolean) {\n  if (shouldDisplayCompressed && attachment.quick) {\n    if (SUPPORTED_PHOTO_CONTENT_TYPES.has(attachment.mimeType)) {\n      return 'photo';\n    }\n    if (SUPPORTED_VIDEO_CONTENT_TYPES.has(attachment.mimeType)) {\n      return 'video';\n    }\n  }\n  return 'file';\n}\n\nexport default memo(AttachmentModalItem);\n","export default function isFullyVisible(container: HTMLElement, element: HTMLElement, isHorizontal = false) {\n  const viewportY1 = container[isHorizontal ? 'scrollLeft' : 'scrollTop'];\n  const viewportY2 = viewportY1 + container[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  const y1 = element[isHorizontal ? 'offsetLeft' : 'offsetTop'];\n  const y2 = y1 + element[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  return y1 > viewportY1 && y2 < viewportY2;\n}\n","export default function findInViewport(\n  container: HTMLElement,\n  selectorOrElements: string | NodeListOf<HTMLElement> | HTMLElement[],\n  margin = 0,\n  isDense = false,\n  shouldContainBottom = false,\n  isHorizontal = false,\n) {\n  const viewportY1 = container[isHorizontal ? 'scrollLeft' : 'scrollTop'];\n  const viewportY2 = viewportY1 + container[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  const allElements = typeof selectorOrElements === 'string'\n    ? container.querySelectorAll<HTMLElement>(selectorOrElements)\n    : selectorOrElements;\n  const { length } = allElements;\n  const visibleIndexes: number[] = [];\n  let isFound = false;\n\n  for (let i = 0; i < length; i++) {\n    const element = allElements[i];\n    const y1 = element[isHorizontal ? 'offsetLeft' : 'offsetTop'];\n    const y2 = y1 + element[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n    const isVisible = shouldContainBottom\n      ? y2 >= viewportY1 - margin && y2 <= viewportY2 + margin\n      : y1 <= viewportY2 + margin && y2 >= viewportY1 - margin;\n\n    if (isVisible) {\n      visibleIndexes.push(i);\n      isFound = true;\n    } else if (isFound && !isDense) {\n      break;\n    }\n  }\n\n  return { allElements, visibleIndexes };\n}\n","import isFullyVisible from './visibility/isFullyVisible';\nimport animateScroll from './animateScroll';\nimport findInViewport from './findInViewport';\n\nconst VIEWPORT_MARGIN = 8;\nconst SCROLL_MARGIN = 10;\n\nexport default function setTooltipItemVisible(selector: string, index: number, containerRef: Record<string, any>) {\n  const container = containerRef.current!;\n  if (!container || index < 0) {\n    return;\n  }\n  const { visibleIndexes, allElements } = findInViewport(\n    container,\n    selector,\n    VIEWPORT_MARGIN,\n    true,\n    true,\n  );\n\n  if (!allElements.length || !allElements[index]) {\n    return;\n  }\n  const first = visibleIndexes[0];\n  if (!visibleIndexes.includes(index)\n    || (index === first && !isFullyVisible(container, allElements[first]))) {\n    const position = index > visibleIndexes[visibleIndexes.length - 1] ? 'start' : 'end';\n    animateScroll({\n      container,\n      element: allElements[index],\n      position,\n      margin: SCROLL_MARGIN,\n    });\n  }\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport captureKeyboardListeners from '../../../../util/captureKeyboardListeners';\nimport cycleRestrict from '../../../../util/cycleRestrict';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport function useKeyboardNavigation({\n  isActive,\n  isHorizontal,\n  shouldSaveSelectionOnUpdateItems,\n  shouldRemoveSelectionOnReset,\n  shouldStartOnFirstItem,\n  noArrowSelectLoop,\n  noArrowNavigation,\n  items,\n  shouldSelectOnTab,\n  onSelect,\n  onClose,\n}: {\n  isActive: boolean;\n  isHorizontal?: boolean;\n  shouldSaveSelectionOnUpdateItems?: boolean;\n  shouldRemoveSelectionOnReset?: boolean;\n  shouldStartOnFirstItem?: boolean;\n  noArrowSelectLoop?: boolean;\n  noArrowNavigation?: boolean;\n  items?: any[];\n  shouldSelectOnTab?: boolean;\n  onSelect: (item: any) => void | boolean;\n  onClose: NoneToVoidFunction;\n}) {\n  const [selectedItemIndex, setSelectedItemIndex] = useState(shouldStartOnFirstItem ? 0 : -1);\n\n  const getSelectedIndex = useLastCallback((newIndex: number) => {\n    if (!items) {\n      return -1;\n    }\n\n    return cycleRestrict(items.length, newIndex);\n  });\n\n  const handleArrowKey = useLastCallback((value: number, e: KeyboardEvent) => {\n    const outOfBounds = (selectedItemIndex + value < 0 || selectedItemIndex + value > (items?.length ?? 10000) - 1);\n    if (noArrowSelectLoop && outOfBounds) {\n      return;\n    }\n\n    e.preventDefault();\n    setSelectedItemIndex((index) => (getSelectedIndex(index + value)));\n  });\n\n  const handleItemSelect = useLastCallback((e: KeyboardEvent) => {\n    // Prevent action on key combinations\n    if (e.altKey || e.ctrlKey || e.metaKey || e.shiftKey) return false;\n    if (!isActive) return false;\n\n    if (items && items.length && selectedItemIndex > -1) {\n      const item = items[selectedItemIndex];\n      if (item) {\n        if (onSelect(item) === false) {\n          return false;\n        }\n\n        e.preventDefault();\n      }\n    }\n\n    return true;\n  });\n\n  useEffect(() => {\n    if (!isActive) setSelectedItemIndex(shouldRemoveSelectionOnReset ? -1 : 0);\n  }, [isActive, shouldRemoveSelectionOnReset]);\n\n  const isSelectionOutOfRange = !items || selectedItemIndex > items.length - 1;\n  useEffect(() => {\n    if (!shouldSaveSelectionOnUpdateItems || isSelectionOutOfRange) {\n      setSelectedItemIndex(shouldRemoveSelectionOnReset ? -1 : 0);\n    }\n  }, [isSelectionOutOfRange, shouldRemoveSelectionOnReset, shouldSaveSelectionOnUpdateItems]);\n\n  useEffect(() => (isActive ? captureKeyboardListeners({\n    onEsc: onClose,\n    onUp: noArrowNavigation || isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(-1, e),\n    onDown: noArrowNavigation || isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(1, e),\n    onLeft: noArrowNavigation || !isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(-1, e),\n    onRight: noArrowNavigation || !isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(1, e),\n    onTab: shouldSelectOnTab ? handleItemSelect : undefined,\n    onEnter: handleItemSelect,\n  }) : undefined), [\n    noArrowNavigation, handleArrowKey, handleItemSelect, isActive, isHorizontal, onClose, shouldSelectOnTab,\n  ]);\n\n  return selectedItemIndex;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\n\nimport './MentionTooltip.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  onInsertUserName: (user: ApiUser, forceFocus?: boolean) => void;\n  filteredUsers?: ApiUser[];\n};\n\nconst MentionTooltip: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  onInsertUserName,\n  filteredUsers,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n\n  const handleUserSelect = useLastCallback((userId: string, forceFocus = false) => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const user = usersById[userId];\n    if (!user) {\n      return;\n    }\n\n    onInsertUserName(user, forceFocus);\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent, id: string) => {\n    e.preventDefault();\n\n    handleUserSelect(id);\n  });\n\n  const handleSelectMention = useLastCallback((member: ApiUser) => {\n    handleUserSelect(member.id, true);\n  });\n\n  const selectedMentionIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: filteredUsers,\n    onSelect: handleSelectMention,\n    shouldSelectOnTab: true,\n    shouldSaveSelectionOnUpdateItems: true,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedMentionIndex, containerRef);\n  }, [selectedMentionIndex]);\n\n  useEffect(() => {\n    if (filteredUsers && !filteredUsers.length) {\n      onClose();\n    }\n  }, [filteredUsers, onClose]);\n\n  const prevChatMembers = usePreviousDeprecated(\n    filteredUsers?.length\n      ? filteredUsers\n      : undefined,\n    shouldRender,\n  );\n  const renderedChatMembers = filteredUsers && !filteredUsers.length\n    ? prevChatMembers\n    : filteredUsers;\n\n  if (!shouldRender || (renderedChatMembers && !renderedChatMembers.length)) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'MentionTooltip composer-tooltip custom-scroll',\n    transitionClassNames,\n  );\n\n  return (\n    <div className={className} ref={containerRef}>\n      {renderedChatMembers?.map(({ id }, index) => (\n        <ListItem\n          key={id}\n          className=\"chat-item-clickable scroll-item smaller-icon\"\n          onClick={handleClick}\n          clickArg={id}\n          focus={selectedMentionIndex === index}\n        >\n          <PrivateChatInfo\n            userId={id}\n            avatarSize=\"small\"\n            withUsername\n          />\n        </ListItem>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(MentionTooltip);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"a27O2Qlr\",\"mobile\":\"khvUZbGZ\",\"symbolMenuOpen\":\"ir5kkMy1\",\"header-border\":\"Pc1k8G8s\",\"headerBorder\":\"Pc1k8G8s\",\"sendButtonStar\":\"C1OOt81o\",\"attachments\":\"_bxSIFgj\",\"attachments-bottom-padding\":\"RPVunBe2\",\"attachmentsBottomPadding\":\"RPVunBe2\",\"caption-wrapper\":\"EtmiUn2k\",\"captionWrapper\":\"EtmiUn2k\",\"caption-top-border\":\"FjjSKMYe\",\"captionTopBorder\":\"FjjSKMYe\",\"caption\":\"Te7lIfpB\",\"dropTarget\":\"AT_d9l0W\",\"dropOutlineContainer\":\"d9O65j_I\",\"dropOutline\":\"jzCBDWMw\",\"outline\":\"xjNY3Z8u\",\"hovered\":\"AnO3BgVv\",\"send-wrapper\":\"wDqWK9MD\",\"sendWrapper\":\"wDqWK9MD\",\"send\":\"kNlWmBJI\",\"is-pointer-env\":\"rYZmraWo\",\"isPointerEnv\":\"rYZmraWo\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAttachment, ApiChatMember, ApiMessage, ApiSticker,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { MessageListType, ThreadId } from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport type { RichInputCtx } from '../../common/richinput/useRichEditable';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  EDITABLE_INPUT_MODAL_ID,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getAttachmentMediaType, isUserId } from '../../../global/helpers';\nimport { selectChatFullInfo, selectIsChatWithSelf } from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport { selectSharedSettings } from '../../../global/selectors/sharedState';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { validateFiles } from '../../../util/files';\nimport { formatStarsAsIcon } from '../../../util/localization/format';\nimport { removeAllSelections } from '../../../util/selection';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\nimport { getHtmlTextLength } from './helpers/getHtmlTextLength';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useEffectOnce from '../../../hooks/useEffectOnce';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useCustomEmojiTooltip from './hooks/useCustomEmojiTooltip';\nimport useEmojiTooltip from './hooks/useEmojiTooltip';\nimport useMentionTooltip from './hooks/useMentionTooltip';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\nimport Modal from '../../ui/Modal';\nimport AttachmentModalItem from './AttachmentModalItem';\nimport CustomEmojiTooltip from './CustomEmojiTooltip.async';\nimport CustomSendMenu from './CustomSendMenu.async';\nimport EmojiTooltip from './EmojiTooltip.async';\nimport MentionTooltip from './MentionTooltip';\nimport MessageInput from './MessageInput';\nimport SymbolMenuButton from './SymbolMenuButton';\n\nimport styles from './AttachmentModal.module.scss';\n\nexport type OwnProps = {\n  richInputCtx: RichInputCtx;\n  chatId: string;\n  threadId: ThreadId;\n  attachments: ApiAttachment[];\n  editingMessage?: ApiMessage;\n  messageListType?: MessageListType;\n  getHtml: Signal<string>;\n  canShowCustomSendMenu?: boolean;\n  isReady: boolean;\n  isForMessage?: boolean;\n  shouldSchedule?: boolean;\n  shouldSuggestCompression?: boolean;\n  shouldForceCompression?: boolean;\n  shouldForceAsFile?: boolean;\n  isForCurrentMessageList?: boolean;\n  forceDarkTheme?: boolean;\n  onSend: (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => void;\n  onFileAppend: (files: File[], isSpoiler?: boolean) => void;\n  onAttachmentsUpdate: (attachments: ApiAttachment[]) => void;\n  onClear: NoneToVoidFunction;\n  onSendSilent: (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => void;\n  onSendScheduled: (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  canScheduleUntilOnline?: boolean;\n  canSchedule?: boolean;\n  onSendWhenOnline?: NoneToVoidFunction;\n  paidMessagesStars?: number;\n};\n\ntype StateProps = {\n  isChatWithSelf?: boolean;\n  currentUserId?: string;\n  groupChatMembers?: ApiChatMember[];\n  recentEmojis: string[];\n  editingMessage?: ApiMessage;\n  baseEmojiKeywords?: Record<string, string[]>;\n  emojiKeywords?: Record<string, string[]>;\n  shouldSuggestCustomEmoji?: boolean;\n  customEmojiForEmoji?: ApiSticker[];\n  captionLimit: number;\n  attachmentSettings: GlobalState['attachmentSettings'];\n};\n\nconst ATTACHMENT_MODAL_INPUT_ID = 'caption-input-text';\nconst DROP_LEAVE_TIMEOUT_MS = 150;\nconst MAX_LEFT_CHARS_TO_SHOW = 100;\n\nconst AttachmentModal: FC<OwnProps & StateProps> = ({\n  richInputCtx,\n  chatId,\n  threadId,\n  attachments,\n  getHtml,\n  editingMessage,\n  canShowCustomSendMenu,\n  captionLimit,\n  isReady,\n  isChatWithSelf,\n  currentUserId,\n  groupChatMembers,\n  recentEmojis,\n  baseEmojiKeywords,\n  emojiKeywords,\n  isForMessage,\n  shouldSchedule,\n  shouldSuggestCustomEmoji,\n  customEmojiForEmoji,\n  attachmentSettings,\n  shouldSuggestCompression,\n  shouldForceCompression,\n  shouldForceAsFile,\n  isForCurrentMessageList,\n  forceDarkTheme,\n  onAttachmentsUpdate,\n  onSend,\n  onFileAppend,\n  onClear,\n  onSendSilent,\n  onSendScheduled,\n  onCustomEmojiSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n  canScheduleUntilOnline,\n  canSchedule,\n  onSendWhenOnline,\n  paidMessagesStars,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const svgRef = useRef<SVGSVGElement>(null);\n  const { addRecentCustomEmoji, addRecentEmoji, updateAttachmentSettings } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const mainButtonRef = useRef<HTMLButtonElement | null>(null);\n\n  const hideTimeoutRef = useRef<number>();\n  const prevAttachments = usePreviousDeprecated(attachments);\n  const renderingAttachments = attachments.length ? attachments : prevAttachments;\n  const { isMobile } = useAppLayout();\n\n  const isEditing = editingMessage && Boolean(editingMessage);\n  const isInAlbum = editingMessage && editingMessage?.groupedId;\n  const isEditingMessageFile = isEditing && attachments?.length && getAttachmentMediaType(attachments[0]);\n  const notEditingFile = isEditingMessageFile !== 'file';\n\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n\n  const [shouldSendCompressed, setShouldSendCompressed] = useState(\n    shouldSuggestCompression ?? attachmentSettings.shouldCompress,\n  );\n  const isSendingCompressed = Boolean(\n    (shouldSendCompressed || shouldForceCompression || isInAlbum) && !shouldForceAsFile,\n  );\n  const [shouldSendGrouped, setShouldSendGrouped] = useState(attachmentSettings.shouldSendGrouped);\n  const isInvertedMedia = attachmentSettings.isInvertedMedia;\n\n  const {\n    handleScroll: handleAttachmentsScroll,\n    isAtBeginning: areAttachmentsNotScrolled,\n    isAtEnd: areAttachmentsScrolledToBottom,\n  } = useScrolledState();\n\n  const { handleScroll: handleCaptionScroll, isAtBeginning: isCaptionNotScrolled } = useScrolledState();\n\n  const isOpen = Boolean(attachments.length);\n  const renderingIsOpen = Boolean(renderingAttachments?.length);\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  useEffect(() => {\n    if (!isOpen) {\n      closeSymbolMenu();\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [closeSymbolMenu, isOpen]);\n\n  const [hasMedia, hasOnlyMedia] = useMemo(() => {\n    const onlyMedia = Boolean(renderingAttachments?.every((a) => a.quick || a.audio));\n    if (onlyMedia) return [true, true];\n    const oneMedia = Boolean(renderingAttachments?.some((a) => a.quick || a.audio));\n    return [oneMedia, false];\n  }, [renderingAttachments]);\n\n  const [hasSpoiler, isEverySpoiler] = useMemo(() => {\n    const areAllSpoilers = Boolean(renderingAttachments?.every((a) => a.shouldSendAsSpoiler));\n    if (areAllSpoilers) return [true, true];\n    const hasOneSpoiler = Boolean(renderingAttachments?.some((a) => a.shouldSendAsSpoiler));\n    return [hasOneSpoiler, false];\n  }, [renderingAttachments]);\n\n  const {\n    isEmojiTooltipOpen,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n    closeEmojiTooltip,\n  } = useEmojiTooltip(\n    Boolean(isReady && (isForCurrentMessageList || !isForMessage) && renderingIsOpen),\n    richInputCtx,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    insertCustomEmoji,\n    closeCustomEmojiTooltip,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && (isForCurrentMessageList || !isForMessage) && renderingIsOpen && shouldSuggestCustomEmoji),\n    richInputCtx,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isReady && isForCurrentMessageList && renderingIsOpen),\n    richInputCtx,\n    groupChatMembers,\n    undefined,\n    currentUserId,\n  );\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClear) : undefined), [isOpen, onClear]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setShouldSendCompressed(shouldSuggestCompression ?? attachmentSettings.shouldCompress);\n      setShouldSendGrouped(attachmentSettings.shouldSendGrouped);\n    }\n  }, [attachmentSettings, isOpen, shouldSuggestCompression]);\n\n  useEffect(() => {\n    if (!isOpen) {\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [updateAttachmentSettings, isOpen, shouldSuggestCompression]);\n\n  function setIsInvertedMedia(value?: true) {\n    updateAttachmentSettings({ isInvertedMedia: value });\n  }\n\n  useEffect(() => {\n    if (isOpen && isMobile) {\n      removeAllSelections();\n    }\n  }, [isMobile, isOpen]);\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !canShowCustomSendMenu || !isOpen);\n\n  const sendAttachments = useLastCallback((isSilent?: boolean, shouldSendScheduled?: boolean) => {\n    if (isOpen) {\n      const send = ((shouldSchedule || shouldSendScheduled) && isForMessage && !editingMessage) ? onSendScheduled\n        : isSilent ? onSendSilent : onSend;\n      send(isSendingCompressed, shouldSendGrouped, isInvertedMedia);\n      updateAttachmentSettings({\n        shouldCompress: shouldSuggestCompression === undefined ? isSendingCompressed : undefined,\n        shouldSendGrouped,\n        isInvertedMedia,\n      });\n    }\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    sendAttachments(true);\n  });\n\n  const handleSendClick = useLastCallback(() => {\n    sendAttachments();\n  });\n\n  const handleScheduleClick = useLastCallback(() => {\n    sendAttachments(false, true);\n  });\n\n  const handleDragLeave = (e: React.DragEvent<HTMLElement>) => {\n    const { relatedTarget: toTarget, target: fromTarget } = e;\n\n    // Esc button pressed during drag event\n    if ((fromTarget as HTMLDivElement).matches(`.${styles.dropTarget}`) && !toTarget) {\n      hideTimeoutRef.current = window.setTimeout(unmarkHovered, DROP_LEAVE_TIMEOUT_MS);\n    }\n\n    // Prevent DragLeave event from firing when the pointer moves inside the AttachmentModal drop target\n    if (fromTarget && (fromTarget as HTMLElement).closest(`.${styles.hovered}`)) {\n      return;\n    }\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    unmarkHovered();\n\n    const { dataTransfer } = e;\n\n    const files = await getFilesFromDataTransferItems(dataTransfer.items);\n    if (files?.length) {\n      onFileAppend(files, isEverySpoiler);\n    }\n  });\n\n  function handleDragOver(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    e.preventDefault();\n\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n      hideTimeoutRef.current = undefined;\n    }\n  }\n\n  const handleFileSelect = useLastCallback((e: Event) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileAppend(validatedFiles, isEverySpoiler);\n    }\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog('*', (e) => handleFileSelect(e));\n  });\n\n  const handleDelete = useLastCallback((index: number) => {\n    onAttachmentsUpdate(attachments.filter((a, i) => i !== index));\n  });\n\n  const handleEnableSpoilers = useLastCallback(() => {\n    onAttachmentsUpdate(attachments.map((a) => ({\n      ...a,\n      shouldSendAsSpoiler: true,\n    })));\n  });\n\n  const handleDisableSpoilers = useLastCallback(() => {\n    onAttachmentsUpdate(attachments.map((a) => ({ ...a, shouldSendAsSpoiler: undefined })));\n  });\n\n  const handleToggleSpoiler = useLastCallback((index: number) => {\n    onAttachmentsUpdate(attachments.map((attachment, i) => {\n      if (i === index) {\n        return {\n          ...attachment,\n          shouldSendAsSpoiler: !attachment.shouldSendAsSpoiler || undefined,\n        };\n      }\n\n      return attachment;\n    }));\n  });\n\n  const handleResize = useLastCallback(() => {\n    const svg = svgRef.current;\n    if (!svg) {\n      return;\n    }\n\n    const { width, height } = svg.getBoundingClientRect();\n    svg.viewBox.baseVal.width = width;\n    svg.viewBox.baseVal.height = height;\n  });\n\n  // Can't listen for SVG resize\n  useResizeObserver(ref, handleResize);\n\n  useEffectOnce(handleResize);\n\n  useEffect(() => {\n    const mainButton = mainButtonRef.current;\n    const input = document.getElementById(ATTACHMENT_MODAL_INPUT_ID);\n\n    if (!mainButton || !input) return;\n\n    const { width } = mainButton.getBoundingClientRect();\n\n    requestMutation(() => {\n      input.style.setProperty('--margin-for-scrollbar', `${width}px`);\n    });\n  }, [oldLang, isOpen]);\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isMenuOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  const leftChars = useDerivedState(() => {\n    if (!renderingIsOpen) return undefined;\n\n    const leftCharsBeforeLimit = captionLimit - getHtmlTextLength(getHtml());\n    return leftCharsBeforeLimit <= MAX_LEFT_CHARS_TO_SHOW ? leftCharsBeforeLimit : undefined;\n  }, [captionLimit, getHtml, renderingIsOpen]);\n\n  const isQuickGallery = isSendingCompressed && hasOnlyMedia;\n\n  const [areAllPhotos, areAllVideos, areAllAudios] = useMemo(() => {\n    if (!isQuickGallery || !renderingAttachments) return [false, false, false];\n    const everyPhoto = renderingAttachments.every((a) => SUPPORTED_PHOTO_CONTENT_TYPES.has(a.mimeType));\n    const everyVideo = renderingAttachments.every((a) => SUPPORTED_VIDEO_CONTENT_TYPES.has(a.mimeType));\n    const everyAudio = renderingAttachments.every((a) => SUPPORTED_AUDIO_CONTENT_TYPES.has(a.mimeType));\n    return [everyPhoto, everyVideo, everyAudio];\n  }, [renderingAttachments, isQuickGallery]);\n\n  const hasAnySpoilerable = useMemo(() => {\n    if (!renderingAttachments) return false;\n    return renderingAttachments.some((a) => !SUPPORTED_AUDIO_CONTENT_TYPES.has(a.mimeType));\n  }, [renderingAttachments]);\n\n  if (!renderingAttachments) {\n    return undefined;\n  }\n\n  const isMultiple = renderingAttachments.length > 1;\n\n  const canInvertMedia = (() => {\n    if (isEditing) return false;\n    if (!hasMedia) return false;\n    if (!shouldForceAsFile && !shouldForceCompression && !isSendingCompressed) return false;\n    if (isMultiple && shouldSendGrouped) return false;\n    return true;\n  })();\n\n  let title = '';\n  const attachmentsLength = renderingAttachments.length;\n  if (areAllPhotos) {\n    title = oldLang(isEditing ? 'EditMessageReplacePhoto' : 'PreviewSender.SendPhoto', attachmentsLength, 'i');\n  } else if (areAllVideos) {\n    title = oldLang(isEditing ? 'EditMessageReplaceVideo' : 'PreviewSender.SendVideo', attachmentsLength, 'i');\n  } else if (areAllAudios) {\n    title = oldLang(isEditing ? 'EditMessageReplaceAudio' : 'PreviewSender.SendAudio', attachmentsLength, 'i');\n  } else {\n    title = oldLang(isEditing ? 'EditMessageReplaceFile' : 'PreviewSender.SendFile', attachmentsLength, 'i');\n  }\n\n  function renderHeader() {\n    if (!renderingAttachments) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"modal-header-condensed\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel=\"Cancel attachments\" onClick={onClear}>\n          <Icon name=\"close\" />\n        </Button>\n        <div className=\"modal-title\">{title}</div>\n        {notEditingFile && !isInAlbum\n          && (\n            <DropdownMenu\n              className=\"attachmeneditingMessaget-modal-more-menu with-menu-transitions\"\n              trigger={MoreMenuButton}\n              positionX=\"right\"\n            >\n              {Boolean(!editingMessage) && (\n                <MenuItem icon=\"add\" onClick={handleDocumentSelect}>{oldLang('Add')}</MenuItem>\n              )}\n              {hasMedia && (\n                <>\n                  {\n                    canInvertMedia && (!isInvertedMedia ? (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"move-caption-up\" onClick={() => setIsInvertedMedia(true)}>\n                        {oldLang('PreviewSender.MoveTextUp')}\n                      </MenuItem>\n                    ) : (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"move-caption-down\" onClick={() => setIsInvertedMedia(undefined)}>\n                        {oldLang(('PreviewSender.MoveTextDown'))}\n                      </MenuItem>\n                    ))\n                  }\n                  {\n                    !shouldForceAsFile && !shouldForceCompression && (isSendingCompressed ? (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"document\" onClick={() => setShouldSendCompressed(false)}>\n                        {oldLang(isMultiple ? 'Attachment.SendAsFiles' : 'Attachment.SendAsFile')}\n                      </MenuItem>\n                    ) : (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"photo\" onClick={() => setShouldSendCompressed(true)}>\n                        {isMultiple ? 'Send All as Media' : 'Send as Media'}\n                      </MenuItem>\n                    ))\n                  }\n                  {isSendingCompressed && hasAnySpoilerable && Boolean(!editingMessage) && (\n                    hasSpoiler ? (\n                      <MenuItem icon=\"spoiler-disable\" onClick={handleDisableSpoilers}>\n                        {oldLang('Attachment.DisableSpoiler')}\n                      </MenuItem>\n                    ) : (\n                      <MenuItem icon=\"spoiler\" onClick={handleEnableSpoilers}>\n                        {oldLang('Attachment.EnableSpoiler')}\n                      </MenuItem>\n                    )\n                  )}\n                </>\n              )}\n              {isMultiple && (\n                shouldSendGrouped ? (\n                  <MenuItem\n                    icon=\"grouped-disable\"\n                    // eslint-disable-next-line react/jsx-no-bind\n                    onClick={() => setShouldSendGrouped(false)}\n                  >\n                    Ungroup All Media\n                  </MenuItem>\n                ) : (\n                  // eslint-disable-next-line react/jsx-no-bind\n                  <MenuItem icon=\"grouped\" onClick={() => setShouldSendGrouped(true)}>\n                    Group All Media\n                  </MenuItem>\n                )\n              )}\n            </DropdownMenu>\n          )}\n      </div>\n    );\n  }\n\n  const isBottomDividerShown = !areAttachmentsScrolledToBottom || !isCaptionNotScrolled;\n  const buttonSendCaption = paidMessagesStars ? formatStarsAsIcon(lang,\n    attachmentsLength * paidMessagesStars,\n    {\n      className: styles.sendButtonStar,\n      asFont: true,\n    }) : oldLang('Send');\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClear}\n      header={renderHeader()}\n      className={buildClassName(\n        styles.root,\n        isHovered && styles.hovered,\n        !areAttachmentsNotScrolled && styles.headerBorder,\n        isMobile && styles.mobile,\n        isSymbolMenuOpen && styles.symbolMenuOpen,\n        forceDarkTheme && 'component-theme-dark',\n      )}\n      noBackdropClose\n      isLowStackPriority\n    >\n      <div\n        className={styles.dropTarget}\n        onDragEnter={markHovered}\n        onDrop={handleFilesDrop}\n        onDragOver={handleDragOver}\n        onDragLeave={handleDragLeave}\n        onClick={unmarkHovered}\n        data-attach-description={oldLang('Preview.Dragging.AddItems', 10)}\n        data-dropzone\n      >\n        <svg className={styles.dropOutlineContainer}>\n          <rect className={styles.dropOutline} x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" rx=\"8\" />\n        </svg>\n        <div\n          className={buildClassName(\n            styles.attachments,\n            'custom-scroll',\n            isBottomDividerShown && styles.attachmentsBottomPadding,\n          )}\n          onScroll={handleAttachmentsScroll}\n        >\n          {renderingAttachments.map((attachment, i) => (\n            <AttachmentModalItem\n              attachment={attachment}\n              shouldDisplayCompressed={isSendingCompressed}\n              shouldDisplayGrouped={shouldSendGrouped}\n              isSingle={renderingAttachments.length === 1}\n              index={i}\n              key={attachment.uniqueId || i}\n              onDelete={handleDelete}\n              onToggleSpoiler={handleToggleSpoiler}\n            />\n          ))}\n        </div>\n        <div\n          className={buildClassName(\n            styles.captionWrapper,\n            isBottomDividerShown && styles.captionTopBorder,\n          )}\n        >\n          <MentionTooltip\n            isOpen={isMentionTooltipOpen}\n            filteredUsers={mentionFilteredUsers}\n            onInsertUserName={insertMention}\n            onClose={closeMentionTooltip}\n          />\n          <EmojiTooltip\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n          <CustomEmojiTooltip\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onCustomEmojiSelect={insertCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <div className={styles.caption}>\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              onCustomEmojiSelect={onCustomEmojiSelect}\n              onRemoveSymbol={onRemoveSymbol}\n              onEmojiSelect={onEmojiSelect}\n              isAttachmentModal\n              canSendPlainText\n              className=\"attachment-modal-symbol-menu with-menu-transitions\"\n              idPrefix=\"attachment\"\n              forceDarkTheme={forceDarkTheme}\n            />\n            <MessageInput\n              richInputCtx={richInputCtx}\n              id={ATTACHMENT_MODAL_INPUT_ID}\n              chatId={chatId}\n              threadId={threadId}\n              isAttachmentModalInput\n              customEmojiPrefix=\"attachment\"\n              isReady={isReady}\n              isActive={isOpen}\n              editableInputId={EDITABLE_INPUT_MODAL_ID}\n              placeholder={oldLang('AddCaption')}\n              onSend={handleSendClick}\n              onScroll={handleCaptionScroll}\n              canAutoFocus={Boolean(isReady && isForCurrentMessageList && attachments.length)}\n              captionLimit={leftChars}\n              shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n              onSuppressedFocus={closeSymbolMenu}\n            />\n            <div className={styles.sendWrapper}>\n              <Button\n                ref={mainButtonRef}\n                className={styles.send}\n                onClick={handleSendClick}\n                onContextMenu={canShowCustomSendMenu ? handleContextMenu : undefined}\n              >\n                {shouldSchedule && !editingMessage ? oldLang('Next')\n                  : editingMessage ? oldLang('Save') : buttonSendCaption}\n              </Button>\n              {canShowCustomSendMenu && (\n                <CustomSendMenu\n                  isOpen={isCustomSendMenuOpen}\n                  canSchedule={canSchedule && isForMessage}\n                  onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n                  onSendSchedule={handleScheduleClick}\n                  onClose={handleContextMenuClose}\n                  onCloseAnimationEnd={handleContextMenuHide}\n                  isSavedMessages={isChatWithSelf}\n                  onSendWhenOnline={onSendWhenOnline}\n                  canScheduleUntilOnline={canScheduleUntilOnline}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const {\n      currentUserId,\n      recentEmojis,\n      customEmojis,\n      attachmentSettings,\n    } = global;\n\n    const chatFullInfo = !isUserId(chatId) ? selectChatFullInfo(global, chatId) : undefined;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const { shouldSuggestCustomEmoji } = global.settings.byKey;\n    const { language } = selectSharedSettings(global);\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n\n    return {\n      isChatWithSelf,\n      currentUserId,\n      groupChatMembers: chatFullInfo?.members,\n      recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      shouldSuggestCustomEmoji,\n      customEmojiForEmoji: customEmojis.forEmoji.stickers,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      attachmentSettings,\n    };\n  },\n)(AttachmentModal));\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiNewPoll } from '../../../api/types';\n\nimport { requestMeasure, requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { useRichInput } from '../../common/richinput/useRichInput';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport RichInput from '../../common/richinput/RichInput';\nimport Button from '../../ui/Button';\nimport Checkbox from '../../ui/Checkbox';\nimport InputText from '../../ui/InputText';\nimport Modal from '../../ui/Modal';\nimport RadioGroup from '../../ui/RadioGroup';\n\nimport './PollModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  shouldBeAnonymous?: boolean;\n  isQuiz?: boolean;\n  onSend: (pollSummary: ApiNewPoll) => void;\n  onClear: () => void;\n};\n\nconst MAX_LIST_HEIGHT = 320;\nconst MAX_OPTIONS_COUNT = 10;\nconst MAX_OPTION_LENGTH = 100;\nconst MAX_QUESTION_LENGTH = 255;\nconst MAX_SOLUTION_LENGTH = 200;\n\nconst PollModal: FC<OwnProps> = ({\n  isOpen, isQuiz, shouldBeAnonymous, onSend, onClear,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const questionInputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const optionsListRef = useRef<HTMLDivElement>(null);\n\n  const [question, setQuestion] = useState<string>('');\n  const [options, setOptions] = useState<string[]>(['']);\n  const [isAnonymous, setIsAnonymous] = useState(true);\n  const [isMultipleAnswers, setIsMultipleAnswers] = useState(false);\n  const [isQuizMode, setIsQuizMode] = useState(isQuiz || false);\n  const solutionInputCtx = useRichInput();\n  const [correctOption, setCorrectOption] = useState<number | undefined>();\n  const [hasErrors, setHasErrors] = useState<boolean>(false);\n\n  const lang = useOldLang();\n\n  const focusInput = useLastCallback((ref: RefObject<HTMLInputElement>) => {\n    if (isOpen && ref.current) {\n      ref.current.focus();\n    }\n  });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClear) : undefined), [isOpen, onClear]);\n  useEffect(() => {\n    if (!isOpen) {\n      setQuestion('');\n      setOptions(['']);\n      setIsAnonymous(true);\n      setIsMultipleAnswers(false);\n      setIsQuizMode(isQuiz || false);\n      solutionInputCtx.editable.clearInput();\n      setCorrectOption(undefined);\n      setHasErrors(false);\n    }\n  }, [isQuiz, isOpen, solutionInputCtx.editable]);\n\n  useEffect(() => focusInput(questionInputRef), [focusInput, isOpen]);\n\n  const addNewOption = useLastCallback((newOptions: string[] = []) => {\n    setOptions([...newOptions, '']);\n\n    requestNextMutation(() => {\n      const list = optionsListRef.current;\n      if (!list) {\n        return;\n      }\n\n      requestMeasure(() => {\n        list.scrollTo({ top: list.scrollHeight, behavior: 'smooth' });\n      });\n    });\n  });\n\n  const handleCreate = useLastCallback(() => {\n    setHasErrors(false);\n    if (!isOpen) {\n      return;\n    }\n\n    const isNoCorrectOptionError = isQuizMode && (correctOption === undefined || !options[correctOption].trim());\n\n    const answers = options\n      .map((text, index) => {\n        text = text.trim();\n\n        if (!text) return undefined;\n\n        return {\n          text: {\n            text,\n          },\n          option: String(index),\n          ...(index === correctOption && { correct: true }),\n        };\n      }).filter(Boolean);\n\n    const questionTrimmed = question.trim().substring(0, MAX_QUESTION_LENGTH);\n    if (!questionTrimmed || answers.length < 2) {\n      setQuestion(questionTrimmed);\n      if (answers.length) {\n        const optionsTrimmed = options.map((o) => o.trim().substring(0, MAX_OPTION_LENGTH)).filter(Boolean);\n        if (optionsTrimmed.length < 2) {\n          addNewOption(optionsTrimmed);\n        } else {\n          setOptions(optionsTrimmed);\n        }\n      } else {\n        addNewOption();\n      }\n      setHasErrors(true);\n      return;\n    }\n\n    if (isNoCorrectOptionError) {\n      setHasErrors(true);\n      return;\n    }\n\n    const payload: ApiNewPoll = {\n      summary: {\n        question: {\n          text: questionTrimmed,\n        },\n        answers,\n        ...(!isAnonymous && { isPublic: true }),\n        ...(isMultipleAnswers && { multipleChoice: true }),\n        ...(isQuizMode && { quiz: true }),\n      },\n    };\n\n    if (isQuizMode) {\n      const { text, entities } = solutionInputCtx.editable.getFormattedText(true);\n\n      payload.quiz = {\n        correctAnswers: [String(correctOption)],\n        ...(text && { solution: text.substring(0, MAX_SOLUTION_LENGTH) }),\n        ...(entities && { solutionEntities: entities }),\n      };\n    }\n\n    onSend(payload);\n  });\n\n  const updateOption = useLastCallback((index: number, text: string) => {\n    const newOptions = [...options];\n    newOptions[index] = text;\n    if (newOptions[newOptions.length - 1].trim().length && newOptions.length < MAX_OPTIONS_COUNT) {\n      addNewOption(newOptions);\n    } else {\n      setOptions(newOptions);\n    }\n  });\n\n  const removeOption = useLastCallback((index: number) => {\n    const newOptions = [...options];\n    newOptions.splice(index, 1);\n    setOptions(newOptions);\n\n    if (correctOption !== undefined) {\n      if (correctOption === index) {\n        setCorrectOption(undefined);\n      } else if (index < correctOption) {\n        setCorrectOption(correctOption - 1);\n      }\n    }\n\n    requestNextMutation(() => {\n      if (!optionsListRef.current) {\n        return;\n      }\n\n      optionsListRef.current.classList.toggle('overflown', optionsListRef.current.scrollHeight > MAX_LIST_HEIGHT);\n    });\n  });\n\n  const handleCorrectOptionChange = useLastCallback((newValue: string) => {\n    setCorrectOption(Number(newValue));\n  });\n\n  const handleIsAnonymousChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsAnonymous(e.target.checked);\n  });\n\n  const handleMultipleAnswersChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsMultipleAnswers(e.target.checked);\n  });\n\n  const handleQuizModeChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsQuizMode(e.target.checked);\n  });\n\n  const handleKeyPress = useLastCallback((e: React.KeyboardEvent<HTMLDivElement>) => {\n    if (e.keyCode === 13) {\n      handleCreate();\n    }\n  });\n\n  const handleQuestionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setQuestion(e.target.value);\n  });\n\n  const getQuestionError = useLastCallback(() => {\n    if (hasErrors && !question.trim().length) {\n      return lang('lng_polls_choose_question');\n    }\n\n    return undefined;\n  });\n\n  const getOptionsError = useLastCallback((index: number) => {\n    const optionsTrimmed = options.map((o) => o.trim()).filter((o) => o.length);\n    if (hasErrors && optionsTrimmed.length < 2 && !options[index].trim().length) {\n      return lang('lng_polls_choose_answers');\n    }\n    return undefined;\n  });\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\">\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel=\"Cancel poll creation\" onClick={onClear}>\n          <Icon name=\"close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('NewPoll')}</div>\n        <Button\n          color=\"primary\"\n          size=\"smaller\"\n          className=\"modal-action-button\"\n          onClick={handleCreate}\n        >\n          {lang('Create')}\n        </Button>\n      </div>\n    );\n  }\n\n  function renderOptions() {\n    return options.map((option, index) => (\n      <div className=\"option-wrapper\">\n        <InputText\n          maxLength={MAX_OPTION_LENGTH}\n          label={index !== options.length - 1 || options.length === MAX_OPTIONS_COUNT\n            ? lang('OptionHint')\n            : lang('CreatePoll.AddOption')}\n          error={getOptionsError(index)}\n          value={option}\n          // eslint-disable-next-line react/jsx-no-bind\n          onChange={(e) => updateOption(index, e.currentTarget.value)}\n          onKeyPress={handleKeyPress}\n        />\n        {index !== options.length - 1 && (\n          <Button\n            className=\"option-remove-button\"\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Delete')}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => removeOption(index)}\n          >\n            <Icon name=\"close\" />\n          </Button>\n        )}\n      </div>\n    ));\n  }\n\n  function renderRadioOptions() {\n    return renderOptions()\n      .map((label, index) => ({ value: String(index), label, hidden: !options[index].trim() }));\n  }\n\n  function renderQuizNoOptionError() {\n    const optionsTrimmed = options.map((o) => o.trim()).filter((o) => o.length);\n\n    return isQuizMode && (correctOption === undefined || !optionsTrimmed[correctOption]) && (\n      <p className=\"poll-error\">{lang('lng_polls_choose_correct')}</p>\n    );\n  }\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClear} header={renderHeader()} className=\"PollModal\">\n      <InputText\n        ref={questionInputRef}\n        label={lang('AskAQuestion')}\n        value={question}\n        error={getQuestionError()}\n        onChange={handleQuestionChange}\n        onKeyPress={handleKeyPress}\n      />\n      <div className=\"options-divider\" />\n\n      <div className=\"options-list custom-scroll\" ref={optionsListRef}>\n        <h3 className=\"options-header\">{lang('PollOptions')}</h3>\n\n        {hasErrors && renderQuizNoOptionError()}\n        {isQuizMode ? (\n          <RadioGroup\n            name=\"correctOption\"\n            options={renderRadioOptions()}\n            selected={String(correctOption)}\n            onChange={handleCorrectOptionChange}\n          />\n        ) : (\n          renderOptions()\n        )}\n\n      </div>\n\n      <div className=\"options-divider\" />\n\n      <div className=\"quiz-mode\">\n        <div className=\"dialog-checkbox-group\">\n          {!shouldBeAnonymous && (\n            <Checkbox\n              label={lang('PollAnonymous')}\n              checked={isAnonymous}\n              onChange={handleIsAnonymousChange}\n            />\n          )}\n          <Checkbox\n            label={lang('PollMultiple')}\n            checked={isMultipleAnswers}\n            disabled={isQuizMode}\n            onChange={handleMultipleAnswersChange}\n          />\n          <Checkbox\n            label={lang('PollQuiz')}\n            checked={isQuizMode}\n            disabled={isMultipleAnswers || isQuiz !== undefined}\n            onChange={handleQuizModeChange}\n          />\n        </div>\n        {isQuizMode && (\n          <>\n            <h3 className=\"options-header\">{lang('lng_polls_solution_title')}</h3>\n            <RichInput\n              richInputCtx={solutionInputCtx}\n              placeholder={lang('lng_polls_solution_placeholder')}\n            />\n            <div className=\"note\">{lang('CreatePoll.ExplanationInfo')}</div>\n          </>\n        )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(PollModal);\n","import { type HTMLProps } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiEmojiStatusType,\n  ApiReaction,\n  ApiReactionWithPaid,\n  ApiSticker,\n  ApiStickerSet,\n} from '../../api/types';\nimport type { GlobalState } from '../../global/types';\nimport type {\n  EmojiKeywords,\n  StickerSetOrReactionsSetOrRecent,\n} from '../../types';\nimport type {\n  EmojiData,\n  EmojiModule,\n  EmojiRawData,\n} from '../../util/emoji/emoji';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  COLLECTIBLE_STATUS_SET_ID,\n  EMOJI_SIZE_PICKER,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  SLIDE_TRANSITION_DURATION,\n  STICKER_PICKER_MAX_SHARED_COVERS,\n  STICKER_SIZE_PICKER_HEADER,\n  TOP_SYMBOL_SET_ID,\n} from '../../config';\nimport { isSameReaction } from '../../global/helpers';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChatFullInfo,\n  selectIsAlwaysHighPriorityEmoji,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n} from '../../global/selectors';\nimport animateHorizontalScroll from '../../util/animateHorizontalScroll';\nimport animateScroll from '../../util/animateScroll';\nimport { IS_MOBILE, IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { uncompressEmoji } from '../../util/emoji/emoji';\nimport { pickTruthy, unique } from '../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport windowSize from '../../util/windowSize';\nimport { REM } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useDebouncedCallback from '../../hooks/useDebouncedCallback';\nimport useFlag from '../../hooks/useFlag';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevDuringAnimation from '../../hooks/usePrevDuringAnimation';\nimport useScrolledState from '../../hooks/useScrolledState';\nimport useAsyncRendering from '../right/hooks/useAsyncRendering';\nimport {\n  FOCUS_MARGIN,\n  useStickerPickerObservers,\n} from './hooks/useStickerPickerObservers';\n\nimport EmojiButton from '../middle/composer/EmojiButton';\nimport EmojiCategory, {\n  EMOJI_MARGIN,\n  EMOJI_VERTICAL_MARGIN,\n  EMOJI_VERTICAL_MARGIN_MOBILE,\n  EMOJIS_PER_ROW_ON_DESKTOP,\n  MOBILE_CONTAINER_PADDING,\n} from '../middle/composer/EmojiCategory';\nimport {\n  ICONS_BY_CATEGORY,\n  INTERSECTION_THROTTLE,\n  SMOOTH_SCROLL_DISTANCE,\n} from '../middle/composer/EmojiPicker';\nimport StickerSetCover from '../middle/composer/StickerSetCover';\nimport Button from '../ui/Button';\nimport Loading from '../ui/Loading';\nimport Icon from './icons/Icon';\nimport ScrollableSearchInputWithEmojis, {\n  manualGroupNames,\n  manualGroups,\n} from './ScrollableSearchInputWithEmojis';\nimport StickerButton from './StickerButton';\nimport StickerSet from './StickerSet';\n\nimport pickerStyles from '../middle/composer/StickerPicker.module.scss';\nimport styles from './EsgEmojiPicker.module.scss';\n\ntype OwnProps = {\n  chatId?: string;\n  className?: string;\n  pickerListClassName?: string;\n  isHidden?: boolean;\n  loadAndPlay: boolean;\n  idPrefix?: string;\n  withDefaultTopicIcons?: boolean;\n  selectedReactionIds?: string[];\n  isStatusPicker?: boolean;\n  isReactionPicker?: boolean;\n  isTranslucent?: boolean;\n  onCustomEmojiSelect: (sticker: ApiSticker) => void;\n  onEmojiSelect: (emoji: string, name: string) => void;\n  onReactionSelect?: (reaction: ApiReactionWithPaid) => void;\n  onReactionContext?: (reaction: ApiReactionWithPaid) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  emojiKeywords?: Record<string, EmojiKeywords | undefined>;\n  customEmojisById?: Record<string, ApiSticker>;\n  recentCustomEmojiIds?: string[];\n  recentStatusEmojis?: ApiSticker[];\n  collectibleStatuses?: ApiEmojiStatusType[];\n  chatEmojiSetId?: string;\n  topReactions?: ApiReaction[];\n  recentReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  availableReactions?: ApiAvailableReaction[];\n  addedCustomEmojiIds?: string[];\n  defaultTopicIconsId?: string;\n  defaultStatusIconsId?: string;\n  customEmojiFeaturedIds?: string[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n  isWithPaidReaction?: boolean;\n  recentEmojis?: GlobalState['recentEmojis'];\n  emojiGroups?: GlobalState['emojiGroups'];\n};\n\nconst HEADER_BUTTON_WIDTH = 2.5 * REM; // px (including margin)\n\nconst DEFAULT_ID_PREFIX = 'custom-emoji-set';\nconst TOP_REACTIONS_COUNT = 16;\nconst RECENT_REACTIONS_COUNT = 32;\nconst FADED_BUTTON_SET_IDS = new Set([\n  RECENT_SYMBOL_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n]);\nconst STICKER_SET_IDS_WITH_COVER = new Set([\n  RECENT_SYMBOL_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n]);\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\nconst { loadEmojiKeywords } = getActions();\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n    loadEmojiKeywords({ language: BASE_EMOJI_KEYWORD_LANG });\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\ntype EmojiCategoryData = { id: string; name: string; emojis: string[] };\n\nconst TransitionHelper: FC<\nHTMLProps<HTMLDivElement> & { isTransitioned: boolean }\n> = ({\n  children, className, isTransitioned, ...props\n}) => {\n  const transitionClassNames = useMediaTransitionDeprecated(isTransitioned);\n\n  return (\n    <div\n      className={buildClassName(className, transitionClassNames)}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...props}\n    >\n      {children}\n    </div>\n  );\n};\n\nconst EsgEmojiPicker: FC<OwnProps & StateProps> = ({\n  emojiKeywords,\n  className,\n  pickerListClassName,\n  isHidden,\n  loadAndPlay,\n  addedCustomEmojiIds,\n  customEmojisById,\n  recentCustomEmojiIds,\n  selectedReactionIds,\n  recentStatusEmojis,\n  collectibleStatuses,\n  stickerSetsById,\n  chatEmojiSetId,\n  topReactions,\n  recentReactions,\n  availableReactions,\n  idPrefix = DEFAULT_ID_PREFIX,\n  customEmojiFeaturedIds,\n  canAnimate,\n  recentEmojis,\n  emojiGroups,\n  isReactionPicker,\n  isStatusPicker,\n  isTranslucent,\n  isSavedMessages,\n  isCurrentUserPremium,\n  withDefaultTopicIcons,\n  defaultTopicIconsId,\n  defaultStatusIconsId,\n  defaultTagReactions,\n  isWithPaidReaction,\n  onCustomEmojiSelect,\n  onEmojiSelect,\n  onReactionSelect,\n  onReactionContext,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const recentEmojisRef = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const [categories, setCategories] = useState<EmojiCategoryData[]>();\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  const [isInputFocused, setFocused, setUnfocused] = useFlag();\n  const [emojisFound, setEmojisFound] = useState<(Emoji | ApiSticker)[]>([]);\n  const [emojisCategoryFound, setEmojisCategoryFound] = useState<(Emoji | ApiSticker)[]>([]);\n  const [emojiQuery, setEmojiQuery] = useState<string>('');\n  const [activeCategoryIndex, setActiveCategoryIndex] = useState(0);\n  const [emojis, setEmojis] = useState<AllEmojis>();\n\n  const { isMobile } = useAppLayout();\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n  const textToEmojiMap = useMemo(() => {\n    const textToEmoji: Map<string, (Emoji | ApiSticker)[]> = new Map();\n    for (const emoji of Object.values(emojis ?? {})) {\n      const em = 'native' in emoji ? emoji : Object.values(emoji)[0];\n      const arr = textToEmoji.get(em.native) ?? [];\n      arr.push(em);\n      textToEmoji.set(em.native, arr);\n    }\n\n    for (const custEm of Object.values(customEmojisById ?? {})) {\n      if (!custEm?.emoji) continue;\n\n      const arr = textToEmoji.get(custEm.emoji) ?? [];\n      arr.push(custEm);\n      textToEmoji.set(custEm.emoji, arr);\n    }\n\n    return textToEmoji;\n  }, [emojis, customEmojisById]);\n\n  const recentCustomEmojis = useMemo(() => {\n    return isStatusPicker\n      ? recentStatusEmojis\n      : Object.values(pickTruthy(customEmojisById!, recentCustomEmojiIds!));\n  }, [\n    customEmojisById,\n    isStatusPicker,\n    recentCustomEmojiIds,\n    recentStatusEmojis,\n  ]);\n\n  const collectibleStatusEmojis = useMemo(() => {\n    const collectibleStatusEmojiIds = collectibleStatuses?.map(\n      (status) => status.documentId,\n    );\n    return (\n      customEmojisById\n      && collectibleStatusEmojiIds\n        ?.map((id) => customEmojisById[id])\n        .filter(Boolean)\n    );\n  }, [customEmojisById, collectibleStatuses]);\n\n  const prefix = `${idPrefix}-custom-emoji`;\n  const {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForShowingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  } = useStickerPickerObservers(containerRef, headerRef, prefix, isHidden);\n\n  const canLoadAndPlay = usePrevDuringAnimation(\n    loadAndPlay || undefined,\n    SLIDE_TRANSITION_DURATION,\n  );\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const getEmojisSearch = useCallback((\n    query: string,\n    _emojiKeywords: Record<string, EmojiKeywords | undefined> | undefined,\n  ) => {\n    const arr: Set<Emoji | ApiSticker> = new Set();\n\n    for (const emKw of Object.values(_emojiKeywords ?? {})) {\n      if (!emKw || !emKw.keywords) continue;\n      for (const [kw, emojisKws] of Object.entries(emKw.keywords)) {\n        if (!kw.includes(query)) continue;\n\n        for (const em of emojisKws) {\n          for (const e of textToEmojiMap.get(em) ?? []) {\n            arr.add(e);\n          }\n        }\n      }\n    }\n    return [...arr.values()];\n  }, [textToEmojiMap]);\n\n  const areAddedLoaded = Boolean(addedCustomEmojiIds);\n  const handleEmojiSearchQueryChange = useDebouncedCallback(\n    (query: string) => {\n      setEmojiQuery(query.toLowerCase());\n\n      const arr = getEmojisSearch(query, emojiKeywords);\n\n      setEmojisFound([...arr.values()]);\n      if (query === '') {\n        setEmojisFound([]);\n        setEmojisCategoryFound([]);\n      }\n    },\n    [emojiKeywords, getEmojisSearch],\n    300,\n    true,\n  );\n\n  function onlyUniqueById(array: (ApiSticker | Emoji)[]) {\n    const seenIds = new Set();\n    return array.filter((obj) => {\n      if (seenIds.has(obj.id)) {\n        return false;\n      }\n      seenIds.add(obj.id);\n      return true;\n    });\n  }\n\n  const handleEmojiGroupSelect = useLastCallback((category: string) => {\n    if (manualGroupNames.includes(category)) {\n      const keywords = manualGroups.find((g) => g.name === category)?.keywords!;\n\n      const arr: (Emoji | ApiSticker)[] = [];\n\n      for (const kw of keywords) {\n        arr.push(...getEmojisSearch(kw, emojiKeywords));\n      }\n\n      setEmojisCategoryFound(onlyUniqueById(arr));\n      return;\n    }\n\n    const groupCat = emojiGroups?.find((g) => g.title === category);\n    if (!groupCat) return;\n\n    const arr: Set<Emoji | ApiSticker> = new Set();\n\n    for (const em of groupCat?.emoticons ?? []) {\n      for (const e of textToEmojiMap.get(em) ?? []) {\n        arr.add(e);\n      }\n    }\n\n    setEmojisCategoryFound([...arr.values()]);\n  });\n\n  // eslint-disable-next-line no-null/no-null\n  const sharedSearchCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const allSets = useMemo(() => {\n    const defaultSets: StickerSetOrReactionsSetOrRecent[] = [];\n\n    if (isReactionPicker && isSavedMessages) {\n      if (defaultTagReactions?.length) {\n        defaultSets.push({\n          id: TOP_SYMBOL_SET_ID,\n          accessHash: '',\n          title: oldLang('PremiumPreviewTags'),\n          reactions: defaultTagReactions,\n          count: defaultTagReactions.length,\n          isEmoji: true,\n        });\n      }\n    }\n\n    if (isReactionPicker && !isSavedMessages) {\n      const topReactionsSlice: ApiReactionWithPaid[] = topReactions?.slice(0, TOP_REACTIONS_COUNT) || [];\n      if (isWithPaidReaction) {\n        topReactionsSlice.unshift({ type: 'paid' });\n      }\n      if (topReactionsSlice?.length) {\n        defaultSets.push({\n          id: TOP_SYMBOL_SET_ID,\n          accessHash: '',\n          title: oldLang('Reactions'),\n          reactions: topReactionsSlice,\n          count: topReactionsSlice.length,\n          isEmoji: true,\n        });\n      }\n\n      const cleanRecentReactions = (recentReactions || [])\n        .filter(\n          (reaction) => !topReactionsSlice.some((topReaction) => isSameReaction(topReaction, reaction)),\n        )\n        .slice(0, RECENT_REACTIONS_COUNT);\n      const cleanAvailableReactions = (availableReactions || [])\n        .filter(({ isInactive }) => !isInactive)\n        .map(({ reaction }) => reaction)\n        .filter((reaction) => {\n          return (\n            !topReactionsSlice.some((topReaction) => isSameReaction(topReaction, reaction))\n            && !cleanRecentReactions.some((topReaction) => isSameReaction(topReaction, reaction))\n          );\n        });\n      if (cleanAvailableReactions?.length || cleanRecentReactions?.length) {\n        const isPopular = !cleanRecentReactions?.length;\n        const allRecentReactions = cleanRecentReactions.concat(\n          cleanAvailableReactions,\n        );\n        defaultSets.push({\n          id: isPopular ? POPULAR_SYMBOL_SET_ID : RECENT_SYMBOL_SET_ID,\n          accessHash: '',\n          title: oldLang(isPopular ? 'PopularReactions' : 'RecentStickers'),\n          reactions: allRecentReactions,\n          count: allRecentReactions.length,\n          isEmoji: true,\n        });\n      }\n    } else if (isStatusPicker) {\n      const defaultStatusIconsPack = stickerSetsById[defaultStatusIconsId!];\n      if (defaultStatusIconsPack?.stickers?.length) {\n        // const stickers = uniqueByField(\n        //   defaultStatusIconsPack.stickers\n        //     .slice(0, RECENT_DEFAULT_STATUS_COUNT)\n        //     .concat(recentCustomEmojis || []),\n        //   'id',\n        // );\n        // defaultSets.push({\n        //   ...defaultStatusIconsPack,\n        //   stickers,\n        //   count: stickers.length,\n        //   id: RECENT_SYMBOL_SET_ID,\n        //   title: oldLang('RecentStickers'),\n        //   isEmoji: true,\n        // });\n      }\n      if (collectibleStatusEmojis?.length) {\n        defaultSets.push({\n          id: COLLECTIBLE_STATUS_SET_ID,\n          accessHash: '',\n          count: collectibleStatusEmojis.length,\n          stickers: collectibleStatusEmojis,\n          title: lang('CollectibleStatusesCategory'),\n          isEmoji: true,\n        });\n      }\n    } else if (withDefaultTopicIcons) {\n      const defaultTopicIconsPack = stickerSetsById[defaultTopicIconsId!];\n      if (defaultTopicIconsPack.stickers?.length) {\n        // defaultSets.push({\n        //   ...defaultTopicIconsPack,\n        //   id: RECENT_SYMBOL_SET_ID,\n        //   title: oldLang('RecentStickers'),\n        // });\n      }\n    } else if (recentCustomEmojis?.length) {\n      // defaultSets.push({\n      //   id: RECENT_SYMBOL_SET_ID,\n      //   accessHash: '0',\n      //   title: oldLang('RecentStickers'),\n      //   stickers: recentCustomEmojis,\n      //   count: recentCustomEmojis.length,\n      //   isEmoji: true,\n      // });\n    }\n\n    const userSetIds = [...(addedCustomEmojiIds || [])];\n    if (chatEmojiSetId) {\n      userSetIds.unshift(chatEmojiSetId);\n    }\n\n    const setIdsToDisplay = unique(\n      userSetIds.concat(customEmojiFeaturedIds || []),\n    );\n\n    const setsToDisplay = Object.values(\n      pickTruthy(stickerSetsById, setIdsToDisplay),\n    );\n\n    return [...defaultSets, ...setsToDisplay];\n  }, [\n    addedCustomEmojiIds,\n    isReactionPicker,\n    isStatusPicker,\n    withDefaultTopicIcons,\n    recentCustomEmojis,\n    customEmojiFeaturedIds,\n    stickerSetsById,\n    topReactions,\n    availableReactions,\n    oldLang,\n    recentReactions,\n    defaultStatusIconsId,\n    defaultTopicIconsId,\n    isSavedMessages,\n    defaultTagReactions,\n    chatEmojiSetId,\n    isWithPaidReaction,\n    collectibleStatusEmojis,\n    lang,\n  ]);\n\n  const noPopulatedSets = useMemo(\n    () => areAddedLoaded\n      && allSets.filter((set) => set.stickers?.length).length === 0,\n    [allSets, areAddedLoaded],\n  );\n\n  const canRenderContent = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n  const shouldRenderContent = areAddedLoaded && canRenderContent && !noPopulatedSets;\n\n  useHorizontalScroll(headerRef, isMobile || !shouldRenderContent);\n\n  // Initialize data on first render.\n  useEffect(() => {\n    setTimeout(() => {\n      const exec = () => {\n        setCategories(emojiData.categories);\n        setEmojis(emojiData.emojis as AllEmojis);\n      };\n\n      if (emojiData) {\n        exec();\n      } else {\n        ensureEmojiData().then(exec);\n      }\n    }, 300); // OPEN_ANIMATION_DELAY\n  }, []);\n\n  // Scroll container and header when active set changes\n\n  useEffect(() => {\n    if (!areAddedLoaded) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeSetIndex * HEADER_BUTTON_WIDTH\n      - (header.offsetWidth / 2 - HEADER_BUTTON_WIDTH / 2);\n\n    animateHorizontalScroll(header, newLeft);\n  }, [areAddedLoaded, activeSetIndex]);\n\n  // const handleEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n  //   onCustomEmojiSelect(emoji);\n  // });\n  const categoryIntersections: boolean[] = [];\n\n  const { observe: observeIntersection } = useIntersectionObserver(\n    {\n      rootRef: containerRef,\n      throttleMs: INTERSECTION_THROTTLE,\n    },\n    (entries) => {\n      entries.forEach((entry) => {\n        const { id } = entry.target as HTMLDivElement;\n        if (!id || !id.startsWith('emoji-category-')) {\n          return;\n        }\n\n        const index = Number(id.replace('emoji-category-', ''));\n        categoryIntersections[index] = entry.isIntersecting;\n      });\n\n      const minIntersectingIndex = categoryIntersections.reduce(\n        (lowestIndex, isIntersecting, index) => {\n          return isIntersecting && index < lowestIndex ? index : lowestIndex;\n        },\n        Infinity,\n      );\n\n      if (minIntersectingIndex === Infinity) {\n        return;\n      }\n      setActiveCategoryIndex(minIntersectingIndex);\n    },\n  );\n\n  useEffect(() => {\n    if (!recentEmojisRef.current) return () => {};\n    return observeIntersection(recentEmojisRef.current!);\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [recentEmojisRef.current, observeIntersection]);\n\n  function renderCover(\n    stickerSet: StickerSetOrReactionsSetOrRecent,\n    index: number,\n  ) {\n    const firstSticker = stickerSet.stickers?.[0];\n    const buttonClassName = buildClassName(\n      pickerStyles.stickerCover,\n      index === activeSetIndex && styles.activated,\n    );\n\n    const withSharedCanvas = index < STICKER_PICKER_MAX_SHARED_COVERS;\n    const isHq = selectIsAlwaysHighPriorityEmoji(\n      getGlobal(),\n      stickerSet as ApiStickerSet,\n    );\n\n    if (stickerSet.id === TOP_SYMBOL_SET_ID) {\n      return undefined;\n    }\n\n    if (\n      STICKER_SET_IDS_WITH_COVER.has(stickerSet.id)\n      || stickerSet.hasThumbnail\n      || !firstSticker\n    ) {\n      const isRecent = stickerSet.id === RECENT_SYMBOL_SET_ID\n        || stickerSet.id === POPULAR_SYMBOL_SET_ID;\n      const isFaded = FADED_BUTTON_SET_IDS.has(stickerSet.id);\n      return (\n        <Button\n          key={stickerSet.id}\n          className={buttonClassName}\n          ariaLabel={stickerSet.title}\n          round\n          faded={isFaded}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => selectStickerSet(isRecent ? 0 : index)}\n        >\n          {isRecent ? (\n            <Icon name=\"recent\" />\n          ) : (\n            <StickerSetCover\n              stickerSet={stickerSet as ApiStickerSet}\n              noPlay={!canAnimate || !canLoadAndPlay}\n              forcePlayback\n              observeIntersection={observeIntersectionForCovers}\n              sharedCanvasRef={\n                withSharedCanvas\n                  ? isHq\n                    ? sharedCanvasHqRef\n                    : sharedCanvasRef\n                  : undefined\n              }\n            />\n          )}\n        </Button>\n      );\n    }\n\n    return (\n      <StickerButton\n        key={stickerSet.id}\n        sticker={firstSticker}\n        size={STICKER_SIZE_PICKER_HEADER}\n        title={stickerSet.title}\n        className={buttonClassName}\n        noPlay={!canAnimate || !canLoadAndPlay}\n        observeIntersection={observeIntersectionForCovers}\n        noContextMenu\n        isCurrentUserPremium\n        sharedCanvasRef={\n          withSharedCanvas\n            ? isHq\n              ? sharedCanvasHqRef\n              : sharedCanvasRef\n            : undefined\n        }\n        withTranslucentThumb={isTranslucent}\n        onClick={selectStickerSet}\n        clickArg={index}\n        forcePlayback\n      />\n    );\n  }\n  const allCategories = useMemo(() => {\n    if (!categories) {\n      return MEMO_EMPTY_ARRAY;\n    }\n    const themeCategories = [...categories];\n    if (recentEmojis?.length) {\n      themeCategories.unshift({\n        id: RECENT_SYMBOL_SET_ID,\n        name: lang('RecentStickers'),\n        emojis: recentEmojis,\n      });\n    }\n\n    return themeCategories;\n  }, [categories, lang, recentEmojis]);\n\n  const fullClassName = buildClassName(\n    'StickerPicker',\n    styles.root,\n    className,\n    'esg-searcheable',\n  );\n\n  const headerClassName = buildClassName(\n    pickerStyles.header,\n    'no-scrollbar',\n    !shouldHideTopBorder && pickerStyles.headerWithBorder,\n  );\n  const listClassName = buildClassName(\n    pickerStyles.main,\n    pickerStyles.main_customEmoji,\n    IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n    pickerListClassName,\n    pickerStyles.hasHeader,\n  );\n\n  const onReset = useLastCallback(() => {\n    setEmojiQuery('');\n    setEmojisFound([]);\n    setEmojisCategoryFound([]);\n    setUnfocused();\n  });\n\n  const selectCategory = useLastCallback((index: number) => {\n    setActiveCategoryIndex(index);\n    let categoryEl;\n\n    if (index === 0) {\n      categoryEl = containerRef.current!.querySelector(\n        '#emoji-search',\n      )! as HTMLElement;\n    } else {\n      categoryEl = containerRef.current!.querySelector(\n        `#emoji-category-${index}`,\n      )! as HTMLElement;\n    }\n\n    animateScroll({\n      container: containerRef.current!,\n      element: categoryEl,\n      position: 'start',\n      margin: FOCUS_MARGIN,\n      maxDistance: SMOOTH_SCROLL_DISTANCE,\n    });\n  });\n\n  useEffect(() => {\n    if (containerRef.current) {\n      selectCategory(0);\n    }\n  }, [containerRef]);\n\n  function renderCategoryButton(category: EmojiCategoryData, index: number) {\n    const icon = ICONS_BY_CATEGORY[category.id];\n\n    return (\n      icon && (\n        <Button\n          className={`${pickerStyles.stickerCover} ${styles.symbolSetButton} ${\n            index === activeCategoryIndex ? 'activated' : ''\n          }`}\n          round\n          faded\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => selectCategory(index)}\n          ariaLabel={category.name}\n        >\n          <Icon name={icon} />\n        </Button>\n      )\n    );\n  }\n\n  const stripeLeft = activeCategoryIndex * HEADER_BUTTON_WIDTH;\n\n  function renderSmiley(smiley: string) {\n    const emoji = emojis![smiley];\n    // Recent emojis may contain emoticons that are no longer in the list\n    if (!emoji) {\n      return undefined;\n    }\n    // Some emojis have multiple skins and are represented as an Object with emojis for all skins.\n    // For now, we select only the first emoji with 'neutral' skin.\n    const displayedEmoji = 'id' in emoji ? emoji : emoji[1];\n\n    return (\n      <EmojiButton\n        key={displayedEmoji.id}\n        emoji={displayedEmoji}\n        onClick={onEmojiSelect}\n      />\n    );\n  }\n\n  if (!shouldRenderContent) {\n    return (\n      <div className={fullClassName}>\n        {noPopulatedSets ? (\n          <div className={pickerStyles.pickerDisabled}>\n            {oldLang('NoStickers')}\n          </div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    );\n  }\n\n  const marginRight = !emojiQuery && !emojisCategoryFound.length\n    ? (0)\n    : emojisFound.length\n      ? (IS_MOBILE ? emojisFound.length < 33 ? 0.5 : 0 : emojisFound.length < 49 ? 0.5 : 0)\n      : emojisCategoryFound.length\n        ? (IS_MOBILE ? emojisCategoryFound.length < 33 ? 0.5 : 0 : emojisCategoryFound.length < 49 ? 0.5 : 0) : (0.5);\n\n  return (\n    <div className={fullClassName}>\n      <div\n        ref={headerRef}\n        className={buildClassName(\n          headerClassName,\n          isInputFocused || emojiQuery ? styles.headerHide : '',\n          canAnimate ? styles.animatedSlide : '',\n        )}\n      >\n        <div className={styles.categoriesEmojis}>\n          {renderCategoryButton(allCategories[0], 0)}\n\n          <div\n            className={buildClassName(\n              styles.emojiCategoryStripe,\n              activeCategoryIndex > 0\n                && activeCategoryIndex < allCategories.length\n                && activeSetIndex < 0\n                && styles.activated,\n              canAnimate ? styles.animatedWidth : '',\n            )}\n            style={`--stripe-left: ${-stripeLeft}px;`}\n          >\n            <div\n              className={styles.emojiCategoryStripeInner}\n            >\n              {allCategories\n                .slice(1)\n                .map((e, idx) => renderCategoryButton(e, idx + 1))}\n            </div>\n          </div>\n          <div className=\"shared-canvas-container\">\n            <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n            <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n            {allSets.map(renderCover)}\n          </div>\n        </div>\n      </div>\n      <div\n        ref={containerRef}\n        onScroll={handleContentScroll}\n        className={buildClassName(\n          listClassName,\n          isInputFocused || emojiQuery ? styles.mainHide : '',\n          canAnimate ? styles.animatedSlide : '',\n        )}\n        style={`margin-right: ${marginRight}rem;`}\n      >\n        <ScrollableSearchInputWithEmojis\n          onBlur={setUnfocused}\n          onFocus={setFocused}\n          onReset={onReset}\n          emojiQuery={emojiQuery}\n          isInputFocused={isInputFocused}\n          // lang pack should have a proper key\n          // @ts-ignore\n          onChange={handleEmojiSearchQueryChange}\n          onGroupSelect={handleEmojiGroupSelect}\n          inputId=\"emoji-search\"\n        />\n\n        {!emojiQuery && !emojisCategoryFound.length ? (\n          <>\n            {/* <div className=\"symbol-set symbol-set-container custom-folder-icon-container\">\n              {Object.entries(EMOTICON_TO_FOLDER_ICON).map(([emoticon, v]) => (\n                <div\n                  className=\"EmojiButton custom-folder-icons\"\n                  onClick={() => { onIconSelect(emoticon); }}\n                >\n                  <Icon name={v} />\n                </div>\n              ))}\n            </div> */}\n            {allCategories.map((category, i) => {\n              if (category.id === RECENT_SYMBOL_SET_ID) {\n                const emojisPerRow = isMobile\n                  ? Math.floor(\n                    (windowSize.get().width\n                        - MOBILE_CONTAINER_PADDING\n                        + EMOJI_MARGIN)\n                        / (EMOJI_SIZE_PICKER + EMOJI_MARGIN),\n                  )\n                  : EMOJIS_PER_ROW_ON_DESKTOP;\n                const height = Math.ceil(\n                  (category.emojis.length\n                      + (recentCustomEmojis?.length ?? 0))\n                      / emojisPerRow,\n                )\n                  * (EMOJI_SIZE_PICKER\n                    + (isMobile\n                      ? EMOJI_VERTICAL_MARGIN_MOBILE\n                      : EMOJI_VERTICAL_MARGIN));\n\n                return (\n                  <div\n                    key={category.id}\n                    id=\"emoji-category-0\"\n                    className=\"symbol-set\"\n                    ref={recentEmojisRef}\n                  >\n                    <canvas\n                      ref={sharedSearchCanvasRef}\n                      className=\"shared-canvas\"\n                      style={undefined}\n                    />\n                    {/* <div className=\"symbol-set-header\">\n                      <p className=\"symbol-set-name\" dir=\"auto\">\n                        {lang('RecentStickers')}\n                      </p>\n                    </div> */}\n                    <TransitionHelper\n                      className=\"symbol-set-container\"\n                      isTransitioned={\n                        activeCategoryIndex >= i - 1\n                        && activeCategoryIndex <= i + 1\n                      }\n                      style={`height: ${height}px;`}\n                      dir={lang.isRtl ? 'rtl' : undefined}\n                    >\n                      {[...(recentCustomEmojis ?? []), ...category.emojis]\n                        .filter((e) => e)\n                        .map((e) => (typeof e === 'string' ? (\n                          renderSmiley(e)\n                        ) : (\n                          <StickerButton\n                            key={e.id}\n                            sticker={e}\n                            size={EMOJI_SIZE_PICKER}\n                            observeIntersection={\n                              observeIntersectionForPlayingItems\n                            }\n                            observeIntersectionForShowing={\n                              observeIntersectionForShowingItems\n                            }\n                            noPlay={!loadAndPlay}\n                            isSavedMessages={isSavedMessages}\n                            isStatusPicker={isStatusPicker}\n                            canViewSet\n                            noContextMenu\n                            isCurrentUserPremium={isCurrentUserPremium}\n                            shouldIgnorePremium={false}\n                            sharedCanvasRef={sharedSearchCanvasRef}\n                            withTranslucentThumb={isTranslucent}\n                            onClick={onCustomEmojiSelect}\n                            clickArg={e}\n                            isSelected={false}\n                            onUnfaveClick={undefined}\n                            onFaveClick={undefined}\n                            onRemoveRecentClick={undefined}\n                            onContextMenuOpen={onContextMenuOpen}\n                            onContextMenuClose={onContextMenuClose}\n                            onContextMenuClick={onContextMenuClick}\n                            forcePlayback={false}\n                            isEffectEmoji={false}\n                            noShowPremium\n                          />\n                        )))}\n                    </TransitionHelper>\n                  </div>\n                );\n                // return <div>srse</div>;\n              } else {\n                return (\n                  <EmojiCategory\n                    category={category}\n                    index={i}\n                    allEmojis={emojis!}\n                    observeIntersection={observeIntersection}\n                    shouldRender={\n                      activeCategoryIndex >= i - 1\n                      && activeCategoryIndex <= i + 1\n                    }\n                    onEmojiSelect={onEmojiSelect}\n                  />\n                );\n              }\n            })}\n            {allSets.map((stickerSet, i) => {\n              const shouldHideHeader = stickerSet.id === TOP_SYMBOL_SET_ID\n                || (stickerSet.id === RECENT_SYMBOL_SET_ID\n                  && (withDefaultTopicIcons || isStatusPicker));\n              const isChatEmojiSet = stickerSet.id === chatEmojiSetId;\n\n              if (stickerSet.id === RECENT_SYMBOL_SET_ID) return undefined;\n\n              return (\n                <StickerSet\n                  key={stickerSet.id}\n                  stickerSet={stickerSet}\n                  loadAndPlay={Boolean(canAnimate && canLoadAndPlay)}\n                  index={i}\n                  idPrefix={prefix}\n                  observeIntersection={observeIntersectionForSet}\n                  observeIntersectionForPlayingItems={\n                    observeIntersectionForPlayingItems\n                  }\n                  observeIntersectionForShowingItems={\n                    observeIntersectionForShowingItems\n                  }\n                  isNearActive={\n                    activeSetIndex >= i - 1 && activeSetIndex <= i + 1\n                  }\n                  isSavedMessages={isSavedMessages}\n                  folderIconPick\n                  isStatusPicker={isStatusPicker}\n                  isReactionPicker={isReactionPicker}\n                  shouldHideHeader={shouldHideHeader}\n                  withDefaultTopicIcon={\n                    withDefaultTopicIcons\n                    && stickerSet.id === RECENT_SYMBOL_SET_ID\n                  }\n                  withDefaultStatusIcon={\n                    isStatusPicker && stickerSet.id === RECENT_SYMBOL_SET_ID\n                  }\n                  isChatEmojiSet={isChatEmojiSet}\n                  isCurrentUserPremium={isCurrentUserPremium}\n                  selectedReactionIds={selectedReactionIds}\n                  availableReactions={availableReactions}\n                  isTranslucent={isTranslucent}\n                  onReactionSelect={onReactionSelect}\n                  onReactionContext={onReactionContext}\n                  onStickerSelect={onCustomEmojiSelect}\n                  onContextMenuOpen={onContextMenuOpen}\n                  onContextMenuClose={onContextMenuClose}\n                  onContextMenuClick={onContextMenuClick}\n                  forcePlayback\n                />\n              );\n            })}\n          </>\n        ) : emojisFound.length ? (\n          <div className=\"symbol-set symbol-set-container\">\n            <canvas\n              ref={sharedSearchCanvasRef}\n              className=\"shared-canvas\"\n              style={undefined}\n            />\n            {emojisFound.map((e) => ('native' in e ? (\n              <EmojiButton key={e.id} emoji={e} onClick={onEmojiSelect} />\n            ) : (\n              <StickerButton\n                key={e.id}\n                sticker={e}\n                size={EMOJI_SIZE_PICKER}\n                observeIntersection={observeIntersectionForPlayingItems}\n                observeIntersectionForShowing={\n                  observeIntersectionForShowingItems\n                }\n                noPlay={!loadAndPlay}\n                isSavedMessages={isSavedMessages}\n                isStatusPicker={isStatusPicker}\n                canViewSet\n                noContextMenu\n                isCurrentUserPremium={isCurrentUserPremium}\n                shouldIgnorePremium={false}\n                sharedCanvasRef={sharedSearchCanvasRef}\n                withTranslucentThumb={isTranslucent}\n                onClick={onCustomEmojiSelect}\n                clickArg={e}\n                isSelected={false}\n                onUnfaveClick={undefined}\n                onFaveClick={undefined}\n                onRemoveRecentClick={undefined}\n                onContextMenuOpen={onContextMenuOpen}\n                onContextMenuClose={onContextMenuClose}\n                onContextMenuClick={onContextMenuClick}\n                forcePlayback={false}\n                isEffectEmoji={false}\n                noShowPremium\n              />\n            )))}\n          </div>\n        ) : emojisCategoryFound.length ? (\n          <div className=\"symbol-set symbol-set-container\">\n            {emojisCategoryFound.map((e) => ('native' in e ? (\n              <EmojiButton key={e.id} emoji={e} onClick={onEmojiSelect} />\n            ) : (\n              <StickerButton\n                key={e.id}\n                sticker={e}\n                size={EMOJI_SIZE_PICKER}\n                observeIntersection={observeIntersectionForPlayingItems}\n                observeIntersectionForShowing={\n                  observeIntersectionForShowingItems\n                }\n                noPlay={!loadAndPlay}\n                isSavedMessages={isSavedMessages}\n                isStatusPicker={isStatusPicker}\n                canViewSet\n                noContextMenu\n                isCurrentUserPremium={isCurrentUserPremium}\n                shouldIgnorePremium={false}\n                sharedCanvasRef={sharedSearchCanvasRef}\n                withTranslucentThumb={isTranslucent}\n                onClick={onCustomEmojiSelect}\n                clickArg={e}\n                isSelected={false}\n                onUnfaveClick={undefined}\n                onFaveClick={undefined}\n                onRemoveRecentClick={undefined}\n                onContextMenuOpen={onContextMenuOpen}\n                onContextMenuClose={onContextMenuClose}\n                onContextMenuClick={onContextMenuClick}\n                forcePlayback={false}\n                isEffectEmoji={false}\n                noShowPremium\n              />\n            )))}\n          </div>\n        ) : (\n          // @ts-ignore\n          <p>{lang('No emoji found')}</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(\n  withGlobal<OwnProps>(\n    (global, { chatId, isStatusPicker, isReactionPicker }): StateProps => {\n      const {\n        stickers: { setsById: stickerSetsById },\n        emojiKeywords,\n        customEmojis: {\n          byId: customEmojisById,\n          featuredIds: customEmojiFeaturedIds,\n          statusRecent: { emojis: recentStatusEmojis },\n        },\n        recentCustomEmojis: recentCustomEmojiIds,\n        reactions: {\n          availableReactions,\n          recentReactions,\n          topReactions,\n          defaultTags,\n        },\n        recentEmojis,\n        emojiGroups,\n      } = global;\n\n      const isSavedMessages = Boolean(\n        chatId && selectIsChatWithSelf(global, chatId),\n      );\n      const chatFullInfo = chatId\n        ? selectChatFullInfo(global, chatId)\n        : undefined;\n      const collectibleStatuses = global.collectibleEmojiStatuses?.statuses;\n\n      return {\n        emojiKeywords,\n        customEmojisById,\n        recentCustomEmojiIds: !isStatusPicker\n          ? recentCustomEmojiIds\n          : undefined,\n        recentStatusEmojis: isStatusPicker ? recentStatusEmojis : undefined,\n        collectibleStatuses: isStatusPicker ? collectibleStatuses : undefined,\n        stickerSetsById,\n        addedCustomEmojiIds: global.customEmojis.added.setIds,\n        canAnimate: selectCanPlayAnimatedEmojis(global),\n        isSavedMessages,\n        isCurrentUserPremium: selectIsCurrentUserPremium(global),\n        customEmojiFeaturedIds,\n        defaultTopicIconsId: global.defaultTopicIconsId,\n        defaultStatusIconsId: global.defaultStatusIconsId,\n        topReactions: isReactionPicker ? topReactions : undefined,\n        recentReactions: isReactionPicker ? recentReactions : undefined,\n        chatEmojiSetId: chatFullInfo?.emojiSet?.id,\n        isWithPaidReaction:\n          isReactionPicker && chatFullInfo?.isPaidReactionAvailable,\n        availableReactions: isReactionPicker ? availableReactions : undefined,\n        defaultTagReactions: isReactionPicker ? defaultTags : undefined,\n        recentEmojis,\n        emojiGroups,\n      };\n    },\n  )(EsgEmojiPicker),\n);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { ApiVideo } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getVideoMediaHash, getVideoPreviewMediaHash } from '../../global/helpers';\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useBuffering from '../../hooks/useBuffering';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\nimport Icon from './icons/Icon';\n\nimport './GifButton.scss';\n\ntype OwnProps = {\n  gif: ApiVideo;\n  observeIntersection: ObserveFn;\n  isDisabled?: boolean;\n  className?: string;\n  onClick?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onUnsaveClick?: (gif: ApiVideo) => void;\n  isSavedMessages?: boolean;\n};\n\nconst GifButton: FC<OwnProps> = ({\n  gif,\n  isDisabled,\n  className,\n  observeIntersection,\n  onClick,\n  onUnsaveClick,\n  isSavedMessages,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const loadAndPlay = isIntersecting && !isDisabled;\n  const previewHash = !gif.hasVideoPreview && gif.thumbnail && getVideoMediaHash(gif, 'pictogram');\n  const previewBlobUrl = useMedia(previewHash, !loadAndPlay);\n\n  const [withThumb] = useState(gif.thumbnail?.dataUri && !previewBlobUrl);\n  const thumbRef = useCanvasBlur(gif.thumbnail?.dataUri, !withThumb);\n\n  const videoHash = getVideoPreviewMediaHash(gif) || getVideoMediaHash(gif, 'full');\n  const videoData = useMedia(videoHash, !loadAndPlay);\n\n  const shouldRenderVideo = Boolean(loadAndPlay && videoData);\n  const { isBuffered, bufferingHandlers } = useBuffering(true);\n  const shouldRenderSpinner = loadAndPlay && !isBuffered;\n  const isVideoReady = loadAndPlay && isBuffered;\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.gif-context-menu .bubble'));\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen || !onClick) return;\n    onClick({\n      ...gif,\n      blobUrl: videoData,\n    });\n  });\n\n  const handleUnsaveClick = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n    onUnsaveClick!(gif);\n  });\n\n  const handleContextDelete = useLastCallback(() => {\n    onUnsaveClick?.(gif);\n  });\n\n  const handleSendQuiet = useLastCallback(() => {\n    onClick!({\n      ...gif,\n      blobUrl: videoData,\n    }, true);\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    onClick!({\n      ...gif,\n      blobUrl: videoData,\n    }, undefined, true);\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  useEffect(() => {\n    if (isDisabled) handleContextMenuClose();\n  }, [handleContextMenuClose, isDisabled]);\n\n  const fullClassName = buildClassName(\n    'GifButton',\n    gif.width && gif.height && gif.width < gif.height ? 'vertical' : 'horizontal',\n    onClick && 'interactive',\n    className,\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {!IS_TOUCH_ENV && onUnsaveClick && (\n        <Button\n          className=\"gif-unsave-button\"\n          color=\"dark\"\n          pill\n          noFastClick\n          onClick={handleUnsaveClick}\n        >\n          <Icon name=\"close\" className=\"gif-unsave-button-icon\" />\n        </Button>\n      )}\n      {withThumb && (\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n        />\n      )}\n      {previewBlobUrl && !isVideoReady && (\n        <img\n          src={previewBlobUrl}\n          alt=\"\"\n          className=\"preview\"\n          draggable={false}\n        />\n      )}\n      {shouldRenderVideo && (\n        <OptimizedVideo\n          canPlay\n          src={videoData}\n          autoPlay\n          loop\n          muted\n          disablePictureInPicture\n          playsInline\n          preload=\"none\"\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          {...bufferingHandlers}\n        />\n      )}\n      {shouldRenderSpinner && (\n        <Spinner color={previewBlobUrl || withThumb ? 'white' : 'black'} />\n      )}\n      {onClick && contextMenuAnchor !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          className=\"gif-context-menu\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {!isSavedMessages && <MenuItem onClick={handleSendQuiet} icon=\"mute\">{lang('SendWithoutSound')}</MenuItem>}\n          <MenuItem onClick={handleSendScheduled} icon=\"calendar\">\n            {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n          </MenuItem>\n          {onUnsaveClick && (\n            <MenuItem destructive icon=\"delete\" onClick={handleContextDelete}>{lang('Delete')}</MenuItem>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(GifButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiVideo } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { selectCurrentMessageList, selectIsChatWithSelf } from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport GifButton from '../../common/GifButton';\n// eslint-disable-next-line max-len\nimport ScrollableSearchInputWithEmojis, { manualGroupNames, manualGroups } from '../../common/ScrollableSearchInputWithEmojis';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nimport './GifPicker.scss';\n\ntype OwnProps = {\n  className: string;\n  loadAndPlay: boolean;\n  canSendGifs?: boolean;\n  onGifSelect?: (\n    gif: ApiVideo,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n  ) => void;\n};\n\ntype StateProps = {\n  savedGifs?: ApiVideo[];\n  isSavedMessages?: boolean;\n  gifSearch: GlobalState['gifSearch'];\n};\n\nconst INTERSECTION_DEBOUNCE = 300;\n\nconst PRELOAD_BACKWARDS = 96; // GIF Search bot results are multiplied by 24\n\nconst GifPicker: FC<OwnProps & StateProps> = ({\n  className,\n  loadAndPlay,\n  canSendGifs,\n  savedGifs,\n  isSavedMessages,\n  onGifSelect,\n  gifSearch,\n}) => {\n  const {\n    loadSavedGifs, saveGif, setGifSearchQuery, searchMoreGifs,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [emojiQuery, setEmojiQuery] = useState<string>('');\n\n  const [isInputFocused, setFocused, setUnfocused] = useFlag();\n  const onReset = useLastCallback(() => {\n    setEmojiQuery('');\n  });\n\n  const handleEmojiSearchQueryChange = useLastCallback((e: string) => {\n    setGifSearchQuery({ query: e, tabId: -1 });\n    setEmojiQuery(e);\n  });\n\n  const { observe: observeIntersection } = useIntersectionObserver({\n    rootRef: containerRef,\n    debounceMs: INTERSECTION_DEBOUNCE,\n  });\n\n  useEffect(() => {\n    if (loadAndPlay) {\n      loadSavedGifs();\n    }\n  }, [loadAndPlay, loadSavedGifs]);\n\n  const handleUnsaveClick = useLastCallback((gif: ApiVideo) => {\n    saveGif({ gif, shouldUnsave: true });\n  });\n\n  const handleEmojiGroupSelect = useLastCallback((category: string) => {\n    if (manualGroupNames.includes(category)) {\n      category = manualGroups.find((g) => g.name === category)?.keywords[0] ?? '';\n    }\n    setGifSearchQuery({ query: category, tabId: -1 });\n  });\n\n  const handleSearchMoreGifs = useLastCallback(() => {\n    searchMoreGifs({ tabId: -1 });\n  });\n\n  const lang = useLang();\n\n  const canRenderContents = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n\n  const results = gifSearch.query ? gifSearch.results : savedGifs;\n  function renderContent() {\n    if (!results) {\n      return (\n        <Loading />\n      );\n    }\n\n    if (!results.length) {\n      return (\n        <p className=\"helper-text\" dir=\"auto\">{lang('NoGIFsFound')}</p>\n      );\n    }\n\n    return results.map((gif) => (\n      <GifButton\n        key={gif.id}\n        gif={gif}\n        observeIntersection={observeIntersection}\n        isDisabled={!loadAndPlay}\n        onClick={canSendGifs ? onGifSelect : undefined}\n        onUnsaveClick={handleUnsaveClick}\n        isSavedMessages={isSavedMessages}\n      />\n    ));\n  }\n\n  return (\n    <div className=\"GifPickerWithSearch\">\n      <ScrollableSearchInputWithEmojis\n        onBlur={setUnfocused}\n        onFocus={setFocused}\n        onReset={onReset}\n        emojiQuery={emojiQuery}\n        isInputFocused={isInputFocused}\n        // lang pack should have a proper key\n        // @ts-ignore\n        placeholder={lang('Search Gifs')}\n        onChange={handleEmojiSearchQueryChange}\n        onGroupSelect={handleEmojiGroupSelect}\n        inputId=\"emoji-search\"\n      />\n      <InfiniteScroll\n        ref={containerRef}\n        className={buildClassName(\n          'GifPicker',\n          className,\n          IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n        )}\n        items={results}\n        itemSelector=\".GifButton\"\n        preloadBackwards={PRELOAD_BACKWARDS}\n        noFastList\n        onLoadMore={handleSearchMoreGifs}\n      >\n        {!canSendGifs ? (\n          <div className=\"picker-disabled\">\n            Sending GIFs is not allowed in this chat.\n          </div>\n        ) : canRenderContents ? (\n          renderContent()\n        ) : (\n          <Loading />\n        )}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(\n  withGlobal<OwnProps>((global): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n    return {\n      savedGifs: global.gifs.saved.gifs,\n      isSavedMessages,\n      gifSearch: global.gifSearch,\n    };\n  })(GifPicker),\n);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  activeTab: SymbolMenuTabs;\n  onSwitchTab: (tab: SymbolMenuTabs) => void;\n  onRemoveSymbol: () => void;\n  onSearchOpen: (type: 'stickers' | 'gifs') => void;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  canSearch?: boolean;\n};\n\nexport enum SymbolMenuTabs {\n  'CustomEmoji',\n  'Stickers',\n  'GIFs',\n}\n\nexport const SYMBOL_MENU_TAB_TITLES: Record<SymbolMenuTabs, string> = {\n  [SymbolMenuTabs.CustomEmoji]: 'StickersList.EmojiItem',\n  [SymbolMenuTabs.Stickers]: 'AccDescrStickers',\n  [SymbolMenuTabs.GIFs]: 'GifsTab',\n};\n\nconst SYMBOL_MENU_TAB_ICONS = {\n  [SymbolMenuTabs.CustomEmoji]: 'icon-smile',\n  [SymbolMenuTabs.Stickers]: 'icon-stickers',\n  [SymbolMenuTabs.GIFs]: 'icon-gifs',\n};\n\nconst SymbolMenuFooter: FC<OwnProps> = ({\n  activeTab, onSwitchTab, onRemoveSymbol, onSearchOpen, isAttachmentModal,\n  canSendPlainText, canSearch,\n}) => {\n  const lang = useOldLang();\n\n  function renderTabButton(tab: SymbolMenuTabs) {\n    return (\n      <Button\n        className={`symbol-tab-button ${activeTab === tab ? 'activated' : ''}`}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => onSwitchTab(tab)}\n        ariaLabel={lang(SYMBOL_MENU_TAB_TITLES[tab])}\n        round\n        faded\n        color=\"translucent\"\n      >\n        <i className={buildClassName('icon', SYMBOL_MENU_TAB_ICONS[tab])} />\n      </Button>\n    );\n  }\n\n  const handleSearchOpen = useLastCallback(() => {\n    onSearchOpen(activeTab === SymbolMenuTabs.Stickers ? 'stickers' : 'gifs');\n  });\n\n  function stopPropagation(event: any) {\n    event.stopPropagation();\n  }\n\n  return (\n    <div className=\"SymbolMenu-footer\" onClick={stopPropagation} dir={lang.isRtl ? 'rtl' : undefined}>\n      {activeTab !== SymbolMenuTabs.CustomEmoji && canSearch && (\n        <Button\n          className=\"symbol-search-button\"\n          ariaLabel={activeTab === SymbolMenuTabs.Stickers ? 'Search Stickers' : 'Search GIFs'}\n          round\n          faded\n          color=\"translucent\"\n          onClick={handleSearchOpen}\n        >\n          <Icon name=\"search\" />\n        </Button>\n      )}\n\n      {canSendPlainText && renderTabButton(SymbolMenuTabs.CustomEmoji)}\n      {!isAttachmentModal && renderTabButton(SymbolMenuTabs.Stickers)}\n      {!isAttachmentModal && renderTabButton(SymbolMenuTabs.GIFs)}\n\n      {(activeTab === SymbolMenuTabs.CustomEmoji) && (\n        <Button\n          className=\"symbol-delete-button\"\n          onClick={onRemoveSymbol}\n          ariaLabel=\"Remove Symbol\"\n          round\n          faded\n          color=\"translucent\"\n        >\n          <Icon name=\"delete-left\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SymbolMenuFooter);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { GlobalActions } from '../../../global';\nimport type { ThreadId } from '../../../types';\nimport type { MenuPositionOptions } from '../../ui/Menu';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectIsContextMenuTranslucent, selectTabState } from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport CustomEmojiPicker from '../../common/EsgEmojiPicker';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport Portal from '../../ui/Portal';\nimport Transition from '../../ui/Transition';\nimport GifPicker from './GifPicker';\nimport StickerPicker from './StickerPicker';\nimport SymbolMenuFooter, { SYMBOL_MENU_TAB_TITLES, SymbolMenuTabs } from './SymbolMenuFooter';\n\nimport './SymbolMenu.scss';\n\nconst ANIMATION_DURATION = 350;\nconst STICKERS_TAB_INDEX = 2;\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isOpen: boolean;\n  canSendStickers?: boolean;\n  canSendGifs?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  onLoad: () => void;\n  onClose: () => void;\n  onEmojiSelect: (emoji: string) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: () => void;\n  onSearchOpen: (type: 'stickers' | 'gifs') => void;\n  addRecentEmoji: GlobalActions['addRecentEmoji'];\n  addRecentCustomEmoji: GlobalActions['addRecentCustomEmoji'];\n  className?: string;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n}\n& MenuPositionOptions;\n\ntype StateProps = {\n  isLeftColumnShown: boolean;\n  isBackgroundTranslucent?: boolean;\n};\n\nlet isActivated = false;\n\nconst SymbolMenu: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  canSendStickers,\n  canSendGifs,\n  isMessageComposer,\n  isLeftColumnShown,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  className,\n  isBackgroundTranslucent,\n  onLoad,\n  onClose,\n  onEmojiSelect,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onSearchOpen,\n  addRecentEmoji,\n  addRecentCustomEmoji,\n  ...menuPositionOptions\n}) => {\n  const [activeTab, setActiveTab] = useState<number>(0);\n  const [recentEmojis, setRecentEmojis] = useState<string[]>([]);\n  const [recentCustomEmojis, setRecentCustomEmojis] = useState<string[]>([]);\n  const { isMobile } = useAppLayout();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose, undefined, isMobile);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, onClose, false, false);\n\n  const lang = useOldLang();\n\n  if (!isActivated && isOpen) {\n    isActivated = true;\n  }\n\n  useEffect(() => {\n    onLoad();\n  }, [onLoad]);\n\n  // If we can't send plain text, we should always show the stickers tab\n  useEffect(() => {\n    if (canSendPlainText) return;\n    setActiveTab(STICKERS_TAB_INDEX);\n  }, [canSendPlainText]);\n\n  useLayoutEffect(() => {\n    if (!isMobile || !isOpen || isAttachmentModal) {\n      return undefined;\n    }\n\n    document.body.classList.add('enable-symbol-menu-transforms');\n    document.body.classList.add('is-symbol-menu-open');\n\n    return () => {\n      document.body.classList.remove('is-symbol-menu-open');\n\n      setTimeout(() => {\n        requestMutation(() => {\n          document.body.classList.remove('enable-symbol-menu-transforms');\n        });\n      }, ANIMATION_DURATION);\n    };\n  }, [isAttachmentModal, isMobile, isOpen]);\n\n  const recentEmojisRef = useRef(recentEmojis);\n  recentEmojisRef.current = recentEmojis;\n  useEffect(() => {\n    if (!recentEmojisRef.current.length || isOpen) {\n      return;\n    }\n\n    recentEmojisRef.current.forEach((name) => {\n      addRecentEmoji({ emoji: name });\n    });\n\n    setRecentEmojis([]);\n  }, [isOpen, addRecentEmoji]);\n\n  const handleEmojiSelect = useLastCallback((emoji: string, name: string) => {\n    setRecentEmojis((emojis) => [...emojis, name]);\n\n    onEmojiSelect(emoji);\n  });\n\n  const recentCustomEmojisRef = useRef(recentCustomEmojis);\n  recentCustomEmojisRef.current = recentCustomEmojis;\n  useEffect(() => {\n    if (!recentCustomEmojisRef.current.length || isOpen) {\n      return;\n    }\n\n    recentCustomEmojisRef.current.forEach((documentId) => {\n      addRecentCustomEmoji({\n        documentId,\n      });\n    });\n\n    setRecentEmojis([]);\n  }, [isOpen, addRecentCustomEmoji]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    setRecentCustomEmojis((ids) => [...ids, emoji.id]);\n\n    onCustomEmojiSelect(emoji);\n  });\n\n  const handleSearch = useLastCallback((type: 'stickers' | 'gifs') => {\n    onClose();\n    onSearchOpen(type);\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean, canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    onStickerSelect?.(sticker, isSilent, shouldSchedule, true, canUpdateStickerSetsOrder);\n  });\n\n  function renderContent(isActive: boolean, isFrom: boolean) {\n    switch (activeTab) {\n      case SymbolMenuTabs.CustomEmoji:\n        return (\n          <CustomEmojiPicker\n            className=\"picker-tab\"\n            isHidden={!isOpen || !isActive}\n            idPrefix={idPrefix}\n            loadAndPlay={isOpen && (isActive || isFrom)}\n            chatId={chatId}\n            isTranslucent={!isMobile && isBackgroundTranslucent}\n            onCustomEmojiSelect={handleCustomEmojiSelect}\n            onEmojiSelect={handleEmojiSelect}\n          />\n        );\n      case SymbolMenuTabs.Stickers:\n        return (\n          <StickerPicker\n            className=\"picker-tab\"\n            isHidden={!isOpen || !isActive}\n            loadAndPlay={canSendStickers ? isOpen && (isActive || isFrom) : false}\n            idPrefix={idPrefix}\n            canSendStickers={canSendStickers}\n            noContextMenus={!isMessageComposer}\n            chatId={chatId}\n            threadId={threadId}\n            isTranslucent={!isMobile && isBackgroundTranslucent}\n            onStickerSelect={handleStickerSelect}\n          />\n        );\n      case SymbolMenuTabs.GIFs:\n        return (\n          <GifPicker\n            className=\"picker-tab\"\n            loadAndPlay={canSendGifs ? isOpen && (isActive || isFrom) : false}\n            canSendGifs={canSendGifs}\n            onGifSelect={onGifSelect}\n          />\n        );\n    }\n    return undefined;\n  }\n\n  function stopPropagation(event: any) {\n    event.stopPropagation();\n  }\n\n  const content = (\n    <>\n      <div className=\"SymbolMenu-main\" onClick={stopPropagation}>\n        {isActivated && (\n          <Transition\n            name=\"slide\"\n            activeKey={activeTab}\n            renderCount={Object.values(SYMBOL_MENU_TAB_TITLES).length}\n          >\n            {renderContent}\n          </Transition>\n        )}\n      </div>\n      {isMobile && (\n        <Button\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={lang('Close')}\n          className=\"symbol-close-button\"\n          size=\"tiny\"\n          onClick={onClose}\n        >\n          <Icon name=\"close\" />\n        </Button>\n      )}\n      <SymbolMenuFooter\n        activeTab={activeTab}\n        onSwitchTab={setActiveTab}\n        onRemoveSymbol={onRemoveSymbol}\n        canSearch={isMessageComposer}\n        onSearchOpen={handleSearch}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n      />\n    </>\n  );\n\n  if (isMobile) {\n    if (!shouldRender) {\n      return undefined;\n    }\n\n    const mobileClassName = buildClassName(\n      'SymbolMenu mobile-menu',\n      transitionClassNames,\n      isLeftColumnShown && 'left-column-open',\n      isAttachmentModal && 'in-attachment-modal',\n      isMessageComposer && 'in-middle-column',\n    );\n\n    if (isAttachmentModal) {\n      return (\n        <div className={mobileClassName}>\n          {content}\n        </div>\n      );\n    }\n\n    return (\n      <Portal>\n        <div className={mobileClassName}>\n          {content}\n        </div>\n      </Portal>\n    );\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      onClose={onClose}\n      withPortal={isAttachmentModal}\n      className={buildClassName('SymbolMenu', className)}\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...(isAttachmentModal ? menuPositionOptions : {\n        positionX: 'left',\n        positionY: 'bottom',\n      })}\n    >\n      {content}\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      isLeftColumnShown: selectTabState(global).isLeftColumnShown,\n      isBackgroundTranslucent: selectIsContextMenuTranslucent(global),\n    };\n  },\n)(SymbolMenu));\n","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Avatar from '../../common/Avatar';\nimport ListItem from '../../ui/ListItem';\n\nimport './ChatCommand.scss';\n\ntype OwnProps<T = undefined> = {\n  command: string;\n  description: string;\n  peer?: ApiUser;\n  withAvatar?: boolean;\n  focus?: boolean;\n  clickArg: T;\n  onClick: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst ChatCommand = <T,>({\n  withAvatar,\n  focus,\n  command,\n  description,\n  peer,\n  clickArg,\n  onClick,\n}: OwnProps<T>) => {\n  const handleClick = useLastCallback(() => {\n    onClick(clickArg);\n  });\n\n  return (\n    <ListItem\n      key={command}\n      className={buildClassName('BotCommand chat-item-clickable scroll-item', withAvatar && 'with-avatar')}\n      multiline\n      onClick={handleClick}\n      focus={focus}\n    >\n      {withAvatar && (\n        <Avatar size=\"small\" peer={peer} />\n      )}\n      <div className=\"content-inner\">\n        <span className=\"title\">/{command}</span>\n        <span className=\"subtitle\">{renderText(description)}</span>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(ChatCommand);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type {\n  ApiBotCommand, ApiMessage, ApiQuickReply, ApiUser,\n} from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport freezeWhenClosed from '../../../util/hoc/freezeWhenClosed';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport ChatCommand from './ChatCommand';\n\nimport styles from './ChatCommandTooltip.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  withUsername?: boolean;\n  botCommands?: ApiBotCommand[];\n  quickReplies?: ApiQuickReply[];\n  quickReplyMessages?: Record<number, ApiMessage>;\n  self: ApiUser;\n  getHtml: Signal<string>;\n  onClick: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n};\n\ntype QuickReplyWithDescription = {\n  id: number;\n  command: string;\n  description: string;\n};\n\nconst ChatCommandTooltip: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  withUsername,\n  botCommands,\n  quickReplies,\n  quickReplyMessages,\n  self,\n  getHtml,\n  onClick,\n  onClose,\n}) => {\n  const { sendBotCommand, sendQuickReply } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n\n  const handleSendCommand = useLastCallback(({ botId, command }: ApiBotCommand) => {\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const bot = usersById[botId];\n\n    sendBotCommand({\n      command: `/${command}${withUsername && bot ? `@${bot.usernames![0].username}` : ''}`,\n    });\n    onClick();\n  });\n\n  const handleSendQuickReply = useLastCallback((id: number) => {\n    sendQuickReply({ chatId, quickReplyId: id });\n    onClick();\n  });\n\n  const quickRepliesWithDescription = useMemo(() => {\n    if (!quickReplies?.length || !quickReplyMessages) return undefined;\n    return quickReplies.map((reply) => {\n      const message = quickReplyMessages[reply.topMessageId];\n      return {\n        id: reply.id,\n        command: reply.shortcut,\n        description: message?.content.text?.text || '',\n      } satisfies QuickReplyWithDescription;\n    });\n  }, [quickReplies, quickReplyMessages]);\n\n  const handleKeyboardSelect = useLastCallback((item: ApiBotCommand | QuickReplyWithDescription) => {\n    if (!item.command.startsWith(getHtml().slice(1))) {\n      return false;\n    }\n\n    if ('id' in item) {\n      handleSendQuickReply(item.id);\n    } else {\n      handleSendCommand(item);\n    }\n\n    return true;\n  });\n\n  const keyboardNavigationItems = useMemo(() => {\n    if (!botCommands && !quickRepliesWithDescription) return undefined;\n    return ([] as (ApiBotCommand | QuickReplyWithDescription)[])\n      .concat(quickRepliesWithDescription || [], botCommands || []);\n  }, [botCommands, quickRepliesWithDescription]);\n\n  const selectedCommandIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: keyboardNavigationItems,\n    onSelect: handleKeyboardSelect,\n    onClose,\n  });\n\n  const isEmpty = (botCommands && !botCommands.length) || (quickReplies && !quickReplies.length);\n\n  useEffect(() => {\n    if (isEmpty) {\n      onClose();\n    }\n  }, [isEmpty, onClose]);\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedCommandIndex, containerRef);\n  }, [selectedCommandIndex]);\n\n  if (!shouldRender || isEmpty) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    styles.root,\n    'composer-tooltip custom-scroll',\n    transitionClassNames,\n  );\n\n  return (\n    <div className={className} ref={containerRef}>\n      {quickRepliesWithDescription?.map((reply, index) => (\n        <ChatCommand\n          key={`quickReply_${reply.id}`}\n          command={reply.command}\n          description={reply.description}\n          peer={self}\n          withAvatar\n          clickArg={reply.id}\n          onClick={handleSendQuickReply}\n          focus={selectedCommandIndex === index}\n        />\n      ))}\n      {botCommands?.map((command, index) => (\n        <ChatCommand\n          key={`${command.botId}_${command.command}`}\n          command={command.command}\n          description={command.description}\n          // No need for expensive global updates on users and chats, so we avoid them\n          peer={getGlobal().users.byId[command.botId]}\n          withAvatar\n          clickArg={command}\n          onClick={handleSendCommand}\n          focus={selectedCommandIndex + (quickRepliesWithDescription?.length || 0) === index}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(freezeWhenClosed(ChatCommandTooltip));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"iaTB59vy\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiBotCommand } from '../../../api/types';\n\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\n\nimport Menu from '../../ui/Menu';\nimport ChatCommand from './ChatCommand';\n\nimport './BotCommandMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  botCommands: ApiBotCommand[];\n  onClose: NoneToVoidFunction;\n};\n\nconst BotCommandMenu: FC<OwnProps> = ({\n  isOpen, botCommands, onClose,\n}) => {\n  const { sendBotCommand } = getActions();\n  const { isMobile } = useAppLayout();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose, undefined, isMobile);\n\n  const handleClick = useLastCallback((command: string) => {\n    sendBotCommand({\n      command: `/${command}`,\n    });\n    onClose();\n  });\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      positionX=\"left\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotCommandMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n    >\n      {botCommands.map((botCommand) => (\n        <ChatCommand\n          key={botCommand.command}\n          command={botCommand.command}\n          description={botCommand.description}\n          clickArg={botCommand.command}\n          onClick={handleClick}\n        />\n      ))}\n    </Menu>\n  );\n};\n\nexport default memo(BotCommandMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ThreadId } from '../../../types';\n\nimport { STICKER_SIZE_PICKER } from '../../../config';\nimport { selectIsChatWithSelf, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useSendMessageAction from '../../../hooks/useSendMessageAction';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport StickerButton from '../../common/StickerButton';\nimport Loading from '../../ui/Loading';\n\nimport './StickerTooltip.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isOpen: boolean;\n  onStickerSelect: (sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  stickers?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst StickerTooltip: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  onStickerSelect,\n  onClose,\n  stickers,\n  isSavedMessages,\n  isCurrentUserPremium,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n  const prevStickers = usePreviousDeprecated(stickers, true);\n  const displayedStickers = stickers || prevStickers;\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n\n  const handleMouseMove = () => {\n    sendMessageAction({ type: 'chooseSticker' });\n  };\n\n  const className = buildClassName(\n    'StickerTooltip composer-tooltip custom-scroll',\n    transitionClassNames,\n    !(displayedStickers?.length) && 'hidden',\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      onMouseMove={handleMouseMove}\n    >\n      {shouldRender && displayedStickers ? (\n        displayedStickers.map((sticker) => (\n          <StickerButton\n            key={sticker.id}\n            sticker={sticker}\n            size={STICKER_SIZE_PICKER}\n            observeIntersection={observeIntersection}\n            onClick={isOpen ? onStickerSelect : undefined}\n            clickArg={sticker}\n            isSavedMessages={isSavedMessages}\n            canViewSet\n            isCurrentUserPremium={isCurrentUserPremium}\n          />\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { stickers } = global.stickers.forEmoji;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n    return { stickers, isSavedMessages, isCurrentUserPremium };\n  },\n)(StickerTooltip));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_8sFuAomM\",\"emojiButton\":\"crWzZ2jr\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { GlobalActions } from '../../../global';\n\nimport { COMPOSER_EMOJI_SIZE_PICKER } from '../../../config';\nimport { selectIsChatWithSelf, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport StickerButton from '../../common/StickerButton';\nimport Loading from '../../ui/Loading';\n\nimport styles from './CustomEmojiTooltip.module.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  isOpen: boolean;\n  addRecentCustomEmoji: GlobalActions['addRecentCustomEmoji'];\n  onCustomEmojiSelect: (customEmoji: ApiSticker) => void;\n  onClose: NoneToVoidFunction;\n  noPlay?: boolean;\n};\n\ntype StateProps = {\n  customEmoji?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst CustomEmojiTooltip: FC<OwnProps & StateProps> = ({\n  isOpen,\n  addRecentCustomEmoji,\n  onCustomEmojiSelect,\n  onClose,\n  customEmoji,\n  isSavedMessages,\n  isCurrentUserPremium,\n  noPlay,\n}) => {\n  const { clearCustomEmojiForEmoji } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n  const prevStickers = usePreviousDeprecated(customEmoji, true);\n  const displayedStickers = customEmoji || prevStickers;\n\n  useHorizontalScroll(containerRef);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n\n  const handleCustomEmojiSelect = useLastCallback((ce: ApiSticker) => {\n    if (!isOpen) return;\n    onCustomEmojiSelect(ce);\n    addRecentCustomEmoji({\n      documentId: ce.id,\n    });\n    clearCustomEmojiForEmoji();\n  });\n\n  const className = buildClassName(\n    styles.root,\n    'composer-tooltip custom-scroll-x',\n    transitionClassNames,\n    !displayedStickers?.length && styles.hidden,\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n    >\n      {shouldRender && displayedStickers ? (\n        displayedStickers.map((sticker) => (\n          <StickerButton\n            key={sticker.id}\n            sticker={sticker}\n            className={styles.emojiButton}\n            size={COMPOSER_EMOJI_SIZE_PICKER}\n            observeIntersection={observeIntersection}\n            onClick={handleCustomEmojiSelect}\n            clickArg={sticker}\n            isSavedMessages={isSavedMessages}\n            canViewSet\n            isCurrentUserPremium={isCurrentUserPremium}\n            noPlay={noPlay}\n          />\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { stickers: customEmoji } = global.customEmojis.forEmoji;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return { customEmoji, isSavedMessages, isCurrentUserPremium };\n  },\n)(CustomEmojiTooltip));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ReactionSelector from '../message/reactions/ReactionSelector';\n\nimport './CustomSendMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  isOpenToBottom?: boolean;\n  isSavedMessages?: boolean;\n  canSchedule?: boolean;\n  canScheduleUntilOnline?: boolean;\n  onSendSilent?: NoneToVoidFunction;\n  onSendSchedule?: NoneToVoidFunction;\n  onSendWhenOnline?: NoneToVoidFunction;\n  onRemoveEffect?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  chatId?: string;\n  withEffects?: boolean;\n  hasCurrentEffect?: boolean;\n  effectReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  onToggleReaction?: (reaction: ApiReaction) => void;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  isInSavedMessages?: boolean;\n  isInStoryViewer?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst ANIMATION_DURATION = 200;\n\nconst CustomSendMenu: FC<OwnProps> = ({\n  isOpen,\n  isOpenToBottom = false,\n  isSavedMessages,\n  canSchedule,\n  canScheduleUntilOnline,\n  onSendSilent,\n  onSendSchedule,\n  onSendWhenOnline,\n  onRemoveEffect,\n  onClose,\n  onCloseAnimationEnd,\n  chatId,\n  withEffects,\n  hasCurrentEffect,\n  effectReactions,\n  allAvailableReactions,\n  onToggleReaction,\n  canBuyPremium,\n  isCurrentUserPremium,\n  isInSavedMessages,\n  isInStoryViewer,\n  canPlayAnimatedEmojis,\n}) => {\n  const {\n    openEffectPicker,\n  } = getActions();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const [displayScheduleUntilOnline, setDisplayScheduleUntilOnline] = useState(false);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const [areItemsHidden, hideItems, showItems] = useFlag();\n\n  useEffectWithPrevDeps(([prevIsOpen]) => {\n    // Avoid context menu item shuffling when opened\n    if (isOpen && !prevIsOpen) {\n      showItems();\n      setDisplayScheduleUntilOnline(Boolean(canScheduleUntilOnline));\n    }\n  }, [isOpen, canScheduleUntilOnline]);\n\n  const [isReady, markIsReady, unmarkIsReady] = useFlag();\n\n  const handleOpenMessageEffectsPicker = useLastCallback((position: IAnchorPosition) => {\n    hideItems();\n    if (chatId) openEffectPicker({ chatId, position });\n  });\n\n  useEffect(() => {\n    if (!isOpen) {\n      unmarkIsReady();\n      return;\n    }\n\n    setTimeout(() => {\n      markIsReady();\n    }, ANIMATION_DURATION);\n  }, [isOpen, markIsReady, unmarkIsReady]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose\n      positionX=\"right\"\n      positionY={isOpenToBottom ? 'top' : 'bottom'}\n      className={buildClassName(\n        'CustomSendMenu', 'fluid', 'with-menu-transitions', withEffects && 'with-effects',\n      )}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n    >\n\n      {withEffects && !isInStoryViewer && (\n        <ReactionSelector\n          allAvailableReactions={allAvailableReactions}\n          effectReactions={effectReactions}\n          currentReactions={undefined}\n          onToggleReaction={onToggleReaction!}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isInSavedMessages}\n          isForEffects\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleOpenMessageEffectsPicker}\n          onClose={onClose}\n          className={buildClassName(areItemsHidden && 'ReactionSelector-hidden')}\n        />\n      )}\n\n      <div\n        className={buildClassName(\n          'CustomSendMenu_items',\n          areItemsHidden && 'CustomSendMenu_items-hidden',\n        )}\n        dir={oldLang.isRtl ? 'rtl' : undefined}\n      >\n        {onSendSilent && <MenuItem icon=\"mute\" onClick={onSendSilent}>{oldLang('SendWithoutSound')}</MenuItem>}\n        {canSchedule && onSendSchedule && (\n          <MenuItem icon=\"schedule\" onClick={onSendSchedule}>\n            {oldLang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n          </MenuItem>\n        )}\n        {canSchedule && onSendSchedule && displayScheduleUntilOnline && (\n          <MenuItem icon=\"user-online\" onClick={onSendWhenOnline}>\n            {oldLang('SendWhenOnline')}\n          </MenuItem>\n        )}\n        {withEffects && hasCurrentEffect && (\n          <MenuItem icon=\"delete\" onClick={onRemoveEffect}>\n            {lang('RemoveEffect')}\n          </MenuItem>\n        )}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(CustomSendMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { IAnchorPosition } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { ensureProtocol } from '../../../util/browser/url';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport getKeyFromEvent from '../../../util/getKeyFromEvent';\nimport { selectAfterNode } from '../../../util/selection';\nimport stopEvent from '../../../util/stopEvent';\nimport { type RichInputCtx, useRichEditableKeyboardListener } from './useRichEditable';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useVirtualBackdrop from '../../../hooks/useVirtualBackdrop';\n\nimport Button from '../../ui/Button';\nimport Icon from '../icons/Icon';\nimport { isBlockquote } from './BlockquoteEnter';\nimport { RichInputKeyboardPriority } from './Keyboard';\n\nimport './TextFormatter.scss';\n\nexport type OwnProps = {\n  richInputCtx: RichInputCtx;\n  isOpen: boolean;\n  isActive: boolean;\n  onClose: () => void;\n  disablePreview?: boolean;\n};\n\ninterface ISelectedTextFormats {\n  bold?: boolean;\n  italic?: boolean;\n  underline?: boolean;\n  strikethrough?: boolean;\n  monospace?: boolean;\n  spoiler?: boolean;\n  quote?: boolean;\n}\n\nconst TEXT_FORMAT_BY_TAG_NAME: Record<string, keyof ISelectedTextFormats> = {\n  B: 'bold',\n  STRONG: 'bold',\n  I: 'italic',\n  EM: 'italic',\n  U: 'underline',\n  DEL: 'strikethrough',\n  STRIKE: 'strikethrough',\n  CODE: 'monospace',\n  SPAN: 'spoiler',\n  BLOCKQUOTE: 'quote',\n};\n\nconst TEXT_FORMATTER_SAFE_AREA_PX = 180;\n\nconst TextFormatter: FC<OwnProps> = ({\n  richInputCtx,\n  isOpen: shouldOpen,\n  isActive,\n  onClose,\n  disablePreview,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const linkUrlInputRef = useRef<HTMLInputElement>(null);\n  const [isEditingLink, setIsEditingLink] = useState(false);\n  const isOpen = isActive && (shouldOpen || isEditingLink);\n  const [isLinkControlOpen, openLinkControl, closeLinkControl] = useFlag();\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen || isLinkControlOpen);\n  const [linkUrl, setLinkUrl] = useState('');\n  const [inputClassName, setInputClassName] = useState<string | undefined>();\n  const [selectedTextFormats, setSelectedTextFormats] = useState<ISelectedTextFormats>({});\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n  useVirtualBackdrop(\n    isOpen,\n    containerRef,\n    onClose,\n    true,\n  );\n\n  useEffect(() => {\n    if (isLinkControlOpen) {\n      linkUrlInputRef.current!.focus();\n    } else {\n      setLinkUrl('');\n      setIsEditingLink(false);\n    }\n  }, [isLinkControlOpen, linkUrlInputRef]);\n\n  useEffect(() => {\n    if (!shouldRender) {\n      closeLinkControl();\n      setSelectedTextFormats({});\n      setInputClassName(undefined);\n    }\n  }, [closeLinkControl, shouldRender]);\n\n  useEffect(() => {\n    const sel = richInputCtx.editable.selectionS();\n    if (!isOpen || !sel) {\n      return;\n    }\n\n    const selectedFormats: ISelectedTextFormats = {};\n    let formNode: Node | null = sel.range.commonAncestorContainer;\n    while (formNode && formNode !== richInputCtx.editable.root) {\n      const textFormat = (formNode && ('tagName' in formNode))\n        ? TEXT_FORMAT_BY_TAG_NAME[formNode.tagName as string] : undefined;\n      if (textFormat) {\n        selectedFormats[textFormat] = true;\n      }\n\n      formNode = formNode.parentElement;\n    }\n\n    setSelectedTextFormats(selectedFormats);\n  }, [isOpen, richInputCtx.editable, richInputCtx.editable.selectionS, openLinkControl]);\n\n  const linkSelSaver = useRef<Range | undefined>();\n  const startLinkControl = useLastCallback(() => {\n    const sel = richInputCtx.editable.selectionS();\n\n    if (!sel || sel.collapsed) return;\n    linkSelSaver.current = sel.range.cloneRange();\n    openLinkControl();\n  });\n\n  const getSelectedElement = useLastCallback(() => {\n    const sel = richInputCtx.editable.selectionS();\n    if (!sel) {\n      return undefined;\n    }\n\n    return sel.range.commonAncestorContainer.parentElement;\n  });\n\n  function updateInputStyles() {\n    const input = linkUrlInputRef.current;\n    if (!input) {\n      return;\n    }\n\n    const { offsetWidth, scrollWidth, scrollLeft } = input;\n    if (scrollWidth <= offsetWidth) {\n      setInputClassName(undefined);\n      return;\n    }\n\n    let className = '';\n    if (scrollLeft < scrollWidth - offsetWidth) {\n      className = 'mask-right';\n    }\n    if (scrollLeft > 0) {\n      className += ' mask-left';\n    }\n\n    setInputClassName(className);\n  }\n\n  function handleLinkUrlChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setLinkUrl(e.target.value);\n    updateInputStyles();\n  }\n\n  function getFormatButtonClassName(key: keyof ISelectedTextFormats) {\n    if (selectedTextFormats[key]) {\n      return 'active';\n    }\n\n    if (key === 'monospace') {\n      if (Object.keys(selectedTextFormats).some(\n        (fKey) => fKey !== key && Boolean(selectedTextFormats[fKey as keyof ISelectedTextFormats]),\n      )) {\n        return 'disabled';\n      }\n    } else if (selectedTextFormats.monospace) {\n      return 'disabled';\n    }\n\n    return undefined;\n  }\n\n  const handleSpoilerText = useLastCallback(() => {\n    if (selectedTextFormats.spoiler) {\n      const element = getSelectedElement();\n      if (\n        !richInputCtx.editable.selectionS()\n        || !element\n        || element.dataset.entityType !== ApiMessageEntityTypes.Spoiler\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        spoiler: false,\n      }));\n\n      return;\n    }\n\n    const text = richInputCtx.editable.getSelectedHtml();\n    if (!text) return;\n    richInputCtx.editable.execCommand(\n      'insertHTML', `<span class=\"spoiler\" data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">${text}</span>`,\n    );\n    onClose();\n  });\n\n  const handleBoldText = useLastCallback(() => {\n    setSelectedTextFormats((selectedFormats) => {\n      // Somehow re-applying 'bold' command to already bold text doesn't work\n      richInputCtx.editable.execCommand('bold');\n      return {\n        ...selectedFormats,\n        bold: !selectedFormats.bold,\n      };\n    });\n  });\n\n  const handleItalicText = useLastCallback(() => {\n    richInputCtx.editable.execCommand('italic');\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      italic: !selectedFormats.italic,\n    }));\n  });\n\n  const handleUnderlineText = useLastCallback(() => {\n    richInputCtx.editable.execCommand('underline');\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      underline: !selectedFormats.underline,\n    }));\n  });\n\n  const handleStrikethroughText = useLastCallback(() => {\n    richInputCtx.editable.execCommand('strikethrough');\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      strikethrough: !selectedFormats.strikethrough,\n    }));\n  });\n\n  const handleMonospaceText = useLastCallback(() => {\n    if (window.getSelection()?.isCollapsed) return;\n\n    if (selectedTextFormats.monospace) {\n      richInputCtx.editable.execCommand('removeFormat');\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        monospace: false,\n      }));\n      return;\n    }\n\n    const previousCode = [...(richInputCtx.editable.root.querySelectorAll('code') || [])];\n    const text = richInputCtx.editable.selectionS()?.range?.toString() || '';\n    if (!text) return;\n    richInputCtx.editable.execCommand(\n      'insertHTML',\n      `<code class=\"text-entity-code\" dir=\"auto\">${text}</code>`,\n    );\n\n    requestMutation(() => {\n      const currentCode = richInputCtx.editable.root?.querySelectorAll('code') || [];\n      for (const el of currentCode) {\n        if (previousCode.includes(el)) continue;\n        selectAfterNode(el);\n      }\n      onClose();\n    });\n  });\n\n  const handleLinkUrlConfirm = useLastCallback(() => {\n    const formattedLinkUrl = (ensureProtocol(linkUrl) || '').split('%').map(encodeURI).join('%');\n\n    if (linkSelSaver.current) {\n      richInputCtx.editable.setSelRange(linkSelSaver.current);\n    }\n\n    if (isEditingLink) {\n      const element = getSelectedElement();\n      if (!element || element.tagName !== 'A') {\n        return;\n      }\n\n      (element as HTMLAnchorElement).href = formattedLinkUrl;\n\n      onClose();\n\n      return;\n    }\n\n    const text = richInputCtx.editable.getSelectedHtml({ shouldDropCustomEmoji: true });\n    richInputCtx.editable.execCommand(\n      'insertHTML',\n      `<a href=${formattedLinkUrl} class=\"text-entity-link\" dir=\"auto\">${text}</a>`,\n    );\n    closeLinkControl();\n    onClose();\n  });\n\n  const handleQuote = useLastCallback(() => {\n    if (selectedTextFormats.quote) {\n      const selection = window.getSelection();\n      if (!selection) return;\n      const r = selection.getRangeAt(0);\n      let element: Node | null = r.commonAncestorContainer;\n\n      while (element && !isBlockquote(element)) {\n        element = element.parentElement;\n      }\n\n      if (\n        !richInputCtx.editable.selectionS()\n        || !element\n        || !isBlockquote(element)\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      (element as HTMLElement).replaceWith(...element.childNodes);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        quote: false,\n      }));\n      onClose();\n\n      return;\n    }\n\n    const html = richInputCtx.editable.getSelectedHtml({ shouldDropQuotes: true });\n    if (!html) return;\n    richInputCtx.editable.execCommand('insertHTML',\n      `<blockquote class=\"blockquote\">${html}</blockquote>`);\n    onClose();\n  });\n\n  const handlePreview = useLastCallback(() => {\n    window.getSelection()?.removeAllRanges();\n    richInputCtx.editable.root.blur();\n    richInputCtx.editable.preview.startPreview();\n    onClose();\n  });\n\n  useRichEditableKeyboardListener(richInputCtx, {\n    priority: RichInputKeyboardPriority.Tool,\n    onKeydown: (e: KeyboardEvent) => {\n      if (!isActive) return false;\n      const HANDLERS_BY_KEY: Record<string, AnyToVoidFunction> = {\n        k: startLinkControl,\n        b: handleBoldText,\n        u: handleUnderlineText,\n        i: handleItalicText,\n        m: handleMonospaceText,\n        s: handleStrikethroughText,\n        p: handleSpoilerText,\n        q: handleQuote,\n      };\n\n      const handler = HANDLERS_BY_KEY[getKeyFromEvent(e)];\n\n      if (\n        e.altKey\n        || !(e.ctrlKey || e.metaKey)\n        || !handler\n      ) {\n        return false;\n      }\n\n      e.preventDefault();\n      e.stopPropagation();\n      handler();\n      return true;\n    },\n  }, isActive);\n\n  const lang = useOldLang();\n\n  function handleContainerKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    if (e.key === 'Enter' && isLinkControlOpen) {\n      handleLinkUrlConfirm();\n      e.preventDefault();\n    }\n  }\n\n  const className = buildClassName(\n    'TextFormatter',\n    transitionClassNames,\n    isLinkControlOpen && 'link-control-shown',\n  );\n\n  const linkUrlConfirmClassName = buildClassName(\n    'TextFormatter-link-url-confirm',\n    Boolean(linkUrl.length) && 'shown',\n  );\n\n  const [anchorPosition, setAnchorPosition] = useState<IAnchorPosition>();\n\n  useEffect(() => {\n    const selectionRange = richInputCtx.editable.selectionS()?.range;\n    if (!selectionRange || !isOpen) return;\n\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const rootRect = containerRef.current?.parentElement?.getBoundingClientRect()!;\n\n    let x = (selectionRect.left + selectionRect.width / 2) - rootRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > rootRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = rootRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setAnchorPosition({\n      x,\n      y: selectionRect.top - rootRect.top,\n    });\n  }, [richInputCtx.editable, richInputCtx.editable.root, richInputCtx.editable.selectionS, isOpen]);\n\n  const style = anchorPosition\n    ? `left: ${anchorPosition.x}px; top: ${anchorPosition.y}px;--text-formatter-left: ${anchorPosition.x}px;`\n    : '';\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      style={style}\n      onKeyDown={handleContainerKeyDown}\n      // Prevents focus loss when clicking on the toolbar\n      onMouseDown={stopEvent}\n    >\n      <div className=\"TextFormatter-buttons\">\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Spoiler text\"\n          className={getFormatButtonClassName('spoiler')}\n          onClick={handleSpoilerText}\n        >\n          <Icon name=\"eye-crossed\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel={selectedTextFormats.quote ? 'Break quote' : 'Make quote'}\n          className={getFormatButtonClassName('quote')}\n          onClick={handleQuote}\n        >\n          <Icon name={selectedTextFormats.quote === true ? 'remove-quote' : 'quote-text'} />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Bold text\"\n          className={getFormatButtonClassName('bold')}\n          onClick={handleBoldText}\n        >\n          <Icon name=\"bold\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Italic text\"\n          className={getFormatButtonClassName('italic')}\n          onClick={handleItalicText}\n        >\n          <Icon name=\"italic\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Underlined text\"\n          className={getFormatButtonClassName('underline')}\n          onClick={handleUnderlineText}\n        >\n          <Icon name=\"underlined\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Strikethrough text\"\n          className={getFormatButtonClassName('strikethrough')}\n          onClick={handleStrikethroughText}\n        >\n          <Icon name=\"strikethrough\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Monospace text\"\n          className={getFormatButtonClassName('monospace')}\n          onClick={handleMonospaceText}\n        >\n          <Icon name=\"monospace\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button color=\"translucent\" ariaLabel={lang('TextFormat.AddLinkTitle')} onClick={startLinkControl}>\n          <Icon name=\"link\" />\n        </Button>\n        {!disablePreview && <div className=\"TextFormatter-divider\" />}\n        {!disablePreview && (\n          <Button\n            color=\"translucent\"\n            ariaLabel=\"Preview\"\n            style={`\n              width: 5rem;\n              font-size: 1.3rem;\n              text-transform: none;\n        `}\n            onClick={handlePreview}\n          >\n            {/* TODO: Support translations */}\n            Preview\n          </Button>\n        )}\n      </div>\n\n      <div className=\"TextFormatter-link-control\">\n        <div className=\"TextFormatter-buttons\">\n          <Button color=\"translucent\" ariaLabel={lang('Cancel')} onClick={closeLinkControl}>\n            <Icon name=\"arrow-left\" />\n          </Button>\n          <div className=\"TextFormatter-divider\" />\n\n          <div\n            className={buildClassName('TextFormatter-link-url-input-wrapper', inputClassName)}\n          >\n            <input\n              ref={linkUrlInputRef}\n              className=\"TextFormatter-link-url-input\"\n              type=\"text\"\n              value={linkUrl}\n              placeholder=\"Enter URL...\"\n              autoComplete=\"off\"\n              inputMode=\"url\"\n              dir=\"auto\"\n              onChange={handleLinkUrlChange}\n              onScroll={updateInputStyles}\n            />\n          </div>\n\n          <div className={linkUrlConfirmClassName}>\n            <div className=\"TextFormatter-divider\" />\n            <Button\n              color=\"translucent\"\n              ariaLabel={lang('Save')}\n              className=\"color-primary\"\n              onClick={handleLinkUrlConfirm}\n            >\n              <Icon name=\"check\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(TextFormatter);\n","export default function getKeyFromEvent(e: KeyboardEvent) {\n  const key = e.key || e.code;\n\n  return key.startsWith('Key') ? key.slice(3).toLowerCase() : key;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport './EmojiButton.scss';\n\nconst CUSTOM_EMOJI_SIZE = 32;\n\ntype OwnProps = {\n  emoji: ApiSticker;\n  focus?: boolean;\n  onClick?: (emoji: ApiSticker) => void;\n  observeIntersection?: ObserveFn;\n};\n\nconst CustomEmojiButton: FC<OwnProps> = ({\n  emoji, focus, onClick, observeIntersection,\n}) => {\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    // Preventing safari from losing focus on Composer MessageInput\n    e.preventDefault();\n\n    onClick?.(emoji);\n  });\n\n  const className = buildClassName(\n    'EmojiButton',\n    focus && 'focus',\n  );\n\n  return (\n    <div\n      className={className}\n      onMouseDown={handleClick}\n      title={emoji.emoji}\n    >\n      <CustomEmoji\n        documentId={emoji.id}\n        size={CUSTOM_EMOJI_SIZE}\n        withSharedAnimation\n        shouldPreloadPreview\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport findInViewport from '../../../util/findInViewport';\nimport isFullyVisible from '../../../util/visibility/isFullyVisible';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevDuringAnimation from '../../../hooks/usePrevDuringAnimation';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport Loading from '../../ui/Loading';\nimport CustomEmojiButton from './CustomEmojiButton';\nimport EmojiButton from './EmojiButton';\n\nimport './EmojiTooltip.scss';\n\nconst VIEWPORT_MARGIN = 8;\nconst EMOJI_BUTTON_WIDTH = 44;\nconst CLOSE_DURATION = 350;\n\nfunction setItemVisible(index: number, containerRef: Record<string, any>) {\n  const container = containerRef.current!;\n  if (!container) {\n    return;\n  }\n\n  const { visibleIndexes, allElements } = findInViewport(\n    container,\n    '.EmojiButton',\n    VIEWPORT_MARGIN,\n    true,\n    true,\n    true,\n  );\n\n  if (!allElements.length || !allElements[index]) {\n    return;\n  }\n  const first = visibleIndexes[0];\n  if (!visibleIndexes.includes(index)\n    || (index === first && !isFullyVisible(container, allElements[first], true))) {\n    const position = index > visibleIndexes[visibleIndexes.length - 1] ? 'start' : 'end';\n    const newLeft = position === 'start' ? index * EMOJI_BUTTON_WIDTH : 0;\n\n    animateHorizontalScroll(container, newLeft);\n  }\n}\n\nexport type OwnProps = {\n  isOpen: boolean;\n  emojis: Emoji[];\n  customEmojis: ApiSticker[];\n  onEmojiSelect: (text: string) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onClose: NoneToVoidFunction;\n  addRecentEmoji: ({ emoji }: { emoji: string }) => void;\n  addRecentCustomEmoji: ({ documentId }: { documentId: string }) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst EmojiTooltip: FC<OwnProps> = ({\n  isOpen,\n  emojis,\n  customEmojis,\n  onClose,\n  onEmojiSelect,\n  onCustomEmojiSelect,\n  addRecentEmoji,\n  addRecentCustomEmoji,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n  const listEmojis: (Emoji | ApiSticker)[] = usePrevDuringAnimation(\n    emojis.length ? [...customEmojis, ...emojis] : undefined, CLOSE_DURATION,\n  ) || [];\n\n  useHorizontalScroll(containerRef);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  const handleSelectEmoji = useLastCallback((emoji: Emoji) => {\n    onEmojiSelect(emoji.native);\n    addRecentEmoji({ emoji: emoji.id });\n  });\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n    addRecentCustomEmoji({ documentId: emoji.id });\n  });\n\n  const handleSelect = useLastCallback((emoji: Emoji | ApiSticker) => {\n    if ('native' in emoji) {\n      handleSelectEmoji(emoji);\n    } else {\n      handleCustomEmojiSelect(emoji);\n    }\n  });\n\n  const handleClick = useLastCallback((native: string, id: string) => {\n    onEmojiSelect(native);\n    addRecentEmoji({ emoji: id });\n  });\n\n  const handleCustomEmojiClick = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n    addRecentCustomEmoji({ documentId: emoji.id });\n  });\n\n  const selectedIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    isHorizontal: true,\n    items: listEmojis,\n    shouldStartOnFirstItem: true,\n    shouldRemoveSelectionOnReset: false,\n    noArrowSelectLoop: true,\n    shouldSelectOnTab: true,\n    onSelect: handleSelect,\n    onClose,\n  });\n\n  useEffectWithPrevDeps(([prevSelectedIndex]) => {\n    if (prevSelectedIndex === undefined || prevSelectedIndex === -1) {\n      return;\n    }\n\n    setItemVisible(selectedIndex, containerRef);\n  }, [selectedIndex]);\n\n  const className = buildClassName(\n    'EmojiTooltip composer-tooltip custom-scroll-x',\n    transitionClassNames,\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n    >\n      {shouldRender && listEmojis ? (\n        listEmojis.map((emoji, index) => (\n          'native' in emoji ? (\n            <EmojiButton\n              key={emoji.id}\n              emoji={emoji}\n              focus={selectedIndex === index}\n              onClick={handleClick}\n            />\n          ) : (\n            <CustomEmojiButton\n              key={emoji.id}\n              emoji={emoji}\n              focus={selectedIndex === index}\n              onClick={handleCustomEmojiClick}\n              observeIntersection={observeIntersection}\n            />\n          )\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(EmojiTooltip);\n","import type { FC, TeactNode } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiWebDocument } from '../../../../api/types';\n\nimport { getWebDocumentHash } from '../../../../global/helpers';\nimport { getFirstLetters } from '../../../../util/textFormat';\nimport renderText from '../../../common/helpers/renderText';\nimport { preventMessageInputBlurWithBubbling } from '../../helpers/preventMessageInputBlur';\n\nimport useMedia from '../../../../hooks/useMedia';\n\nimport ListItem from '../../../ui/ListItem';\n\nimport './BaseResult.scss';\n\nexport type OwnProps = {\n  focus?: boolean;\n  thumbnail?: ApiWebDocument;\n  thumbUrl?: string;\n  title?: string;\n  description?: string;\n  transitionClassNames?: string;\n  onClick: NoneToVoidFunction;\n};\n\nconst BaseResult: FC<OwnProps> = ({\n  title,\n  description,\n  thumbnail,\n  thumbUrl,\n  focus,\n  transitionClassNames = '',\n  onClick,\n}) => {\n  let content: TeactNode | undefined;\n\n  const thumbnailDataUrl = useMedia(thumbnail ? getWebDocumentHash(thumbnail) : undefined);\n  thumbUrl = thumbUrl || thumbnailDataUrl;\n\n  if (thumbUrl) {\n    content = (\n      <img src={thumbUrl} className={transitionClassNames} alt=\"\" decoding=\"async\" draggable={false} />\n    );\n  } else if (title) {\n    content = getFirstLetters(title, 1);\n  }\n\n  return (\n    <ListItem\n      focus={focus}\n      className=\"BaseResult chat-item-clickable\"\n      onMouseDown={preventMessageInputBlurWithBubbling}\n      onClick={onClick}\n    >\n      <span className=\"thumb\">\n        {typeof content === 'string' ? renderText(content) : content}\n      </span>\n      <div className=\"content-inner\">\n        {title && (<div className=\"title\">{title}</div>)}\n        {description && (<div className=\"description\">{description}</div>)}\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(BaseResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineMediaResult, ApiBotInlineResult } from '../../../../api/types';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport BaseResult from './BaseResult';\n\nexport type OwnProps = {\n  focus?: boolean;\n  inlineResult: ApiBotInlineResult | ApiBotInlineMediaResult;\n  onClick: (result: ApiBotInlineResult | ApiBotInlineMediaResult) => void;\n};\n\nconst ArticleResult: FC<OwnProps> = ({ focus, inlineResult, onClick }) => {\n  const {\n    title, description,\n  } = inlineResult;\n\n  const url = 'url' in inlineResult ? inlineResult.url : undefined;\n  const webThumbnail = 'webThumbnail' in inlineResult ? inlineResult.webThumbnail : undefined;\n\n  const handleClick = useLastCallback(() => {\n    onClick(inlineResult);\n  });\n\n  return (\n    <BaseResult\n      focus={focus}\n      thumbnail={webThumbnail}\n      title={title || url}\n      description={description}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(ArticleResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineMediaResult, ApiVideo } from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport GifButton from '../../../common/GifButton';\n\ntype OwnProps = {\n  inlineResult: ApiBotInlineMediaResult;\n  isSavedMessages?: boolean;\n  canSendGifs?: boolean;\n  observeIntersection: ObserveFn;\n  onClick: (result: ApiBotInlineMediaResult, isSilent?: boolean, shouldSchedule?: boolean) => void;\n};\n\nconst GifResult: FC<OwnProps> = ({\n  inlineResult, isSavedMessages, canSendGifs, observeIntersection, onClick,\n}) => {\n  const { gif } = inlineResult;\n\n  const handleClick = useLastCallback((_gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => {\n    onClick(inlineResult, isSilent, shouldSchedule);\n  });\n\n  if (!gif) {\n    return undefined;\n  }\n\n  return (\n    <GifButton\n      gif={gif}\n      observeIntersection={observeIntersection}\n      className=\"chat-item-clickable\"\n      onClick={canSendGifs ? handleClick : undefined}\n      isSavedMessages={isSavedMessages}\n    />\n  );\n};\n\nexport default memo(GifResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type {\n  ApiBotInlineMediaResult, ApiBotInlineResult, ApiPhoto, ApiThumbnail, ApiWebDocument,\n} from '../../../../api/types';\n\nimport { getPhotoMediaHash, getWebDocumentHash } from '../../../../global/helpers';\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useMedia from '../../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../../hooks/useMediaTransitionDeprecated';\n\nimport BaseResult from './BaseResult';\n\nimport './MediaResult.scss';\n\nexport type OwnProps = {\n  focus?: boolean;\n  isForGallery?: boolean;\n  inlineResult: ApiBotInlineMediaResult | ApiBotInlineResult;\n  onClick: (result: ApiBotInlineMediaResult | ApiBotInlineResult) => void;\n};\n\nconst MediaResult: FC<OwnProps> = ({\n  focus, isForGallery, inlineResult, onClick,\n}) => {\n  let photo: ApiPhoto | undefined;\n  let thumbnail: ApiThumbnail | undefined;\n  let webThumbnail: ApiWebDocument | undefined;\n\n  if ('photo' in inlineResult) {\n    photo = inlineResult.photo;\n  }\n  // For results with type=video (for example @stikstokbot)\n  if ('thumbnail' in inlineResult) {\n    thumbnail = inlineResult.thumbnail;\n  }\n  if ('webThumbnail' in inlineResult) {\n    webThumbnail = inlineResult.webThumbnail;\n  }\n\n  const thumbnailBlobUrl = useMedia(getWebDocumentHash(webThumbnail));\n  const mediaBlobUrl = useMedia(photo && getPhotoMediaHash(photo, 'pictogram'));\n  const transitionClassNames = useMediaTransitionDeprecated(mediaBlobUrl || thumbnailBlobUrl);\n\n  const handleClick = useLastCallback(() => {\n    onClick(inlineResult);\n  });\n\n  if (isForGallery) {\n    return (\n      <div className=\"MediaResult chat-item-clickable\" onClick={handleClick}>\n        <img src={(photo?.thumbnail?.dataUri) || thumbnailBlobUrl} alt=\"\" draggable={false} />\n        <img\n          src={mediaBlobUrl}\n          className={buildClassName('full-media', transitionClassNames)}\n          alt=\"\"\n          draggable={false}\n        />\n      </div>\n    );\n  }\n\n  const { title, description } = inlineResult;\n\n  return (\n    <BaseResult\n      focus={focus}\n      thumbnail={webThumbnail}\n      thumbUrl={mediaBlobUrl || thumbnail?.dataUri}\n      transitionClassNames={transitionClassNames}\n      title={title}\n      description={description}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(MediaResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineMediaResult } from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_INLINE_BOT_RESULT } from '../../../../config';\n\nimport StickerButton from '../../../common/StickerButton';\n\ntype OwnProps = {\n  inlineResult: ApiBotInlineMediaResult;\n  isSavedMessages?: boolean;\n  observeIntersection: ObserveFn;\n  onClick: (result: ApiBotInlineMediaResult, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  isCurrentUserPremium?: boolean;\n};\n\nconst StickerResult: FC<OwnProps> = ({\n  inlineResult,\n  isSavedMessages,\n  observeIntersection,\n  onClick,\n  isCurrentUserPremium,\n}) => {\n  const { sticker } = inlineResult;\n\n  if (!sticker) {\n    return undefined;\n  }\n\n  return (\n    <StickerButton\n      sticker={sticker}\n      size={STICKER_SIZE_INLINE_BOT_RESULT}\n      observeIntersection={observeIntersection}\n      title={sticker.emoji}\n      className=\"chat-item-clickable\"\n      onClick={onClick}\n      clickArg={inlineResult}\n      isSavedMessages={isSavedMessages}\n      canViewSet\n      noShowPremium\n      isCurrentUserPremium={isCurrentUserPremium}\n    />\n  );\n};\n\nexport default memo(StickerResult);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiBotInlineMediaResult, ApiBotInlineResult, ApiBotInlineSwitchPm, ApiBotInlineSwitchWebview,\n} from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { throttle } from '../../../util/schedulers';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ListItem from '../../ui/ListItem';\nimport ArticleResult from './inlineResults/ArticleResult';\nimport GifResult from './inlineResults/GifResult';\nimport MediaResult from './inlineResults/MediaResult';\nimport StickerResult from './inlineResults/StickerResult';\n\nimport './InlineBotTooltip.scss';\n\nconst INTERSECTION_DEBOUNCE_MS = 200;\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nexport type OwnProps = {\n  isOpen: boolean;\n  botId?: string;\n  isGallery?: boolean;\n  inlineBotResults?: (ApiBotInlineResult | ApiBotInlineMediaResult)[];\n  switchPm?: ApiBotInlineSwitchPm;\n  switchWebview?: ApiBotInlineSwitchWebview;\n  isSavedMessages?: boolean;\n  canSendGifs?: boolean;\n  onSelectResult: (\n    inlineResult: ApiBotInlineMediaResult | ApiBotInlineResult, isSilent?: boolean, shouldSchedule?: boolean,\n  ) => void;\n  loadMore: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  isCurrentUserPremium?: boolean;\n};\n\nconst InlineBotTooltip: FC<OwnProps> = ({\n  isOpen,\n  botId,\n  isGallery,\n  inlineBotResults,\n  switchPm,\n  switchWebview,\n  isSavedMessages,\n  canSendGifs,\n  loadMore,\n  onClose,\n  onSelectResult,\n  isCurrentUserPremium,\n}) => {\n  const {\n    openChat,\n    startBot,\n    requestSimpleWebView,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n  const renderedIsGallery = useCurrentOrPrev(isGallery, shouldRender);\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    debounceMs: INTERSECTION_DEBOUNCE_MS,\n    isDisabled: !isOpen,\n  });\n\n  const handleLoadMore = useLastCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(loadMore);\n    }\n  });\n\n  const selectedIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    shouldRemoveSelectionOnReset: renderedIsGallery,\n    noArrowNavigation: renderedIsGallery,\n    items: inlineBotResults,\n    onSelect: onSelectResult,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedIndex, containerRef);\n  }, [selectedIndex]);\n\n  const handleSendPm = useLastCallback(() => {\n    openChat({ id: botId });\n    startBot({ botId: botId!, param: switchPm!.startParam });\n  });\n\n  const handleOpenWebview = useLastCallback(() => {\n    const theme = extractCurrentThemeParams();\n\n    requestSimpleWebView({\n      botId: botId!,\n      url: switchWebview!.url,\n      buttonText: switchWebview!.text,\n      theme,\n      isFromSwitchWebView: true,\n    });\n  });\n\n  const prevInlineBotResults = usePreviousDeprecated(\n    inlineBotResults?.length\n      ? inlineBotResults\n      : undefined,\n    shouldRender,\n  );\n  const renderedInlineBotResults = inlineBotResults?.length ? inlineBotResults : prevInlineBotResults;\n\n  if (!shouldRender || !(renderedInlineBotResults?.length || switchPm)) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'InlineBotTooltip composer-tooltip',\n    IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n    renderedIsGallery && 'gallery',\n    transitionClassNames,\n  );\n\n  function renderSwitchPm() {\n    return (\n      <ListItem ripple className=\"switch-pm scroll-item\" onClick={handleSendPm}>\n        <span className=\"title\">{switchPm!.text}</span>\n      </ListItem>\n    );\n  }\n\n  function renderSwitchWebview() {\n    return (\n      <ListItem ripple className=\"switch-pm scroll-item\" onClick={handleOpenWebview}>\n        <span className=\"title\">{switchWebview!.text}</span>\n      </ListItem>\n    );\n  }\n\n  function renderContent() {\n    return renderedInlineBotResults!.map((inlineBotResult, index) => {\n      switch (inlineBotResult.type) {\n        case 'gif':\n          return (\n            <GifResult\n              key={inlineBotResult.id}\n              inlineResult={inlineBotResult}\n              observeIntersection={observeIntersection}\n              onClick={onSelectResult}\n              isSavedMessages={isSavedMessages}\n              canSendGifs={canSendGifs}\n            />\n          );\n\n        case 'photo':\n          return (\n            <MediaResult\n              key={inlineBotResult.id}\n              isForGallery={renderedIsGallery}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n\n        case 'sticker':\n          return (\n            <StickerResult\n              key={inlineBotResult.id}\n              inlineResult={inlineBotResult}\n              observeIntersection={observeIntersection}\n              onClick={onSelectResult}\n              isSavedMessages={isSavedMessages}\n              isCurrentUserPremium={isCurrentUserPremium}\n            />\n          );\n\n        case 'video':\n        case 'file':\n        case 'game':\n          return (\n            <MediaResult\n              key={inlineBotResult.id}\n              focus={selectedIndex === index}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n        case 'article':\n        case 'audio':\n        case 'voice':\n          return (\n            <ArticleResult\n              key={inlineBotResult.id}\n              focus={selectedIndex === index}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n\n        default:\n          return undefined;\n      }\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      ref={containerRef}\n      className={className}\n      items={renderedInlineBotResults}\n      itemSelector=\".chat-item-clickable\"\n      noFastList\n      onLoadMore={handleLoadMore}\n      sensitiveArea={160}\n    >\n      {switchPm && renderSwitchPm()}\n      {switchWebview && renderSwitchWebview()}\n      {Boolean(renderedInlineBotResults?.length) && renderContent()}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(InlineBotTooltip);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiSendAsPeerId } from '../../../api/types';\n\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport ListItem from '../../ui/ListItem';\nimport Menu from '../../ui/Menu';\n\nimport './SendAsMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId?: string;\n  selectedSendAsId?: string;\n  sendAsPeerIds?: ApiSendAsPeerId[];\n  isCurrentUserPremium?: boolean;\n  onClose: () => void;\n};\n\nconst SendAsMenu: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  selectedSendAsId,\n  sendAsPeerIds,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { saveDefaultSendAs, showNotification } = getActions();\n\n  // No need for expensive global updates on users and chats, so we avoid them\n  const usersById = getGlobal().users.byId;\n  const chatsById = getGlobal().chats.byId;\n\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isOpen, onClose, undefined);\n\n  useEffect(() => {\n    if (isOpen) {\n      markMouseInside();\n    }\n  }, [isOpen, markMouseInside]);\n\n  const handleUserSelect = useLastCallback((id: string) => {\n    onClose();\n    saveDefaultSendAs({ chatId: chatId!, sendAsId: id });\n  });\n\n  const selectedSendAsIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: sendAsPeerIds,\n    onSelect: handleUserSelect,\n    shouldSelectOnTab: true,\n    shouldSaveSelectionOnUpdateItems: true,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedSendAsIndex, containerRef);\n  }, [selectedSendAsIndex]);\n\n  useEffect(() => {\n    if (sendAsPeerIds && !sendAsPeerIds.length) {\n      onClose();\n    }\n  }, [sendAsPeerIds, onClose]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      positionX=\"left\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"SendAsMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n    >\n      <div className=\"send-as-title\" dir=\"auto\">{lang('SendMessageAsTitle')}</div>\n      {usersById && chatsById && sendAsPeerIds?.map(({ id, isPremium }, index) => {\n        const user = usersById[id];\n        const chat = chatsById[id];\n        const peer = user || chat;\n\n        const handleClick = () => {\n          if (!isPremium || isCurrentUserPremium) {\n            handleUserSelect(id);\n          } else {\n            showNotification({\n              message: lang('SelectSendAsPeerPremiumHint'),\n              actionText: lang('Open'),\n              action: {\n                action: 'openPremiumModal',\n                payload: {},\n              },\n            });\n          }\n        };\n\n        const avatarClassName = buildClassName(selectedSendAsId === id && 'selected');\n\n        return (\n          <ListItem\n            key={id}\n            className=\"SendAsItem chat-item-clickable scroll-item with-avatar\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleClick}\n            focus={selectedSendAsIndex === index}\n            rightElement={!isCurrentUserPremium && isPremium\n              && <Icon name=\"lock-badge\" className=\"send-as-icon-locked\" />}\n          >\n            <Avatar\n              size=\"small\"\n              peer={peer}\n              className={avatarClassName}\n            />\n            <div className=\"info\">\n              {peer && <FullNameTitle peer={peer} noFake />}\n              <span className=\"subtitle\">{user\n                ? lang('VoipGroupPersonalAccount')\n                : lang('Subscribers', chat?.membersCount, 'i')}\n              </span>\n            </div>\n          </ListItem>\n        );\n      })}\n    </Menu>\n  );\n};\n\nexport default memo(SendAsMenu);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_SEARCH } from '../../config';\nimport { selectIsCurrentUserPremium, selectShouldLoopStickers, selectStickerSet } from '../../global/selectors';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StickerButton from '../common/StickerButton';\nimport Button from '../ui/Button';\nimport Spinner from '../ui/Spinner';\n\ntype OwnProps = {\n  stickerSetId: string;\n  observeIntersection: ObserveFn;\n  isModalOpen?: boolean;\n};\n\ntype StateProps = {\n  set?: ApiStickerSet;\n  shouldPlay?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst PREMIUM_STICKERS_TO_DISPLAY = 3;\nconst STICKERS_TO_DISPLAY = 5;\n\nconst StickerSetResult: FC<OwnProps & StateProps> = ({\n  stickerSetId, observeIntersection, set, shouldPlay,\n  isModalOpen, isCurrentUserPremium,\n}) => {\n  const { loadStickers, toggleStickerSet, openStickerSet } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n  const isAdded = set && !set.isArchived && Boolean(set.installedDate);\n  const areStickersLoaded = Boolean(set?.stickers);\n\n  const displayedStickers = useMemo(() => {\n    if (!set) {\n      return [];\n    }\n\n    const premiumStickerIds = (set.stickers?.filter(({ hasEffect }) => hasEffect) ?? [])\n      .slice(0, PREMIUM_STICKERS_TO_DISPLAY);\n    const coverStickerIds = (set.covers || []).map(({ id }) => id);\n    const otherStickers = set.stickers ? set.stickers.filter(({ id }) => !coverStickerIds.includes(id)) : [];\n\n    return [...premiumStickerIds, ...(set.covers || []), ...otherStickers].slice(0, STICKERS_TO_DISPLAY);\n  }, [set]);\n\n  useEffect(() => {\n    // Featured stickers are initialized with one sticker in collection (cover of SickerSet)\n    if (!areStickersLoaded && displayedStickers.length < STICKERS_TO_DISPLAY && set) {\n      loadStickers({\n        stickerSetInfo: {\n          shortName: set.shortName,\n        },\n      });\n    }\n  }, [areStickersLoaded, displayedStickers.length, loadStickers, set, stickerSetId]);\n\n  const handleAddClick = useCallback(() => {\n    toggleStickerSet({ stickerSetId });\n  }, [toggleStickerSet, stickerSetId]);\n\n  const handleStickerClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({ stickerSetInfo: sticker.stickerSetInfo });\n  }, [openStickerSet]);\n\n  if (!set) {\n    return undefined;\n  }\n\n  const canRenderStickers = displayedStickers.length > 0;\n\n  return (\n    <div key={set.id} className=\"sticker-set\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <div className=\"sticker-set-header\">\n        <div className=\"title-wrapper\">\n          <h3 className=\"title\" dir=\"auto\">{set.title}</h3>\n          <p className=\"count\" dir=\"auto\">{lang('Stickers', set.count, 'i')}</p>\n        </div>\n        <Button\n          className={isAdded ? 'is-added' : undefined}\n          color=\"primary\"\n          size=\"tiny\"\n          pill\n          fluid\n          onClick={handleAddClick}\n        >\n          {lang(isAdded ? 'Stickers.Installed' : 'Stickers.Install')}\n        </Button>\n      </div>\n      <div className=\"sticker-set-main shared-canvas-container\">\n        <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n        {!canRenderStickers && <Spinner />}\n        {canRenderStickers && displayedStickers.map((sticker) => (\n          <StickerButton\n            sticker={sticker}\n            size={STICKER_SIZE_SEARCH}\n            observeIntersection={observeIntersection}\n            noPlay={!shouldPlay || isModalOpen}\n            clickArg={sticker}\n            onClick={handleStickerClick}\n            noContextMenu\n            isCurrentUserPremium={isCurrentUserPremium}\n            sharedCanvasRef={sharedCanvasRef}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { stickerSetId }): StateProps => {\n    return {\n      set: selectStickerSet(global, stickerSetId),\n      shouldPlay: selectShouldLoopStickers(global),\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(StickerSetResult));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectCurrentStickerSearch, selectTabState } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Loading from '../ui/Loading';\nimport StickerSetResult from './StickerSetResult';\n\nimport './StickerSearch.scss';\n\ntype OwnProps = {\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  query?: string;\n  featuredIds?: string[];\n  resultIds?: string[];\n  isModalOpen: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst StickerSearch: FC<OwnProps & StateProps> = ({\n  isActive,\n  query,\n  featuredIds,\n  resultIds,\n  isModalOpen,\n  onClose,\n}) => {\n  const { loadFeaturedStickers } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE });\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadFeaturedStickers();\n    });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function renderContent() {\n    if (query === undefined) {\n      return undefined;\n    }\n\n    if (!query && featuredIds) {\n      return featuredIds.map((id) => (\n        <StickerSetResult\n          key={id}\n          stickerSetId={id}\n          observeIntersection={observeIntersection}\n          isModalOpen={isModalOpen}\n        />\n      ));\n    }\n\n    if (resultIds) {\n      if (!resultIds.length) {\n        return <p className=\"helper-text\" dir=\"auto\">Nothing found.</p>;\n      }\n\n      return resultIds.map((id) => (\n        <StickerSetResult\n          key={id}\n          stickerSetId={id}\n          observeIntersection={observeIntersection}\n          isModalOpen={isModalOpen}\n        />\n      ));\n    }\n\n    return <Loading />;\n  }\n\n  return (\n    <div ref={containerRef} className=\"StickerSearch custom-scroll\" dir={lang.isRtl ? 'rtl' : undefined}>\n      {renderContent()}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const currentSearch = selectCurrentStickerSearch(global);\n    const { query, resultIds } = currentSearch || {};\n    const { featured } = global.stickers;\n\n    return {\n      query,\n      featuredIds: featured.setIds,\n      resultIds,\n      isModalOpen: Boolean(selectTabState(global).openedStickerSetShortName),\n    };\n  },\n)(StickerSearch));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useRef } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiChatFullInfo, ApiVideo } from '../../api/types';\nimport type { MessageList } from '../../types';\n\nimport { getAllowedAttachmentOptions, getCanPostInChat } from '../../global/helpers';\nimport {\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentGifSearch,\n  selectCurrentMessageList,\n  selectIsChatWithBot,\n  selectIsChatWithSelf, selectThreadInfo,\n  selectTopic,\n} from '../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useOldLang from '../../hooks/useOldLang';\nimport useSchedule from '../../hooks/useSchedule';\n\nimport GifButton from '../common/GifButton';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport Loading from '../ui/Loading';\n\nimport './GifSearch.scss';\n\ntype OwnProps = {\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  query?: string;\n  results?: ApiVideo[];\n  chat?: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  isChatWithBot?: boolean;\n  canScheduleUntilOnline?: boolean;\n  isSavedMessages?: boolean;\n  canPostInChat?: boolean;\n  currentMessageList?: MessageList;\n};\n\nconst PRELOAD_BACKWARDS = 96; // GIF Search bot results are multiplied by 24\nconst INTERSECTION_DEBOUNCE = 300;\n\nconst GifSearch: FC<OwnProps & StateProps> = ({\n  isActive,\n  query,\n  results,\n  chat,\n  chatFullInfo,\n  isChatWithBot,\n  canScheduleUntilOnline,\n  isSavedMessages,\n  canPostInChat,\n  currentMessageList,\n  onClose,\n}) => {\n  const {\n    searchMoreGifs,\n    sendMessage,\n    setGifSearchQuery,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, debounceMs: INTERSECTION_DEBOUNCE });\n\n  const canSendGifs = canPostInChat && getAllowedAttachmentOptions(chat, chatFullInfo, isChatWithBot).canSendGifs;\n\n  const handleGifClick = useCallback((gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => {\n    if (canSendGifs) {\n      if (!currentMessageList) {\n        return;\n      }\n\n      if (shouldSchedule) {\n        requestCalendar((scheduledAt) => {\n          sendMessage({\n            messageList: currentMessageList,\n            gif,\n            scheduledAt,\n            isSilent,\n          });\n        });\n      } else {\n        sendMessage({ messageList: currentMessageList, gif, isSilent });\n      }\n    }\n\n    if (IS_TOUCH_ENV) {\n      setGifSearchQuery({ query: undefined });\n    }\n  }, [canSendGifs, currentMessageList, requestCalendar]);\n\n  const handleSearchMoreGifs = useCallback(() => {\n    searchMoreGifs();\n  }, [searchMoreGifs]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function renderContent() {\n    if (query === undefined) {\n      return undefined;\n    }\n\n    if (!results) {\n      return (\n        <Loading />\n      );\n    }\n\n    if (!results.length) {\n      return (\n        <p className=\"helper-text\" dir=\"auto\">{lang('NoGIFsFound')}</p>\n      );\n    }\n\n    return results.map((gif) => (\n      <GifButton\n        key={gif.id}\n        gif={gif}\n        observeIntersection={observeIntersection}\n        onClick={canSendGifs ? handleGifClick : undefined}\n        isSavedMessages={isSavedMessages}\n      />\n    ));\n  }\n\n  const hasResults = Boolean(query !== undefined && results && results.length);\n\n  return (\n    <div className=\"GifSearch\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <InfiniteScroll\n        ref={containerRef}\n        className={buildClassName('gif-container custom-scroll', hasResults && 'grid')}\n        items={results}\n        itemSelector=\".GifButton\"\n        preloadBackwards={PRELOAD_BACKWARDS}\n        noFastList\n        onLoadMore={handleSearchMoreGifs}\n      >\n        {renderContent()}\n      </InfiniteScroll>\n      {calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const currentSearch = selectCurrentGifSearch(global);\n    const { query, results } = currentSearch || {};\n    const { chatId, threadId } = selectCurrentMessageList(global) || {};\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n    const isChatWithBot = chat ? selectIsChatWithBot(global, chat) : undefined;\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n    const threadInfo = chatId && threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const isMessageThread = Boolean(!threadInfo?.isCommentsInfo && threadInfo?.fromChannelId);\n    const topic = chatId && threadId ? selectTopic(global, chatId, threadId) : undefined;\n    const canPostInChat = Boolean(chat) && Boolean(threadId)\n      && getCanPostInChat(chat, topic, isMessageThread, chatFullInfo);\n\n    return {\n      query,\n      results,\n      chat,\n      isChatWithBot,\n      isSavedMessages,\n      canPostInChat,\n      canScheduleUntilOnline: Boolean(chatId) && selectCanScheduleUntilOnline(global, chatId),\n      currentMessageList: selectCurrentMessageList(global),\n    };\n  },\n)(GifSearch));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"OAKzmAva\",\"withImage\":\"BQ6HUOqN\",\"imageContainer\":\"TmJvv2A6\",\"image\":\"U96CW2I7\",\"round\":\"yxjDeIct\",\"circle\":\"cdfiLmXo\",\"withStoryCircle\":\"BOfHPv20\",\"summary\":\"vXi2JQlj\",\"title\":\"bi3fL59p\",\"info\":\"GUK4ajPK\",\"meta\":\"YH6jeZIh\",\"metaWithIcon\":\"q1LnuIUn\",\"metaIcon\":\"PJZzyVLK\",\"date\":\"C7NpG5Y9\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { StatisticsMessageInteractionCounter, StatisticsStoryInteractionCounter } from '../../../api/types';\n\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './StatisticsRecentPost.module.scss';\n\ninterface OwnProps {\n  postStatistic: StatisticsStoryInteractionCounter | StatisticsMessageInteractionCounter;\n}\n\nfunction StatisticsRecentPostMeta({ postStatistic }: OwnProps) {\n  const oldLang = useOldLang();\n  const lang = useLang();\n  return (\n    <div className={styles.meta}>\n      {postStatistic.reactionsCount > 0 && (\n        <span className={styles.metaWithIcon}>\n          <Icon name=\"heart-outline\" className={styles.metaIcon} />\n          {formatIntegerCompact(lang, postStatistic.reactionsCount)}\n        </span>\n      )}\n\n      {postStatistic.forwardsCount > 0 && (\n        <span className={styles.metaWithIcon}>\n          <Icon name=\"forward\" className={styles.metaIcon} />\n          {formatIntegerCompact(lang, postStatistic.forwardsCount)}\n        </span>\n      )}\n\n      {!postStatistic.forwardsCount && !postStatistic.reactionsCount\n        && oldLang('ChannelStats.SharesCount_ZeroValueHolder')}\n    </div>\n  );\n}\n\nexport default memo(StatisticsRecentPostMeta);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, StatisticsMessageInteractionCounter } from '../../../api/types';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\n\nimport {\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageVideo,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport StatisticsRecentPostMeta from './StatisticsRecentPostMeta';\n\nimport styles from './StatisticsRecentPost.module.scss';\n\nexport type OwnProps = {\n  postStatistic: StatisticsMessageInteractionCounter;\n  message: ApiMessage;\n};\n\nconst StatisticsRecentMessage: FC<OwnProps> = ({ postStatistic, message }) => {\n  const lang = useOldLang();\n  const { toggleMessageStatistics } = getActions();\n\n  const mediaThumbnail = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'micro'));\n  const isRoundVideo = Boolean(getMessageRoundVideo(message));\n\n  const handleClick = useCallback(() => {\n    toggleMessageStatistics({ messageId: message.id });\n  }, [toggleMessageStatistics, message.id]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        Boolean(mediaBlobUrl || mediaThumbnail) && styles.withImage,\n      )}\n      onClick={handleClick}\n    >\n      <div className={styles.title}>\n        <div className={styles.summary}>\n          {renderSummary(lang, message, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n        </div>\n        <div className={styles.meta}>\n          {lang('ChannelStats.ViewsCount', postStatistic.viewsCount, 'i')}\n        </div>\n      </div>\n\n      <div className={styles.info}>\n        <div className={styles.date}>\n          {formatDateTimeToString(message.date * 1000, lang.code)}\n        </div>\n        <StatisticsRecentPostMeta postStatistic={postStatistic} />\n      </div>\n    </div>\n  );\n};\n\nfunction renderSummary(lang: OldLangFn, message: ApiMessage, blobUrl?: string, isRoundVideo?: boolean) {\n  if (!blobUrl) {\n    return renderMessageSummary(lang, message);\n  }\n\n  return (\n    <span>\n      <img\n        src={blobUrl}\n        alt=\"\"\n        draggable={false}\n        className={buildClassName(styles.image, isRoundVideo && styles.round)}\n      />\n      {getMessageVideo(message) && <Icon name=\"play\" />}\n      {renderMessageSummary(lang, message, true)}\n    </span>\n  );\n}\n\nexport default memo(StatisticsRecentMessage);\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiTypeStory,\n  StatisticsStoryInteractionCounter,\n} from '../../../api/types';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport StatisticsRecentPostMeta from './StatisticsRecentPostMeta';\n\nimport styles from './StatisticsRecentPost.module.scss';\n\nexport type OwnProps = {\n  chat: ApiChat;\n  story?: ApiTypeStory;\n  postStatistic: StatisticsStoryInteractionCounter;\n};\n\nfunction StatisticsRecentStory({ chat, story, postStatistic }: OwnProps) {\n  const lang = useOldLang();\n  const { toggleStoryStatistics } = getActions();\n  const isLoaded = story && 'content' in story;\n\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const mediaThumbnail = imgBlobUrl || video?.thumbnail?.dataUri;\n\n  const handleClick = useLastCallback(() => {\n    toggleStoryStatistics({ storyId: postStatistic.storyId });\n  });\n\n  return (\n    <div\n      className={buildClassName(styles.root, styles.withImage)}\n      onClick={handleClick}\n    >\n      <div className={styles.title}>\n        <div className={styles.summary}>\n          {renderSummary(lang, chat, imgBlobUrl || mediaThumbnail)}\n        </div>\n        <div className={styles.meta}>\n          {lang('ChannelStats.ViewsCount', postStatistic.viewsCount, 'i')}\n        </div>\n      </div>\n\n      <div className={styles.info}>\n        <div className={styles.date}>\n          {isLoaded && Boolean(story.date) && formatDateTimeToString(story.date * 1000, lang.code)}\n        </div>\n        <StatisticsRecentPostMeta postStatistic={postStatistic} />\n      </div>\n    </div>\n  );\n}\n\nfunction renderSummary(lang: OldLangFn, chat: ApiChat, blobUrl?: string) {\n  return (\n    <span>\n      {blobUrl ? (\n        <span className={styles.imageContainer}>\n          <img\n            src={blobUrl}\n            alt=\"\"\n            draggable={false}\n            className={buildClassName(styles.image, styles.circle, styles.withStoryCircle)}\n          />\n        </span>\n      ) : (\n        <Avatar\n          peer={chat}\n          size=\"small\"\n          className={styles.image}\n          withStorySolid\n          forceUnreadStorySolid\n        />\n      )}\n\n      {lang('Story')}\n    </span>\n  );\n}\n\nexport default memo(StatisticsRecentStory);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"T1l_4J8z\",\"pie-slim-in\":\"EgyLOizu\",\"pieSlimIn\":\"EgyLOizu\",\"pie-slim-out\":\"TBiNdFb4\",\"pieSlimOut\":\"TBiNdFb4\",\"messages\":\"suY9dEIz\",\"publicForwards\":\"S1x1ovkC\",\"messages-title\":\"evQIkAqx\",\"messagesTitle\":\"evQIkAqx\",\"publicForwards-title\":\"WxL3i5PM\",\"publicForwardsTitle\":\"WxL3i5PM\",\"ready\":\"aUrozL5_\",\"graph\":\"QQHwjG88\",\"hidden\":\"QGctP1Nk\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChannelStatistics,\n  ApiChat,\n  ApiGroupStatistics,\n  ApiMessage,\n  ApiTypeStory,\n  StatisticsGraph,\n} from '../../../api/types';\n\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessages,\n  selectPeerStories,\n  selectStatistics,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Loading from '../../ui/Loading';\nimport StatisticsOverview from './StatisticsOverview';\nimport StatisticsRecentMessage from './StatisticsRecentMessage';\nimport StatisticsRecentStory from './StatisticsRecentStory';\n\nimport styles from './Statistics.module.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst CHANNEL_GRAPHS_TITLES = {\n  growthGraph: 'ChannelStats.Graph.Growth',\n  followersGraph: 'ChannelStats.Graph.Followers',\n  muteGraph: 'ChannelStats.Graph.Notifications',\n  topHoursGraph: 'ChannelStats.Graph.ViewsByHours',\n  viewsBySourceGraph: 'ChannelStats.Graph.ViewsBySource',\n  newFollowersBySourceGraph: 'ChannelStats.Graph.NewFollowersBySource',\n  languagesGraph: 'ChannelStats.Graph.Language',\n  interactionsGraph: 'ChannelStats.Graph.Interactions',\n  reactionsByEmotionGraph: 'ChannelStats.Graph.Reactions',\n  storyInteractionsGraph: 'ChannelStats.Graph.Stories',\n  storyReactionsByEmotionGraph: 'ChannelStats.Graph.StoriesReactions',\n};\nconst CHANNEL_GRAPHS = Object.keys(CHANNEL_GRAPHS_TITLES) as (keyof ApiChannelStatistics)[];\n\nconst GROUP_GRAPHS_TITLES = {\n  growthGraph: 'Stats.GroupGrowthTitle',\n  membersGraph: 'Stats.GroupMembersTitle',\n  languagesGraph: 'Stats.GroupLanguagesTitle',\n  messagesGraph: 'Stats.GroupMessagesTitle',\n  actionsGraph: 'Stats.GroupActionsTitle',\n  topHoursGraph: 'Stats.GroupTopHoursTitle',\n};\nconst GROUP_GRAPHS = Object.keys(GROUP_GRAPHS_TITLES) as (keyof ApiGroupStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n};\n\nexport type StateProps = {\n  chat?: ApiChat;\n  statistics: ApiChannelStatistics | ApiGroupStatistics;\n  dcId?: number;\n  isGroup: boolean;\n  messagesById: Record<string, ApiMessage>;\n  storiesById?: Record<string, ApiTypeStory>;\n};\n\nconst Statistics: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  statistics,\n  dcId,\n  isGroup,\n  messagesById,\n  storiesById,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadStatistics, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    loadStatistics({ chatId, isGroup });\n  }, [chatId, loadStatistics, isGroup]);\n\n  const graphs = useMemo(() => {\n    return isGroup ? GROUP_GRAPHS : CHANNEL_GRAPHS;\n  }, [isGroup]);\n\n  const graphTitles = useMemo(() => {\n    return isGroup ? GROUP_GRAPHS_TITLES : CHANNEL_GRAPHS_TITLES;\n  }, [isGroup]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    graphs.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({\n          name,\n          chatId,\n          token: graph,\n          // Hardcode percentage for languages graph, since API does not return `percentage` flag\n          isPercentage: name === 'languagesGraph',\n        });\n      }\n    });\n  }, [graphs, chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      graphs.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((graphTitles as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n\n        containerRef.current!.children[index].classList.remove(styles.hidden);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    graphs, graphTitles, isReady, statistics, lang, chatId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  return (\n    <div className={buildClassName(styles.root, 'panel-content custom-scroll', isReady && styles.ready)}>\n      {statistics && (\n        <StatisticsOverview\n          statistics={statistics}\n          type={isGroup ? 'group' : 'channel'}\n          title={lang('StatisticOverview')}\n        />\n      )}\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {graphs.map((graph) => (\n          <div key={graph} className={buildClassName(styles.graph, styles.hidden)} />\n        ))}\n      </div>\n\n      {Boolean((statistics as ApiChannelStatistics)?.recentPosts?.length) && (\n        <div className={styles.messages}>\n          <h2 className={styles.messagesTitle}>{lang('ChannelStats.Recent.Header')}</h2>\n\n          {(statistics as ApiChannelStatistics).recentPosts.map((postStatistic) => {\n            if ('msgId' in postStatistic) {\n              const message = messagesById[postStatistic.msgId];\n              if (!message || !('content' in message)) return undefined;\n\n              return (\n                <StatisticsRecentMessage\n                  key={`statistic_message_${postStatistic.msgId}`}\n                  message={message}\n                  postStatistic={postStatistic}\n                />\n              );\n            }\n\n            if ('storyId' in postStatistic && chat) {\n              const story = storiesById?.[postStatistic.storyId];\n\n              return (\n                <StatisticsRecentStory\n                  key={`statistic_story_${postStatistic.storyId}`}\n                  chat={chat}\n                  story={story}\n                  postStatistic={postStatistic}\n                />\n              );\n            }\n\n            return undefined;\n          })}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const statistics = selectStatistics(global, chatId);\n    const chat = selectChat(global, chatId);\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const isGroup = chat?.type === 'chatTypeSuperGroup';\n    const messagesById = selectChatMessages(global, chatId);\n    const storiesById = selectPeerStories(global, chatId)?.byId;\n\n    return {\n      statistics, dcId, isGroup, chat, messagesById, storiesById,\n    };\n  },\n)(Statistics));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"oXLpD4Y4\",\"title\":\"paQ2VBe_\",\"views\":\"WvFuOAIf\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessagePublicForward } from '../../../api/types';\n\nimport { getMainUsername } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\n\nimport styles from './StatisticsPublicForward.module.scss';\n\nexport type OwnProps = {\n  data: ApiMessagePublicForward;\n};\n\nconst StatisticsMessagePublicForward: FC<OwnProps> = ({ data }) => {\n  const lang = useOldLang();\n  const { openChatByUsername } = getActions();\n\n  const username = useMemo(() => (data.chat ? getMainUsername(data.chat) : undefined), [data.chat]);\n  const handleClick = useCallback(() => {\n    openChatByUsername({ username: username!, messageId: data.messageId });\n  }, [data.messageId, openChatByUsername, username]);\n\n  return (\n    <div className={buildClassName(styles.root, 'statistic-public-forward')} onClick={handleClick}>\n      <Avatar size=\"medium\" peer={data.chat} />\n\n      <div>\n        <div className={styles.title}>\n          {data.title}\n        </div>\n\n        <div className={styles.views}>\n          {lang('ChannelStats.ViewsCount', data.views, 'i')}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(StatisticsMessagePublicForward);\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiMessagePublicForward,\n  ApiPostStatistics,\n  StatisticsGraph,\n} from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { STATISTICS_PUBLIC_FORWARDS_LIMIT } from '../../../config';\nimport { selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport StatisticsMessagePublicForward from './StatisticsMessagePublicForward';\nimport StatisticsOverview from './StatisticsOverview';\n\nimport styles from './Statistics.module.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst GRAPH_TITLES = {\n  viewsGraph: 'Stats.MessageInteractionsTitle',\n  reactionsGraph: 'ReactionsByEmotionChartTitle',\n};\nconst GRAPHS = Object.keys(GRAPH_TITLES) as (keyof ApiPostStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n  isActive: boolean;\n};\n\nexport type StateProps = {\n  statistics?: ApiPostStatistics;\n  messageId?: number;\n  dcId?: number;\n};\n\nfunction Statistics({\n  chatId,\n  isActive,\n  statistics,\n  dcId,\n  messageId,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadMessageStatistics, loadMessagePublicForwards, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    if (messageId) {\n      loadMessageStatistics({ chatId, messageId });\n    }\n  }, [chatId, loadMessageStatistics, messageId]);\n\n  useEffect(() => {\n    if (!isActive || messageId) {\n      loadedCharts.current = [];\n      setIsReady(false);\n    }\n  }, [isActive, messageId]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    GRAPHS.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({ name, chatId, token: graph });\n      }\n    });\n  }, [chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      GRAPHS.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph as StatisticsGraph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((GRAPH_TITLES as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    isReady, statistics, lang, chatId, messageId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  const handleLoadMore = useLastCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards && messageId) {\n      loadMessagePublicForwards({ chatId, messageId });\n    }\n  });\n\n  if (!isReady || !statistics || !messageId) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, 'custom-scroll', isReady && styles.ready)}>\n      <StatisticsOverview statistics={statistics} type=\"message\" title={lang('StatisticOverview')} />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {GRAPHS.map((graph) => (\n          <div className={buildClassName(styles.graph, !loadedCharts.current.includes(graph) && styles.hidden)} />\n        ))}\n      </div>\n\n      {Boolean(statistics.publicForwards) && (\n        <div className={styles.publicForwards}>\n          <h2 className={styles.publicForwardsTitle}>{lang('Stats.Message.PublicShares')}</h2>\n\n          <InfiniteScroll\n            items={statistics.publicForwardsData}\n            itemSelector=\".statistic-public-forward\"\n            onLoadMore={handleLoadMore}\n            preloadBackwards={STATISTICS_PUBLIC_FORWARDS_LIMIT}\n            noFastList\n          >\n            {(statistics.publicForwardsData as ApiMessagePublicForward[]).map((item) => (\n              <StatisticsMessagePublicForward key={item.messageId} data={item} />\n            ))}\n          </InfiniteScroll>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const tabState = selectTabState(global);\n    const statistics = tabState.statistics.currentMessage;\n    const messageId = tabState.statistics.currentMessageId;\n\n    return { statistics, dcId, messageId };\n  },\n)(Statistics));\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiChat, ApiStoryPublicForward, ApiUser,\n} from '../../../api/types';\n\nimport { getChatTitle, getUserFullName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\n\nimport styles from './StatisticsPublicForward.module.scss';\n\nexport type OwnProps = {\n  data: ApiStoryPublicForward;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n};\n\nfunction StatisticsMessagePublicForward({ data, chatsById, usersById }: OwnProps) {\n  const lang = useOldLang();\n  const { openChat } = getActions();\n  const user = usersById[data.peerId];\n  const chat = chatsById[data.peerId];\n\n  const handleClick = useLastCallback(() => {\n    openChat({ id: user.id });\n  });\n\n  return (\n    <div className={buildClassName(styles.root, 'statistic-public-forward')} onClick={handleClick}>\n      <Avatar size=\"medium\" peer={user || chat} withStorySolid forceUnreadStorySolid />\n\n      <div>\n        <div className={styles.title}>\n          {user ? getUserFullName(user) : getChatTitle(lang, chat)}\n        </div>\n\n        <div className={styles.views}>\n          {data.viewsCount ? lang('ChannelStats.ViewsCount', data.viewsCount, 'i') : lang('NoViews')}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default memo(StatisticsMessagePublicForward);\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiPostStatistics,\n  ApiUser,\n  StatisticsGraph,\n} from '../../../api/types';\n\nimport { STATISTICS_PUBLIC_FORWARDS_LIMIT } from '../../../config';\nimport { selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport StatisticsMessagePublicForward from './StatisticsMessagePublicForward';\nimport StatisticsOverview from './StatisticsOverview';\nimport StatisticsStoryPublicForward from './StatisticsStoryPublicForward';\n\nimport styles from './Statistics.module.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst GRAPH_TITLES = {\n  viewsGraph: 'Stats.StoryInteractionsTitle',\n  reactionsGraph: 'ReactionsByEmotionChartTitle',\n};\nconst GRAPHS = Object.keys(GRAPH_TITLES) as (keyof ApiPostStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n  isActive: boolean;\n};\n\nexport type StateProps = {\n  statistics?: ApiPostStatistics;\n  storyId?: number;\n  dcId?: number;\n  chatsById: Record<string, ApiChat>;\n  usersById: Record<string, ApiUser>;\n};\n\nfunction StoryStatistics({\n  chatId,\n  isActive,\n  statistics,\n  dcId,\n  storyId,\n  chatsById,\n  usersById,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadStoryStatistics, loadStoryPublicForwards, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    if (storyId) {\n      loadStoryStatistics({ chatId, storyId });\n    }\n  }, [chatId, storyId]);\n\n  useEffect(() => {\n    if (!isActive || storyId) {\n      loadedCharts.current = [];\n      setIsReady(false);\n    }\n  }, [isActive, storyId]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    GRAPHS.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({ name, chatId, token: graph });\n      }\n    });\n  }, [chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      GRAPHS.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph as StatisticsGraph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((GRAPH_TITLES as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    isReady, statistics, lang, chatId, storyId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  const handleLoadMore = useLastCallback(() => {\n    if (!storyId) return;\n\n    loadStoryPublicForwards({ chatId, storyId });\n  });\n\n  if (!isReady || !statistics || !storyId) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, 'custom-scroll', isReady && styles.ready)}>\n      <StatisticsOverview statistics={statistics} type=\"story\" title={lang('StatisticOverview')} />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {GRAPHS.map((graph) => (\n          <div className={buildClassName(styles.graph, !loadedCharts.current.includes(graph) && styles.hidden)} />\n        ))}\n      </div>\n\n      {Boolean(statistics.publicForwards) && (\n        <div className={styles.publicForwards}>\n          <h2 className={styles.publicForwardsTitle}>{lang('Stats.Message.PublicShares')}</h2>\n\n          <InfiniteScroll\n            items={statistics.publicForwardsData}\n            itemSelector=\".statistic-public-forward\"\n            onLoadMore={handleLoadMore}\n            preloadBackwards={STATISTICS_PUBLIC_FORWARDS_LIMIT}\n            noFastList\n          >\n            {statistics.publicForwardsData!.map((item) => {\n              if ('messageId' in item) {\n                return (\n                  <StatisticsMessagePublicForward key={`message_${item.messageId}`} data={item} />\n                );\n              }\n\n              return (\n                <StatisticsStoryPublicForward\n                  key={`story_${item.storyId}`}\n                  data={item}\n                  chatsById={chatsById}\n                  usersById={usersById}\n                />\n              );\n            })}\n          </InfiniteScroll>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const tabState = selectTabState(global);\n    const statistics = tabState.statistics.currentStory;\n    const storyId = tabState.statistics.currentStoryId;\n    const { byId: usersById } = global.users;\n    const { byId: chatsById } = global.chats;\n\n    return {\n      statistics, dcId, storyId, usersById, chatsById,\n    };\n  },\n)(StoryStatistics));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat,\n  ApiMessage,\n  ApiPollAnswer,\n  ApiPollResult,\n} from '../../api/types';\n\nimport { isUserId } from '../../global/helpers';\nimport { selectTabState } from '../../global/selectors';\nimport { renderTextWithEntities } from '../common/helpers/renderTextWithEntities';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport GroupChatInfo from '../common/GroupChatInfo';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport ShowMoreButton from '../ui/ShowMoreButton';\n\nimport './PollAnswerResults.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  message: ApiMessage;\n  answer: ApiPollAnswer;\n  answerVote: ApiPollResult;\n  totalVoters: number;\n};\n\ntype StateProps = {\n  voters?: string[];\n  offset: string;\n};\n\nconst INITIAL_LIMIT = 4;\nconst VIEW_MORE_LIMIT = 50;\n\nconst PollAnswerResults: FC<OwnProps & StateProps> = ({\n  chat,\n  message,\n  answer,\n  answerVote,\n  totalVoters,\n  voters,\n  offset,\n}) => {\n  const {\n    loadPollOptionResults,\n    openChat,\n    closePollResults,\n  } = getActions();\n\n  const prevVotersCount = usePreviousDeprecated<number>(answerVote.votersCount);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const areVotersLoaded = Boolean(voters);\n  const { option, text } = answer;\n  const lang = useOldLang();\n\n  useEffect(() => {\n    // For update when new votes arrive or when the user takes back his vote\n    if (!areVotersLoaded || prevVotersCount !== answerVote.votersCount) {\n      loadPollOptionResults({\n        chat, messageId: message.id, option, offset, limit: INITIAL_LIMIT, shouldResetVoters: true,\n      });\n    }\n    // eslint-disable-next-line\n  }, [answerVote.votersCount, areVotersLoaded]);\n\n  const handleViewMoreClick = useCallback(() => {\n    setIsLoading(true);\n    loadPollOptionResults({\n      chat, messageId: message.id, option, offset, limit: VIEW_MORE_LIMIT,\n    });\n  }, [chat, loadPollOptionResults, message.id, offset, option]);\n\n  useEffect(() => {\n    setIsLoading(false);\n  }, [voters]);\n\n  const handleMemberClick = useCallback((id: string) => {\n    openChat({ id });\n    closePollResults();\n  }, [closePollResults, openChat]);\n\n  function renderViewMoreButton() {\n    const leftVotersCount = answerVote.votersCount - voters!.length;\n\n    return answerVote.votersCount > INITIAL_LIMIT && leftVotersCount > 0 && (\n      <ShowMoreButton\n        count={leftVotersCount}\n        itemName=\"voter\"\n        isLoading={isLoading}\n        onClick={handleViewMoreClick}\n      />\n    );\n  }\n\n  return (\n    <div className=\"PollAnswerResults\">\n      <div className=\"poll-voters\">\n        {voters\n          ? voters.map((id) => (\n            <ListItem\n              key={id}\n              className=\"chat-item-clickable\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleMemberClick(id)}\n            >\n              {isUserId(id) ? (\n                <PrivateChatInfo\n                  avatarSize=\"tiny\"\n                  userId={id}\n                  forceShowSelf\n                  noStatusOrTyping\n                />\n              ) : (\n                <GroupChatInfo\n                  avatarSize=\"tiny\"\n                  chatId={id}\n                  noStatusOrTyping\n                />\n              )}\n            </ListItem>\n          ))\n          : <Loading />}\n        {voters && renderViewMoreButton()}\n      </div>\n      <div className=\"answer-head\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <span className=\"answer-title\" dir=\"auto\">\n          {renderTextWithEntities({\n            text: text.text,\n            entities: text.entities,\n          })}\n        </span>\n        <span className=\"answer-percent\" dir={lang.isRtl ? 'auto' : undefined}>\n          {getPercentage(answerVote.votersCount, totalVoters)}%\n        </span>\n      </div>\n    </div>\n  );\n};\n\nfunction getPercentage(value: number, total: number) {\n  return total > 0 ? ((value / total) * 100).toFixed() : 0;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { answer }: OwnProps): StateProps => {\n    const { voters, offsets } = selectTabState(global).pollResults;\n\n    return {\n      voters: voters?.[answer.option],\n      offset: (offsets?.[answer.option]) || '',\n    };\n  },\n)(PollAnswerResults));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiMessage, ApiPoll } from '../../api/types';\n\nimport {\n  selectChat, selectChatMessage, selectPollFromMessage, selectTabState,\n} from '../../global/selectors';\nimport { buildCollectionByKey } from '../../util/iteratees';\nimport { renderTextWithEntities } from '../common/helpers/renderTextWithEntities';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Loading from '../ui/Loading';\nimport PollAnswerResults from './PollAnswerResults';\n\nimport './PollResults.scss';\n\ntype OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  message?: ApiMessage;\n  poll?: ApiPoll;\n};\n\nconst PollResults: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  message,\n  poll,\n  onClose,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  if (!message || !poll || !chat) {\n    return <Loading />;\n  }\n\n  const { summary, results } = poll;\n  if (!results.results) {\n    return undefined;\n  }\n\n  const resultsByOption = buildCollectionByKey(results.results, 'option');\n\n  return (\n    <div className=\"PollResults\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <h3 className=\"poll-question\" dir=\"auto\">\n        {renderTextWithEntities({\n          text: summary.question.text,\n          entities: summary.question.entities,\n        })}\n      </h3>\n      <div className=\"poll-results-list custom-scroll\">\n        {summary.answers.map((answer) => (\n          <PollAnswerResults\n            key={`${poll.id}-${answer.option}`}\n            chat={chat}\n            message={message}\n            answer={answer}\n            answerVote={resultsByOption[answer.option]}\n            totalVoters={results.totalVoters!}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const {\n      pollResults: { chatId, messageId },\n    } = selectTabState(global);\n\n    if (!chatId || !messageId) {\n      return {};\n    }\n\n    const chat = selectChat(global, chatId);\n    const message = selectChatMessage(global, chatId, messageId);\n    const poll = message && selectPollFromMessage(global, message);\n\n    return {\n      chat,\n      message,\n      poll,\n    };\n  },\n)(PollResults));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"xrnUE4e6\",\"content\":\"z7kF7tij\",\"section\":\"T6wFpdQO\",\"general\":\"YftUWqqw\",\"top\":\"CWsWIKQ1\",\"bottom\":\"KBl0ycLl\",\"iconWrapper\":\"iJ1U9kDD\",\"icon\":\"Rk6PT_yc\",\"clickable\":\"K1CTKtBS\",\"heading\":\"qlo3vSEw\",\"icon-picker\":\"r06zwL42\",\"iconPicker\":\"r06zwL42\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiSticker } from '../../api/types';\nimport type { TabState } from '../../global/types';\n\nimport { DEFAULT_TOPIC_ICON_STICKER_ID } from '../../config';\nimport { selectChat, selectIsCurrentUserPremium, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport cycleRestrict from '../../util/cycleRestrict';\nimport { getTopicColors } from '../../util/forumColors';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport CustomEmojiPicker from '../common/CustomEmojiPicker';\nimport Icon from '../common/icons/Icon';\nimport TopicIcon from '../common/TopicIcon';\nimport FloatingActionButton from '../ui/FloatingActionButton';\nimport InputText from '../ui/InputText';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\n\nimport styles from './ManageTopic.module.scss';\n\nconst ICON_SIZE = 5 * REM;\n\nexport type OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  createTopicPanel?: TabState['createTopicPanel'];\n  isCurrentUserPremium?: boolean;\n};\n\nconst CreateTopic: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  createTopicPanel,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { createTopic, openPremiumModal } = getActions();\n  const [title, setTitle] = useState('');\n  const [iconColorIndex, setIconColorIndex] = useState(0);\n  const [iconEmojiId, setIconEmojiId] = useState<string | undefined>(undefined);\n  const lang = useOldLang();\n\n  const isTouched = Boolean(title);\n  const isLoading = Boolean(createTopicPanel?.isLoading);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!isActive) {\n      setTitle('');\n      setIconEmojiId(undefined);\n    }\n  }, [isActive]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n  }, []);\n\n  const handleIconClick = useCallback(() => {\n    setIconColorIndex((prev) => cycleRestrict(getTopicColors().length, prev + 1));\n  }, []);\n\n  const handleCreateTopic = useCallback(() => {\n    createTopic({\n      chatId: chat!.id,\n      title,\n      iconColor: getTopicColors()[iconColorIndex],\n      iconEmojiId,\n    });\n  }, [chat, createTopic, iconColorIndex, iconEmojiId, title]);\n\n  const handleCustomEmojiSelect = useCallback((emoji: ApiSticker) => {\n    if (!emoji.isFree && !isCurrentUserPremium && emoji.id !== DEFAULT_TOPIC_ICON_STICKER_ID) {\n      openPremiumModal({ initialSection: 'animated_emoji' });\n      return;\n    }\n\n    if (emoji.id === DEFAULT_TOPIC_ICON_STICKER_ID) {\n      setIconEmojiId(undefined);\n      return;\n    }\n\n    setIconEmojiId(emoji.id);\n  }, [isCurrentUserPremium, openPremiumModal]);\n\n  const dummyTopic = useMemo(() => {\n    return {\n      id: 0,\n      title,\n      iconColor: getTopicColors()[iconColorIndex],\n      iconEmojiId,\n    };\n  }, [iconColorIndex, iconEmojiId, title]);\n\n  if (!chat?.isForum) {\n    return undefined;\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.content, 'custom-scroll')}>\n        <div className={buildClassName(styles.section, styles.top)}>\n          <span className={styles.heading}>{lang('CreateTopicTitle')}</span>\n          <Transition\n            name=\"zoomFade\"\n            activeKey={Number(dummyTopic.iconEmojiId) || 0}\n            shouldCleanup\n            direction={1}\n            className={styles.iconWrapper}\n          >\n            <TopicIcon\n              topic={dummyTopic}\n              className={buildClassName(styles.icon, styles.clickable)}\n              onClick={handleIconClick}\n              size={ICON_SIZE}\n              noLoopLimit\n            />\n          </Transition>\n          <InputText\n            value={title}\n            onChange={handleTitleChange}\n            label={lang('lng_forum_topic_title')}\n            disabled={isLoading}\n            teactExperimentControlled\n          />\n        </div>\n        <div className={buildClassName(styles.section, styles.bottom)}>\n          <CustomEmojiPicker\n            idPrefix=\"create-topic-icons-set-\"\n            isHidden={!isActive}\n            loadAndPlay={isActive}\n            onCustomEmojiSelect={handleCustomEmojiSelect}\n            className={styles.iconPicker}\n            pickerListClassName=\"fab-padding-bottom\"\n            withDefaultTopicIcons\n          />\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isTouched}\n        disabled={isLoading}\n        onClick={handleCreateTopic}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { createTopicPanel } = selectTabState(global);\n    return {\n      chat: createTopicPanel?.chatId ? selectChat(global, createTopicPanel.chatId) : undefined,\n      createTopicPanel,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(CreateTopic));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiSticker, ApiTopic } from '../../api/types';\nimport type { TabState } from '../../global/types';\n\nimport { DEFAULT_TOPIC_ICON_STICKER_ID, GENERAL_TOPIC_ID } from '../../config';\nimport {\n  selectChat, selectIsCurrentUserPremium, selectTabState, selectTopic,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport CustomEmojiPicker from '../common/CustomEmojiPicker';\nimport Icon from '../common/icons/Icon';\nimport TopicIcon from '../common/TopicIcon';\nimport FloatingActionButton from '../ui/FloatingActionButton';\nimport InputText from '../ui/InputText';\nimport Loading from '../ui/Loading';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\n\nimport styles from './ManageTopic.module.scss';\n\nconst ICON_SIZE = 5 * REM;\nconst RESET_ICON_ID = '0';\n\nexport type OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  topic?: ApiTopic;\n  editTopicPanel?: TabState['editTopicPanel'];\n  isCurrentUserPremium?: boolean;\n};\n\nconst EditTopic: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  topic,\n  editTopicPanel,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { editTopic, openPremiumModal } = getActions();\n  const [title, setTitle] = useState('');\n  const [iconEmojiId, setIconEmojiId] = useState<string | undefined>(undefined);\n  const lang = useOldLang();\n\n  const isLoading = Boolean(editTopicPanel?.isLoading);\n  const isGeneral = topic?.id === GENERAL_TOPIC_ID;\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!isActive) {\n      setTitle('');\n      setIconEmojiId(undefined);\n    }\n  }, [isActive]);\n\n  useEffect(() => {\n    if (topic?.title || topic?.iconEmojiId) {\n      setTitle(topic.title);\n      setIconEmojiId(topic.iconEmojiId);\n    }\n  }, [topic]);\n\n  const isTouched = useMemo(() => {\n    return title !== topic?.title || iconEmojiId !== topic?.iconEmojiId;\n  }, [iconEmojiId, title, topic?.iconEmojiId, topic?.title]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const newTitle = e.target.value;\n    setTitle(newTitle);\n  }, []);\n\n  const handleEditTopic = useCallback(() => {\n    editTopic({\n      chatId: chat!.id,\n      title,\n      topicId: topic!.id,\n      iconEmojiId,\n    });\n  }, [chat, editTopic, iconEmojiId, title, topic]);\n\n  const handleCustomEmojiSelect = useCallback((emoji: ApiSticker) => {\n    if (!emoji.isFree && !isCurrentUserPremium && emoji.id !== DEFAULT_TOPIC_ICON_STICKER_ID) {\n      openPremiumModal({ initialSection: 'animated_emoji' });\n      return;\n    }\n\n    if (emoji.id === DEFAULT_TOPIC_ICON_STICKER_ID) {\n      setIconEmojiId(RESET_ICON_ID);\n      return;\n    }\n\n    setIconEmojiId(emoji.id);\n  }, [isCurrentUserPremium, openPremiumModal]);\n\n  const dummyTopic = useMemo(() => {\n    return {\n      ...topic!,\n      title,\n      iconEmojiId,\n    };\n  }, [iconEmojiId, title, topic]);\n\n  if (!chat?.isForum) {\n    return undefined;\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.content, 'custom-scroll')}>\n        {!topic && <Loading />}\n        {topic && (\n          <>\n            <div className={buildClassName(styles.section, styles.top, isGeneral && styles.general)}>\n              <span className={styles.heading}>{lang(isGeneral ? 'CreateGeneralTopicTitle' : 'CreateTopicTitle')}</span>\n              <Transition\n                name=\"zoomFade\"\n                activeKey={Number(dummyTopic.iconEmojiId) || 0}\n                shouldCleanup\n                direction={1}\n                className={styles.iconWrapper}\n              >\n                <TopicIcon\n                  topic={dummyTopic}\n                  className={styles.icon}\n                  size={ICON_SIZE}\n                  noLoopLimit\n                />\n              </Transition>\n              <InputText\n                value={title}\n                onChange={handleTitleChange}\n                label={lang('lng_forum_topic_title')}\n                disabled={isLoading}\n                teactExperimentControlled\n              />\n            </div>\n            {!isGeneral && (\n              <div className={buildClassName(styles.section, styles.bottom)}>\n                <CustomEmojiPicker\n                  idPrefix=\"edit-topic-icons-set-\"\n                  isHidden={!isActive}\n                  loadAndPlay={isActive}\n                  onCustomEmojiSelect={handleCustomEmojiSelect}\n                  className={styles.iconPicker}\n                  pickerListClassName=\"fab-padding-bottom\"\n                  withDefaultTopicIcons\n                />\n              </div>\n            )}\n          </>\n        )}\n      </div>\n      <FloatingActionButton\n        isShown={isTouched}\n        disabled={isLoading}\n        onClick={handleEditTopic}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { editTopicPanel } = selectTabState(global);\n    const chat = editTopicPanel?.chatId ? selectChat(global, editTopicPanel.chatId) : undefined;\n    const topic = editTopicPanel?.chatId && editTopicPanel?.topicId\n      ? selectTopic(global, editTopicPanel.chatId, editTopicPanel.topicId) : undefined;\n\n    return {\n      chat,\n      topic,\n      editTopicPanel,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(EditTopic));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiBotInfo, ApiUser } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport {\n  getChatAvatarHash, getMainUsername, getUserFirstOrLastName,\n} from '../../../global/helpers';\nimport {\n  selectBot,\n  selectTabState,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\nimport Spinner from '../../ui/Spinner';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  userId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  userId?: string;\n  user?: ApiUser;\n  chatBot?: ApiBotInfo;\n  currentBio?: string;\n  progress?: ManagementProgress;\n  isMuted?: boolean;\n  maxBioLength: number;\n};\n\nconst ERROR_NAME_MISSING = 'Please provide name';\n\nconst ManageBot: FC<OwnProps & StateProps> = ({\n  userId,\n  user,\n  progress,\n  onClose,\n  currentBio,\n  isActive,\n  maxBioLength,\n}) => {\n  const {\n    setBotInfo,\n    uploadProfilePhoto,\n    uploadContactProfilePhoto,\n    startBotFatherConversation,\n  } = getActions();\n\n  const [isFieldTouched, markFieldTouched, unmarkProfileTouched] = useFlag(false);\n  const [isAvatarTouched, markAvatarTouched, unmarkAvatarTouched] = useFlag(false);\n  const [error, setError] = useState<string | undefined>();\n  const lang = useOldLang();\n\n  const username = useMemo(() => (user ? getMainUsername(user) : undefined), [user]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const currentName = user ? getUserFirstOrLastName(user) : '';\n\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [name, setName] = useState(currentName || '');\n  const [bio, setBio] = useState(currentBio || '');\n\n  const currentAvatarHash = user && getChatAvatarHash(user);\n  const currentAvatarBlobUrl = useMedia(currentAvatarHash, false, ApiMediaFormat.BlobUrl);\n\n  useEffect(() => {\n    unmarkProfileTouched();\n    unmarkAvatarTouched();\n  }, [userId]);\n\n  useEffect(() => {\n    setName(currentName || '');\n    setBio(currentBio || '');\n  }, [currentName, currentBio, user]);\n\n  useEffect(() => {\n    setPhoto(undefined);\n  }, [currentAvatarBlobUrl]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      unmarkProfileTouched();\n      unmarkAvatarTouched();\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handleNameChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setName(e.target.value);\n    markFieldTouched();\n\n    if (error === ERROR_NAME_MISSING) {\n      setError(undefined);\n    }\n  });\n\n  const handleBioChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setBio(e.target.value);\n    markFieldTouched();\n  });\n\n  const handlePhotoChange = useLastCallback((newPhoto: File) => {\n    setPhoto(newPhoto);\n    markAvatarTouched();\n  });\n\n  const handleProfileSave = useLastCallback(() => {\n    const trimmedName = name.trim();\n    const trimmedBio = bio.trim();\n\n    if (!trimmedName.length) {\n      setError(ERROR_NAME_MISSING);\n      return;\n    }\n\n    setBotInfo({\n      ...(isFieldTouched && {\n        bot: user,\n        name: trimmedName,\n        description: trimmedBio,\n      }),\n    });\n\n    if (photo) {\n      uploadProfilePhoto({\n        file: photo,\n        ...(isAvatarTouched && { bot: user }),\n      });\n    }\n  });\n\n  const handleChangeEditIntro = useLastCallback(() => {\n    startBotFatherConversation({ param: `${username}-intro` });\n  });\n\n  const handleChangeEditCommands = useLastCallback(() => {\n    startBotFatherConversation({ param: `${username}-commands` });\n  });\n\n  const handleChangeSettings = useLastCallback(() => {\n    startBotFatherConversation({ param: `${username}` });\n  });\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const isSuggestRef = useRef(false);\n\n  const handleSelectAvatar = useLastCallback((file: File) => {\n    markAvatarTouched();\n    uploadContactProfilePhoto({ userId, file, isSuggest: isSuggestRef.current });\n  });\n\n  if (!user) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handlePhotoChange}\n            title={lang('ChatSetPhotoOrVideo')}\n            disabled={isLoading}\n          />\n          <InputText\n            id=\"user-name\"\n            label={lang('PaymentCheckoutName')}\n            onChange={handleNameChange}\n            value={name}\n            error={error === ERROR_NAME_MISSING ? error : undefined}\n            teactExperimentControlled\n          />\n          <TextArea\n            value={bio}\n            onChange={handleBioChange}\n            label={lang('DescriptionPlaceholder')}\n            disabled={isLoading}\n            maxLength={maxBioLength}\n            maxLengthIndicator={maxBioLength ? (maxBioLength - bio.length).toString() : undefined}\n          />\n        </div>\n        <div className=\"section\">\n          <div className=\"dialog-buttons\">\n            <ListItem icon=\"bot-commands-filled\" ripple onClick={handleChangeEditIntro}>\n              <span>{lang('BotEditIntro')}</span>\n            </ListItem>\n            <ListItem icon=\"bot-command\" ripple onClick={handleChangeEditCommands}>\n              <span>{lang('BotEditCommands')}</span>\n            </ListItem>\n            <ListItem icon=\"bots\" ripple onClick={handleChangeSettings}>\n              <span>{lang('BotChangeSettings')}</span>\n            </ListItem>\n            <div className=\"section-info section-info_push\">\n              {renderText(lang('BotManageInfo'), ['links'])}\n            </div>\n          </div>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isFieldTouched || isAvatarTouched}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n      <SelectAvatar\n        onChange={handleSelectAvatar}\n        inputRef={inputRef}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectBot(global, userId);\n    const userFullInfo = selectUserFullInfo(global, userId);\n    const { progress } = selectTabState(global).management;\n    const maxBioLength = selectCurrentLimit(global, 'aboutLength');\n\n    return {\n      userId,\n      user,\n      progress,\n      currentBio: userFullInfo?.bio,\n      maxBioLength,\n    };\n  },\n)(ManageBot));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatFullInfo, ApiExportedInvite,\n} from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ManagementProgress, ManagementScreens } from '../../../types';\n\nimport { getChatAvatarHash, getHasAdminRight, isChatPublic } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { formatInteger } from '../../../util/textFormat';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  progress?: ManagementProgress;\n  canChangeInfo?: boolean;\n  canInvite?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst CHANNEL_TITLE_EMPTY = 'Channel title can\\'t be empty';\nconst CHANNEL_MAX_DESCRIPTION = 255;\n\nconst ManageChannel: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  chatFullInfo,\n  progress,\n  canChangeInfo,\n  canInvite,\n  exportedInvites,\n  isActive,\n  availableReactions,\n  onScreenSelect,\n  onClose,\n}) => {\n  const {\n    updateChat,\n    closeManagement,\n    leaveChannel,\n    deleteChannel,\n    openChat,\n    loadExportedChatInvites,\n    loadChatJoinRequests,\n  } = getActions();\n\n  const currentTitle = chat?.title || '';\n  const currentAbout = chatFullInfo?.about || '';\n  const hasLinkedChat = Boolean(chatFullInfo?.linkedChatId);\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [title, setTitle] = useState(currentTitle);\n  const [about, setAbout] = useState(currentAbout);\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n  const imageHash = chat && getChatAvatarHash(chat);\n  const currentAvatarBlobUrl = useMedia(imageHash, false, ApiMediaFormat.BlobUrl);\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!canInvite) return;\n    loadExportedChatInvites({ chatId });\n    loadExportedChatInvites({ chatId, isRevoked: true });\n    loadChatJoinRequests({ chatId });\n  }, [chatId, canInvite]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const adminsCount = useMemo(() => {\n    return Object.keys(chatFullInfo?.adminMembersById || {}).length;\n  }, [chatFullInfo?.adminMembersById]);\n  const removedUsersCount = chatFullInfo?.kickedMembers?.length || 0;\n\n  const handleClickEditType = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatPrivacyType);\n  }, [onScreenSelect]);\n\n  const handleClickDiscussion = useCallback(() => {\n    onScreenSelect(ManagementScreens.Discussion);\n  }, [onScreenSelect]);\n\n  const handleClickReactions = useCallback(() => {\n    onScreenSelect(ManagementScreens.Reactions);\n  }, [onScreenSelect]);\n\n  const handleClickAdministrators = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatAdministrators);\n  }, [onScreenSelect]);\n\n  const handleClickInvites = useCallback(() => {\n    onScreenSelect(ManagementScreens.Invites);\n  }, [onScreenSelect]);\n\n  const handleClickRequests = useCallback(() => {\n    onScreenSelect(ManagementScreens.JoinRequests);\n  }, [onScreenSelect]);\n\n  const handleSetPhoto = useCallback((file: File) => {\n    setPhoto(file);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleTitleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleAboutChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setAbout(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleUpdateChannel = useCallback(() => {\n    const trimmedTitle = title.trim();\n    const trimmedAbout = about.trim();\n\n    if (!trimmedTitle.length) {\n      setError(CHANNEL_TITLE_EMPTY);\n      return;\n    }\n\n    updateChat({\n      chatId,\n      title: trimmedTitle,\n      about: trimmedAbout,\n      photo,\n    });\n  }, [about, chatId, photo, title, updateChat]);\n\n  const handleClickSubscribers = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChannelSubscribers);\n  }, [onScreenSelect]);\n\n  const handleRemovedUsersClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChannelRemovedUsers);\n  }, [onScreenSelect]);\n\n  const handleDeleteChannel = useCallback(() => {\n    if (chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    } else {\n      leaveChannel({ chatId: chat.id });\n    }\n\n    closeDeleteDialog();\n    closeManagement();\n    openChat({ id: undefined });\n  }, [chat.isCreator, chat.id, closeDeleteDialog, closeManagement, leaveChannel, deleteChannel, openChat]);\n\n  const chatReactionsDescription = useMemo(() => {\n    if (!chatFullInfo?.enabledReactions) {\n      return lang('ReactionsOff');\n    }\n\n    if (chatFullInfo.enabledReactions.type === 'all') {\n      return lang('ReactionsAll');\n    }\n\n    const enabledLength = chatFullInfo.enabledReactions.allowed.length;\n    const totalLength = availableReactions?.filter((reaction) => !reaction.isInactive).length || 0;\n\n    return totalLength ? `${enabledLength} / ${totalLength}` : `${enabledLength}`;\n  }, [availableReactions, chatFullInfo?.enabledReactions, lang]);\n  const isChannelPublic = useMemo(() => isChatPublic(chat), [chat]);\n\n  if (chat.isRestricted || chat.isForbidden) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"panel-content custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handleSetPhoto}\n            disabled={!canChangeInfo}\n          />\n          <div className=\"settings-edit\">\n            <InputText\n              id=\"channel-title\"\n              label={lang('EnterChannelName')}\n              onChange={handleTitleChange}\n              value={title}\n              error={error === CHANNEL_TITLE_EMPTY ? error : undefined}\n              disabled={!canChangeInfo}\n            />\n            <TextArea\n              id=\"channel-about\"\n              label={lang('DescriptionPlaceholder')}\n              onChange={handleAboutChange}\n              value={about}\n              maxLength={CHANNEL_MAX_DESCRIPTION}\n              maxLengthIndicator={(CHANNEL_MAX_DESCRIPTION - about.length).toString()}\n              disabled={!canChangeInfo}\n              noReplaceNewlines\n            />\n          </div>\n          {chat.isCreator && (\n            <ListItem icon=\"lock\" multiline onClick={handleClickEditType}>\n              <span className=\"title\">{lang('ChannelType')}</span>\n              <span className=\"subtitle\">{isChannelPublic ? lang('TypePublic') : lang('TypePrivate')}</span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"message\"\n            multiline\n            onClick={handleClickDiscussion}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Discussion')}</span>\n            <span className=\"subtitle\">{hasLinkedChat ? lang('DiscussionUnlink') : lang('Add')}</span>\n          </ListItem>\n          {canInvite && (\n            <ListItem\n              icon=\"link\"\n              onClick={handleClickInvites}\n              multiline\n              disabled={!exportedInvites}\n            >\n              <span className=\"title\">{lang('GroupInfo.InviteLinks')}</span>\n              <span className=\"subtitle\">\n                {exportedInvites ? formatInteger(exportedInvites.length) : lang('Loading')}\n              </span>\n            </ListItem>\n          )}\n          {Boolean(chat.joinRequests?.length) && (\n            <ListItem\n              icon=\"add-user-filled\"\n              onClick={handleClickRequests}\n              multiline\n            >\n              <span className=\"title\">{lang('SubscribeRequests')}</span>\n              <span className=\"subtitle\">\n                {formatInteger(chat.joinRequests!.length)}\n              </span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"heart-outline\"\n            multiline\n            onClick={handleClickReactions}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Reactions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {chatReactionsDescription}\n            </span>\n          </ListItem>\n        </div>\n        <div className=\"section\">\n          <ListItem\n            icon=\"admin\"\n            multiline\n            onClick={handleClickAdministrators}\n          >\n            <span className=\"title\">{lang('ChannelAdministrators')}</span>\n            <span className=\"subtitle\">{adminsCount}</span>\n          </ListItem>\n          <ListItem\n            icon=\"group\"\n            multiline\n            onClick={handleClickSubscribers}\n          >\n            <span className=\"title\" dir=\"auto\">{lang('ChannelSubscribers')}</span>\n            <span className=\"subtitle\" dir=\"auto\">{formatInteger(chat.membersCount!)}</span>\n          </ListItem>\n          <ListItem\n            icon=\"delete-user\"\n            multiline\n            onClick={handleRemovedUsersClick}\n          >\n            <span className=\"title\">{lang('ChannelBlockedUsers')}</span>\n            <span className=\"subtitle\">{removedUsersCount}</span>\n          </ListItem>\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {chat.isCreator ? lang('ChannelDelete') : lang('LeaveChannel')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleUpdateChannel}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        text={chat.isCreator ? lang('ChannelDeleteAlert') : lang('ChannelLeaveAlert')}\n        confirmLabel={chat.isCreator ? lang('ChannelDelete') : lang('LeaveChannel')}\n        confirmHandler={handleDeleteChannel}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { management } = selectTabState(global);\n    const { progress } = management;\n    const { invites } = management.byChatId[chatId] || {};\n\n    return {\n      chat,\n      chatFullInfo: selectChatFullInfo(global, chatId),\n      progress,\n      canChangeInfo: getHasAdminRight(chat, 'changeInfo'),\n      canInvite: getHasAdminRight(chat, 'inviteUsers'),\n      exportedInvites: invites,\n      availableReactions: global.reactions.availableReactions,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageChannel));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { getHasAdminRight, getUserFullName, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { partition } from '../../../util/iteratees';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  isActive: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentUserId?: string;\n  isChannel?: boolean;\n  adminMembersById?: Record<string, ApiChatMember>;\n};\n\nconst ManageChatAdministrators: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  isChannel,\n  currentUserId,\n  adminMembersById,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n}) => {\n  const { toggleSignatures } = getActions();\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const areSignaturesEnabled = Boolean(chat?.areSignaturesShown);\n  const areProfilesEnabled = Boolean(chat?.areProfilesShown);\n\n  const canAddNewAdmins = Boolean(chat?.isCreator || (chat && getHasAdminRight(chat, 'addAdmins')));\n  const canToggleSignatures = isChannel && getHasAdminRight(chat!, 'postMessages');\n\n  const adminMembers = useMemo(() => {\n    if (!adminMembersById) {\n      return [];\n    }\n\n    const [owner, admins] = partition(Object.values(adminMembersById), (member) => member.isOwner);\n\n    return [...owner, ...admins];\n  }, [adminMembersById]);\n\n  const handleAdminMemberClick = useLastCallback((member: ApiChatMember) => {\n    onChatMemberSelect(member.userId, member.promotedByUserId === currentUserId);\n    onScreenSelect(ManagementScreens.ChatAdminRights);\n  });\n\n  const handleToggleSignatures = useLastCallback(() => {\n    toggleSignatures({\n      chatId: chat!.id,\n      areProfilesEnabled,\n      areSignaturesEnabled: !areSignaturesEnabled,\n    });\n  });\n\n  const handleToggleProfiles = useLastCallback(() => {\n    toggleSignatures({\n      chatId: chat!.id,\n      areProfilesEnabled: !areProfilesEnabled,\n      areSignaturesEnabled,\n    });\n  });\n\n  const handleAddAdminClick = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.GroupAddAdmins);\n  });\n\n  const getMemberStatus = useLastCallback((member: ApiChatMember) => {\n    if (member.isOwner) {\n      return lang('ChannelCreator');\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const promotedByUser = member.promotedByUserId ? usersById[member.promotedByUserId] : undefined;\n\n    if (promotedByUser) {\n      return lang('EditAdminPromotedBy', getUserFullName(promotedByUser));\n    }\n\n    return lang('ChannelAdmin');\n  });\n\n  return (\n    <div className=\"Management\">\n      <div className=\"panel-content custom-scroll\">\n        <div className=\"section\">\n          <ListItem\n            icon=\"recent\"\n            multiline\n            disabled\n          >\n            <span className=\"title\">{lang('EventLog')}</span>\n            <span className=\"subtitle\">{lang(isChannel ? 'EventLogInfoDetailChannel' : 'EventLogInfoDetail')}</span>\n          </ListItem>\n        </div>\n\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <p className=\"section-help\" dir=\"auto\">\n            {lang(isChannel\n              ? 'Channel.Management.AddModeratorHelp'\n              : 'Group.Management.AddModeratorHelp')}\n          </p>\n\n          {adminMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleAdminMemberClick(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getMemberStatus(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n\n          <FloatingActionButton\n            isShown={canAddNewAdmins}\n            onClick={handleAddAdminClick}\n            ariaLabel={lang('Channel.Management.AddModerator')}\n          >\n            <Icon name=\"add-user-filled\" />\n          </FloatingActionButton>\n        </div>\n\n        {canToggleSignatures && (\n          <div className=\"section\">\n            <div className=\"ListItem narrow\">\n              <Checkbox\n                checked={areSignaturesEnabled}\n                label={lang('ChannelSignMessages')}\n                onChange={handleToggleSignatures}\n              />\n            </div>\n            {areSignaturesEnabled && (\n              <>\n                <div className=\"ListItem narrow\">\n                  <Checkbox\n                    checked={areProfilesEnabled}\n                    label={lang('ChannelSignMessagesWithProfile')}\n                    onChange={handleToggleProfiles}\n                  />\n                </div>\n                <p className=\"section-info section-info_push\">\n                  {lang('ChannelSignProfilesInfo')}\n                </p>\n              </>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    return {\n      chat,\n      currentUserId: global.currentUserId,\n      isChannel: chat && isChatChannel(chat),\n      adminMembersById: selectChatFullInfo(global, chatId)?.adminMembersById,\n    };\n  },\n)(ManageChatAdministrators));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport { PURCHASE_USERNAME, TME_LINK_PREFIX, USERNAME_PURCHASE_ERROR } from '../../../config';\nimport { isChatChannel, isChatPublic } from '../../../global/helpers';\nimport {\n  selectChat, selectChatFullInfo,\n  selectManagement, selectTabState,\n} from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport Icon from '../../common/icons/Icon';\nimport LinkField from '../../common/LinkField';\nimport ManageUsernames from '../../common/ManageUsernames';\nimport SafeLink from '../../common/SafeLink';\nimport UsernameInput from '../../common/UsernameInput';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport RadioGroup from '../../ui/RadioGroup';\nimport Spinner from '../../ui/Spinner';\n\ntype PrivacyType = 'private' | 'public';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  isChannel: boolean;\n  progress?: ManagementProgress;\n  isUsernameAvailable?: boolean;\n  checkedUsername?: string;\n  error?: string;\n  isProtected?: boolean;\n  maxPublicLinks: number;\n  privateInviteLink?: string;\n};\n\nconst ManageChatPrivacyType: FC<OwnProps & StateProps> = ({\n  chat,\n  isActive,\n  isChannel,\n  progress,\n  isUsernameAvailable,\n  checkedUsername,\n  error,\n  isProtected,\n  maxPublicLinks,\n  privateInviteLink,\n  onClose,\n}) => {\n  const {\n    updatePublicLink,\n    updatePrivateLink,\n    toggleIsProtected,\n    openLimitReachedModal,\n    resetManagementError,\n  } = getActions();\n\n  const firstEditableUsername = useMemo(() => chat.usernames?.find(({ isEditable }) => isEditable), [chat.usernames]);\n  const currentUsername = firstEditableUsername?.username || '';\n  const isPublic = useMemo(() => isChatPublic(chat), [chat]);\n\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [privacyType, setPrivacyType] = useState<PrivacyType>(isPublic ? 'public' : 'private');\n  const [editableUsername, setEditableUsername] = useState<string>();\n  const [isRevokeConfirmDialogOpen, openRevokeConfirmDialog, closeRevokeConfirmDialog] = useFlag();\n  const [isUsernameLostDialogOpen, openUsernameLostDialog, closeUsernameLostDialog] = useFlag();\n\n  const previousIsUsernameAvailable = usePreviousDeprecated(isUsernameAvailable);\n  const renderingIsUsernameAvailable = isUsernameAvailable ?? previousIsUsernameAvailable;\n\n  const canUpdate = isProfileFieldsTouched && Boolean(\n    (privacyType === 'public'\n      && (editableUsername || (currentUsername && editableUsername === ''))\n      && renderingIsUsernameAvailable)\n    || (privacyType === 'private' && isPublic),\n  );\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    setIsProfileFieldsTouched(false);\n  }, [currentUsername]);\n\n  useEffect(() => {\n    if (privacyType && !privateInviteLink) {\n      updatePrivateLink();\n    }\n  }, [privacyType, privateInviteLink, updatePrivateLink]);\n\n  const handleUsernameChange = useCallback((value: string) => {\n    setEditableUsername(value);\n    setIsProfileFieldsTouched(true);\n\n    if (error) {\n      resetManagementError({\n        chatId: chat.id,\n      });\n    }\n  }, [chat.id, error]);\n\n  const handleOptionChange = useCallback((value: string, e: ChangeEvent<HTMLInputElement>) => {\n    const myChats = Object.values(getGlobal().chats.byId)\n      .filter(({ isCreator, usernames }) => isCreator && usernames?.some((c) => c.isActive));\n\n    if (myChats.length >= maxPublicLinks && value === 'public') {\n      openLimitReachedModal({ limit: 'channelsPublic' });\n      const radioGroup = e.currentTarget.closest('.radio-group') as HTMLDivElement;\n      // Patch for Teact bug with controlled inputs\n      // TODO Teact support added, this can now be removed\n      (radioGroup.querySelector('[value=public]') as HTMLInputElement).checked = false;\n      (radioGroup.querySelector('[value=private]') as HTMLInputElement).checked = true;\n      return;\n    }\n    setPrivacyType(value as PrivacyType);\n    setIsProfileFieldsTouched(true);\n  }, [maxPublicLinks, openLimitReachedModal]);\n\n  const handleForwardingOptionChange = useCallback((value: string) => {\n    toggleIsProtected({\n      chatId: chat.id,\n      isProtected: value === 'protected',\n    });\n  }, [chat.id, toggleIsProtected]);\n\n  const handleSave = useCallback(() => {\n    if (isPublic && privacyType === 'private') {\n      openUsernameLostDialog();\n    } else {\n      updatePublicLink({ username: privacyType === 'public' ? (editableUsername || '') : '' });\n    }\n  }, [isPublic, openUsernameLostDialog, privacyType, updatePublicLink, editableUsername]);\n\n  const handleMakeChannelPrivateConfirm = useCallback(() => {\n    updatePublicLink({ username: '', shouldDisableUsernames: true });\n    closeUsernameLostDialog();\n  }, [closeUsernameLostDialog, updatePublicLink]);\n\n  const handleRevokePrivateLink = useCallback(() => {\n    closeRevokeConfirmDialog();\n    updatePrivateLink();\n  }, [closeRevokeConfirmDialog, updatePrivateLink]);\n\n  const lang = useOldLang();\n  const langPrefix1 = isChannel ? 'Channel' : 'Mega';\n  const langPrefix2 = isChannel ? 'Channel' : 'Group';\n\n  const options = [\n    { value: 'private', label: lang(`${langPrefix1}Private`), subLabel: lang(`${langPrefix1}PrivateInfo`) },\n    { value: 'public', label: lang(`${langPrefix1}Public`), subLabel: lang(`${langPrefix1}PublicInfo`) },\n  ];\n\n  const forwardingOptions = [{\n    value: 'allowed',\n    label: lang('ChannelVisibility.Forwarding.Enabled'),\n  }, {\n    value: 'protected',\n    label: lang('ChannelVisibility.Forwarding.Disabled'),\n  }];\n\n  const isLoading = progress === ManagementProgress.InProgress;\n  const shouldRenderUsernamesManage = privacyType === 'public' && chat.usernames && chat.usernames.length > 0;\n\n  function renderPurchaseLink() {\n    const purchaseInfoLink = `${TME_LINK_PREFIX}${PURCHASE_USERNAME}`;\n\n    return (\n      <p className=\"section-info\" dir=\"auto\">\n        {(lang('lng_username_purchase_available') as string)\n          .replace('{link}', '%PURCHASE_LINK%')\n          .split('%')\n          .map((s) => {\n            return (s === 'PURCHASE_LINK' ? <SafeLink url={purchaseInfoLink} text={`@${PURCHASE_USERNAME}`} /> : s);\n          })}\n      </p>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"panel-content custom-scroll\">\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <h3 className=\"section-heading\">{lang(`${langPrefix2}Type`)}</h3>\n          <RadioGroup\n            selected={privacyType}\n            name=\"channel-type\"\n            options={options}\n            onChange={handleOptionChange}\n          />\n        </div>\n        {privacyType === 'private' ? (\n          <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {privateInviteLink ? (\n              <>\n                <LinkField link={privateInviteLink} className=\"invite-link\" />\n                <p className=\"section-info\" dir={lang.isRtl ? 'rtl' : undefined}>\n                  {lang(`${langPrefix1}PrivateLinkHelp`)}\n                </p>\n\n                <ListItem icon=\"delete\" ripple destructive onClick={openRevokeConfirmDialog}>\n                  {lang('RevokeLink')}\n                </ListItem>\n                <ConfirmDialog\n                  isOpen={isRevokeConfirmDialogOpen}\n                  onClose={closeRevokeConfirmDialog}\n                  text={lang('RevokeAlert')}\n                  confirmLabel={lang('RevokeButton')}\n                  confirmHandler={handleRevokePrivateLink}\n                  confirmIsDestructive\n                />\n              </>\n            ) : (\n              <Loading />\n            )}\n          </div>\n        ) : (\n          <div className=\"section no-border\">\n            <div className=\"settings-input\">\n              <UsernameInput\n                asLink\n                currentUsername={currentUsername}\n                isLoading={isLoading}\n                isUsernameAvailable={isUsernameAvailable}\n                checkedUsername={checkedUsername}\n                onChange={handleUsernameChange}\n              />\n            </div>\n            {error === USERNAME_PURCHASE_ERROR && renderPurchaseLink()}\n            <p className=\"section-info\" dir=\"auto\">\n              {lang(`${langPrefix2}.Username.CreatePublicLinkHelp`)}\n            </p>\n          </div>\n        )}\n        {shouldRenderUsernamesManage && (\n          <ManageUsernames\n            chatId={chat.id}\n            usernames={chat.usernames!}\n            onEditUsername={handleUsernameChange}\n          />\n        )}\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <h3 className=\"section-heading\">\n            {lang(isChannel ? 'ChannelVisibility.Forwarding.ChannelTitle' : 'ChannelVisibility.Forwarding.GroupTitle')}\n          </h3>\n          <RadioGroup\n            selected={isProtected ? 'protected' : 'allowed'}\n            name=\"forwarding-type\"\n            options={forwardingOptions}\n            onChange={handleForwardingOptionChange}\n          />\n          <p className=\"section-info section-info_push\">\n            {isChannel\n              ? lang('ChannelVisibility.Forwarding.ChannelInfo')\n              : lang('ChannelVisibility.Forwarding.GroupInfo')}\n          </p>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={canUpdate}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n        onClick={handleSave}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isUsernameLostDialogOpen}\n        onClose={closeUsernameLostDialog}\n        text={lang('ChannelVisibility.Confirm.MakePrivate.Channel', currentUsername)}\n        confirmHandler={handleMakeChannelPrivateConfirm}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { isUsernameAvailable, checkedUsername, error } = selectManagement(global, chatId)!;\n\n    return {\n      chat,\n      isChannel: isChatChannel(chat),\n      progress: selectTabState(global).management.progress,\n      error,\n      isUsernameAvailable,\n      checkedUsername,\n      isProtected: chat?.isProtected,\n      maxPublicLinks: selectCurrentLimit(global, 'channelsPublic'),\n      privateInviteLink: selectChatFullInfo(global, chatId)?.inviteLink,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId) && selectManagement(global, chatId));\n  },\n)(ManageChatPrivacyType));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember } from '../../../api/types';\n\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectChatFullInfo } from '../../../global/selectors';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ChatOrUserPicker from '../../common/pickers/ChatOrUserPicker';\n\nexport type OwnProps = {\n  chat: ApiChat;\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  chatMembers?: ApiChatMember[];\n};\n\nconst RemoveGroupUserModal: FC<OwnProps & StateProps> = ({\n  chat,\n  currentUserId,\n  chatMembers,\n  isOpen,\n  onClose,\n}) => {\n  const {\n    loadMoreMembers,\n    deleteChatMember,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [search, setSearch] = useState('');\n\n  const usersId = useMemo(() => {\n    const availableMemberIds = (chatMembers || [])\n      .reduce((acc: string[], member) => {\n        if (!member.isAdmin && !member.isOwner && member.userId !== currentUserId) {\n          acc.push(member.userId);\n        }\n        return acc;\n      }, []);\n\n    return filterPeersByQuery({ ids: availableMemberIds, query: search, type: 'user' });\n  }, [chatMembers, currentUserId, search]);\n\n  const handleRemoveUser = useCallback((userId: string) => {\n    deleteChatMember({ chatId: chat.id, userId });\n    onClose();\n  }, [chat.id, deleteChatMember, onClose]);\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      chatOrUserIds={usersId}\n      searchPlaceholder={lang('ChannelBlockUser')}\n      search={search}\n      onSearchChange={setSearch}\n      loadMore={loadMoreMembers}\n      onSelectChatOrUser={handleRemoveUser}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat }): StateProps => {\n    const { currentUserId } = global;\n\n    return {\n      currentUserId,\n      chatMembers: selectChatFullInfo(global, chat.id)?.members,\n    };\n  },\n)(RemoveGroupUserModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember, ApiUser } from '../../../api/types';\n\nimport { getHasAdminRight, getUserFullName, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\nimport RemoveGroupUserModal from './RemoveGroupUserModal';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  usersById: Record<string, ApiUser>;\n  removedMembers: ApiChatMember[];\n  canDeleteMembers?: boolean;\n  isChannel?: boolean;\n};\n\nconst ManageChatRemovedUsers: FC<OwnProps & StateProps> = ({\n  chat,\n  usersById,\n  canDeleteMembers,\n  removedMembers,\n  isChannel,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatMemberBannedRights } = getActions();\n\n  const lang = useOldLang();\n  const [isRemoveUserModalOpen, openRemoveUserModal, closeRemoveUserModal] = useFlag();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const getRemovedBy = useCallback((member: ApiChatMember) => {\n    if (!member.kickedByUserId) {\n      return undefined;\n    }\n\n    const kickedByUser = usersById[member.kickedByUserId];\n    if (!kickedByUser) {\n      return undefined;\n    }\n\n    return lang('UserRemovedBy', getUserFullName(kickedByUser));\n  }, [lang, usersById]);\n\n  const getContextActions = useCallback((member: ApiChatMember): MenuItemContextAction[] | undefined => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return [{\n      title: lang('Unblock'),\n      icon: 'delete',\n      destructive: true,\n      handler: () => updateChatMemberBannedRights({\n        chatId: chat.id,\n        userId: member.userId,\n        bannedRights: {},\n      }),\n    }];\n  }, [lang, chat, updateChatMemberBannedRights]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"panel-content custom-scroll\">\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <p className=\"section-help\">{lang(isChannel ? 'NoBlockedChannel2' : 'NoBlockedGroup2')}</p>\n\n          {removedMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable\"\n              ripple\n              contextActions={getContextActions(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getRemovedBy(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n          {canDeleteMembers && (\n            <FloatingActionButton\n              isShown\n              onClick={openRemoveUserModal}\n              ariaLabel={lang('Channel.EditAdmin.Permission.BanUsers')}\n            >\n              <Icon name=\"add-user-filled\" />\n            </FloatingActionButton>\n          )}\n          {chat && canDeleteMembers && (\n            <RemoveGroupUserModal\n              chat={chat}\n              isOpen={isRemoveUserModalOpen}\n              onClose={closeRemoveUserModal}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { byId: usersById } = global.users;\n    const canDeleteMembers = chat && (getHasAdminRight(chat, 'banUsers') || chat.isCreator);\n\n    return {\n      chat,\n      usersById,\n      canDeleteMembers,\n      removedMembers: selectChatFullInfo(global, chatId)?.kickedMembers || MEMO_EMPTY_ARRAY,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageChatRemovedUsers));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { STICKER_SIZE_DISCUSSION_GROUPS } from '../../../config';\nimport { isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport Avatar from '../../common/Avatar';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport NothingFound from '../../common/NothingFound';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  chatsByIds: Record<string, ApiChat>;\n  linkedChat?: ApiChat;\n  forDiscussionIds?: string[];\n  isChannel?: boolean;\n};\n\nconst ManageDiscussion: FC<OwnProps & StateProps> = ({\n  chat,\n  onClose,\n  isActive,\n  chatId,\n  chatsByIds,\n  linkedChat,\n  forDiscussionIds,\n  isChannel,\n  onScreenSelect,\n}) => {\n  const {\n    loadGroupsForDiscussion,\n    linkDiscussionGroup,\n    unlinkDiscussionGroup,\n    toggleJoinRequest,\n    toggleJoinToSend,\n  } = getActions();\n\n  const [linkedGroupId, setLinkedGroupId] = useState<string>();\n  const [isConfirmUnlinkGroupDialogOpen, openConfirmUnlinkGroupDialog, closeConfirmUnlinkGroupDialog] = useFlag();\n  const [isConfirmLinkGroupDialogOpen, openConfirmLinkGroupDialog, closeConfirmLinkGroupDialog] = useFlag();\n  const [isJoinToSend, setIsJoinToSend] = useState(Boolean(linkedChat?.isJoinToSend));\n  const [isJoinRequest, setIsJoinRequest] = useState(Boolean(linkedChat?.isJoinRequest));\n  const lang = useOldLang();\n  const linkedChatId = linkedChat?.id;\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    loadGroupsForDiscussion();\n  }, [loadGroupsForDiscussion]);\n\n  useEffect(() => {\n    if (isActive) {\n      setIsJoinToSend(linkedChat?.isJoinToSend || false);\n      setIsJoinRequest(linkedChat?.isJoinRequest || false);\n    }\n  }, [linkedChat, isActive]);\n\n  const handleUnlinkGroupSessions = useCallback(() => {\n    closeConfirmUnlinkGroupDialog();\n    unlinkDiscussionGroup({ channelId: isChannel ? chatId : linkedChatId! });\n    if (!isChannel) {\n      onScreenSelect(ManagementScreens.Initial);\n    }\n  }, [closeConfirmUnlinkGroupDialog, unlinkDiscussionGroup, isChannel, chatId, linkedChatId, onScreenSelect]);\n\n  const handleLinkGroupSessions = useCallback(() => {\n    closeConfirmLinkGroupDialog();\n    linkDiscussionGroup({ channelId: chatId, chatId: linkedGroupId! });\n  }, [closeConfirmLinkGroupDialog, linkDiscussionGroup, chatId, linkedGroupId]);\n\n  const handleJoinToSendCheck = useCallback((checked: boolean) => {\n    setIsJoinToSend(checked);\n    toggleJoinToSend({ chatId: linkedChatId!, isEnabled: checked });\n    if (!checked) {\n      setIsJoinRequest(false);\n    }\n  }, [linkedChatId, toggleJoinToSend]);\n\n  const handleJoinRequestCheck = useCallback((checked: boolean) => {\n    setIsJoinRequest(checked);\n    toggleJoinRequest({ chatId: linkedChatId!, isEnabled: checked });\n  }, [linkedChatId, toggleJoinRequest]);\n\n  const onDiscussionClick = (groupId: string) => {\n    setLinkedGroupId(groupId);\n    openConfirmLinkGroupDialog();\n  };\n\n  function renderUnlinkGroupHeader() {\n    return (\n      <div className=\"modal-header\">\n        <Avatar\n          size=\"tiny\"\n          peer={linkedChat}\n        />\n        <div className=\"modal-title\">\n          {lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n        </div>\n      </div>\n    );\n  }\n\n  function renderLinkGroupHeader() {\n    if (!linkedGroupId) return undefined;\n    const linkedGroup = chatsByIds[linkedGroupId];\n    if (!linkedGroup) return undefined;\n\n    return (\n      <div className=\"modal-header\">\n        <Avatar\n          size=\"tiny\"\n          peer={linkedGroup}\n        />\n        <div className=\"modal-title\">\n          {lang('Channel.DiscussionGroup.LinkGroup')}\n        </div>\n      </div>\n    );\n  }\n\n  function renderLinkGroupConfirmText() {\n    if (!linkedGroupId) return undefined;\n    const linkedGroup = chatsByIds[linkedGroupId];\n    if (!linkedGroup) return undefined;\n\n    if (linkedGroup.hasPrivateLink) {\n      return renderText(\n        `Do you want to make **${linkedGroup.title}** the discussion board for **${chat!.title}**?`,\n        ['br', 'simple_markdown'],\n      );\n    }\n\n    return renderText(\n      // eslint-disable-next-line max-len\n      `Do you want to make **${linkedGroup.title}** the discussion board for **${chat!.title}**?\\n\\nAnyone from the channel will be able to see messages in this group.`,\n      ['br', 'simple_markdown'],\n    );\n  }\n\n  function renderLinkedGroup() {\n    return (\n      <div>\n        <ListItem\n          className=\"chat-item-clickable\"\n          inactive\n        >\n          <GroupChatInfo chatId={linkedChat!.id} />\n        </ListItem>\n        <ListItem\n          icon=\"delete\"\n          ripple\n          destructive\n          onClick={openConfirmUnlinkGroupDialog}\n        >\n          {lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n        </ListItem>\n        <ConfirmDialog\n          isOpen={isConfirmUnlinkGroupDialogOpen}\n          onClose={closeConfirmUnlinkGroupDialog}\n          header={renderUnlinkGroupHeader()}\n          textParts={renderText(\n            lang(isChannel ? 'DiscussionUnlinkChannelAlert' : 'DiscussionUnlinkGroupAlert', linkedChat!.title),\n            ['br', 'simple_markdown'],\n          )}\n          confirmLabel={lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n          confirmHandler={handleUnlinkGroupSessions}\n          confirmIsDestructive\n        />\n      </div>\n    );\n  }\n\n  function renderDiscussionGroups() {\n    return (\n      <div>\n        <p className=\"section-help\" dir=\"auto\">{lang('DiscussionChannelHelp')}</p>\n\n        <div teactFastList>\n          <ListItem\n            key=\"create-group\"\n            icon=\"group\"\n            ripple\n            teactOrderKey={0}\n            disabled\n          >\n            {lang('DiscussionCreateGroup')}\n          </ListItem>\n          {forDiscussionIds ? (\n            forDiscussionIds.map((id, i) => (\n              <ListItem\n                key={id}\n                teactOrderKey={i + 1}\n                className=\"chat-item-clickable scroll-item\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => {\n                  onDiscussionClick(id);\n                }}\n              >\n                <GroupChatInfo chatId={id} />\n              </ListItem>\n            ))\n          ) : (\n            <NothingFound key=\"nothing-found\" teactOrderKey={0} text=\"No discussion groups found\" />\n          )}\n        </div>\n        <p className=\"mt-4 mb-0 section-help\" dir=\"auto\">{lang('DiscussionChannelHelp2')}</p>\n        <ConfirmDialog\n          isOpen={isConfirmLinkGroupDialogOpen}\n          onClose={closeConfirmLinkGroupDialog}\n          header={renderLinkGroupHeader()}\n          textParts={renderLinkGroupConfirmText()}\n          confirmLabel={lang('DiscussionLinkGroup')}\n          confirmHandler={handleLinkGroupSessions}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"panel-content custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIconWithPreview\n            tgsUrl={LOCAL_TGS_URLS.DiscussionGroups}\n            size={STICKER_SIZE_DISCUSSION_GROUPS}\n            className=\"section-icon\"\n          />\n          {linkedChat && renderLinkedGroup()}\n          {!linkedChat && renderDiscussionGroups()}\n        </div>\n        {linkedChat && (\n          <div className=\"section\">\n            <h3 className=\"section-heading\">{lang('ChannelSettingsJoinTitle')}</h3>\n            <div className=\"ListItem narrow\">\n              <Checkbox\n                checked={isJoinToSend}\n                onCheck={handleJoinToSendCheck}\n                label={lang('ChannelSettingsJoinToSend')}\n              />\n            </div>\n            {isJoinToSend && (\n              <div className=\"ListItem narrow\">\n                <Checkbox\n                  checked={isJoinRequest}\n                  onCheck={handleJoinRequestCheck}\n                  label={lang('ChannelSettingsJoinRequest')}\n                />\n              </div>\n            )}\n            <p className=\"section-info section-info_push\">\n              {isJoinToSend ? lang('ChannelSettingsJoinRequestInfo') : lang('ChannelSettingsJoinToSendInfo')}\n            </p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { linkedChatId } = selectChatFullInfo(global, chatId) || {};\n    const { forDiscussionIds, byId: chatsByIds } = global.chats;\n    const linkedChat = linkedChatId ? selectChat(global, linkedChatId) : undefined;\n\n    return {\n      chat,\n      chatsByIds,\n      forDiscussionIds,\n      linkedChat,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageDiscussion));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatBannedRights, ApiChatFullInfo, ApiExportedInvite,\n} from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ManagementProgress, ManagementScreens } from '../../../types';\n\nimport {\n  getChatAvatarHash,\n  getHasAdminRight,\n  isChatBasicGroup,\n  isChatPublic,\n} from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { debounce } from '../../../util/schedulers';\nimport { formatInteger } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\nimport Switcher from '../../ui/Switcher';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  progress?: ManagementProgress;\n  isBasicGroup: boolean;\n  hasLinkedChannel: boolean;\n  canChangeInfo?: boolean;\n  canBanUsers?: boolean;\n  canInvite?: boolean;\n  canEditForum?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  isChannelsPremiumLimitReached: boolean;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst GROUP_TITLE_EMPTY = 'Group title can\\'t be empty';\nconst GROUP_MAX_DESCRIPTION = 255;\n\nconst ALL_PERMISSIONS: Array<keyof ApiChatBannedRights> = [\n  'sendMessages',\n  'embedLinks',\n  'sendPolls',\n  'changeInfo',\n  'inviteUsers',\n  'pinMessages',\n  'manageTopics',\n  'sendPhotos',\n  'sendVideos',\n  'sendRoundvideos',\n  'sendVoices',\n  'sendAudios',\n  'sendDocs',\n];\n// Some checkboxes control multiple rights, and some rights are not controlled from Permissions screen,\n// so we need to define the amount manually\nconst TOTAL_PERMISSIONS_COUNT = ALL_PERMISSIONS.length + 1;\n\nconst runDebounced = debounce((cb) => cb(), 500, false);\n\nconst ManageGroup: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  chatFullInfo,\n  progress,\n  isBasicGroup,\n  hasLinkedChannel,\n  canChangeInfo,\n  canBanUsers,\n  canInvite,\n  canEditForum,\n  isActive,\n  exportedInvites,\n  isChannelsPremiumLimitReached,\n  availableReactions,\n  onScreenSelect,\n  onClose,\n}) => {\n  const {\n    togglePreHistoryHidden,\n    updateChat,\n    deleteChat,\n    leaveChannel,\n    deleteChannel,\n    closeManagement,\n    openChat,\n    loadExportedChatInvites,\n    loadChatJoinRequests,\n    toggleForum,\n  } = getActions();\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const currentTitle = chat.title;\n  const currentAbout = chatFullInfo?.about || '';\n\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [title, setTitle] = useState(currentTitle);\n  const [about, setAbout] = useState(currentAbout);\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n  const [isForumEnabled, setIsForumEnabled] = useState(chat.isForum);\n  const imageHash = getChatAvatarHash(chat);\n  const currentAvatarBlobUrl = useMedia(imageHash, false, ApiMediaFormat.BlobUrl);\n  const isPublicGroup = useMemo(() => isChatPublic(chat), [chat]);\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const isPreHistoryHiddenCheckboxRef = useRef<HTMLDivElement>(null);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (canInvite) {\n      loadExportedChatInvites({ chatId });\n      loadExportedChatInvites({ chatId, isRevoked: true });\n      loadChatJoinRequests({ chatId });\n    }\n  }, [chatId, canInvite]);\n\n  // Resetting `isForum` switch on flood wait error\n  useEffect(() => {\n    setIsForumEnabled(Boolean(chat.isForum));\n  }, [chat.isForum]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handleClickEditType = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.ChatPrivacyType);\n  });\n\n  const handleClickDiscussion = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.Discussion);\n  });\n\n  const handleClickReactions = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.Reactions);\n  });\n\n  const handleClickPermissions = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.GroupPermissions);\n  });\n\n  const handleClickAdministrators = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.ChatAdministrators);\n  });\n\n  const handleClickInvites = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.Invites);\n  });\n\n  const handleClickRequests = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.JoinRequests);\n  });\n\n  const handleSetPhoto = useLastCallback((file: File) => {\n    setPhoto(file);\n    setIsProfileFieldsTouched(true);\n  });\n\n  const handleTitleChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setIsProfileFieldsTouched(true);\n  });\n\n  const handleAboutChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setAbout(e.target.value);\n    setIsProfileFieldsTouched(true);\n  });\n\n  const handleUpdateGroup = useLastCallback(() => {\n    const trimmedTitle = title.trim();\n    const trimmedAbout = about.trim();\n\n    if (!trimmedTitle.length) {\n      setError(GROUP_TITLE_EMPTY);\n      return;\n    }\n\n    updateChat({\n      chatId,\n      title: trimmedTitle,\n      about: trimmedAbout,\n      photo,\n    });\n  });\n\n  const handleClickMembers = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.GroupMembers);\n  });\n\n  const handleTogglePreHistory = useLastCallback(() => {\n    if (!chatFullInfo) {\n      return;\n    }\n\n    const { isPreHistoryHidden } = chatFullInfo;\n\n    togglePreHistoryHidden({ chatId: chat.id, isEnabled: !isPreHistoryHidden });\n  });\n\n  const handleForumToggle = useLastCallback(() => {\n    setIsForumEnabled((current) => {\n      const newIsForumEnabled = !current;\n\n      runDebounced(() => {\n        toggleForum({ chatId, isEnabled: newIsForumEnabled });\n      });\n\n      return newIsForumEnabled;\n    });\n  });\n\n  useEffect(() => {\n    if (!isChannelsPremiumLimitReached) {\n      return;\n    }\n\n    // Teact does not have full support of controlled form components, we need to \"disable\" input value change manually\n    // TODO Teact support added, this can now be removed\n    const checkbox = isPreHistoryHiddenCheckboxRef.current?.querySelector('input') as HTMLInputElement;\n    checkbox.checked = !chatFullInfo?.isPreHistoryHidden;\n  }, [isChannelsPremiumLimitReached, chatFullInfo?.isPreHistoryHidden]);\n\n  const chatReactionsDescription = useMemo(() => {\n    if (!chatFullInfo?.enabledReactions) {\n      return lang('ReactionsOff');\n    }\n\n    if (chatFullInfo.enabledReactions.type === 'all') {\n      return lang('ReactionsAll');\n    }\n\n    const enabledLength = chatFullInfo.enabledReactions.allowed.length;\n    const totalLength = availableReactions?.filter((reaction) => !reaction.isInactive).length || 0;\n\n    return totalLength\n      ? `${enabledLength} / ${totalLength}`\n      : `${enabledLength}`;\n  }, [availableReactions, chatFullInfo?.enabledReactions, lang]);\n\n  const enabledPermissionsCount = useMemo(() => {\n    if (!chat.defaultBannedRights) {\n      return 0;\n    }\n\n    let totalCount = ALL_PERMISSIONS.filter(\n      (key) => {\n        if (key === 'manageTopics' && !isForumEnabled) return false;\n        return !chat.defaultBannedRights![key as keyof ApiChatBannedRights];\n      },\n    ).length;\n\n    const { sendStickers, sendGifs } = chat.defaultBannedRights;\n\n    // These two rights are controlled with a single checkbox\n    if (!sendStickers && !sendGifs) {\n      totalCount += 1;\n    }\n\n    return totalCount;\n  }, [chat.defaultBannedRights, isForumEnabled]);\n\n  const adminsCount = useMemo(() => {\n    return Object.keys(chatFullInfo?.adminMembersById || {}).length;\n  }, [chatFullInfo?.adminMembersById]);\n\n  const handleDeleteGroup = useLastCallback(() => {\n    if (isBasicGroup) {\n      deleteChat({ chatId: chat.id });\n    } else if (!chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else {\n      deleteChannel({ chatId: chat.id });\n    }\n    closeDeleteDialog();\n    closeManagement();\n    openChat({ id: undefined });\n  });\n\n  if (chat.isRestricted || chat.isForbidden) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"panel-content custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            isForForum={isForumEnabled}\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handleSetPhoto}\n            disabled={!canChangeInfo}\n          />\n          <div className=\"settings-edit\">\n            <InputText\n              id=\"group-title\"\n              label={lang('GroupName')}\n              onChange={handleTitleChange}\n              value={title}\n              error={error === GROUP_TITLE_EMPTY ? error : undefined}\n              disabled={!canChangeInfo}\n            />\n            <TextArea\n              id=\"group-about\"\n              label={lang('DescriptionPlaceholder')}\n              maxLength={GROUP_MAX_DESCRIPTION}\n              maxLengthIndicator={(GROUP_MAX_DESCRIPTION - about.length).toString()}\n              onChange={handleAboutChange}\n              value={about}\n              disabled={!canChangeInfo}\n              noReplaceNewlines\n            />\n          </div>\n          {chat.isCreator && (\n            <ListItem icon=\"lock\" multiline onClick={handleClickEditType}>\n              <span className=\"title\">{lang('GroupType')}</span>\n              <span className=\"subtitle\">{isPublicGroup ? lang('TypePublic') : lang('TypePrivate')}</span>\n            </ListItem>\n          )}\n          {hasLinkedChannel && (\n            <ListItem\n              icon=\"message\"\n              multiline\n              onClick={handleClickDiscussion}\n            >\n              <span className=\"title\">{lang('LinkedChannel')}</span>\n              <span className=\"subtitle\">{lang('DiscussionUnlink')}</span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"permissions\"\n            multiline\n            onClick={handleClickPermissions}\n            disabled={!canBanUsers}\n          >\n            <span className=\"title\">{lang('ChannelPermissions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {enabledPermissionsCount}/{TOTAL_PERMISSIONS_COUNT - (isForumEnabled ? 0 : 1)}\n            </span>\n          </ListItem>\n          <ListItem\n            icon=\"heart-outline\"\n            multiline\n            onClick={handleClickReactions}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Reactions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {chatReactionsDescription}\n            </span>\n          </ListItem>\n          <ListItem\n            icon=\"admin\"\n            multiline\n            onClick={handleClickAdministrators}\n          >\n            <span className=\"title\">{lang('ChannelAdministrators')}</span>\n            <span className=\"subtitle\">{formatInteger(adminsCount)}</span>\n          </ListItem>\n          {canInvite && (\n            <ListItem\n              icon=\"link\"\n              onClick={handleClickInvites}\n              multiline\n              disabled={!exportedInvites}\n            >\n              <span className=\"title\">{lang('GroupInfo.InviteLinks')}</span>\n              <span className=\"subtitle\">\n                {exportedInvites ? formatInteger(exportedInvites.length) : lang('Loading')}\n              </span>\n            </ListItem>\n          )}\n          {Boolean(chat.joinRequests?.length) && (\n            <ListItem\n              icon=\"add-user-filled\"\n              onClick={handleClickRequests}\n              multiline\n            >\n              <span className=\"title\">{lang('MemberRequests')}</span>\n              <span className=\"subtitle\">\n                {formatInteger(chat.joinRequests!.length)}\n              </span>\n            </ListItem>\n          )}\n          {canEditForum && (\n            <>\n              <ListItem icon=\"forums\" ripple onClick={handleForumToggle}>\n                <span>{lang('ChannelTopics')}</span>\n                <Switcher\n                  id=\"group-notifications\"\n                  label={lang('ChannelTopics')}\n                  checked={isForumEnabled}\n                  inactive\n                />\n              </ListItem>\n              <div className=\"section-info section-info_push\">{lang('ForumToggleDescription')}</div>\n            </>\n          )}\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"group\" multiline onClick={handleClickMembers}>\n            <span className=\"title\">{lang('GroupMembers')}</span>\n            <span className=\"subtitle\">{formatInteger(chat.membersCount ?? 0)}</span>\n          </ListItem>\n\n          {!isPublicGroup && !hasLinkedChannel && Boolean(chatFullInfo) && (\n            <div className=\"ListItem narrow\" ref={isPreHistoryHiddenCheckboxRef}>\n              <Checkbox\n                checked={!chatFullInfo.isPreHistoryHidden}\n                label={lang('ChatHistory')}\n                onChange={handleTogglePreHistory}\n                subLabel={\n                  chatFullInfo.isPreHistoryHidden ? lang('ChatHistoryHiddenInfo2') : lang('ChatHistoryVisibleInfo')\n                }\n                disabled={!canBanUsers}\n              />\n            </div>\n          )}\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {lang('DeleteMega')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleUpdateGroup}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        textParts={renderText(\n          isBasicGroup || !chat.isCreator\n            ? lang('AreYouSureDeleteAndExit')\n            : lang('AreYouSureDeleteThisChatWithGroup', chat.title),\n          ['br', 'simple_markdown'],\n        )}\n        confirmLabel={isBasicGroup || !chat.isCreator ? lang('DeleteMega') : lang('DeleteGroupForAll')}\n        confirmHandler={handleDeleteGroup}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const chatFullInfo = selectChatFullInfo(global, chatId);\n    const { management, limitReachedModal } = selectTabState(global);\n    const { progress } = management;\n    const hasLinkedChannel = Boolean(chatFullInfo?.linkedChatId);\n    const isBasicGroup = isChatBasicGroup(chat);\n    const { invites } = management.byChatId[chatId] || {};\n    const canEditForum = !hasLinkedChannel && (getHasAdminRight(chat, 'changeInfo') || chat.isCreator);\n    const canChangeInfo = chat.isCreator || getHasAdminRight(chat, 'changeInfo');\n    const canBanUsers = chat.isCreator || getHasAdminRight(chat, 'banUsers');\n    const canInvite = chat.isCreator || getHasAdminRight(chat, 'inviteUsers');\n\n    return {\n      chat,\n      chatFullInfo,\n      progress,\n      isBasicGroup,\n      hasLinkedChannel,\n      canChangeInfo,\n      canBanUsers,\n      canInvite,\n      exportedInvites: invites,\n      isChannelsPremiumLimitReached: limitReachedModal?.limit === 'channels',\n      availableReactions: global.reactions.availableReactions,\n      canEditForum,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageGroup));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiChatAdminRights, ApiChatMember, ApiUser,\n} from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { getUserFullName, isChatBasicGroup, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  selectedUserId?: string;\n  isPromotedByCurrentUser?: boolean;\n  isNewAdmin?: boolean;\n  isActive: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  usersById: Record<string, ApiUser>;\n  adminMembersById?: Record<string, ApiChatMember>;\n  hasFullInfo: boolean;\n  currentUserId?: string;\n  isChannel: boolean;\n  isFormFullyDisabled: boolean;\n  isForum?: boolean;\n  defaultRights?: ApiChatAdminRights;\n};\n\nconst CUSTOM_TITLE_MAX_LENGTH = 16;\n\nconst ManageGroupAdminRights: FC<OwnProps & StateProps> = ({\n  isActive,\n  isNewAdmin,\n  selectedUserId,\n  defaultRights,\n  chat,\n  usersById,\n  currentUserId,\n  adminMembersById,\n  hasFullInfo,\n  isChannel,\n  isForum,\n  isFormFullyDisabled,\n  onClose,\n  onScreenSelect,\n}) => {\n  const { updateChatAdmin } = getActions();\n\n  const [permissions, setPermissions] = useState<ApiChatAdminRights>({});\n  const [isTouched, setIsTouched] = useState(Boolean(isNewAdmin));\n  const [isLoading, setIsLoading] = useState(false);\n  const [isDismissConfirmationDialogOpen, openDismissConfirmationDialog, closeDismissConfirmationDialog] = useFlag();\n  const [customTitle, setCustomTitle] = useState('');\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const selectedChatMember = useMemo(() => {\n    const selectedAdminMember = selectedUserId ? adminMembersById?.[selectedUserId] : undefined;\n\n    // If `selectedAdminMember` variable is filled with a value, then we have already saved the administrator,\n    // so now we need to return to the list of administrators\n    if (isNewAdmin && (selectedAdminMember || !selectedUserId)) {\n      return undefined;\n    }\n\n    if (isNewAdmin) {\n      const user = getGlobal().users.byId[selectedUserId!];\n\n      return user ? {\n        userId: user.id,\n        adminRights: defaultRights,\n        customTitle: lang('ChannelAdmin'),\n        isOwner: false,\n        promotedByUserId: undefined,\n      } : undefined;\n    }\n\n    return selectedAdminMember;\n  }, [adminMembersById, defaultRights, isNewAdmin, lang, selectedUserId]);\n\n  useEffect(() => {\n    if (hasFullInfo && selectedUserId && !selectedChatMember) {\n      onScreenSelect(ManagementScreens.ChatAdministrators);\n    }\n  }, [chat, hasFullInfo, onScreenSelect, selectedChatMember, selectedUserId]);\n\n  useEffect(() => {\n    setPermissions(selectedChatMember?.adminRights || {});\n    setCustomTitle((selectedChatMember?.customTitle || '').substr(0, CUSTOM_TITLE_MAX_LENGTH));\n    setIsTouched(Boolean(isNewAdmin));\n    setIsLoading(false);\n  }, [defaultRights, isNewAdmin, selectedChatMember]);\n\n  const handlePermissionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name } = e.target;\n\n    function getUpdatedPermissionValue(value: true | undefined) {\n      return value ? undefined : true;\n    }\n\n    setPermissions((p) => ({\n      ...p,\n      [name]: getUpdatedPermissionValue(p[name as keyof ApiChatAdminRights]),\n    }));\n    setIsTouched(true);\n  }, []);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!selectedUserId) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatAdmin({\n      chatId: chat.id,\n      userId: selectedUserId,\n      adminRights: permissions,\n      customTitle,\n    });\n  }, [selectedUserId, updateChatAdmin, chat.id, permissions, customTitle]);\n\n  const handleDismissAdmin = useCallback(() => {\n    if (!selectedUserId) {\n      return;\n    }\n\n    updateChatAdmin({\n      chatId: chat.id,\n      userId: selectedUserId,\n      adminRights: {},\n    });\n    closeDismissConfirmationDialog();\n  }, [chat.id, closeDismissConfirmationDialog, selectedUserId, updateChatAdmin]);\n\n  const getControlIsDisabled = useCallback((key: keyof ApiChatAdminRights) => {\n    if (isChatBasicGroup(chat)) {\n      return false;\n    }\n\n    if (isFormFullyDisabled || !chat.adminRights) {\n      return true;\n    }\n\n    if (chat.isCreator) {\n      return false;\n    }\n\n    return !chat.adminRights![key];\n  }, [chat, isFormFullyDisabled]);\n\n  const memberStatus = useMemo(() => {\n    if (isNewAdmin || !selectedChatMember) {\n      return undefined;\n    }\n\n    if (selectedChatMember.isOwner) {\n      return lang('ChannelCreator');\n    }\n\n    const promotedByUser = selectedChatMember.promotedByUserId\n      ? usersById[selectedChatMember.promotedByUserId]\n      : undefined;\n\n    if (promotedByUser) {\n      return lang('EditAdminPromotedBy', getUserFullName(promotedByUser));\n    }\n\n    return lang('ChannelAdmin');\n  }, [isNewAdmin, selectedChatMember, usersById, lang]);\n\n  const handleCustomTitleChange = useCallback((e) => {\n    const { value } = e.target;\n    setCustomTitle(value);\n    setIsTouched(true);\n  }, []);\n\n  if (!selectedChatMember) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"panel-content custom-scroll\">\n        <div className=\"section\">\n          <ListItem inactive className=\"chat-item-clickable\">\n            <PrivateChatInfo\n              userId={selectedChatMember.userId}\n              status={memberStatus}\n              forceShowSelf\n            />\n          </ListItem>\n\n          <h3 className=\"section-heading mt-4\" dir=\"auto\">{lang('EditAdminWhatCanDo')}</h3>\n\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"changeInfo\"\n              checked={Boolean(permissions.changeInfo)}\n              label={lang(isChannel ? 'EditAdminChangeChannelInfo' : 'EditAdminChangeGroupInfo')}\n              blocking\n              disabled={getControlIsDisabled('changeInfo')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"postMessages\"\n                checked={Boolean(permissions.postMessages)}\n                label={lang('EditAdminPostMessages')}\n                blocking\n                disabled={getControlIsDisabled('postMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          {isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"editMessages\"\n                checked={Boolean(permissions.editMessages)}\n                label={lang('EditAdminEditMessages')}\n                blocking\n                disabled={getControlIsDisabled('editMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"deleteMessages\"\n              checked={Boolean(permissions.deleteMessages)}\n              label={lang(isChannel ? 'EditAdminDeleteMessages' : 'EditAdminGroupDeleteMessages')}\n              blocking\n              disabled={getControlIsDisabled('deleteMessages')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"postStories\"\n              checked={Boolean(permissions.postStories)}\n              label={lang('EditAdminPostStories')}\n              blocking\n              disabled={getControlIsDisabled('postStories')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"editStories\"\n              checked={Boolean(permissions.editStories)}\n              label={lang('EditAdminEditStories')}\n              blocking\n              disabled={getControlIsDisabled('editStories')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"deleteStories\"\n              checked={Boolean(permissions.deleteStories)}\n              label={lang('EditAdminDeleteStories')}\n              blocking\n              disabled={getControlIsDisabled('deleteStories')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"banUsers\"\n                checked={Boolean(permissions.banUsers)}\n                label={lang('EditAdminBanUsers')}\n                blocking\n                disabled={getControlIsDisabled('banUsers')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"inviteUsers\"\n              checked={Boolean(permissions.inviteUsers)}\n              label={lang('EditAdminAddUsers')}\n              blocking\n              disabled={getControlIsDisabled('inviteUsers')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"pinMessages\"\n                checked={Boolean(permissions.pinMessages)}\n                label={lang('EditAdminPinMessages')}\n                blocking\n                disabled={getControlIsDisabled('pinMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"addAdmins\"\n              checked={Boolean(permissions.addAdmins)}\n              label={lang('EditAdminAddAdmins')}\n              blocking\n              disabled={getControlIsDisabled('addAdmins')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"manageCall\"\n              checked={Boolean(permissions.manageCall)}\n              label={lang('StartVoipChatPermission')}\n              blocking\n              disabled={getControlIsDisabled('manageCall')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {isForum && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"manageTopics\"\n                checked={Boolean(permissions.manageTopics)}\n                label={lang('ManageTopicsPermission')}\n                blocking\n                disabled={getControlIsDisabled('manageTopics')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"anonymous\"\n                checked={Boolean(permissions.anonymous)}\n                label={lang('EditAdminSendAnonymously')}\n                blocking\n                disabled={getControlIsDisabled('anonymous')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n\n          {isFormFullyDisabled && (\n            <p className=\"section-info mb-4\" dir=\"auto\">\n              {lang('Channel.EditAdmin.CannotEdit')}\n            </p>\n          )}\n\n          {!isChannel && (\n            <InputText\n              id=\"admin-title\"\n              label={lang('EditAdminRank')}\n              onChange={handleCustomTitleChange}\n              value={customTitle}\n              disabled={isFormFullyDisabled}\n              maxLength={CUSTOM_TITLE_MAX_LENGTH}\n            />\n          )}\n\n          {currentUserId !== selectedUserId && !isFormFullyDisabled && !isNewAdmin && (\n            <ListItem icon=\"delete\" ripple destructive onClick={openDismissConfirmationDialog}>\n              {lang('EditAdminRemoveAdmin')}\n            </ListItem>\n          )}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={handleSavePermissions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n\n      {!isNewAdmin && (\n        <ConfirmDialog\n          isOpen={isDismissConfirmationDialogOpen}\n          onClose={closeDismissConfirmationDialog}\n          text=\"Are you sure you want to dismiss this admin?\"\n          confirmLabel={lang('Channel.Admin.Dismiss')}\n          confirmHandler={handleDismissAdmin}\n          confirmIsDestructive\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isPromotedByCurrentUser }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const fullInfo = selectChatFullInfo(global, chatId);\n    const { byId: usersById } = global.users;\n    const { currentUserId } = global;\n    const isChannel = isChatChannel(chat);\n    const isFormFullyDisabled = !(chat.isCreator || isPromotedByCurrentUser);\n    const isForum = chat.isForum;\n\n    return {\n      chat,\n      usersById,\n      currentUserId,\n      isChannel,\n      isForum,\n      isFormFullyDisabled,\n      defaultRights: chat.adminRights,\n      hasFullInfo: Boolean(fullInfo),\n      adminMembersById: fullInfo?.adminMembersById,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageGroupAdminRights));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChatMember, ApiUserStatus } from '../../../api/types';\nimport { ManagementScreens, NewChatMembersProgress } from '../../../types';\n\nimport {\n  getHasAdminRight, isChatBasicGroup,\n  isChatChannel, isUserBot, isUserRightBanned, sortUserIds,\n} from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport NothingFound from '../../common/NothingFound';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport Switcher from '../../ui/Switcher';\nimport DeleteMemberModal from '../DeleteMemberModal';\n\ntype OwnProps = {\n  chatId: string;\n  isActive: boolean;\n  noAdmins?: boolean;\n  onClose: NoneToVoidFunction;\n  onScreenSelect?: (screen: ManagementScreens) => void;\n  onChatMemberSelect?: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n};\n\ntype StateProps = {\n  userStatusesById: Record<string, ApiUserStatus>;\n  members?: ApiChatMember[];\n  canAddMembers?: boolean;\n  adminMembersById?: Record<string, ApiChatMember>;\n  isChannel?: boolean;\n  localContactIds?: string[];\n  searchQuery?: string;\n  isSearching?: boolean;\n  localUserIds?: string[];\n  globalUserIds?: string[];\n  currentUserId?: string;\n  canDeleteMembers?: boolean;\n  areParticipantsHidden?: boolean;\n  canHideParticipants?: boolean;\n};\n\nconst ManageGroupMembers: FC<OwnProps & StateProps> = ({\n  chatId,\n  noAdmins,\n  members,\n  canAddMembers,\n  adminMembersById,\n  userStatusesById,\n  isChannel,\n  isActive,\n  globalUserIds,\n  localContactIds,\n  localUserIds,\n  isSearching,\n  searchQuery,\n  currentUserId,\n  canDeleteMembers,\n  areParticipantsHidden,\n  canHideParticipants,\n  onClose,\n  onScreenSelect,\n  onChatMemberSelect,\n}) => {\n  const {\n    openChat, setUserSearchQuery, closeManagement,\n    toggleParticipantsHidden, setNewChatMembersDialogState, toggleManagement,\n  } = getActions();\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [deletingUserId, setDeletingUserId] = useState<string | undefined>();\n\n  const adminIds = useMemo(() => {\n    return noAdmins && adminMembersById ? Object.keys(adminMembersById) : [];\n  }, [adminMembersById, noAdmins]);\n\n  const memberIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!members || !usersById) {\n      return [];\n    }\n\n    const userIds = sortUserIds(\n      members.map(({ userId }) => userId),\n      usersById,\n      userStatusesById,\n    );\n\n    return noAdmins ? userIds.filter((userId) => !adminIds.includes(userId)) : userIds;\n  }, [members, userStatusesById, noAdmins, adminIds]);\n\n  usePeerStoriesPolling(memberIds);\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const shouldUseSearchResults = Boolean(searchQuery);\n    const listedIds = !shouldUseSearchResults\n      ? memberIds\n      : (localContactIds ? filterPeersByQuery({ ids: localContactIds, query: searchQuery, type: 'user' }) : []);\n\n    return sortChatIds(\n      unique([\n        ...listedIds,\n        ...(shouldUseSearchResults ? localUserIds || [] : []),\n        ...(shouldUseSearchResults ? globalUserIds || [] : []),\n      ]).filter((contactId) => {\n        const user = usersById[contactId];\n        if (!user) {\n          return true;\n        }\n\n        return (isChannel || user.canBeInvitedToGroup || !isUserBot(user))\n          && (!noAdmins || !adminIds.includes(contactId));\n      }),\n      true,\n    );\n  }, [memberIds, localContactIds, searchQuery, localUserIds, globalUserIds, isChannel, noAdmins, adminIds]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, displayedIds, Boolean(searchQuery));\n\n  const handleMemberClick = useLastCallback((id: string) => {\n    if (noAdmins) {\n      onChatMemberSelect!(id, true);\n      onScreenSelect!(ManagementScreens.ChatNewAdminRights);\n    } else {\n      closeManagement();\n      openChat({ id });\n    }\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setUserSearchQuery({ query: e.target.value });\n  });\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isActive, (index) => {\n    if (viewportIds && viewportIds.length > 0) {\n      handleMemberClick(viewportIds[index === -1 ? 0 : index]);\n    }\n  }, '.ListItem-button', true);\n\n  const handleDeleteMembersModalClose = useLastCallback(() => {\n    setDeletingUserId(undefined);\n  });\n\n  const handleToggleParticipantsHidden = useLastCallback(() => {\n    toggleParticipantsHidden({ chatId, isEnabled: !areParticipantsHidden });\n  });\n\n  const handleNewMemberDialogOpen = useLastCallback(() => {\n    toggleManagement();\n    setNewChatMembersDialogState({ newChatMembersProgress: NewChatMembersProgress.InProgress });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function getMemberContextAction(memberId: string): MenuItemContextAction[] | undefined {\n    return memberId === currentUserId || !canDeleteMembers ? undefined : [{\n      title: lang('lng_context_remove_from_group'),\n      icon: 'stop',\n      handler: () => {\n        setDeletingUserId(memberId);\n      },\n    }];\n  }\n\n  function renderSearchField() {\n    return (\n      <div className=\"Management__filter\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <InputText\n          ref={inputRef}\n          value={searchQuery}\n          onChange={handleFilterChange}\n          placeholder={lang('Search')}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      {noAdmins && renderSearchField()}\n      <div className=\"panel-content custom-scroll\">\n        {canHideParticipants && !isChannel && (\n          <div className=\"section\">\n            <ListItem icon=\"group\" ripple onClick={handleToggleParticipantsHidden}>\n              <span>{lang('ChannelHideMembers')}</span>\n              <Switcher label={lang('ChannelHideMembers')} checked={areParticipantsHidden} />\n            </ListItem>\n            <p className=\"section-info\">\n              {lang(areParticipantsHidden ? 'GroupMembers.MembersHiddenOn' : 'GroupMembers.MembersHiddenOff')}\n            </p>\n          </div>\n        )}\n        <div className=\"section\">\n          {viewportIds?.length ? (\n            <InfiniteScroll\n              className=\"picker-list custom-scroll\"\n              items={displayedIds}\n              onLoadMore={getMore}\n              noScrollRestore={Boolean(searchQuery)}\n              ref={containerRef}\n              onKeyDown={handleKeyDown}\n            >\n              {viewportIds.map((id) => (\n                <ListItem\n                  key={id}\n                  className=\"chat-item-clickable scroll-item\"\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => handleMemberClick(id)}\n                  contextActions={getMemberContextAction(id)}\n                  withPortalForMenu\n                >\n                  <PrivateChatInfo userId={id} forceShowSelf withStory />\n                </ListItem>\n              ))}\n            </InfiniteScroll>\n          ) : !isSearching && viewportIds && !viewportIds.length ? (\n            <NothingFound\n              teactOrderKey={0}\n              key=\"nothing-found\"\n              text={isChannel ? 'No subscribers found' : 'No members found'}\n            />\n          ) : (\n            <Loading />\n          )}\n        </div>\n      </div>\n      {canAddMembers && (\n        <FloatingActionButton\n          isShown\n          onClick={handleNewMemberDialogOpen}\n          ariaLabel={lang('lng_channel_add_users')}\n        >\n          <Icon name=\"add-user-filled\" />\n        </FloatingActionButton>\n      )}\n      {canDeleteMembers && (\n        <DeleteMemberModal\n          isOpen={Boolean(deletingUserId)}\n          userId={deletingUserId}\n          onClose={handleDeleteMembersModalClose}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { statusesById: userStatusesById } = global.users;\n    const { members, adminMembersById, areParticipantsHidden } = selectChatFullInfo(global, chatId) || {};\n    const isChannel = chat && isChatChannel(chat);\n    const { userIds: localContactIds } = global.contactList || {};\n    const hiddenMembersMinCount = global.appConfig?.hiddenMembersMinCount;\n\n    const canDeleteMembers = chat && (chat.isCreator || getHasAdminRight(chat, 'banUsers'));\n\n    const canHideParticipants = canDeleteMembers && !isChatBasicGroup(chat) && chat.membersCount !== undefined\n    && hiddenMembersMinCount !== undefined && chat.membersCount >= hiddenMembersMinCount;\n\n    const canAddMembers = chat && ((getHasAdminRight(chat, 'inviteUsers')\n        || (!isChannel && !isUserRightBanned(chat, 'inviteUsers')))\n      || chat.isCreator\n    );\n\n    const {\n      query: searchQuery,\n      fetchingStatus,\n      globalUserIds,\n      localUserIds,\n    } = selectTabState(global).userSearch;\n\n    return {\n      areParticipantsHidden: Boolean(chat && areParticipantsHidden),\n      members,\n      canAddMembers,\n      adminMembersById,\n      userStatusesById,\n      isChannel,\n      localContactIds,\n      searchQuery,\n      isSearching: fetchingStatus,\n      globalUserIds,\n      localUserIds,\n      canDeleteMembers,\n      currentUserId: global.currentUserId,\n      canHideParticipants,\n    };\n  },\n)(ManageGroupMembers));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatBannedRights, ApiChatMember } from '../../../api/types';\nimport { ManagementProgress, ManagementScreens } from '../../../types';\n\nimport {\n  DEFAULT_CHARGE_FOR_MESSAGES,\n} from '../../../config';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useManagePermissions from '../hooks/useManagePermissions';\n\nimport Icon from '../../common/icons/Icon';\nimport PaidMessagePrice from '../../common/paidMessage/PaidMessagePrice';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport PermissionCheckboxList from '../../main/PermissionCheckboxList';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\nimport Switcher from '../../ui/Switcher';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  progress?: ManagementProgress;\n  currentUserId?: string;\n  removedUsersCount: number;\n  members?: ApiChatMember[];\n  arePaidMessagesAvailable?: boolean;\n  groupPeersPaidStars: number;\n  canChargeForMessages?: boolean;\n};\n\nconst ITEM_HEIGHT = 48;\nconst BEFORE_ITEMS_COUNT = 2;\nconst ITEMS_COUNT = 9;\n\nfunction getLangKeyForBannedRightKey(key: keyof ApiChatBannedRights) {\n  switch (key) {\n    case 'sendMessages':\n      return 'UserRestrictionsNoSend';\n    case 'sendMedia':\n      return 'UserRestrictionsNoSendMedia';\n    case 'sendStickers':\n      return 'UserRestrictionsNoSendStickers';\n    case 'embedLinks':\n      return 'UserRestrictionsNoEmbedLinks';\n    case 'sendPolls':\n      return 'UserRestrictionsNoSendPolls';\n    case 'changeInfo':\n      return 'UserRestrictionsNoChangeInfo';\n    case 'inviteUsers':\n      return 'UserRestrictionsInviteUsers';\n    case 'pinMessages':\n      return 'UserRestrictionsPinMessages';\n    case 'manageTopics':\n      return 'GroupPermission.NoManageTopics';\n    case 'sendPlain':\n      return 'UserRestrictionsNoSendText';\n    case 'sendDocs':\n      return 'UserRestrictionsNoSendDocs';\n    case 'sendRoundvideos':\n      return 'UserRestrictionsNoSendRound';\n    case 'sendVoices':\n      return 'UserRestrictionsNoSendVoice';\n    case 'sendAudios':\n      return 'UserRestrictionsNoSendMusic';\n    case 'sendVideos':\n      return 'UserRestrictionsNoSendVideos';\n    case 'sendPhotos':\n      return 'UserRestrictionsNoSendPhotos';\n    default:\n      return undefined;\n  }\n}\n\nconst ManageGroupPermissions: FC<OwnProps & StateProps> = ({\n  onScreenSelect,\n  onChatMemberSelect,\n  chat,\n  progress,\n  currentUserId,\n  removedUsersCount,\n  members,\n  onClose,\n  isActive,\n  arePaidMessagesAvailable,\n  canChargeForMessages,\n  groupPeersPaidStars,\n}) => {\n  const { updateChatDefaultBannedRights, updatePaidMessagesPrice } = getActions();\n\n  const {\n    permissions, havePermissionChanged, isLoading, handlePermissionChange, setIsLoading,\n  } = useManagePermissions(chat?.defaultBannedRights);\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const handleRemovedUsersClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupRemovedUsers);\n  }, [onScreenSelect]);\n\n  const handleAddExceptionClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupUserPermissionsCreate);\n  }, [onScreenSelect]);\n\n  const handleExceptionMemberClick = useCallback((member: ApiChatMember) => {\n    onChatMemberSelect(member.userId, member.promotedByUserId === currentUserId);\n    onScreenSelect(ManagementScreens.GroupUserPermissions);\n  }, [currentUserId, onChatMemberSelect, onScreenSelect]);\n\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n\n  const [isPriceForMessagesChanged, markPriceForMessagesChanged, unmarkPriceForMessagesChanged] = useFlag();\n  const [isPriceForMessagesOpen, setIsPriceForMessagesOpen] = useState(canChargeForMessages);\n  const [chargeForMessages, setChargeForMessages] = useState<number>(groupPeersPaidStars);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      unmarkPriceForMessagesChanged();\n    }\n  }, [progress]);\n\n  const handleSavePermissions = useLastCallback(() => {\n    if (!chat) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatDefaultBannedRights({ chatId: chat.id, bannedRights: permissions });\n  });\n\n  const handleUpdatePaidMessagesPrice = useLastCallback(() => {\n    if (!chat) return;\n    updatePaidMessagesPrice({\n      chatId: chat?.id,\n      paidMessagesStars: isPriceForMessagesOpen ? chargeForMessages : 0,\n    });\n  });\n\n  const handleUpdatePermissions = useLastCallback(() => {\n    if (isPriceForMessagesChanged) {\n      handleUpdatePaidMessagesPrice();\n    }\n    if (havePermissionChanged) {\n      handleSavePermissions();\n    }\n  });\n\n  const exceptionMembers = useMemo(() => {\n    if (!members) {\n      return [];\n    }\n\n    return members.filter(({ bannedRights }) => Boolean(bannedRights));\n  }, [members]);\n\n  const getMemberExceptions = useCallback((member: ApiChatMember) => {\n    const { bannedRights } = member;\n    if (!bannedRights || !chat) {\n      return undefined;\n    }\n\n    const { defaultBannedRights } = chat;\n\n    return Object.keys(bannedRights).reduce((result, k) => {\n      const key = k as keyof ApiChatBannedRights;\n      if (\n        !bannedRights[key]\n        || (defaultBannedRights?.[key])\n        || key === 'sendInline' || key === 'viewMessages' || key === 'sendGames'\n      ) {\n        return result;\n      }\n\n      const langKey = getLangKeyForBannedRightKey(key);\n\n      if (!langKey) {\n        return result;\n      }\n\n      const translatedString = oldLang(langKey);\n\n      return `${result}${!result.length ? translatedString : `, ${translatedString}`}`;\n    }, '');\n  }, [chat, oldLang]);\n\n  const handleChargeStarsForMessages = useLastCallback(() => {\n    setIsPriceForMessagesOpen(!isPriceForMessagesOpen);\n    markPriceForMessagesChanged();\n  });\n\n  const handleChargeForMessagesChange = useLastCallback((value: number) => {\n    setChargeForMessages(value);\n    markPriceForMessagesChanged();\n  });\n\n  const arePermissionsChanged = isPriceForMessagesChanged || havePermissionChanged;\n  const arePermissionsLoading = progress === ManagementProgress.InProgress || isLoading;\n\n  return (\n    <div\n      className=\"Management with-shifted-dropdown\"\n      style={`--shift-height: ${ITEMS_COUNT * ITEM_HEIGHT}px;`\n        + `--before-shift-height: ${BEFORE_ITEMS_COUNT * ITEM_HEIGHT}px;`}\n    >\n      <div className=\"panel-content custom-scroll\">\n        <div className=\"section without-bottom-shadow\">\n          <h3 className=\"section-heading\" dir=\"auto\">{lang('ChannelPermissionsHeader')}</h3>\n          <PermissionCheckboxList\n            chatId={chat?.id}\n            isMediaDropdownOpen={isMediaDropdownOpen}\n            setIsMediaDropdownOpen={setIsMediaDropdownOpen}\n            handlePermissionChange={handlePermissionChange}\n            permissions={permissions}\n            dropdownClassName=\"DropdownListTrap\"\n            className={buildClassName(\n              'DropdownList',\n              isMediaDropdownOpen && 'DropdownList--open',\n            )}\n            shiftedClassName={buildClassName('part', isMediaDropdownOpen && 'shifted')}\n          />\n        </div>\n\n        {arePaidMessagesAvailable && (\n          <div\n            className={buildClassName(\n              'section',\n              isMediaDropdownOpen && 'shifted',\n            )}\n          >\n            <ListItem onClick={handleChargeStarsForMessages}>\n              <span>{lang('GroupMessagesChargePrice')}</span>\n              <Switcher\n                id=\"charge_for_messages\"\n                label={lang('GroupMessagesChargePrice')}\n                checked={isPriceForMessagesOpen}\n              />\n            </ListItem>\n            <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang('RightsChargeStarsAbout')}\n            </p>\n          </div>\n        )}\n\n        {isPriceForMessagesOpen && (\n          <div\n            className={buildClassName(\n              'section',\n              isMediaDropdownOpen && 'shifted',\n            )}\n          >\n            <PaidMessagePrice\n              canChangeChargeForMessages\n              isGroupChat\n              chargeForMessages={chargeForMessages}\n              onChange={handleChargeForMessagesChange}\n            />\n          </div>\n        )}\n\n        <div\n          className={buildClassName(\n            'section',\n            isMediaDropdownOpen && 'shifted',\n          )}\n        >\n          <ListItem\n            icon=\"delete-user\"\n            multiline\n            narrow\n            onClick={handleRemovedUsersClick}\n          >\n            <span className=\"title\">{lang('ChannelBlockedUsers')}</span>\n            <span className=\"subtitle\">{removedUsersCount}</span>\n          </ListItem>\n        </div>\n\n        <div\n          className={buildClassName(\n            'section',\n            isMediaDropdownOpen && 'shifted',\n          )}\n        >\n          <h3 className=\"section-heading\" dir=\"auto\">{lang('PrivacyExceptions')}</h3>\n\n          <ListItem\n            icon=\"add-user\"\n            onClick={handleAddExceptionClick}\n          >\n            {lang('ChannelAddException')}\n          </ListItem>\n\n          {exceptionMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable exceptions-member\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleExceptionMemberClick(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getMemberExceptions(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={arePermissionsChanged}\n        onClick={handleUpdatePermissions}\n        ariaLabel={lang('Save')}\n        disabled={arePermissionsLoading}\n      >\n        {arePermissionsLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const fullInfo = selectChatFullInfo(global, chatId);\n    const { progress } = selectTabState(global).management;\n\n    const paidMessagesStars = chat?.paidMessagesStars;\n    const configStarsPaidMessageCommissionPermille = global.appConfig?.starsPaidMessageCommissionPermille;\n\n    return {\n      chat,\n      progress,\n      currentUserId: global.currentUserId,\n      removedUsersCount: fullInfo?.kickedMembers?.length || 0,\n      members: fullInfo?.members,\n      arePaidMessagesAvailable: Boolean(fullInfo?.arePaidMessagesAvailable && configStarsPaidMessageCommissionPermille),\n      canChargeForMessages: Boolean(paidMessagesStars && configStarsPaidMessageCommissionPermille),\n      groupPeersPaidStars: paidMessagesStars || DEFAULT_CHARGE_FOR_MESSAGES,\n    };\n  },\n)(ManageGroupPermissions));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatBannedRights, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useManagePermissions from '../hooks/useManagePermissions';\n\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport PermissionCheckboxList from '../../main/PermissionCheckboxList';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  selectedChatMemberId?: string;\n  isPromotedByCurrentUser?: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  hasFullInfo?: boolean;\n  members?: ApiChatMember[];\n  isFormFullyDisabled?: boolean;\n};\n\nconst ITEM_HEIGHT = 48;\nconst SHIFT_HEIGHT_MINUS = 1;\nconst BEFORE_ITEMS_COUNT = 2;\nconst BEFORE_USER_INFO_HEIGHT = 96;\nconst ITEMS_COUNT = 9;\n\nconst ManageGroupUserPermissions: FC<OwnProps & StateProps> = ({\n  chat,\n  selectedChatMemberId,\n  hasFullInfo,\n  members,\n  onScreenSelect,\n  isFormFullyDisabled,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatMemberBannedRights } = getActions();\n\n  const selectedChatMember = useMemo(() => {\n    if (!members) {\n      return undefined;\n    }\n\n    return members.find(({ userId }) => userId === selectedChatMemberId);\n  }, [members, selectedChatMemberId]);\n\n  const {\n    permissions, havePermissionChanged, isLoading, handlePermissionChange, setIsLoading,\n  } = useManagePermissions(selectedChatMember?.bannedRights || chat?.defaultBannedRights);\n  const [isBanConfirmationDialogOpen, openBanConfirmationDialog, closeBanConfirmationDialog] = useFlag();\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (hasFullInfo && selectedChatMemberId && !selectedChatMember) {\n      onScreenSelect(ManagementScreens.GroupPermissions);\n    }\n  }, [chat, hasFullInfo, onScreenSelect, selectedChatMember, selectedChatMemberId]);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!chat || !selectedChatMemberId) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatMemberBannedRights({\n      chatId: chat.id,\n      userId: selectedChatMemberId,\n      bannedRights: permissions,\n    });\n  }, [chat, selectedChatMemberId, setIsLoading, updateChatMemberBannedRights, permissions]);\n\n  const handleBanFromGroup = useCallback(() => {\n    if (!chat || !selectedChatMemberId) {\n      return;\n    }\n\n    updateChatMemberBannedRights({\n      chatId: chat.id,\n      userId: selectedChatMemberId,\n      bannedRights: {\n        viewMessages: true,\n      },\n    });\n  }, [chat, selectedChatMemberId, updateChatMemberBannedRights]);\n\n  const getControlIsDisabled = useCallback((key: Exclude<keyof ApiChatBannedRights, 'untilDate'>) => {\n    if (isFormFullyDisabled) {\n      return true;\n    }\n\n    if (!chat || !chat.defaultBannedRights) {\n      return false;\n    }\n\n    return chat.defaultBannedRights[key];\n  }, [chat, isFormFullyDisabled]);\n\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n\n  if (!selectedChatMember) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className=\"Management with-shifted-dropdown\"\n      style={`--shift-height: ${ITEMS_COUNT * ITEM_HEIGHT - SHIFT_HEIGHT_MINUS}px;`\n           + `--before-shift-height: ${BEFORE_ITEMS_COUNT * ITEM_HEIGHT + BEFORE_USER_INFO_HEIGHT}px;`}\n    >\n      <div className=\"custom-scroll\">\n        <div className=\"section without-bottom-shadow\">\n          <ListItem inactive className=\"chat-item-clickable\">\n            <PrivateChatInfo userId={selectedChatMember.userId} forceShowSelf />\n          </ListItem>\n\n          <h3 className=\"section-heading mt-4\" dir=\"auto\">{oldLang('UserRestrictionsCanDo')}</h3>\n          <PermissionCheckboxList\n            chatId={chat?.id}\n            isMediaDropdownOpen={isMediaDropdownOpen}\n            setIsMediaDropdownOpen={setIsMediaDropdownOpen}\n            handlePermissionChange={handlePermissionChange}\n            permissions={permissions}\n            className={buildClassName(\n              'DropdownList',\n              isMediaDropdownOpen && 'DropdownList--open',\n            )}\n            dropdownClassName=\"DropdownListTrap\"\n            shiftedClassName={buildClassName('part', isMediaDropdownOpen && 'shifted')}\n            getControlIsDisabled={getControlIsDisabled}\n          />\n        </div>\n\n        {!isFormFullyDisabled && (\n          <div\n            className={buildClassName(\n              'section',\n              isMediaDropdownOpen && 'shifted',\n            )}\n          >\n            <ListItem icon=\"delete-user\" ripple destructive onClick={openBanConfirmationDialog}>\n              {oldLang('UserRestrictionsBlock')}\n            </ListItem>\n          </div>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={havePermissionChanged}\n        onClick={handleSavePermissions}\n        ariaLabel={oldLang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n\n      <ConfirmDialog\n        isOpen={isBanConfirmationDialogOpen}\n        onClose={closeBanConfirmationDialog}\n        text={lang('GroupManagementBanUserConfirm')}\n        confirmLabel=\"Remove\"\n        confirmHandler={handleBanFromGroup}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isPromotedByCurrentUser }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const fullInfo = selectChatFullInfo(global, chatId);\n    const isFormFullyDisabled = !(chat.isCreator || isPromotedByCurrentUser);\n\n    return {\n      chat,\n      isFormFullyDisabled,\n      hasFullInfo: Boolean(fullInfo),\n      members: fullInfo?.members,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageGroupUserPermissions));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatMember, ApiUser, ApiUserStatus } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { isChatChannel, sortUserIds } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport NothingFound from '../../common/NothingFound';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  userStatusesById: Record<string, ApiUserStatus>;\n  members?: ApiChatMember[];\n  isChannel?: boolean;\n};\n\nconst ManageGroupUserPermissionsCreate: FC<OwnProps & StateProps> = ({\n  usersById,\n  userStatusesById,\n  members,\n  isChannel,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n  isActive,\n}) => {\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const memberIds = useMemo(() => {\n    if (!members || !usersById) {\n      return undefined;\n    }\n\n    return sortUserIds(\n      members.filter((member) => !member.isOwner).map(({ userId }) => userId),\n      usersById,\n      userStatusesById,\n    );\n  }, [members, usersById, userStatusesById]);\n\n  const handleExceptionMemberClick = useCallback((memberId: string) => {\n    onChatMemberSelect(memberId);\n    onScreenSelect(ManagementScreens.GroupUserPermissions);\n  }, [onChatMemberSelect, onScreenSelect]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" teactFastList>\n          {memberIds ? (\n            memberIds.map((id, i) => (\n              <ListItem\n                key={id}\n                teactOrderKey={i}\n                className=\"chat-item-clickable scroll-item\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleExceptionMemberClick(id)}\n              >\n                <PrivateChatInfo userId={id} forceShowSelf />\n              </ListItem>\n            ))\n          ) : (\n            <NothingFound\n              teactOrderKey={0}\n              key=\"nothing-found\"\n              text={isChannel ? 'No subscribers found' : 'No members found'}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { byId: usersById, statusesById: userStatusesById } = global.users;\n    const members = selectChatFullInfo(global, chatId)?.members;\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      members,\n      usersById,\n      userStatusesById,\n      isChannel,\n    };\n  },\n)(ManageGroupUserPermissionsCreate));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiExportedInvite } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { formatFullDate, formatTime } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport CalendarModal from '../../common/CalendarModal';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport RadioGroup from '../../ui/RadioGroup';\n\nconst DEFAULT_USAGE_LIMITS = [1, 10, 100];\nconst DEFAULT_EXPIRE_DATE = {\n  hour: 3600000,\n  day: 86400000,\n  week: 604800000,\n};\nconst DEFAULT_CUSTOM_EXPIRE_DATE = DEFAULT_EXPIRE_DATE.hour;\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  editingInvite?: ApiExportedInvite;\n};\n\nconst ManageInvite: FC<OwnProps & StateProps> = ({\n  chatId,\n  editingInvite,\n  isActive,\n  onClose,\n  onScreenSelect,\n}) => {\n  const { editExportedChatInvite, exportChatInvite } = getActions();\n\n  const lang = useOldLang();\n  const [isCalendarOpened, openCalendar, closeCalendar] = useFlag();\n  const [isRequestNeeded, setIsRequestNeeded] = useState(false);\n  const [title, setTitle] = useState('');\n  const [customExpireDate, setCustomExpireDate] = useState<number>(Date.now() + DEFAULT_CUSTOM_EXPIRE_DATE);\n  const [selectedExpireOption, setSelectedExpireOption] = useState('unlimited');\n  const [customUsageLimit, setCustomUsageLimit] = useState<number | undefined>(10);\n  const [selectedUsageOption, setSelectedUsageOption] = useState('0');\n  const [isSubmitBlocked, setIsSubmitBlocked] = useState(false);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useSyncEffect(([oldEditingInvite]) => {\n    if (oldEditingInvite === editingInvite) return;\n    if (!editingInvite) {\n      setTitle('');\n      setSelectedExpireOption('unlimited');\n      setSelectedUsageOption('0');\n      setCustomExpireDate(getServerTime() * 1000 + DEFAULT_CUSTOM_EXPIRE_DATE);\n      setCustomUsageLimit(10);\n      setIsRequestNeeded(false);\n    } else {\n      const {\n        title: editingTitle, usageLimit, expireDate, isRequestNeeded: editingIsRequestNeeded,\n      } = editingInvite;\n      if (editingTitle) setTitle(editingTitle);\n      if (usageLimit) {\n        setSelectedUsageOption(DEFAULT_USAGE_LIMITS.includes(usageLimit) ? usageLimit.toString() : 'custom');\n        setCustomUsageLimit(usageLimit);\n      }\n      if (expireDate) {\n        const minSafeDate = getServerTime() + DEFAULT_CUSTOM_EXPIRE_DATE;\n        setSelectedExpireOption('custom');\n        setCustomExpireDate(Math.max(expireDate, minSafeDate) * 1000);\n      }\n      if (editingIsRequestNeeded) {\n        setIsRequestNeeded(true);\n      }\n    }\n  }, [editingInvite]);\n\n  const handleIsRequestChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsRequestNeeded(e.target.checked);\n  }, []);\n\n  const handleTitleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n  }, []);\n\n  const handleCustomUsageLimitChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setCustomUsageLimit(Number.parseInt(e.target.value, 10));\n  }, []);\n\n  const handleExpireDateChange = useCallback((date: Date) => {\n    setCustomExpireDate(date.getTime());\n    closeCalendar();\n  }, [closeCalendar]);\n\n  const handleSaveClick = useCallback(() => {\n    setIsSubmitBlocked(true);\n    const usageLimit = selectedUsageOption === 'custom' ? customUsageLimit : Number(selectedUsageOption);\n    let expireDate;\n    switch (selectedExpireOption) {\n      case 'custom':\n        expireDate = getServerTime() + (customExpireDate - Date.now()) / 1000;\n        break;\n      case 'hour':\n      case 'day':\n      case 'week':\n        expireDate = getServerTime() + DEFAULT_EXPIRE_DATE[selectedExpireOption] / 1000;\n        break;\n      case 'unlimited':\n        expireDate = 0;\n        break;\n      default:\n        expireDate = undefined;\n    }\n\n    if (editingInvite) {\n      editExportedChatInvite({\n        link: editingInvite.link,\n        chatId,\n        title,\n        isRequestNeeded,\n        expireDate,\n        usageLimit,\n      });\n    } else {\n      exportChatInvite({\n        chatId,\n        title,\n        isRequestNeeded,\n        expireDate,\n        usageLimit,\n      });\n    }\n    onScreenSelect(ManagementScreens.Invites);\n  }, [\n    chatId, customExpireDate, customUsageLimit, editExportedChatInvite, editingInvite,\n    exportChatInvite, isRequestNeeded, selectedExpireOption, selectedUsageOption, title, onScreenSelect,\n  ]);\n\n  return (\n    <div className=\"Management ManageInvite\">\n      <div className=\"panel-content custom-scroll\">\n        <div className=\"section\">\n          <Checkbox\n            label={lang('ApproveNewMembers')}\n            subLabel={lang('ApproveNewMembersDescription')}\n            checked={isRequestNeeded}\n            onChange={handleIsRequestChange}\n          />\n        </div>\n        <div className=\"section\">\n          <InputText\n            className=\"link-name\"\n            placeholder={lang('LinkNameHint')}\n            value={title}\n            onChange={handleTitleChange}\n          />\n          <p className=\"section-help hint\">{lang('LinkNameHelp')}</p>\n        </div>\n        <div className=\"section\">\n          <div className=\"section-heading\">{lang('LimitByPeriod')}</div>\n          <RadioGroup\n            name=\"expireOptions\"\n            options={[\n              {\n                value: 'hour',\n                label: lang('Hours', 1),\n              },\n              {\n                value: 'day',\n                label: lang('Days', 1),\n              },\n              {\n                value: 'week',\n                label: lang('Weeks', 1),\n              },\n              {\n                value: 'unlimited',\n                label: lang('NoLimit'),\n              },\n              {\n                value: 'custom',\n                label: lang('lng_group_invite_expire_custom'),\n              },\n            ]}\n            onChange={setSelectedExpireOption}\n            selected={selectedExpireOption}\n          />\n          {selectedExpireOption === 'custom' && (\n            <Button className=\"expire-limit\" isText onClick={openCalendar}>\n              {formatFullDate(lang, customExpireDate)} {formatTime(lang, customExpireDate)}\n            </Button>\n          )}\n          <p className=\"section-help hint\">{lang('TimeLimitHelp')}</p>\n        </div>\n        {!isRequestNeeded && (\n          <div className=\"section\">\n            <div className=\"section-heading\">{lang('LimitNumberOfUses')}</div>\n            <RadioGroup\n              name=\"usageOptions\"\n              options={[\n                ...DEFAULT_USAGE_LIMITS.map((n) => ({ value: n.toString(), label: n })),\n                {\n                  value: '0',\n                  label: lang('NoLimit'),\n                },\n                {\n                  value: 'custom',\n                  label: lang('lng_group_invite_usage_custom'),\n                },\n              ]}\n              onChange={setSelectedUsageOption}\n              selected={selectedUsageOption}\n            />\n            {selectedUsageOption === 'custom' && (\n              <input\n                className=\"form-control usage-limit\"\n                type=\"number\"\n                min=\"1\"\n                max=\"99999\"\n                value={customUsageLimit}\n                onChange={handleCustomUsageLimitChange}\n              />\n            )}\n            <p className=\"section-help hint\">{lang('UsesLimitHelp')}</p>\n          </div>\n        )}\n        <FloatingActionButton\n          isShown\n          onClick={handleSaveClick}\n          disabled={isSubmitBlocked}\n          ariaLabel={editingInvite ? lang('SaveLink') : lang('CreateLink')}\n        >\n          <Icon name=\"check\" />\n        </FloatingActionButton>\n      </div>\n      <CalendarModal\n        isOpen={isCalendarOpened}\n        isFutureMode\n        withTimePicker\n        onClose={closeCalendar}\n        onSubmit={handleExpireDateChange}\n        selectedAt={customExpireDate}\n        submitButtonLabel={lang('Save')}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { editingInvite } = selectTabState(global).management.byChatId[chatId] || {};\n\n    return {\n      editingInvite,\n    };\n  },\n)(ManageInvite));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChatInviteImporter, ApiExportedInvite, ApiUser } from '../../../api/types';\n\nimport { isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { formatFullDate, formatMediaDateTime, formatTime } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport LinkField from '../../common/LinkField';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  invite?: ApiExportedInvite;\n  importers?: ApiChatInviteImporter[];\n  requesters?: ApiChatInviteImporter[];\n  admin?: ApiUser;\n  isChannel?: boolean;\n};\n\nconst BULLET = '\\u2022';\n\nconst ManageInviteInfo: FC<OwnProps & StateProps> = ({\n  chatId,\n  invite,\n  importers,\n  requesters,\n  isChannel,\n  isActive,\n  onClose,\n}) => {\n  const {\n    loadChatInviteImporters,\n    loadChatInviteRequesters,\n    openChat,\n  } = getActions();\n\n  const lang = useOldLang();\n  const {\n    usage = 0, usageLimit, link, adminId,\n  } = invite || {};\n  const expireDate = invite?.expireDate && (invite.expireDate - getServerTime()) * 1000 + Date.now();\n  const isExpired = ((invite?.expireDate || 0) - getServerTime()) < 0;\n\n  useEffect(() => {\n    if (link) {\n      loadChatInviteImporters({ chatId, link });\n      loadChatInviteRequesters({ chatId, link });\n    }\n  }, [chatId, link, loadChatInviteImporters, loadChatInviteRequesters]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const renderImporters = () => {\n    if (!importers?.length && requesters?.length) return undefined;\n    if (!importers) return <Spinner />;\n    return (\n      <div className=\"section\">\n        <p className=\"section-heading\">{importers.length ? lang('PeopleJoined', usage) : lang('NoOneJoined')}</p>\n        <p className=\"section-help\">\n          {!importers.length && (\n            usageLimit ? lang('PeopleCanJoinViaLinkCount', usageLimit - usage) : lang('NoOneJoinedYet')\n          )}\n          {importers.map((importer) => {\n            const joinTime = formatMediaDateTime(lang, importer.date * 1000, true);\n            const status = importer.isFromChatList ? `${joinTime} ${BULLET} ${lang('JoinedViaFolder')}` : joinTime;\n            return (\n              <ListItem\n                className=\"chat-item-clickable scroll-item small-icon\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => openChat({ id: importer.userId })}\n              >\n                <PrivateChatInfo\n                  userId={importer.userId}\n                  status={status}\n                  forceShowSelf\n                />\n              </ListItem>\n            );\n          })}\n        </p>\n      </div>\n    );\n  };\n\n  const renderRequesters = () => {\n    if (invite?.isRevoked) return undefined;\n    if (!requesters && importers) return <Spinner />;\n    if (!requesters?.length) return undefined;\n    return (\n      <div className=\"section\">\n        <p className=\"section-heading\">{isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}</p>\n        <p className=\"section-help\">\n          {requesters.map((requester) => (\n            <ListItem\n              className=\"chat-item-clickable scroll-item small-icon\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => openChat({ id: requester.userId })}\n            >\n              <PrivateChatInfo\n                userId={requester.userId}\n                status={formatMediaDateTime(lang, requester.date * 1000, true)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n        </p>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"Management ManageInviteInfo\">\n      <div className=\"panel-content custom-scroll\">\n        {!invite && (\n          <p className=\"section-help\">{lang('Loading')}</p>\n        )}\n        {invite && (\n          <>\n            <div className=\"section\">\n              <LinkField title={invite.title} link={invite.link} className=\"invite-link\" />\n              {Boolean(expireDate) && (\n                <p className=\"section-help\">\n                  {isExpired\n                    ? lang('ExpiredLink')\n                    : lang('LinkExpiresIn', `${formatFullDate(lang, expireDate)} ${formatTime(lang, expireDate)}`)}\n                </p>\n              )}\n            </div>\n            {adminId && (\n              <div className=\"section\">\n                <p className=\"section-heading\">{lang('LinkCreatedeBy')}</p>\n                <ListItem\n                  className=\"chat-item-clickable scroll-item small-icon\"\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => openChat({ id: adminId })}\n                >\n                  <PrivateChatInfo\n                    userId={adminId}\n                    status={formatMediaDateTime(lang, invite.date * 1000, true)}\n                    forceShowSelf\n                  />\n                </ListItem>\n              </div>\n            )}\n            {renderImporters()}\n            {renderRequesters()}\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { inviteInfo } = selectTabState(global).management.byChatId[chatId] || {};\n    const { invite, importers, requesters } = inviteInfo || {};\n    const chat = selectChat(global, chatId);\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      invite,\n      importers,\n      requesters,\n      isChannel,\n    };\n  },\n)(ManageInviteInfo));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiExportedInvite } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { STICKER_SIZE_INVITES, TME_LINK_PREFIX } from '../../../config';\nimport { getMainUsername, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatCountdown, MILLISECONDS_IN_DAY } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport Icon from '../../common/icons/Icon';\nimport LinkField from '../../common/LinkField';\nimport NothingFound from '../../common/NothingFound';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isChannel?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  revokedExportedInvites?: ApiExportedInvite[];\n};\n\nconst BULLET = '\\u2022';\n\nfunction inviteComparator(i1: ApiExportedInvite, i2: ApiExportedInvite) {\n  const { isPermanent: i1IsPermanent, usage: i1Usage = 0, date: i1Date } = i1;\n  const { isPermanent: i2IsPermanent, usage: i2Usage = 0, date: i2Date } = i2;\n  if (i1IsPermanent || i2IsPermanent) return Number(i1IsPermanent) - Number(i2IsPermanent);\n  if (i1Usage || i2Usage) return i2Usage - i1Usage;\n  return i2Date - i1Date;\n}\n\nconst ManageInvites: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  exportedInvites,\n  revokedExportedInvites,\n  isActive,\n  isChannel,\n  onClose,\n  onScreenSelect,\n}) => {\n  const {\n    setEditingExportedInvite,\n    showNotification,\n    editExportedChatInvite,\n    deleteExportedChatInvite,\n    deleteRevokedExportedChatInvites,\n    setOpenedInviteInfo,\n  } = getActions();\n\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  const [isDeleteRevokeAllDialogOpen, openDeleteRevokeAllDialog, closeDeleteRevokeAllDialog] = useFlag();\n  const [isRevokeDialogOpen, openRevokeDialog, closeRevokeDialog] = useFlag();\n  const [revokingInvite, setRevokingInvite] = useState<ApiExportedInvite | undefined>();\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [deletingInvite, setDeletingInvite] = useState<ApiExportedInvite | undefined>();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const hasDetailedCountdown = useMemo(() => {\n    if (!exportedInvites) return undefined;\n    return exportedInvites\n      .some(({ expireDate }) => (\n        expireDate && (expireDate - getServerTime() < MILLISECONDS_IN_DAY / 1000)\n      ));\n  }, [exportedInvites]);\n  const forceUpdate = useForceUpdate();\n  useInterval(forceUpdate, hasDetailedCountdown ? 1000 : undefined);\n\n  const chatMainUsername = useMemo(() => chat && getMainUsername(chat), [chat]);\n  const primaryInvite = exportedInvites?.find(({ isPermanent }) => isPermanent);\n  const primaryInviteLink = chatMainUsername ? `${TME_LINK_PREFIX}${chatMainUsername}` : primaryInvite?.link;\n  const temporalInvites = useMemo(() => {\n    const invites = chat?.usernames ? exportedInvites : exportedInvites?.filter(({ isPermanent }) => !isPermanent);\n    return invites?.sort(inviteComparator);\n  }, [chat?.usernames, exportedInvites]);\n\n  const editInvite = (invite: ApiExportedInvite) => {\n    setEditingExportedInvite({ chatId, invite });\n    onScreenSelect(ManagementScreens.EditInvite);\n  };\n\n  const revokeInvite = useCallback((invite: ApiExportedInvite) => {\n    const {\n      link, title, isRequestNeeded, expireDate, usageLimit,\n    } = invite;\n    editExportedChatInvite({\n      chatId,\n      link,\n      title,\n      isRequestNeeded,\n      expireDate,\n      usageLimit,\n      isRevoked: true,\n    });\n  }, [chatId, editExportedChatInvite]);\n\n  const askToRevoke = useCallback((invite: ApiExportedInvite) => {\n    setRevokingInvite(invite);\n    openRevokeDialog();\n  }, [openRevokeDialog]);\n\n  const handleRevoke = useCallback(() => {\n    if (!revokingInvite) return;\n    revokeInvite(revokingInvite);\n    setRevokingInvite(undefined);\n    closeRevokeDialog();\n  }, [closeRevokeDialog, revokeInvite, revokingInvite]);\n\n  const handleCreateNewClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.EditInvite);\n  }, [onScreenSelect]);\n\n  const handlePrimaryRevoke = useCallback(() => {\n    if (primaryInvite) {\n      askToRevoke(primaryInvite);\n    }\n  }, [askToRevoke, primaryInvite]);\n\n  const handleDeleteAllRevoked = useCallback(() => {\n    deleteRevokedExportedChatInvites({ chatId });\n    closeDeleteRevokeAllDialog();\n  }, [chatId, closeDeleteRevokeAllDialog, deleteRevokedExportedChatInvites]);\n\n  const showInviteInfo = useCallback((invite: ApiExportedInvite) => {\n    setOpenedInviteInfo({ chatId, invite });\n    onScreenSelect(ManagementScreens.InviteInfo);\n  }, [chatId, onScreenSelect, setOpenedInviteInfo]);\n\n  const deleteInvite = useCallback((invite: ApiExportedInvite) => {\n    deleteExportedChatInvite({ chatId, link: invite.link });\n  }, [chatId, deleteExportedChatInvite]);\n\n  const askToDelete = useCallback((invite: ApiExportedInvite) => {\n    setDeletingInvite(invite);\n    openDeleteDialog();\n  }, [openDeleteDialog]);\n\n  const handleDelete = useCallback(() => {\n    if (!deletingInvite) return;\n    deleteInvite(deletingInvite);\n    setDeletingInvite(undefined);\n    closeDeleteDialog();\n  }, [closeDeleteDialog, deleteInvite, deletingInvite]);\n\n  const copyLink = useCallback((link: string) => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: oldLang('LinkCopied'),\n    });\n  }, [oldLang, showNotification]);\n\n  const prepareUsageText = (invite: ApiExportedInvite) => {\n    const {\n      usage = 0, usageLimit, expireDate, isPermanent, requested, isRevoked,\n    } = invite;\n    let text = '';\n    if (!isRevoked && usageLimit && usage < usageLimit) {\n      text = oldLang('CanJoin', usageLimit - usage);\n    } else if (usage) {\n      text = oldLang('PeopleJoined', usage);\n    } else {\n      text = oldLang('NoOneJoined');\n    }\n\n    if (isRevoked) {\n      text += ` ${BULLET} ${oldLang('Revoked')}`;\n      return text;\n    }\n\n    if (requested) {\n      text += ` ${BULLET} ${oldLang('JoinRequests', requested)}`;\n    }\n\n    if (usageLimit !== undefined && usage === usageLimit) {\n      text += ` ${BULLET} ${oldLang('LinkLimitReached')}`;\n    } else if (expireDate) {\n      const diff = expireDate - getServerTime();\n      text += ` ${BULLET} `;\n      if (diff > 0) {\n        text += oldLang('InviteLink.ExpiresIn', formatCountdown(lang, diff));\n      } else {\n        text += oldLang('InviteLink.Expired');\n      }\n    } else if (isPermanent) {\n      text += ` ${BULLET} ${oldLang('Permanent')}`;\n    }\n\n    return text;\n  };\n\n  const getInviteIconClass = (invite: ApiExportedInvite) => {\n    const {\n      usage = 0, usageLimit, isRevoked, expireDate,\n    } = invite;\n    if (isRevoked) {\n      return 'link-status-icon-gray';\n    }\n    if (usageLimit && usage < usageLimit) {\n      return 'link-status-icon-green';\n    }\n    if (expireDate) {\n      const diff = (expireDate - getServerTime()) * 1000;\n      if (diff <= 0) {\n        return 'link-status-icon-red';\n      }\n    }\n    return 'link-status-icon-blue';\n  };\n\n  const prepareContextActions = (invite: ApiExportedInvite) => {\n    const actions: MenuItemContextAction[] = [];\n    actions.push({\n      title: oldLang('Copy'),\n      icon: 'copy',\n      handler: () => copyLink(invite.link),\n    });\n\n    if (!invite.isPermanent && !invite.isRevoked) {\n      actions.push({\n        title: oldLang('Edit'),\n        icon: 'edit',\n        handler: () => editInvite(invite),\n      });\n    }\n\n    if (!invite.isRevoked) {\n      actions.push({\n        title: oldLang('RevokeButton'),\n        icon: 'delete',\n        handler: () => askToRevoke(invite),\n        destructive: true,\n      });\n    } else {\n      actions.push({\n        title: oldLang('DeleteLink'),\n        icon: 'delete',\n        handler: () => askToDelete(invite),\n        destructive: true,\n      });\n    }\n    return actions;\n  };\n\n  return (\n    <div className=\"Management ManageInvites\">\n      <div className=\"panel-content custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIconWithPreview\n            tgsUrl={LOCAL_TGS_URLS.Invite}\n            size={STICKER_SIZE_INVITES}\n            className=\"section-icon\"\n          />\n          <p className=\"section-help\">{isChannel ? oldLang('PrimaryLinkHelpChannel') : oldLang('PrimaryLinkHelp')}</p>\n        </div>\n        {primaryInviteLink && (\n          <div className=\"section\">\n            <LinkField\n              className=\"settings-input\"\n              link={primaryInviteLink}\n              withShare\n              onRevoke={!chat?.usernames ? handlePrimaryRevoke : undefined}\n              title={chat?.usernames ? oldLang('PublicLink') : oldLang('lng_create_permanent_link_title')}\n            />\n          </div>\n        )}\n        <div className=\"section\" teactFastList>\n          <ListItem icon=\"add\" withPrimaryColor key=\"create\" className=\"create-link\" onClick={handleCreateNewClick}>\n            {oldLang('CreateNewLink')}\n          </ListItem>\n          {(!temporalInvites || !temporalInvites.length) && <NothingFound text=\"No links found\" key=\"nothing\" />}\n          {temporalInvites?.map((invite) => (\n            <ListItem\n              leftElement={<Icon name=\"link\" className={`link-status-icon ${getInviteIconClass(invite)}`} />}\n              secondaryIcon=\"more\"\n              multiline\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => showInviteInfo(invite)}\n              contextActions={prepareContextActions(invite)}\n              key={invite.link}\n            >\n              <span className=\"title invite-title\">{invite.title || invite.link}</span>\n              <span className=\"subtitle\" dir=\"auto\">\n                {prepareUsageText(invite)}\n              </span>\n            </ListItem>\n          ))}\n          <p className=\"section-help hint\" key=\"links-hint\">{oldLang('ManageLinksInfoHelp')}</p>\n        </div>\n        {revokedExportedInvites && Boolean(revokedExportedInvites.length) && (\n          <div className=\"section\" teactFastList>\n            <p className=\"section-help\" key=\"title\">{oldLang('RevokedLinks')}</p>\n            <ListItem\n              icon=\"delete\"\n              destructive\n              key=\"delete\"\n              onClick={openDeleteRevokeAllDialog}\n            >\n              <span className=\"title\">{oldLang('DeleteAllRevokedLinks')}</span>\n            </ListItem>\n            {revokedExportedInvites?.map((invite) => (\n              <ListItem\n                leftElement={<Icon name=\"link\" className={`link-status-icon ${getInviteIconClass(invite)}`} />}\n                secondaryIcon=\"more\"\n                multiline\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => showInviteInfo(invite)}\n                contextActions={prepareContextActions(invite)}\n                key={invite.link}\n              >\n                <span className=\"title\">{invite.title || invite.link}</span>\n                <span className=\"subtitle\" dir=\"auto\">\n                  {prepareUsageText(invite)}\n                </span>\n              </ListItem>\n            ))}\n          </div>\n        )}\n      </div>\n      <ConfirmDialog\n        isOpen={isDeleteRevokeAllDialogOpen}\n        onClose={closeDeleteRevokeAllDialog}\n        title={oldLang('DeleteAllRevokedLinks')}\n        text={oldLang('DeleteAllRevokedLinkHelp')}\n        confirmIsDestructive\n        confirmLabel={oldLang('DeleteAll')}\n        confirmHandler={handleDeleteAllRevoked}\n      />\n      <ConfirmDialog\n        isOpen={isRevokeDialogOpen}\n        onClose={closeRevokeDialog}\n        title={oldLang('RevokeLink')}\n        text={oldLang('RevokeAlert')}\n        confirmIsDestructive\n        confirmLabel={oldLang('RevokeButton')}\n        confirmHandler={handleRevoke}\n      />\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        title={oldLang('DeleteLink')}\n        text={oldLang('DeleteLinkHelp')}\n        confirmIsDestructive\n        confirmLabel={oldLang('Delete')}\n        confirmHandler={handleDelete}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { invites, revokedInvites } = selectTabState(global).management.byChatId[chatId] || {};\n    const chat = selectChat(global, chatId);\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      exportedInvites: invites,\n      revokedExportedInvites: revokedInvites,\n      chat,\n      isChannel,\n    };\n  },\n)(ManageInvites));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { createClassNameBuilder } from '../../../util/buildClassName';\nimport { formatHumanDate, formatTime, isToday } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Button from '../../ui/Button';\n\nimport './JoinRequest.scss';\n\ntype OwnProps = {\n  userId: string;\n  about?: string;\n  isChannel?: boolean;\n  date: number;\n  chatId: string;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n};\n\nconst JoinRequest: FC<OwnProps & StateProps> = ({\n  userId,\n  chatId,\n  about,\n  date,\n  isChannel,\n  user,\n}) => {\n  const { openChat, hideChatJoinRequest } = getActions();\n\n  const buildClassName = createClassNameBuilder('JoinRequest');\n  const lang = useOldLang();\n\n  const fullName = getUserFullName(user);\n  const fixedDate = (date - getServerTime()) * 1000 + Date.now();\n\n  const dateString = isToday(new Date(fixedDate))\n    ? formatTime(lang, fixedDate) : formatHumanDate(lang, fixedDate, true, false, true);\n\n  const handleUserClick = () => {\n    openChat({ id: userId });\n  };\n\n  const handleAcceptRequest = useCallback(() => {\n    hideChatJoinRequest({ chatId, userId, isApproved: true });\n  }, [chatId, hideChatJoinRequest, userId]);\n\n  const handleRejectRequest = useCallback(() => {\n    hideChatJoinRequest({ chatId, userId, isApproved: false });\n  }, [chatId, hideChatJoinRequest, userId]);\n\n  return (\n    <div className={buildClassName('&')}>\n      <div className={buildClassName('top')}>\n        <div className={buildClassName('user')} onClick={handleUserClick}>\n          <Avatar\n            key={userId}\n            size=\"medium\"\n            peer={user}\n          />\n          <div className={buildClassName('user-info')}>\n            <div className={buildClassName('user-name')}>{fullName}</div>\n            <div className={buildClassName('user-subtitle')}>{about}</div>\n          </div>\n        </div>\n        <div className={buildClassName('date')}>{dateString}</div>\n      </div>\n      <div className={buildClassName('buttons')}>\n        <Button className={buildClassName('button')} onClick={handleAcceptRequest}>\n          {isChannel ? lang('ChannelAddToChannel') : lang('ChannelAddToGroup')}\n        </Button>\n        <Button className={buildClassName('button')} isText onClick={handleRejectRequest}>\n          {lang('DismissRequest')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectUser(global, userId);\n\n    return {\n      user,\n    };\n  },\n)(JoinRequest));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\n\nimport { STICKER_SIZE_JOIN_REQUESTS } from '../../../config';\nimport { isChatChannel, isUserId } from '../../../global/helpers';\nimport { selectChat } from '../../../global/selectors';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Spinner from '../../ui/Spinner';\nimport JoinRequest from './JoinRequest';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isChannel?: boolean;\n};\n\nconst ManageJoinRequests: FC<OwnProps & StateProps> = ({\n  chat,\n  chatId,\n  isActive,\n  isChannel,\n  onClose,\n}) => {\n  const { hideAllChatJoinRequests, loadChatJoinRequests } = getActions();\n  const [isAcceptAllDialogOpen, openAcceptAllDialog, closeAcceptAllDialog] = useFlag();\n  const [isRejectAllDialogOpen, openRejectAllDialog, closeRejectAllDialog] = useFlag();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!chat?.joinRequests && !isUserId(chatId)) {\n      loadChatJoinRequests({ chatId });\n    }\n  }, [chat, chatId, loadChatJoinRequests]);\n\n  const handleAcceptAllRequests = useCallback(() => {\n    hideAllChatJoinRequests({ chatId, isApproved: true });\n    closeAcceptAllDialog();\n  }, [hideAllChatJoinRequests, chatId, closeAcceptAllDialog]);\n\n  const handleRejectAllRequests = useCallback(() => {\n    hideAllChatJoinRequests({ chatId, isApproved: false });\n    closeRejectAllDialog();\n  }, [hideAllChatJoinRequests, chatId, closeRejectAllDialog]);\n\n  return (\n    <div className=\"Management ManageJoinRequests\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIconWithPreview\n            tgsUrl={LOCAL_TGS_URLS.JoinRequest}\n            size={STICKER_SIZE_JOIN_REQUESTS}\n            className=\"section-icon\"\n          />\n          {Boolean(chat?.joinRequests?.length) && (\n            <div className=\"bulk-actions\">\n              <Button className=\"bulk-action-button\" onClick={openAcceptAllDialog}>Accept all</Button>\n              <Button className=\"bulk-action-button\" onClick={openRejectAllDialog} isText>Dismiss all</Button>\n            </div>\n          )}\n        </div>\n        <div className=\"section\" teactFastList>\n          <p key=\"title\">\n            {!chat?.joinRequests ? lang('Loading') : chat.joinRequests.length\n              ? lang('JoinRequests', chat.joinRequests.length) : lang('NoMemberRequests')}\n          </p>\n          {!chat?.joinRequests && (\n            <Spinner key=\"loading\" />\n          )}\n          {chat?.joinRequests?.length === 0 && (\n            <p className=\"section-help\" key=\"empty\">\n              {isChannel ? lang('NoSubscribeRequestsDescription') : lang('NoMemberRequestsDescription')}\n            </p>\n          )}\n          {chat?.joinRequests?.map(({ userId, about, date }) => (\n            <JoinRequest\n              userId={userId}\n              about={about}\n              date={date}\n              isChannel={isChannel}\n              chatId={chatId}\n              key={userId}\n            />\n          ))}\n        </div>\n      </div>\n      <ConfirmDialog\n        isOpen={isAcceptAllDialogOpen}\n        onClose={closeAcceptAllDialog}\n        title=\"Accept all requests?\"\n        text=\"Are you sure you want to accept all requests?\"\n        confirmHandler={handleAcceptAllRequests}\n      />\n      <ConfirmDialog\n        isOpen={isRejectAllDialogOpen}\n        onClose={closeRejectAllDialog}\n        title=\"Reject all requests?\"\n        text=\"Are you sure you want to reject all requests?\"\n        confirmHandler={handleRejectAllRequests}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n\n    return {\n      chat,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageJoinRequests));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatReactions, ApiReaction,\n} from '../../../api/types';\n\nimport {\n  MAX_UNIQUE_REACTIONS,\n} from '../../../config';\nimport { isChatChannel, isSameReaction } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport ReactionStaticEmoji from '../../common/reactions/ReactionStaticEmoji';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport RadioGroup from '../../ui/RadioGroup';\nimport RangeSlider from '../../ui/RangeSlider';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  availableReactions?: ApiAvailableReaction[];\n  enabledReactions?: ApiChatReactions;\n  maxUniqueReactions: number;\n  reactionsLimit?: number;\n  isChannel?: boolean;\n};\n\nconst ManageReactions: FC<OwnProps & StateProps> = ({\n  availableReactions,\n  enabledReactions,\n  chat,\n  isActive,\n  onClose,\n  maxUniqueReactions,\n  reactionsLimit,\n  isChannel,\n}) => {\n  const { setChatEnabledReactions } = getActions();\n\n  const lang = useOldLang();\n  const [isTouched, setIsTouched] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [localEnabledReactions, setLocalEnabledReactions] = useState<ApiChatReactions | undefined>(enabledReactions);\n\n  const [localReactionsLimit, setLocalReactionsLimit] = useState(reactionsLimit);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const reactionsOptions = useMemo(() => [{\n    value: 'all',\n    label: lang('AllReactions'),\n  }, {\n    value: 'some',\n    label: lang('SomeReactions'),\n  }, {\n    value: 'none',\n    label: lang('NoReactions'),\n  }], [lang]);\n\n  const handleSaveReactions = useCallback(() => {\n    if (!chat) return;\n    setIsLoading(true);\n\n    setChatEnabledReactions({\n      chatId: chat.id,\n      enabledReactions: localEnabledReactions,\n      reactionsLimit: localReactionsLimit,\n    });\n  }, [chat, localEnabledReactions, setChatEnabledReactions, localReactionsLimit]);\n\n  useEffect(() => {\n    setIsLoading(false);\n    setIsTouched(false);\n    setLocalEnabledReactions(enabledReactions);\n    setLocalReactionsLimit(reactionsLimit);\n  }, [enabledReactions, reactionsLimit]);\n\n  const availableActiveReactions = useMemo<ApiAvailableReaction[] | undefined>(\n    () => availableReactions?.filter(({ isInactive }) => !isInactive),\n    [availableReactions],\n  );\n\n  useEffect(() => {\n    if (localReactionsLimit !== undefined && localReactionsLimit !== reactionsLimit) {\n      setIsTouched(true);\n      return;\n    }\n\n    if (localEnabledReactions?.type === 'some') {\n      const isReactionsDisabled = enabledReactions?.type !== 'all' && enabledReactions?.type !== 'some';\n\n      if (isReactionsDisabled && localEnabledReactions.allowed.length === 0) {\n        setIsTouched(false);\n        return;\n      }\n    }\n\n    if (localEnabledReactions?.type !== enabledReactions?.type) {\n      setIsTouched(true);\n      return;\n    }\n\n    if (localEnabledReactions?.type === 'some' && enabledReactions?.type === 'some') {\n      const localAllowedReactions = localEnabledReactions.allowed;\n      const enabledAllowedReactions = enabledReactions?.allowed;\n\n      if (localAllowedReactions.length !== enabledAllowedReactions.length\n      || localAllowedReactions.reverse().some(\n        (localReaction) => !enabledAllowedReactions.find(\n          (enabledReaction) => isSameReaction(localReaction, enabledReaction),\n        ),\n      )) {\n        setIsTouched(true);\n        return;\n      }\n    }\n\n    setIsTouched(false);\n  }, [\n    localReactionsLimit,\n    reactionsLimit,\n    localEnabledReactions,\n    enabledReactions,\n  ]);\n\n  const handleReactionsOptionChange = useCallback((value: string) => {\n    if (value === 'all') {\n      setLocalEnabledReactions({ type: 'all' });\n      setLocalReactionsLimit(reactionsLimit);\n    } else if (value === 'some') {\n      setLocalEnabledReactions({\n        type: 'some',\n        allowed: enabledReactions?.type === 'some' ? enabledReactions.allowed : [],\n      });\n      setLocalReactionsLimit(reactionsLimit);\n    } else {\n      setLocalEnabledReactions(undefined);\n      setLocalReactionsLimit(undefined);\n    }\n  }, [enabledReactions, reactionsLimit]);\n\n  const handleReactionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (!chat || !availableActiveReactions) return;\n\n    const { name, checked } = e.currentTarget;\n    if (localEnabledReactions?.type === 'some') {\n      const reaction = { emoticon: name } as ApiReaction;\n      if (checked) {\n        setLocalEnabledReactions({\n          type: 'some',\n          allowed: [...localEnabledReactions.allowed, reaction],\n        });\n      } else {\n        setLocalEnabledReactions({\n          type: 'some',\n          allowed: localEnabledReactions.allowed.filter((local) => !isSameReaction(local, reaction)),\n        });\n      }\n    }\n  }, [availableActiveReactions, chat, localEnabledReactions]);\n\n  const handleReactionsLimitChange = useCallback((value: number) => {\n    setLocalReactionsLimit(value);\n  }, []);\n\n  const renderReactionsMaxCountValue = useCallback((value: number) => {\n    return lang('PeerInfo.AllowedReactions.MaxCountValue', value);\n  }, [lang]);\n\n  const shouldShowReactionsLimit = isChannel\n  && (localEnabledReactions?.type === 'all' || localEnabledReactions?.type === 'some');\n\n  return (\n    <div className=\"Management\">\n      <div className=\"panel-content custom-scroll\">\n        { localReactionsLimit && shouldShowReactionsLimit && (\n          <div className=\"section\">\n            <h3 className=\"section-heading\">\n              {lang('MaximumReactionsHeader')}\n            </h3>\n            <RangeSlider\n              min={1}\n              max={maxUniqueReactions}\n              value={localReactionsLimit}\n              onChange={handleReactionsLimitChange}\n              renderValue={renderReactionsMaxCountValue}\n              isCenteredLayout\n            />\n            <p className=\"section-info section-info_push\">\n              {lang('ChannelReactions.MaxCount.Info')}\n            </p>\n          </div>\n        )}\n        <div className=\"section\">\n          <h3 className=\"section-heading\">\n            {lang('AvailableReactions')}\n          </h3>\n          <RadioGroup\n            selected={localEnabledReactions?.type || 'none'}\n            name=\"reactions\"\n            options={reactionsOptions}\n            onChange={handleReactionsOptionChange}\n          />\n          <p className=\"section-info section-info_push\">\n            {localEnabledReactions?.type === 'all' && lang('EnableAllReactionsInfo')}\n            {localEnabledReactions?.type === 'some' && lang('EnableSomeReactionsInfo')}\n            {!localEnabledReactions && lang('DisableReactionsInfo')}\n          </p>\n        </div>\n        {localEnabledReactions?.type === 'some' && (\n          <div className=\"section section-with-fab\">\n            <h3 className=\"section-heading\">\n              {lang('OnlyAllowThisReactions')}\n            </h3>\n            {availableActiveReactions?.map(({ reaction, title }) => (\n              <div className=\"ListItem\">\n                <Checkbox\n                  name={reaction.emoticon}\n                  checked={localEnabledReactions?.allowed.some((r) => isSameReaction(reaction, r))}\n                  label={(\n                    <div className=\"Reaction\">\n                      <ReactionStaticEmoji reaction={reaction} availableReactions={availableReactions} />\n                      {title}\n                    </div>\n                  )}\n                  withIcon\n                  onChange={handleReactionChange}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={handleSaveReactions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { maxUniqueReactions = MAX_UNIQUE_REACTIONS } = global.appConfig || {};\n\n    const chatFullInfo = selectChatFullInfo(global, chatId);\n    const reactionsLimit = chatFullInfo?.reactionsLimit || maxUniqueReactions;\n    const isChannel = isChatChannel(chat);\n\n    return {\n      enabledReactions: chatFullInfo?.enabledReactions,\n      availableReactions: global.reactions.availableReactions,\n      chat,\n      maxUniqueReactions,\n      reactionsLimit,\n      isChannel,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageReactions));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPhoto, ApiUser } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport { isUserBot } from '../../../global/helpers';\nimport { getIsChatMuted } from '../../../global/helpers/notifications';\nimport {\n  selectChat,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectTabState,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\nimport Spinner from '../../ui/Spinner';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  userId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  progress?: ManagementProgress;\n  isMuted?: boolean;\n  personalPhoto?: ApiPhoto;\n  notPersonalPhoto?: ApiPhoto;\n};\n\nconst ERROR_FIRST_NAME_MISSING = 'Please provide first name';\n\nconst ManageUser: FC<OwnProps & StateProps> = ({\n  userId,\n  user,\n  progress,\n  isMuted,\n  onClose,\n  isActive,\n  personalPhoto,\n  notPersonalPhoto,\n}) => {\n  const {\n    updateContact,\n    deleteContact,\n    closeManagement,\n    uploadContactProfilePhoto,\n  } = getActions();\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [isResetPersonalPhotoDialogOpen, openResetPersonalPhotoDialog, closeResetPersonalPhotoDialog] = useFlag();\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [error, setError] = useState<string | undefined>();\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const currentFirstName = user ? (user.firstName || '') : '';\n  const currentLastName = user ? (user.lastName || '') : '';\n\n  const [firstName, setFirstName] = useState(currentFirstName);\n  const [lastName, setLastName] = useState(currentLastName);\n  const [isNotificationsEnabled, setIsNotificationsEnabled] = useState(!isMuted);\n\n  useEffect(() => {\n    setIsNotificationsEnabled(!isMuted);\n  }, [isMuted]);\n\n  useEffect(() => {\n    setIsProfileFieldsTouched(false);\n    closeDeleteDialog();\n  }, [closeDeleteDialog, userId]);\n\n  useEffect(() => {\n    setFirstName(currentFirstName);\n    setLastName(currentLastName);\n  }, [currentFirstName, currentLastName, user]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n      closeDeleteDialog();\n    }\n  }, [closeDeleteDialog, progress]);\n\n  const handleFirstNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n    setIsProfileFieldsTouched(true);\n\n    if (error === ERROR_FIRST_NAME_MISSING) {\n      setError(undefined);\n    }\n  }, [error]);\n\n  const handleLastNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleNotificationChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsNotificationsEnabled(e.target.checked);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleProfileSave = useCallback(() => {\n    const trimmedFirstName = firstName.trim();\n    const trimmedLastName = lastName.trim();\n\n    if (!trimmedFirstName.length) {\n      setError(ERROR_FIRST_NAME_MISSING);\n      return;\n    }\n\n    updateContact({\n      userId,\n      isMuted: !isNotificationsEnabled,\n      firstName: trimmedFirstName,\n      lastName: trimmedLastName,\n    });\n  }, [firstName, lastName, updateContact, userId, isNotificationsEnabled]);\n\n  const handleDeleteContact = useCallback(() => {\n    deleteContact({ userId });\n    closeDeleteDialog();\n    closeManagement();\n  }, [closeDeleteDialog, closeManagement, deleteContact, userId]);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const isSuggestRef = useRef(false);\n\n  const handleSuggestPhoto = useCallback(() => {\n    inputRef.current?.click();\n    isSuggestRef.current = true;\n  }, []);\n\n  const handleSetPersonalPhoto = useCallback(() => {\n    inputRef.current?.click();\n    isSuggestRef.current = false;\n  }, []);\n\n  const handleResetPersonalAvatar = useCallback(() => {\n    closeResetPersonalPhotoDialog();\n    setIsProfileFieldsTouched(true);\n    uploadContactProfilePhoto({ userId });\n  }, [closeResetPersonalPhotoDialog, uploadContactProfilePhoto, userId]);\n\n  const handleSelectAvatar = useCallback((file: File) => {\n    setIsProfileFieldsTouched(true);\n    uploadContactProfilePhoto({ userId, file, isSuggest: isSuggestRef.current });\n  }, [uploadContactProfilePhoto, userId]);\n\n  if (!user) {\n    return undefined;\n  }\n\n  const canSetPersonalPhoto = !isUserBot(user) && user.id !== SERVICE_NOTIFICATIONS_USER_ID;\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <PrivateChatInfo\n            userId={user.id}\n            avatarSize=\"jumbo\"\n            noStatusOrTyping\n            noEmojiStatus\n            withFullInfo\n          />\n          <div className=\"settings-edit\">\n            <InputText\n              id=\"user-first-name\"\n              label={lang('UserInfo.FirstNamePlaceholder')}\n              onChange={handleFirstNameChange}\n              value={firstName}\n              error={error === ERROR_FIRST_NAME_MISSING ? error : undefined}\n            />\n            <InputText\n              id=\"user-last-name\"\n              label={lang('UserInfo.LastNamePlaceholder')}\n              onChange={handleLastNameChange}\n              value={lastName}\n            />\n          </div>\n          <div className=\"ListItem narrow\">\n            <Checkbox\n              checked={isNotificationsEnabled}\n              label={lang('Notifications')}\n              subLabel={lang(isNotificationsEnabled\n                ? 'UserInfo.NotificationsEnabled'\n                : 'UserInfo.NotificationsDisabled')}\n              onChange={handleNotificationChange}\n            />\n          </div>\n        </div>\n        {canSetPersonalPhoto && (\n          <div className=\"section\">\n            <ListItem icon=\"camera-add\" ripple onClick={handleSuggestPhoto}>\n              <span className=\"list-item-ellipsis\">{lang('UserInfo.SuggestPhoto', user.firstName)}</span>\n            </ListItem>\n            <ListItem icon=\"camera-add\" ripple onClick={handleSetPersonalPhoto}>\n              <span className=\"list-item-ellipsis\">{lang('UserInfo.SetCustomPhoto', user.firstName)}</span>\n            </ListItem>\n            {personalPhoto && (\n              <ListItem\n                leftElement={(\n                  <Avatar\n                    photo={notPersonalPhoto}\n                    noPersonalPhoto\n                    peer={user}\n                    size=\"mini\"\n                    className=\"personal-photo\"\n                  />\n                )}\n                ripple\n                onClick={openResetPersonalPhotoDialog}\n              >\n                {lang('UserInfo.ResetCustomPhoto')}\n              </ListItem>\n            )}\n            <p className=\"section-help\" dir=\"auto\">{lang('UserInfo.CustomPhotoInfo', user.firstName)}</p>\n          </div>\n        )}\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {lang('DeleteContact')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        text={lang('AreYouSureDeleteContact')}\n        confirmLabel={lang('DeleteContact')}\n        confirmHandler={handleDeleteContact}\n        confirmIsDestructive\n      />\n      <ConfirmDialog\n        isOpen={isResetPersonalPhotoDialogOpen}\n        onClose={closeResetPersonalPhotoDialog}\n        text={lang('UserInfo.ResetToOriginalAlertText', user.firstName)}\n        confirmLabel={lang('Reset')}\n        confirmHandler={handleResetPersonalAvatar}\n        confirmIsDestructive\n      />\n      <SelectAvatar\n        onChange={handleSelectAvatar}\n        inputRef={inputRef}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectUser(global, userId);\n    const chat = selectChat(global, userId);\n    const userFullInfo = selectUserFullInfo(global, userId);\n    const { progress } = selectTabState(global).management;\n    const isMuted = chat && getIsChatMuted(chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id));\n    const personalPhoto = userFullInfo?.personalPhoto;\n    const notPersonalPhoto = userFullInfo?.profilePhoto || userFullInfo?.fallbackPhoto;\n\n    return {\n      user, progress, isMuted, personalPhoto, notPersonalPhoto,\n    };\n  },\n)(ManageUser));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ManagementType } from '../../../types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectCurrentManagementType } from '../../../global/selectors';\n\nimport ManageBot from './ManageBot';\nimport ManageChannel from './ManageChannel';\nimport ManageChatAdministrators from './ManageChatAdministrators';\nimport ManageChatPrivacyType from './ManageChatPrivacyType';\nimport ManageChatRemovedUsers from './ManageChatRemovedUsers';\nimport ManageDiscussion from './ManageDiscussion';\nimport ManageGroup from './ManageGroup';\nimport ManageGroupAdminRights from './ManageGroupAdminRights';\nimport ManageGroupMembers from './ManageGroupMembers';\nimport ManageGroupPermissions from './ManageGroupPermissions';\nimport ManageGroupUserPermissions from './ManageGroupUserPermissions';\nimport ManageGroupUserPermissionsCreate from './ManageGroupUserPermissionsCreate';\nimport ManageInvite from './ManageInvite';\nimport ManageInviteInfo from './ManageInviteInfo';\nimport ManageInvites from './ManageInvites';\nimport ManageJoinRequests from './ManageJoinRequests';\nimport ManageReactions from './ManageReactions';\nimport ManageUser from './ManageUser';\n\nexport type OwnProps = {\n  chatId: string;\n  currentScreen: ManagementScreens;\n  selectedChatMemberId?: string;\n  isPromotedByCurrentUser?: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  managementType?: ManagementType;\n};\n\nconst Management: FC<OwnProps & StateProps> = ({\n  chatId,\n  currentScreen,\n  selectedChatMemberId,\n  isPromotedByCurrentUser,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n  isActive,\n  managementType,\n}) => {\n  switch (currentScreen) {\n    case ManagementScreens.Initial: {\n      switch (managementType) {\n        case 'bot':\n          return (\n            <ManageBot\n              key={chatId}\n              userId={chatId}\n              onClose={onClose}\n              isActive={isActive}\n            />\n          );\n        case 'user':\n          return (\n            <ManageUser\n              key={chatId}\n              userId={chatId}\n              onClose={onClose}\n              isActive={isActive}\n            />\n          );\n        case 'group':\n          return (\n            <ManageGroup\n              key={chatId}\n              chatId={chatId}\n              onScreenSelect={onScreenSelect}\n              onClose={onClose}\n              isActive={isActive || [\n                ManagementScreens.ChatPrivacyType,\n                ManagementScreens.Discussion,\n                ManagementScreens.GroupPermissions,\n                ManagementScreens.ChatAdministrators,\n                ManagementScreens.GroupRemovedUsers,\n                ManagementScreens.GroupUserPermissionsCreate,\n                ManagementScreens.GroupUserPermissions,\n                ManagementScreens.ChatAdminRights,\n                ManagementScreens.ChatNewAdminRights,\n                ManagementScreens.GroupRecentActions,\n              ].includes(currentScreen)}\n            />\n          );\n        case 'channel':\n          return (\n            <ManageChannel\n              key={chatId}\n              chatId={chatId}\n              onScreenSelect={onScreenSelect}\n              onClose={onClose}\n              isActive={isActive || [\n                ManagementScreens.ChannelSubscribers,\n                ManagementScreens.ChatAdministrators,\n                ManagementScreens.ChannelRemovedUsers,\n                ManagementScreens.Discussion,\n                ManagementScreens.ChatPrivacyType,\n                ManagementScreens.ChatAdminRights,\n                ManagementScreens.ChatNewAdminRights,\n                ManagementScreens.GroupRecentActions,\n              ].includes(currentScreen)}\n            />\n          );\n      }\n\n      break;\n    }\n\n    case ManagementScreens.ChatPrivacyType:\n      return (\n        <ManageChatPrivacyType\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.Discussion:\n      return (\n        <ManageDiscussion\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupPermissions:\n      return (\n        <ManageGroupPermissions\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n          isActive={isActive || [\n            ManagementScreens.GroupRemovedUsers,\n            ManagementScreens.GroupUserPermissionsCreate,\n            ManagementScreens.GroupUserPermissions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChannelRemovedUsers:\n    case ManagementScreens.GroupRemovedUsers:\n      return (\n        <ManageChatRemovedUsers\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupUserPermissionsCreate:\n      return (\n        <ManageGroupUserPermissionsCreate\n          chatId={chatId}\n          onChatMemberSelect={onChatMemberSelect}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            ManagementScreens.GroupUserPermissions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupUserPermissions:\n      return (\n        <ManageGroupUserPermissions\n          chatId={chatId}\n          selectedChatMemberId={selectedChatMemberId}\n          isPromotedByCurrentUser={isPromotedByCurrentUser}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChatAdministrators:\n      return (\n        <ManageChatAdministrators\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n          isActive={isActive || [\n            ManagementScreens.ChatAdminRights,\n            ManagementScreens.ChatNewAdminRights,\n            ManagementScreens.GroupRecentActions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChatNewAdminRights:\n    case ManagementScreens.ChatAdminRights:\n      return (\n        <ManageGroupAdminRights\n          chatId={chatId}\n          isNewAdmin={currentScreen === ManagementScreens.ChatNewAdminRights}\n          selectedUserId={selectedChatMemberId}\n          isPromotedByCurrentUser={isPromotedByCurrentUser}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChannelSubscribers:\n    case ManagementScreens.GroupMembers:\n      return (\n        <ManageGroupMembers\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.Invites:\n      return (\n        <ManageInvites\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n        />\n      );\n    case ManagementScreens.EditInvite:\n      return (\n        <ManageInvite\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n        />\n      );\n    case ManagementScreens.GroupAddAdmins:\n      return (\n        <ManageGroupMembers\n          chatId={chatId}\n          noAdmins\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n        />\n      );\n\n    case ManagementScreens.Reactions:\n      return (\n        <ManageReactions\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.InviteInfo:\n      return (\n        <ManageInviteInfo\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.JoinRequests:\n      return (\n        <ManageJoinRequests\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n  }\n\n  return undefined; // Never reached\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const managementType = selectCurrentManagementType(global);\n\n    return {\n      managementType,\n    };\n  },\n)(Management));\n","const VISA = /^4\\d/;\nconst MASTERCARD1 = /^5[1-5]/;\nconst MASTERCARD2 = /^2[2-7]\\d{2}/;\nconst MIR = /^220[0-4]/;\n\nexport enum CardType {\n  Default,\n  Visa,\n  Mastercard,\n  Mir,\n}\n\nconst cards: Record<number, string> = {\n  [CardType.Default]: '',\n  [CardType.Visa]: 'visa',\n  [CardType.Mastercard]: 'mastercard',\n  [CardType.Mir]: 'mir',\n};\n\nexport function detectCardType(cardNumber: string): number {\n  cardNumber = cardNumber.replace(/\\s/g, '');\n  if (VISA.test(cardNumber)) {\n    return CardType.Visa;\n  }\n  if (MIR.test(cardNumber)) {\n    return CardType.Mir;\n  }\n  if (MASTERCARD1.test(cardNumber) || MASTERCARD2.test(cardNumber)) {\n    return CardType.Mastercard;\n  }\n  return CardType.Default;\n}\n\nexport function detectCardTypeText(cardNumber: string): string {\n  const cardType = detectCardType(cardNumber);\n  return cards[cardType as number] || '';\n}\n","import type { RegularLangFnParameters } from '../../util/localization';\nimport type { Dispatch, StateReducer } from '../useReducer';\n\nimport useReducer from '../useReducer';\n\nexport type FormState = {\n  streetLine1: string;\n  streetLine2: string;\n  city: string;\n  state: string;\n  countryIso2: string;\n  postCode: string;\n  fullName: string;\n  email: string;\n  phone: string;\n  shipping: string;\n  cardNumber: string;\n  cardholder: string;\n  expiry: string;\n  cvv: string;\n  billingCountry: string;\n  billingZip: string;\n  saveInfo: boolean;\n  saveCredentials: boolean;\n  formErrors: Partial<Record<string, RegularLangFnParameters>>;\n  tipAmount: number;\n  savedCredentialId: string;\n};\n\nexport type FormActions = (\n  'changeAddress1' | 'changeAddress2' | 'changeCity' | 'changeState' | 'changeCountry' |\n  'changePostCode' | 'changeFullName' | 'changeEmail' | 'changePhone' | 'changeShipping' | 'updateUserInfo' |\n  'changeCardNumber' | 'changeCardholder' | 'changeExpiryDate' | 'changeCvvCode' | 'changeBillingCountry' |\n  'changeBillingZip' | 'changeSaveInfo' | 'changeSaveCredentials' | 'setFormErrors' | 'resetState' | 'setTipAmount' |\n  'changeSavedCredentialId'\n);\nexport type FormEditDispatch = Dispatch<FormState, FormActions>;\n\nconst INITIAL_STATE: FormState = {\n  streetLine1: '',\n  streetLine2: '',\n  city: '',\n  state: '',\n  countryIso2: '',\n  postCode: '',\n  fullName: '',\n  email: '',\n  phone: '',\n  shipping: '',\n  cardNumber: '',\n  cardholder: '',\n  expiry: '',\n  cvv: '',\n  billingCountry: '',\n  billingZip: '',\n  saveInfo: true,\n  saveCredentials: false,\n  formErrors: {},\n  tipAmount: 0,\n  savedCredentialId: '',\n};\n\nconst reducer: StateReducer<FormState, FormActions> = (state, action) => {\n  switch (action.type) {\n    case 'changeAddress1':\n      return {\n        ...state,\n        streetLine1: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          streetLine1: undefined,\n        },\n      };\n    case 'changeAddress2':\n      return {\n        ...state,\n        streetLine2: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          streetLine2: undefined,\n        },\n      };\n    case 'changeCity':\n      return {\n        ...state,\n        city: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          city: undefined,\n        },\n      };\n    case 'changeState':\n      return {\n        ...state,\n        state: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          state: undefined,\n        },\n      };\n    case 'changeCountry':\n      return {\n        ...state,\n        countryIso2: action.payload.iso2,\n        billingCountry: action.payload.defaultName,\n        formErrors: {\n          ...state.formErrors,\n          countryIso2: undefined,\n        },\n      };\n    case 'changePostCode':\n      return {\n        ...state,\n        postCode: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          postCode: undefined,\n        },\n      };\n    case 'changeFullName':\n      return {\n        ...state,\n        fullName: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          fullName: undefined,\n        },\n      };\n    case 'changeEmail':\n      return {\n        ...state,\n        email: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          email: undefined,\n        },\n      };\n    case 'changePhone':\n      return {\n        ...state,\n        phone: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          phone: undefined,\n        },\n      };\n    case 'changeShipping':\n      return { ...state, shipping: action.payload };\n    case 'changeCardNumber':\n      return {\n        ...state,\n        cardNumber: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cardNumber: undefined,\n        },\n      };\n    case 'changeCardholder':\n      return {\n        ...state,\n        cardholder: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cardholder: undefined,\n        },\n      };\n    case 'changeExpiryDate':\n      return {\n        ...state,\n        expiry: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          expiry: undefined,\n        },\n      };\n    case 'changeCvvCode':\n      return {\n        ...state,\n        cvv: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cvv: undefined,\n        },\n      };\n    case 'changeBillingCountry':\n      return {\n        ...state,\n        billingCountry: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          billingCountry: undefined,\n        },\n      };\n    case 'changeBillingZip':\n      return {\n        ...state,\n        billingZip: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          billingZip: undefined,\n        },\n      };\n    case 'changeSaveInfo':\n      return { ...state, saveInfo: action.payload };\n    case 'changeSaveCredentials':\n      return { ...state, saveCredentials: action.payload };\n    case 'updateUserInfo':\n      if (action.payload.country) {\n        return {\n          ...state,\n          ...action.payload,\n          billingCountry: action.payload.country,\n        };\n      }\n      return { ...state, ...action.payload };\n    case 'setFormErrors':\n      return {\n        ...state,\n        formErrors: {\n          ...state.formErrors,\n          ...action.payload,\n        },\n      };\n    case 'setTipAmount':\n      return {\n        ...state,\n        tipAmount: action.payload,\n      };\n    case 'changeSavedCredentialId':\n      return {\n        ...state,\n        savedCredentialId: action.payload,\n      };\n    case 'resetState':\n      return {\n        ...INITIAL_STATE,\n      };\n    default:\n      return state;\n  }\n};\n\nconst usePaymentReducer = () => {\n  return useReducer(reducer, INITIAL_STATE);\n};\n\nexport default usePaymentReducer;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"maC_9u6e\",\"description\":\"zQ6lEVJ2\",\"checkout-picture\":\"JgWvLdK2\",\"checkoutPicture\":\"JgWvLdK2\",\"text\":\"T2pYH395\",\"checkout-title\":\"HadolzeF\",\"checkoutTitle\":\"HadolzeF\",\"checkout-description\":\"oZW7mUNP\",\"checkoutDescription\":\"oZW7mUNP\",\"price-info\":\"P618Q3yr\",\"priceInfo\":\"P618Q3yr\",\"price-info-item\":\"XNNG_ajy\",\"priceInfoItem\":\"XNNG_ajy\",\"price-info-item-main\":\"D9gYNLVk\",\"priceInfoItemMain\":\"D9gYNLVk\",\"price-info-item-title\":\"NtY5Aah7\",\"priceInfoItemTitle\":\"NtY5Aah7\",\"tipsList\":\"WHO341eB\",\"tipsItem\":\"ksLlzBxw\",\"tipsItem_active\":\"J4yem62L\",\"tipsItemActive\":\"J4yem62L\",\"invoice-info\":\"U2IBOLP1\",\"invoiceInfo\":\"U2IBOLP1\",\"provider\":\"kqWcdro1\",\"stripe\":\"xKztZrna\",\"smartglocal\":\"X_Ge1o4u\",\"checkout-info-item-info-title\":\"ysWuPklS\",\"checkoutInfoItemInfoTitle\":\"ysWuPklS\",\"checkout-info-item-info-data\":\"MpC_P8_c\",\"checkoutInfoItemInfoData\":\"MpC_P8_c\",\"tos-checkbox\":\"OrRb0xG7\",\"tosCheckbox\":\"OrRb0xG7\",\"list\":\"l_wfiFG0\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type {\n  ApiInvoice,\n  ApiLabeledPrice,\n  ApiPaymentCredentials,\n  ApiWebDocument,\n} from '../../api/types';\nimport type { FormEditDispatch } from '../../hooks/reducers/usePaymentReducer';\nimport type { IconName } from '../../types/icons';\nimport type { LangFn } from '../../util/localization';\nimport { PaymentStep } from '../../types';\n\nimport { getWebDocumentHash } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatCurrency } from '../../util/formatCurrency';\nimport renderText from '../common/helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport SafeLink from '../common/SafeLink';\nimport Checkbox from '../ui/Checkbox';\nimport ListItem from '../ui/ListItem';\nimport Skeleton from '../ui/placeholder/Skeleton';\n\nimport styles from './Checkout.module.scss';\n\nexport type OwnProps = {\n  title: string;\n  description: string;\n  photo?: ApiWebDocument;\n  invoice: ApiInvoice;\n  checkoutInfo?: {\n    paymentMethod?: string;\n    paymentProvider?: string;\n    shippingAddress?: string;\n    name?: string;\n    phone?: string;\n    shippingMethod?: string;\n  };\n  totalPrice?: number;\n  needAddress?: boolean;\n  hasShippingOptions?: boolean;\n  tipAmount?: number;\n  shippingPrices?: ApiLabeledPrice[];\n  isTosAccepted?: boolean;\n  dispatch?: FormEditDispatch;\n  onAcceptTos?: (isAccepted: boolean) => void;\n  savedCredentials?: ApiPaymentCredentials[];\n  isPaymentFormUrl?: boolean;\n  botName?: string;\n};\n\nconst Checkout: FC<OwnProps> = ({\n  title,\n  description,\n  photo,\n  invoice,\n  shippingPrices,\n  checkoutInfo,\n  totalPrice,\n  isTosAccepted,\n  dispatch,\n  onAcceptTos,\n  tipAmount,\n  needAddress,\n  hasShippingOptions,\n  savedCredentials,\n  isPaymentFormUrl,\n  botName,\n}) => {\n  const { setPaymentStep } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const isInteractive = Boolean(dispatch);\n\n  const {\n    termsUrl, suggestedTipAmounts, maxTipAmount,\n  } = invoice || {};\n  const {\n    paymentMethod,\n    paymentProvider,\n    shippingAddress,\n    name,\n    phone,\n    shippingMethod,\n  } = (checkoutInfo || {});\n\n  const photoUrl = useMedia(getWebDocumentHash(photo));\n\n  const ref = useMediaTransition<HTMLImageElement>(photoUrl);\n\n  const handleTipsClick = useCallback((tips: number) => {\n    dispatch!({ type: 'setTipAmount', payload: maxTipAmount ? Math.min(tips, maxTipAmount) : tips });\n  }, [dispatch, maxTipAmount]);\n\n  const handlePaymentMethodClick = useCallback(() => {\n    setPaymentStep({ step: savedCredentials?.length ? PaymentStep.SavedPayments : PaymentStep.PaymentInfo });\n  }, [savedCredentials?.length, setPaymentStep]);\n\n  const handleShippingAddressClick = useCallback(() => {\n    setPaymentStep({ step: PaymentStep.ShippingInfo });\n  }, [setPaymentStep]);\n\n  const handleShippingMethodClick = useCallback(() => {\n    setPaymentStep({ step: PaymentStep.Shipping });\n  }, [setPaymentStep]);\n\n  function renderTips() {\n    return (\n      <>\n        <div className={styles.priceInfoItem}>\n          <div className={styles.priceInfoItemTitle}>\n            {title}\n          </div>\n          <div>\n            {formatCurrency(lang, tipAmount!, invoice.currency)}\n          </div>\n        </div>\n        <div className={styles.tipsList}>\n          {suggestedTipAmounts!.map((tip) => (\n            <div\n              key={tip}\n              className={buildClassName(styles.tipsItem, tip === tipAmount && styles.tipsItem_active)}\n              onClick={dispatch ? () => handleTipsClick(tip === tipAmount ? 0 : tip) : undefined}\n            >\n              {formatCurrency(lang, tip, invoice.currency, { shouldOmitFractions: true })}\n            </div>\n          ))}\n        </div>\n      </>\n    );\n  }\n\n  function renderTosLink(url: string, isRtl?: boolean) {\n    const langString = oldLang('PaymentCheckoutAcceptRecurrent', botName);\n    const langStringSplit = langString.split('*');\n    return (\n      <>\n        {langStringSplit[0]}\n        <SafeLink\n          url={url}\n          text={langStringSplit[1]}\n          isRtl={isRtl}\n        />\n        {langStringSplit.slice(2)}\n      </>\n    );\n  }\n\n  function renderTos(url: string) {\n    return (\n      <Checkbox\n        label={renderTosLink(url, oldLang.isRtl)}\n        name=\"checkout_tos\"\n        checked={Boolean(isTosAccepted)}\n        className={styles.tosCheckbox}\n        tabIndex={0}\n        onCheck={onAcceptTos}\n      />\n    );\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.description}>\n        {photoUrl && (\n          <img\n            ref={ref}\n            className={styles.checkoutPicture}\n            src={photoUrl}\n            draggable={false}\n            width={photo!.dimensions?.width}\n            height={photo!.dimensions?.height}\n            alt=\"\"\n          />\n        )}\n        {!photoUrl && photo && (\n          <Skeleton\n            width={photo.dimensions?.width}\n            height={photo.dimensions?.height}\n            className={styles.checkoutPicture}\n            forceAspectRatio\n          />\n        )}\n        <div className={styles.text}>\n          <h5 className={styles.checkoutTitle}>{title}</h5>\n          {description && (\n            <div className={styles.checkoutDescription}>\n              {renderText(description, ['br', 'links', 'emoji'])}\n            </div>\n          )}\n        </div>\n      </div>\n      <div className={styles.priceInfo}>\n        {invoice.prices.map((item) => (\n          renderPaymentItem(lang, item.label, item.amount, invoice.currency)\n        ))}\n        {shippingPrices && shippingPrices.map((item) => (\n          renderPaymentItem(lang, item.label, item.amount, invoice.currency)\n        ))}\n        {suggestedTipAmounts && suggestedTipAmounts.length > 0 && renderTips()}\n        {totalPrice !== undefined && (\n          renderPaymentItem(lang, oldLang('Checkout.TotalAmount'), totalPrice, invoice.currency, true)\n        )}\n      </div>\n      <div className={styles.invoiceInfo}>\n        {!isPaymentFormUrl && renderCheckoutItem({\n          title: paymentMethod || savedCredentials?.[0].title,\n          label: oldLang('PaymentCheckoutMethod'),\n          icon: 'card',\n          onClick: isInteractive ? handlePaymentMethodClick : undefined,\n        })}\n        {paymentProvider && renderCheckoutItem({\n          title: paymentProvider,\n          label: oldLang('PaymentCheckoutProvider'),\n          customIcon: buildClassName(styles.provider, styles[paymentProvider.toLowerCase()]),\n        })}\n        {(needAddress || (!isInteractive && shippingAddress)) && renderCheckoutItem({\n          title: shippingAddress,\n          label: oldLang('PaymentShippingAddress'),\n          icon: 'location',\n          onClick: isInteractive ? handleShippingAddressClick : undefined,\n        })}\n        {name && renderCheckoutItem({\n          title: name,\n          label: oldLang('PaymentCheckoutName'),\n          icon: 'user',\n        })}\n        {phone && renderCheckoutItem({\n          title: phone,\n          label: oldLang('PaymentCheckoutPhoneNumber'),\n          icon: 'phone',\n        })}\n        {(hasShippingOptions || (!isInteractive && shippingMethod)) && renderCheckoutItem({\n          title: shippingMethod,\n          label: oldLang('PaymentCheckoutShippingMethod'),\n          icon: 'truck',\n          onClick: isInteractive ? handleShippingMethodClick : undefined,\n        })}\n        {termsUrl && renderTos(termsUrl)}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Checkout);\n\nfunction renderPaymentItem(\n  lang: LangFn, title: string, value: number, currency: string, main = false,\n) {\n  return (\n    <div className={buildClassName(styles.priceInfoItem, main && styles.priceInfoItemMain)}>\n      <div className={styles.priceInfoItemTitle}>\n        {title}\n      </div>\n      <div>\n        {formatCurrency(lang, value, currency)}\n      </div>\n    </div>\n  );\n}\n\nfunction renderCheckoutItem({\n  title,\n  label,\n  icon,\n  customIcon,\n  onClick,\n}: {\n  title : string | undefined;\n  label: string | undefined;\n  icon?: IconName;\n  onClick?: NoneToVoidFunction;\n  customIcon?: string;\n}) {\n  const isMultiline = Boolean(title && label !== title);\n\n  return (\n    <ListItem\n      className={styles.list}\n      narrow\n      multiline={isMultiline}\n      icon={icon}\n      inactive={!onClick}\n      onClick={onClick}\n      leftElement={customIcon && <i className={buildClassName('icon', customIcon)} />}\n    >\n      <div className={styles.checkoutInfoItemInfoTitle}>\n        {title || label}\n      </div>\n      {title && label !== title && (\n        <p className={styles.checkoutInfoItemInfoData}>\n          {label}\n        </p>\n      )}\n    </ListItem>\n  );\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { TME_LINK_PREFIX } from '../../config';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport './ConfirmPayment.scss';\n\nexport type OwnProps = {\n  url: string;\n  noRedirect?: boolean;\n  onClose: NoneToVoidFunction;\n  onPaymentFormSubmit?: (eventData: PaymentFormSubmitEvent['eventData']) => void;\n};\n\nexport interface PaymentFormSubmitEvent {\n  eventType: 'payment_form_submit';\n  eventData: {\n    credentials: {\n      token: string;\n      type: string;\n    };\n    title: string;\n  };\n}\n\ninterface WebAppOpenTgLinkEvent {\n  eventType: 'web_app_open_tg_link';\n  eventData: {\n    path_full?: string;\n  };\n}\n\ntype IframeCallbackEvent = PaymentFormSubmitEvent | WebAppOpenTgLinkEvent;\n\nconst ConfirmPayment: FC<OwnProps> = ({\n  url, noRedirect, onClose, onPaymentFormSubmit,\n}) => {\n  const { openTelegramLink } = getActions();\n\n  const lang = useOldLang();\n\n  const handleMessage = useCallback((event: MessageEvent<string>) => {\n    try {\n      const data = JSON.parse(event.data) as IframeCallbackEvent;\n      const { eventType, eventData } = data;\n      switch (eventType) {\n        case 'web_app_open_tg_link':\n          if (!noRedirect) {\n            const linkUrl = TME_LINK_PREFIX + eventData.path_full!;\n            openTelegramLink({ url: linkUrl });\n          }\n          onClose();\n          break;\n        case 'payment_form_submit':\n          if (onPaymentFormSubmit) {\n            onPaymentFormSubmit(eventData);\n          }\n          break;\n        default:\n          onClose();\n          break;\n      }\n    } catch (err) {\n      // Ignore other messages\n    }\n  }, [onClose, noRedirect, openTelegramLink, onPaymentFormSubmit]);\n\n  useEffect(() => {\n    window.addEventListener('message', handleMessage);\n    return () => window.removeEventListener('message', handleMessage);\n  }, [handleMessage]);\n\n  return (\n    <div className=\"ConfirmPayment\">\n      <iframe\n        src={url}\n        title={lang('Checkout.WebConfirmation.Title')}\n        allow=\"payment\"\n        sandbox=\"allow-modals allow-forms allow-scripts allow-same-origin allow-top-navigation\"\n        className=\"ConfirmPayment__content\"\n      />\n    </div>\n  );\n};\n\nexport default memo(ConfirmPayment);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiPaymentCredentials } from '../../api/types';\nimport type { FormState } from '../../hooks/reducers/usePaymentReducer';\nimport type { RegularLangFnParameters } from '../../util/localization';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport PasswordForm from '../common/PasswordForm';\nimport PasswordMonkey from '../common/PasswordMonkey';\n\ninterface OwnProps {\n  isActive?: boolean;\n  state: FormState;\n  savedCredentials?: ApiPaymentCredentials[];\n  onPasswordChange: (password: string) => void;\n}\n\ninterface StateProps {\n  errorKey?: RegularLangFnParameters;\n  passwordHint?: string;\n  savedCredentials?: ApiPaymentCredentials[];\n}\n\nconst PasswordConfirm: FC<OwnProps & StateProps> = ({\n  isActive,\n  errorKey,\n  state,\n  savedCredentials,\n  passwordHint,\n  onPasswordChange,\n}) => {\n  const { clearPaymentError } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n  const cardName = useMemo(() => {\n    return savedCredentials?.length && state.savedCredentialId\n      ? savedCredentials.find(({ id }) => id === state.savedCredentialId)?.title\n      : undefined;\n  }, [savedCredentials, state.savedCredentialId]);\n\n  return (\n    <div className=\"PaymentInfo\">\n      <PasswordMonkey isBig isPasswordVisible={shouldShowPassword} />\n\n      <PasswordForm\n        error={errorKey && lang.withRegular(errorKey)}\n        hint={passwordHint}\n        description={oldLang('PaymentConfirmationMessage', cardName)}\n        placeholder={oldLang('Password')}\n        clearError={clearPaymentError}\n        shouldShowSubmit={false}\n        shouldResetValue={isActive}\n        isPasswordVisible={shouldShowPassword}\n        onChangePasswordVisibility={setShouldShowPassword}\n        onInputChange={onPasswordChange}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const { payment } = selectTabState(global);\n  return {\n    errorKey: payment.error?.messageKey,\n    passwordHint: global.twoFaSettings.hint,\n    savedCredentials: payment.form?.type === 'regular' ? payment.form.savedCredentials : undefined,\n  };\n})(PasswordConfirm));\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\nimport { IS_TOUCH_ENV } from '../util/browser/windowEnvironment';\n\nconst DEFAULT_DURATION = 300;\n\nexport default function useFocusAfterAnimation(\n  ref: RefObject<HTMLInputElement>, animationDuration = DEFAULT_DURATION,\n) {\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMeasure(() => {\n        ref.current?.focus();\n      });\n    }, animationDuration);\n  }, [ref, animationDuration]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { CardType, detectCardType } from '../common/helpers/detectCardType';\nimport { formatCardNumber } from '../middle/helpers/inputFormatters';\n\nimport useFocusAfterAnimation from '../../hooks/useFocusAfterAnimation';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport InputText from '../ui/InputText';\n\nimport './CardInput.scss';\n\nimport mastercardIconPath from '../../assets/mastercard.svg';\nimport mirIconPath from '../../assets/mir.svg';\nimport visaIconPath from '../../assets/visa.svg';\n\nconst CARD_NUMBER_MAX_LENGTH = 19;\n\nexport type OwnProps = {\n  value: string;\n  error?: string;\n  onChange: (value: string) => void;\n};\n\nconst CardInput : FC<OwnProps> = ({ value, error, onChange }) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const cardNumberRef = useRef<HTMLInputElement>(null);\n\n  useFocusAfterAnimation(cardNumberRef);\n\n  const [cardType, setCardType] = useState<number>(CardType.Default);\n  useEffect(() => {\n    const newCardType = detectCardType(value);\n    setCardType(newCardType);\n  // eslint-disable-next-line\n  }, []);\n\n  const handleChange = useCallback((e) => {\n    const newValue = formatCardNumber(e.target.value);\n    const newCardType = detectCardType(e.target.value);\n    setCardType(newCardType);\n    onChange(newValue);\n  }, [onChange]);\n\n  const cardIcon = getCardIcon(cardType);\n\n  return (\n    <div className=\"CardInput\">\n      <InputText\n        ref={cardNumberRef}\n        label={lang('PaymentCardNumber')}\n        onChange={handleChange}\n        value={value}\n        inputMode=\"numeric\"\n        className={cardType ? 'has-right-addon' : ''}\n        error={error}\n        tabIndex={0}\n        maxLength={CARD_NUMBER_MAX_LENGTH}\n        teactExperimentControlled\n      />\n      <span className=\"right-addon\">{cardIcon}</span>\n    </div>\n  );\n};\n\nexport default memo(CardInput);\n\nfunction getCardIcon(cardType: CardType) {\n  switch (cardType) {\n    case CardType.Mastercard:\n      return <img src={mastercardIconPath} draggable={false} alt=\"\" />;\n    case CardType.Visa:\n      return <img src={visaIconPath} draggable={false} alt=\"\" />;\n    case CardType.Mir:\n      return <img src={mirIconPath} draggable={false} alt=\"\" />;\n    default:\n      return undefined;\n  }\n}\n","export function formatCardExpiry(input: string) {\n  input = input.replace(/[^\\d]/g, '').slice(0, 4);\n  const parts = input.match(/.{1,2}/g);\n  if (parts?.[0] && Number(parts[0]) > 12) {\n    parts[0] = '12';\n  }\n  if (parts?.[0] && parts[0].length === 2 && !parts[1]) {\n    parts[1] = '';\n  }\n  return parts ? parts.join('/') : '';\n}\n\nexport function formatCardNumber(input: string) {\n  input = input.replace(/[^\\d]/g, '');\n  const parts = input.match(/.{1,4}/g);\n  return parts ? parts.join(' ') : '';\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport { formatCardExpiry } from '../middle/helpers/inputFormatters';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport InputText from '../ui/InputText';\n\nconst MAX_FIELD_LENGTH = 5;\n\nexport type OwnProps = {\n  value: string;\n  error?: string;\n  onChange: (value: string) => void;\n};\n\nconst ExpiryInput : FC<OwnProps> = ({ value, error, onChange }) => {\n  const lang = useOldLang();\n\n  const handleChange = useCallback((e) => {\n    const newValue = e.target.value;\n    // Allow deleting separator\n    if (value.endsWith('/') && value.length > newValue.length) {\n      onChange(newValue);\n    } else {\n      onChange(formatCardExpiry(e.target.value));\n    }\n  }, [onChange, value]);\n\n  return (\n    <InputText\n      label={lang('PaymentCardExpireDate')}\n      onChange={handleChange}\n      value={value}\n      error={error}\n      inputMode=\"numeric\"\n      tabIndex={0}\n      maxLength={MAX_FIELD_LENGTH}\n      teactExperimentControlled\n    />\n  );\n};\n\nexport default memo(ExpiryInput);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiCountry } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Select from '../ui/Select';\nimport CardInput from './CardInput';\nimport ExpiryInput from './ExpiryInput';\n\nimport './PaymentInfo.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  canSaveCredentials: boolean;\n  needCardholderName?: boolean;\n  needCountry?: boolean;\n  needZip?: boolean;\n  countryList: ApiCountry[];\n  dispatch: FormEditDispatch;\n};\n\nconst PaymentInfo: FC<OwnProps> = ({\n  state,\n  canSaveCredentials,\n  needCardholderName,\n  needCountry,\n  needZip,\n  countryList,\n  dispatch,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const selectCountryRef = useRef<HTMLSelectElement>(null);\n\n  useEffect(() => {\n    if (selectCountryRef.current\n      && selectCountryRef.current.value !== state.billingCountry) {\n      selectCountryRef.current.value = state.billingCountry;\n    }\n  }, [state.billingCountry]);\n\n  const handleCardNumberChange = useCallback((value) => {\n    dispatch({ type: 'changeCardNumber', payload: value });\n  }, [dispatch]);\n\n  const handleCardholderChange = useCallback((e) => {\n    dispatch({ type: 'changeCardholder', payload: e.target.value.toUpperCase() });\n  }, [dispatch]);\n\n  const handleExpiryChange = useCallback((value) => {\n    dispatch({ type: 'changeExpiryDate', payload: value });\n  }, [dispatch]);\n\n  const handleCvvChange = useCallback((e) => {\n    const newValue = e.target.value.replace(/[^0-9]/g, '');\n    dispatch({ type: 'changeCvvCode', payload: newValue });\n  }, [dispatch]);\n\n  const handleCountryChange = useCallback((e) => {\n    dispatch({ type: 'changeBillingCountry', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleBillingPostCodeChange = useCallback((e) => {\n    dispatch({ type: 'changeBillingZip', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleChangeSaveCredentials = useCallback((e) => {\n    dispatch({ type: 'changeSaveCredentials', payload: e.target.value });\n  }, [dispatch]);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const { formErrors = {} } = state;\n\n  return (\n    <div className=\"PaymentInfo\">\n      <form>\n        <h5>{oldLang('PaymentCardTitle')}</h5>\n        <CardInput\n          onChange={handleCardNumberChange}\n          value={state.cardNumber}\n          error={formErrors.cardNumber && lang.withRegular(formErrors.cardNumber)}\n        />\n        {needCardholderName && (\n          <InputText\n            label={oldLang('Checkout.NewCard.CardholderNamePlaceholder')}\n            onChange={handleCardholderChange}\n            value={state.cardholder}\n            inputMode=\"text\"\n            tabIndex={0}\n            error={formErrors.cardholder && lang.withRegular(formErrors.cardholder)}\n          />\n        )}\n        <section className=\"inline-inputs\">\n          <ExpiryInput\n            value={state.expiry}\n            onChange={handleExpiryChange}\n            error={formErrors.expiry && lang.withRegular(formErrors.expiry)}\n          />\n          <InputText\n            label={oldLang('lng_payments_card_cvc')}\n            onChange={handleCvvChange}\n            value={state.cvv}\n            inputMode=\"numeric\"\n            maxLength={3}\n            tabIndex={0}\n            error={formErrors.cvv && lang.withRegular(formErrors.cvv)}\n            teactExperimentControlled\n          />\n        </section>\n        {needCountry || needZip ? (\n          <h5>{oldLang('PaymentBillingAddress')}</h5>\n        ) : undefined}\n        <section className=\"inline-inputs\">\n          {needCountry && (\n            <Select\n              label={oldLang('PaymentShippingCountry')}\n              onChange={handleCountryChange}\n              value={state.billingCountry}\n              hasArrow={Boolean(true)}\n              id=\"billing-country\"\n              error={formErrors.billingCountry && lang.withRegular(formErrors.billingCountry)}\n              tabIndex={0}\n              ref={selectCountryRef}\n            >\n              {\n                countryList.map(({ defaultName, name }) => (\n                  <option\n                    value={defaultName}\n                    className=\"county-item\"\n                    selected={defaultName === state.billingCountry}\n                  >\n                    {defaultName || name}\n                  </option>\n                ))\n              }\n            </Select>\n          )}\n          {needZip && (\n            <InputText\n              label={oldLang('PaymentShippingZipPlaceholder')}\n              onChange={handleBillingPostCodeChange}\n              value={state.billingZip}\n              inputMode=\"text\"\n              tabIndex={0}\n              maxLength={12}\n              error={formErrors.billingZip && lang.withRegular(formErrors.billingZip)}\n            />\n          )}\n        </section>\n        <div className=\"checkbox\">\n          <Checkbox\n            label={oldLang('PaymentCardSavePaymentInformation')}\n            checked={canSaveCredentials ? state.saveCredentials : false}\n            tabIndex={0}\n            subLabel={oldLang(canSaveCredentials ? 'Checkout.NewCard.SaveInfoHelp' : 'Checkout.2FA.Text')}\n            onChange={handleChangeSaveCredentials}\n            disabled={!canSaveCredentials}\n          />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default memo(PaymentInfo);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiPaymentCredentials } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport RadioGroup from '../ui/RadioGroup';\n\ninterface OwnProps {\n  state: FormState;\n  savedCredentials?: ApiPaymentCredentials[];\n  dispatch: FormEditDispatch;\n  onNewCardClick: NoneToVoidFunction;\n}\n\nconst SavedPaymentCredentials: FC<OwnProps> = ({\n  state,\n  savedCredentials,\n  dispatch,\n  onNewCardClick,\n}) => {\n  const lang = useOldLang();\n\n  const options = useMemo(() => {\n    return savedCredentials?.length\n      ? savedCredentials.map(({ id, title }) => ({ label: title, value: id }))\n      : MEMO_EMPTY_ARRAY;\n  }, [savedCredentials]);\n\n  const onChange = useCallback((value) => {\n    dispatch({ type: 'changeSavedCredentialId', payload: value });\n  }, [dispatch]);\n\n  return (\n    <div className=\"PaymentInfo\">\n      <form>\n        <h5>{lang('PaymentCardTitle')}</h5>\n\n        <RadioGroup\n          name=\"saved-credentials\"\n          options={options}\n          selected={state.savedCredentialId}\n          onChange={onChange}\n        />\n\n        <Button isText onClick={onNewCardClick}>\n          {lang('PaymentCheckoutMethodNewCard')}\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default memo(SavedPaymentCredentials);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo,\n} from '../../lib/teact/teact';\n\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\nimport type { ShippingOption } from '../../types';\n\nimport { formatCurrency } from '../../util/formatCurrency';\n\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RadioGroup from '../ui/RadioGroup';\n\nimport './Shipping.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  shippingOptions: ShippingOption[];\n  currency: string;\n  dispatch: FormEditDispatch;\n};\n\nconst Shipping: FC<OwnProps> = ({\n  state,\n  shippingOptions,\n  currency,\n  dispatch,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useEffect(() => {\n    if (!shippingOptions || !shippingOptions.length || state.shipping) {\n      return;\n    }\n    dispatch({ type: 'changeShipping', payload: shippingOptions[0].id });\n  }, [shippingOptions, state.shipping, dispatch]);\n\n  const handleShippingSelect = useCallback((value) => {\n    dispatch({ type: 'changeShipping', payload: value });\n  }, [dispatch]);\n\n  const options = useMemo(() => (shippingOptions.map(({ id: value, title: label, amount }) => ({\n    label,\n    subLabel: formatCurrency(lang, amount, currency),\n    value,\n  }))), [shippingOptions, currency, lang]);\n\n  return (\n    <div className=\"Shipping\">\n      <form>\n        <p>{oldLang('PaymentShippingMethod')}</p>\n        <RadioGroup\n          name=\"shipping-options\"\n          options={options}\n          onChange={handleShippingSelect}\n          selected={state.shipping}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default memo(Shipping);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiCountry } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport useFocusAfterAnimation from '../../hooks/useFocusAfterAnimation';\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Select from '../ui/Select';\n\nimport './ShippingInfo.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  needEmail: boolean;\n  needPhone: boolean;\n  needName: boolean;\n  needAddress: boolean;\n  countryList: ApiCountry[];\n  dispatch: FormEditDispatch;\n};\n\nconst ShippingInfo: FC<OwnProps> = ({\n  state,\n  needEmail,\n  needPhone,\n  needName,\n  needAddress,\n  countryList,\n  dispatch,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const phoneRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const selectCountryRef = useRef<HTMLSelectElement>(null);\n\n  useEffect(() => {\n    if (selectCountryRef.current\n      && selectCountryRef.current.value !== state.countryIso2) {\n      selectCountryRef.current.value = state.countryIso2;\n    }\n  }, [state.countryIso2]);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useFocusAfterAnimation(inputRef);\n\n  const handleAddress1Change = useCallback((e) => {\n    dispatch({ type: 'changeAddress1', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleAddress2Change = useCallback((e) => {\n    dispatch({ type: 'changeAddress2', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleCityChange = useCallback((e) => {\n    dispatch({ type: 'changeCity', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleStateChange = useCallback((e) => {\n    dispatch({ type: 'changeState', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleCountryChange = useCallback((e) => {\n    dispatch({ type: 'changeCountry', payload: countryList.find((country) => country.iso2 === e.target.value) });\n  }, [countryList, dispatch]);\n\n  const handlePostCodeChange = useCallback((e) => {\n    dispatch({ type: 'changePostCode', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleFullNameChange = useCallback((e) => {\n    dispatch({ type: 'changeFullName', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleEmailChange = useCallback((e) => {\n    dispatch({ type: 'changeEmail', payload: e.target.value });\n  }, [dispatch]);\n\n  const handlePhoneChange = useCallback((e) => {\n    let { value } = e.target;\n    value = `+${value.replace(/\\D/g, '')}`;\n    if (phoneRef.current) {\n      phoneRef.current.value = value;\n    }\n    dispatch({ type: 'changePhone', payload: value });\n  }, [dispatch]);\n\n  const handleSaveInfoChange = useCallback((e) => {\n    dispatch({ type: 'changeSaveInfo', payload: e.target.value });\n  }, [dispatch]);\n\n  const { formErrors } = state;\n  return (\n    <div className=\"ShippingInfo\">\n      <form>\n        {needAddress ? (\n          <div>\n            <h5>{oldLang('PaymentShippingAddress')}</h5>\n            <InputText\n              ref={inputRef}\n              label={oldLang('PaymentShippingAddress1Placeholder')}\n              onChange={handleAddress1Change}\n              value={state.streetLine1}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.streetLine1 && lang.withRegular(formErrors.streetLine1)}\n            />\n            <InputText\n              label={oldLang('PaymentShippingAddress2Placeholder')}\n              onChange={handleAddress2Change}\n              value={state.streetLine2}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.streetLine2 && lang.withRegular(formErrors.streetLine2)}\n            />\n            <InputText\n              label={oldLang('PaymentShippingCityPlaceholder')}\n              onChange={handleCityChange}\n              value={state.city}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.city && lang.withRegular(formErrors.city)}\n            />\n            <InputText\n              label={oldLang('PaymentShippingStatePlaceholder')}\n              onChange={handleStateChange}\n              value={state.state}\n              inputMode=\"text\"\n              error={formErrors.state && lang.withRegular(formErrors.state)}\n            />\n            <Select\n              label={oldLang('PaymentShippingCountry')}\n              onChange={handleCountryChange}\n              value={state.countryIso2}\n              hasArrow={Boolean(true)}\n              id=\"shipping-country\"\n              error={formErrors.countryIso2 && lang.withRegular(formErrors.countryIso2)}\n              ref={selectCountryRef}\n              tabIndex={0}\n            >\n              {countryList.map(({ defaultName, name, iso2 }) => (\n                <option\n                  value={iso2}\n                  className=\"county-item\"\n                  selected={iso2 === state.countryIso2}\n                >\n                  {defaultName || name}\n                </option>\n              ))}\n            </Select>\n\n            <InputText\n              label={oldLang('PaymentShippingZipPlaceholder')}\n              onChange={handlePostCodeChange}\n              value={state.postCode}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.postCode && lang.withRegular(formErrors.postCode)}\n            />\n          </div>\n        ) : undefined}\n        { needName || needEmail || needPhone ? (\n          <h5>{oldLang('PaymentShippingReceiver')}</h5>\n        ) : undefined }\n        { needName && (\n          <InputText\n            label={oldLang('PaymentShippingName')}\n            onChange={handleFullNameChange}\n            value={state.fullName}\n            inputMode=\"text\"\n            tabIndex={0}\n            error={formErrors.fullName && lang.withRegular(formErrors.fullName)}\n          />\n        ) }\n        { needEmail && (\n          <InputText\n            label={oldLang('PaymentShippingEmailPlaceholder')}\n            onChange={handleEmailChange}\n            value={state.email}\n            inputMode=\"email\"\n            tabIndex={0}\n            error={formErrors.email && lang.withRegular(formErrors.email)}\n          />\n        ) }\n        { needPhone && (\n          <InputText\n            label={oldLang('PaymentShippingPhoneNumber')}\n            onChange={handlePhoneChange}\n            value={state.phone}\n            inputMode=\"tel\"\n            tabIndex={0}\n            error={formErrors.phone && lang.withRegular(formErrors.phone)}\n            ref={phoneRef}\n          />\n        ) }\n        <Checkbox\n          label={oldLang('PaymentShippingSave')}\n          subLabel={oldLang('PaymentShippingSaveInfo')}\n          checked={Boolean(state.saveInfo)}\n          tabIndex={0}\n          onChange={handleSaveInfoChange}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default memo(ShippingInfo);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiCountry, ApiInvoice, ApiLabeledPrice, ApiPaymentCredentials, ApiPaymentFormRegular,\n} from '../../api/types';\nimport type { TabState } from '../../global/types';\nimport type { FormState } from '../../hooks/reducers/usePaymentReducer';\nimport type { ShippingOption } from '../../types';\nimport type { PaymentFormSubmitEvent } from './ConfirmPayment';\nimport { PaymentStep } from '../../types';\n\nimport { getUserFullName } from '../../global/helpers';\nimport { selectChat, selectTabState, selectUser } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport { formatCurrencyAsString } from '../../util/formatCurrency';\nimport { detectCardTypeText } from '../common/helpers/detectCardType';\n\nimport usePaymentReducer from '../../hooks/reducers/usePaymentReducer';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\nimport Checkout from './Checkout';\nimport ConfirmPayment from './ConfirmPayment';\nimport PasswordConfirm from './PasswordConfirm';\nimport PaymentInfo from './PaymentInfo';\nimport SavedPaymentCredentials from './SavedPaymentCredentials';\nimport Shipping from './Shipping';\nimport ShippingInfo from './ShippingInfo';\n\nimport './PaymentModal.scss';\n\nconst DEFAULT_PROVIDER = 'stripe';\nconst DONATE_PROVIDER = 'smartglocal';\nconst DONATE_PROVIDER_URL = 'https://payment.smart-glocal.com';\nconst SUPPORTED_PROVIDERS = new Set([DEFAULT_PROVIDER, DONATE_PROVIDER]);\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  step?: PaymentStep;\n  chat?: ApiChat;\n  nativeProvider?: string;\n  invoice?: ApiInvoice;\n  form?: ApiPaymentFormRegular;\n  error?: TabState['payment']['error'];\n  prices?: ApiLabeledPrice[];\n  isProviderError?: boolean;\n  needCardholderName?: boolean;\n  needCountry?: boolean;\n  needZip?: boolean;\n  confirmPaymentUrl?: string;\n  countryList: ApiCountry[];\n  hasShippingOptions?: boolean;\n  shippingOptions?: ShippingOption[];\n  requestId?: string;\n  smartGlocalToken?: string;\n  stripeId?: string;\n  savedCredentials?: ApiPaymentCredentials[];\n  passwordValidUntil?: number;\n  isExtendedMedia?: boolean;\n  isPaymentFormUrl?: boolean;\n  botName?: string;\n};\n\nconst NETWORK_REQUEST_TIMEOUT_S = 3;\n\nconst PaymentModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  onClose,\n  step,\n  shippingOptions,\n  form,\n  isProviderError,\n  invoice,\n  nativeProvider,\n  needCardholderName,\n  needCountry,\n  needZip,\n  confirmPaymentUrl,\n  error,\n  countryList,\n  hasShippingOptions,\n  requestId,\n  smartGlocalToken,\n  stripeId,\n  savedCredentials,\n  passwordValidUntil,\n  isExtendedMedia,\n  isPaymentFormUrl,\n  botName,\n}) => {\n  const {\n    loadPasswordInfo,\n    validateRequestedInfo,\n    sendPaymentForm,\n    setPaymentStep,\n    sendCredentialsInfo,\n    clearPaymentError,\n    validatePaymentPassword,\n    setSmartGlocalCardInfo,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [isModalOpen, openModal, closeModal] = useFlag();\n  const [paymentState, paymentDispatch] = usePaymentReducer();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isTosAccepted, setIsTosAccepted] = useState(false);\n  const [twoFaPassword, setTwoFaPassword] = useState('');\n  const prevStep = usePreviousDeprecated(step, true);\n  const prevRequestId = usePreviousDeprecated(requestId);\n  const canRenderFooter = step !== PaymentStep.ConfirmPayment;\n\n  const setStep = useCallback((nextStep) => {\n    setPaymentStep({ step: nextStep });\n  }, [setPaymentStep]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setTwoFaPassword('');\n      loadPasswordInfo();\n      openModal();\n    }\n  }, [isOpen, loadPasswordInfo, openModal]);\n\n  // Modal window can be closed by an event from the server side\n  useEffect(() => {\n    if (!isOpen && isModalOpen) {\n      closeModal();\n    }\n  }, [closeModal, isModalOpen, isOpen]);\n\n  useEffect(() => {\n    if (step !== undefined || error) {\n      setIsLoading(false);\n    }\n  }, [step, error, requestId]);\n\n  // When payment verification occurs and the `step` does not change, the card details must be requested\n  useEffect(() => {\n    if (\n      step === PaymentStep.Checkout\n      && step === prevStep\n      && requestId !== prevRequestId\n      && !paymentState.savedCredentialId\n      && !paymentState.cardNumber\n    ) {\n      setStep(PaymentStep.PaymentInfo);\n    }\n  }, [paymentState.cardNumber, paymentState.savedCredentialId, prevRequestId, prevStep, requestId, setStep, step]);\n\n  useEffect(() => {\n    if (error?.field) {\n      paymentDispatch({\n        type: 'setFormErrors',\n        payload: {\n          [error.field]: error.messageKey,\n        },\n      });\n    }\n  }, [error, paymentDispatch]);\n\n  useEffect(() => {\n    if (form?.savedInfo) {\n      const {\n        name: fullName, phone, email, shippingAddress,\n      } = form.savedInfo;\n      const {\n        countryIso2, ...shippingAddressRest\n      } = shippingAddress || {};\n      const shippingCountry = countryIso2 && countryList.find(({ iso2 }) => iso2 === countryIso2)!.defaultName;\n      paymentDispatch({\n        type: 'updateUserInfo',\n        payload: {\n          fullName,\n          phone: phone && phone.charAt(0) !== '+'\n            ? `+${phone}`\n            : phone,\n          email,\n          ...(shippingCountry && {\n            country: shippingCountry,\n            countryIso2,\n            ...shippingAddressRest,\n          }),\n        },\n      });\n    }\n  }, [form, paymentDispatch, countryList]);\n\n  useEffect(() => {\n    if (savedCredentials?.length) {\n      paymentDispatch({\n        type: 'changeSavedCredentialId',\n        payload: savedCredentials[0].id,\n      });\n    }\n  }, [paymentDispatch, savedCredentials]);\n\n  const handleErrorModalClose = useCallback(() => {\n    clearPaymentError();\n  }, [clearPaymentError]);\n\n  const totalPrice = useMemo(() => {\n    if (step !== PaymentStep.Checkout) {\n      return 0;\n    }\n\n    return getTotalPrice(invoice?.prices, shippingOptions, paymentState.shipping, paymentState.tipAmount);\n  }, [step, invoice?.prices, shippingOptions, paymentState.shipping, paymentState.tipAmount]);\n\n  const checkoutInfo = useMemo(() => {\n    if (step !== PaymentStep.Checkout) {\n      return undefined;\n    }\n    return getCheckoutInfo(paymentState, shippingOptions, nativeProvider || '');\n  }, [step, paymentState, shippingOptions, nativeProvider]);\n\n  const handleNewCardClick = useCallback(() => {\n    setStep(PaymentStep.PaymentInfo);\n  }, [setStep]);\n\n  const handleClearPaymentError = useCallback(() => {\n    clearPaymentError();\n  }, [clearPaymentError]);\n\n  function renderError() {\n    if (!error) {\n      return undefined;\n    }\n    return (\n      <Modal\n        className=\"error\"\n        isOpen={Boolean(error)}\n        onClose={handleErrorModalClose}\n      >\n        <h4>{error.descriptionKey ? lang.withRegular(error.descriptionKey) : lang('ErrorUnspecified')}</h4>\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            isText\n            onClick={handleClearPaymentError}\n          >\n            {oldLang('OK')}\n          </Button>\n        </div>\n      </Modal>\n    );\n  }\n\n  const sendForm = useCallback(() => {\n    sendPaymentForm({\n      shippingOptionId: paymentState.shipping,\n      saveCredentials: paymentState.saveCredentials,\n      savedCredentialId: paymentState.savedCredentialId,\n      tipAmount: paymentState.tipAmount,\n    });\n  }, [sendPaymentForm, paymentState]);\n\n  const handlePaymentFormSubmit = useCallback((eventData: PaymentFormSubmitEvent['eventData']) => {\n    const { credentials } = eventData;\n    setSmartGlocalCardInfo(credentials);\n    sendForm();\n  }, [sendForm]);\n\n  function renderModalContent(currentStep: PaymentStep) {\n    switch (currentStep) {\n      case PaymentStep.Checkout:\n        return (\n          <Checkout\n            title={form!.title}\n            description={form!.description}\n            photo={form!.photo}\n            dispatch={paymentDispatch}\n            shippingPrices={paymentState.shipping && shippingOptions\n              ? getShippingPrices(shippingOptions, paymentState.shipping)\n              : undefined}\n            totalPrice={totalPrice}\n            invoice={invoice!}\n            checkoutInfo={checkoutInfo}\n            isPaymentFormUrl={isPaymentFormUrl}\n            hasShippingOptions={hasShippingOptions}\n            tipAmount={paymentState.tipAmount}\n            needAddress={Boolean(invoice?.isShippingAddressRequested)}\n            savedCredentials={savedCredentials}\n            isTosAccepted={isTosAccepted}\n            onAcceptTos={setIsTosAccepted}\n            botName={botName}\n          />\n        );\n      case PaymentStep.SavedPayments:\n        return (\n          <SavedPaymentCredentials\n            state={paymentState}\n            savedCredentials={savedCredentials}\n            dispatch={paymentDispatch}\n            onNewCardClick={handleNewCardClick}\n          />\n        );\n      case PaymentStep.ConfirmPassword:\n        return (\n          <PasswordConfirm\n            state={paymentState}\n            savedCredentials={savedCredentials}\n            onPasswordChange={setTwoFaPassword}\n            isActive={currentStep === step}\n          />\n        );\n      case PaymentStep.PaymentInfo:\n        return (\n          <PaymentInfo\n            state={paymentState}\n            dispatch={paymentDispatch}\n            canSaveCredentials={Boolean(!form!.isPasswordMissing && form!.canSaveCredentials)}\n            needCardholderName={needCardholderName}\n            needCountry={needCountry}\n            needZip={needZip}\n            countryList={countryList!}\n          />\n        );\n      case PaymentStep.ShippingInfo:\n        return (\n          <ShippingInfo\n            state={paymentState}\n            dispatch={paymentDispatch}\n            needAddress={Boolean(invoice?.isShippingAddressRequested)}\n            needEmail={Boolean(invoice?.isEmailRequested || invoice?.isEmailSentToProvider)}\n            needPhone={Boolean(invoice?.isPhoneRequested || invoice?.isPhoneSentToProvider)}\n            needName={Boolean(invoice?.isNameRequested)}\n            countryList={countryList!}\n          />\n        );\n      case PaymentStep.Shipping:\n        return (\n          <Shipping\n            state={paymentState}\n            dispatch={paymentDispatch}\n            shippingOptions={shippingOptions || []}\n            currency={invoice!.currency}\n          />\n        );\n      case PaymentStep.ConfirmPayment:\n        return (\n          <ConfirmPayment\n            url={confirmPaymentUrl!}\n            noRedirect={isExtendedMedia}\n            onPaymentFormSubmit={handlePaymentFormSubmit}\n            onClose={closeModal}\n          />\n        );\n      default:\n        return undefined;\n    }\n  }\n\n  const validateRequest = useCallback(() => {\n    const { saveInfo } = paymentState;\n    const requestInfo = getRequestInfo(paymentState);\n    validateRequestedInfo({ requestInfo, saveInfo });\n  }, [validateRequestedInfo, paymentState]);\n\n  const sendCredentials = useCallback(() => {\n    const credentials = getCredentials(paymentState);\n    sendCredentialsInfo({\n      credentials,\n    });\n  }, [sendCredentialsInfo, paymentState]);\n\n  const handleButtonClick = useLastCallback(() => {\n    switch (step) {\n      case PaymentStep.ShippingInfo:\n        setIsLoading(true);\n        validateRequest();\n        break;\n\n      case PaymentStep.Shipping:\n        setStep(PaymentStep.Checkout);\n        break;\n\n      case PaymentStep.SavedPayments:\n        setStep(PaymentStep.ConfirmPassword);\n        break;\n\n      case PaymentStep.ConfirmPassword:\n        if (twoFaPassword === '') {\n          return;\n        }\n\n        setIsLoading(true);\n        validatePaymentPassword({ password: twoFaPassword });\n        break;\n\n      case PaymentStep.PaymentInfo:\n        setIsLoading(true);\n        sendCredentials();\n        paymentDispatch({ type: 'changeSavedCredentialId', payload: '' });\n        break;\n\n      case PaymentStep.Checkout: {\n        if (isPaymentFormUrl) {\n          setIsLoading(true);\n          setStep(PaymentStep.ConfirmPayment);\n          return;\n        }\n\n        if (form?.savedInfo && !requestId && !paymentState.shipping) {\n          setIsLoading(true);\n          validateRequest();\n          return;\n        }\n\n        if (\n          paymentState.savedCredentialId\n          && (!passwordValidUntil || passwordValidUntil <= (Date.now() / 1000 - NETWORK_REQUEST_TIMEOUT_S))\n        ) {\n          setStep(PaymentStep.ConfirmPassword);\n          return;\n        }\n\n        if (\n          !paymentState.savedCredentialId\n          && (\n            (nativeProvider === DEFAULT_PROVIDER && !stripeId)\n            || (nativeProvider === DONATE_PROVIDER && !smartGlocalToken)\n          )\n        ) {\n          setStep(PaymentStep.PaymentInfo);\n          return;\n        }\n\n        const { phone, email, fullName } = paymentState;\n        const shouldFillRequestedData = (invoice?.isEmailRequested && !email)\n          || (invoice?.isPhoneRequested && !phone)\n          || (invoice?.isNameRequested && !fullName);\n\n        if ((invoice?.isShippingAddressRequested && !requestId) || shouldFillRequestedData) {\n          setStep(PaymentStep.ShippingInfo);\n          return;\n        }\n\n        if (invoice?.isShippingAddressRequested && !paymentState.shipping && shippingOptions?.length) {\n          setStep(PaymentStep.Shipping);\n          return;\n        }\n\n        setIsLoading(true);\n        sendForm();\n        break;\n      }\n    }\n  });\n\n  useEffect(() => {\n    return step === PaymentStep.ConfirmPassword\n      ? captureKeyboardListeners({ onEnter: handleButtonClick })\n      : undefined;\n  },\n  [handleButtonClick, step]);\n\n  const handleModalClose = useCallback(() => {\n    paymentDispatch({\n      type: 'resetState',\n    });\n    setIsTosAccepted(false);\n    onClose();\n  }, [onClose, paymentDispatch]);\n\n  const handleBackClick = useCallback(() => {\n    setStep(step === PaymentStep.ConfirmPassword ? PaymentStep.SavedPayments : PaymentStep.Checkout);\n  }, [setStep, step]);\n\n  const modalHeader = useMemo(() => {\n    switch (step) {\n      case PaymentStep.Checkout:\n        return oldLang('PaymentCheckout');\n      case PaymentStep.ShippingInfo:\n        return oldLang('PaymentShippingInfo');\n      case PaymentStep.Shipping:\n        return oldLang('PaymentShippingMethod');\n      case PaymentStep.SavedPayments:\n        return oldLang('PaymentCheckoutMethod');\n      case PaymentStep.ConfirmPassword:\n        return oldLang('Checkout.PasswordEntry.Title');\n      case PaymentStep.PaymentInfo:\n        return oldLang('PaymentCardInfo');\n      case PaymentStep.ConfirmPayment:\n        return oldLang('Checkout.WebConfirmation.Title');\n      default:\n        return '';\n    }\n  }, [step, oldLang]);\n\n  const buttonText = step === PaymentStep.Checkout\n    ? oldLang('Checkout.PayPrice', formatCurrencyAsString(totalPrice, invoice!.currency, oldLang.code))\n    : lang('PaymentInfoDone');\n\n  function getIsSubmitDisabled() {\n    if (isLoading) {\n      return true;\n    }\n\n    switch (step) {\n      case PaymentStep.Checkout:\n        return Boolean(invoice?.termsUrl) && !isTosAccepted;\n\n      case PaymentStep.PaymentInfo:\n        return Boolean(\n          paymentState.cardNumber === ''\n          || (needCardholderName && paymentState.cardholder === '')\n          || paymentState.cvv === ''\n          || paymentState.expiry === '',\n        );\n\n      default:\n        return false;\n    }\n  }\n\n  if (isProviderError) {\n    return (\n      <Modal\n        className=\"error\"\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        onCloseAnimationEnd={handleModalClose}\n      >\n        <p>\n          Sorry, Telegram Web A doesn&apos;t support payments with this provider yet. <br />\n          Please use one of our mobile apps to do this.\n        </p>\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            isText\n            onClick={closeModal}\n          >\n            {oldLang('OK')}\n          </Button>\n        </div>\n      </Modal>\n    );\n  }\n\n  const isSubmitDisabled = getIsSubmitDisabled();\n\n  return (\n    <Modal\n      className={buildClassName('PaymentModal', invoice?.isRecurring && 'recurring')}\n      isOpen={isModalOpen}\n      onClose={closeModal}\n      onCloseAnimationEnd={handleModalClose}\n    >\n      <div className=\"header\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n        <Button\n          className=\"close-button\"\n          color=\"translucent\"\n          round\n          size=\"smaller\"\n          onClick={step === PaymentStep.Checkout ? closeModal : handleBackClick}\n          ariaLabel=\"Close\"\n        >\n          <Icon name={step === PaymentStep.Checkout ? 'close' : 'arrow-left'} />\n        </Button>\n        <h3>{modalHeader}</h3>\n      </div>\n      {step !== undefined ? (\n        <Transition\n          name=\"slide\"\n          activeKey={step}\n          shouldCleanup\n          cleanupOnlyKey={PaymentStep.ConfirmPayment}\n        >\n          <div className=\"content custom-scroll\">\n            {renderModalContent(step)}\n          </div>\n        </Transition>\n      ) : (\n        <div className=\"empty-content\">\n          <Spinner color=\"gray\" />\n        </div>\n      )}\n      {canRenderFooter && (\n        <div className=\"footer\">\n          <Button\n            className=\"button-text\"\n            type=\"submit\"\n            onClick={handleButtonClick}\n            disabled={isSubmitDisabled}\n            isLoading={isLoading}\n          >\n            {buttonText}\n          </Button>\n        </div>\n      )}\n      {error && !error.field && renderError()}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      form,\n      step,\n      shippingOptions,\n      error,\n      confirmPaymentUrl,\n      inputInvoice,\n      requestId,\n      stripeCredentials,\n      smartGlocalCredentials,\n      temporaryPassword,\n      isExtendedMedia,\n      url,\n    } = selectTabState(global).payment;\n\n    const { invoice, nativeParams, nativeProvider } = form || {};\n    const countryList = global.countryList.general;\n\n    let providerName = form?.nativeProvider;\n    if (!providerName && url) {\n      providerName = url.startsWith(DONATE_PROVIDER_URL) ? DONATE_PROVIDER : undefined;\n    }\n\n    const chat = inputInvoice && 'chatId' in inputInvoice ? selectChat(global, inputInvoice.chatId!) : undefined;\n    const isProviderError = Boolean(invoice && (!providerName || !SUPPORTED_PROVIDERS.has(providerName)));\n    const { needCardholderName, needCountry, needZip } = (nativeParams || {});\n    const bot = form?.botId ? selectUser(global, form.botId) : undefined;\n    const botName = getUserFullName(bot);\n\n    return {\n      step,\n      chat,\n      shippingOptions,\n      nativeProvider: providerName,\n      isProviderError,\n      form,\n      invoice,\n      needCardholderName,\n      needCountry,\n      needZip,\n      error,\n      confirmPaymentUrl: confirmPaymentUrl ?? url,\n      isPaymentFormUrl: Boolean(!nativeProvider && url),\n      countryList,\n      requestId,\n      hasShippingOptions: Boolean(shippingOptions?.length),\n      smartGlocalToken: smartGlocalCredentials?.token,\n      stripeId: stripeCredentials?.id,\n      passwordValidUntil: temporaryPassword?.validUntil,\n      isExtendedMedia,\n      botName,\n    };\n  },\n)(PaymentModal));\n\nfunction findShippingOption(shippingOptions: ShippingOption[], optionId: string) {\n  return shippingOptions.find(({ id }) => id === optionId);\n}\n\nfunction getShippingPrices(shippingOptions: ShippingOption[], shippingOption: string) {\n  const option = findShippingOption(shippingOptions, shippingOption);\n  return option?.prices;\n}\n\nfunction getTotalPrice(\n  prices: ApiLabeledPrice[] = [],\n  shippingOptions: ShippingOption[] | undefined,\n  shippingOption: string,\n  tipAmount: number,\n) {\n  const shippingPrices = shippingOptions\n    ? getShippingPrices(shippingOptions, shippingOption)\n    : [];\n  let total = tipAmount;\n  const totalPrices = prices.concat(shippingPrices || []);\n  total = totalPrices.reduce((acc, cur) => {\n    return acc + cur.amount;\n  }, total);\n  return total;\n}\n\nfunction getCheckoutInfo(state: FormState, shippingOptions: ShippingOption[] | undefined, paymentProvider: string) {\n  const cardTypeText = detectCardTypeText(state.cardNumber);\n  const paymentMethod = cardTypeText && state.cardNumber ? `${cardTypeText} *${state.cardNumber.slice(-4)}` : undefined;\n  const shippingAddress = state.streetLine1\n    ? `${state.streetLine1}, ${state.city}, ${state.countryIso2}`\n    : undefined;\n  const { phone, fullName: name } = state;\n  const shippingOption = shippingOptions ? findShippingOption(shippingOptions, state.shipping) : undefined;\n  const shippingMethod = shippingOption?.title;\n  return {\n    paymentMethod,\n    paymentProvider,\n    shippingAddress,\n    name,\n    phone,\n    shippingMethod,\n  };\n}\n\nfunction getRequestInfo(paymentState: FormState) {\n  const {\n    streetLine1,\n    streetLine2,\n    city,\n    state,\n    countryIso2,\n    postCode,\n    fullName: name,\n    phone,\n    email,\n  } = paymentState;\n\n  const shippingAddress = {\n    streetLine1,\n    streetLine2,\n    city,\n    state,\n    countryIso2,\n    postCode,\n  };\n\n  return {\n    name,\n    phone,\n    email,\n    shippingAddress,\n  };\n}\n\nexport type ApiCredentials = {\n  data: {\n    cardNumber: string;\n    cardholder: string;\n    expiryMonth: string;\n    expiryYear: string;\n    cvv: string;\n    country: string;\n    zip: string;\n  };\n};\n\nfunction getCredentials(paymentState: FormState): ApiCredentials {\n  const {\n    cardNumber, cardholder, expiry, cvv, billingCountry, billingZip,\n  } = paymentState;\n  const [expiryMonth, expiryYear] = expiry.split('/');\n  const data = {\n    cardNumber,\n    cardholder,\n    expiryMonth,\n    expiryYear,\n    cvv,\n    country: billingCountry,\n    zip: billingZip,\n  };\n\n  return {\n    data,\n  };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiReceiptRegular, ApiShippingAddress } from '../../api/types';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Checkout from './Checkout';\n\nimport './PaymentModal.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  receipt?: ApiReceiptRegular;\n};\n\nconst ReceiptModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  onClose,\n  receipt,\n}) => {\n  const lang = useLang();\n\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  useEffect(() => {\n    if (isOpen) {\n      openModal();\n    }\n  }, [isOpen, openModal]);\n\n  const prevReceipt = usePrevious(receipt);\n  const renderingReceipt = receipt || prevReceipt;\n\n  const checkoutInfo = useMemo(() => {\n    if (!renderingReceipt) return undefined;\n    return getCheckoutInfo(renderingReceipt.credentialsTitle, renderingReceipt.info, renderingReceipt.shippingMethod);\n  }, [renderingReceipt]);\n\n  return (\n    <Modal\n      className=\"PaymentModal PaymentModal-receipt\"\n      isOpen={isModalOpen}\n      onClose={closeModal}\n      onCloseAnimationEnd={onClose}\n    >\n      {renderingReceipt && (\n        <>\n          <div className=\"header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            <Button\n              className=\"close-button\"\n              color=\"translucent\"\n              round\n              size=\"smaller\"\n              onClick={closeModal}\n              ariaLabel=\"Close\"\n            >\n              <Icon name=\"close\" />\n            </Button>\n            <h3> {lang('PaymentReceipt')} </h3>\n          </div>\n          <div className=\"receipt-content custom-scroll\">\n            <Checkout\n              shippingPrices={renderingReceipt.shippingPrices}\n              totalPrice={renderingReceipt.totalAmount}\n              tipAmount={renderingReceipt.tipAmount}\n              invoice={renderingReceipt.invoice}\n              checkoutInfo={checkoutInfo}\n              title={renderingReceipt.title}\n              description={renderingReceipt.description}\n              photo={renderingReceipt.photo}\n            />\n          </div>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { receipt } = selectTabState(global).payment;\n\n    return {\n      receipt,\n    };\n  },\n)(ReceiptModal));\n\nfunction getCheckoutInfo(paymentMethod?: string,\n  info?: {\n    phone?: string;\n    name?: string;\n    shippingAddress?: ApiShippingAddress;\n  },\n  shippingMethod?: string) {\n  if (!info) {\n    return { paymentMethod };\n  }\n  const { shippingAddress } = info;\n  const fullAddress = shippingAddress?.streetLine1\n    ? `${shippingAddress.streetLine1}, ${shippingAddress.city}, ${shippingAddress.countryIso2}`\n    : undefined;\n  const { phone, name } = info;\n  return {\n    paymentMethod,\n    shippingAddress: fullAddress,\n    name,\n    phone,\n    shippingMethod,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"n8eENbaR\",\"closeButton\":\"smosGkw9\",\"contentText\":\"Qo4PtFZI\",\"title\":\"wtfpombl\",\"separator\":\"UoMeVIyC\",\"userPicker\":\"nEYyTS_m\",\"sendInvites\":\"Ttkq3nqt\",\"avatarList\":\"Nc3SOtKd\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback,\n  useEffect,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectChat } from '../../../global/selectors';\nimport { partition } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Icon from '../../common/icons/Icon';\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport Separator from '../../ui/Separator';\n\nimport styles from './InviteViaLinkModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['inviteViaLinkModal'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n};\n\nconst InviteViaLinkModal: FC<OwnProps & StateProps> = ({\n  modal,\n  chat,\n}) => {\n  const { sendInviteMessages, closeInviteViaLinkModal, openPremiumModal } = getActions();\n  const { missingUsers } = modal || {};\n\n  const lang = useOldLang();\n  const [selectedMemberIds, setSelectedMemberIds] = useState<string[]>([]);\n\n  const userIds = useMemo(() => missingUsers?.map((user) => user.id) || MEMO_EMPTY_ARRAY, [missingUsers]);\n  const [unselectableIds, selectableIds] = useMemo(() => {\n    if (!missingUsers?.length) return [[], []];\n    const [requirePremiumIds, regularIds] = partition(missingUsers, (user) => user.isRequiringPremiumToMessage);\n    return [requirePremiumIds.map((user) => user.id), regularIds.map((user) => user.id)];\n  }, [missingUsers]);\n\n  const invitableWithPremiumIds = useMemo(() => {\n    return missingUsers?.filter((user) => user.isRequiringPremiumToInvite || user.isRequiringPremiumToMessage)\n      .map((user) => user.id);\n  }, [missingUsers]);\n\n  const isEveryPremiumBlocksPm = useMemo(() => {\n    if (!missingUsers) return undefined;\n    return !missingUsers.some((user) => user.isRequiringPremiumToInvite && !user.isRequiringPremiumToMessage);\n  }, [missingUsers]);\n\n  const topListPeers = useMemo(() => {\n    const users = getGlobal().users.byId;\n    return invitableWithPremiumIds?.map((id) => users[id]);\n  }, [invitableWithPremiumIds]);\n\n  useEffect(() => {\n    setSelectedMemberIds(selectableIds);\n  }, [selectableIds]);\n\n  const handleClose = useLastCallback(() => closeInviteViaLinkModal());\n\n  const handleSendInviteLink = useCallback(() => {\n    sendInviteMessages({ chatId: chat!.id, userIds: selectedMemberIds! });\n    closeInviteViaLinkModal();\n  }, [selectedMemberIds, chat]);\n\n  const handleOpenPremiumModal = useCallback(() => {\n    openPremiumModal();\n  }, []);\n\n  const canSendInviteLink = useMemo(() => {\n    if (!chat) return undefined;\n    return Boolean(chat?.isCreator || chat?.adminRights?.inviteUsers);\n  }, [chat]);\n\n  const inviteSectionText = useMemo(() => {\n    return canSendInviteLink\n      ? lang(missingUsers?.length === 1 ? 'InviteBlockedOneMessage' : 'InviteBlockedManyMessage')\n      : lang('InviteRestrictedUsers2', missingUsers?.length);\n  }, [canSendInviteLink, lang, missingUsers?.length]);\n\n  const premiumSectionText = useMemo(() => {\n    if (!invitableWithPremiumIds?.length || !topListPeers?.length) return undefined;\n    const prefix = isEveryPremiumBlocksPm ? 'InviteMessagePremiumBlocked' : 'InvitePremiumBlocked';\n    let langKey = `${prefix}One`;\n    let params = [getUserFullName(topListPeers[0])];\n    if (invitableWithPremiumIds.length === 2) {\n      langKey = `${prefix}Two`;\n      params = [getUserFullName(topListPeers[0]), getUserFullName(topListPeers[1])];\n    } else if (invitableWithPremiumIds.length === 3) {\n      langKey = `${prefix}Three`;\n      params = [getUserFullName(topListPeers[0]), getUserFullName(topListPeers[1]), getUserFullName(topListPeers[2])];\n    } else if (invitableWithPremiumIds.length > 3) {\n      langKey = `${prefix}Many`;\n      params = [\n        getUserFullName(topListPeers[0]),\n        getUserFullName(topListPeers[1]),\n        (invitableWithPremiumIds!.length - 2).toString(),\n      ];\n    }\n\n    return lang(langKey, params, undefined, topListPeers.length);\n  }, [invitableWithPremiumIds, isEveryPremiumBlocksPm, lang, topListPeers]);\n\n  const hasPremiumSection = Boolean(topListPeers?.length);\n  const hasSelectableSection = Boolean(selectableIds?.length);\n\n  return (\n    <Modal\n      isOpen={Boolean(userIds && chat)}\n      contentClassName={styles.content}\n      onClose={handleClose}\n      isSlim\n    >\n      <Button\n        round\n        color=\"translucent\"\n        size=\"smaller\"\n        className={styles.closeButton}\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <Icon name=\"close\" />\n      </Button>\n      {premiumSectionText && (\n        <>\n          <AvatarList\n            className={styles.avatarList}\n            peers={topListPeers}\n            size=\"large\"\n          />\n          <h3 className={styles.title}>\n            {canSendInviteLink ? lang('InvitePremiumBlockedTitle') : lang('ChannelInviteViaLinkRestricted')}\n          </h3>\n          <p className={styles.contentText}>\n            {renderText(premiumSectionText, ['simple_markdown'])}\n          </p>\n          <Button\n            withPremiumGradient\n            isShiny\n            size=\"smaller\"\n            onClick={handleOpenPremiumModal}\n          >\n            {lang('InvitePremiumBlockedSubscribe')}\n          </Button>\n        </>\n      )}\n      {hasPremiumSection && hasSelectableSection && (\n        <Separator className={styles.separator}>\n          {lang('InvitePremiumBlockedOr')}\n        </Separator>\n      )}\n      {hasSelectableSection && (\n        <>\n          <h3 className={styles.title}>{lang('InviteBlockedTitle')}</h3>\n          <p className={styles.contentText}>\n            {inviteSectionText}\n          </p>\n          <PeerPicker\n            className={styles.userPicker}\n            itemIds={userIds}\n            selectedIds={selectedMemberIds}\n            lockedUnselectedIds={unselectableIds}\n            lockedUnselectedSubtitle={lang('InvitePremiumBlockedUser')}\n            onSelectedIdsChange={setSelectedMemberIds}\n            isViewOnly={!canSendInviteLink}\n            allowMultiple\n            withStatus\n            itemInputType=\"checkbox\"\n          />\n          {canSendInviteLink && (\n            <Button\n              className={styles.sendInvites}\n              size=\"smaller\"\n              onClick={handleSendInviteLink}\n              disabled={!selectedMemberIds.length}\n            >\n              {lang('SendInviteLink.ActionInvite')}\n            </Button>\n          )}\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const chat = modal?.chatId ? selectChat(global, modal.chatId) : undefined;\n\n    return {\n      chat,\n    };\n  },\n)(InviteViaLinkModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"c3xMWwzW\",\"fade-in-opacity\":\"cHb04cFv\",\"fadeInOpacity\":\"cHb04cFv\",\"closing\":\"_0HkZ8ITm\",\"voice\":\"VLiJWMs0\",\"video\":\"ML2YEpGq\",\"footer\":\"VWy1qXJL\",\"closeBtn\":\"FfMrCmD9\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\nimport { AudioOrigin } from '../../../types';\n\nimport { isOwnMessage } from '../../../global/helpers';\nimport { selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Audio from '../../common/Audio';\nimport RoundVideo from '../../middle/message/RoundVideo';\nimport Button from '../../ui/Button';\n\nimport styles from './OneTimeMediaModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['oneTimeMediaModal'];\n};\n\nconst OneTimeMediaModal = ({\n  modal,\n}: OwnProps) => {\n  const {\n    closeOneTimeMediaModal,\n  } = getActions();\n\n  const lang = useOldLang();\n  const message = useCurrentOrPrev(modal?.message, true);\n\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransitionDeprecated(Boolean(modal));\n\n  const handlePlayVoice = useLastCallback(() => {\n    return undefined;\n  });\n\n  const handleClose = useLastCallback(() => {\n    closeOneTimeMediaModal();\n  });\n\n  if (!shouldRender || !message) {\n    return undefined;\n  }\n\n  const isOwn = isOwnMessage(message);\n  const theme = selectTheme(getGlobal());\n  const closeBtnTitle = isOwn ? lang('Chat.Voice.Single.Close') : lang('Chat.Voice.Single.DeleteAndClose');\n\n  function renderMedia() {\n    if (!message?.content) {\n      return undefined;\n    }\n    const { voice, video } = message.content;\n    if (voice) {\n      return (\n        <Audio\n          className={styles.voice}\n          theme={theme}\n          message={message}\n          origin={AudioOrigin.OneTimeModal}\n          autoPlay\n          onPlay={handlePlayVoice}\n          onPause={handleClose}\n        />\n      );\n    } else if (video?.isRound) {\n      return (\n        <RoundVideo\n          className={styles.video}\n          message={message}\n          origin=\"oneTimeModal\"\n          onStop={handleClose}\n        />\n      );\n    }\n    return undefined;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, transitionClassNames)}>\n      {renderMedia()}\n      <div className={styles.footer}>\n        <Button\n          faded\n          onClick={handleClose}\n          pill\n          size=\"smaller\"\n          color={theme === 'dark' ? 'dark' : 'secondary'}\n          className={styles.closeBtn}\n        >\n          {closeBtnTitle}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(OneTimeMediaModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useKeyboardListNavigation from '../../hooks/useKeyboardListNavigation';\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Checkbox from '../ui/Checkbox';\nimport Modal from '../ui/Modal';\n\ntype OwnProps = {\n  isOpen: boolean;\n};\n\nconst WebAppsCloseConfirmationModal: FC<OwnProps> = ({\n  isOpen,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const { closeWebAppsCloseConfirmationModal, closeWebAppModal } = getActions();\n\n  const [shouldSkipInFuture, setShouldSkipInFuture] = useState(false);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const onClose = useCallback(() => {\n    closeWebAppsCloseConfirmationModal({ shouldSkipInFuture });\n  }, [shouldSkipInFuture]);\n\n  const confirmHandler = useCallback(() => {\n    closeWebAppModal({ shouldSkipConfirmation: true });\n    closeWebAppsCloseConfirmationModal({ shouldSkipInFuture });\n  }, [shouldSkipInFuture]);\n\n  const handleSelectWithEnter = useCallback((index: number) => {\n    if (index === -1) confirmHandler();\n  }, [confirmHandler]);\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isOpen, handleSelectWithEnter, '.Button');\n\n  return (\n    <Modal\n      className={buildClassName('confirm')}\n      title={lang('CloseMiniApps')}\n      isOpen={isOpen}\n      onClose={onClose}\n    >\n      <p>{lang('AreYouSureCloseMiniApps')}</p>\n      <Checkbox\n        className=\"dialog-checkbox\"\n        label={lang('DoNotAskAgain')}\n        checked={shouldSkipInFuture}\n        onCheck={setShouldSkipInFuture}\n      />\n      <div\n        className=\"dialog-buttons mt-2\"\n        ref={containerRef}\n        onKeyDown={handleKeyDown}\n      >\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={confirmHandler}\n          color=\"danger\"\n        >\n          {oldLang('Confirm')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>\n          {oldLang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(WebAppsCloseConfirmationModal);\n","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { selectUser } from '../../../global/selectors';\nimport { formatDateToString } from '../../../util/dates/dateFormat';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport formatUsername from '../../common/helpers/formatUsername';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport Button from '../../ui/Button';\nimport Link from '../../ui/Link';\nimport TableAboutModal, { type TableAboutData } from '../common/TableAboutModal';\n\nimport styles from './FrozenAccountModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['isFrozenAccountModalOpen'];\n};\n\ntype StateProps = {\n  freezeAppealUrl?: string;\n  botFreezeAppealUsername?: string;\n  freezeUntilDate?: number;\n};\n\nconst FrozenAccountModal = ({\n  modal,\n  freezeUntilDate,\n  freezeAppealUrl,\n  botFreezeAppealUsername,\n}: OwnProps & StateProps) => {\n  const {\n    closeFrozenAccountModal,\n    openUrl,\n  } = getActions();\n  const lang = useLang();\n\n  const isOpen = Boolean(modal);\n\n  const handleClose = useLastCallback(() => {\n    closeFrozenAccountModal();\n  });\n\n  const handleAppeal = useLastCallback(() => {\n    closeFrozenAccountModal();\n    if (freezeAppealUrl) {\n      openUrl({ url: freezeAppealUrl });\n    }\n  });\n\n  const header = useMemo(() => {\n    return (\n      <div className={styles.header}>\n        <AnimatedIconWithPreview\n          size={160}\n          tgsUrl={LOCAL_TGS_URLS.BannedDuck}\n          noLoop\n        />\n        <div className={styles.title}>\n          {lang('FrozenAccountModalTitle')}\n        </div>\n      </div>\n    );\n  }, [lang]);\n\n  const footer = useMemo(() => {\n    if (!isOpen) return undefined;\n    return (\n      <div className={styles.footer}>\n        <Button\n          className={styles.buttonAppeal}\n          size=\"smaller\"\n          onClick={handleAppeal}\n          noForcedUpperCase\n        >\n          {lang('ButtonAppeal')}\n        </Button>\n        <Button\n          isText\n          size=\"smaller\"\n          onClick={handleClose}\n          noForcedUpperCase\n        >\n          {lang('ButtonUnderstood')}\n        </Button>\n      </div>\n    );\n  }, [lang, isOpen]);\n\n  if (!freezeUntilDate || !botFreezeAppealUsername) return undefined;\n\n  const date = new Date(freezeUntilDate * 1000);\n\n  const botLink = (\n    <Link onClick={handleAppeal} isPrimary>\n      {formatUsername(botFreezeAppealUsername)}\n    </Link>\n  );\n\n  const listItemData = [\n    ['hand-stop', lang('FrozenAccountViolationTitle'), lang('FrozenAccountViolationSubtitle')],\n    ['lock', lang('FrozenAccountReadOnlyTitle'), lang('FrozenAccountReadOnlySubtitle')],\n    ['frozen-time', lang('FrozenAccountAppealTitle'),\n      lang('FrozenAccountAppealSubtitle', {\n        botLink,\n        date: formatDateToString(date, lang.code),\n      }, {\n        withNodes: true,\n      })],\n  ] satisfies TableAboutData;\n\n  return (\n    <TableAboutModal\n      isOpen={isOpen}\n      header={header}\n      listItemData={listItemData}\n      footer={footer}\n      hasBackdrop\n      onClose={handleClose}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const freezeUntilDate = global.appConfig?.freezeUntilDate;\n    const freezeAppealUrl = global.appConfig?.freezeAppealUrl;\n    const botFreezeAppealId = global.botFreezeAppealId;\n    const botFreezeAppealUsername = botFreezeAppealId\n      ? selectUser(global, botFreezeAppealId)?.usernames?.[0]?.username : undefined;\n\n    return {\n      freezeUntilDate,\n      freezeAppealUrl,\n      botFreezeAppealUsername,\n    };\n  },\n)(FrozenAccountModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"cW2rtp6M\",\"title\":\"qLSm0uyC\",\"footer\":\"Vj3QQ_JQ\",\"buttonAppeal\":\"anvg3JaY\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport { STICKER_SIZE_AUTH, STICKER_SIZE_AUTH_MOBILE, STICKER_SIZE_TWO_FA } from '../../config';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\n\nimport AnimatedSticker from './AnimatedSticker';\n\nimport './PasswordMonkey.scss';\n\ntype OwnProps = {\n  isPasswordVisible: boolean;\n  isBig?: boolean;\n};\n\nconst PEEK_MONKEY_SHOW_DELAY = 2000;\nconst SEGMENT_COVER_EYES: [number, number] = [0, 50];\nconst SEGMENT_UNCOVER_EYE: [number, number] = [0, 20];\nconst SEGMENT_COVER_EYE: [number, number] = [20, 0];\n\nconst PasswordMonkey: FC<OwnProps> = ({ isPasswordVisible, isBig }) => {\n  const [isFirstMonkeyLoaded, markFirstMonkeyLoaded] = useFlag(false);\n  const [isPeekShown, markPeekShown] = useFlag(false);\n  const { isMobile } = useAppLayout();\n\n  const stikerSize = isMobile ? STICKER_SIZE_AUTH_MOBILE : STICKER_SIZE_AUTH;\n\n  useTimeout(markPeekShown, PEEK_MONKEY_SHOW_DELAY);\n  const handleFirstMonkeyLoad = useCallback(markFirstMonkeyLoaded, [markFirstMonkeyLoaded]);\n\n  return (\n    <div id=\"monkey\" className={isBig ? 'big' : ''}>\n      {!isFirstMonkeyLoaded && (\n        <div className=\"monkey-preview\" />\n      )}\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'hidden' : 'shown'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyClose}\n        playSegment={SEGMENT_COVER_EYES}\n        noLoop\n        onLoad={handleFirstMonkeyLoad}\n      />\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'shown' : 'hidden'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyPeek}\n        playSegment={isPasswordVisible ? SEGMENT_UNCOVER_EYE : SEGMENT_COVER_EYE}\n        noLoop\n      />\n    </div>\n  );\n};\n\nexport default memo(PasswordMonkey);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"hyRfEyRz\",\"top\":\"p_Ny8jqJ\",\"badge\":\"QRrryqp4\",\"text\":\"I5jdPgFL\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiPeer, ApiWebDocument } from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\n\nimport Avatar, { type AvatarSize } from './Avatar';\nimport Icon from './icons/Icon';\n\nimport styles from './PeerBadge.module.scss';\n\ntype OwnProps = {\n  peer?: ApiPeer | CustomPeer;\n  avatarWebPhoto?: ApiWebDocument;\n  avatarSize?: AvatarSize;\n  text?: string;\n  badgeText?: string;\n  badgeIcon?: IconName;\n  className?: string;\n  badgeClassName?: string;\n  badgeIconClassName?: string;\n  textClassName?: string;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PeerBadge = ({\n  peer: avatarPeer,\n  avatarWebPhoto,\n  avatarSize,\n  text,\n  badgeText,\n  badgeIcon,\n  className,\n  badgeClassName,\n  badgeIconClassName,\n  textClassName,\n  onClick,\n}: OwnProps) => {\n  const lang = useLang();\n  return (\n    <div\n      className={buildClassName(styles.root, onClick && styles.clickable, className)}\n      onClick={onClick}\n    >\n      <div className={styles.top}>\n        <Avatar size={avatarSize} peer={avatarPeer} webPhoto={avatarWebPhoto} />\n        {badgeText && (\n          <div className={buildClassName(styles.badge, badgeClassName)} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n            {badgeIcon && <Icon name={badgeIcon} className={badgeIconClassName} />}\n            {badgeText}\n          </div>\n        )}\n      </div>\n      {text && <p className={buildClassName(styles.text, textClassName)}>{text}</p>}\n    </div>\n  );\n};\n\nexport default memo(PeerBadge);\n","import React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Modal, { type OwnProps as ModalProps } from '../../ui/Modal';\n\nimport styles from './PickerModal.module.scss';\n\ntype OwnProps = {\n  confirmButtonText?: string;\n  isConfirmDisabled?: boolean;\n  shouldAdaptToSearch?: boolean;\n  withFixedHeight?: boolean;\n  withPremiumGradient?: boolean;\n  onConfirm?: NoneToVoidFunction;\n} & ModalProps;\n\nconst PickerModal = ({\n  confirmButtonText,\n  isConfirmDisabled,\n  shouldAdaptToSearch,\n  withFixedHeight,\n  onConfirm,\n  withPremiumGradient,\n  ...modalProps\n}: OwnProps) => {\n  const lang = useOldLang();\n  const hasButton = Boolean(confirmButtonText || onConfirm);\n\n  return (\n    <Modal\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...modalProps}\n      isSlim\n      className={buildClassName(\n        shouldAdaptToSearch && styles.withSearch,\n        withFixedHeight && styles.fixedHeight,\n        modalProps.className,\n      )}\n      contentClassName={buildClassName(styles.content, modalProps.contentClassName)}\n      headerClassName={buildClassName(styles.header, modalProps.headerClassName)}\n    >\n      {modalProps.children}\n      {hasButton && (\n        <div className={styles.buttonWrapper}>\n          <Button\n            withPremiumGradient={withPremiumGradient}\n            onClick={onConfirm || modalProps.onClose}\n            color=\"primary\"\n            size=\"smaller\"\n            disabled={isConfirmDisabled}\n          >\n            {confirmButtonText || lang('Confirm')}\n          </Button>\n        </div>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(PickerModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"FuFYE0AA\",\"fixedHeight\":\"CrEsDylb\",\"withSearch\":\"WGSZ8u75\",\"header\":\"iEptOmIp\",\"buttonWrapper\":\"HqeDTaSr\"};","// extracted by mini-css-extract-plugin\nexport default {\"RichInput\":\"iVOOM94X\",\"richInput\":\"iVOOM94X\",\"RichInputContainer\":\"USQTiOxp\",\"richInputContainer\":\"USQTiOxp\",\"placeholder-text\":\"ImEnkEKm\",\"placeholderText\":\"ImEnkEKm\",\"with-icon\":\"wESx9wwq\",\"withIcon\":\"wESx9wwq\",\"placeholder-icon\":\"LdpU71eT\",\"placeholderIcon\":\"LdpU71eT\",\"touched\":\"I1tjTT9Y\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../../lib/teact/teact';\n\nimport type { RichInputCtx } from './useRichEditable';\n\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\n\nimport RichEditableAttachment from './RichEditableAttachment';\nimport TextFormatter from './TextFormatter.async';\n\nimport style from './RichInput.module.scss';\n\ntype OwnProps = {\n  className?: string;\n  placeholder?: string;\n  richInputCtx: RichInputCtx;\n  limitRemaining?: number;\n  disablePreview?: boolean;\n};\n\nconst RichInput: FC<OwnProps> = ({\n  richInputCtx, className, placeholder, limitRemaining, disablePreview,\n}) => {\n  const fullClass = buildClassName(className,\n    'form-control',\n    style.RichInput,\n    (limitRemaining !== undefined && limitRemaining < 0) && 'danger');\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n\n  useEffect(() => {\n    const sel = richInputCtx.editable.selectionS();\n    if (!sel) return;\n    if (!sel?.collapsed) openTextFormatter();\n  }, [richInputCtx.editable, richInputCtx.editable.selectionS]);\n\n  const isTouched = useDerivedState(\n    () => Boolean(!richInputCtx.editable.emptyS()),\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n    [richInputCtx.editable.emptyS, richInputCtx.editable],\n  );\n\n  return (\n    <div className={style.RichInputContainer}>\n      <div className={fullClass}>\n        <RichEditableAttachment\n          richInputCtx={richInputCtx}\n          placeholder={placeholder}\n        />\n        <span\n          className={buildClassName(\n            style.placeholderText,\n            isTouched && style.touched,\n          )}\n          dir=\"auto\"\n        >\n          {placeholder}\n        </span>\n      </div>\n      {limitRemaining !== undefined && limitRemaining < 10 && (\n        <div\n          style={buildStyle(limitRemaining < 0 && 'color: var(--color-error)')}\n          className=\"max-length-indicator\"\n        >{limitRemaining}\n        </div>\n      )}\n\n      <TextFormatter\n        richInputCtx={richInputCtx}\n        isOpen={isTextFormatterOpen}\n        isActive\n        onClose={closeTextFormatter}\n        disablePreview={disablePreview}\n      />\n    </div>\n  );\n};\n\nexport default memo(RichInput);\n","import { useRichEditable } from './useRichEditable';\n\nexport function useRichInput() {\n  const ctx = useRichEditable();\n\n  return ctx;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"LAh8evux\",\"title\":\"yfODVQ1M\",\"description\":\"QaQn08BX\",\"secondary\":\"sQZslvAr\",\"topIcon\":\"jySLtQNG\",\"listItemIcon\":\"hQbEPsTU\",\"content\":\"hrizpMDe\",\"separator\":\"En1zD2cT\"};","import React, { memo, type TeactNode } from '../../../lib/teact/teact';\n\nimport type { IconName } from '../../../types/icons';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport Separator from '../../ui/Separator';\n\nimport styles from './TableAboutModal.module.scss';\n\nexport type TableAboutData = [IconName | undefined, TeactNode, TeactNode][];\n\ntype OwnProps = {\n  contentClassName?: string;\n  isOpen?: boolean;\n  listItemData?: TableAboutData;\n  headerIconName?: IconName;\n  header?: TeactNode;\n  footer?: TeactNode;\n  buttonText?: string;\n  hasBackdrop?: boolean;\n  withSeparator?: boolean;\n  onClose: NoneToVoidFunction;\n  onButtonClick?: NoneToVoidFunction;\n};\n\nconst TableAboutModal = ({\n  isOpen,\n  listItemData,\n  headerIconName,\n  header,\n  footer,\n  buttonText,\n  hasBackdrop,\n  withSeparator,\n  onClose,\n  onButtonClick,\n  contentClassName,\n}: OwnProps) => {\n  return (\n    <Modal\n      isOpen={isOpen}\n      className={buildClassName(styles.root, contentClassName)}\n      contentClassName={styles.content}\n      hasAbsoluteCloseButton\n      absoluteCloseButtonColor={hasBackdrop ? 'translucent-white' : undefined}\n      onClose={onClose}\n    >\n      {headerIconName && <div className={styles.topIcon}><Icon name={headerIconName} /></div>}\n      {header}\n      <div>\n        {listItemData?.map(([icon, title, subtitle]) => {\n          return (\n            <ListItem\n              isStatic\n              multiline\n              icon={icon}\n              iconClassName={styles.listItemIcon}\n            >\n              <span className=\"title\">{title}</span>\n              <span className=\"subtitle\">{subtitle}</span>\n            </ListItem>\n          );\n        })}\n      </div>\n      {withSeparator && <Separator className={styles.separator} />}\n      {footer}\n      {buttonText && (\n        <Button size=\"smaller\" onClick={onButtonClick || onClose}>{buttonText}</Button>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(TableAboutModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"KYHkJ9Qf\",\"title\":\"AwnUe4Qk\",\"value\":\"JGH6P9Az\",\"table\":\"DFRB0Ad4\",\"noFooter\":\"cSamlkt9\",\"cell\":\"Cnh5ENvm\",\"fullWidth\":\"UssCZwgy\",\"avatar\":\"SHQbPR5Y\",\"chatItem\":\"aS9U4hiQ\"};","import React, { memo, type TeactNode } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPeer } from '../../../api/types';\nimport type { CustomPeer } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Avatar from '../../common/Avatar';\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './TableInfoModal.module.scss';\n\ntype ChatItem = { chatId: string; withEmojiStatus?: boolean };\n\nexport type TableData = [TeactNode | undefined, TeactNode | ChatItem][];\n\ntype OwnProps = {\n  isOpen?: boolean;\n  title?: string;\n  tableData?: TableData;\n  headerAvatarPeer?: ApiPeer | CustomPeer;\n  header?: TeactNode;\n  modalHeader?: TeactNode;\n  footer?: TeactNode;\n  buttonText?: string;\n  className?: string;\n  hasBackdrop?: boolean;\n  onClose: NoneToVoidFunction;\n  onButtonClick?: NoneToVoidFunction;\n};\n\nconst TableInfoModal = ({\n  isOpen,\n  title,\n  tableData,\n  headerAvatarPeer,\n  header,\n  modalHeader,\n  footer,\n  buttonText,\n  className,\n  hasBackdrop,\n  onClose,\n  onButtonClick,\n}: OwnProps) => {\n  const { openChat } = getActions();\n  const handleOpenChat = useLastCallback((peerId: string) => {\n    openChat({ id: peerId });\n    onClose();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      hasCloseButton={Boolean(title)}\n      hasAbsoluteCloseButton={!title}\n      absoluteCloseButtonColor={hasBackdrop ? 'translucent-white' : undefined}\n      isSlim\n      header={modalHeader}\n      title={title}\n      className={className}\n      contentClassName={styles.content}\n      onClose={onClose}\n    >\n      {headerAvatarPeer && (\n        <Avatar peer={headerAvatarPeer} size=\"jumbo\" className={styles.avatar} />\n      )}\n      {header}\n      <div className={styles.table}>\n        {tableData?.map(([label, value]) => (\n          <>\n            {label && <div className={buildClassName(styles.cell, styles.title)}>{label}</div>}\n            <div className={buildClassName(styles.cell, styles.value, !label && styles.fullWidth)}>\n              {typeof value === 'object' && 'chatId' in value ? (\n                <PeerChip\n                  peerId={value.chatId}\n                  className={styles.chatItem}\n                  forceShowSelf\n                  withEmojiStatus={value.withEmojiStatus}\n                  clickArg={value.chatId}\n                  onClick={handleOpenChat}\n                />\n              ) : value}\n            </div>\n          </>\n        ))}\n      </div>\n      {footer}\n      {buttonText && (\n        <Button\n          className={!footer ? styles.noFooter : undefined}\n          size=\"smaller\"\n          onClick={onButtonClick || onClose}\n        >{buttonText}\n        </Button>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(TableInfoModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"options\":\"OnCj9kef\",\"option\":\"tpTHQAUF\",\"active\":\"U_9MXPG5\",\"wideOption\":\"dJcJl33b\",\"optionTop\":\"x9G4lqMf\",\"stackedStars\":\"etXLebjM\",\"stackedStar\":\"swttXv9P\",\"optionBottom\":\"tK7La7L2\",\"moreOptions\":\"AWXBaWLW\",\"iconDown\":\"zWYHZJmd\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n} from '../../../lib/teact/teact';\n\nimport type { ApiStarGiveawayOption, ApiStarTopupOption } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport { formatInteger } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport Button from '../../ui/Button';\n\nimport styles from './StarTopupOptionList.module.scss';\n\nconst MAX_STARS_COUNT = 6;\n\ntype OwnProps = {\n  isActive?: boolean;\n  options?: ApiStarTopupOption[] | ApiStarGiveawayOption[];\n  selectedStarOption?: ApiStarTopupOption | ApiStarGiveawayOption;\n  selectedStarCount?: number;\n  starsNeeded?: number;\n  className?: string;\n  onClick: (option: ApiStarTopupOption | ApiStarGiveawayOption) => void;\n};\n\nconst StarTopupOptionList: FC<OwnProps> = ({\n  isActive,\n  className,\n  options,\n  selectedStarOption,\n  selectedStarCount,\n  starsNeeded,\n  onClick,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [areOptionsExtended, markOptionsExtended, unmarkOptionsExtended] = useFlag();\n\n  useEffect(() => {\n    if (!isActive) {\n      unmarkOptionsExtended();\n    }\n  }, [isActive]);\n\n  const [renderingOptions, canExtend] = useMemo(() => {\n    if (!options) return [undefined, false];\n\n    const maxOption = options.reduce((max, option) => (\n      max.stars > option.stars ? max : option\n    ));\n    const forceShowAll = starsNeeded && maxOption.stars < starsNeeded;\n\n    const result: { option: ApiStarTopupOption | ApiStarGiveawayOption; starsCount: number; isWide: boolean }[] = [];\n    let currentStackedStarsCount = 0;\n    let canExtendOptions = false;\n    options.forEach((option, index) => {\n      if (!option.isExtended) currentStackedStarsCount++;\n\n      if (starsNeeded && !forceShowAll && option.stars < starsNeeded) return;\n      if (!areOptionsExtended && option.isExtended) {\n        canExtendOptions = true;\n        return;\n      }\n      result.push({\n        option,\n        starsCount: Math.min(currentStackedStarsCount, MAX_STARS_COUNT),\n        isWide: index === options.length - 1,\n      });\n    });\n\n    return [result, canExtendOptions];\n  }, [areOptionsExtended, options, starsNeeded]);\n\n  return (\n    <div className={buildClassName(styles.options, className)}>\n      {renderingOptions?.map(({ option, starsCount, isWide }) => {\n        const length = renderingOptions?.length;\n        const isOdd = length % 2 === 0;\n        const isActiveOption = option === selectedStarOption;\n\n        let perUserStarCount;\n        if (option && 'winners' in option) {\n          const winner = option.winners.find((opt) => opt.users === selectedStarCount)\n            || option.winners.reduce((max, opt) => (opt.users > max.users ? opt : max), option.winners[0]);\n          perUserStarCount = winner?.perUserStars;\n        }\n\n        return (\n          <div\n            className={buildClassName(\n              styles.option, (!isOdd && isWide) && styles.wideOption, isActiveOption && styles.active,\n            )}\n            key={option.stars}\n            onClick={() => onClick?.(option)}\n          >\n            <div className={styles.optionTop}>\n              +{formatInteger(option.stars)}\n              <div className={styles.stackedStars} dir={lang.isRtl ? 'ltr' : 'rtl'}>\n                {Array.from({ length: starsCount }).map(() => (\n                  <StarIcon className={styles.stackedStar} type=\"gold\" size=\"big\" />\n                ))}\n              </div>\n            </div>\n            <div className={styles.optionBottom}>\n              {formatCurrency(lang, option.amount, option.currency)}\n            </div>\n            {(isActiveOption || (selectedStarOption && 'winners' in selectedStarOption)) && perUserStarCount && (\n              <div className={styles.optionBottom}>\n                <div className={styles.perUserStars}>\n                  {renderText(oldLang('BoostGift.Stars.PerUser', formatInteger(perUserStarCount)))}\n                </div>\n              </div>\n            )}\n          </div>\n        );\n      })}\n      {!areOptionsExtended && canExtend && (\n        <Button className={styles.moreOptions} isText noForcedUpperCase onClick={markOptionsExtended}>\n          {oldLang('Stars.Purchase.ShowMore')}\n          <Icon className={styles.iconDown} name=\"down\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StarTopupOptionList);\n"],"names":["getViewableMedia","params","type","media","mediaIndex","isSingle","length","avatar","profilePhotos","photos","action","document","photo","video","webPage","paidMedia","getMessageContent","message","isDocumentPhoto","isDocumentVideo","webPagePhoto","webPageVideo","webPageDocument","isDocumentMedia","undefined","extendedMedia","extendedPhoto","extendedVideo","isGif","createGhost","source","origin","ghost","createElement","classList","add","img","Image","draggable","oncontextmenu","stopEvent","src","HTMLVideoElement","poster","appendChild","MediaViewerOrigin","ProfileAvatar","SettingsAvatar","profileInfo","querySelector","cloneNode","getNodes","index","containerSelector","mediaSelector","Album","ScheduledAlbum","getMessageHtmlId","id","PreviewMedia","SharedMedia","SearchResult","MiddleHeaderAvatar","ChannelAvatar","SuggestedAvatar","StarsTransaction","SponsoredMessage","MESSAGE_CONTENT_SELECTOR","ScheduledInline","Inline","container","mediaEls","querySelectorAll","mediaEl","applyShape","firstChild","style","objectFit","signal","createSignal","setIsPictureInPicture","getSetPresentationMode","webkitSupportsPresentationMode","webkitSetPresentationMode","bind","exitPictureInPictureIfNeeded","pictureInPictureElement","exitPictureInPicture","err","DEBUG","console","log","cache","Map","FALLBACK_DIMENSIONS","AVATAR_FULL_DIMENSIONS","useMediaProps","isAvatar","delay","isPhotoAvatar","mediaType","isVideo","isVideoAvatar","isDocument","isRound","isPhoto","isFromSharedMedia","isFromSearch","getMediaOrAvatarHash","useMemo","isFull","getVideoProfilePhotoMediaHash","getMediaHash","getProfilePhotoMediaHash","pictogramBlobUrl","useMedia","ApiMediaFormat","BlobUrl","previewMediaHash","previewBlobUrl","mediaData","fullMediaBlobUrl","loadProgress","useMediaWithLoadProgress","getMediaFormat","localBlobUrl","blobUrl","bestImageData","thumbDataUri","dataUri","blurredRef","useRef","isChanged","useSyncEffect","current","width","canvas","imgToCanvas","fastBlur","getContext","height","toDataURL","blurredAsync","isDisabled","get","timeoutRef","forceUpdate","useForceUpdate","clearTimeout","useEffect","onload","blurredDataUri","size","clear","set","window","setTimeout","useBlur","Boolean","useBlurSync","getMediaThumbUri","bestData","mediaSize","getMediaFileSize","isLocal","dimensions","VIDEO_AVATAR_FULL_DIMENSIONS","getPhotoFullDimensions","getVideoDimensions","memo","ReportAvatarModal","isOpen","peerId","onClose","onCloseAnimationEnd","reportProfilePhoto","getActions","selectedReason","setSelectedReason","useState","description","setDescription","handleReport","useLastCallback","chatId","reason","handleSelectReason","value","handleDescriptionChange","e","target","lang","useOldLang","REPORT_OPTIONS","label","title","React","Modal","onEnter","className","RadioGroup","name","options","onChange","selected","InputText","Button","color","isText","onClick","getZoomChange","setZoomChange","useZoomChange","useUnmountCleanup","DeleteProfilePhotoModal","profileId","onConfirm","deleteProfilePhoto","deleteChatPhoto","handleDeletePhoto","useCallback","isUserId","withGlobal","global","item","canUpdateMedia","tabState","selectTabState","mediaViewer","avatarOwner","avatarPhoto","chat","selectCurrentChat","currentMessageList","selectCurrentMessageList","threadId","isProtected","selectIsMessageProtected","activeDownloads","selectActiveDownloads","isChatProtected","selectIsChatProtected","canDelete","canDeleteMessage","selectAllowedMessageActionsSlow","isCurrentAvatar","avatarPhotoId","canDeleteAvatar","canUpdate","messageListType","MediaViewerActions","canReportAvatar","onReportAvatar","onReport","onCloseMediaViewer","onBeforeDelete","onForward","isDeleteModalOpen","openDeleteModal","closeDeleteModal","useFlag","isMobile","useAppLayout","downloadMedia","cancelMediaDownload","updateProfilePhoto","updateChatPhoto","openMediaViewer","openDeleteMessageModal","isMessage","fileName","getMediaFilename","isDownloading","getIsDownloading","downloadProgress","handleDownloadClick","originMessage","handleZoomOut","zoomChange","handleZoomIn","handleUpdate","isAvatarView","forceOnHeavyAnimation","MenuButton","onTrigger","round","ariaLabel","Icon","renderDeleteModal","openDeleteModalHandler","messageIds","isSchedule","menuItems","isForwardingAllowed","content","push","icon","children","Math","href","download","destructive","DropdownMenu","trigger","positionX","map","MenuItem","key","ProgressSpinner","progress","noCross","renderDownloadButton","useSignalRef","getValue","ref","useEffectOnce","subscribe","getControlsVisible","setControlsVisible","getIsLocked","setIsLocked","useControlsSignal","useDerivedSignal","getCurrentTime","setCurrentTime","useCurrentTimeSignal","MediaViewerFooter","text","buttonText","isForVideo","handleSponsoredClick","isForceMobileVersion","isMultiline","setIsMultiline","getIsVisible","isHidden","useDerivedState","IS_TOUCH_ENV","footerContent","checkIsMultiline","clientHeight","REM","handleResize","throttle","addEventListener","removeEventListener","onButtonClick","classNames","buildClassName","stopPropagation","dir","isRectangular","getIsVideoWaiting","setIsVideoWaiting","useVideoWaitingSignal","IS_MOBILE","IS_ANDROID","IS_IOS","PREVIEW_SIZE_RATIO","MAX_FRAMES","PREVIEW_MAX_SIDE","connections","launchMediaWorkers","videoPreview","VideoPreview","constructor","url","_defineProperty","this","forEach","connector","request","args","MAX_WORKERS","onFrame","time","frame","frames","currentTime","render","clearCache","close","requestMutation","drawImage","destroy","worker","async","messageId","data","result","callApi","mediaFormat","Progressive","arrayBuffer","postMessage","cancelAnimation","SeekLine","duration","bufferedRanges","isReady","posterSize","playbackRate","isActive","isPlaying","isPreviewDisabled","onSeek","onSeekStart","seekerRef","getCurrentTimeSignal","getIsWaiting","useThrottledSignal","getSelectedTime","setSelectedTime","useSignal","getPreviewOffset","setPreviewOffset","getPreviewTime","setPreviewTime","isLockedRef","isPreviewVisible","setPreviewVisible","isSeeking","setIsSeeking","previewCanvasRef","previewRef","progressRef","previewTimeRef","previewSize","ratio","getPreviewDimensions","setPreview","floor","renderVideoPreview","createVideoPreviews","remaining","animateNumber","from","to","onUpdate","useLayoutEffect","left","innerText","formatMediaDuration","seeker","seekerSize","getBoundingClientRect","offset","getPreviewProps","pageX","MouseEvent","touches","t","clamp","preview","clientWidth","stopAnimation","handleStopSeek","cleanup","captureEvents","onCapture","handleStartSeek","onRelease","onDrag","handleSeekMouseMove","handleSeekMouseLeave","ShowTransition","styles","start","end","PLAYBACK_RATES","VideoPlayerControls","bufferedProgress","fileSize","isFullscreenSupported","isFullscreen","isBuffered","volume","isMuted","onChangeFullscreen","onVolumeClick","onVolumeChange","onPlaybackRateChange","isPictureInPictureSupported","onPictureInPictureChange","onPlayPause","isPlaybackMenuOpen","openPlaybackMenu","closePlaybackMenu","trunc","getIsSeeking","setVisibility","isVisible","timeout","body","remove","handleSeek","position","handleSeekStart","volumeIcon","ripple","RangeSlider","bold","renderTime","formatFileSize","Menu","positionY","autoClose","rate","disabled","VideoPlayer","posterData","isMediaViewerOpen","noPlay","shouldCloseOnClick","isClickDisabled","isSponsoredMessage","timestamp","setMediaViewerVolume","setMediaViewerMuted","setMediaViewerPlaybackRate","setMediaViewerHidden","videoRef","setIsPlaying","setFullscreen","exitFullscreen","useFullscreen","isLooped","handleEnterFullscreen","IS_YA_BROWSER","handleLeaveFullscreen","enterPictureInPicture","isInPictureInPicture","elRef","onLeave","isSupported","setIsSupported","setIsActive","IS_PWA","setMode","pictureInPictureEnabled","disablePictureInPicture","autoPictureInPicture","onEnterInternal","onLeaveInternal","getIsVideoPlaying","requestPictureInPicture","safePlay","usePictureInPicture","toggleControls","lockControls","handleVideoMove","handleVideoLeave","bounds","clientX","right","clientY","top","bottom","bufferingHandlers","useBuffering","isUnsupported","useUnsupportedMedia","shouldRender","shouldRenderSpinner","transitionClassNames","spinnerClassNames","useShowTransitionDeprecated","shouldRenderPlayButton","playButtonClassNames","pause","togglePlayState","handleClick","useVideoCleanup","handleTimeUpdate","currentTarget","readyState","handleEnded","handleFullscreenChange","handleVolumeChange","newVolume","handleVolumeMuted","muted","handlePlaybackRateChange","newPlaybackRate","rewind","newTime","Number","isFinite","handleKeyDown","preventDefault","wrapperStyle","videoStyle","shouldToggleControls","onMouseMove","onMouseOut","onContextMenu","onDoubleClick","_extends","autoPlay","controlsList","playsInline","loop","onWaiting","onPlay","onEnded","onPause","onTimeUpdate","join","sponsoredMessage","textMessage","maxTimestamp","selectMessageTimestampableDuration","MediaViewerContent","withAnimation","isMoving","onFooterClick","updateLastPlaybackTimestamp","toggleControlsOnMove","updatePlaybackTimestamp","useThrottledCallback","MEDIA_TIMESTAMP_SAVE_MINIMUM_DURATION","isInAlbum","newTimestamp","PLAYBACK_SAVE_INTERVAL","useSignalEffect","calculateMediaViewerDimensions","ARE_WEBCODECS_SUPPORTED","renderPhoto","textParts","renderMessageText","forcePlayback","isForMediaViewer","hasFooter","shouldForceMobileVersion","imageSize","canDrag","Spinner","alt","easeOutCubic","easeOutQuart","timingFunctions","SLIDES_GAP","ANIMATION_DURATION","cancelZoomAnimation","SwipeDirection","MediaViewerSlides","isLoadingMoreMedia","isSynced","loadMoreItemsIfNeeded","getNextItem","selectItem","containerRef","activeSlideRef","leftSlideRef","rightSlideRef","lastTransformRef","x","y","scale","swipeDirectionRef","initialContentRectRef","isReleasedRef","prevZoomChangeRef","useFullscreenStatus","isMouseDown","setIsMouseDown","getTransform","setTransform","transformRef","getActiveItem","setActiveItem","activeItemRef","isScaled","activeItem","windowHeight","windowWidth","isResizing","useWindowSize","useHistoryBack","onBack","shouldBeReplaced","selectItemDebounced","useDebouncedCallback","clearSwipeDirectionDebounced","setIsActiveDebounced","shouldCloseOnVideo","clickXThreshold","handleControlsVisibility","isFooter","pageY","useTimeout","transform","getTransformStyle","lastTransform","lastDragOffset","lastZoomCenter","panDelta","lastGestureTime","Date","now","setLastGestureTime","debounce","changeSlide","direction","cActiveItem","nextItem","timing","changeSlideOnClick","closest","calculateOffsetBoundaries","offsetTop","initialContentRect","inBoundsX","inBoundsY","centerX","centerY","minOffsetX","max","maxOffsetX","isBetween","minOffsetY","maxOffsetY","absX","abs","absY","s1","min","scaleFactor","x1","y1","k","Vx","Vy","dirX","isNotPassive","withNativeDrag","excludedClosestSelector","minZoom","maxZoom","doubleTapZoom","withWheelDrag","checkIfControlTarget","event","captureEvent","dragOffsetX","dragOffsetY","cancelDrag","IOS_SCREEN_EDGE_THRESHOLD","absOffsetX","absOffsetY","Vertical","Horizontal","SWIPE_DIRECTION_THRESHOLD","SWIPE_DIRECTION_TOLERANCE","limit","SWIPE_X_THRESHOLD","SWIPE_Y_THRESHOLD","includes","onZoom","zoom","zoomFactor","initialCenterX","initialCenterY","currentCenterX","currentCenterY","MIN_ZOOM","MAX_ZOOM","offsetX","offsetY","scaledCenterX","scaledCenterY","scaleOffsetX","scaleOffsetY","isInThreshold","hasNextSlide","checkIfInsideSelector","hasZoomChanged","steps","prevValue","delta","wheelEvent","WheelEvent","deltaY","ctrlKey","dispatchEvent","prevItem","hasPrev","hasNext","isRtl","toFixed","element","selector","matches","messageSender","selectSender","owner","SenderInfo","closeMediaViewer","focusMessage","toggleChatInfo","handleFocusMessage","force","forceSyncOnIOs","subtitle","isFallbackAvatar","fallbackPhoto","isPersonalAvatar","personalPhoto","date","formattedDate","formatMediaDateTime","count","currentIndex","countText","parts","isChannel","isChatChannel","isGroup","isChatGroup","senderTitle","getPeerTitle","Avatar","peer","renderText","shouldSkipHistoryAnimations","withDynamicLoading","standaloneMedia","selectPerformanceSettingsValue","currentUserId","isChatWithSelf","selectIsChatWithSelf","selectPeer","isChatAdmin","selectPeerPhotos","isLoading","chatMessages","selectScheduledMessage","selectChatMessage","selectSponsoredMessage","selectChatScheduledMessages","selectChatMessages","isOriginInline","isOriginAlbum","collectedMessageIds","currentSearch","selectCurrentChatMediaSearch","foundIds","currentSegment","selectCurrentSharedMediaSearch","resultsByType","selectOutlyingListByMessageId","selectListedIds","MediaViewer","openForwardMenu","searchChatMediaMessages","loadMoreProfilePhotos","clickSponsored","openUrl","animationKey","senderId","prevSenderId","usePreviousDeprecated","headerAnimation","isGhostAnimation","isReportAvatarModalOpen","openReportAvatarModal","closeReportAvatarModal","currentItem","getMediaViewerItem","info","messageMediaIds","getChatMediaMessageIds","getIsPictureInPicture","disableDirectTextInput","stopPriorityPlayback","dispatchPriorityPlaybackEvent","enableDirectTextInput","toggle","headerRef","useElectronDrag","mql","matchMedia","MEDIA_VIEWER_MEDIA_QUERY","prevMessage","prevIsHidden","prevOrigin","prevBestImageData","shouldAnimateOpening","beginHeavyAnimation","ANIMATION_END_DELAY","fromImage","windowSize","availableWidth","availableHeight","getMediaViewerAvailableDimensions","toWidth","toHeight","calculateDimensions","toLeft","toTop","topOffsetRem","getTopOffset","fromTop","fromLeft","fromWidth","fromHeight","uncovered","realWidth","realHeight","srcWidth","srcHeight","uncover","fromTranslateX","fromTranslateY","fromScaleX","fromScaleY","applyStyles","clearShape","contains","removeChild","animateOpening","toImage","getElementById","targetTop","isElementInViewport","shouldFadeOut","imageEl","messageListElement","getOffsetToContainer","scrollTop","offsetHeight","isMessageImageFullyVisible","existingGhost","getElementsByClassName","transition","transformOrigin","opacity","animateClosing","handleClose","handleFooterClick","HTMLElement","isFromMedia","isMedia","randomId","handleForward","fromChatId","captureEscKeyListener","stopCurrentAudio","currentMediaMessageId","fromMedia","fromMediaIndex","nextIndex","fromAvatarOwner","fromProfilePhotos","fromSponsoredMessage","fromSponsoredMessageIndex","fromMessage","getMessagePaidMedia","indexOf","nextMessageId","nextMessage","openMediaViewerItem","itemChatId","itemMessageId","itemStandaloneMedia","handleBeforeDelete","prevMedia","shouldAnimateFirstRender","noCloseTransition","Transition","activeKey","avatarOwnerId","OFFSET_BOTTOM","MOBILE_OFFSET","hasBlur","isGhost2","ctx","alpha","IS_CANVAS_FILTER_SUPPORTED","filter","RADIUS","userId","getPeerStoryHtmlId","StoryViewerOrigin","StoryRibbon","storyRibbonStyles","root","ChatList","BASE_SCREEN_WIDTH","BASE_SCREEN_HEIGHT","BASE_ACTIVE_SLIDE_WIDTH","BASE_ACTIVE_SLIDE_HEIGHT","BASE_SLIDE_WIDTH","BASE_SLIDE_HEIGHT","calculateOffsetX","slideAmount","isActiveSlideSize","isMoveThroughActiveSlide","isBackward","mainOffset","additionalOffset","totalOffset","roundToNearestEven","useSlideSizes","baseWidth","baseHeight","newWidth","newHeight","widthScale","heightScale","calculateScale","activeSlideWidth","slideWidth","activeSlide","slide","toActiveScale","fromActiveScale","calculateSlideSizes","useStoryProps","story","isCurrentUserPremium","isDropdownMenuOpen","isLoadedStory","isDeletedStory","hasText","hasMessageText","hasForwardInfo","forwardInfo","thumbnail","previewHash","getStoryMediaHash","noSound","fullMediaHash","fullMediaData","altMediaHash","altMediaData","hasFullData","hasThumb","canDownload","noForwards","downloadHash","downloadMediaData","storyViewer","isStealthModalOpen","stealthMode","stories","selectIsCurrentUserPremium","StealthModeModal","toggleStealthModal","activateStealthMode","showNotification","openPremiumModal","isOnCooldown","setIsOnCooldown","serverTime","getServerTime","cooldownUntil","handleTimerEnds","handleActivate","initialSection","contentClassName","isSlim","ListItem","multiline","inactive","leftElement","isShiny","withPremiumGradient","TextTimer","langKey","endsAt","onEnd","deleteStory","openNextStory","handleDeleteStoryClick","storyId","ConfirmDialog","confirmLabel","confirmHandler","confirmIsDestructive","contactListIds","selectedIds","lockedIds","onSelect","searchQuery","setSearchQuery","displayedIds","contactIds","unique","filterPeersByQuery","ids","query","PeerPicker","itemIds","MEMO_EMPTY_ARRAY","lockedSelectedIds","filterValue","filterPlaceholder","searchInputId","isSearchable","withDefaultPadding","forceShowSelf","onSelectedIdsChange","onFilterChange","allowMultiple","withStatus","itemInputType","usersById","saveCloseFriends","isSubmitShown","setIsSubmitShown","newSelectedContactIds","setNewSelectedContactIds","closeFriendIds","isCloseFriend","useEffectWithPrevDeps","prevIsActive","handleSelectedContactIdsChange","handleSubmit","userIds","Fragment","FloatingActionButton","isShown","OPTIONS","actions","Screens","selectPeerStory","visibility","contactList","users","byId","editStoryPrivacy","toggleStoryInProfile","isOpenModal","openModal","closeModal","privacy","setPrivacy","isPinned","setIsPinned","isInProfile","setActiveKey","editingBlockingCategory","setEditingBlockingCategory","isBackButton","allowList","allowUserIds","selectedBlockedIds","blockUserIds","handleAllowUserIdsChange","newIds","handleDenyUserIdsChange","handleCloseButtonClick","handleIsPinnedToggle","renderContent","storyLifeTime","getHours","expireDate","section","list","option","checked","input","handleVisibilityChange","newVisibility","teactExperimentControlled","optionContent","option_name","tabIndex","role","closeFriends","denyList","handleActionClick","actionInner","getUserFullName","Switcher","footer","submit","renderPrivacyList","CloseFriends","AllowDenyList","modal","noBackdrop","header","closeButton","headerTitle","renderHeaderContent","slideClassName","sender","fromPeerId","EmbeddedStoryForward","openStoryViewer","loadPeerStoriesByIds","openChat","storyIds","fromName","openOriginalStory","isDeleted","isSingleStory","handleMouseDown","useFastClick","PeerColorWrapper","getPeerColorClass","onMouseDown","backgroundEmojiId","EmojiIconBackground","emojiDocumentId","renderTextWithEntities","renderTextContent","renderSender","isExpanded","onExpand","onFold","contentRef","textRef","showMoreButtonRef","renderingStory","useCurrentOrPrev","caption","hasOverflow","setHasOverflow","prevIsExpanded","usePrevDuringAnimation","isInExpandedState","addExtraClass","removeExtraClass","canExpand","shouldRenderShowMore","requestMeasure","button","offsetWidth","setProperty","requestForcedReflow","textContainer","textOffsetTop","lineHeight","totalLines","calcTextLineHeightAndCount","isOverflowing","overflowShift","scrollTo","fullClassName","MessageText","messageOrStory","withTranslucentThumbs","StoryFooter","openStoryViewModal","sendStoryReaction","views","isOut","sentReaction","viewsCount","forwardsCount","reactionsCount","isSentStoryReactionHeart","isSameReaction","HEART_REACTION","canForward","isPublic","containerId","getStoryKey","recentViewers","getGlobal","recentViewerIds","handleOpenStoryViewModal","handleForwardClick","handleLikeStory","reaction","AvatarList","peers","nonInteractive","ReactionAnimatedEmoji","getReactionKey","withEffectOnly","isViewed","isPaused","onImageComplete","handleAnimationEnd","animationName","onAnimationEnd","VIDEO_MIN_READY_STATE","IS_SAFARI","appConfig","user","selectUser","selectChat","userFullInfo","selectUserFullInfo","viewModal","isPrivacyModalOpen","storyList","forwardMessages","forwardedStoryId","premiumModal","safeLinkModalUrl","mapModal","reportModal","giftInfoModal","isPaymentMessageConfirmDialogOpen","isPremiumModalOpen","shouldForcePause","reactionPicker","mediaAreas","forwardSenderId","find","area","channelId","forwardSender","withHeaderAnimation","fromPeer","fromId","paidMessagesStars","selectPeerPaidMessagesStars","isAccountFrozen","selectIsCurrentUserFrozen","orderedIds","storyIdsByPeerId","storyChangelogUserId","viewersExpirePeriod","storyExpirePeriod","storyViewersExpirePeriod","isChatExist","arePeerSettingsLoaded","settings","isArchivedStories","isPrivateStories","getIsAnimating","onDelete","viewStory","setStoryViewerMuted","openPreviousStory","loadPeerSkippedStories","copyStoryLink","openStoryPrivacyEditor","loadPeerSettings","fetchChat","loadStoryViews","oldLang","useLang","isComposerHasFocus","markComposerHasFocus","unmarkComposerHasFocus","isStoryPlaybackRequested","playStory","pauseStory","isStoryPlaying","markStoryPlaying","unmarkStoryPlaying","isAppFocused","markAppFocused","unmarkAppFocused","isCaptionExpanded","expandCaption","foldCaption","isPausedBySpacebar","setIsPausedBySpacebar","isPausedByLongPress","markIsPausedByLongPress","unmarkIsPausedByLongPress","markDropdownMenuOpen","unmarkDropdownMenuOpen","isChangelog","isUserStory","isChatStory","isChannelStory","canPinToProfile","canUnpinFromProfile","areViewsExpired","forwardSenderTitle","canCopyLink","usernames","canShare","canPlayStory","shouldShowComposer","shouldShowFooter","shouldRenderSkeleton","skeletonTransitionClassNames","mediaTransitionClassNames","thumbRef","useCanvasBlur","previewTransitionClassNames","useMediaTransitionDeprecated","shouldRenderComposer","composerAppearanceAnimationClassNames","shouldRenderCaptionBackdrop","captionBackdropTransitionClassNames","appearanceAnimationClassNames","shouldRenderCaption","captionAppearanceAnimationClassNames","isStreamingSupported","useStreaming","PRIMARY_VIDEO_MIME","useStoryPreloader","canWrite","handlePauseStory","handlePlayStory","handleLongPressStart","handleLongPressEnd","handleDropdownMenuOpen","handleDropdownMenuClose","handleLongPressMouseDown","onMouseUp","handleLongPressMouseUp","onMouseLeave","handleLongPressMouseLeave","onTouchStart","handleLongPressTouchStart","onTouchEnd","handleLongPressTouchEnd","useLongPress","onStart","hasAllData","useBackgroundMode","load","keyCode","prevIsComposerHasFocus","prevIsCaptionExpanded","prevShouldForcePause","prevIsAppFocused","prevIsPausedByLongPress","handleOpenChat","handleForwardPeerClick","handleFromPeerClick","handleOpenPrevStory","handleOpenNextStory","handleVideoStoryTimeUpdate","captureKeyboardListeners","onRight","onLeft","handleCopyStoryLink","handlePinClick","handleUnpinClick","handleReportStoryClick","handleInfoPrivacyEdit","handleInfoPrivacyClick","isForContacts","isForCloseFriends","myName","handleOpenStealthModal","activeUntil","diff","handleDownload","inputPlaceholder","amount","formatStarsAsIcon","asFont","withNodes","StoryProgress","formatRelativePastTime","isEdited","privacyIcon","gradient","renderStoryPrivacyButton","onOpen","Skeleton","OptimizedVideo","canPlay","isPriority","disableRemotePlayback","SECONDARY_VIDEO_MIME","MediaAreaOverlay","withStory","storyViewerMode","StoryCaption","Composer","MAIN_THREAD_ID","getIsMobile","editableInputCssSelector","EDITABLE_STORY_INPUT_CSS_SELECTOR","editableInputId","EDITABLE_STORY_INPUT_ID","inputId","onFocus","onBlur","lastViewedByPeerIds","lastViewedId","storyIdsForViewer","peerStories","lastReadId","hasUnreadStories","previewIndexId","isLoaded","imageHash","thumbUrl","currentPeerId","currentStoryId","isSinglePeer","isPrivate","isArchive","byPeerId","orderedPeerIds","active","peerIds","selectIsStoryViewerOpen","stopActiveReaction","renderingPeerId","setRenderingPeerId","renderingStoryId","setRenderingStoryId","prevPeerId","renderingIsArchive","renderingIsPrivate","renderingIsSinglePeer","renderingIsSingleStory","slideSizes","rendersRef","setIsAnimating","setRef","renderingPeerIds","slice","renderingPeerPosition","currentPeerPosition","calculateTransformX","reduce","transformX","getCurrentStoryRef","composer","focusEditableElement","disableScrolling","enableScrolling","Object","entries","String","handleTransitionEnd","Story","onTransitionEnd","buildStyle","renderStory","StoryPreview","renderStoryPreview","useScrolledState","threshold","isAtBeginning","setIsAtBeginning","isAtEnd","setIsAtEnd","handleScroll","scrollHeight","DEFAULT_REACTION_SIZE","storyView","availableReactions","reactions","StoryView","closeStoryViewer","unblockUser","blockUser","deleteContact","updateStoryView","closeStoryViewModal","contextActions","areStoriesBlocked","isUserBlocked","isContact","fullName","handler","isOnlyStories","statusIcon","shouldColorStatus","status","isModified","formatDateAtTime","opacityFadeIn","blocked","rightElement","ReactionStaticEmoji","viewReaction","withIconHeart","withPortalForMenu","menuBubbleClassName","menuBubble","PrivateChatInfo","withColoredStatus","noStatusOrTyping","GroupChatInfo","nextOffset","loadStoryViewList","clearStoryViews","areJustContacts","markJustContacts","unmarkJustContacts","areReactionsFirst","markReactionsFirst","unmarkReactionsFirst","setQuery","isExpired","shouldShowJustContacts","STORY_VIEWS_MIN_CONTACTS_FILTER","shouldShowSortByReactions","STORY_MIN_REACTIONS_SORT","shouldShowSearch","STORY_VIEWS_MIN_SEARCH","hasHeader","refetchViews","sortedViews","sort","a","b","reactionA","reactionB","prepareComparator","placeholderCount","notAllAvailable","handleLoadMore","MoreMenuButton","isMenuOpen","fluid","sortButton","topButton","faded","iconSort","iconDown","viewsList","contactFilter","check","SearchInput","search","topScrolled","onScroll","centeredInfo","InfiniteScroll","items","onLoadMore","view","additionalKeyId","Array","_","i","PlaceholderChatInfo","bottomInfo","closeStoryPrivacyEditor","reportStory","storyToDelete","setStoryToDelete","isPrevOpen","handleOpenDeleteModal","s","handleCloseDeleteModal","openMessageReport","thumb","safeAreaBottom","getComputedStyle","documentElement","getPropertyValue","parseFloat","toTranslateX","toTranslateY","toScaleX","toScaleY","ghost2","ghost2Top","StorySlides","StoryDeleteConfirmModal","StoryViewModal","StorySettings","TOPIC_ICON_SIZE","ITEM_CLASS_NAME","ChatOrUserPicker","chatOrUserIds","searchPlaceholder","loadMore","onSearchChange","onSelectChatOrUser","isLowStackPriority","loadTopics","topicContainerRef","searchRef","topicSearchRef","viewportIds","getMore","useInfiniteScroll","forumId","setForumId","topicSearch","setTopicSearch","viewportOffset","resetSearch","useInputFocusOnOpen","selectTopicsById","selectTopics","forumTopicsById","useSelector","topicIds","topics","chatsById","chats","chatFullInfoById","fullInfoById","searchTitle","toLowerCase","values","acc","topic","getCanPostInChat","keys","handleHeaderBackClick","handleSearchChange","handleTopicSearchChange","useKeyboardListNavigation","isForum","handleTopicKeyDown","renderChatItem","isSelf","isApiPeerChat","subtitleClassName","getGroupStatus","userStatus","selectUserStatus","getUserStatus","isUserOnline","getSubtitle","PickerItem","FullNameTitle","isSavedMessages","avatarElement","PEER_PICKER_ITEM_HEIGHT_PX","onKeyDown","placeholder","withAbsolutePositioning","maxHeight","Loading","topicId","TopicIcon","letterClassName","itemSelector","listIds","orderedPinnedIds","activeListIds","archivedListIds","archived","pinnedIds","RecipientPicker","API_CHAT_TYPES","onSelectRecipient","setSearch","priorityIds","isDeletedUser","chatFullInfo","selectChatFullInfo","sorted","sortChatIds","filterChatIdsByType","renderingIds","isForwarding","isManyMessages","isStory","ForwardRecipientPicker","openChatOrTopicWithReplyInDraft","setForwardChatOrTopic","exitForwardMode","forwardToSavedMessages","forwardStory","renderingIsStory","markIsShown","unmarkIsShown","handleSelectRecipient","recipientId","toChatId","getUserFirstOrLastName","getChatTitle","DraftRecipientPicker","requestedDraft","openChatWithDraft","resetOpenChatWithDraft","files","AttachBotRecipientPicker","requestedAttachBotInChat","cancelAttachBotInChat","callAttachBot","bot","startParam","handlePeerRecipient","getErrorHeader","error","isSlowMode","hasErrorKey","dialogs","Dialogs","dismissDialog","sendMessage","isModalOpen","dialog","contactRequest","handleConfirm","contact","messageList","getReadableErrorText","pick","Notifications","notifications","notification","Notification","localId","SafeLinkModal","toggleSafeLinkModal","handleOpen","open","ensureProtocol","handleDismiss","renderingUrl","withMarkdown","OpenMapModal","closeMapModal","point","geoPoint","googleUrl","bingUrl","appleUrl","osmUrl","google","prepareMapUrl","bing","osm","handleGoogleClick","handleBingClick","handleAppleClick","handleOsmClick","IS_MAC_OS","currentUser","UrlAuthModal","closeUrlAuthModal","acceptBotUrlAuth","acceptLinkUrlAuth","isLoginChecked","setLoginChecked","isWriteAccessChecked","setWriteAccessChecked","currentAuth","domain","botId","shouldRequestWriteAccess","isWriteAllowed","handleLoginChecked","Checkbox","onCheck","MAX_SAFE_DATE","MAX_INT_32","WEEKDAY_LETTERS","isDisabledDay","year","month","day","minDate","maxDate","selectedDay","fixedMinDate","getDayStart","fixedMaxDate","formatInputTime","padStart","formatDay","CalendarModal","selectedAt","minAt","maxAt","isFutureMode","isPastMode","withTimePicker","submitButtonLabel","secondButtonLabel","onSubmit","onSecondButtonClick","passedSelectedDate","prevIsOpen","isTimeInputFocused","markTimeInputAsFocused","selectedDate","setSelectedDate","currentMonthAndYear","setCurrentMonthAndYear","getFullYear","getMonth","selectedHours","setSelectedHours","selectedMinutes","setSelectedMinutes","getMinutes","getDate","currentYear","currentMonth","getTime","newSelectedDate","shouldDisableNextMonth","shouldDisablePrevMonth","prevMonthGrid","currentMonthGrid","nextMonthGrid","setDate","setMonth","setFullYear","firstDay","getDay","totalDaysInPrevMonth","gridDate","lastRowDaysCount","buildCalendarGrid","submitLabel","formatDateToString","code","formatTime","formatSubmitLabel","handleChangeHours","replace","hours","setHours","hoursStr","handleChangeMinutes","minutes","setMinutes","minutesStr","d","dateCopy","handleDateSelect","inputMode","historyCalendarSelectedAt","HistoryCalendar","searchMessagesByDate","closeHistoryCalendar","handleJumpToDate","phoneCodeList","countryList","phoneCodes","NewContactModal","isByPhoneNumber","updateContact","importContact","closeNewContactDialog","renderingUser","renderingIsByPhoneNumber","inputRef","firstName","setFirstName","lastName","setLastName","phone","setPhone","phoneNumber","shouldSharePhoneNumber","setShouldSharePhoneNumber","canBeSubmitted","focus","handleFirstNameChange","handlePhoneChange","formatPhoneNumberWithCode","handleLastNameChange","ResizeHandleType","resizeHandleSelectorsMap","Top","Bottom","Left","Right","topLeft","TopLeft","topRight","TopRight","bottomLeft","BottomLeft","bottomRight","BottomRight","resizeHandleSelectors","resizeTimeout","FULLSCREEN_POSITION","webApps","selectActiveWebApp","modalState","openedWebApps","isMinimizedState","activeTabBot","MinimizedWebAppModal","changeWebAppModalState","closeWebAppModal","openedWebAppsValues","openedTabsCount","activeTabBotId","app","handleCloseClick","handleExpandClick","state","activeTabName","botName","pluralValue","renderTitle","isPopularApp","requestMainWebView","theme","extractCurrentThemeParams","activeUserCount","botActiveUsers","badgeText","formatIntegerCompact","PeerBadge","avatarContainer","textClassName","badgeClassName","userCountBadge","badgeIconClassName","userBadgeIcon","badgeIcon","runThrottled","cb","globalSearch","popularBotApps","fetchingStatus","botApps","recentBotIds","topBotApps","MoreAppsTabContent","shouldShowMoreMine","setShouldShowMoreMine","searchPopularBotApps","handleToggleShowMoreMine","prev","filteredFoundIds","LoadMoreDirection","Backwards","handleSearchInputReset","noFastList","preloadBackwards","onReset","sectionTitle","showMoreLink","sectionContent","WebAppGridItem","FULLSCREEN_BUTTONS_AREA_HEIGHT","MAIN_BUTTON_ANIMATION_TIME","SANDBOX_ATTRIBUTES","DEFAULT_BUTTON_TEXT","ok","cancel","activeWebApp","activeWebAppKey","selectWebApp","activeBotId","attachBot","attachMenu","bots","botAppSettings","botInfo","appSettings","selectTheme","isPaymentModalOpen","regularPaymentStatus","payment","starsPaymentStatus","inputInvoice","starsInputInvoice","starsPayment","botAppPermissions","selectBotAppPermissions","paymentStatus","WebAppModalTabContent","webApp","registerSendEventCallback","registerReloadFrameCallback","isTransforming","isMultiTabSupported","onContextMenuButtonClick","modalHeight","closeActiveWebApp","sendWebViewData","toggleAttachBot","openTelegramLink","setWebAppPaymentSlug","switchBotInline","sharePhoneWithBot","updateWebApp","resetPaymentStatus","openChatWithInfo","openEmojiStatusAccessModal","openLocationAccessModal","openPreparedInlineMessageModal","mainButton","setMainButton","secondaryButton","setSecondaryButton","markLoaded","markUnloaded","popupParameters","setPopupParameters","isRequestingPhone","setIsRequestingPhone","isRequestingWriteAccess","setIsRequestingWriteAccess","requestedFileDownload","setRequestedFileDownload","bottomBarColor","setBottomBarColor","unlockPopupsAt","handlePopupOpened","handlePopupClosed","sequentialLimit","resetAfter","setUnlockPopupsAt","sequentialCalls","lastClosedDate","usePopupLimit","headerButtonRef","headerButtonCaptionRef","exitFullScreenCallback","fullscreenElementRef","activeWebAppName","appName","isBackButtonVisible","placeholderPath","isCloseModalOpen","isRemoveModalOpen","webAppKey","getWebAppKey","isAvailable","IS_GEOLOCATION_SUPPORTED","isAccessRequested","geolocation","isAccessGranted","updateCurrentWebApp","updatedPartialWebApp","update","themeParams","secondary_bg_color","themeBackgroundColor","bg_color","backgroundColorFromEvent","setBackgroundColorFromEvent","backgroundColorFromSettings","backgroundColor","backgroundDarkColor","themeHeaderColor","headerColorFromEvent","setHeaderColorFromEvent","headerColorFromSettings","headerColor","headerDarkColor","frameRef","isSimple","reloadFrame","sendEvent","sendFullScreenChanged","sendViewport","sendSafeArea","sendTheme","useWebAppFrame","isSimpleView","onEvent","onLoad","openInvoice","closeWebApp","openSuggestedStatusModal","isReloadSupported","reloadTimeout","ignoreEventsRef","lastFrameSizeRef","handleLoad","contentWindow","JSON","stringify","eventType","eventData","is_fullscreen","forceReloadFrame","once","isNonStable","is_expanded","is_state_stable","theme_params","sendCustomStyle","handleMessage","parse","skipClosingConfirmation","scrollbarColor","reload_supported","req_id","slug","linkUrl","available","custom_emoji_id","BigInt","customEmojiId","plannedEvents","getIsWebAppsFullscreenSupported","exitIfFullscreenCallback","TME_LINK_PREFIX","path_full","shouldIgnoreCache","force_request","is_visible","isSettingsButtonVisible","validateHexColor","color_key","textColor","text_color","trim","is_active","isProgressVisible","is_progress_visible","shouldConfirmClosing","buttons","handleAppPopupClose","chat_types","convertToApiChatType","isSamePeer","handleRejectPhone","handleRejectWriteAccess","handleRequestWriteAccess","method","requestId","parameters","customMethod","handleInvokeCustomMethod","handleRejectFileDownload","fileUrl","handleCheckDownloadFile","file_name","access_requested","access_granted","geolocationData","getGeolocationStatus","accessRequested","accessGranted","latitude","longitude","altitude","course","heading","speed","horizontal_accuracy","accuracy","vertical_accuracy","altitudeAccuracy","handleRequestLocation","isMainButtonVisible","isSecondaryButtonVisible","handleHideCloseModal","handleConfirmCloseModal","handleHideRemoveModal","handleMainButtonClick","handleSecondaryButtonClick","buttonId","button_id","handleAppPopupModalClose","sendThemeCallback","setFullscreenCallback","checkIfFullscreen","sendFullScreenChangedCallback","visibilityChangedCallBack","prevModalState","prevIsPaymentModalOpen","handleRemoveAttachBot","isEnabled","handleAcceptPhone","shouldCloseActive","handleAcceptWriteAccess","handleDownloadFile","mainButtonCurrentColor","mainButtonCurrentTextColor","mainButtonCurrentIsActive","mainButtonCurrentText","secondaryButtonCurrentPosition","secondaryButtonCurrentColor","secondaryButtonCurrentTextColor","secondaryButtonCurrentIsActive","secondaryButtonCurrentText","shouldDecreaseWebFrameSize","setShouldDecreaseWebFrameSize","shouldHideMainButton","setShouldHideMainButton","shouldHideSecondaryButton","setShouldHideSecondaryButton","shouldShowMainButton","setShouldShowMainButton","shouldShowSecondaryButton","setShouldShowSecondaryButton","shouldShowAppNameInFullscreen","setShouldShowAppNameInFullscreen","backButtonTextWidth","setBackButtonTextWidth","isVerticalLayout","rowsCount","hideDirection","mainButtonChangeTimeout","mainButtonFastTimeout","secondaryButtonChangeTimeout","secondaryButtonFastTimeout","appNameDisplayTimeout","frameStyle","handleBackClick","handleCollapseClick","handleShowContextMenu","backIconClass","backButtonCaption","hasHeaderElement","viewBox","renderDefaultPlaceholder","sandbox","allow","allowFullScreen","hasCloseButton","filename","MINIMIZED_STATE_SIZE","DEFAULT_MAXIMIZED_STATE_SIZE","MAXIMIZED_STATE_MINIMUM_SIZE","miniAppsCachedPosition","miniAppsCachedSize","selectSharedSettings","cachedPosition","cachedSize","WebAppModal","prolongWebView","openWebAppTab","openMoreAppsTab","closeMoreAppsTab","updateMiniAppCachedPosition","updateMiniAppCachedSize","getMaximizedStateSize","setMaximizedStateSize","getSize","openedOrderedKeys","sessionKeys","isMoreAppsTabActive","tabs","isMaximizedState","isFullScreen","supportMultiTabMode","menuRef","getTriggerElement","getRootElement","getMenuElement","isContextMenuOpen","contextMenuAnchor","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","isDraggingEnabled","setIsDraggingEnabled","headerElement","containerElement","isDragging","draggableStyle","dragHandleElementRef","isDragEnabled","originalSize","minimumSize","elementCurrentPosition","setElementCurrentPosition","elementCurrentSize","setElementCurrentSize","getElementPositionOnStartTransform","setElementPositionOnStartTransform","getElementSizeOnStartTransform","setElementSizeOnStartTransform","getTransformStartPoint","setTransformStartPoint","elementPositionOnStartTransform","transformStartPoint","dragHandleElement","isInitiated","setIsInitiated","wasElementShown","setWasElementShown","startDragging","stopDragging","startResizing","stopResizing","isWindowsResizing","startWindowResizing","stopWindowResizing","hitResizeHandle","setHitResizeHandle","getVisibleArea","innerWidth","innerHeight","updateCurrentPosition","getActualPosition","getCenteredPosition","visibleArea","centeredPosition","handleStartDrag","handleStartResize","targetElement","resizeHandle","RESIZE_HANDLE_SELECTOR","getResizeHandleFromTarget","handleDragRelease","handleResizeRelease","ensurePositionInVisibleArea","visibleAreaWidth","visibleAreaHeight","componentWidth","componentHeight","newX","newY","adjustPositionWithinBounds","newPosition","ensureSizeInVisibleArea","sizeForCheck","newSize","originalWidth","originalHeight","adjustSizeWithinBounds","handleWindowResize","handleDrag","sizeOnStartTransform","pageVisibleX","pageVisibleY","maxX","maxY","newBounds","cleanups","resizeHandler","cursorStyle","actualPosition","useDraggable","getMinimumSize","currentSize","currentWidth","currentHeight","queryId","openTabsCount","useInterval","replyInfo","sendEventCallback","reloadFrameCallback","callback","handleSettingsButtonClick","handleRefreshClick","handleModalClose","handleCloseMoreAppsTab","handleTabClose","handleToggleClick","handleFullscreenClick","handleOpenMoreAppsTabClick","handleTabClick","tab","openBotChat","renderMenuItems","isAttachBot","renderMoreMenu","anchor","backButtonClassName","headerTextVar","r","g","hexToRgb","luma","getColorLuma","renderTabCurveBorder","fill","buildResizeHandleClass","handleClassName","RESIZE_HANDLE_CLASS_NAME","useHorizontalScroll","dialogRef","dialogStyle","dialogContent","shortName","renderActiveTab","noBackdropClose","BotTrustModal","cancelBotTrustRequest","markBotTrusted","setIsWriteAllowed","handleBotTrustAccept","handleBotTrustDecline","AttachBotInstallModal","confirmAttachBotInstall","cancelAttachBotInstall","isTosAccepted","setIsTosAccepted","tosLabel","split","linkText","MINI_APP_TOS_URL","rel","isConfirmDisabled","DeleteFolderDialog","folder","closeDeleteChatFolderModal","deleteChatFolder","openDeleteChatFolderModal","renderingFolder","isMyChatlist","hasMyInvites","handleDeleteFolderMessage","folderId","isConfirmedForChatlist","COLORS","PremiumFeatureItem","isFontIcon","newIndex","colorA","colorB","ceil","lerpRgb","buttonClassName","fontIcon","SliderDots","onSelectSlide","startFrom","isPreLastBatch","isLastBatch","isFirstBatch","isPreFirstBatch","shownDotsCount","handleGoForward","handleGoBack","isLast","isPreLast","isFirst","isPreFirst","isInvisible","PremiumLimitsCompare","leftValue","rightValue","floatingBadgeIcon","rightStyle","COLOR_START","COLOR_END","PremiumLimitPreview","colorStepProgress","lerp","AnimatedCircleSticker","realIndex","sticker","maxLength","mediaDataAround","isActivated","isAnimated","animate","inanimate","circleSize","angle","PI","cos","sin","AnimatedSticker","tgsUrl","play","isLowPriority","noLoop","stickers","premium","PremiumFeaturePreviewStickers","setOffset","setSize","renderedStickers","cycleRestrict","STORY_FEATURE_TITLES","stories_order","stories_stealth","stories_views","stories_timer","stories_save","stories_caption","stories_link","STORY_FEATURE_DESCRIPTIONS","STORY_FEATURE_ICONS","STORY_FEATURE_ORDER","CIRCLE_SIZE","AVATAR_SIZES","giant","PremiumFeaturePreviewVideo","circleRef","dpr","useDevicePixelRatio","drawGradientCircle","segmentsCount","readSegmentsCount","readSegmentColor","maxSize","forPremiumPromo","videoId","isReverseAnimation","isDown","videoThumbnail","thumbnailRef","wrapper","reverse","down","DeviceFrame","PREMIUM_FEATURE_TITLES","double_limits","infinite_reactions","premium_stickers","animated_emoji","no_ads","voice_to_text","profile_badge","faster_download","more_upload","advanced_chat_management","animated_userpics","emoji_status","translations","saved_tags","last_seen","message_privacy","effects","PREMIUM_FEATURE_DESCRIPTIONS","LIMITS_TITLES","channels","dialogFolderPinned","channelsPublic","savedGifs","stickersFaved","aboutLength","captionLength","dialogFilters","dialogFiltersChats","recommendedChannels","moreAccounts","LIMITS_DESCRIPTIONS","PremiumFeatureModal","promo","isPremium","limits","premiumPromoOrder","subscriptionOption","onClickSubscribe","scrollContainerRef","currentSlideIndex","setCurrentSlideIndex","PREMIUM_FEATURE_SECTIONS","reverseAnimationSlideIndex","setReverseAnimationSlideIndex","isScrolling","startScrolling","stopScrolling","isScrolledToTop","setIsScrolledToTop","isScrolledToBottom","setIsScrolledToBottom","prevInitialSection","filteredSections","subscriptionButtonText","months","currency","perMonthPrice","price","formatCurrency","handleLimitsScroll","scrollContainer","animateHorizontalScroll","then","handleSelectSlide","currentSection","hasHeaderBackdrop","scrollLeft","scrollLeftOriginal","reverseIndex","prevElement","reverseElement","toString","toggleExtraClass","PREMIUM_LIMITS_ORDER","defaultLimit","premiumLimit","PremiumFeaturePreviewStories","videoSections","videos","PREMIUM_BOTTOM_VIDEOS","PremiumSubscriptionOption","fullMonthlyAmount","isGiveaway","perMonth","isUserCountPlural","discount","handleChange","formatCurrencyAsString","STATUS_EMOJI_SIZE","PREMIUM_FEATURE_COLOR_ICONS","PremiumStatus","PremiumLimits","PremiumReactions","PremiumStickers","PremiumEmoji","PremiumAds","PremiumVoice","PremiumBadge","PremiumSpeed","PremiumFile","PremiumChats","PremiumVideo","PremiumTranslate","PremiumTags","PremiumLastSeen","PremiumMessagePrivacy","PremiumEffects","fromUser","fromUserId","fromUserStatusEmoji","emojiStatus","customEmojis","documentId","fromUserStatusSet","selectStickerSet","stickerSetInfo","isSuccess","isGift","monthsAmount","toUser","toUserId","limitChannels","selectPremiumLimit","limitFolders","limitPins","limitLinks","premiumSlug","premiumInvoiceSlug","premiumBotUsername","PremiumMainModal","closePremiumModal","requestConfetti","loadStickers","openStickerSet","isHeaderHidden","setHeaderHidden","setCurrentSection","selectedSubscriptionOption","setSubscriptionOption","handleOpenSection","handleResetSection","handleClickWithStartParam","handleChangeSubscriptionOption","foundOption","showConfetti","withStars","prevIsPremium","defaultOption","handleOpenStatusSet","monthOption","subscribeButtonText","CustomEmoji","isBig","PremiumLogo","template","first","second","emoji","thumbCustomEmojiId","link","getHeaderText","statusText","entities","statusEntities","renderFooterText","ItemPicker","notFoundText","noScrollRestore","isViewOnly","itemClassName","forceRenderAllItems","onDisabledClick","optionalProps","lockedSelectedValues","lockedUnselectedValues","timeoutId","selectedValues","selectedValue","lockedSelectedValuesSet","Set","lockedUnselectedValuesSet","sortedItemValuesList","lockedSelectedBucket","unlockedBucket","lockedUnselectableBucket","has","concat","handleItemClick","newSelectedValues","splice","onSelectedValuesChange","onSelectedValueChange","viewportValuesList","handleFilterChange","renderItem","itemOption","subLabel","isItemLoading","isAlwaysUnselected","isAlwaysSelected","isLocked","isChecked","inputElement","Radio","onlyInput","pickerList","padded","noResults","CountryPickerModal","selectionLimit","selectedCountryIds","setSelectedCountryIds","noPickerScrollRestore","country","iso2","defaultName","handleSelectedIdsChange","newSelectedIds","pickerSelector","pickerTitle","main","picker","GiveawayChannelPickerModal","giveawayChatId","initialSelectedIds","onSelectedIdsConfirmed","pendingChannelId","setPendingChannelId","isConfirmModalOpen","openConfirmModal","closeConfirmModal","setSelectedIds","channelIds","isChatSuperGroup","displayedChannelIds","foundChannelIds","handleSelectedChannelIdsChange","privateLinkChannelId","isChatPublic","confirmPrivateLinkChannelSelection","handleModalConfirm","PickerModal","shouldAdaptToSearch","withFixedHeight","confirmButtonText","GiveawayTypeOption","isLink","onClickAction","userNames","selectedMemberIds","displayText","members","adminMembersById","GiveawayUserPickerModal","memberIds","statusesById","adminIdsSet","sortUserIds","displayedMemberIds","filteredUserIds","isUserBot","handleSelectedMemberIdsChange","GIVEAWAY_IMG_LIST","GiftGreenRound","GiftBlueRound","GiftRedRound","giveawayModal","gifts","selectedMemberList","selectedChannelList","selectedChannelIds","giveawayBoostPerPremiumLimit","giveawayBoostsPerPremium","isStarsGiftEnabled","userSelectionLimit","giveawayAddPeersMax","countrySelectionLimit","giveawayCountriesMax","general","prepaidGiveaway","starsGiftOptions","starOptions","GiveawayModal","GIVEAWAY_BOOST_PER_PREMIUM","GIVEAWAY_MAX_ADDITIONAL_COUNTRIES","GIVEAWAY_MAX_ADDITIONAL_USERS","closeGiveawayModal","launchPrepaidGiveaway","launchPrepaidStarsGiveaway","isCalendarOpened","openCalendar","closeCalendar","isCountryPickerModalOpen","openCountryPickerModal","closeCountryPickerModal","isUserPickerModalOpen","openUserPickerModal","closeUserPickerModal","isChannelPickerModalOpen","openChannelPickerModal","closeChannelPickerModal","TYPE_OPTIONS","GiftStar","customExpireDate","setCustomExpireDate","selectedRandomUserCount","setSelectedRandomUserCount","selectedGiveawayOption","setGiveawayOption","selectedStarOption","setSelectedStarOption","selectedSubscriberOption","setSelectedSubscriberOption","selectedMonthOption","setSelectedMonthOption","selectedUserIds","setSelectedUserIds","setSelectedChannelIds","shouldShowWinners","setShouldShowWinners","shouldShowPrizes","setShouldShowPrizes","prizeDescription","setPrizeDescription","dataPrepaidGiveaway","setDataPrepaidGiveaway","dataStarsPrepaidGiveaway","setDataStarsPrepaidGiveaway","isPremiumGiveaway","isStarsGiveaway","selectedUserCount","boostQuantity","boostStarsQuantity","yearlyBoosts","SUBSCRIBER_OPTIONS","monthQuantity","isStarsPrepaidGiveaway","isPremiumPrepaidGiveaway","selectedGift","gift","selectedStarsGift","stars","filteredGifts","STARS_CURRENCY_CODE","basicGift","userCountOptions","winner","winnerCountOptions","winners","quantity","handlePremiumClick","boostChannelId","additionalChannelIds","isOnlyForNewSubscribers","countries","areWinnersVisible","untilDate","confirmLaunchPrepaidGiveaway","giveawayId","paymentPurpose","handleRandomUserCountChange","newValue","handleWinnerCountChange","handlePrizeDescriptionChange","handleChangeSubscriberOption","handleChangeTypeOption","handleExpireDateChange","handleSetCountriesListChange","handleSelectedUserIdsChange","handleShouldShowWinnersChange","handleShouldShowPrizesChange","onClickActionHandler","handleStarClick","renderGiveawayOptionList","filteredChannelIds","deleteParticipantsHandler","iconClassName","subLabelClassName","formatDateTimeToString","boosts","RangeSliderWithMarks","rangeCount","marks","StarTopupOptionList","selectedStarCount","match","Link","isPrimary","renderPremiumFeaturesLink","GIVEAWAY_MAX_ADDITIONAL_CHANNELS","LIMIT_DESCRIPTION","uploadMaxFileparts","chatlistInvites","chatlistJoined","savedDialogsPinned","LIMIT_DESCRIPTION_BLOCKED","LIMIT_DESCRIPTION_PREMIUM","LIMIT_ICON","LIMIT_VALUE_FORMATTER","MAX_UPLOAD_FILEPART_SIZE","defaultValue","premiumValue","canBuyPremium","selectIsPremiumPurchaseBlocked","PremiumLimitReachedModal","closeLimitReachedModal","isClosing","startClosing","stopClosing","valueFormatter","limitType","defaultValueFormatted","premiumValueFormatted","getLimiterDescription","canUpgrade","SLIDE_TRANSITION_DURATION","FOCUS_MARGIN","useStickerPickerObservers","idPrefix","stickerSetIntersectionsRef","activeSetIndex","setActiveSetIndex","observe","observeIntersectionForSet","freeze","freezeForSet","unfreeze","unfreezeForSet","useIntersectionObserver","rootRef","stickerSetIntersections","entry","isIntersecting","minIntersectingIndex","lowestIndex","Infinity","observeIntersectionForShowingItems","freezeForShowingItems","unfreezeForShowingItems","throttleMs","margin","observeIntersectionForPlayingItems","observeIntersectionForCovers","stickerSetEl","isClose","animateScroll","maxDistance","StickerSetCover","stickerSet","STICKER_SIZE_PICKER_HEADER","observeIntersection","sharedCanvasRef","hasThumbnail","hasVideoThumb","hasAnimatedThumb","hasStaticThumb","customEmoji","useCustomEmoji","hasCustomColor","shouldUseTextColor","customColor","useDynamicColorListener","colorFilter","useColorFilter","useIsIntersecting","shouldPlay","shouldFallbackToSticker","IS_WEBM_SUPPORTED","firstStickerHash","getStickerMediaHash","firstStickerMediaData","mediaHash","coords","useCoordsInSharedCanvas","observeIntersectionForPlaying","selectIsAlwaysHighPriorityEmoji","sharedCanvas","sharedCanvasCoords","forceAlways","getFirstLetters","contentForStatusMenuContext","arg","StickerButton","noContextMenu","isStatusPicker","canViewSet","observeIntersectionForShowing","isSelected","shouldIgnorePremium","noShowPremium","withTranslucentThumb","clickArg","onFaveClick","onUnfaveClick","onRemoveRecentClick","onContextMenuOpen","onContextMenuClose","onContextMenuClick","isEffectEmoji","withSparkles","setEmojiStatus","isFree","hasEffect","isCustomEmoji","shouldLoad","isIntesectingForShowing","handleBeforeContextMenu","shouldRenderContextMenu","getLayout","withPortal","shouldAvoidNegativePosition","handleRemoveClick","handleContextRemoveRecent","handleContextUnfave","handleContextFave","handleSendQuiet","handleSendScheduled","handleOpenSet","handleEmojiStatusExpiresClick","until","shouldShowCloseButton","contextMenuItems","preventMessageInputBlurWithBubbling","Sparkles","preset","StickerView","isSmall","shouldLoop","shouldPreloadPreview","noLoad","noVideoOnMobile","withSharedAnimation","noFastClick","ReactionEmoji","loadAndPlay","sharedCanvasHqRef","isCustom","availableReaction","staticIcon","animationId","selectAnimation","getDocumentMediaHash","LOCAL_TGS_URLS","StarReaction","EMOJI_SIZE_PICKER","AnimatedIconWithPreview","collectibleStatuses","collectibleEmojiStatuses","statuses","StickerSet","isNearActive","favoriteStickers","folderIconPick","isReactionPicker","shouldHideHeader","withDefaultTopicIcon","selectedReactionIds","withDefaultStatusIcon","isChatEmojiSet","isChatStickerSet","isTranslucent","noContextMenus","onReactionSelect","onReactionContext","onStickerSelect","onStickerUnfave","onStickerFave","onStickerRemoveRecent","clearRecentStickers","clearRecentCustomEmoji","clearRecentReactions","toggleStickerSet","itemsPerRow","setItemsPerRow","getItemsPerRowFallback","stickerMarginPx","emojiMarginPx","emojiVerticalMarginPx","isRecent","RECENT_SYMBOL_SET_ID","isStatusCollectible","COLLECTIBLE_STATUS_SET_ID","isFavorite","FAVORITE_SYMBOL_SET_ID","isPopular","POPULAR_SYMBOL_SET_ID","isEmoji","isPremiumSet","selectIsSetPremium","handleClearRecent","handleAddClick","stickerSetId","handleDefaultTopicIconClick","DEFAULT_TOPIC_ICON_STICKER_ID","isLottie","handleDefaultStatusIconClick","DEFAULT_STATUS_ICON_ID","itemSize","STICKER_SIZE_PICKER","verticalMargin","calculateItemsPerRow","contentRect","useResizeObserver","accessHash","isInstalled","installedDate","isArchived","canCut","EFFECT_EMOJIS_SET_ID","EFFECT_STICKERS_SET_ID","isCut","expand","itemsBeforeCutout","totalItemsCount","itemHeight","heightWhenCut","favoriteStickerIdsSet","collectibleEmojiIdsSet","withAddSetButton","addSetButtonText","pill","grey","reactionId","isHqEmoji","canvasRef","HEADER_BUTTON_WIDTH","FADED_BUTTON_SET_IDS","STICKER_SET_IDS_WITH_COVER","setsById","stickerSetsById","customEmojisById","featuredIds","customEmojiFeaturedIds","statusRecent","emojis","recentStatusEmojis","recentCustomEmojis","recentCustomEmojiIds","recentReactions","topReactions","defaultTags","addedCustomEmojiIds","added","setIds","canAnimate","selectCanPlayAnimatedEmojis","defaultTopicIconsId","defaultStatusIconsId","chatEmojiSetId","emojiSet","isWithPaidReaction","isPaidReactionAvailable","defaultTagReactions","CustomEmojiPicker","pickerListClassName","withDefaultTopicIcons","onCustomEmojiSelect","handleContentScroll","shouldHideTopBorder","pickTruthy","collectibleStatusEmojis","collectibleStatusEmojiIds","prefix","canLoadAndPlay","areAddedLoaded","allSets","defaultSets","TOP_SYMBOL_SET_ID","topReactionsSlice","unshift","cleanRecentReactions","some","topReaction","cleanAvailableReactions","isInactive","allRecentReactions","defaultStatusIconsPack","uniqueByField","defaultTopicIconsPack","userSetIds","setIdsToDisplay","setsToDisplay","noPopulatedSets","canRenderContent","useAsyncRendering","shouldRenderContent","newLeft","handleEmojiSelect","pickerStyles","headerClassName","listClassName","firstSticker","activated","withSharedCanvas","STICKER_PICKER_MAX_SHARED_COVERS","isHq","isFaded","areFeaturedStickersLoaded","selectIsContextMenuTranslucent","StatusPickerMenu","statusButtonRef","onEmojiStatusSelect","loadFeaturedEmojiStickers","transformOriginX","isContextMenuShown","markContextMenuShown","unmarkContextMenuShown","Portal","noCompact","bubbleClassName","noCloseOnBackdrop","CUSTOM_EMOJI_SIZE","SuggestedStatusModal","closeSuggestedStatusModal","sendWebAppEvent","renderingModal","mockPeerWithStatus","formatShortDuration","handleSetStatus","expires","referrerWebAppKey","hasAbsoluteCloseButton","loopLimit","PeerChip","mockPeer","withEmojiStatus","getFirstAvailableBoost","myBoosts","boost","firstBoost","prevBoostedChat","BoostModal","applyBoost","closeBoostModal","loadFullChat","isReplaceModalOpen","openReplaceModal","closeReplaceModal","isWaitDialogOpen","openWaitDialog","closeWaitDialog","isPremiumDialogOpen","openPremiumDialog","closePremiumDialog","chatTitle","boostedChatTitle","isStatusLoaded","isBoosted","leftText","rightText","descriptionText","canBoostMore","boostStatus","hasMyBoost","areBoostsInDifferentChannels","every","currentLevel","hasNextLevel","levelProgress","remainingBoosts","isMaxLevel","getBoostProgressInfo","hasBoost","moreBoosts","modalTitle","boostsLeftToUnrestrict","boostsToUnrestrict","boostsApplied","boostTimes","isBoostDisabled","isReplacingBoost","handleApplyBoost","slots","slot","handleProceedPremium","handleButtonClick","PremiumProgress","floatingBadgeText","isOnlyConfirm","chatMessage","GiftCodeModal","closeGiftCodeModal","applyGiftCode","canUse","toId","usedAt","handleOpenGiveaway","giveawayMessageId","modalData","LinkField","tableData","isFromGiveaway","TableInfoModal","ChatlistAlready","invite","closeChatlistModal","joinChatlistInvite","selectedPeerIds","setSelectedPeerIds","missingPeerIds","hasChatsToAdd","isNew","alreadyPeerIds","newChatsCount","noCustomEmojiPlayback","noTitleAnimations","handleSelectionToggle","areAllSelected","pickerWrapper","pickerHeader","pickerHeaderInfo","selectionToggle","Badge","buttonBadge","isAlternateColor","ChatlistDelete","suggestedPeerIds","leaveChatlist","ChatlistNew","joinedIds","isNotJoined","selectedCount","removal","selectChatFolder","ChatlistInviteModal","renderingInfo","renderingFolderTitle","folderTabNumber","folderTitle","foldersWrapper","folders","Tab","badgeCount","isBadgeActive","ChatInviteModal","acceptChatInvite","closeChatInviteModal","participantsRef","prevModal","usePrevious","hash","inviteInfo","about","isBroadcast","participantIds","participantsCount","isRequestNeeded","handleAccept","acceptLangKey","requestToJoinLangKey","customPeer","getCustomPeerFromInvite","participants","withVideo","participantCount","participant","minLevelToRestrictAds","channelRestrictAdsLevelMin","AboutAdsModal","closeAboutAdsModal","moreMenuRef","canReport","additionalInfo","sponsorInfo","isMonetizationSharing","renderingIsNewDesign","regularAdContent","SafeLink","listItemData","TableAboutModal","headerIconName","withSeparator","SponsoredMessageContextMenuContainer","triggerRef","shouldSkipAbout","onItemClick","AboutMonetizationModal","blockchainText","monetizationTitle","specialReplacement","twoFaSettings","hint","passwordHint","VerificationMonetizationModal","closeMonetizationVerificationModal","clearMonetizationVerificationError","processMonetizationRevenueWithdrawalUrl","shouldShowPassword","setShouldShowPassword","password","currentPassword","handleClearError","PasswordForm","shouldShowSubmit","errorKey","withRegular","clearError","isPasswordVisible","shouldResetValue","onChangePasswordVisibility","EmojiStatusAccessModal","closeEmojiStatusAccessModal","toggleUserEmojiStatusPermission","loadDefaultStatusIcons","currentStatusIndex","setCurrentStatusIndex","totalCount","prevIndex","renderPickerItem","chatItem","itemName","isBotAccessEmojiGranted","onCloseHandler","renderStatusText","LocationAccessModal","closeLocationAccessModal","toggleUserLocationPermission","renderInfo","ReportAdModal","reportSponsored","closeReportAdModal","openPreviousReportAdModal","transitionRef","handleOptionClick","renderingSection","renderingDepth","sectionDepth","sections","bottomText","hasSubtitle","ACTIVE_SLIDE_CLASS_NAME","handleAnimationStart","TO_SLIDE_CLASS_NAME","narrow","secondaryIcon","ReportModal","reportMessages","closeReportModal","openPreviousReportModal","setText","subject","handleTextChange","closeReportMessageModalHandler","sendMessageReportHandler","Report","TextArea","isOptional","maxLengthIndicator","noReplaceNewlines","isBlurred","isBackgroundBlurred","patternColor","background","customBackground","selectThemeValues","PreparedMessageModal","closePreparedInlineMessageModal","openSharePreparedMessageModal","customBackgroundValue","useCustomBackground","handleOpenClick","localMessage","getMockPreparedMessageFromResult","bgClassName","inert","Message","noComments","noReplies","appearanceOrder","isJustAdded","isFirstInGroup","isLastInGroup","isLastInList","isFirstInDocumentGroup","isLastInDocumentGroup","starsBalance","balance","isStarsBalanceModalOpen","starsBalanceModal","SharePreparedMessageModal","closeSharePreparedMessageModal","sendInlineBotResult","updateSharePreparedMessageModalSendArgs","pendingSendArgs","starsForSendMessage","closeConfirmDialog","closeConfirmModalPayForMessage","dialogHandler","paymentMessageConfirmDialogHandler","shouldAutoApprove","shouldPaidMessageAutoApprove","setAutoApprove","setShouldPaidMessageAutoApprove","handleWithConfirmation","handleActionWithPaymentConfirmation","usePaidMessageConfirmation","handleSend","handleSendWithPaymentConfirmation","handleClosePaymentMessageConfirmDialog","peerName","PaymentMessageConfirmDialog","userName","messagePriceInStars","messagesCount","MEDIA_PERMISSIONS","MESSAGE_PERMISSIONS","useManagePermissions","defaultPermissions","permissions","setPermissions","havePermissionChanged","setHavePermissionChanged","setIsLoading","handlePermissionChange","targetName","getUpdatedPermissionValue","oldPermissions","newPermissions","sendGifs","checkMedia","mediaPermissions","v","sendMedia","assign","embedLinks","sendPlain","sendMessages","resetPermissions","permissionKeyList","fullInfo","hasLinkedChat","linkedChatId","PermissionCheckboxList","isMediaDropdownOpen","setIsMediaDropdownOpen","shiftedClassName","dropdownClassName","withCheckbox","getControlIsDisabled","permissionGroup","shouldDisablePermissionForPublicGroup","countCheckedPermissions","handleOpenMediaDropdown","handleDisabledClick","blocking","labelText","rightIcon","onClickLabel","sendPhotos","sendVideos","sendStickers","sendAudios","sendDocs","sendVoices","sendRoundvideos","sendPolls","inviteUsers","pinMessages","changeInfo","manageTopics","deleteMessageModal","canDeleteForAll","selectCanDeleteSelectedMessages","isSuperGroup","contactName","getPrivateChatUserId","chatBot","isSystemBot","selectBot","canBanUsers","getHasAdminRight","isCreator","isChatWithBot","selectIsChatWithBot","willDeleteForCurrentUserOnly","isChatBasicGroup","willDeleteForAll","DeleteMessageModal","closeDeleteMessageModal","deleteMessages","reportChannelSpam","deleteChatMember","deleteScheduledMessages","exitMessageSelectMode","updateChatMemberBannedRights","deleteParticipantHistory","defaultBannedRights","peerIdsToDeleteAll","setPeerIdsToDeleteAll","peerIdsToBan","setPeerIdsToBan","peerIdsToReportSpam","setPeerIdsToReportSpam","isAdditionalOptionsVisible","setIsAdditionalOptionsVisible","shouldDeleteForAll","setShouldDeleteForAll","peerList","senderArray","getSendersFromSelectedMessages","buildNestedOptionListWithAvatars","member","peerListToDeleteAll","peerListToReportSpam","peerListToBan","isCurrentUserInList","isAdmin","shouldShowOption","peerNames","buildCollectionByCallback","ACTION_SPAM_OPTION","nestedOptions","opt","ACTION_DELETE_OPTION","ACTION_BAN_OPTION","toggleAdditionalOptions","filterMessageIdByPeerId","selectedMessageIdList","msgId","selectSenderFromMessage","handleReportSpam","userMessagesMap","messageIdList","participantId","handleDeleteMessages","filteredMessageIdList","handleDeleteAllPeerMessages","peerIdList","handleDeleteMember","filteredUserIdList","handleUpdateChatMemberBannedRights","bannedRights","handleDeleteMessageList","isNaN","CheckboxGroup","nestedCheckbox","isPrivateChat","canPinForAll","PinMessageModal","pinMessage","handlePinMessageForAll","isUnpin","handlePinMessage","isOneSide","isSilent","UnpinAllMessagesModal","pinnedMessagesCount","onUnpin","shouldWarnAboutSvg","selectCanReportSelectedMessages","selectCanDownloadSelectedMessages","selectedMessageIds","selectedMessages","hasProtectedMessage","selectHasProtectedMessage","selectCanForwardMessages","isShareMessageModalOpen","isShareMessageModalShown","isAnyModalOpen","requestedAttachBotInstall","selectedMessagesCount","selectSelectedMessagesCount","canDeleteMessages","canReportMessages","canDownloadMessages","canForwardMessages","MessageSelectToolbar","canPost","openForwardMenuForSelectedMessages","downloadSelectedMessages","copySelectedMessages","setSharedSettingOption","handleCopy","useHotkeys","useCopySelectedMessages","isSvgDialogOpen","openSvgDialog","closeSvgDialog","shouldNotWarnAboutSvg","setShouldNotWarnAboutSvg","handleExitMessageSelectMode","handleDelete","onBackspace","onEsc","handleMessageDownload","handleSvgConfirm","prevSelectedMessagesCount","formattedMessagesCount","renderButton","seenByModal","seenByDates","closeSeenByModal","renderingSeenByDates","leftId","rightId","handleCloseSeenByModal","CLOSE_ANIMATION_DURATION","isReadDate","privacySettingsNoticeModal","PrivacySettingsNoticeModal","updateGlobalPrivacySettings","closePrivacySettingsNoticeModal","setPrivacyVisibility","loadUser","handleShowReadTime","shouldHideReadMarks","handleShowLastSeen","privacyKey","onSuccess","handleOpenPremium","ReadTime","LastSeen","Separator","reactorModal","reactors","ReactorListModal","loadReactors","closeReactorListModal","chosenTab","setChosenTab","canShowFilters","results","chatIdRef","handleCloseAnimationEnd","allReactions","uniqueReactions","seenByUserIds","flatMap","peerReactions","reactor","seenByUser","addedDate","avatarSize","activeEmojiInteraction","animatedEffect","selectAnimatedEmojiEffect","effectAnimationId","EmojiInteractionAnimation","stopActiveEmojiInteraction","isHiding","startHiding","startPlaying","stop","handleCancelAnimation","endHeavyAnimation","effectHash","effectTgsUrl","startSize","isReversed","quality","chatLanguageModal","currentLanguageCode","selectLanguageCode","activeTranslationLanguage","selectRequestedMessageTranslationLanguage","selectRequestedChatTranslationLanguage","ChatLanguageModal","requestMessageTranslation","closeChatLanguageModal","setSettingOption","requestChatTranslation","handleSelect","langCode","toLanguageCode","translationLanguage","handleSearch","translateLanguages","SUPPORTED_TRANSLATION_LANGUAGES","translatedName","Intl","DisplayNames","of","originalName","filteredDisplayedLanguages","highlight","CollectibleInfoModal","closeCollectibleInfoModal","isUsername","handleOpenUrl","shouldSkipModal","formatUsername","collectible","copyTextToClipboard","formattedCollectible","purchaseDate","cryptoCurrency","cryptoAmount","Mention","chip","createMapStateToProps","props","currentType","isVoice","byChatId","globalMessagesByChatId","messages","searchChatId","AudioResults","searchMessagesGlobal","openAudioPlayer","foundMessages","parseSearchResultKey","handleMessageFocus","handlePlayAudio","canRenderContents","NothingFound","shouldDrawDateDivider","toYearMonth","getMessageDownloadableMedia","formatMonthAndYear","Audio","AudioOrigin","Search","getSenderName","onDateClick","buttonRef","activeElement","selectIsChatPinned","getIsChatMuted","selectNotifyDefaults","selectNotifyException","canChangeFolder","chatFolders","LeftSearchResultChat","withUsername","withOpenAppButton","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","handleChatFolderChange","handleMute","useChatContextActions","handleOpenApp","useSelectWithEnter","storyViewerOrigin","hasMainMiniApp","MuteChatModal","ChatFolderModal","BotAppResults","recentSet","withoutRecent","handleChatClick","shouldReplaceHistory","privateChatUserId","privateChatUser","ChatMessage","mediaThumbnail","getMessageSticker","getMessageMediaThumbDataUri","mediaBlobUrl","getMessageMediaHash","isRoundVideo","getMessageRoundVideo","formatPastTimeShort","renderMessageSummary","isSpoiler","getMessageIsSpoiler","getMessageVideo","renderSummary","DateSuggest","searchDate","suggestions","suggestion","currentDate","latestYear","getSuggestionsFromDate","selectTopic","LeftSearchResultTopic","foundTopicIds","ChatMessageResults","dateSearchQuery","onSearchDateSelect","openThread","handleTopicClick","nothingFound","LeftSearchResultSponsored","sponsoredPeer","viewSponsored","useOnIntersect","intersectionRatio","handleBadgeClick","handleBadgeMouseDown","BadgeButton","topUserIds","topPeers","recentlyFoundChatIds","RecentContacts","loadTopUsers","addRecentlyFoundChatId","clearRecentlyFoundChats","topUsersRef","handleClearRecentlyFoundChats","isChannelList","globalResults","localResults","globalPeerIds","accountPeerIds","similarChannelIds","selectSimilarChannelIds","GLOBAL_SUGGESTED_CHANNELS_ID","suggestedChannelIds","ChatResults","setGlobalSearchChatId","loadChannelRecommendations","chatSelectionRef","shouldShowMoreLocal","setShouldShowMoreLocal","shouldShowMoreGlobal","setShouldShowMoreGlobal","searchContext","setSearchContext","context","handlePickerItemClick","getSearchContextCaption","handleClickContext","itemPlaceholderClass","startsWith","filteredChatIds","getOrderedIds","ALL_FOLDER_ID","localChatIds","contactIdsWithMe","localPeerIds","filteredIds","shouldResetResultsByType","shouldCheckFetchingMessagesStatus","handleClickShowMoreLocal","handleClickShowMoreGlobal","actualFoundIds","isMessagesFetching","shouldRenderTopPeers","shouldRenderMessagesSection","noScrollRestoreOnTop","customIcon","shouldCleanup","CURRENT_TYPE","FileResults","observeIntersectionForMedia","getMessageDocument","Document","withDate","datetime","smaller","LinkResults","WebLink","onMessageClick","MediaResults","handleSelectMedia","isMediaGrid","isMessageList","Media","TABS","GlobalSearchContent","ChannelList","BotApps","Links","Files","Music","Voice","CHAT_TABS","currentContent","LeftSearch","setGlobalSearchContent","setGlobalSearchDate","activeTab","setActiveTab","parseDateString","handleSwitchTab","handleSearchDateSelect","TabList","onSwitchTab","renderCount","INITIAL_STATE","email","twoFaReducer","payload","maxChats","selectCurrentLimit","SettingsFoldersChatFilters","mode","dispatch","onSaveFilter","openLimitReachedModal","chatFilter","selectedChatIds","selectedChatTypes","selectChatFilters","chatTypes","CUSTOM_PEER_INCLUDED_CHAT_TYPES","CUSTOM_PEER_EXCLUDED_CHAT_TYPES","isTouched","setIsTouched","folderAllOrderedIds","useFolderManagerForOrderedIds","folderArchivedOrderedIds","ARCHIVED_FOLDER_ID","shouldHideChatTypes","isChatList","chatIds","newFilter","includeFilters","includedChatIds","excludeFilters","excludedChatIds","handleSelectedChatTypesChange","newFilters","categories","selectedCategories","categoryPlaceholderKey","withPeerTypes","onSelectedCategoriesChange","EmojiButton","native","IS_PACKAGED_ELECTRON","BASE_URL","image","LOADED_EMOJIS","names","IS_EMOJI_SUPPORTED","loading","handleEmojiLoad","EMOJI_MARGIN","EMOJI_VERTICAL_MARGIN","EMOJI_VERTICAL_MARGIN_MOBILE","MOBILE_CONTAINER_PADDING","EmojiCategory","category","allEmojis","onEmojiSelect","emojisPerRow","displayedEmoji","ICONS_BY_CATEGORY","recent","people","nature","foods","activity","places","objects","symbols","flags","categoryIntersections","emojiDataPromise","emojiRawData","emojiData","EmojiPicker","recentEmojis","setCategories","setEmojis","activeCategoryIndex","setActiveCategoryIndex","MENU_TRANSITION_DURATION","allCategories","themeCategories","exec","default","uncompressEmoji","ensureEmojiData","selectCategory","categoryEl","containerClassName","loadEmojiKeywords","emojiKeywords","FolderIconPicker","onIconSelect","emojiQuery","setEmojiQuery","emojisFound","setEmojisFound","textToEmojiMap","textToEmoji","em","arr","custEm","handleEmojiSearchQueryChange","emKw","keywords","kw","emojisKws","isInputFocused","setFocused","setUnfocused","sharedSearchCanvasRef","language","BASE_EMOJI_KEYWORD_LANG","EMOTICON_TO_FOLDER_ICON","emoticon","ERROR_NO_TITLE","ERROR_NO_CHATS","invites","chatListCount","el","customSticker","possibleEmoji","localStorage","getItem","LOCSTOR_CUSTOM_EMOJI_KEY","setItem","loadedActiveChatIds","loadedArchivedChatIds","isRemoved","maxInviteLinks","maxChatLists","SettingsFoldersEdit","onAddIncludedChats","onAddExcludedChats","onShareFolder","onOpenInvite","isOnlyInvites","onSaveFolder","loadChatlistInvites","isCreating","isEditingChatList","btnRef","customStickerSelected","setCustomStickerSelected","customEmojiSelected","setCustomEmojiSelected","isIncludedChatsListExpanded","setIsIncludedChatsListExpanded","isExcludedChatsListExpanded","setIsExcludedChatsListExpanded","setOpen","setClose","setInputCoordinates","includedChatTypes","excludedChatTypes","visibleIncludedChatIds","visibleExcludedChatIds","allLoadedChatsSet","loadedIncludedChatIds","findIntersectionWithSet","loadedExcludedChatIds","stickerOrEmojiSelected","newStorage","getLocalStorageFolderIcons","setGlobal","handleCreateInviteClick","selectCanShareFolder","handleEditInviteClick","renderChats","visibleChatIds","leftChatsCount","clickHandler","chatType","typeKey","renderChatType","rect","setContextMenuAnchor","handleMouseEnter","handleMouseLeave","useMouseInside","handleActivateSymbolMenu","triggerEl","possibleIcon","getIconNameByFolder","setTheme","accentColorTheme","accent_text_color","textColorTheme","secondary_text_color","currTheme","handleMenuClose","handleCustomEmojiSelect","DEFAULT_FOLDER_ICON","handleIconSelect","STICKER_SIZE_FOLDER_SETTINGS","FoldersNew","ResponsiveHoverButton","onActivate","onMouseEnter","runThrottledForLoadRecommended","folderIds","foldersById","recommended","recommendedChatFolders","foldersView","byKey","maxFolders","SettingsFoldersMain","onCreateFolder","onEditFolder","loadRecommendedChatFolders","addChatFolder","sortChatFolders","setState","orderedFolderIds","dragOrderIds","draggedIndex","prevFolderIds","handleFoldersViewChange","newFolderView","handleCreateFolder","chatsCountByFolderId","useFolderManagerForChatsCount","userFolders","getFolderDescriptionText","handleCreateFolderFromRecommended","translation","handleDragEnd","canCreateNewFolder","folderViewOptions","FoldersAll","isBlocked","isDragged","draggedTop","Draggable","onDragEnd","knobStyle","isStatic","allowSelection","shareFolderScreen","SettingsShareChatlist","createChatlistInvite","deleteChatlistInvite","editChatlistInvite","handleRevoke","pinnedChatIds","unlockedIds","partition","selectCanInviteToChat","isFirstRenderRef","prevUrl","handleClickDisabled","chatsCount","AnimatedIcon","FoldersShare","withShare","onRevoke","lockedUnselectedIds","SettingsFolders","currentScreen","shownScreen","onScreenSelect","openShareChatFolderModal","editChatFolder","handleReset","SettingsScreens","FoldersCreateFolder","FoldersEditFolder","FoldersEditFolderFromChatList","FoldersEditFolderInvites","FoldersIncludedChats","FoldersExcludedChats","saveState","newState","folderUpdate","handleSaveFolder","handleSaveFilter","handleEditFolder","handleAddIncludedChats","FoldersIncludedChatsFromChatList","handleAddExcludedChats","FoldersExcludedChatsFromChatList","handleShareFolder","noRequestNextScreen","handleOpenInvite","Folders","SettingsPasswordForm","shouldDisablePasswordManager","expectedPassword","validationError","setValidationError","newPassword","PasswordMonkey","SettingsPasscodeCongratulations","fullReset","STICKER_SIZE_PASSCODE","Congratulations","SettingsPasscodeEnabled","Lock","previewUrl","lockPreviewUrl","PasscodeChangePasscodeCurrent","PasscodeTurnOff","SettingsPasscodeStart","passcode","SettingsPasscode","onSetPasscode","setPasscode","clearPasscode","setPasscodeError","clearPasscodeError","handleStartWizard","PasscodeNewPasscode","handleNewPassword","PasscodeNewPasscodeConfirm","handleNewPasswordConfirm","PasscodeCongratulations","handleChangePasswordCurrent","currentPasscode","decryptSession","PasscodeChangePasscodeNew","handleChangePasswordNew","PasscodeChangePasscodeConfirm","handleTurnOff","Privacy","PasscodeDisabled","SettingsPasscodeForm","PasscodeEnabled","DEFAULT_POINTS","getProgress","points","pointIndex","findIndex","prevPoint","nextPoint","pointValue","PaidMessageSlider","readOnly","canChangeChargeForMessages","mainClassName","number","formatStarsAsText","step","starsUsdWithdrawRateX1000","starsUsdWithdrawRate","configStarsPaidMessageCommissionPermille","starsPaidMessageCommissionPermille","starsPaidMessageAmountMax","DEFAULT_MAXIMUM_CHARGE_FOR_MESSAGES","isGroupChat","chargeForMessages","handleChargeForMessagesChange","handleUnlockWithPremium","MINIMUM_CHARGE_FOR_MESSAGES","noForcedUpperCase","percent","formatPercent","premiumSection","handleOpenPremiumModal","StarIcon","nonContactPeersPaidStars","selectNonContactPeersPaidStars","noPaidReactionsForUsersCount","noPaidMessages","shouldNewNonContactPeersRequirePremium","selectNewNoncontactPeersRequirePremium","shouldChargeForMessages","DEFAULT_CHARGE_FOR_MESSAGES","canLimitNewMessagesWithoutPremium","canChargeForMessages","starsPaidMessagesAvailable","canChangeForContactsAndPremium","setChargeForMessages","PrivacyLockedOption","hidden","isCanCheckedInDisabled","updateGlobalPrivacySettingsWithDebounced","privacyDescription","PaidMessagePrice","itemSubtitle","PrivacyNoPaidMessages","renderSectionNoPaidMessagesForUsers","PremiumStatusItem","getSessionIcon","session","platform","device","deviceModel","systemVersion","activeSessions","byHash","SettingsActiveSession","changeSessionSettings","terminateAuthorization","renderingSession","handleSecretChatsStateChange","areSecretChatsEnabled","handleCallsStateChange","areCallsEnabled","handleTerminateSessionClick","headerButton","iconDevice","dateActive","box","appVersion","ip","region","getLocation","note","actionHeader","actionName","SettingsActiveSessions","orderedHashes","ttlDays","terminateAllAuthorizations","changeSessionTtl","isConfirmTerminateAllDialogOpen","openConfirmTerminateAllDialog","closeConfirmTerminateAllDialog","openedSessionHash","setOpenedSessionHash","autoTerminateValue","AUTO_TERMINATE_OPTIONS","handleTerminateAllSessions","handleOpenSessionModal","handleCloseSessionModal","handleChangeSessionTtl","days","currentSession","currentSessionHash","isCurrent","otherSessionHashes","hasOtherSessions","sessionHashes","sessionHash","areButtonsInColumn","activeWebSessions","SettingsActiveWebsite","terminateWebAuthorization","renderingBot","browser","SettingsActiveWebsites","terminateAllWebAuthorizations","openedWebsiteHash","setOpenedWebsiteHash","handleTerminateAuthClick","handleTerminateAllAuth","handleCloseWebsiteModal","clearHelp","StickerSetCard","handleCardClick","CHAT_HEIGHT_PX","STICKER_SIZE_GENERAL_SETTINGS","renderPreview","customEmojiSetIds","canPlayAnimatedEmojis","SettingsCustomEmoji","shouldSuggestCustomEmoji","stickerSettingsRef","handleStickerSetClick","handleSuggestCustomEmojiChange","customEmojiSets","SettingsDataStorage","canAutoLoadPhotoFromContacts","canAutoLoadPhotoInPrivateChats","canAutoLoadPhotoInGroups","canAutoLoadPhotoInChannels","canAutoLoadVideoFromContacts","canAutoLoadVideoInPrivateChats","canAutoLoadVideoInGroups","canAutoLoadVideoInChannels","canAutoLoadFileFromContacts","canAutoLoadFileInPrivateChats","canAutoLoadFileInGroups","canAutoLoadFileInChannels","autoLoadFileMaxSizeMb","renderFileSizeCallback","AUTODOWNLOAD_FILESIZE_MB_LIMITS","handleFileSizeChange","renderAutoDownloadBlock","canAutoLoadFromContacts","canAutoLoadInPrivateChats","canAutoLoadInGroups","canAutoLoadInChannels","renderValue","renderContentSizeSlider","LOCAL_SUPPORTED_DETECTION_LANGUAGES","SUPPORTED_LANGUAGES","doNotTranslate","SettingsDoNotTranslate","displayedOptions","setDisplayedOptions","displayedOptionList","currentLanguageOption","otherOptionList","prevLanguage","ManageUsernames","onEditUsername","toggleUsername","toggleChatUsername","sortUsernames","sortChatUsernames","usernameForConfirm","setUsernameForConfirm","usernameList","username","prevUsernameList","orderedUsernames","dragOrderUsernames","handleCopyUsername","handleUsernameClick","isEditable","closeConfirmUsernameDialog","handleUsernameToggle","usernameData","LINK_PREFIX_REGEX","runDebouncedForCheckUsername","UsernameInput","currentUsername","asLink","isUsernameAvailable","checkedUsername","checkUsername","checkPublicLink","setUsername","langPrefix","previousIsUsernameAvailable","renderingIsUsernameAvailable","isChecking","usernameSuccess","usernameError","MIN_UPDATE_USERNAME_LENGTH","MAX_USERNAME_LENGTH","USERNAME_REGEX","test","handleUsernameChange","newUsername","isUsernameValid","success","ERROR_FIRST_NAME_MISSING","editUsernameError","profileEdit","maxBioLength","currentFirstName","currentLastName","currentUserFullInfo","currentAvatarHash","getChatAvatarHash","currentBio","bio","SettingsEditProfile","loadCurrentUser","updateProfile","firstEditableUsername","isUsernameTouched","setIsUsernameTouched","isProfileFieldsTouched","setIsProfileFieldsTouched","setError","setPhoto","setBio","editableUsername","setEditableUsername","currentAvatarBlobUrl","ProfileEditProgress","InProgress","isUsernameError","shouldRenderUsernamesManage","isSaveButtonShown","Complete","handlePhotoChange","newPhoto","handleBioChange","handleProfileSave","trimmedFirstName","trimmedLastName","trimmedBio","AvatarEditable","USERNAME_PURCHASE_ERROR","purchaseInfoLink","PURCHASE_USERNAME","renderPurchaseLink","shouldForceHttpTransport","shouldAllowHttpTransport","shouldCollectDebugLogs","shouldDebugExportedSenders","SettingsExperimental","requestWave","snapButtonRef","isSnapButtonAnimating","setIsSnapButtonAnimating","isAutoUpdateEnabled","setIsAutoUpdateEnabled","electron","getIsAutoUpdateEnabled","handleDownloadLog","file","File","getDebugLogs","DEBUG_LOG_FILENAME","URL","createObjectURL","handleIsAutoUpdateEnabledChange","handleRequestWave","startX","startY","handleRequestConfetti","handleSnap","animateSnap","Experimental","IS_WAVE_TRANSFORM_SUPPORTED","IS_SNAP_EFFECT_SUPPORTED","IS_ELECTRON","shouldUseSystemTheme","messageSendKeyCombo","messageTextSize","timeFormat","SettingsGeneral","isMobileDevice","timeFormatOptions","appearanceThemeOptions","keyboardSendOptions","handleMessageTextSizeChange","setAttribute","handleAppearanceThemeChange","newTheme","getSystemTheme","handleTimeFormatChange","newTimeFormat","wasTimeFormatSetManually","setTimeFormat","handleMessageSendComboChange","newCombo","isTrayIconEnabled","setIsTrayIconEnabled","getIsTrayIconEnabled","handleIsTrayIconEnabledChange","GeneralChatBackground","IS_WINDOWS","OFFSCR_RENDERER","OFFSCR_RENDERER_REFCNT","PreviewAnimgBgRender","BaseAnimBgRender","syncState","super","AnimBgRender","renderer","detach","bm","renderBitmap","colors","curPos","getTransitionProgress","transferFromImageBitmap","WallpaperTile","wallpaper","localMediaHash","mouseRef","bgRef","animDivRef","setRenderer","isGradientWithoutPattern","pattern","renderer2","setColors","transformStringsToColors","secondBackgroundColor","third","thirdBackgroundColor","fourth","fourthBackgroundColor","isLoadingRef","isLoadAllowed","setIsLoadAllowed","res","fullMedia","wasLoadDisabled","UPLOADING_WALLPAPER_SLUG","cacheKeyRef","selectCanAnimateInterface","handleMouse","nextState","mouseRefCurr","blob","fetchBlob","cacheApi","save","CUSTOM_BG_CACHE_NAME","isAllowed","dark","loadedWallpapers","SettingsGeneralBackground","loadWallpapers","uploadWallpaper","setThemeSettings","themeRef","handleFileSelect","validatedFiles","validateFiles","handleUploadWallpaper","openSystemFilesDialog","handleSetColor","GeneralChatBackgroundColor","handleResetToDefault","DARK_THEME_PATTERN_COLOR","DEFAULT_PATTERN_COLOR","handleWallPaperSelect","currentWallpaper","getAverageColor","getPatternColor","rgbColor","rgb2hex","handleWallPaperBlurChange","isUploading","CONSTRUCTOR_ID","SUBCLASS_OF_ID","DEFAULT_HSB","rgb2hsb","hex2rgb","PREDEFINED_COLORS","hsb2positions","hsb","rects","colorPosition","colorRect","huePosition","hueRect","positions2hsb","colorPickerRef","huePickerRef","isFirstRunRef","setHsb","getInitialHsb","hsbRef","markIsDragging","unmarkIsDragging","rgbInput","setRgbInput","hexInput","setHexInput","rectsRef","colorCtxRef","offsetLeft","handleColorDrag","handleHueDrag","selectorToPreventScroll","withCursor","hex","hsb2rgb","hue","hueHex","rgb","w","h","imgData","createImageData","pixels","col","perY","st","ed","perX","putImageData","drawColor","drawHue","handleRgbChange","rgbValue","channel","handleHexChange","hexValue","handlePredefinedColorClick","dataset","SettingsHeader","editedFolderId","signOut","isSignOutDialogOpen","setIsSignOutDialogOpen","handleMultiClick","currentAmountRef","useMultiClick","openSignOutConfirmation","closeSignOutConfirmation","openDeleteFolderConfirmation","handleSignOutMessage","forceInitApi","SettingsMenuButton","EditProfile","General","QuickReaction","DataStorage","Language","DoNotTranslate","Stickers","PrivacyPhoneNumber","PrivacyLastSeen","PrivacyProfilePhoto","PrivacyBio","PrivacyBirthday","PrivacyGifts","PrivacyForwarding","PrivacyVoiceMessages","PrivacyMessages","PrivacyGroupChats","PrivacyPhoneCall","PrivacyLastSeenAllowedContacts","PrivacyProfilePhotoAllowedContacts","PrivacyBioAllowedContacts","PrivacyGroupChatsAllowedContacts","PrivacyLastSeenDeniedContacts","PrivacyProfilePhotoDeniedContacts","PrivacyBioDeniedContacts","PrivacyGroupChatsDeniedContacts","PrivacyPhoneNumberAllowedContacts","PrivacyBirthdayAllowedContacts","PrivacyGiftsAllowedContacts","PrivacyForwardingAllowedContacts","PrivacyVoiceMessagesAllowedContacts","PrivacyPhoneCallAllowedContacts","PrivacyPhoneP2PAllowedContacts","PrivacyPhoneNumberDeniedContacts","PrivacyBirthdayDeniedContacts","PrivacyGiftsDeniedContacts","PrivacyForwardingDeniedContacts","PrivacyVoiceMessagesDeniedContacts","PrivacyPhoneCallDeniedContacts","PrivacyPhoneP2PDeniedContacts","Performance","ActiveSessions","ActiveWebsites","PrivacyBlockedUsers","TwoFaDisabled","TwoFaEnabled","TwoFaNewPassword","TwoFaChangePasswordNew","TwoFaChangePasswordConfirm","TwoFaNewPasswordConfirm","TwoFaNewPasswordHint","TwoFaChangePasswordHint","TwoFaNewPasswordEmail","TwoFaRecoveryEmail","TwoFaNewPasswordEmailCode","TwoFaRecoveryEmailCode","TwoFaCongratulations","TwoFaChangePasswordCurrent","TwoFaTurnOff","TwoFaRecoveryEmailCurrentPassword","canTranslate","canTranslateChats","languages","SettingsLanguage","loadLanguages","selectedLanguage","setSelectedLanguage","markIsLoading","unmarkIsLoading","canTranslateChatsEnabled","oldSetLanguage","currentLangCode","navigator","shortLangCode","substr","nativeName","handleShouldTranslateChange","handleShouldTranslateChatsChange","handleShouldTranslateChatsClick","doNotTranslateText","IS_TRANSLATION_SUPPORTED","handleDoNotSelectOpen","isGiveawayAvailable","selectIsGiveawayGiftsPurchaseAvailable","sessionCount","SettingsMain","openSupportChat","openGiftRecipientPicker","openStarsBalanceModal","isSupportDialogOpen","openSupportDialog","closeSupportDialog","isPreload","handleOpenSupport","ProfileInfo","canPlayVideo","ChatExtra","chatOrUserId","isInSettings","languageInfo","formatStarsAmount","FAQ_URL","PRIVACY_URL","renderTextFilters","hasContactJoinedNotifications","hasWebNotifications","hasPushNotifications","notificationSoundVolume","SettingsNotifications","notifyDefaults","loadNotificationSettings","updateContactSignUpNotification","updateNotificationSettings","updateWebNotificationSettings","runDebounced","useRunDebounced","areNotificationsSupported","checkIfNotificationsSupported","areOfflineNotificationsSupported","checkIfOfflinePushFailed","handleSettingsChange","peerType","setting","currentIsMuted","mutedUntil","currentShouldShowPreviews","shouldShowPreviews","handleWebNotificationsChange","handlePushNotificationsChange","handlePrivateChatsNotificationsChange","handlePrivateChatsPreviewChange","handleGroupsNotificationsChange","handleGroupsPreviewChange","handleChannelsNotificationsChange","handleChannelsPreviewChange","handleContactNotificationChange","playNotifySound","groups","ANIMATION_LEVEL_OPTIONS","ANIMATION_LEVEL_CUSTOM_OPTIONS","PERFORMANCE_OPTIONS","IS_BACKDROP_BLUR_SUPPORTED","performanceSettings","selectPerformanceSettings","updatePerformanceSettings","sectionExpandedStates","setSectionExpandedStates","sectionCheckedStates","animationLevelState","areDeepEqual","INITIAL_PERFORMANCE_STATE_MAX","ANIMATION_LEVEL_MAX","INITIAL_PERFORMANCE_STATE_MIN","ANIMATION_LEVEL_MIN","INITIAL_PERFORMANCE_STATE_MID","ANIMATION_LEVEL_MED","ANIMATION_LEVEL_CUSTOM","animationLevelOptions","handleToggleSection","sectionIndex","handleAnimationLevelChange","newLevel","performance","animationLevel","handlePropertyGroupChange","perfomanceSection","sectionName","newSettings","handlePropertyChange","hasPassword","isSensitiveEnabled","canChangeSensitive","shouldArchiveAndMuteNewNonContact","hasPasscode","canDisplayChatInTitle","isCurrentUserFrozen","blockedCount","webAuthCount","canDisplayAutoarchiveSetting","canSetPasscode","selectCanSetPasscode","SettingsPrivacy","loadPrivacySettings","loadBlockedUsers","loadContentSettings","updateContentSettings","loadGlobalPrivacySettings","loadWebAuthorizations","handleArchiveAndMuteChange","handleChatInTitleChange","handleUpdateContentSettings","getVisibilityValue","shouldAllowPremium","botsPrivacy","isVisibilityEverybody","shouldShowBotsString","blockCount","blockChatIds","allowCount","allowChatIds","total","exceptionString","conjunction","lastSeen","profilePhoto","birthday","forwards","phoneCall","allowDisabledClick","voiceMessages","chatInvite","blockedIds","localContactIds","userSearch","localUserIds","BlockUserModal","setUserSearchQuery","filteredContactIds","availableContactIds","contactId","firstId","secondId","secondName","localeCompare","handleRemoveUser","chatsByIds","usersByIds","SettingsPrivacyBlockedUsers","isBlockUserModalOpen","openBlockUserModal","closeBlockUserModal","handleUnblockClick","blockedUsernamesById","mainUsername","getMainUsername","userMainUsername","renderContact","getPrivacyKey","screen","PrivacyPhoneP2P","PrivacyAddByPhone","disallowedGifts","SettingsAcceptedGift","handleOpenTelegramPremiumModal","actionText","handleLimitedEditionChange","shouldDisallowLimitedStarGifts","handleUnlimitedEditionChange","shouldDisallowUnlimitedStarGifts","handleUniqueChange","shouldDisallowUniqueStarGifts","handlePremiumSubscriptionChange","shouldDisallowPremiumGifts","selectShouldHideReadMarks","SettingsPrivacyLastSeen","canShowHideReadTime","handleChangeShouldHideReadMarks","SettingsPrivacyPublicProfilePhoto","hasCurrentUserFullInfo","currentUserFallbackPhoto","loadFullUser","uploadProfilePhoto","isDeleteFallbackPhotoModalOpen","openDeleteFallbackPhotoModal","closeDeleteFallbackPhotoModal","handleSelectFile","isFallback","handleConfirmDelete","handleOpenFileSelector","click","SelectAvatar","PrivacySubsection","isPremiumRequired","visibilityOptions","hasNobody","primaryExceptionLists","shouldShowDenied","shouldShowAllowed","headerText","prepareSubtitle","userIdsCount","chatIdsCount","isAllowBots","userCountString","chatCountString","allowedString","blockString","allowedContactsScreen","deniedContactsScreen","primaryPrivacy","secondaryPrivacy","shouldDisplayGiftsButton","addByPhone","phoneP2P","SettingsPrivacyVisibility","handleShowGiftIconInChats","secondaryScreen","PREMIUM_CATEGORY","CUSTOM_PEER_PREMIUM","getCurrentPrivacySettings","SettingsPrivacyVisibilityExceptionList","isAllowList","withPremiumCategory","withMiniAppsCategory","usersOnly","setPrivacySettings","customPeerBots","isCustomPeer","avatarIcon","isAvatarSquare","peerColorId","miniAppsCategory","selectedContactIds","selectedCategoryTypes","newSelectedCategoryTypes","setNewSelectedCategoryTypes","SERVICE_NOTIFICATIONS_USER_ID","filteredChats","handleSelectedCategoriesChange","updatedIds","isPremiumAllowed","config","selectedReaction","defaultReaction","SettingsQuickReaction","setDefaultReaction","withIcon","addedSetIds","SettingsStickers","shouldSuggestStickers","shouldUpdateStickerSetOrder","handleSuggestStickerSetOrderChange","handleSuggestStickersChange","stickerSets","SettingsTwoFaCongratulations","STICKER_SIZE_TWO_FA","recoveryEmail","animatedEmoji","selectAnimatedEmoji","codeLength","waitingEmailCodeLength","SettingsTwoFaEmailCode","focusDelayTimeoutMs","setValue","handleInputChange","AnimatedIconFromSticker","SettingsTwoFaEnabled","SettingsTwoFaSkippableForm","shouldConfirm","isConfirmShown","markIsConfirmShown","unmarkIsConfirmShown","handleSkip","handleSkipConfirm","SettingsTwoFaStart","SettingsTwoFa","updatePassword","checkPassword","clearTwoFaError","updateRecoveryEmail","provideTwoFaEmailCode","clearPassword","handleNewPasswordHint","handleNewPasswordEmail","handleChangePasswordConfirm","handleChangePasswordHint","handleRecoveryEmailCurrentPassword","handleRecoveryEmail","handleEmailCode","SettingsTwoFaPassword","TRANSITION_RENDER_COUNT","TWO_FA_SCREENS","PASSCODE_SCREENS","FOLDERS_SCREENS","PRIVACY_SCREENS","PRIVACY_PHONE_NUMBER_SCREENS","PRIVACY_LAST_SEEN_PHONE_SCREENS","PRIVACY_PROFILE_PHOTO_SCREENS","PRIVACY_BIO_SCREENS","PRIVACY_BIRTHDAY_SCREENS","PRIVACY_GIFTS_SCREENS","PRIVACY_PHONE_CALL_SCREENS","PRIVACY_PHONE_P2P_SCREENS","PRIVACY_FORWARDING_SCREENS","PRIVACY_VOICE_MESSAGES_SCREENS","PRIVACY_GROUP_CHATS_SCREENS","PRIVACY_MESSAGES_SCREENS","Settings","foldersState","foldersDispatch","shouldSkipTransition","closeShareChatFolderModal","twoFaState","twoFaDispatch","useReducer","privacyPasscode","setPrivacyPasscode","useMarkScrolled","forceReturnToChatList","isFromSettings","renderCurrentSection","isScreenActive","_isFrom","_currentKey","activeScreen","privacyAllowScreens","isTwoFaScreen","isPasscodeScreen","isFoldersScreen","isPrivacyScreen","Main","SettingsGeneralBackgroundColor","SettingsPerformance","renderCurrentSectionContent","LAYERS_ANIMATION_NAME","shouldWrap","withSwipeControl","userStatusesById","ContactList","openNewContactDialog","isSearching","NewChatStep1","onSelectedMemberIdsChange","onNextStep","setGlobalSearchQuery","foundContactIds","canBeInvitedToGroup","handleNextStep","creationProgress","creationError","chatCreation","maxGroupSize","NewChatStep2","createGroupChat","createChannel","setTitle","setAbout","chatTitleEmptyError","channelTitleEmptyError","ChatCreationProgress","memberFirstNames","generatedChatName","handleTitleChange","handleCreateGroup","handleCreateChannel","renderedError","RENDER_COUNT","LeftColumnContent","NewChat","onContentChange","newChatMemberIds","setNewChatMemberIds","NewChannelStep2","NewGroupStep2","isStepActive","NewChannelStep1","NewGroupStep1","ArchivedChats","isForumPanelOpen","archiveSettings","isStoryRibbonShown","onTopicSearch","onSettingsScreenSelect","onLeftColumnContentChange","updateArchiveSettings","handleDisplayArchiveInChats","shouldDisableDropdownMenuTransitionRef","handleDropdownMenuTransitionEnd","useLeftHeaderButtonRtlForumTransition","shouldRenderTitle","titleClassNames","shouldRenderForumPanel","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","isAnimationStarted","useForumPanelRender","isForumPanelVisible","shouldRenderStoryRibbon","storyRibbonClassNames","isStoryRibbonClosing","StoryToggler","canShow","folderType","ForumPanel","onOpenAnimationStart","folderOrderedIds","editChatFolders","initialSelectedFolderIds","selectedFolderIds","setSelectedFolderIds","idsToRemove","idsToAdd","MuteDuration","muteUntilOption","setMuteUntilOption","Forever","updateChatMutedState","updateTopicMutedState","muteForOptions","OneHour","FourHours","EightHours","OneDay","ThreeDays","fromSticker","stickerSetShortName","sendOptions","getAllowedAttachmentOptions","threadInfo","selectThreadInfo","isMessageThread","isCommentsInfo","fromChannelId","canSendStickers","canScheduleUntilOnline","selectCanScheduleUntilOnline","shouldSchedule","selectShouldSchedule","StickerSetModal","prevStickerSet","renderingStickerSet","isAdded","requestCalendar","calendar","useSchedule","isScheduleRequested","isPreloadedGlobally","scheduledAt","handleCopyLink","suffix","renderHeader","EMOJI_SIZE_MODAL","STICKER_SIZE_MODAL","renderButtonText","CustomEmojiSetsModal","customEmojiModalRef","prevCustomEmojiSets","renderingCustomEmojiSets","handleSetClick","sets","teactFastList","customEmojiSet","setCard","BOT_BUTTONS","help","isRestricted","canAddContact","getCanAddContact","isMainThread","currentChatId","currentThreadId","canReportChat","canGift","selectCanGift","canCreateTopic","isUserRightBanned","canEditTopic","getCanManageTopic","canManage","selectCanManage","selectCanTranslateChat","isTranslationDisabled","savedDialog","getIsSavedDialog","isTopic","isForumAsMessages","canDeleteChat","getCanDeleteChat","botCommands","commands","botPrivacyPolicyUrl","privacyPolicyUrl","isChatInfoShown","isRightColumnShown","selectIsRightColumnShown","isBot","HeaderMenuContainer","withExtraActions","withForumActions","canStartBot","canSubscribe","canSearch","canCall","canMute","canViewStatistics","canViewMonetization","canViewBoosts","pendingJoinRequests","canLeave","canEnterVoiceChat","canCreateVoiceChat","canShowBoostModal","onJoinRequestsClick","onSubscribeChannel","onSearchClick","onAsMessagesClick","enterMessageSelectMode","sendBotCommand","restartBot","requestMasterAndJoinGroupCall","createGroupCall","openLinkedChat","openAddContactDialog","openFrozenAccountModal","requestMasterAndRequestCall","toggleStatistics","openMonetizationStatistics","openBoostStatistics","openGiftModal","openThreadWithInfo","openCreateTopicPanel","openEditTopicPanel","toggleManagement","togglePeerTranslations","setViewForumAsMessages","openBoostModal","setIsMenuOpen","shouldCloseFast","setShouldCloseFast","setIsDeleteModalOpen","setIsMuteModalOpen","isViewGroupInfoShown","areAllGiftsDisallowed","closeMenu","handleViewGroupInfo","handleStartBot","command","handleRestartBot","handleUnmuteClick","handleMuteClick","handleCreateTopicClick","handleEditClick","handleEditTopicClick","handleViewAsTopicsClick","handleEnterVoiceChatClick","handleLinkedChatClick","handleGiftClick","forUserId","handleAddContactClick","handleSubscribe","handleVideoCall","handleCall","handleStatisticsClick","handleMonetizationClick","handleBoostClick","handleEnableTranslations","handleSelectMessages","handleOpenAsMessages","handleBlock","handleUnblock","botButtons","commandButtons","cmd","hasPrivacyCommand","deleteTitle","MenuSeparator","DeleteChatModal","isSavedDialog","MiddleSearchResult","senderPeer","messageChat","shouldShowChat","hiddenForwardTitle","hiddenUserName","senderName","getMessageSenderName","topRow","LastMessageMeta","meta","MessageSummary","truncateLength","CHANNELS_PEER","titleKey","RESULT_ITEM_CLASS_NAME","runDebouncedForSearch","requestedQuery","savedTag","fetchingQuery","isHashtag","selectCurrentMiddleSearch","lastSearchQuery","savedTags","savedReactionTags","isHistoryCalendarOpen","isHashtagQuery","searchType","MiddleSearch","updateMiddleSearch","resetMiddleSearch","performMiddleSearch","closeMiddleSearch","openHistoryCalendar","loadSavedReactionTags","shouldCancelSearchRef","focusedIndex","setFocusedIndex","canFocusNewer","canFocusOlder","isFullyHidden","setIsFullyHidden","hiddenTimerRef","maybeLongPressActiveRef","isFocused","markFocused","markBlurred","isViewAsList","setIsViewAsList","refs","handleClickOutside","useClickOutside","hasResultsContainer","isOnlyHash","areResultsEmpty","hasResultsDropdown","hasQueryData","hasNavigationButtons","focusInput","blurInput","blur","visualViewport","mainEl","pageTop","requestNextMutation","prevIsCalendarOpen","savedTagsArray","hasSavedTags","areSavedTagsDisabled","handleQueryChange","newQuery","removeListeners","fastRaf","viewportResults","searchResultKey","originalSender","ANONYMOUS_USER_ID","selectForwardedSender","handleMessageClick","getSearchResultKey","handleTriggerViewStyle","foundResult","updateSearchParams","activateSearchTag","tag","removeSearchSavedTag","handleDeleteTag","handleChangeSearchType","handleFocusOlder","newFocusIndex","handleFocusNewer","renderTypeTag","isForTag","selectedType","renderDropdown","dropdown","dropdownHidden","separator","wrap","isChosen","SavedTagButton","withCount","searchTypes","teactOrderKey","focused","mobile","withDropdown","adaptSearchBorders","canClose","resultsItemSelector","hasUpButton","hasDownButton","onStartBackspace","withBackIcon","onUpClick","onDownClick","searchTags","savedSearchTag","icons","getDayStartAt","counter","viewStyle","mobileNavigation","navigationButton","navigationDisabled","manualGroups","manualGroupNames","group","ScrollableSearchInputWithEmojis","onGroupSelect","activeGroup","setActiveGroup","onInputReset","backIconAsButton","emojiPickerStyles","group_name","favorite","effect","emojiGroups","chatStickerSetId","effectStickers","effectEmojis","recentStickers","selectShouldLoopStickers","StickerPicker","isForEffects","loadRecentStickers","addRecentSticker","unfaveSticker","faveSticker","removeRecentSticker","emojisCategoryFound","setEmojisCategoryFound","packs","seenId","uniqueStickers","getStickerSearch","_emojiKeywords","groupSelected","setGroupSelected","handleEmojiGroupSelect","onlyUniqueById","groupCat","emoticons","sendMessageAction","useSendMessageAction","effectSets","existingAddedSetIds","shouldRenderContents","handleStickerSelect","handleStickerUnfave","handleStickerFave","handleMouseMove","handleRemoveRecentSticker","headerStyles","array","seenIds","obj","marginRight","CHAT_STICKER_SET_ID","maxUniqueReactions","enabledReactions","reactionsLimit","ReactionPickerLimited","isTouchScreen","currentReactions","shouldUseCurrentReactions","allAvailableReactions","reactionsToSort","sortReactions","allowed","pickerHeight","pickerWidth","gapWidth","itemsInRow","pickerMaxHeight","REACTION_SELECTOR_WIDTH","availableEffectById","storyPeerId","sendAsMessage","areSomeReactionsAllowed","areAllReactionsAllowed","areCustomAllowed","shouldUseFullPicker","isForbidden","ReactionPicker","toggleReaction","closeReactionPicker","saveEffectInDraft","requestEffectInComposer","addLocalPaidReaction","openPaidReactionModal","renderedMessageId","renderedChatId","renderedStoryPeerId","renderedStoryId","storedPosition","renderingPosition","isDense","deltaX","FULL_PICKER_SHIFT_DELTA","handleToggleCustomReaction","shouldAddToRecent","handleToggleReaction","handleReactionContextMenu","handleStoryReactionSelect","customEmojiMessage","parseHtmlAsFormattedText","buildCustomEmojiHtml","isReaction","availableEffects","effectId","effectStickerId","chosenOrder","backdropExcludedSelector","selectAfterNode","node","range","createRange","setStartAfter","setEndAfter","collapse","selection","getSelection","removeAllRanges","addRange","div","BLUR_CANVAS_SIZE","AttachmentModalItem","attachment","shouldDisplayCompressed","shouldDisplayGrouped","onToggleSpoiler","displayType","quick","SUPPORTED_PHOTO_CONTENT_TYPES","mimeType","SUPPORTED_VIDEO_CONTENT_TYPES","getDisplayType","handleSpoilerClick","extension","getFileExtension","previewData","shouldSkipGrouping","shouldDisplaySpoiler","shouldSendAsSpoiler","shouldRenderOverlay","rootClassName","MediaSpoiler","isFullyVisible","isHorizontal","viewportY1","viewportY2","y2","findInViewport","selectorOrElements","shouldContainBottom","allElements","visibleIndexes","isFound","setTooltipItemVisible","useKeyboardNavigation","shouldSaveSelectionOnUpdateItems","shouldRemoveSelectionOnReset","shouldStartOnFirstItem","noArrowSelectLoop","noArrowNavigation","shouldSelectOnTab","selectedItemIndex","setSelectedItemIndex","getSelectedIndex","handleArrowKey","handleItemSelect","altKey","metaKey","shiftKey","isSelectionOutOfRange","onUp","onDown","onTab","MentionTooltip","onInsertUserName","filteredUsers","handleUserSelect","forceFocus","handleSelectMention","selectedMentionIndex","prevChatMembers","renderedChatMembers","ATTACHMENT_MODAL_INPUT_ID","attachmentSettings","baseEmojiKeywords","groupChatMembers","customEmojiForEmoji","forEmoji","captionLimit","AttachmentModal","richInputCtx","attachments","getHtml","editingMessage","canShowCustomSendMenu","isForMessage","shouldSuggestCompression","shouldForceCompression","shouldForceAsFile","isForCurrentMessageList","forceDarkTheme","onAttachmentsUpdate","onSend","onFileAppend","onClear","onSendSilent","onSendScheduled","onRemoveSymbol","canSchedule","onSendWhenOnline","svgRef","addRecentCustomEmoji","addRecentEmoji","updateAttachmentSettings","mainButtonRef","hideTimeoutRef","prevAttachments","renderingAttachments","isEditing","groupedId","notEditingFile","getAttachmentMediaType","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","shouldSendCompressed","setShouldSendCompressed","shouldCompress","isSendingCompressed","shouldSendGrouped","setShouldSendGrouped","isInvertedMedia","handleAttachmentsScroll","areAttachmentsNotScrolled","areAttachmentsScrolledToBottom","handleCaptionScroll","isCaptionNotScrolled","renderingIsOpen","isHovered","markHovered","unmarkHovered","hasMedia","hasOnlyMedia","audio","hasSpoiler","isEverySpoiler","isEmojiTooltipOpen","filteredEmojis","filteredCustomEmojis","insertEmoji","closeEmojiTooltip","useEmojiTooltip","isCustomEmojiTooltipOpen","insertCustomEmoji","closeCustomEmojiTooltip","useCustomEmojiTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","setIsInvertedMedia","removeAllSelections","isCustomSendMenuOpen","sendAttachments","shouldSendScheduled","handleSendSilent","handleSendClick","handleScheduleClick","handleFilesDrop","dataTransfer","getFilesFromDataTransferItems","handleDocumentSelect","handleEnableSpoilers","handleDisableSpoilers","handleToggleSpoiler","svg","baseVal","leftChars","leftCharsBeforeLimit","html","innerHTML","fixImageContent","br","replaceWith","textContent","isQuickGallery","areAllPhotos","areAllVideos","areAllAudios","SUPPORTED_AUDIO_CONTENT_TYPES","hasAnySpoilerable","isMultiple","canInvertMedia","attachmentsLength","isBottomDividerShown","buttonSendCaption","onDragEnter","onDrop","onDragOver","onDragLeave","relatedTarget","toTarget","fromTarget","rx","uniqueId","EmojiTooltip","CustomEmojiTooltip","SymbolMenuButton","isAttachmentModal","canSendPlainText","MessageInput","isAttachmentModalInput","customEmojiPrefix","EDITABLE_INPUT_MODAL_ID","canAutoFocus","shouldSuppressFocus","onSuppressedFocus","CustomSendMenu","onSendSchedule","PollModal","isQuiz","shouldBeAnonymous","questionInputRef","optionsListRef","question","setQuestion","setOptions","isAnonymous","setIsAnonymous","isMultipleAnswers","setIsMultipleAnswers","isQuizMode","setIsQuizMode","solutionInputCtx","useRichInput","correctOption","setCorrectOption","hasErrors","setHasErrors","editable","clearInput","addNewOption","newOptions","behavior","handleCreate","isNoCorrectOptionError","answers","correct","questionTrimmed","substring","optionsTrimmed","o","summary","multipleChoice","quiz","getFormattedText","correctAnswers","solution","solutionEntities","updateOption","removeOption","handleCorrectOptionChange","handleIsAnonymousChange","handleMultipleAnswersChange","handleQuizModeChange","handleKeyPress","handleQuestionChange","getQuestionError","getOptionsError","renderOptions","onKeyPress","renderQuizNoOptionError","RichInput","TransitionHelper","isTransitioned","EsgEmojiPicker","recentEmojisRef","getEmojisSearch","renderCategoryButton","stripeLeft","idx","smiley","renderSmiley","GifButton","gif","onUnsaveClick","hasVideoPreview","getVideoMediaHash","withThumb","videoHash","getVideoPreviewMediaHash","videoData","shouldRenderVideo","isVideoReady","handleUnsaveClick","handleContextDelete","preload","gifs","saved","gifSearch","GifPicker","canSendGifs","onGifSelect","loadSavedGifs","saveGif","setGifSearchQuery","searchMoreGifs","tabId","debounceMs","shouldUnsave","handleSearchMoreGifs","SymbolMenuTabs","SYMBOL_MENU_TAB_TITLES","GIFs","SYMBOL_MENU_TAB_ICONS","SymbolMenuFooter","onSearchOpen","renderTabButton","handleSearchOpen","isLeftColumnShown","isBackgroundTranslucent","SymbolMenu","isMessageComposer","menuPositionOptions","setRecentEmojis","setRecentCustomEmojis","recentCustomEmojisRef","canUpdateStickerSetsOrder","isFrom","mobileClassName","ChatCommand","withAvatar","freezeWhenClosed","ChatCommandTooltip","quickReplies","quickReplyMessages","self","sendQuickReply","handleSendCommand","handleSendQuickReply","quickReplyId","quickRepliesWithDescription","reply","topMessageId","shortcut","handleKeyboardSelect","selectedCommandIndex","isEmpty","BotCommandMenu","botCommand","StickerTooltip","prevStickers","displayedStickers","clearCustomEmojiForEmoji","ce","emojiButton","COMPOSER_EMOJI_SIZE_PICKER","isOpenToBottom","onRemoveEffect","withEffects","hasCurrentEffect","effectReactions","onToggleReaction","isInSavedMessages","isInStoryViewer","openEffectPicker","displayScheduleUntilOnline","setDisplayScheduleUntilOnline","areItemsHidden","hideItems","showItems","markIsReady","unmarkIsReady","handleOpenMessageEffectsPicker","ReactionSelector","onShowMore","TEXT_FORMAT_BY_TAG_NAME","B","STRONG","I","EM","U","DEL","STRIKE","CODE","SPAN","BLOCKQUOTE","TEXT_FORMATTER_SAFE_AREA_PX","TextFormatter","shouldOpen","disablePreview","linkUrlInputRef","isEditingLink","setIsEditingLink","isLinkControlOpen","openLinkControl","closeLinkControl","setLinkUrl","inputClassName","setInputClassName","selectedTextFormats","setSelectedTextFormats","useVirtualBackdrop","sel","selectionS","selectedFormats","formNode","commonAncestorContainer","textFormat","tagName","parentElement","linkSelSaver","startLinkControl","collapsed","cloneRange","getSelectedElement","updateInputStyles","scrollWidth","getFormatButtonClassName","fKey","monospace","handleSpoilerText","spoiler","entityType","ApiMessageEntityTypes","Spoiler","getSelectedHtml","execCommand","handleBoldText","handleItalicText","italic","handleUnderlineText","underline","handleStrikethroughText","strikethrough","handleMonospaceText","isCollapsed","previousCode","currentCode","handleLinkUrlConfirm","formattedLinkUrl","encodeURI","setSelRange","shouldDropCustomEmoji","handleQuote","quote","getRangeAt","isBlockquote","childNodes","shouldDropQuotes","handlePreview","startPreview","useRichEditableKeyboardListener","priority","RichInputKeyboardPriority","Tool","onKeydown","u","m","p","q","getKeyFromEvent","linkUrlConfirmClassName","anchorPosition","setAnchorPosition","selectionRange","selectionRect","rootRect","autoComplete","CustomEmojiButton","listEmojis","handleSelectEmoji","handleCustomEmojiClick","selectedIndex","prevSelectedIndex","setItemVisible","BaseResult","thumbnailDataUrl","getWebDocumentHash","decoding","ArticleResult","inlineResult","webThumbnail","GifResult","_gif","MediaResult","isForGallery","thumbnailBlobUrl","getPhotoMediaHash","StickerResult","STICKER_SIZE_INLINE_BOT_RESULT","InlineBotTooltip","isGallery","inlineBotResults","switchPm","switchWebview","onSelectResult","startBot","requestSimpleWebView","renderedIsGallery","handleSendPm","param","handleOpenWebview","isFromSwitchWebView","prevInlineBotResults","renderedInlineBotResults","sensitiveArea","inlineBotResult","SendAsMenu","selectedSendAsId","sendAsPeerIds","saveDefaultSendAs","markMouseInside","sendAsId","selectedSendAsIndex","avatarClassName","noFake","membersCount","StickerSetResult","areStickersLoaded","premiumStickerIds","coverStickerIds","covers","otherStickers","handleStickerClick","canRenderStickers","STICKER_SIZE_SEARCH","selectCurrentStickerSearch","resultIds","featured","openedStickerSetShortName","StickerSearch","loadFeaturedStickers","selectCurrentGifSearch","canPostInChat","GifSearch","handleGifClick","hasResults","postStatistic","StatisticsRecentMessage","toggleMessageStatistics","StatisticsRecentPostMeta","toggleStoryStatistics","imgBlobUrl","withStorySolid","forceUnreadStorySolid","lovelyChartPromise","LovelyChart","CHANNEL_GRAPHS_TITLES","growthGraph","followersGraph","muteGraph","topHoursGraph","viewsBySourceGraph","newFollowersBySourceGraph","languagesGraph","interactionsGraph","reactionsByEmotionGraph","storyInteractionsGraph","storyReactionsByEmotionGraph","CHANNEL_GRAPHS","GROUP_GRAPHS_TITLES","membersGraph","messagesGraph","actionsGraph","GROUP_GRAPHS","statistics","selectStatistics","dcId","statisticsDcId","messagesById","storiesById","selectPeerStories","Statistics","setIsReady","loadedCharts","loadStatistics","loadStatisticsAsyncGraph","graphs","graphTitles","graph","token","isPercentage","ensureLovelyChart","zoomToken","create","zoomOutLabel","StatisticsOverview","recentPosts","StatisticsRecentStory","StatisticsMessagePublicForward","openChatByUsername","GRAPH_TITLES","viewsGraph","reactionsGraph","GRAPHS","currentMessage","currentMessageId","loadMessageStatistics","loadMessagePublicForwards","publicForwards","publicForwardsData","STATISTICS_PUBLIC_FORWARDS_LIMIT","currentStory","loadStoryStatistics","loadStoryPublicForwards","StatisticsStoryPublicForward","answer","voters","offsets","pollResults","PollAnswerResults","answerVote","totalVoters","loadPollOptionResults","closePollResults","prevVotersCount","votersCount","areVotersLoaded","shouldResetVoters","handleViewMoreClick","handleMemberClick","leftVotersCount","ShowMoreButton","renderViewMoreButton","poll","selectPollFromMessage","PollResults","resultsByOption","buildCollectionByKey","ICON_SIZE","createTopicPanel","CreateTopic","createTopic","iconColorIndex","setIconColorIndex","iconEmojiId","setIconEmojiId","handleIconClick","getTopicColors","handleCreateTopic","iconColor","dummyTopic","noLoopLimit","editTopicPanel","EditTopic","editTopic","isGeneral","GENERAL_TOPIC_ID","newTitle","handleEditTopic","ERROR_NAME_MISSING","management","ManageBot","setBotInfo","uploadContactProfilePhoto","startBotFatherConversation","isFieldTouched","markFieldTouched","unmarkProfileTouched","isAvatarTouched","markAvatarTouched","unmarkAvatarTouched","currentName","setName","ManagementProgress","handleNameChange","trimmedName","handleChangeEditIntro","handleChangeEditCommands","handleChangeSettings","isSuggestRef","handleSelectAvatar","isSuggest","CHANNEL_TITLE_EMPTY","canChangeInfo","canInvite","exportedInvites","ManageChannel","updateChat","closeManagement","leaveChannel","deleteChannel","loadExportedChatInvites","loadChatJoinRequests","currentTitle","currentAbout","isDeleteDialogOpen","openDeleteDialog","closeDeleteDialog","isRevoked","adminsCount","removedUsersCount","kickedMembers","handleClickEditType","ManagementScreens","ChatPrivacyType","handleClickDiscussion","Discussion","handleClickReactions","Reactions","handleClickAdministrators","ChatAdministrators","handleClickInvites","Invites","handleClickRequests","JoinRequests","handleSetPhoto","handleAboutChange","handleUpdateChannel","trimmedTitle","trimmedAbout","handleClickSubscribers","ChannelSubscribers","handleRemovedUsersClick","ChannelRemovedUsers","handleDeleteChannel","chatReactionsDescription","enabledLength","totalLength","isChannelPublic","formatInteger","joinRequests","ManageChatAdministrators","onChatMemberSelect","toggleSignatures","areSignaturesEnabled","areSignaturesShown","areProfilesEnabled","areProfilesShown","canAddNewAdmins","canToggleSignatures","adminMembers","admins","isOwner","handleAdminMemberClick","promotedByUserId","ChatAdminRights","handleToggleSignatures","handleToggleProfiles","handleAddAdminClick","GroupAddAdmins","getMemberStatus","promotedByUser","selectManagement","maxPublicLinks","privateInviteLink","inviteLink","ManageChatPrivacyType","updatePublicLink","updatePrivateLink","toggleIsProtected","resetManagementError","privacyType","setPrivacyType","isRevokeConfirmDialogOpen","openRevokeConfirmDialog","closeRevokeConfirmDialog","isUsernameLostDialogOpen","openUsernameLostDialog","closeUsernameLostDialog","handleOptionChange","c","radioGroup","handleForwardingOptionChange","handleSave","handleMakeChannelPrivateConfirm","shouldDisableUsernames","handleRevokePrivateLink","langPrefix1","langPrefix2","forwardingOptions","chatMembers","RemoveGroupUserModal","loadMoreMembers","usersId","availableMemberIds","canDeleteMembers","removedMembers","ManageChatRemovedUsers","isRemoveUserModalOpen","openRemoveUserModal","closeRemoveUserModal","getRemovedBy","kickedByUserId","kickedByUser","getContextActions","forDiscussionIds","linkedChat","ManageDiscussion","loadGroupsForDiscussion","linkDiscussionGroup","unlinkDiscussionGroup","toggleJoinRequest","toggleJoinToSend","linkedGroupId","setLinkedGroupId","isConfirmUnlinkGroupDialogOpen","openConfirmUnlinkGroupDialog","closeConfirmUnlinkGroupDialog","isConfirmLinkGroupDialogOpen","openConfirmLinkGroupDialog","closeConfirmLinkGroupDialog","isJoinToSend","setIsJoinToSend","isJoinRequest","setIsJoinRequest","handleUnlinkGroupSessions","Initial","handleLinkGroupSessions","handleJoinToSendCheck","handleJoinRequestCheck","DiscussionGroups","STICKER_SIZE_DISCUSSION_GROUPS","linkedGroup","renderLinkGroupHeader","hasPrivateLink","renderLinkGroupConfirmText","GROUP_TITLE_EMPTY","ALL_PERMISSIONS","TOTAL_PERMISSIONS_COUNT","limitReachedModal","hasLinkedChannel","isBasicGroup","canEditForum","isChannelsPremiumLimitReached","ManageGroup","togglePreHistoryHidden","deleteChat","toggleForum","isForumEnabled","setIsForumEnabled","isPublicGroup","isPreHistoryHiddenCheckboxRef","handleClickPermissions","GroupPermissions","handleUpdateGroup","handleClickMembers","GroupMembers","handleTogglePreHistory","isPreHistoryHidden","handleForumToggle","newIsForumEnabled","checkbox","enabledPermissionsCount","handleDeleteGroup","isForForum","isPromotedByCurrentUser","isFormFullyDisabled","defaultRights","adminRights","hasFullInfo","ManageGroupAdminRights","isNewAdmin","selectedUserId","updateChatAdmin","isDismissConfirmationDialogOpen","openDismissConfirmationDialog","closeDismissConfirmationDialog","customTitle","setCustomTitle","selectedChatMember","selectedAdminMember","handleSavePermissions","handleDismissAdmin","memberStatus","handleCustomTitleChange","postMessages","editMessages","postStories","editStories","deleteStories","banUsers","addAdmins","manageCall","anonymous","areParticipantsHidden","hiddenMembersMinCount","canHideParticipants","canAddMembers","globalUserIds","ManageGroupMembers","noAdmins","toggleParticipantsHidden","setNewChatMembersDialogState","deletingUserId","setDeletingUserId","adminIds","usePeerStoriesPolling","shouldUseSearchResults","listedIds","ChatNewAdminRights","handleDeleteMembersModalClose","handleToggleParticipantsHidden","handleNewMemberDialogOpen","newChatMembersProgress","NewChatMembersProgress","memberId","DeleteMemberModal","arePaidMessagesAvailable","groupPeersPaidStars","ManageGroupPermissions","updateChatDefaultBannedRights","updatePaidMessagesPrice","GroupRemovedUsers","handleAddExceptionClick","GroupUserPermissionsCreate","handleExceptionMemberClick","GroupUserPermissions","isPriceForMessagesChanged","markPriceForMessagesChanged","unmarkPriceForMessagesChanged","isPriceForMessagesOpen","setIsPriceForMessagesOpen","handleUpdatePaidMessagesPrice","handleUpdatePermissions","exceptionMembers","getMemberExceptions","getLangKeyForBannedRightKey","translatedString","handleChargeStarsForMessages","arePermissionsChanged","arePermissionsLoading","ManageGroupUserPermissions","selectedChatMemberId","isBanConfirmationDialogOpen","openBanConfirmationDialog","closeBanConfirmationDialog","handleBanFromGroup","viewMessages","ManageGroupUserPermissionsCreate","DEFAULT_USAGE_LIMITS","DEFAULT_EXPIRE_DATE","hour","week","DEFAULT_CUSTOM_EXPIRE_DATE","editingInvite","ManageInvite","editExportedChatInvite","exportChatInvite","setIsRequestNeeded","selectedExpireOption","setSelectedExpireOption","customUsageLimit","setCustomUsageLimit","selectedUsageOption","setSelectedUsageOption","isSubmitBlocked","setIsSubmitBlocked","oldEditingInvite","editingTitle","usageLimit","editingIsRequestNeeded","minSafeDate","handleIsRequestChange","handleCustomUsageLimitChange","parseInt","handleSaveClick","formatFullDate","n","importers","requesters","ManageInviteInfo","loadChatInviteImporters","loadChatInviteRequesters","usage","adminId","renderImporters","importer","joinTime","isFromChatList","renderRequesters","requester","BULLET","inviteComparator","i1","i2","isPermanent","i1IsPermanent","i1Usage","i1Date","i2IsPermanent","i2Usage","i2Date","revokedInvites","revokedExportedInvites","ManageInvites","setEditingExportedInvite","deleteExportedChatInvite","deleteRevokedExportedChatInvites","setOpenedInviteInfo","isDeleteRevokeAllDialogOpen","openDeleteRevokeAllDialog","closeDeleteRevokeAllDialog","isRevokeDialogOpen","openRevokeDialog","closeRevokeDialog","revokingInvite","setRevokingInvite","deletingInvite","setDeletingInvite","hasDetailedCountdown","MILLISECONDS_IN_DAY","chatMainUsername","primaryInvite","primaryInviteLink","temporalInvites","revokeInvite","askToRevoke","handleCreateNewClick","EditInvite","handlePrimaryRevoke","handleDeleteAllRevoked","showInviteInfo","InviteInfo","deleteInvite","askToDelete","copyLink","prepareUsageText","requested","formatCountdown","getInviteIconClass","prepareContextActions","editInvite","Invite","STICKER_SIZE_INVITES","withPrimaryColor","JoinRequest","hideChatJoinRequest","createClassNameBuilder","fixedDate","dateString","isToday","formatHumanDate","handleAcceptRequest","isApproved","handleRejectRequest","handleUserClick","ManageJoinRequests","hideAllChatJoinRequests","isAcceptAllDialogOpen","openAcceptAllDialog","closeAcceptAllDialog","isRejectAllDialogOpen","openRejectAllDialog","closeRejectAllDialog","handleAcceptAllRequests","handleRejectAllRequests","STICKER_SIZE_JOIN_REQUESTS","MAX_UNIQUE_REACTIONS","ManageReactions","setChatEnabledReactions","localEnabledReactions","setLocalEnabledReactions","localReactionsLimit","setLocalReactionsLimit","reactionsOptions","handleSaveReactions","availableActiveReactions","localAllowedReactions","enabledAllowedReactions","localReaction","enabledReaction","handleReactionsOptionChange","handleReactionChange","local","handleReactionsLimitChange","renderReactionsMaxCountValue","shouldShowReactionsLimit","isCenteredLayout","notPersonalPhoto","ManageUser","isResetPersonalPhotoDialogOpen","openResetPersonalPhotoDialog","closeResetPersonalPhotoDialog","isNotificationsEnabled","setIsNotificationsEnabled","handleNotificationChange","handleDeleteContact","handleSuggestPhoto","handleSetPersonalPhoto","handleResetPersonalAvatar","canSetPersonalPhoto","noEmojiStatus","withFullInfo","noPersonalPhoto","managementType","selectCurrentManagementType","Management","GroupRecentActions","VISA","MASTERCARD1","MASTERCARD2","MIR","CardType","cards","Default","Visa","Mastercard","Mir","detectCardType","cardNumber","streetLine1","streetLine2","city","countryIso2","postCode","shipping","cardholder","expiry","cvv","billingCountry","billingZip","saveInfo","saveCredentials","formErrors","tipAmount","savedCredentialId","reducer","Checkout","invoice","shippingPrices","checkoutInfo","totalPrice","onAcceptTos","needAddress","hasShippingOptions","savedCredentials","isPaymentFormUrl","setPaymentStep","isInteractive","termsUrl","suggestedTipAmounts","maxTipAmount","paymentMethod","paymentProvider","shippingAddress","shippingMethod","photoUrl","useMediaTransition","handleTipsClick","tips","handlePaymentMethodClick","PaymentStep","SavedPayments","PaymentInfo","handleShippingAddressClick","ShippingInfo","handleShippingMethodClick","Shipping","checkoutPicture","forceAspectRatio","checkoutTitle","checkoutDescription","priceInfo","prices","renderPaymentItem","priceInfoItem","priceInfoItemTitle","tipsList","tip","tipsItem","tipsItem_active","shouldOmitFractions","invoiceInfo","renderCheckoutItem","provider","langStringSplit","renderTosLink","tosCheckbox","priceInfoItemMain","checkoutInfoItemInfoTitle","checkoutInfoItemInfoData","ConfirmPayment","noRedirect","onPaymentFormSubmit","messageKey","form","PasswordConfirm","onPasswordChange","clearPaymentError","cardName","onInputChange","useFocusAfterAnimation","animationDuration","CardInput","cardNumberRef","cardType","setCardType","newCardType","formatCardNumber","cardIcon","mastercardIconPath","visaIconPath","mirIconPath","getCardIcon","ExpiryInput","endsWith","formatCardExpiry","canSaveCredentials","needCardholderName","needCountry","needZip","selectCountryRef","handleCardNumberChange","handleCardholderChange","toUpperCase","handleExpiryChange","handleCvvChange","handleCountryChange","handleBillingPostCodeChange","handleChangeSaveCredentials","Select","hasArrow","SavedPaymentCredentials","onNewCardClick","shippingOptions","handleShippingSelect","needEmail","needPhone","needName","phoneRef","handleAddress1Change","handleAddress2Change","handleCityChange","handleStateChange","handlePostCodeChange","handleFullNameChange","handleEmailChange","handleSaveInfoChange","DEFAULT_PROVIDER","DONATE_PROVIDER","SUPPORTED_PROVIDERS","confirmPaymentUrl","stripeCredentials","smartGlocalCredentials","temporaryPassword","isExtendedMedia","nativeParams","nativeProvider","providerName","isProviderError","smartGlocalToken","stripeId","passwordValidUntil","validUntil","PaymentModal","loadPasswordInfo","validateRequestedInfo","sendPaymentForm","sendCredentialsInfo","validatePaymentPassword","setSmartGlocalCardInfo","paymentState","paymentDispatch","twoFaPassword","setTwoFaPassword","prevStep","prevRequestId","canRenderFooter","setStep","nextStep","field","savedInfo","shippingAddressRest","shippingCountry","charAt","handleErrorModalClose","shippingOption","getShippingPrices","cur","getTotalPrice","cardTypeText","detectCardTypeText","findShippingOption","getCheckoutInfo","handleNewCardClick","handleClearPaymentError","sendForm","shippingOptionId","handlePaymentFormSubmit","credentials","validateRequest","requestInfo","getRequestInfo","sendCredentials","expiryMonth","expiryYear","zip","getCredentials","ConfirmPassword","shouldFillRequestedData","isEmailRequested","isPhoneRequested","isNameRequested","isShippingAddressRequested","modalHeader","isSubmitDisabled","getIsSubmitDisabled","isRecurring","cleanupOnlyKey","currentStep","isPasswordMissing","isEmailSentToProvider","isPhoneSentToProvider","renderModalContent","descriptionKey","renderError","optionId","receipt","ReceiptModal","prevReceipt","renderingReceipt","fullAddress","credentialsTitle","totalAmount","InviteViaLinkModal","sendInviteMessages","closeInviteViaLinkModal","missingUsers","setSelectedMemberIds","unselectableIds","selectableIds","requirePremiumIds","regularIds","isRequiringPremiumToMessage","invitableWithPremiumIds","isRequiringPremiumToInvite","isEveryPremiumBlocksPm","topListPeers","handleSendInviteLink","canSendInviteLink","inviteSectionText","premiumSectionText","hasPremiumSection","hasSelectableSection","lockedUnselectedSubtitle","OneTimeMediaModal","closeOneTimeMediaModal","handlePlayVoice","isOwn","isOwnMessage","closeBtnTitle","voice","OneTimeModal","RoundVideo","onStop","renderMedia","WebAppsCloseConfirmationModal","closeWebAppsCloseConfirmationModal","shouldSkipInFuture","setShouldSkipInFuture","shouldSkipConfirmation","handleSelectWithEnter","freezeUntilDate","freezeAppealUrl","botFreezeAppealId","botFreezeAppealUsername","FrozenAccountModal","closeFrozenAccountModal","handleAppeal","BannedDuck","botLink","hasBackdrop","SEGMENT_COVER_EYES","SEGMENT_UNCOVER_EYE","SEGMENT_COVER_EYE","isFirstMonkeyLoaded","markFirstMonkeyLoaded","isPeekShown","markPeekShown","stikerSize","STICKER_SIZE_AUTH_MOBILE","STICKER_SIZE_AUTH","handleFirstMonkeyLoad","MonkeyClose","playSegment","MonkeyPeek","avatarPeer","avatarWebPhoto","clickable","webPhoto","badge","modalProps","hasButton","limitRemaining","fullClass","isTextFormatterOpen","openTextFormatter","closeTextFormatter","emptyS","RichEditableAttachment","useRichEditable","absoluteCloseButtonColor","headerAvatarPeer","starsNeeded","areOptionsExtended","markOptionsExtended","unmarkOptionsExtended","renderingOptions","canExtend","maxOption","forceShowAll","currentStackedStarsCount","canExtendOptions","isExtended","starsCount","isWide","isOdd","isActiveOption","perUserStarCount","perUserStars","wideOption","optionTop","stackedStars","stackedStar","optionBottom","moreOptions"],"sourceRoot":""}