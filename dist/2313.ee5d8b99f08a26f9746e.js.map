{"version":3,"file":"2313.ee5d8b99f08a26f9746e.js","mappings":"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CAgK,wBACAvF,mBAAoB9nB,EAAO8nB,mBAC3ByF,WACAJ,qBACA6E,sBAAsBC,EAAAA,EAAAA,KAA2BjyB,GACjDkyB,eAAgB7O,KAAyB8O,EAAAA,EAAAA,KAA+BnyB,GACxEoyB,uBAAuBC,EAAAA,EAAAA,KAA4BryB,GACnDsyB,qBAAsBhQ,GAAkByI,IAAmBD,IAAkBuD,EAC7EpU,uBAAwBja,EAAO2rB,SAASC,MAAM3R,uBAC9C4T,oBACA0E,YAAavyB,EAAOwyB,QAAQD,YAC5BvE,eACAyE,mBAAoBzyB,EAAO0yB,aAAaC,aACxCD,aAAc1yB,EAAO0yB,aAAaxwB,KAClCosB,sBACA1G,YACAI,gBAAgBznB,EAAAA,EAAAA,KAAeP,GAAQgoB,eACvC4K,wBAAyB3H,GAAc2H,wBACvC9D,UACAE,mBACAT,sBACAE,gBACAE,oBACAO,oBACD,GAvJenvB,EA5sDwB8yB,EAC1C7c,OACA8c,WACAvD,gBACAwD,gBACA1E,oBACAoB,yBACAuD,UACA7rB,WACA8rB,aACAC,WACAC,UACA5Y,kBACAta,UACAqZ,YACAoR,WACAyC,sBACA3M,mBACAkB,SACAxhB,QACAirB,gBACA6C,gBACAZ,2BACA/J,wBACAgK,yBACAvC,iBACAxI,kBACAqN,aACAiC,iBACAhC,sBACAE,sBACAkC,wBACAxQ,gBACA4O,aACApE,wBACAkE,0BACAkD,oBACApD,uBACAK,oBACAG,uBACAE,mBACAlN,iBACA0I,eACA6F,gBACAlB,wBACArF,yBACAC,4BACAI,qBACAC,iBACAgF,gBACAE,cACAE,sBACAE,eACA1E,cACAC,cACAN,YACAmB,gBACAZ,kBACAE,uBACAyE,iBACAzX,cACA4X,sBACA5J,sBACAnjB,SACA4oB,YACA7B,+BACA2H,4BACAC,mBACAC,WACApyB,aACAkuB,sBACAC,gBACA4C,iBACAE,yBACAnY,0BACA4T,qBACA0E,eACAD,uBACAG,sBACAC,gBACApE,uBACAkF,aACAxL,kBACAJ,aACAgL,2BACA9D,UACAE,mBACAT,uBACAE,iBACAE,oBACAO,wBAEA,MAAM,YACJuE,GAAW,W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","sources":["webpack://telegram-t/./src/components/calls/group/GroupCallTopPane.tsx","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/components/middle/composer/helpers/applyIosAutoCapitalizationFix.ts","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useChatCommandTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useDraft.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEditing.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInlineBotTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useStickerTooltip.ts","webpack://telegram-t/./src/util/voiceRecording.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/AttachMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotKeyboardMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/ComposerEmbeddedMessage.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.async.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/WebPagePreview.tsx","webpack://telegram-t/./src/components/common/Composer.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useAttachmentModal.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useVoiceRecording.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useClipboardPaste.ts","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/components/common/DotAnimation.tsx","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/components/common/LinkField.module.scss?fa18","webpack://telegram-t/./src/components/common/LinkField.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/components/common/PeerColorWrapper.tsx","webpack://telegram-t/./src/components/common/PeerColorWrapper.module.scss?b340","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/common/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/ProfileInfo.module.scss?701a","webpack://telegram-t/./src/components/common/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/components/common/TopicIcon.tsx","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/components/common/embedded/EmbeddedMessage.tsx","webpack://telegram-t/./src/components/common/embedded/EmojiIconBackground.module.scss?aa76","webpack://telegram-t/./src/components/common/embedded/EmojiIconBackground.tsx","webpack://telegram-t/./src/components/common/helpers/boostInfo.ts","webpack://telegram-t/./src/components/common/helpers/formatUsername.ts","webpack://telegram-t/./src/components/common/helpers/renderMessageText.ts","webpack://telegram-t/./src/util/dates/workHours.ts","webpack://telegram-t/./src/components/common/profile/BusinessHours.module.scss?06fd","webpack://telegram-t/./src/components/common/profile/BusinessHours.tsx","webpack://telegram-t/./src/components/common/profile/UserBirthday.module.scss?dc99","webpack://telegram-t/./src/components/common/profile/UserBirthday.tsx","webpack://telegram-t/./src/components/common/profile/ChatExtra.module.scss?9412","webpack://telegram-t/./src/components/common/profile/ChatExtra.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx","webpack://telegram-t/./src/components/left/MuteChatModal.async.tsx","webpack://telegram-t/./src/components/left/main/ChatCallStatus.module.scss?f06e","webpack://telegram-t/./src/components/left/main/ChatCallStatus.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/left/main/ChatBadge.tsx","webpack://telegram-t/./src/components/left/main/ChatFolders.tsx","webpack://telegram-t/./src/components/left/main/Archive.module.scss?6d2a","webpack://telegram-t/./src/components/left/main/Archive.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.module.scss?0952","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.module.scss?bd2b","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/hooks/scroll/useTopOverscroll.tsx","webpack://telegram-t/./src/components/left/main/EmptyForum.module.scss?0a02","webpack://telegram-t/./src/components/left/main/EmptyForum.tsx","webpack://telegram-t/./src/components/left/main/Topic.module.scss?d97e","webpack://telegram-t/./src/components/left/main/Topic.tsx","webpack://telegram-t/./src/components/left/main/hooks/useTopicContextActions.ts","webpack://telegram-t/./src/components/left/main/ForumPanel.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.module.scss?d1a9","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/common/ChatForumLastMessage.module.scss?cb0b","webpack://telegram-t/./src/components/common/ChatForumLastMessage.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatListEntry.tsx","webpack://telegram-t/./src/components/left/main/hooks/useLeftHeaderButtonRtlForumTransition.ts","webpack://telegram-t/./src/components/left/main/hooks/useOrderDiff.ts","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/main/visualEffects/SnapEffectContainer.module.scss?fa7b","webpack://telegram-t/./src/components/main/visualEffects/SnapEffectContainer.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/HeaderActions.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.module.scss?7e9f","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotItem.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/buildAttachment.ts","webpack://telegram-t/./src/util/audio.ts","webpack://telegram-t/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://telegram-t/./src/components/middle/composer/helpers/renderKeyboardButtonText.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useCustomEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/middle/hooks/useHeaderPane.tsx","webpack://telegram-t/./src/components/middle/message/BaseStory.module.scss?d118","webpack://telegram-t/./src/components/middle/message/BaseStory.tsx","webpack://telegram-t/./src/components/middle/message/MessageEffect.module.scss?d23f","webpack://telegram-t/./src/components/middle/message/MessageEffect.tsx","webpack://telegram-t/./src/components/middle/message/Photo.tsx","webpack://telegram-t/./src/components/middle/message/RoundVideo.tsx","webpack://telegram-t/./src/components/middle/message/SponsoredMessageContextMenu.tsx","webpack://telegram-t/./src/components/middle/message/SponsoredMessageContextMenuContainer.tsx","webpack://telegram-t/./src/components/middle/message/Video.tsx","webpack://telegram-t/./src/components/middle/message/WebPage.tsx","webpack://telegram-t/./src/components/middle/message/helpers/webpageType.ts","webpack://telegram-t/./src/components/middle/message/helpers/getCustomAppendixBg.ts","webpack://telegram-t/./src/components/middle/message/helpers/mediaDimensions.ts","webpack://telegram-t/./src/hooks/useOffscreenCanvasBlur.ts","webpack://telegram-t/./src/components/middle/message/hooks/useBlurredMediaThumbRef.ts","webpack://telegram-t/./src/components/middle/message/hooks/useMessageTranslation.ts","webpack://telegram-t/./src/components/middle/message/hooks/useOverlayPosition.ts","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.module.scss?c7b9","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorCustomReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelector.tsx","webpack://telegram-t/./src/components/right/DeleteMemberModal.tsx","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.module.scss?5334","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.tsx","webpack://telegram-t/./src/components/story/StoryRibbonButton.tsx","webpack://telegram-t/./src/components/story/StoryRibbon.tsx","webpack://telegram-t/./src/components/story/StoryToggler.tsx","webpack://telegram-t/./src/components/story/helpers/ribbonAnimation.ts","webpack://telegram-t/./src/components/story/helpers/videoFormats.ts","webpack://telegram-t/./src/components/story/hooks/useStoryPreloader.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaArea.module.scss?fe60","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaSuggestedReaction.tsx","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaWeather.tsx","webpack://telegram-t/./src/util/formatTemperature.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaOverlay.tsx","webpack://telegram-t/./src/global/selectors/calls.ts","webpack://telegram-t/./src/global/selectors/limits.ts","webpack://telegram-t/./src/hooks/media/useUnsupportedMedia.ts","webpack://telegram-t/./src/hooks/polling/usePeerStoriesPolling.ts","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/hooks/schedulers/useIntervalForceUpdate.ts","webpack://telegram-t/./src/hooks/useAsyncResolvers.ts","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/hooks/useEnsureStory.ts","webpack://telegram-t/./src/hooks/useForumPanelRender.ts","webpack://telegram-t/./src/hooks/useHotkeys.ts","webpack://telegram-t/./src/util/parseHotkey.ts","webpack://telegram-t/./src/hooks/useInputFocusOnOpen.ts","webpack://telegram-t/./src/hooks/useLongPress.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/components/common/CalendarModal.async.tsx","webpack://telegram-t/./src/hooks/useSchedule.tsx","webpack://telegram-t/./src/hooks/useSendMessageAction.ts","webpack://telegram-t/./src/hooks/useStreaming.ts","webpack://telegram-t/./src/hooks/window/useBeforeUnload.ts","webpack://telegram-t/./src/hooks/window/useFullscreen.ts","webpack://telegram-t/./src/types/electron.ts","webpack://telegram-t/./src/util/PostMessageConnector.ts","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/util/download.ts","webpack://telegram-t/./src/util/getMessageIdsForSelectedText.ts","webpack://telegram-t/./src/util/imageResize.ts","webpack://telegram-t/./src/util/launchMediaWorkers.ts","webpack://telegram-t/./src/util/map.ts","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/util/memoized.ts","webpack://telegram-t/./src/util/progressiveLoader.ts","webpack://telegram-t/./src/util/systemFilesDialog.ts","webpack://telegram-t/./src/util/visibility/isElementInViewport.ts","webpack://telegram-t/./src/components/story/StoryRibbon.module.scss?8966","webpack://telegram-t/./src/components/story/StoryToggler.module.scss?58fa"],"sourcesContent":["import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiGroupCall } from '../../../api/types';\n\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { selectChatGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useHeaderPane, { type PaneState } from '../../middle/hooks/useHeaderPane';\n\nimport AvatarList from '../../common/AvatarList';\nimport Button from '../../ui/Button';\n\nimport './GroupCallTopPane.scss';\n\ntype OwnProps = {\n  chatId: string;\n  className?: string;\n  onPaneStateChange?: (state: PaneState) => void;\n};\n\ntype StateProps = {\n  groupCall?: ApiGroupCall;\n  isActive: boolean;\n};\n\nconst PREVIEW_AVATARS_COUNT = 3;\n\nconst GroupCallTopPane: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  className,\n  groupCall,\n  onPaneStateChange,\n}) => {\n  const {\n    requestMasterAndJoinGroupCall,\n    subscribeToGroupCallUpdates,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleJoinGroupCall = useCallback(() => {\n    requestMasterAndJoinGroupCall({\n      chatId,\n    });\n  }, [requestMasterAndJoinGroupCall, chatId]);\n\n  const participants = groupCall?.participants;\n\n  const fetchedParticipants = useMemo(() => {\n    if (!participants) {\n      return [];\n    }\n\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    return Object.values(participants)\n      .slice(0, PREVIEW_AVATARS_COUNT)\n      .map(({ id }) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [participants]);\n\n  useEffect(() => {\n    if (!groupCall?.id) return undefined;\n    if (!isActive && groupCall.isLoaded) return undefined;\n\n    subscribeToGroupCallUpdates({\n      id: groupCall.id,\n      subscribed: true,\n    });\n\n    return () => {\n      subscribeToGroupCallUpdates({\n        id: groupCall.id,\n        subscribed: false,\n      });\n    };\n  }, [groupCall?.id, groupCall?.isLoaded, isActive, subscribeToGroupCallUpdates]);\n\n  const renderingParticipantCount = useCurrentOrPrev(groupCall?.participantsCount, true);\n  const renderingFetchedParticipants = useCurrentOrPrev(fetchedParticipants, true);\n\n  const isRendering = Boolean(groupCall && isActive);\n\n  const { ref, shouldRender } = useHeaderPane({\n    isOpen: isRendering,\n    onStateChange: onPaneStateChange,\n  });\n\n  if (!shouldRender) return undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'GroupCallTopPane',\n        className,\n      )}\n      onClick={handleJoinGroupCall}\n    >\n      <div className=\"info\">\n        <span className=\"title\">{lang('VoipGroupVoiceChat')}</span>\n        <span className=\"participants\">{lang('Participants', renderingParticipantCount ?? 0, 'i')}</span>\n      </div>\n      {Boolean(renderingFetchedParticipants?.length) && (\n        <AvatarList size=\"small\" peers={renderingFetchedParticipants} className=\"avatars\" />\n      )}\n      <Button round className=\"join\">\n        {lang('VoipChatJoin')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const groupCall = selectChatGroupCall(global, chatId);\n    const activeGroupCallId = selectTabState(global).isMasterTab ? global.groupCalls.activeGroupCallId : undefined;\n\n    return {\n      groupCall,\n      isActive: activeGroupCallId !== groupCall?.id && Boolean(\n        groupCall\n          ? groupCall.participantsCount > 0 && groupCall.isLoaded\n          : chat && chat.isCallNotEmpty && chat.isCallActive,\n      ),\n    };\n  },\n)(GroupCallTopPane));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type {\n  ApiAudio, ApiMessage, ApiVideo, ApiVoice,\n} from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport type { OldLangFn } from '../../hooks/useOldLang';\nimport type { ISettings } from '../../types';\nimport { ApiMediaFormat } from '../../api/types';\nimport { AudioOrigin } from '../../types';\n\nimport {\n  getMediaDuration,\n  getMediaFormat,\n  getMediaHash,\n  getMediaTransferState,\n  getMessageWebPageAudio,\n  hasMessageTtl,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../global/helpers';\nimport { makeTrackId } from '../../util/audioPlayer';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport renderText from './helpers/renderText';\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useBuffering from '../../hooks/useBuffering';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Button from '../ui/Button';\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport AnimatedIcon from './AnimatedIcon';\nimport Icon from './icons/Icon';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ISettings['theme'];\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  noAvatars?: boolean;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading?: boolean;\n  isTranscribing?: boolean;\n  isTranscribed?: boolean;\n  canDownload?: boolean;\n  canTranscribe?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscriptionError?: boolean;\n  autoPlay?: boolean;\n  onHideTranscription?: (isHidden: boolean) => void;\n  onPlay?: (messageId: number, chatId: string) => void;\n  onPause?: NoneToVoidFunction;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (arg: ApiMessage) => void;\n};\n\nexport const TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 375px)');\nexport const WITH_AVATAR_TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 410px)');\nconst AVG_VOICE_DURATION = 10;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n\nconst Audio: FC<OwnProps> = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  noAvatars,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  isTranscribing,\n  isTranscriptionHidden,\n  isTranscribed,\n  isTranscriptionError,\n  canDownload,\n  canTranscribe,\n  autoPlay,\n  onHideTranscription,\n  onPlay,\n  onPause,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}) => {\n  const {\n    cancelMediaDownload, downloadMedia, transcribeAudio, openOneTimeMediaModal,\n  } = getActions();\n\n  const {\n    content: {\n      audio: contentAudio, voice, video,\n    }, isMediaUnread,\n  } = message;\n  const audio = contentAudio || getMessageWebPageAudio(message);\n  const media = (voice || video || audio)!;\n  const mediaSource = (voice || video);\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const { isRtl } = lang;\n\n  const { isMobile } = useAppLayout();\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = isActivated || PRELOAD;\n  const coverHash = getMediaHash(media, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === AudioOrigin.OneTimeModal;\n  const trackType = isVoice ? (hasTtl ? 'oneTimeVoice' : 'voice') : 'audio';\n\n  const mediaData = useMedia(\n    getMediaHash(media, 'inline'),\n    !shouldLoad,\n    getMediaFormat(media, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMediaHash(media, 'download'),\n    !isDownloading,\n    getMediaFormat(media, 'download'),\n  );\n\n  const handleForcePlay = useLastCallback(() => {\n    setIsActivated(true);\n    onPlay?.(message.id, message.chatId);\n  });\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsActivated(false);\n  });\n\n  const {\n    isBuffered, bufferedRanges, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const noReset = isInOneTimeModal;\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    getMediaDuration(message)!,\n    trackType,\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    Boolean(isActivated || autoPlay),\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message) || hasTtl,\n    undefined,\n    onPause,\n    noReset,\n    hasTtl && !isInOneTimeModal,\n  );\n\n  const reversePlayProgress = 1 - playProgress;\n  const isOwn = isOwnMessage(message);\n  const isReverse = hasTtl && isInOneTimeModal;\n\n  const waveformCanvasRef = useWaveformCanvas(\n    theme,\n    mediaSource,\n    (isMediaUnread && !isOwn && !isReverse) ? 1 : playProgress,\n    isOwn,\n    !noAvatars,\n    isMobile,\n    isReverse,\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (hasTtl) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay?.(message.id, message.chatId);\n    }\n\n    getActions().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && (isPlaying || isDownloading)) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia, isDownloading]);\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (isDownloading) {\n      cancelMediaDownload({ media });\n    } else {\n      downloadMedia({ media, originMessage: message });\n    }\n  });\n\n  const handleSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  });\n\n  const handleStartSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    handleSeek(e);\n  });\n\n  const handleStopSeek = useLastCallback(() => {\n    isSeeking.current = false;\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline || isInOneTimeModal) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek, isInOneTimeModal]);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    isInOneTimeModal && 'non-interactive',\n    origin === AudioOrigin.Inline && 'inline',\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toogle-play-wrapper'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else {\n    buttonClassNames.push(isPlaying ? 'pause' : 'play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <div className={contentClassName}>\n        <div className=\"content-row\">\n          <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n          <div className=\"message-date\">\n            {Boolean(date) && (\n              <Link\n                className=\"date\"\n                onClick={handleDateClick}\n              >\n                {formatPastTimeShort(lang, date * 1000)}\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {withSeekline && (\n          <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n            <span className=\"duration with-seekline\" dir=\"auto\">\n              {playProgress < 1 && `${formatMediaDuration(duration * playProgress, duration)}`}\n            </span>\n            {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n          </div>\n        )}\n        {!withSeekline && renderSecondLine()}\n      </div>\n    );\n  }\n\n  function renderTooglePlayWrapper() {\n    return (\n      <div className={buildClassName(...buttonClassNames)}>\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"smaller\"\n          className=\"toggle-play\"\n          color={coverBlobUrl ? 'translucent-white' : 'primary'}\n          ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n          onClick={handleButtonClick}\n          isRtl={lang.isRtl}\n          backgroundImage={coverBlobUrl}\n          nonInteractive={isInOneTimeModal}\n        >\n          {!isInOneTimeModal && <Icon name=\"play\" />}\n          {!isInOneTimeModal && <Icon name=\"pause\" />}\n          {isInOneTimeModal && (\n            <AnimatedIcon\n              className=\"flame\"\n              tgsUrl={LOCAL_TGS_URLS.Flame}\n              nonInteractive\n              noLoop={false}\n              size={40}\n            />\n          )}\n        </Button>\n        {hasTtl && !isInOneTimeModal && (\n          <Icon name=\"view-once\" />\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      {renderTooglePlayWrapper()}\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            withColor\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {isInOneTimeModal && !shouldRenderSpinner && (\n        <div className={buildClassName('media-loading')}>\n          <ProgressSpinner\n            progress={playProgress}\n            transparent\n            size=\"m\"\n            noCross\n            rotationOffset={3 / 4}\n          />\n        </div>\n      )}\n      {audio && canDownload && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <Icon name={isDownloading ? 'close' : 'arrow-down'} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang,\n        audio,\n        duration,\n        isPlaying,\n        playProgress,\n        bufferedRanges,\n        seekerRef,\n        (isDownloading || isUploading),\n        date,\n        transferProgress,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && mediaSource && renderWithTitle()}\n      {(origin === AudioOrigin.Inline || isInOneTimeModal || isTranscribed) && mediaSource && (\n        renderVoice(\n          mediaSource,\n          seekerRef,\n          waveformCanvasRef,\n          hasTtl ? reversePlayProgress : playProgress,\n          isMediaUnread,\n          isTranscribing,\n          isTranscriptionHidden,\n          isTranscribed,\n          isTranscriptionError,\n          canTranscribe ? handleTranscribe : undefined,\n          onHideTranscription,\n          origin,\n        )\n      )}\n    </div>\n  );\n};\n\nfunction getSeeklineSpikeAmounts(isMobile?: boolean, withAvatar?: boolean) {\n  return {\n    MIN_SPIKES: isMobile ? (TINY_SCREEN_WIDTH_MQL.matches ? 16 : 20) : 25,\n    MAX_SPIKES: isMobile\n      ? (TINY_SCREEN_WIDTH_MQL.matches\n        ? 35\n        : (withAvatar && WITH_AVATAR_TINY_SCREEN_WIDTH_MQL.matches ? 40 : 45))\n      : 75,\n  };\n}\n\nfunction renderAudio(\n  lang: OldLangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = lang;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio!.size * progress)} / ` : undefined}{getFileSizeString(audio!.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          {performer && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer)}</span>\n            </>\n          )}\n          {Boolean(date) && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  media: ApiVoice | ApiVideo,\n  seekerRef: React.Ref<HTMLDivElement>,\n  waveformCanvasRef: React.Ref<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n  isTranscribing?: boolean,\n  isTranscriptionHidden?: boolean,\n  isTranscribed?: boolean,\n  isTranscriptionError?: boolean,\n  onClickTranscribe?: VoidFunction,\n  onHideTranscription?: (isHidden: boolean) => void,\n  origin?: AudioOrigin,\n) {\n  return (\n    <div className=\"content\">\n      <div className=\"waveform-wrapper\">\n        <div\n          className=\"waveform\"\n          draggable={false}\n          ref={seekerRef}\n        >\n          <canvas ref={waveformCanvasRef} />\n        </div>\n        {onClickTranscribe && (\n          // eslint-disable-next-line react/jsx-no-bind\n          <Button onClick={() => {\n            if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n              onHideTranscription(!isTranscriptionHidden);\n            } else if (!isTranscribing) {\n              onClickTranscribe();\n            }\n          }}\n          >\n            <Icon\n              name={(isTranscribed || isTranscriptionError) ? 'down' : 'transcribe'}\n              className={buildClassName(\n                'transcribe-icon',\n                (isTranscribed || isTranscriptionError) && !isTranscriptionHidden && 'transcribe-shown',\n              )}\n            />\n            {isTranscribing && (\n              <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n                <rect\n                  className=\"loading-rect\"\n                  fill=\"transparent\"\n                  width=\"32\"\n                  height=\"24\"\n                  stroke-width=\"3\"\n                  stroke-linejoin=\"round\"\n                  rx=\"6\"\n                  ry=\"6\"\n                  stroke=\"white\"\n                  stroke-dashoffset=\"1\"\n                  stroke-dasharray=\"32,68\"\n                />\n              </svg>\n            )}\n          </Button>\n        )}\n      </div>\n      <p\n        className={buildClassName('voice-duration', origin !== AudioOrigin.OneTimeModal && isMediaUnread && 'unread')}\n        dir=\"auto\"\n      >\n        {playProgress === 0 || playProgress === 1\n          ? formatMediaDuration(media!.duration) : formatMediaDuration(media!.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ISettings['theme'],\n  media?: ApiVoice | ApiVideo,\n  playProgress = 0,\n  isOwn = false,\n  withAvatar = false,\n  isMobile = false,\n  isReverse = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!media) {\n      return undefined;\n    }\n\n    const { waveform, duration } = media;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const { MIN_SPIKES, MAX_SPIKES } = getSeeklineSpikeAmounts(isMobile, withAvatar);\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [isMobile, media, withAvatar]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    const fillStyle = isOwn ? fillOwnColor : fillColor;\n    const progressFillStyle = isOwn ? progressFillOwnColor : progressFillColor;\n\n    renderWaveform(canvas, spikes, isReverse ? 1 - playProgress : playProgress, {\n      peak,\n      fillStyle,\n      progressFillStyle,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme, isReverse]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n) {\n  return (\n    <div\n      className=\"seekline\"\n      ref={seekerRef as React.Ref<HTMLDivElement>}\n    >\n      {bufferedRanges.map(({ start, end }) => (\n        <div\n          className=\"seekline-buffered-progress\"\n          style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n        />\n      ))}\n      <span className=\"seekline-play-progress\">\n        <i\n          className=\"seekline-play-progress-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          className=\"seekline-thumb-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(Audio);\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, (height + spikeHeight) / 2, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","/* eslint-disable no-bitwise */\n\n// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","import { IS_IOS } from '../../../../util/windowEnvironment';\n\nlet resetInput: HTMLInputElement;\n\nif (IS_IOS) {\n  resetInput = document.createElement('input');\n  resetInput.classList.add('for-ios-autocapitalization-fix');\n  document.body.appendChild(resetInput);\n}\n\n// https://stackoverflow.com/a/55652503\nexport default function applyIosAutoCapitalizationFix(inputEl: HTMLElement) {\n  resetInput.focus();\n  inputEl.focus();\n}\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport type { ApiBotCommand, ApiQuickReply } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst RE_COMMAND = /^\\/([\\w@]{1,32})?$/i;\n\nconst THROTTLE = 300;\n\nexport default function useChatCommandTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  botCommands?: ApiBotCommand[] | false,\n  chatBotCommands?: ApiBotCommand[],\n  quickReplies?: Record<number, ApiQuickReply>,\n) {\n  const [filteredBotCommands, setFilteredBotCommands] = useState<ApiBotCommand[] | undefined>();\n  const [filteredQuickReplies, setFilteredQuickReplies] = useState<ApiQuickReply[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const detectCommandThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('/') ? prepareForRegExp(html).match(RE_COMMAND)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getCommand = useDerivedSignal(\n    detectCommandThrottled, [detectCommandThrottled, getHtml], true,\n  );\n\n  useEffect(() => {\n    const command = getCommand();\n    const commands = botCommands || chatBotCommands;\n    if (!command || (!commands && !quickReplies)) {\n      setFilteredBotCommands(undefined);\n      setFilteredQuickReplies(undefined);\n      return;\n    }\n\n    const filter = command.substring(1);\n    const nextFilteredBotCommands = commands?.filter((c) => !filter || c.command.startsWith(filter));\n\n    setFilteredBotCommands(\n      nextFilteredBotCommands?.length ? nextFilteredBotCommands : undefined,\n    );\n\n    const newFilteredQuickReplies = Object.values(quickReplies || {}).filter((quickReply) => (\n      !filter || quickReply.shortcut.startsWith(filter)\n    ));\n\n    setFilteredQuickReplies(\n      newFilteredQuickReplies?.length ? newFilteredQuickReplies : undefined,\n    );\n  }, [getCommand, botCommands, chatBotCommands, quickReplies]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isOpen: Boolean((filteredBotCommands?.length || filteredQuickReplies?.length) && !isManuallyClosed),\n    close: markManuallyClosed,\n    filteredBotCommands,\n    filteredQuickReplies,\n  };\n}\n","import { useEffect, useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiDraft, ApiMessage } from '../../../../api/types';\nimport type { ThreadId } from '../../../../types';\nimport type { RichInputCtx } from '../../../common/richinput/useRichEditable';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DRAFT_DEBOUNCE } from '../../../../config';\nimport {\n  requestMeasure,\n} from '../../../../lib/fasterdom/fasterdom';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../../hooks/useLayoutEffectWithPrevDeps';\nimport useRunDebounced from '../../../../hooks/useRunDebounced';\nimport { useStateRef } from '../../../../hooks/useStateRef';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nlet isFrozen = false;\n\nfunction freeze() {\n  isFrozen = true;\n\n  requestMeasure(() => {\n    isFrozen = false;\n  });\n}\n\nconst useDraft = ({\n  draft,\n  chatId,\n  threadId,\n  richInputCtx,\n  editedMessage,\n  isDisabled,\n} : {\n  draft?: ApiDraft;\n  chatId: string;\n  threadId: ThreadId;\n  richInputCtx: RichInputCtx;\n  editedMessage?: ApiMessage;\n  isDisabled?: boolean;\n}) => {\n  const { saveDraft, clearDraft, loadCustomEmojis } = getActions();\n\n  const isTouchedRef = useRef(false);\n\n  useEffect(() => {\n    const html = richInputCtx.editable.htmlS();\n    const isLocalDraft = draft?.isLocal !== undefined;\n    if (getTextWithEntitiesAsHtml(draft?.text) === html && !isLocalDraft) {\n      isTouchedRef.current = false;\n    } else {\n      isTouchedRef.current = true;\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [draft, richInputCtx.editable.htmlS]);\n  useEffect(() => {\n    isTouchedRef.current = false;\n  }, [chatId, threadId]);\n\n  const isEditing = Boolean(editedMessage);\n\n  const updateDraft = useLastCallback((prevState: { chatId?: string; threadId?: ThreadId } = {}) => {\n    if (isDisabled || isEditing || !isTouchedRef.current) return;\n\n    const contents = richInputCtx.editable.getFormattedText(false);\n    if (contents.text) {\n      requestMeasure(() => {\n        saveDraft({\n          chatId: prevState.chatId ?? chatId,\n          threadId: prevState.threadId ?? threadId,\n          text: contents,\n        });\n      });\n    } else {\n      clearDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n        shouldKeepReply: true,\n      });\n    }\n  });\n\n  const runDebouncedForSaveDraft = useRunDebounced(DRAFT_DEBOUNCE, true, undefined, [chatId, threadId]);\n\n  // Restore draft on chat change\n  useLayoutEffectWithPrevDeps(([prevChatId, prevThreadId, prevDraft]) => {\n    if (isDisabled) {\n      return;\n    }\n    const isTouched = isTouchedRef.current;\n\n    if (chatId === prevChatId && threadId === prevThreadId) {\n      if (isTouched && !draft) return; // Prevent reset from other client if we have local edits\n      if (!draft && prevDraft) {\n        richInputCtx.editable.clearInput();\n      }\n\n      if (isTouched) return;\n    }\n\n    if (editedMessage || !draft) {\n      return;\n    }\n\n    richInputCtx.editable.setFormattedText(draft.text ?? { text: '' });\n\n    const customEmojiIds = draft.text?.entities\n      ?.map((entity) => entity.type === ApiMessageEntityTypes.CustomEmoji && entity.documentId)\n      .filter(Boolean) || [];\n    if (customEmojiIds.length) loadCustomEmojis({ ids: customEmojiIds });\n  }, [chatId, threadId, draft, richInputCtx.editable, richInputCtx.editable.htmlS, editedMessage, isDisabled]);\n\n  // Save draft on chat change. Should be layout effect to read correct html on cleanup\n  useLayoutEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    return () => {\n      if (!isEditing) {\n        updateDraft({ chatId, threadId });\n      }\n\n      freeze();\n    };\n  }, [chatId, threadId, isEditing, updateDraft, isDisabled]);\n\n  const chatIdRef = useStateRef(chatId);\n  const threadIdRef = useStateRef(threadId);\n  useEffect(() => {\n    if (isDisabled || isFrozen) {\n      return;\n    }\n\n    if (richInputCtx.editable.emptyS()) {\n      updateDraft();\n\n      return;\n    }\n\n    const scopedСhatId = chatIdRef.current;\n    const scopedThreadId = threadIdRef.current;\n\n    runDebouncedForSaveDraft(() => {\n      if (chatIdRef.current === scopedСhatId && threadIdRef.current === scopedThreadId) {\n        updateDraft();\n      }\n    });\n  }, [\n    chatIdRef, richInputCtx.editable, richInputCtx.editable.htmlS,\n    isDisabled, runDebouncedForSaveDraft, threadIdRef, updateDraft,\n  ]);\n\n  useBackgroundMode(updateDraft);\n  useBeforeUnload(updateDraft);\n};\n\nexport default useDraft;\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiDraft, ApiFormattedText, ApiMessage } from '../../../../api/types';\nimport type { MessageListType, ThreadId } from '../../../../types';\nimport type { RichInputCtx } from '../../../common/richinput/useRichEditable';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport { requestMeasure, requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { hasMessageMedia } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\n\nimport { useDebouncedResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nconst URL_ENTITIES = new Set<string>([ApiMessageEntityTypes.TextUrl, ApiMessageEntityTypes.Url]);\nconst DEBOUNCE_MS = 300;\n\nconst useEditing = (\n  richInputCtx: RichInputCtx,\n  editedMessage: ApiMessage | undefined,\n  resetComposer: (shouldPreserveInput?: boolean) => void,\n  chatId: string,\n  threadId: ThreadId,\n  type: MessageListType,\n  draft?: ApiDraft,\n  editingDraft?: ApiFormattedText,\n): [VoidFunction, VoidFunction, boolean] => {\n  const {\n    editMessage, setEditingDraft, toggleMessageWebPage, openDeleteMessageModal,\n  } = getActions();\n  const [shouldForceShowEditing, setShouldForceShowEditing] = useState(false);\n\n  const replyingToId = draft?.replyInfo?.replyToMsgId;\n\n  useEffectWithPrevDeps(([prevEditedMessage, prevReplyingToId]) => {\n    if (!editedMessage) {\n      return;\n    }\n\n    if (replyingToId && prevReplyingToId !== replyingToId) {\n      richInputCtx.editable.clearInput();\n      setShouldForceShowEditing(false);\n      return;\n    }\n\n    if (prevEditedMessage?.id === editedMessage.id && replyingToId === prevReplyingToId) {\n      return;\n    }\n\n    const text = !prevEditedMessage && editingDraft?.text.length ? editingDraft : editedMessage.content.text;\n\n    richInputCtx.editable.setFormattedText(text);\n    setShouldForceShowEditing(true);\n\n    requestNextMutation(() => {\n      const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n      if (messageInput) {\n        focusEditableElement(messageInput, true);\n      }\n    });\n  }, [editedMessage, replyingToId, editingDraft, richInputCtx.editable]);\n\n  useEffect(() => {\n    if (!editedMessage) {\n      return;\n    }\n\n    const shouldSetNoWebPage = !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type));\n\n    toggleMessageWebPage({\n      chatId,\n      threadId,\n      noWebPage: shouldSetNoWebPage,\n    });\n  }, [chatId, threadId, editedMessage]);\n\n  useEffect(() => {\n    if (!editedMessage) return undefined;\n    return () => {\n      const edited = richInputCtx.editable.getFormattedText(false);\n      const update = edited.text.length ? edited : undefined;\n\n      setEditingDraft({\n        chatId, threadId, type, text: update,\n      });\n    };\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [chatId, editedMessage, richInputCtx.editable.htmlS, setEditingDraft, threadId, type]);\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    if (!editedMessage) return false;\n\n    const edited = richInputCtx.editable.getFormattedText(false);\n    return !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type))\n      && !(edited.entities?.some((entity) => URL_ENTITIES.has(entity.type)));\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [editedMessage, richInputCtx.editable.htmlS], DEBOUNCE_MS, true);\n\n  const getShouldResetNoWebPageDebounced = useDerivedSignal(detectLinkDebounced,\n    [detectLinkDebounced, richInputCtx.editable.htmlS],\n    true);\n\n  useEffectWithPrevDeps(([prevEditedMessage]) => {\n    if (!editedMessage || prevEditedMessage?.id !== editedMessage.id) {\n      return;\n    }\n\n    if (getShouldResetNoWebPageDebounced()) {\n      toggleMessageWebPage({\n        chatId,\n        threadId,\n        noWebPage: false,\n      });\n    }\n  }, [editedMessage, chatId, richInputCtx.editable.htmlS, threadId, getShouldResetNoWebPageDebounced]);\n\n  const restoreNewDraftAfterEditing = useLastCallback(() => {\n    if (!draft) return;\n\n    // Run one frame after editing draft reset\n    requestMeasure(() => {\n      richInputCtx.editable.setFormattedText(draft.text);\n\n      // Wait one more frame until new HTML is rendered\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    });\n  });\n\n  const handleEditCancel = useLastCallback(() => {\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleEditComplete = useLastCallback(() => {\n    const { text, entities } = richInputCtx.editable.getFormattedText(true);\n\n    if (!editedMessage) {\n      return;\n    }\n\n    if (!text && !hasMessageMedia(editedMessage)) {\n      openDeleteMessageModal({\n        chatId,\n        messageIds: [editedMessage.id],\n        isSchedule: type === 'scheduled',\n      });\n      return;\n    }\n\n    editMessage({\n      messageList: { chatId, threadId, type },\n      text,\n      entities,\n    });\n\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleBlur = useLastCallback(() => {\n    if (!editedMessage) return;\n    const edited = richInputCtx.editable.getFormattedText(false);\n    const update = edited.text.length ? edited : undefined;\n\n    setEditingDraft({\n      chatId, threadId, type, text: update,\n    });\n  });\n\n  useBackgroundMode(handleBlur);\n  useBeforeUnload(handleBlur);\n\n  return [handleEditComplete, handleEditCancel, shouldForceShowEditing];\n};\n\nexport default useEditing;\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { InlineBotSettings } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\n\nimport memoized from '../../../../util/memoized';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../../hooks/useSyncEffect';\n\nconst THROTTLE = 300;\nconst INLINE_BOT_QUERY_REGEXP = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+(.*)/is;\nconst HAS_NEW_LINE = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+\\n{2,}/i;\nconst MEMO_NO_RESULT = {\n  username: '',\n  query: '',\n  canShowHelp: false,\n  usernameLowered: '',\n};\n\nconst tempEl = document.createElement('div');\n\nexport default function useInlineBotTooltip(\n  isEnabled: boolean,\n  chatId: string,\n  getHtml: Signal<string>,\n  inlineBots?: Record<string, false | InlineBotSettings>,\n) {\n  const { queryInlineBot, resetInlineBot, resetAllInlineBots } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractBotQueryThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('@') ? parseBotQuery(html) : MEMO_NO_RESULT;\n  }, [getHtml, isEnabled], THROTTLE);\n  const {\n    username, query, canShowHelp, usernameLowered,\n  } = useDerivedState(extractBotQueryThrottled, [extractBotQueryThrottled, getHtml], true);\n\n  useSyncEffect(([prevUsername]) => {\n    if (prevUsername) {\n      resetInlineBot({ username: prevUsername });\n    }\n  }, [username, resetInlineBot]);\n\n  useEffect(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query,\n    });\n  }, [chatId, query, queryInlineBot, usernameLowered]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  const {\n    id: botId,\n    switchPm,\n    switchWebview,\n    offset,\n    results,\n    isGallery,\n    help,\n  } = (usernameLowered && inlineBots?.[usernameLowered]) || {};\n\n  const isOpen = Boolean((results?.length || switchPm) && !isManuallyClosed);\n\n  useEffect(() => {\n    if (!isOpen && !username) {\n      resetAllInlineBots();\n    }\n  }, [isOpen, resetAllInlineBots, username]);\n\n  const loadMore = useLastCallback(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query, offset,\n    });\n  });\n\n  return {\n    isOpen,\n    botId,\n    isGallery,\n    switchPm,\n    switchWebview,\n    results,\n    closeTooltip: markManuallyClosed,\n    help: canShowHelp && help ? `@${username} ${help}` : undefined,\n    loadMore,\n  };\n}\n\nconst buildQueryStateMemo = memoized((username: string, query: string, canShowHelp: boolean) => ({\n  username,\n  query,\n  canShowHelp,\n  usernameLowered: username.toLowerCase(),\n}));\n\nfunction parseBotQuery(html: string) {\n  if (!html.startsWith('@')) {\n    return MEMO_NO_RESULT;\n  }\n\n  const text = getPlainText(html);\n  const result = text.match(INLINE_BOT_QUERY_REGEXP);\n  if (!result) {\n    return MEMO_NO_RESULT;\n  }\n\n  return buildQueryStateMemo(result[1], result[2], result[2] === '' && !text.match(HAS_NEW_LINE));\n}\n\nfunction getPlainText(html: string) {\n  tempEl.innerHTML = html.replace(/<br>/g, '\\n');\n\n  tempEl.querySelectorAll<HTMLElement>('[alt]').forEach((el) => {\n    if (!el.innerText) {\n      el.innerText = el.getAttribute('alt')!;\n    }\n  });\n\n  return tempEl.innerText;\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { RichInputCtx } from '../../../common/richinput/useRichEditable';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport parseEmojiOnlyString from '../../../../util/emoji/parseEmojiOnlyString';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst MAX_LENGTH = 8;\nconst MAX_UNSUPPORTED_LENGTH = 160;\nconst STARTS_ENDS_ON_EMOJI_IMG_REGEX = new RegExp(`^${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useStickerTooltip(\n  isEnabled: boolean,\n  richInputCtx: RichInputCtx,\n  stickers?: ApiSticker[],\n) {\n  const { loadStickersForEmoji, clearStickersForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const getSingleEmoji = useDerivedSignal(() => {\n    const html = richInputCtx.editable.htmlS();\n    if (!isEnabled || !html || (IS_EMOJI_SUPPORTED && html.length > MAX_LENGTH)) return undefined;\n    if (IS_EMOJI_SUPPORTED) {\n      if (html.length > MAX_LENGTH) return undefined;\n    } else if (html[0] !== '<' && html[1] !== '<' && html.length > MAX_UNSUPPORTED_LENGTH) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const cleanHtml = prepareForRegExp(html);\n    const isSingleEmoji = cleanHtml && (\n      (IS_EMOJI_SUPPORTED && parseEmojiOnlyString(cleanHtml) === 1)\n      || (!IS_EMOJI_SUPPORTED && Boolean(html.match(STARTS_ENDS_ON_EMOJI_IMG_REGEX)))\n    );\n\n    return isSingleEmoji\n      ? (IS_EMOJI_SUPPORTED ? cleanHtml : cleanHtml.match(/alt=\"(.+)\"/)?.[1]!)\n      : undefined;\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [richInputCtx.editable, richInputCtx.editable.htmlS, isEnabled]);\n\n  const isActive = useDerivedState(() => Boolean(getSingleEmoji()), [getSingleEmoji]);\n  const hasStickers = Boolean(stickers?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const singleEmoji = getSingleEmoji();\n    if (singleEmoji) {\n      if (!hasStickers) {\n        loadStickersForEmoji({ emoji: singleEmoji });\n      }\n    } else {\n      clearStickersForEmoji();\n    }\n  }, [isEnabled, isActive, getSingleEmoji, hasStickers, loadStickersForEmoji, clearStickersForEmoji]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, richInputCtx.editable.htmlS]);\n\n  return {\n    isStickerTooltipOpen: Boolean(isActive && hasStickers && !isManuallyClosed),\n    closeStickerTooltip: markManuallyClosed,\n  };\n}\n","import type { IOpusRecorder } from 'opus-recorder';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\n\nexport type Result = { blob: Blob; duration: number; waveform: number[] };\n\nconst encoderPath = new URL('opus-recorder/dist/encoderWorker.min', import.meta.url).href;\nconst MIN_RECORDING_TIME = 1000;\nconst POLYFILL_OPTIONS = { encoderPath, reuseWorker: true };\nconst BLOB_PARAMS = { type: 'audio/ogg' };\nconst FFT_SIZE = 64;\nconst MIN_VOLUME = 0.1;\n\nlet opusRecorderPromise: Promise<{ default: IOpusRecorder }>;\nlet OpusRecorder: IOpusRecorder;\nlet mediaRecorder: IOpusRecorder;\n\nexport async function init() {\n  if (!opusRecorderPromise) {\n    opusRecorderPromise = import('opus-recorder');\n    OpusRecorder = (await opusRecorderPromise).default;\n    mediaRecorder = new OpusRecorder(POLYFILL_OPTIONS);\n  }\n\n  return opusRecorderPromise;\n}\n\nexport async function start(analyzerCallback: Function) {\n  await startMediaRecorder();\n\n  const startedAt = Date.now();\n  let pausedAt: number;\n  const chunks: Uint8Array[] = [];\n  const waveform: number[] = [];\n\n  mediaRecorder.ondataavailable = (typedArray) => {\n    chunks.push(typedArray);\n  };\n\n  const releaseAnalyzer = subscribeToAnalyzer(mediaRecorder, (volume: number) => {\n    waveform.push(volume * 255);\n    analyzerCallback(volume);\n  });\n\n  return {\n    stop: () => new Promise<Result>((resolve, reject) => {\n      mediaRecorder.onstop = () => {\n        resolve({\n          blob: new Blob(chunks, BLOB_PARAMS),\n          duration: Math.round(((pausedAt || Date.now()) - startedAt) / 1000),\n          waveform,\n        });\n      };\n      mediaRecorder.onerror = reject;\n\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.stop();\n        releaseAnalyzer();\n      }, delayStop);\n    }),\n    pause: () => {\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.pause();\n        pausedAt = Date.now();\n        releaseAnalyzer();\n      }, delayStop);\n    },\n  };\n}\n\nasync function startMediaRecorder() {\n  await init();\n  await mediaRecorder.start();\n}\n\nfunction subscribeToAnalyzer(recorder: IOpusRecorder, cb: Function) {\n  const source = recorder.sourceNode;\n  const analyser = source.context.createAnalyser();\n  analyser.fftSize = FFT_SIZE;\n  source.connect(analyser);\n\n  const dataLength = analyser.frequencyBinCount;\n  const dataArray = new Uint8Array(dataLength);\n  let isDestroyed = false;\n\n  function tick() {\n    if (isDestroyed) {\n      return;\n    }\n\n    analyser.getByteFrequencyData(dataArray);\n\n    const sum = dataArray.reduce((acc, current) => acc + current, 0);\n    const mean = (sum / dataLength);\n    const volume = mean / 255;\n\n    cb(volume < MIN_VOLUME ? 0 : volume);\n\n    requestMeasure(tick);\n  }\n\n  tick();\n\n  return () => {\n    isDestroyed = true;\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './AttachmentModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst AttachmentModalAsync: FC<OwnProps> = (props) => {\n  const { attachments } = props;\n  const AttachmentModal = useModuleLoader(Bundles.Extra, 'AttachmentModal', !attachments.length);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return AttachmentModal ? <AttachmentModal {...props} /> : undefined;\n};\n\nexport default AttachmentModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo,\n} from '../../../lib/teact/teact';\n\nimport type { ApiAttachMenuPeerType, ApiMessage } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ISettings, ThreadId } from '../../../types';\n\nimport {\n  CONTENT_TYPES_WITH_PREVIEW, DEBUG_LOG_FILENAME, SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport {\n  getMessageAudio, getMessageDocument,\n  getMessagePhoto,\n  getMessageVideo, getMessageVoice,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n} from '../../../global/helpers';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport { validateFiles } from '../../../util/files';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport AttachBotItem from './AttachBotItem';\n\nimport './AttachMenu.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isButtonVisible: boolean;\n  canAttachMedia: boolean;\n  canAttachPolls: boolean;\n  canSendPhotos: boolean;\n  canSendVideos: boolean;\n  canSendDocuments: boolean;\n  canSendAudios: boolean;\n  isScheduled?: boolean;\n  attachBots?: GlobalState['attachMenu']['bots'];\n  peerType?: ApiAttachMenuPeerType;\n  shouldCollectDebugLogs?: boolean;\n  theme: ISettings['theme'];\n  onFileSelect: (files: File[], shouldSuggestCompression?: boolean) => void;\n  onPollCreate: NoneToVoidFunction;\n  onMenuOpen: NoneToVoidFunction;\n  onMenuClose: NoneToVoidFunction;\n  canEditMedia?: boolean;\n  editingMessage?: ApiMessage;\n};\n\nconst AttachMenu: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isButtonVisible,\n  canAttachMedia,\n  canAttachPolls,\n  canSendPhotos,\n  canSendVideos,\n  canSendDocuments,\n  canSendAudios,\n  attachBots,\n  peerType,\n  isScheduled,\n  theme,\n  shouldCollectDebugLogs,\n  onFileSelect,\n  onMenuOpen,\n  onMenuClose,\n  onPollCreate,\n  canEditMedia,\n  editingMessage,\n}) => {\n  const [isAttachMenuOpen, openAttachMenu, closeAttachMenu] = useFlag();\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isAttachMenuOpen, closeAttachMenu);\n\n  const canSendVideoAndPhoto = canSendPhotos && canSendVideos;\n  const canSendVideoOrPhoto = canSendPhotos || canSendVideos;\n\n  const [isAttachmentBotMenuOpen, markAttachmentBotMenuOpen, unmarkAttachmentBotMenuOpen] = useFlag();\n  const isMenuOpen = isAttachMenuOpen || isAttachmentBotMenuOpen;\n\n  const isPhotoOrVideo = editingMessage && editingMessage?.groupedId\n    && Boolean(getMessagePhoto(editingMessage) || getMessageWebPagePhoto(editingMessage)\n      || Boolean(getMessageVideo(editingMessage) || getMessageWebPageVideo(editingMessage)));\n  const isFile = editingMessage && editingMessage?.groupedId && Boolean(getMessageAudio(editingMessage)\n    || getMessageVoice(editingMessage) || getMessageDocument(editingMessage));\n\n  useEffect(() => {\n    if (isAttachMenuOpen) {\n      markMouseInside();\n    }\n  }, [isAttachMenuOpen, markMouseInside]);\n\n  useEffect(() => {\n    if (isMenuOpen) {\n      onMenuOpen();\n    } else {\n      onMenuClose();\n    }\n  }, [isMenuOpen, onMenuClose, onMenuOpen]);\n\n  const handleToggleAttachMenu = useLastCallback(() => {\n    if (isAttachMenuOpen) {\n      closeAttachMenu();\n    } else {\n      openAttachMenu();\n    }\n  });\n\n  const handleFileSelect = useLastCallback((e: Event, shouldSuggestCompression?: boolean) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileSelect(validatedFiles, shouldSuggestCompression);\n    }\n  });\n\n  const handleQuickSelect = useLastCallback(() => {\n    openSystemFilesDialog(\n      Array.from(canSendVideoAndPhoto ? CONTENT_TYPES_WITH_PREVIEW : (\n        canSendPhotos ? SUPPORTED_PHOTO_CONTENT_TYPES : SUPPORTED_VIDEO_CONTENT_TYPES\n      )).join(','),\n      (e) => handleFileSelect(e, true),\n    );\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog(!canSendDocuments && canSendAudios\n      ? Array.from(SUPPORTED_AUDIO_CONTENT_TYPES).join(',') : (\n        '*'\n      ), (e) => handleFileSelect(e, false));\n  });\n\n  const handleSendLogs = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    onFileSelect([file]);\n  });\n\n  const bots = useMemo(() => {\n    return attachBots\n      ? Object.values(attachBots).filter((bot) => {\n        if (!peerType || !bot.isForAttachMenu) return false;\n        if (peerType === 'bots' && bot.id === chatId && bot.attachMenuPeerTypes.includes('self')) {\n          return true;\n        }\n        return bot.attachMenuPeerTypes!.includes(peerType);\n      })\n      : undefined;\n  }, [attachBots, chatId, peerType]);\n\n  const lang = useOldLang();\n\n  if (!isButtonVisible) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"AttachMenu\">\n      {\n        editingMessage && canEditMedia ? (\n          <ResponsiveHoverButton\n            id=\"replace-menu-button\"\n            className={isAttachMenuOpen ? 'AttachMenu--button activated' : 'AttachMenu--button'}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Replace an attachment\"\n            ariaControls=\"replace-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"replace\" />\n          </ResponsiveHoverButton>\n        ) : (\n          <ResponsiveHoverButton\n            id=\"attach-menu-button\"\n            disabled={Boolean(editingMessage)}\n            className={isAttachMenuOpen ? 'AttachMenu--button activated' : 'AttachMenu--button'}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Add an attachment\"\n            ariaControls=\"attach-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"attach\" />\n          </ResponsiveHoverButton>\n        )\n      }\n      <Menu\n        id=\"attach-menu-controls\"\n        isOpen={isMenuOpen}\n        autoClose\n        positionX=\"right\"\n        positionY=\"bottom\"\n        onClose={closeAttachMenu}\n        className=\"AttachMenu--menu fluid\"\n        onCloseAnimationEnd={closeAttachMenu}\n        onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n        onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n        noCloseOnBackdrop={!IS_TOUCH_ENV}\n        ariaLabelledBy=\"attach-menu-button\"\n      >\n        {/*\n       ** Using ternary operator here causes some attributes from first clause\n       ** transferring to the fragment content in the second clause\n       */}\n        {!canAttachMedia && (\n          <MenuItem className=\"media-disabled\" disabled>Posting media content is not allowed in this group.</MenuItem>\n        )}\n        {canAttachMedia && (\n          <>\n            {canSendVideoOrPhoto && !isFile && (\n              <MenuItem icon=\"photo\" onClick={handleQuickSelect}>\n                {lang(canSendVideoAndPhoto ? 'AttachmentMenu.PhotoOrVideo'\n                  : (canSendPhotos ? 'InputAttach.Popover.Photo' : 'InputAttach.Popover.Video'))}\n              </MenuItem>\n            )}\n            {((canSendDocuments || canSendAudios) && !isPhotoOrVideo)\n              && (\n                <MenuItem icon=\"document\" onClick={handleDocumentSelect}>\n                  {lang(!canSendDocuments && canSendAudios ? 'InputAttach.Popover.Music' : 'AttachDocument')}\n                </MenuItem>\n              )}\n            {canSendDocuments && shouldCollectDebugLogs && (\n              <MenuItem icon=\"bug\" onClick={handleSendLogs}>\n                {lang('DebugSendLogs')}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {canAttachPolls && !editingMessage && (\n          <MenuItem icon=\"poll\" onClick={onPollCreate}>{lang('Poll')}</MenuItem>\n        )}\n\n        {!editingMessage && !canEditMedia && !isScheduled && bots?.map((bot) => (\n          <AttachBotItem\n            bot={bot}\n            chatId={chatId}\n            threadId={threadId}\n            theme={theme}\n            onMenuOpened={markAttachmentBotMenuOpen}\n            onMenuClosed={unmarkAttachmentBotMenuOpen}\n          />\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nexport default memo(AttachMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandMenu = useModuleLoader(Bundles.Extra, 'BotCommandMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return BotCommandMenu ? <BotCommandMenu {...props} /> : undefined;\n};\n\nexport default BotCommandMenuAsync;\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { selectChatMessage, selectCurrentMessageList } from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport renderKeyboardButtonText from './helpers/renderKeyboardButtonText';\n\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\n\nimport './BotKeyboardMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  messageId: number;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  message?: ApiMessage;\n};\n\nconst BotKeyboardMenu: FC<OwnProps & StateProps> = ({\n  isOpen, message, onClose,\n}) => {\n  const { clickBotInlineButton } = getActions();\n\n  const lang = useOldLang();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const { isKeyboardSingleUse } = message || {};\n\n  const buttonTexts = useMemo(() => {\n    const texts: TeactNode[][] = [];\n    message?.keyboardButtons!.forEach((row) => {\n      texts.push(row.map((button) => renderKeyboardButtonText(lang, button)));\n    });\n\n    return texts;\n  }, [lang, message?.keyboardButtons]);\n\n  if (!message || !message.keyboardButtons) {\n    return undefined;\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose={isKeyboardSingleUse}\n      positionX=\"right\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotKeyboardMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCompact\n    >\n      <div className=\"content custom-scroll\">\n        {message.keyboardButtons.map((row, i) => (\n          <div className=\"row\">\n            {row.map((button, j) => (\n              <Button\n                ripple\n                disabled={button.type === 'unsupported'}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => clickBotInlineButton({ chatId: message.chatId, messageId: message.id, button })}\n              >\n                {buttonTexts?.[i][j]}\n              </Button>\n            ))}\n          </div>\n        ))}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { messageId }): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    if (!chatId) {\n      return {};\n    }\n\n    return { message: selectChatMessage(global, chatId, messageId) };\n  },\n)(BotKeyboardMenu));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  onClick: VoidFunction;\n  text: string;\n  isDisabled?: boolean;\n};\n\nconst BotMenuButton: FC<OwnProps> = ({\n  isOpen,\n  onClick,\n  text,\n  isDisabled,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const textRef = useRef<HTMLSpanElement>(null);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return;\n\n    const width = textEl.scrollWidth + 1; // Make width slightly bigger prevent ellipsis in some cases\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n    composerEl.style.setProperty('--bot-menu-text-width', `${width}px`);\n  }, [isOpen, text]);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return undefined;\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n\n    return () => {\n      composerEl.style.removeProperty('--bot-menu-text-width');\n    };\n  }, []);\n\n  return (\n    <Button\n      className={buildClassName('bot-menu', isOpen && 'open')}\n      round\n      color=\"translucent\"\n      disabled={isDisabled}\n      onClick={onClick}\n      ariaLabel=\"Open bot command keyboard\"\n    >\n      <Icon name=\"webapp\" className={buildClassName('bot-menu-icon', isOpen && 'open')} />\n      <span ref={textRef} className=\"bot-menu-text\">{renderText(text)}</span>\n    </Button>\n  );\n};\n\nexport default memo(BotMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatCommandTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ChatCommandTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatCommandTooltip = useModuleLoader(Bundles.Extra, 'ChatCommandTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatCommandTooltip ? <ChatCommandTooltip {...props} /> : undefined;\n};\n\nexport default ChatCommandTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiInputMessageReplyInfo, ApiMessage, ApiPeer,\n} from '../../../api/types';\nimport type { MessageListType, ThreadId } from '../../../types/index';\n\nimport { isChatChannel, stripCustomEmoji } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatMessage,\n  selectDraft,\n  selectEditingId,\n  selectEditingMessage,\n  selectEditingScheduledId,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectPeer,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { getPeerColorClass } from '../../common/helpers/peerColor';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport { ClosableEmbeddedMessage } from '../../common/embedded/EmbeddedMessage';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './ComposerEmbeddedMessage.scss';\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  editingId?: number;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  shouldAnimate?: boolean;\n  forwardedMessagesCount?: number;\n  noAuthors?: boolean;\n  noCaptions?: boolean;\n  forwardsHaveCaptions?: boolean;\n  isCurrentUserPremium?: boolean;\n  isContextMenuDisabled?: boolean;\n  isReplyToDiscussion?: boolean;\n  isInChangingRecipientMode?: boolean;\n  shouldPreventComposerAnimation?: boolean;\n  senderChat?: ApiChat;\n  isSenderChannel?: boolean;\n  currentUserId?: string;\n};\n\ntype OwnProps = {\n  onClear?: () => void;\n  shouldForceShowEditing?: boolean;\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n};\n\nconst CLOSE_DURATION = 350;\n\nconst ComposerEmbeddedMessage: FC<OwnProps & StateProps> = ({\n  replyInfo,\n  editingId,\n  message,\n  sender,\n  shouldAnimate,\n  forwardedMessagesCount,\n  noAuthors,\n  noCaptions,\n  forwardsHaveCaptions,\n  shouldForceShowEditing,\n  isCurrentUserPremium,\n  isContextMenuDisabled,\n  isReplyToDiscussion,\n  onClear,\n  isInChangingRecipientMode,\n  shouldPreventComposerAnimation,\n  senderChat,\n  chatId,\n  currentUserId,\n  isSenderChannel,\n}) => {\n  const {\n    resetDraftReplyInfo,\n    updateDraftReplyInfo,\n    setEditingId,\n    focusMessage,\n    changeRecipient,\n    openChatOrTopicWithReplyInDraft,\n    setForwardNoAuthors,\n    setForwardNoCaptions,\n    exitForwardMode,\n    setShouldPreventComposerAnimation,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const isReplyToTopicStart = message?.content.action?.type === 'topicCreate';\n  const isShowingReply = replyInfo && !shouldForceShowEditing;\n  const isReplyWithQuote = Boolean(replyInfo?.quoteText);\n\n  const isForwarding = Boolean(forwardedMessagesCount);\n\n  const isShown = (() => {\n    if (isInChangingRecipientMode) return false;\n    if (message && (replyInfo || editingId)) return true;\n    if (sender && isForwarding) return true;\n    return false;\n  })();\n\n  const {\n    shouldRender, transitionClassNames,\n  } = useShowTransitionDeprecated(\n    isShown && !isReplyToTopicStart && !isReplyToDiscussion,\n    undefined,\n    !shouldAnimate,\n    undefined,\n    !shouldAnimate,\n    CLOSE_DURATION,\n    !shouldAnimate,\n  );\n  useEffect(() => {\n    if (shouldPreventComposerAnimation) {\n      setShouldPreventComposerAnimation({ shouldPreventComposerAnimation: false });\n    }\n  });\n\n  const clearEmbedded = useLastCallback(() => {\n    if (editingId) {\n      setEditingId({ messageId: undefined });\n    } else if (forwardedMessagesCount) {\n      exitForwardMode();\n    } else if (replyInfo && !shouldForceShowEditing) {\n      resetDraftReplyInfo();\n    }\n    onClear?.();\n  });\n\n  useEffect(() => (isShown ? captureEscKeyListener(clearEmbedded) : undefined), [isShown, clearEmbedded]);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const focusMessageFromDraft = () => {\n    focusMessage({ chatId: message!.chatId, messageId: message!.id, noForumTopicPanel: true });\n  };\n  const handleMessageClick = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  const handleClearClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n    e.stopPropagation();\n    clearEmbedded();\n    handleContextMenuHide();\n  });\n  const buildAutoCloseMenuItemHandler = (action: NoneToVoidFunction) => {\n    return () => {\n      handleContextMenuClose();\n      action();\n    };\n  };\n  const handleForwardToAnotherChatClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleShowMessageClick = useLastCallback(buildAutoCloseMenuItemHandler(focusMessageFromDraft));\n  const handleRemoveQuoteClick = useLastCallback(buildAutoCloseMenuItemHandler(\n    () => updateDraftReplyInfo({ quoteText: undefined }),\n  ));\n  const handleChangeReplyRecipientClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleReplyInSenderChat = useLastCallback(() => {\n    handleContextMenuClose();\n    if (!sender) return;\n    openChatOrTopicWithReplyInDraft({ chatId: sender.id });\n  });\n  const handleDoNotReplyClick = useLastCallback(buildAutoCloseMenuItemHandler(clearEmbedded));\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.forward-context-menu .bubble'));\n\n  useEffect(() => {\n    if (!shouldRender) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender]);\n\n  const className = buildClassName('ComposerEmbeddedMessage', transitionClassNames);\n  const renderingSender = useCurrentOrPrev(sender, true);\n  const innerClassName = buildClassName(\n    'ComposerEmbeddedMessage_inner',\n    getPeerColorClass(renderingSender),\n  );\n\n  const leftIcon = useMemo(() => {\n    if (editingId) {\n      return 'edit';\n    }\n    if (isForwarding) {\n      return 'forward';\n    }\n    if (isShowingReply) {\n      return 'reply';\n    }\n\n    return undefined;\n  }, [editingId, isForwarding, isShowingReply]);\n\n  const customText = forwardedMessagesCount && forwardedMessagesCount > 1\n    ? oldLang('ForwardedMessageCount', forwardedMessagesCount)\n    : undefined;\n\n  const strippedMessage = useMemo(() => {\n    if (!message || !isForwarding || !message.content.text || !noAuthors || isCurrentUserPremium) return message;\n\n    const strippedText = stripCustomEmoji(message.content.text);\n    return {\n      ...message,\n      content: {\n        ...message.content,\n        text: strippedText,\n      },\n    };\n  }, [isCurrentUserPremium, isForwarding, message, noAuthors]);\n\n  const renderingLeftIcon = useCurrentOrPrev(leftIcon, true);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const canReplyInSenderChat = sender && !isSenderChannel && chatId !== sender.id && sender.id !== currentUserId;\n\n  return (\n    <div className={className} ref={ref} onContextMenu={handleContextMenu}>\n      <div className={innerClassName}>\n        <div className=\"embedded-left-icon\" onClick={handleContextMenu}>\n          {renderingLeftIcon && <Icon name={renderingLeftIcon} />}\n          {Boolean(replyInfo?.quoteText) && (\n            <Icon name=\"quote\" className=\"quote-reply\" />\n          )}\n        </div>\n        <ClosableEmbeddedMessage\n          isOpen={isShown}\n          className=\"inside-input\"\n          replyInfo={replyInfo}\n          isInComposer\n          message={strippedMessage}\n          sender={!noAuthors ? sender : undefined}\n          customText={customText}\n          title={(editingId && !isShowingReply) ? oldLang('EditMessage')\n            : noAuthors ? oldLang('HiddenSendersNameDescription') : undefined}\n          onClick={handleMessageClick}\n          senderChat={senderChat}\n        />\n        <Button\n          className=\"embedded-cancel\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={oldLang('Cancel')}\n          onClick={handleClearClick}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        {(isShowingReply || isForwarding) && !isContextMenuDisabled && (\n          <Menu\n            isOpen={isContextMenuOpen}\n            anchor={contextMenuAnchor}\n            getTriggerElement={getTriggerElement}\n            getRootElement={getRootElement}\n            getMenuElement={getMenuElement}\n            className=\"forward-context-menu\"\n            onClose={handleContextMenuClose}\n            onCloseAnimationEnd={handleContextMenuHide}\n          >\n            {isForwarding && (\n              <>\n                <MenuItem\n                  icon={!noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={noAuthors ? <Icon name=\"placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: false,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'ShowSenderNames' : 'ShowSendersName')}\n                </MenuItem>\n                <MenuItem\n                  icon={noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={!noAuthors ? <Icon name=\"placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: true,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'HideSenderNames' : 'HideSendersName')}\n                </MenuItem>\n                {forwardsHaveCaptions && (\n                  <>\n                    <MenuSeparator />\n                    <MenuItem\n                      icon={!noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={noCaptions ? <Icon name=\"placeholder\" /> : undefined}\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: false,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.ShowCaption' : 'ShowCaption')}\n                    </MenuItem>\n                    <MenuItem\n                      icon={noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={!noCaptions ? <Icon name=\"placeholder\" /> : undefined}\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: true,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.HideCaption' : 'HideCaption')}\n                    </MenuItem>\n                  </>\n                )}\n                <MenuSeparator />\n                <MenuItem icon=\"replace\" onClick={handleForwardToAnotherChatClick}>\n                  {oldLang('ForwardAnotherChat')}\n                </MenuItem>\n              </>\n            )}\n            {isShowingReply && (\n              <>\n                <MenuItem\n                  icon=\"show-message\"\n                  onClick={handleShowMessageClick}\n                >\n                  {oldLang('Message.Context.Goto')}\n                </MenuItem>\n                {isReplyWithQuote && (\n                  <MenuItem\n                    icon=\"remove-quote\"\n                    onClick={handleRemoveQuoteClick}\n                  >\n                    {oldLang('RemoveQuote')}\n                  </MenuItem>\n                )}\n                {canReplyInSenderChat && (\n                  <MenuItem icon=\"user\" onClick={handleReplyInSenderChat}>\n                    {lang('ReplyInPrivateMessage')}\n                  </MenuItem>\n                )}\n                <MenuItem icon=\"replace\" onClick={handleChangeReplyRecipientClick}>\n                  {oldLang('ReplyToAnotherChat')}\n                </MenuItem>\n                <MenuItem icon=\"delete\" onClick={handleDoNotReplyClick}>\n                  {oldLang('DoNotReply')}\n                </MenuItem>\n              </>\n            )}\n          </Menu>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    shouldForceShowEditing, chatId, threadId, messageListType,\n  }): StateProps => {\n    const {\n      forwardMessages: {\n        fromChatId, toChatId, messageIds: forwardMessageIds, noAuthors, noCaptions,\n      },\n      isShareMessageModalShown: isModalShown,\n      shouldPreventComposerAnimation,\n    } = selectTabState(global);\n\n    const editingId = messageListType === 'scheduled'\n      ? selectEditingScheduledId(global, chatId)\n      : selectEditingId(global, chatId, threadId);\n    const shouldAnimate = selectCanAnimateInterface(global) && !shouldPreventComposerAnimation;\n    const isForwarding = toChatId === chatId;\n    const forwardedMessages = forwardMessageIds?.map((id) => selectChatMessage(global, fromChatId!, id)!);\n\n    const draft = selectDraft(global, chatId, threadId);\n    const replyInfo = draft?.replyInfo;\n    const replyToPeerId = replyInfo?.replyToPeerId;\n    const senderChat = replyToPeerId ? selectChat(global, replyToPeerId) : undefined;\n\n    let message: ApiMessage | undefined;\n    if (editingId) {\n      message = selectEditingMessage(global, chatId, threadId, messageListType);\n    } else if (isForwarding && forwardMessageIds!.length === 1) {\n      message = forwardedMessages?.[0];\n    } else if (replyInfo && !shouldForceShowEditing) {\n      message = selectChatMessage(global, replyInfo.replyToPeerId || chatId, replyInfo.replyToMsgId);\n    }\n\n    let sender: ApiPeer | undefined;\n\n    if (editingId && message) {\n      sender = selectSender(global, message);\n    } else if (isForwarding) {\n      if (message) {\n        sender = selectForwardedSender(global, message);\n        if (!sender) {\n          sender = selectSender(global, message);\n        }\n      }\n      if (!sender) {\n        sender = selectPeer(global, fromChatId!);\n      }\n    } else if (replyInfo && message && !shouldForceShowEditing) {\n      const { forwardInfo } = message;\n      const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n      if (forwardInfo && (forwardInfo.isChannelPost || isChatWithSelf)) {\n        sender = selectForwardedSender(global, message);\n      }\n\n      if (!sender && (!forwardInfo?.hiddenUserName || Boolean(replyInfo.quoteText))) {\n        sender = selectSender(global, message);\n      }\n    }\n\n    const chat = sender && selectChat(global, sender.id);\n    const isSenderChannel = chat && isChatChannel(chat);\n\n    const forwardsHaveCaptions = forwardedMessages?.some((forward) => (\n      forward?.content.text && Object.keys(forward.content).length > 1\n    ));\n\n    const isContextMenuDisabled = isForwarding && forwardMessageIds!.length === 1\n      && Boolean(message?.content.storyData);\n\n    const isReplyToDiscussion = replyInfo?.replyToMsgId === threadId && !replyInfo.replyToPeerId;\n\n    return {\n      replyInfo,\n      editingId,\n      message,\n      sender,\n      shouldAnimate,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      noAuthors,\n      noCaptions,\n      forwardsHaveCaptions,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isContextMenuDisabled,\n      isReplyToDiscussion,\n      isInChangingRecipientMode: isModalShown,\n      shouldPreventComposerAnimation,\n      senderChat,\n      currentUserId: global.currentUserId,\n      isSenderChannel,\n    };\n  },\n)(ComposerEmbeddedMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './DropArea';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst DropAreaAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DropArea = useModuleLoader(Bundles.Extra, 'DropArea', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return DropArea ? <DropArea {...props} /> : undefined;\n};\n\nexport default DropAreaAsync;\nexport { DropAreaState } from './DropArea';\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './InlineBotTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst InlineBotTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const InlineBotTooltip = useModuleLoader(Bundles.Extra, 'InlineBotTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return InlineBotTooltip ? <InlineBotTooltip {...props} /> : undefined;\n};\n\nexport default InlineBotTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './MentionTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst MentionTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MentionTooltip = useModuleLoader(Bundles.Extra, 'MentionTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MentionTooltip ? <MentionTooltip {...props} /> : undefined;\n};\n\nexport default MentionTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './PollModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst PollModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PollModal = useModuleLoader(Bundles.Extra, 'PollModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return PollModal ? <PollModal {...props} /> : undefined;\n};\n\nexport default PollModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SendAsMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SendAsMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SendAsMenu = useModuleLoader(Bundles.Extra, 'SendAsMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SendAsMenu ? <SendAsMenu {...props} /> : undefined;\n};\n\nexport default SendAsMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './StickerTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst StickerTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const StickerTooltip = useModuleLoader(Bundles.Extra, 'StickerTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return StickerTooltip ? <StickerTooltip {...props} /> : undefined;\n};\n\nexport default StickerTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiFormattedText, ApiMessage, ApiMessageEntityTextUrl, ApiWebPage,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ISettings, ThreadId, WebPageMediaSize } from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../../../config';\nimport { selectNoWebPage, selectTabState, selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport parseHtmlAsFormattedText from '../../../util/parseHtmlAsFormattedText';\n\nimport { useDebouncedResolver } from '../../../hooks/useAsyncResolvers';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport WebPage from '../message/WebPage';\n\nimport './WebPagePreview.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  isEditing: boolean;\n  isDisabled?: boolean;\n};\n\ntype StateProps = {\n  webPagePreview?: ApiWebPage;\n  noWebPage?: boolean;\n  theme: ISettings['theme'];\n  attachmentSettings: GlobalState['attachmentSettings'];\n};\n\nconst DEBOUNCE_MS = 300;\nconst RE_LINK = new RegExp(RE_LINK_TEMPLATE, 'i');\n\nconst WebPagePreview: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  getHtml,\n  isDisabled,\n  webPagePreview,\n  noWebPage,\n  theme,\n  attachmentSettings,\n  isEditing,\n}) => {\n  const {\n    loadWebPagePreview,\n    clearWebPagePreview,\n    toggleMessageWebPage,\n    updateAttachmentSettings,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const formattedTextWithLinkRef = useRef<ApiFormattedText>();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isInvertedMedia = attachmentSettings.isInvertedMedia;\n  const isSmallerMedia = attachmentSettings.webPageMediaSize === 'small';\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    const formattedText = parseHtmlAsFormattedText(getHtml());\n    const linkEntity = formattedText.entities?.find((entity): entity is ApiMessageEntityTextUrl => (\n      entity.type === ApiMessageEntityTypes.TextUrl\n    ));\n\n    formattedTextWithLinkRef.current = formattedText;\n\n    return linkEntity?.url || formattedText.text.match(RE_LINK)?.[0];\n  }, [getHtml], DEBOUNCE_MS, true);\n\n  const getLink = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffect(() => {\n    const link = getLink();\n    const formattedText = formattedTextWithLinkRef.current;\n\n    if (link) {\n      loadWebPagePreview({ text: formattedText! });\n    } else {\n      clearWebPagePreview();\n      toggleMessageWebPage({ chatId, threadId });\n    }\n  }, [getLink, chatId, threadId]);\n\n  useSyncEffect(() => {\n    clearWebPagePreview();\n    toggleMessageWebPage({ chatId, threadId });\n  }, [chatId, clearWebPagePreview, threadId, toggleMessageWebPage]);\n\n  const isShown = useDerivedState(() => {\n    return Boolean(webPagePreview && getHtml() && !noWebPage && !isDisabled);\n  }, [isDisabled, getHtml, noWebPage, webPagePreview]);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isShown);\n\n  const hasMediaSizeOptions = webPagePreview?.hasLargeMedia;\n\n  const renderingWebPage = useCurrentOrPrev(webPagePreview, true);\n\n  const handleClearWebpagePreview = useLastCallback(() => {\n    toggleMessageWebPage({ chatId, threadId, noWebPage: true });\n  });\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref, isEditing, true);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(\n    () => ref.current!.querySelector('.web-page-preview-context-menu .bubble'),\n  );\n\n  const handlePreviewClick = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  useEffect(() => {\n    if (!shouldRender || !renderingWebPage) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender, renderingWebPage]);\n\n  function updateIsInvertedMedia(value?: true) {\n    updateAttachmentSettings({ isInvertedMedia: value });\n  }\n\n  function updateIsLargerMedia(value?: WebPageMediaSize) {\n    updateAttachmentSettings({ webPageMediaSize: value });\n  }\n\n  if (!shouldRender || !renderingWebPage) {\n    return undefined;\n  }\n\n  // TODO Refactor so `WebPage` can be used without message\n  const { photo, ...webPageWithoutPhoto } = renderingWebPage;\n  const messageStub = {\n    content: {\n      webPage: webPageWithoutPhoto,\n    },\n  } as ApiMessage;\n\n  function renderContextMenu() {\n    return (\n      <Menu\n        isOpen={isContextMenuOpen}\n        anchor={contextMenuAnchor}\n        getTriggerElement={getTriggerElement}\n        getRootElement={getRootElement}\n        getMenuElement={getMenuElement}\n        className=\"web-page-preview-context-menu\"\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n        autoClose\n      >\n        <>\n          {\n            isInvertedMedia ? (\n              // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"move-caption-up\" onClick={() => updateIsInvertedMedia(undefined)}>\n                {lang('PreviewSender.MoveTextUp')}\n              </MenuItem>\n            ) : (\n            // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"move-caption-down\" onClick={() => updateIsInvertedMedia(true)}>\n                {lang(('PreviewSender.MoveTextDown'))}\n              </MenuItem>\n            )\n          }\n          {hasMediaSizeOptions && (\n            isSmallerMedia ? (\n            // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"expand\" onClick={() => updateIsLargerMedia('large')}>\n                {lang('ChatInput.EditLink.LargerMedia')}\n              </MenuItem>\n            ) : (\n            // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"collapse\" onClick={() => updateIsLargerMedia('small')}>\n                {lang(('ChatInput.EditLink.SmallerMedia'))}\n              </MenuItem>\n            )\n          )}\n          <MenuItem\n            icon=\"delete\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleClearWebpagePreview}\n          >\n            {lang('ChatInput.EditLink.RemovePreview')}\n          </MenuItem>\n        </>\n      </Menu>\n    );\n  }\n\n  return (\n    <div className={buildClassName('WebPagePreview', transitionClassNames)} ref={ref}>\n      <div className=\"WebPagePreview_inner\">\n        <div className=\"WebPagePreview-left-icon\" onClick={handlePreviewClick}>\n          <Icon name=\"link\" />\n        </div>\n        <WebPage\n          message={messageStub}\n          inPreview\n          theme={theme}\n          onContainerClick={handlePreviewClick}\n          isEditing={isEditing}\n        />\n        <Button\n          className=\"WebPagePreview-clear\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel=\"Clear Webpage Preview\"\n          onClick={handleClearWebpagePreview}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        {!isEditing && renderContextMenu()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    const {\n      attachmentSettings,\n    } = global;\n    return {\n      theme: selectTheme(global),\n      webPagePreview: selectTabState(global).webPagePreview,\n      noWebPage,\n      attachmentSettings,\n    };\n  },\n)(WebPagePreview));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAttachment,\n  ApiAttachMenuPeerType,\n  ApiAvailableEffect,\n  ApiAvailableReaction,\n  ApiBotCommand,\n  ApiBotInlineMediaResult,\n  ApiBotInlineResult,\n  ApiBotMenuButton,\n  ApiChat,\n  ApiChatFullInfo,\n  ApiDraft,\n  ApiFormattedText,\n  ApiMessage,\n  ApiMessageEntity,\n  ApiNewPoll,\n  ApiQuickReply,\n  ApiReaction,\n  ApiStealthMode,\n  ApiSticker,\n  ApiTopic,\n  ApiUser,\n  ApiVideo,\n  ApiWebPage,\n} from '../../api/types';\nimport type {\n  GlobalState, TabState,\n} from '../../global/types';\nimport type {\n  IAnchorPosition,\n  InlineBotSettings,\n  ISettings,\n  MessageList,\n  MessageListType,\n  ThreadId,\n} from '../../types';\nimport type { AnimBgRender } from '../../util/AnimBackgroundRender';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  DEFAULT_MAX_MESSAGE_LENGTH,\n  EDITABLE_INPUT_MODAL_ID,\n  HEART_REACTION,\n  MAX_UPLOAD_FILEPART_SIZE,\n  ONE_TIME_MEDIA_TTL_SECONDS,\n  SCHEDULED_WHEN_ONLINE,\n  SEND_MESSAGE_ACTION_INTERVAL,\n  SERVICE_NOTIFICATIONS_USER_ID,\n} from '../../config';\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  canEditMedia,\n  getAllowedAttachmentOptions,\n  getReactionKey,\n  getStoryKey,\n  isChatAdmin,\n  isChatChannel,\n  isChatSuperGroup,\n  isSameReaction,\n  isSystemBot,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanAnimateInterface,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatType,\n  selectCurrentMessageList,\n  selectDraft,\n  selectEditingDraft,\n  selectEditingMessage,\n  selectEditingScheduledDraft,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsInSelectMode,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectIsRightColumnShown,\n  selectNewestMessageWithBotKeyboardButtons,\n  selectNoWebPage,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectRequestedDraft,\n  selectRequestedDraftFiles,\n  selectTabState,\n  selectTheme,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { selectCurrentLimit } from '../../global/selectors/limits';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration, formatVoiceRecordDuration } from '../../util/dates/dateFormat';\nimport { processDeepLink } from '../../util/deeplink';\nimport { tryParseDeepLink } from '../../util/deepLinkParser';\nimport { processMessageInputForCustomEmoji } from '../../util/emoji/customEmojiManager';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport parseHtmlAsFormattedText from '../../util/parseHtmlAsFormattedText';\nimport { getServerTime } from '../../util/serverTime';\nimport { IS_IOS, IS_VOICE_RECORDING_SUPPORTED } from '../../util/windowEnvironment';\nimport windowSize from '../../util/windowSize';\nimport applyIosAutoCapitalizationFix from '../middle/composer/helpers/applyIosAutoCapitalizationFix';\nimport buildAttachment, { prepareAttachmentsToSend } from '../middle/composer/helpers/buildAttachment';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\nimport { getTextWithEntitiesAsHtml } from './helpers/renderTextWithEntities';\nimport { buildCustomEmojiHtml } from './richinput/customEmoji';\nimport { useRichEditable } from './richinput/useRichEditable';\n\nimport useInterval from '../../hooks/schedulers/useInterval';\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useSchedule from '../../hooks/useSchedule';\nimport useSendMessageAction from '../../hooks/useSendMessageAction';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport useSyncEffect from '../../hooks/useSyncEffect';\nimport useAttachmentModal from '../middle/composer/hooks/useAttachmentModal';\nimport useChatCommandTooltip from '../middle/composer/hooks/useChatCommandTooltip';\nimport useClipboardPaste from '../middle/composer/hooks/useClipboardPaste';\nimport useCustomEmojiTooltip from '../middle/composer/hooks/useCustomEmojiTooltip';\nimport useDraft from '../middle/composer/hooks/useDraft';\nimport useEditing from '../middle/composer/hooks/useEditing';\nimport useEmojiTooltip from '../middle/composer/hooks/useEmojiTooltip';\nimport useInlineBotTooltip from '../middle/composer/hooks/useInlineBotTooltip';\nimport useMentionTooltip from '../middle/composer/hooks/useMentionTooltip';\nimport useStickerTooltip from '../middle/composer/hooks/useStickerTooltip';\nimport useVoiceRecording from '../middle/composer/hooks/useVoiceRecording';\n\nimport AttachmentModal from '../middle/composer/AttachmentModal.async';\nimport AttachMenu from '../middle/composer/AttachMenu';\nimport BotCommandMenu from '../middle/composer/BotCommandMenu.async';\nimport BotKeyboardMenu from '../middle/composer/BotKeyboardMenu';\nimport BotMenuButton from '../middle/composer/BotMenuButton';\nimport ChatCommandTooltip from '../middle/composer/ChatCommandTooltip.async';\nimport ComposerEmbeddedMessage from '../middle/composer/ComposerEmbeddedMessage';\nimport CustomEmojiTooltip from '../middle/composer/CustomEmojiTooltip.async';\nimport CustomSendMenu from '../middle/composer/CustomSendMenu.async';\nimport DropArea, { DropAreaState } from '../middle/composer/DropArea.async';\nimport EmojiTooltip from '../middle/composer/EmojiTooltip.async';\nimport InlineBotTooltip from '../middle/composer/InlineBotTooltip.async';\nimport MentionTooltip from '../middle/composer/MentionTooltip.async';\nimport MessageInput from '../middle/composer/MessageInput';\nimport PollModal from '../middle/composer/PollModal.async';\nimport SendAsMenu from '../middle/composer/SendAsMenu.async';\nimport StickerTooltip from '../middle/composer/StickerTooltip.async';\nimport SymbolMenuButton from '../middle/composer/SymbolMenuButton';\nimport WebPagePreview from '../middle/composer/WebPagePreview';\nimport MessageEffect from '../middle/message/MessageEffect';\nimport ReactionSelector from '../middle/message/reactions/ReactionSelector';\nimport Button from '../ui/Button';\nimport ResponsiveHoverButton from '../ui/ResponsiveHoverButton';\nimport Spinner from '../ui/Spinner';\nimport Avatar from './Avatar';\nimport Icon from './icons/Icon';\nimport ReactionAnimatedEmoji from './reactions/ReactionAnimatedEmoji';\n\nimport './Composer.scss';\n\ntype ComposerType = 'messageList' | 'story';\n\ntype OwnProps = {\n  renderer?: AnimBgRender | null;\n  type: ComposerType;\n  chatId: string;\n  threadId: ThreadId;\n  storyId?: number;\n  messageListType: MessageListType;\n  dropAreaState?: string;\n  isReady: boolean;\n  isMobile?: boolean;\n  inputId: string;\n  editableInputCssSelector: string;\n  editableInputId: string;\n  className?: string;\n  inputPlaceholder?: string;\n  onDropHide?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    isOnActiveTab: boolean;\n    editingMessage?: ApiMessage;\n    chat?: ApiChat;\n    chatFullInfo?: ApiChatFullInfo;\n    draft?: ApiDraft;\n    replyToTopic?: ApiTopic;\n    currentMessageList?: MessageList;\n    isChatWithBot?: boolean;\n    isChatWithSelf?: boolean;\n    isChannel?: boolean;\n    isForCurrentMessageList: boolean;\n    isRightColumnShown?: boolean;\n    isSelectModeActive?: boolean;\n    isReactionPickerOpen?: boolean;\n    isForwarding?: boolean;\n    pollModal: TabState['pollModal'];\n    botKeyboardMessageId?: number;\n    botKeyboardPlaceholder?: string;\n    withScheduledButton?: boolean;\n    isInScheduledList?: boolean;\n    canScheduleUntilOnline?: boolean;\n    stickersForEmoji?: ApiSticker[];\n    customEmojiForEmoji?: ApiSticker[];\n    currentUserId?: string;\n    currentUser?: ApiUser;\n    recentEmojis: string[];\n    contentToBeScheduled?: TabState['contentToBeScheduled'];\n    shouldSuggestStickers?: boolean;\n    shouldSuggestCustomEmoji?: boolean;\n    baseEmojiKeywords?: Record<string, string[]>;\n    emojiKeywords?: Record<string, string[]>;\n    topInlineBotIds?: string[];\n    isInlineBotLoading: boolean;\n    inlineBots?: Record<string, false | InlineBotSettings>;\n    botCommands?: ApiBotCommand[] | false;\n    botMenuButton?: ApiBotMenuButton;\n    sendAsUser?: ApiUser;\n    sendAsChat?: ApiChat;\n    sendAsId?: string;\n    editingDraft?: ApiFormattedText;\n    requestedDraft?: ApiFormattedText;\n    requestedDraftFiles?: File[];\n    attachBots: GlobalState['attachMenu']['bots'];\n    attachMenuPeerType?: ApiAttachMenuPeerType;\n    theme: ISettings['theme'];\n    fileSizeLimit: number;\n    captionLimit: number;\n    isCurrentUserPremium?: boolean;\n    canSendVoiceByPrivacy?: boolean;\n    attachmentSettings: GlobalState['attachmentSettings'];\n    slowMode?: ApiChatFullInfo['slowMode'];\n    shouldUpdateStickerSetOrder?: boolean;\n    availableReactions?: ApiAvailableReaction[];\n    topReactions?: ApiReaction[];\n    canPlayAnimatedEmojis?: boolean;\n    canBuyPremium?: boolean;\n    shouldCollectDebugLogs?: boolean;\n    sentStoryReaction?: ApiReaction;\n    stealthMode?: ApiStealthMode;\n    canSendOneTimeMedia?: boolean;\n    quickReplyMessages?: Record<number, ApiMessage>;\n    quickReplies?: Record<number, ApiQuickReply>;\n    canSendQuickReplies?: boolean;\n    webPagePreview?: ApiWebPage;\n    noWebPage?: boolean;\n    isContactRequirePremium?: boolean;\n    effect?: ApiAvailableEffect;\n    effectReactions?: ApiReaction[];\n    areEffectsSupported?: boolean;\n    canPlayEffect?: boolean;\n    shouldPlayEffect?: boolean;\n    maxMessageLength: number;\n  };\n\nenum MainButtonState {\n  Send = 'send',\n  Record = 'record',\n  Edit = 'edit',\n  Schedule = 'schedule',\n  Forward = 'forward',\n  SendOneTime = 'sendOneTime',\n}\n\ntype ScheduledMessageArgs = TabState['contentToBeScheduled'] | {\n  id: string; queryId: string; isSilent?: boolean;\n};\n\nconst VOICE_RECORDING_FILENAME = 'wonderful-voice-message.ogg';\n// When voice recording is active, composer placeholder will hide to prevent overlapping\nconst SCREEN_WIDTH_TO_HIDE_PLACEHOLDER = 600; // px\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\nconst SELECT_MODE_TRANSITION_MS = 200;\nconst SENDING_ANIMATION_DURATION = 350;\nconst MOUNT_ANIMATION_DURATION = 430;\n\nconst Composer: FC<OwnProps & StateProps> = ({\n  type,\n  renderer,\n  isOnActiveTab,\n  dropAreaState,\n  isInScheduledList,\n  canScheduleUntilOnline,\n  isReady,\n  isMobile,\n  onDropHide,\n  onFocus,\n  onBlur,\n  editingMessage,\n  chatId,\n  threadId,\n  storyId,\n  currentMessageList,\n  messageListType,\n  draft,\n  chat,\n  chatFullInfo,\n  replyToTopic,\n  isForCurrentMessageList,\n  isCurrentUserPremium,\n  canSendVoiceByPrivacy,\n  isChatWithBot,\n  isChatWithSelf,\n  isChannel,\n  fileSizeLimit,\n  isRightColumnShown,\n  isSelectModeActive,\n  isReactionPickerOpen,\n  isForwarding,\n  pollModal,\n  botKeyboardMessageId,\n  botKeyboardPlaceholder,\n  inputPlaceholder,\n  withScheduledButton,\n  stickersForEmoji,\n  customEmojiForEmoji,\n  topInlineBotIds,\n  currentUserId,\n  currentUser,\n  captionLimit,\n  contentToBeScheduled,\n  shouldSuggestStickers,\n  shouldSuggestCustomEmoji,\n  baseEmojiKeywords,\n  emojiKeywords,\n  recentEmojis,\n  inlineBots,\n  isInlineBotLoading,\n  botCommands,\n  sendAsUser,\n  sendAsChat,\n  sendAsId,\n  editingDraft,\n  requestedDraft,\n  requestedDraftFiles,\n  botMenuButton,\n  attachBots,\n  attachMenuPeerType,\n  attachmentSettings,\n  theme,\n  slowMode,\n  shouldUpdateStickerSetOrder,\n  editableInputCssSelector,\n  editableInputId,\n  inputId,\n  className,\n  availableReactions,\n  topReactions,\n  canBuyPremium,\n  canPlayAnimatedEmojis,\n  shouldCollectDebugLogs,\n  sentStoryReaction,\n  stealthMode,\n  canSendOneTimeMedia,\n  quickReplyMessages,\n  quickReplies,\n  canSendQuickReplies,\n  onForward,\n  webPagePreview,\n  noWebPage,\n  isContactRequirePremium,\n  effect,\n  effectReactions,\n  areEffectsSupported,\n  canPlayEffect,\n  shouldPlayEffect,\n  maxMessageLength,\n}) => {\n  const {\n    sendMessage,\n    clearDraft,\n    showDialog,\n    forwardMessages,\n    openPollModal,\n    closePollModal,\n    loadScheduledHistory,\n    openThread,\n    addRecentEmoji,\n    sendInlineBotResult,\n    loadSendAs,\n    resetOpenChatWithDraft,\n    callAttachBot,\n    addRecentCustomEmoji,\n    showNotification,\n    showAllowedMessageTypesNotification,\n    openStoryReactionPicker,\n    closeReactionPicker,\n    sendStoryReaction,\n    editMessage,\n    updateAttachmentSettings,\n    saveEffectInDraft,\n    setReactionEffect,\n    hideEffectInComposer,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const { getHtml, ctx: richInputCtx } = useRichEditable();\n\n  // eslint-disable-next-line no-null/no-null\n  const storyReactionRef = useRef<HTMLButtonElement>(null);\n\n  const [isMounted, setIsMounted] = useState(false);\n  const lastMessageSendTimeSeconds = useRef<number>();\n  const prevDropAreaState = usePreviousDeprecated(dropAreaState);\n  const { width: windowWidth } = windowSize.get();\n\n  const isInMessageList = type === 'messageList';\n  const isInStoryViewer = type === 'story';\n  const sendAsPeerIds = isInMessageList ? chat?.sendAsPeerIds : undefined;\n  const canShowSendAs = sendAsPeerIds\n    && (sendAsPeerIds.length > 1 || !sendAsPeerIds.some((peer) => peer.id === currentUserId!));\n  // Prevent Symbol Menu from closing when calendar is open\n  const [isSymbolMenuForced, forceShowSymbolMenu, cancelForceShowSymbolMenu] = useFlag();\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n  const isInputHasFocus = false; // TODO: FIX\n  const [isAttachMenuOpen, onAttachMenuOpen, onAttachMenuClose] = useFlag();\n\n  const canMediaBeReplaced = editingMessage && canEditMedia(editingMessage);\n\n  const { emojiSet, members: groupChatMembers, botCommands: chatBotCommands } = chatFullInfo || {};\n  const chatEmojiSetId = emojiSet?.id;\n\n  const isSentStoryReactionHeart = sentStoryReaction && isSameReaction(sentStoryReaction, HEART_REACTION);\n\n  useEffect(processMessageInputForCustomEmoji, [richInputCtx.editable.htmlS]);\n\n  const customEmojiNotificationNumber = useRef(0);\n\n  const [requestCalendar, calendar] = useSchedule(\n    isInMessageList && canScheduleUntilOnline,\n    cancelForceShowSymbolMenu,\n  );\n\n  useTimeout(() => {\n    setIsMounted(true);\n  }, MOUNT_ANIMATION_DURATION);\n\n  useEffect(() => {\n    if (isInMessageList) return;\n\n    closeReactionPicker();\n  }, [isInMessageList, storyId]);\n\n  useEffect(() => {\n    lastMessageSendTimeSeconds.current = undefined;\n  }, [chatId]);\n\n  useEffect(() => {\n    if (chatId && isReady && !isInStoryViewer) {\n      loadScheduledHistory({ chatId });\n    }\n  }, [isReady, chatId, threadId, isInStoryViewer]);\n\n  useEffect(() => {\n    const isChannelWithProfiles = isChannel && chat?.areProfilesShown;\n    if (chatId && chat && !sendAsPeerIds && isReady && (isChatSuperGroup(chat) || isChannelWithProfiles)) {\n      loadSendAs({ chatId });\n    }\n  }, [chat, chatId, isChannel, isReady, loadSendAs, sendAsPeerIds]);\n\n  const shouldAnimateSendAsButtonRef = useRef(false);\n  useSyncEffect(([prevChatId, prevSendAsPeerIds]) => {\n    // We only animate send-as button if `sendAsPeerIds` was missing when opening the chat\n    shouldAnimateSendAsButtonRef.current = Boolean(chatId === prevChatId && sendAsPeerIds && !prevSendAsPeerIds);\n  }, [chatId, sendAsPeerIds]);\n\n  const [attachments, setAttachments] = useState<ApiAttachment[]>([]);\n  const hasAttachments = Boolean(attachments.length);\n  const [nextText, setNextText] = useState<ApiFormattedText | undefined>(undefined);\n\n  const {\n    canSendStickers, canSendGifs, canAttachMedia, canAttachPolls, canAttachEmbedLinks,\n    canSendVoices, canSendPlainText, canSendAudios, canSendVideos, canSendPhotos, canSendDocuments,\n  } = useMemo(\n    () => getAllowedAttachmentOptions(chat, chatFullInfo, isChatWithBot, isInStoryViewer),\n    [chat, chatFullInfo, isChatWithBot, isInStoryViewer],\n  );\n\n  const isNeedPremium = isContactRequirePremium && isInStoryViewer;\n  const isSendTextBlocked = isNeedPremium || !canSendPlainText;\n\n  const hasWebPagePreview = !hasAttachments && canAttachEmbedLinks && !noWebPage && Boolean(webPagePreview);\n  const isComposerBlocked = isSendTextBlocked && !editingMessage;\n\n  useEffect(() => {\n    if (!hasWebPagePreview) {\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [hasWebPagePreview]);\n\n  const insertHtmlAndUpdateCursor = useLastCallback((newHtml: string, inInputId: string = editableInputId) => {\n    if (inInputId === editableInputId && isComposerBlocked) return;\n\n    richInputCtx.editable.execCommand('insertHtml', newHtml);\n  });\n\n  const insertTextAndUpdateCursor = useLastCallback((\n    text: string, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = renderText(text, ['escape_html', 'emoji_html', 'br_html'])\n      .join('')\n      .replace(/\\u200b+/g, '\\u200b');\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertFormattedTextAndUpdateCursor = useLastCallback((\n    text: ApiFormattedText, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = getTextWithEntitiesAsHtml(text);\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertCustomEmojiAndUpdateCursor = useLastCallback((emoji: ApiSticker, inInputId: string = editableInputId) => {\n    insertHtmlAndUpdateCursor(buildCustomEmojiHtml(emoji), inInputId);\n  });\n\n  const insertNextText = useLastCallback(() => {\n    if (!nextText) return;\n    insertFormattedTextAndUpdateCursor(nextText, editableInputId);\n    setNextText(undefined);\n  });\n\n  const {\n    shouldSuggestCompression,\n    shouldForceCompression,\n    shouldForceAsFile,\n    handleAppendFiles,\n    handleFileSelect,\n    handleClearAttachments,\n    handleSetAttachments,\n  } = useAttachmentModal({\n    attachments,\n    setAttachments,\n    fileSizeLimit,\n    chatId,\n    canSendAudios,\n    canSendVideos,\n    canSendPhotos,\n    canSendDocuments,\n    insertNextText,\n    editedMessage: editingMessage,\n  });\n\n  const [isBotKeyboardOpen, openBotKeyboard, closeBotKeyboard] = useFlag();\n  const [isBotCommandMenuOpen, openBotCommandMenu, closeBotCommandMenu] = useFlag();\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n  const [isSendAsMenuOpen, openSendAsMenu, closeSendAsMenu] = useFlag();\n  const [isHoverDisabled, disableHover, enableHover] = useFlag();\n\n  const {\n    startRecordingVoice,\n    stopRecordingVoice,\n    pauseRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef: mainButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  } = useVoiceRecording();\n\n  const shouldSendRecordingStatus = isForCurrentMessageList && !isInStoryViewer;\n  useInterval(() => {\n    sendMessageAction({ type: 'recordAudio' });\n  }, shouldSendRecordingStatus ? activeVoiceRecording && SEND_MESSAGE_ACTION_INTERVAL : undefined);\n\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (!activeVoiceRecording) {\n      sendMessageAction({ type: 'cancel' });\n    }\n  }, [activeVoiceRecording, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isEditingRef = useStateRef(Boolean(editingMessage));\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (richInputCtx.editable.htmlS() && !isEditingRef.current) {\n      sendMessageAction({ type: 'typing' });\n    }\n  }, [\n    richInputCtx.editable, richInputCtx.editable.htmlS, isEditingRef,\n    isForCurrentMessageList, isInStoryViewer, sendMessageAction,\n  ]);\n\n  const isAdmin = chat && isChatAdmin(chat);\n\n  const {\n    isEmojiTooltipOpen,\n    closeEmojiTooltip,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  } = useEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers && !hasAttachments),\n    richInputCtx,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    closeCustomEmojiTooltip,\n    insertCustomEmoji,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestCustomEmoji && !hasAttachments),\n    richInputCtx,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isStickerTooltipOpen,\n    closeStickerTooltip,\n  } = useStickerTooltip(\n    Boolean(isReady\n      && isOnActiveTab\n      && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers\n      && canSendStickers\n      && !hasAttachments),\n    richInputCtx,\n    stickersForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    richInputCtx,\n    groupChatMembers,\n    topInlineBotIds,\n    currentUserId,\n  );\n\n  const {\n    isOpen: isInlineBotTooltipOpen,\n    botId: inlineBotId,\n    isGallery: isInlineBotTooltipGallery,\n    switchPm: inlineBotSwitchPm,\n    switchWebview: inlineBotSwitchWebview,\n    results: inlineBotResults,\n    closeTooltip: closeInlineBotTooltip,\n    help: inlineBotHelp,\n    loadMore: loadMoreForInlineBot,\n  } = useInlineBotTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    chatId,\n    getHtml,\n    inlineBots,\n  );\n\n  const hasQuickReplies = Boolean(quickReplies && Object.keys(quickReplies).length);\n\n  const {\n    isOpen: isChatCommandTooltipOpen,\n    close: closeChatCommandTooltip,\n    filteredBotCommands: botTooltipCommands,\n    filteredQuickReplies: quickReplyCommands,\n  } = useChatCommandTooltip(\n    Boolean(isInMessageList\n      && isReady\n      && isForCurrentMessageList\n      && ((botCommands && botCommands?.length) || chatBotCommands?.length || (hasQuickReplies && canSendQuickReplies))),\n    getHtml,\n    botCommands,\n    chatBotCommands,\n    canSendQuickReplies ? quickReplies : undefined,\n  );\n\n  useDraft({\n    draft,\n    chatId,\n    threadId,\n    richInputCtx,\n    editedMessage: editingMessage,\n    isDisabled: isInStoryViewer || Boolean(requestedDraft),\n  });\n\n  const resetComposer = useLastCallback((shouldPreserveInput = false) => {\n    if (!shouldPreserveInput) {\n      richInputCtx.editable.clearInput();\n    }\n\n    setAttachments(MEMO_EMPTY_ARRAY);\n    setNextText(undefined);\n\n    closeEmojiTooltip();\n    closeCustomEmojiTooltip();\n    closeStickerTooltip();\n    closeMentionTooltip();\n\n    if (isMobile) {\n      // @optimization\n      setTimeout(() => closeSymbolMenu(), SENDING_ANIMATION_DURATION);\n    } else {\n      closeSymbolMenu();\n    }\n  });\n\n  const [handleEditComplete, handleEditCancel, shouldForceShowEditing] = useEditing(\n    richInputCtx,\n    editingMessage,\n    resetComposer,\n    chatId,\n    threadId,\n    messageListType,\n    draft,\n    editingDraft,\n  );\n\n  // Handle chat change (should be placed after `useDraft` and `useEditing`)\n  const resetComposerRef = useStateRef(resetComposer);\n  const stopRecordingVoiceRef = useStateRef(stopRecordingVoice);\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      stopRecordingVoiceRef.current();\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      resetComposerRef.current();\n    };\n  }, [chatId, threadId, resetComposerRef, stopRecordingVoiceRef]);\n\n  const canAnimate = selectCanAnimateInterface(getGlobal());\n\n  const showCustomEmojiPremiumNotification = useLastCallback(() => {\n    const notificationNumber = customEmojiNotificationNumber.current;\n    if (!notificationNumber) {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n    } else {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint2'),\n        action: {\n          action: 'openChat',\n          payload: { id: currentUserId, shouldReplaceHistory: true },\n        },\n        actionText: lang('Open'),\n      });\n    }\n    customEmojiNotificationNumber.current = Number(!notificationNumber);\n  });\n\n  const mainButtonState = useDerivedState(() => {\n    if (!isInputHasFocus && onForward && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Forward;\n    }\n\n    if (editingMessage && shouldForceShowEditing) {\n      return MainButtonState.Edit;\n    }\n\n    if (IS_VOICE_RECORDING_SUPPORTED && !activeVoiceRecording && !isForwarding && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Record;\n    }\n\n    if (isInScheduledList) {\n      return MainButtonState.Schedule;\n    }\n\n    return MainButtonState.Send;\n  }, [\n    activeVoiceRecording, editingMessage, getHtml, hasAttachments, isForwarding, isInputHasFocus, onForward,\n    shouldForceShowEditing, isInScheduledList,\n  ]);\n  const canShowCustomSendMenu = !isInScheduledList;\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !(mainButtonState === MainButtonState.Send && canShowCustomSendMenu));\n\n  const {\n    contextMenuAnchor: storyReactionPickerAnchor,\n    handleContextMenu: handleStoryPickerContextMenu,\n    handleBeforeContextMenu: handleBeforeStoryPickerContextMenu,\n    handleContextMenuHide: handleStoryPickerContextMenuHide,\n  } = useContextMenuHandlers(storyReactionRef, !isInStoryViewer);\n\n  useEffect(() => {\n    if (isReactionPickerOpen) return;\n\n    if (storyReactionPickerAnchor) {\n      openStoryReactionPicker({\n        peerId: chatId,\n        storyId: storyId!,\n        position: storyReactionPickerAnchor,\n      });\n      handleStoryPickerContextMenuHide();\n    }\n  }, [chatId, handleStoryPickerContextMenuHide, isReactionPickerOpen, storyId, storyReactionPickerAnchor]);\n\n  useClipboardPaste(\n    isForCurrentMessageList || isInStoryViewer,\n    richInputCtx,\n    handleSetAttachments,\n    setNextText,\n    editingMessage,\n    !isCurrentUserPremium && !isChatWithSelf,\n    showCustomEmojiPremiumNotification,\n  );\n\n  const handleEmbeddedClear = useLastCallback(() => {\n    if (editingMessage) {\n      handleEditCancel();\n    }\n  });\n\n  const validateTextLength = useLastCallback((text: string, isAttachmentModal?: boolean) => {\n    const maxLength = isAttachmentModal ? captionLimit : maxMessageLength;\n    if (text?.length > maxLength) {\n      const extraLength = text.length - maxLength;\n      showDialog({\n        data: {\n          message: 'MESSAGE_TOO_LONG_PLEASE_REMOVE_CHARACTERS',\n          textParams: {\n            '{EXTRA_CHARS_COUNT}': extraLength.toString(),\n            '{PLURAL_S}': extraLength > 1 ? 's' : '',\n          },\n          hasErrorKey: true,\n        },\n      });\n\n      return false;\n    }\n    return true;\n  });\n\n  const checkSlowMode = useLastCallback(() => {\n    if (slowMode && !isAdmin) {\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const nowSeconds = getServerTime();\n      const secondsSinceLastMessage = lastMessageSendTimeSeconds.current\n        && Math.floor(nowSeconds - lastMessageSendTimeSeconds.current);\n      const nextSendDateNotReached = slowMode.nextSendDate && slowMode.nextSendDate > nowSeconds;\n\n      if (\n        (secondsSinceLastMessage && secondsSinceLastMessage < slowMode.seconds)\n        || nextSendDateNotReached\n      ) {\n        const secondsRemaining = nextSendDateNotReached\n          ? slowMode.nextSendDate! - nowSeconds\n          : slowMode.seconds - secondsSinceLastMessage!;\n        showDialog({\n          data: {\n            message: lang('SlowModeHint', formatMediaDuration(secondsRemaining)),\n            isSlowMode: true,\n            hasErrorKey: false,\n          },\n        });\n\n        messageInput?.blur();\n\n        return false;\n      }\n    }\n    return true;\n  });\n\n  const sendAttachments = useLastCallback(({\n    attachments: attachmentsToSend,\n    sendCompressed = attachmentSettings.shouldCompress,\n    sendGrouped = attachmentSettings.shouldSendGrouped,\n    isSilent,\n    scheduledAt,\n    isInvertedMedia,\n  }: {\n    attachments: ApiAttachment[];\n    sendCompressed?: boolean;\n    sendGrouped?: boolean;\n    isSilent?: boolean;\n    scheduledAt?: number;\n    isInvertedMedia?: true;\n  }) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    const { text, entities } = richInputCtx.editable.getFormattedText(true);\n    if (!text && !attachmentsToSend.length) {\n      return;\n    }\n    if (!validateTextLength(text, true)) return;\n    if (!checkSlowMode()) return;\n\n    isInvertedMedia = text && sendCompressed && sendGrouped ? isInvertedMedia : undefined;\n\n    if (editingMessage) {\n      editMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n        shouldGroupMessages: sendGrouped,\n        isInvertedMedia,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, isLocalOnly: true });\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleSendAttachmentsFromModal = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isInvertedMedia?: true,\n  ) => {\n    sendAttachments({\n      attachments,\n      sendCompressed,\n      sendGrouped,\n      isInvertedMedia,\n    });\n  });\n\n  const handleSendAttachments = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isSilent?: boolean,\n    scheduledAt?: number,\n    isInvertedMedia?: true,\n  ) => {\n    sendAttachments({\n      attachments,\n      sendCompressed,\n      sendGrouped,\n      isSilent,\n      scheduledAt,\n      isInvertedMedia,\n    });\n  });\n\n  const handleSend = useLastCallback(async (isSilent = false, scheduledAt?: number) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (canAnimate) {\n      renderer?.nextState();\n    }\n\n    let currentAttachments = attachments;\n\n    if (activeVoiceRecording) {\n      const record = await stopRecordingVoice();\n      const ttlSeconds = isViewOnceEnabled ? ONE_TIME_MEDIA_TTL_SECONDS : undefined;\n      if (record) {\n        const { blob, duration, waveform } = record;\n        currentAttachments = [await buildAttachment(\n          VOICE_RECORDING_FILENAME,\n          blob,\n          { voice: { duration, waveform }, ttlSeconds },\n        )];\n      }\n    }\n\n    const { text, entities } = richInputCtx.editable.getFormattedText(true);\n    if (currentAttachments.length) {\n      sendAttachments({\n        attachments: currentAttachments,\n        scheduledAt,\n        isSilent,\n      });\n      return;\n    }\n\n    if (!text && !isForwarding) {\n      return;\n    }\n\n    if (!validateTextLength(text)) return;\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    const effectId = effect?.id;\n\n    if (text) {\n      if (!checkSlowMode()) return;\n\n      const isInvertedMedia = hasWebPagePreview ? attachmentSettings.isInvertedMedia : undefined;\n\n      if (areEffectsSupported) saveEffectInDraft({ chatId, threadId, effectId: undefined });\n\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n        isInvertedMedia,\n        effectId,\n        webPageMediaSize: attachmentSettings.webPageMediaSize,\n        webPageUrl: hasWebPagePreview ? webPagePreview!.url : undefined,\n      });\n    }\n\n    if (isForwarding) {\n      forwardMessages({\n        scheduledAt,\n        isSilent,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n    clearDraft({\n      chatId, threadId, isLocalOnly: true, shouldKeepReply: isForwarding,\n    });\n\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleClickBotMenu = useLastCallback(() => {\n    if (botMenuButton?.type !== 'webApp') {\n      return;\n    }\n\n    const parsedLink = tryParseDeepLink(botMenuButton.url);\n\n    if (parsedLink?.type === 'publicUsernameOrBotLink' && parsedLink.appName) {\n      processDeepLink(botMenuButton.url);\n    } else {\n      callAttachBot({\n        chatId, url: botMenuButton.url, threadId,\n      });\n    }\n  });\n\n  const handleActivateBotCommandMenu = useLastCallback(() => {\n    closeSymbolMenu();\n    openBotCommandMenu();\n  });\n\n  const handleMessageSchedule = useLastCallback((\n    args: ScheduledMessageArgs, scheduledAt: number, messageList: MessageList, effectId?: string,\n  ) => {\n    if (args && 'queryId' in args) {\n      const { id, queryId, isSilent } = args;\n      sendInlineBotResult({\n        id,\n        queryId,\n        scheduledAt,\n        isSilent,\n        messageList,\n      });\n      return;\n    }\n\n    const { isSilent, ...restArgs } = args || {};\n\n    if (!args || Object.keys(restArgs).length === 0) {\n      void handleSend(Boolean(isSilent), scheduledAt);\n    } else if (args.sendCompressed !== undefined || args.sendGrouped !== undefined) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = args;\n      void handleSendAttachments(sendCompressed, sendGrouped, isSilent, scheduledAt, isInvertedMedia);\n    } else {\n      sendMessage({\n        ...args,\n        messageList,\n        scheduledAt,\n        effectId,\n      });\n    }\n  });\n\n  useEffectWithPrevDeps(([prevContentToBeScheduled]) => {\n    if (currentMessageList && contentToBeScheduled && contentToBeScheduled !== prevContentToBeScheduled) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule(contentToBeScheduled, scheduledAt, currentMessageList);\n      });\n    }\n  }, [contentToBeScheduled, currentMessageList, handleMessageSchedule, requestCalendar]);\n\n  useEffect(() => {\n    if (requestedDraft) {\n      insertFormattedTextAndUpdateCursor(requestedDraft);\n      resetOpenChatWithDraft();\n\n      requestNextMutation(() => {\n        const messageInput = document.getElementById(editableInputId)!;\n        focusEditableElement(messageInput, true);\n      });\n    }\n  }, [editableInputId, requestedDraft, resetOpenChatWithDraft, richInputCtx.editable]);\n\n  useEffect(() => {\n    if (requestedDraftFiles?.length) {\n      void handleFileSelect(requestedDraftFiles);\n      resetOpenChatWithDraft();\n    }\n  }, [handleFileSelect, requestedDraftFiles, resetOpenChatWithDraft]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker, inInputId?: string) => {\n    const emojiSetId = 'id' in emoji.stickerSetInfo && emoji.stickerSetInfo.id;\n    if (!emoji.isFree && !isCurrentUserPremium && !isChatWithSelf && emojiSetId !== chatEmojiSetId) {\n      showCustomEmojiPremiumNotification();\n      return;\n    }\n\n    insertCustomEmojiAndUpdateCursor(emoji, inInputId);\n  });\n\n  const handleCustomEmojiSelectAttachmentModal = useLastCallback((emoji: ApiSticker) => {\n    handleCustomEmojiSelect(emoji, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleGifSelect = useLastCallback((gif: ApiVideo, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ gif, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(true);\n        });\n      });\n    } else {\n      sendMessage({ messageList: currentMessageList, gif, isSilent });\n      requestMeasure(() => {\n        resetComposer(true);\n      });\n    }\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    isScheduleRequested?: boolean,\n    shouldPreserveInput = false,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ sticker, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(shouldPreserveInput);\n        });\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        sticker,\n        isSilent,\n        shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && canUpdateStickerSetsOrder,\n      });\n      clearDraft({ chatId, threadId, isLocalOnly: true });\n\n      requestMeasure(() => {\n        resetComposer(shouldPreserveInput);\n      });\n    }\n  });\n\n  const handleInlineBotSelect = useLastCallback((\n    inlineResult: ApiBotInlineResult | ApiBotInlineMediaResult, isSilent?: boolean, isScheduleRequested?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (isInScheduledList || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({\n          id: inlineResult.id,\n          queryId: inlineResult.queryId,\n          isSilent,\n        }, scheduledAt, currentMessageList!);\n      });\n    } else {\n      sendInlineBotResult({\n        id: inlineResult.id,\n        queryId: inlineResult.queryId,\n        isSilent,\n        messageList: currentMessageList!,\n      });\n    }\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleBotCommandSelect = useLastCallback(() => {\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handlePollSend = useLastCallback((poll: ApiNewPoll) => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ poll }, scheduledAt, currentMessageList);\n      });\n      closePollModal();\n    } else {\n      sendMessage({ messageList: currentMessageList, poll });\n      closePollModal();\n    }\n  });\n\n  const sendSilent = useLastCallback((additionalArgs?: ScheduledMessageArgs) => {\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ ...additionalArgs, isSilent: true }, scheduledAt, currentMessageList!);\n      });\n    } else if (additionalArgs && ('sendCompressed' in additionalArgs || 'sendGrouped' in additionalArgs)) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = additionalArgs;\n      void handleSendAttachments(sendCompressed, sendGrouped, true, undefined, isInvertedMedia);\n    } else {\n      void handleSend(true);\n    }\n  });\n\n  const handleSendAsMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  useEffect(() => {\n    if (!isComposerBlocked) return;\n\n    richInputCtx.editable.clearInput();\n  }, [isComposerBlocked, richInputCtx.editable, attachments]);\n\n  const insertTextAndUpdateCursorAttachmentModal = useLastCallback((text: string) => {\n    insertTextAndUpdateCursor(text, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const removeSymbol = useLastCallback(() => {\n    richInputCtx.editable.removeLastSymbol();\n  });\n\n  const removeSymbolAttachmentModal = useLastCallback(() => {\n    removeSymbol();\n  });\n\n  const handleAllScheduledClick = useLastCallback(() => {\n    openThread({\n      chatId, threadId, type: 'scheduled', noForumTopicPanel: true,\n    });\n  });\n\n  useEffect(() => {\n    if (isRightColumnShown && isMobile) {\n      closeSymbolMenu();\n    }\n  }, [isRightColumnShown, closeSymbolMenu, isMobile]);\n\n  useEffect(() => {\n    if (!isReady) return;\n\n    if (isSelectModeActive) {\n      disableHover();\n    } else {\n      setTimeout(() => {\n        enableHover();\n      }, SELECT_MODE_TRANSITION_MS);\n    }\n  }, [isSelectModeActive, enableHover, disableHover, isReady]);\n\n  const withBotMenuButton = isChatWithBot && botMenuButton?.type === 'webApp' && !editingMessage;\n  const isBotMenuButtonOpen = useDerivedState(() => {\n    return withBotMenuButton && !getHtml() && !activeVoiceRecording;\n  }, [withBotMenuButton, getHtml, activeVoiceRecording]);\n\n  const [timedPlaceholderLangKey, timedPlaceholderDate] = useMemo(() => {\n    if (slowMode?.nextSendDate) {\n      return ['SlowModeWait', slowMode.nextSendDate];\n    }\n\n    if (stealthMode?.activeUntil && isInStoryViewer) {\n      return ['StealthModeActiveHint', stealthMode.activeUntil];\n    }\n\n    return [];\n  }, [isInStoryViewer, slowMode?.nextSendDate, stealthMode?.activeUntil]);\n\n  const isComposerHasFocus = isBotKeyboardOpen || isSymbolMenuOpen || isEmojiTooltipOpen || isSendAsMenuOpen\n    || isMentionTooltipOpen || isInlineBotTooltipOpen || isBotCommandMenuOpen || isAttachMenuOpen\n    || isStickerTooltipOpen || isChatCommandTooltipOpen || isCustomEmojiTooltipOpen || isBotMenuButtonOpen\n  || isCustomSendMenuOpen || Boolean(activeVoiceRecording) || attachments.length > 0 || isInputHasFocus;\n  const isReactionSelectorOpen = isComposerHasFocus && !isReactionPickerOpen && isInStoryViewer && !isAttachMenuOpen\n    && !isSymbolMenuOpen;\n  const placeholderForForumAsMessages = chat?.isForum && chat?.isForumAsMessages && threadId === MAIN_THREAD_ID\n    ? (replyToTopic\n      ? lang('Chat.InputPlaceholderReplyInTopic', replyToTopic.title)\n      : lang('Message.Placeholder.MessageInGeneral'))\n    : undefined;\n\n  useEffect(() => {\n    if (isComposerHasFocus) {\n      onFocus?.();\n    } else {\n      onBlur?.();\n    }\n  }, [isComposerHasFocus, onBlur, onFocus]);\n\n  const {\n    shouldRender: shouldRenderReactionSelector,\n    transitionClassNames: reactionSelectorTransitonClassNames,\n  } = useShowTransitionDeprecated(isReactionSelectorOpen);\n  const areVoiceMessagesNotAllowed = mainButtonState === MainButtonState.Record\n    && (!canAttachMedia || !canSendVoiceByPrivacy || !canSendVoices);\n\n  const mainButtonHandler = useLastCallback(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Forward:\n        onForward?.();\n        break;\n      case MainButtonState.Send:\n        void handleSend();\n        break;\n      case MainButtonState.Record: {\n        if (areVoiceMessagesNotAllowed) {\n          if (!canSendVoiceByPrivacy) {\n            showNotification({\n              message: lang('VoiceMessagesRestrictedByPrivacy', chat?.title),\n            });\n          } else if (!canSendVoices) {\n            showAllowedMessageTypesNotification({ chatId });\n          }\n        } else {\n          setIsViewOnceEnabled(false);\n          void startRecordingVoice();\n        }\n        break;\n      }\n      case MainButtonState.Edit:\n        handleEditComplete();\n        break;\n      case MainButtonState.Schedule:\n        if (activeVoiceRecording) {\n          pauseRecordingVoice();\n        }\n        if (!currentMessageList) {\n          return;\n        }\n        requestCalendar((scheduledAt) => {\n          handleMessageSchedule({}, scheduledAt, currentMessageList, effect?.id);\n        });\n        break;\n      default:\n        break;\n    }\n  });\n\n  const scheduledDefaultDate = new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  let sendButtonAriaLabel = 'SendMessage';\n  switch (mainButtonState) {\n    case MainButtonState.Forward:\n      sendButtonAriaLabel = 'Forward';\n      break;\n    case MainButtonState.Edit:\n      sendButtonAriaLabel = 'Save edited message';\n      break;\n    case MainButtonState.Record:\n      sendButtonAriaLabel = !canAttachMedia\n        ? 'Conversation.DefaultRestrictedMedia'\n        : 'AccDescrVoiceMessage';\n  }\n\n  const fullClassName = buildClassName(\n    'Composer',\n    !isSelectModeActive && 'shown',\n    isHoverDisabled && 'hover-disabled',\n    isMounted && 'mounted',\n    className,\n  );\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if (reaction.type === 'emoji') {\n      text = reaction.emoticon;\n    }\n\n    if (reaction.type === 'custom') {\n      const sticker = getGlobal().customEmojis.byId[reaction.documentId];\n      if (!sticker) {\n        return;\n      }\n\n      if (!sticker.isFree && !isCurrentUserPremium && !isChatWithSelf) {\n        showCustomEmojiPremiumNotification();\n        return;\n      }\n      const customEmojiMessage = parseHtmlAsFormattedText(buildCustomEmojiHtml(sticker));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    sendMessage({ text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleToggleEffectReaction = useLastCallback((reaction: ApiReaction) => {\n    setReactionEffect({ chatId, threadId, reaction });\n\n    closeReactionPicker();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openStoryReactionPicker({\n      peerId: chatId,\n      storyId: storyId!,\n      position,\n      sendAsMessage: true,\n    });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentStoryReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId: chatId,\n      storyId: storyId!,\n      containerId: getStoryKey(chatId, storyId!),\n      reaction,\n    });\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    if (canAnimate) {\n      renderer?.nextState();\n    }\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({}, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    sendSilent();\n  });\n\n  const handleSendWhenOnline = useLastCallback(() => {\n    handleMessageSchedule({}, SCHEDULED_WHEN_ONLINE, currentMessageList!, effect?.id);\n  });\n\n  const handleSendScheduledAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ sendCompressed, sendGrouped, isInvertedMedia }, scheduledAt, currentMessageList!);\n      });\n    },\n  );\n\n  const handleSendSilentAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      sendSilent({ sendCompressed, sendGrouped, isInvertedMedia });\n    },\n  );\n\n  const handleRemoveEffect = useLastCallback(() => { saveEffectInDraft({ chatId, threadId, effectId: undefined }); });\n\n  const handleStopEffect = useLastCallback(() => { hideEffectInComposer({ }); });\n\n  const onSend = useMemo(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Edit:\n        return handleEditComplete;\n      case MainButtonState.Schedule:\n        return handleSendScheduled;\n      default:\n        return handleSend;\n    }\n  }, [mainButtonState, handleEditComplete]);\n\n  const withBotCommands = isChatWithBot && botMenuButton?.type === 'commands' && !editingMessage\n    && botCommands !== false && !activeVoiceRecording;\n\n  const effectEmoji = areEffectsSupported && effect?.emoticon;\n\n  return (\n    <div className={fullClassName}>\n      {isInMessageList && canAttachMedia && isReady && (\n        <DropArea\n          isOpen={dropAreaState !== DropAreaState.None}\n          withQuick={dropAreaState === DropAreaState.QuickFile || prevDropAreaState === DropAreaState.QuickFile}\n          onHide={onDropHide!}\n          onFileSelect={handleFileSelect}\n          editingMessage={editingMessage}\n        />\n      )}\n      {shouldRenderReactionSelector && !isNeedPremium && (\n        <ReactionSelector\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleReaction}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleReactionPickerOpen}\n          className={reactionSelectorTransitonClassNames}\n        />\n      )}\n      <AttachmentModal\n        richInputCtx={richInputCtx}\n        chatId={chatId}\n        threadId={threadId}\n        canShowCustomSendMenu={canShowCustomSendMenu}\n        attachments={attachments}\n        getHtml={getHtml}\n        isReady={isReady}\n        shouldSuggestCompression={shouldSuggestCompression}\n        shouldForceCompression={shouldForceCompression}\n        shouldForceAsFile={shouldForceAsFile}\n        isForCurrentMessageList={isForCurrentMessageList}\n        isForMessage={isInMessageList}\n        shouldSchedule={isInScheduledList}\n        forceDarkTheme={isInStoryViewer}\n        onSendSilent={handleSendSilentAttachments}\n        onSend={handleSendAttachmentsFromModal}\n        onSendScheduled={handleSendScheduledAttachments}\n        onFileAppend={handleAppendFiles}\n        onClear={handleClearAttachments}\n        onAttachmentsUpdate={handleSetAttachments}\n        onCustomEmojiSelect={handleCustomEmojiSelectAttachmentModal}\n        onRemoveSymbol={removeSymbolAttachmentModal}\n        onEmojiSelect={insertTextAndUpdateCursorAttachmentModal}\n        editingMessage={editingMessage}\n        onSendWhenOnline={handleSendWhenOnline}\n        canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n      />\n      <PollModal\n        isOpen={pollModal.isOpen}\n        isQuiz={pollModal.isQuiz}\n        shouldBeAnonymous={isChannel}\n        onClear={closePollModal}\n        onSend={handlePollSend}\n      />\n      <SendAsMenu\n        isOpen={isSendAsMenuOpen}\n        onClose={closeSendAsMenu}\n        chatId={chatId}\n        selectedSendAsId={sendAsId}\n        sendAsPeerIds={sendAsPeerIds}\n        isCurrentUserPremium={isCurrentUserPremium}\n      />\n      <MentionTooltip\n        isOpen={isMentionTooltipOpen && !isChatCommandTooltipOpen && !isInlineBotTooltipOpen}\n        filteredUsers={mentionFilteredUsers}\n        onInsertUserName={insertMention}\n        onClose={closeMentionTooltip}\n      />\n      <ChatCommandTooltip\n        isOpen={isChatCommandTooltipOpen}\n        chatId={chatId}\n        withUsername={Boolean(chatBotCommands)}\n        botCommands={botTooltipCommands}\n        quickReplies={quickReplyCommands}\n        getHtml={getHtml}\n        self={currentUser!}\n        quickReplyMessages={quickReplyMessages}\n        onClick={handleBotCommandSelect}\n        onClose={closeChatCommandTooltip}\n      />\n      <div className={\n        buildClassName('composer-wrapper', isInStoryViewer && 'with-story-tweaks', isNeedPremium && 'is-need-premium')\n      }\n      >\n        {!isNeedPremium && (\n          <svg className=\"svg-appendix\" width=\"9\" height=\"20\">\n            <defs>\n              <filter\n                x=\"-50%\"\n                y=\"-14.7%\"\n                width=\"200%\"\n                height=\"141.2%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"composerAppendix\"\n              >\n                <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n                <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n                <feColorMatrix\n                  values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n                  in=\"shadowBlurOuter1\"\n                />\n              </filter>\n            </defs>\n            <g fill=\"none\" fill-rule=\"evenodd\">\n              <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#000\" filter=\"url(#composerAppendix)\" />\n              <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#FFF\" className=\"corner\" />\n            </g>\n          </svg>\n        )}\n        {isInMessageList && (\n          <>\n            <InlineBotTooltip\n              isOpen={isInlineBotTooltipOpen}\n              botId={inlineBotId}\n              isGallery={isInlineBotTooltipGallery}\n              inlineBotResults={inlineBotResults}\n              switchPm={inlineBotSwitchPm}\n              switchWebview={inlineBotSwitchWebview}\n              loadMore={loadMoreForInlineBot}\n              isSavedMessages={isChatWithSelf}\n              canSendGifs={canSendGifs}\n              isCurrentUserPremium={isCurrentUserPremium}\n              onSelectResult={handleInlineBotSelect}\n              onClose={closeInlineBotTooltip}\n            />\n            <ComposerEmbeddedMessage\n              onClear={handleEmbeddedClear}\n              shouldForceShowEditing={Boolean(shouldForceShowEditing && editingMessage)}\n              chatId={chatId}\n              threadId={threadId}\n              messageListType={messageListType}\n            />\n            <WebPagePreview\n              chatId={chatId}\n              threadId={threadId}\n              getHtml={getHtml}\n              isDisabled={!canAttachEmbedLinks || hasAttachments}\n              isEditing={Boolean(editingMessage)}\n            />\n          </>\n        )}\n        <div className={buildClassName('message-input-wrapper', getPeerColorClass(currentUser))}>\n          {isInMessageList && (\n            <>\n              {withBotMenuButton && (\n                <BotMenuButton\n                  isOpen={isBotMenuButtonOpen}\n                  text={botMenuButton.text}\n                  isDisabled={Boolean(activeVoiceRecording)}\n                  onClick={handleClickBotMenu}\n                />\n              )}\n              {withBotCommands && (\n                <ResponsiveHoverButton\n                  className={buildClassName('bot-commands', isBotCommandMenuOpen && 'activated')}\n                  round\n                  disabled={botCommands === undefined}\n                  color=\"translucent\"\n                  onActivate={handleActivateBotCommandMenu}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <Icon name=\"bot-commands-filled\" />\n                </ResponsiveHoverButton>\n              )}\n              {canShowSendAs && (sendAsUser || sendAsChat) && (\n                <Button\n                  round\n                  color=\"translucent\"\n                  onClick={isSendAsMenuOpen ? closeSendAsMenu : handleSendAsMenuOpen}\n                  ariaLabel={lang('SendMessageAsTitle')}\n                  className={buildClassName(\n                    'send-as-button',\n                    shouldAnimateSendAsButtonRef.current && 'appear-animation',\n                  )}\n                >\n                  <Avatar\n                    peer={sendAsUser || sendAsChat}\n                    size=\"tiny\"\n                  />\n                </Button>\n              )}\n            </>\n          )}\n          {((!isComposerBlocked || canSendGifs || canSendStickers) && !isNeedPremium) && (\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              canSendStickers={canSendStickers}\n              canSendGifs={canSendGifs}\n              isMessageComposer={isInMessageList}\n              onGifSelect={handleGifSelect}\n              onStickerSelect={handleStickerSelect}\n              onCustomEmojiSelect={handleCustomEmojiSelect}\n              onRemoveSymbol={removeSymbol}\n              onEmojiSelect={insertTextAndUpdateCursor}\n              closeBotCommandMenu={closeBotCommandMenu}\n              closeSendAsMenu={closeSendAsMenu}\n              isSymbolMenuForced={isSymbolMenuForced}\n              canSendPlainText={!isComposerBlocked}\n              inputCssSelector={editableInputCssSelector}\n              idPrefix={type}\n              forceDarkTheme={isInStoryViewer}\n            />\n          )}\n          <MessageInput\n            richInputCtx={richInputCtx}\n            id={inputId}\n            editableInputId={editableInputId}\n            customEmojiPrefix={type}\n            isStoryInput={isInStoryViewer}\n            chatId={chatId}\n            canSendPlainText={!isComposerBlocked}\n            threadId={threadId}\n            isReady={isReady}\n            isActive={!hasAttachments}\n            placeholder={\n              activeVoiceRecording && windowWidth <= SCREEN_WIDTH_TO_HIDE_PLACEHOLDER\n                ? ''\n                : (!isComposerBlocked\n                  ? (botKeyboardPlaceholder || inputPlaceholder || lang(placeholderForForumAsMessages || 'Message'))\n                  : isInStoryViewer ? lang('StoryRepliesLocked') : lang('Chat.PlaceholderTextNotAllowed'))\n            }\n            timedPlaceholderDate={timedPlaceholderDate}\n            timedPlaceholderLangKey={timedPlaceholderLangKey}\n            forcedPlaceholder={inlineBotHelp}\n            canAutoFocus={isReady && isForCurrentMessageList && !hasAttachments && isInMessageList}\n            noFocusInterception={hasAttachments}\n            shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n            shouldSuppressTextFormatter={isEmojiTooltipOpen || isMentionTooltipOpen || isInlineBotTooltipOpen}\n            onSend={onSend}\n            onSuppressedFocus={closeSymbolMenu}\n            isNeedPremium={isNeedPremium}\n          />\n          {isInMessageList && (\n            <>\n              {isInlineBotLoading && Boolean(inlineBotId) && (\n                <Spinner color=\"gray\" />\n              )}\n              {withScheduledButton && (\n                <Button\n                  round\n                  faded\n                  className=\"scheduled-button\"\n                  color=\"translucent\"\n                  onClick={handleAllScheduledClick}\n                  ariaLabel=\"Open scheduled messages\"\n                >\n                  <Icon name=\"schedule\" />\n                </Button>\n              )}\n              {Boolean(botKeyboardMessageId) && !activeVoiceRecording && !editingMessage && (\n                <ResponsiveHoverButton\n                  className={isBotKeyboardOpen ? 'activated' : ''}\n                  round\n                  color=\"translucent\"\n                  onActivate={openBotKeyboard}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <Icon name=\"bot-command\" />\n                </ResponsiveHoverButton>\n              )}\n            </>\n          )}\n          {activeVoiceRecording && Boolean(currentRecordTime) && (\n            <span className=\"recording-state\">\n              {formatVoiceRecordDuration(currentRecordTime - startRecordTimeRef.current!)}\n            </span>\n          )}\n          {!isNeedPremium && (\n            <AttachMenu\n              chatId={chatId}\n              threadId={threadId}\n              editingMessage={editingMessage}\n              canEditMedia={canMediaBeReplaced}\n              isButtonVisible={!activeVoiceRecording}\n              canAttachMedia={canAttachMedia}\n              canAttachPolls={canAttachPolls}\n              canSendPhotos={canSendPhotos}\n              canSendVideos={canSendVideos}\n              canSendDocuments={canSendDocuments}\n              canSendAudios={canSendAudios}\n              onFileSelect={handleFileSelect}\n              onPollCreate={openPollModal}\n              isScheduled={isInScheduledList}\n              attachBots={isInMessageList ? attachBots : undefined}\n              peerType={attachMenuPeerType}\n              shouldCollectDebugLogs={shouldCollectDebugLogs}\n              theme={theme}\n              onMenuOpen={onAttachMenuOpen}\n              onMenuClose={onAttachMenuClose}\n            />\n          )}\n          {isInMessageList && Boolean(botKeyboardMessageId) && (\n            <BotKeyboardMenu\n              messageId={botKeyboardMessageId}\n              isOpen={isBotKeyboardOpen}\n              onClose={closeBotKeyboard}\n            />\n          )}\n          {isInMessageList && botCommands && (\n            <BotCommandMenu\n              isOpen={isBotCommandMenuOpen}\n              botCommands={botCommands}\n              onClose={closeBotCommandMenu}\n            />\n          )}\n          <CustomEmojiTooltip\n            key={`custom-emoji-tooltip-${editableInputId}`}\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            onCustomEmojiSelect={insertCustomEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <StickerTooltip\n            key={`sticker-tooltip-${editableInputId}`}\n            chatId={chatId}\n            threadId={threadId}\n            isOpen={isStickerTooltipOpen}\n            onStickerSelect={handleStickerSelect}\n            onClose={closeStickerTooltip}\n          />\n          <EmojiTooltip\n            key={`emoji-tooltip-${editableInputId}`}\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n        </div>\n      </div>\n      {canSendOneTimeMedia && activeVoiceRecording && (\n        <Button\n          className={buildClassName('view-once', isViewOnceEnabled && 'active')}\n          round\n          color=\"secondary\"\n          ariaLabel={lang('Chat.PlayOnceVoiceMessageTooltip')}\n          onClick={toogleViewOnceEnabled}\n        >\n          <Icon name=\"view-once\" />\n          <Icon name=\"one-filled\" />\n        </Button>\n      )}\n      {activeVoiceRecording && (\n        <Button\n          round\n          color=\"danger\"\n          className=\"cancel\"\n          onClick={stopRecordingVoice}\n          ariaLabel=\"Cancel voice recording\"\n        >\n          <Icon name=\"delete\" />\n        </Button>\n      )}\n      {isInStoryViewer && !activeVoiceRecording && (\n        <Button\n          round\n          className=\"story-reaction-button\"\n          color=\"secondary\"\n          onClick={handleLikeStory}\n          onContextMenu={handleStoryPickerContextMenu}\n          onMouseDown={handleBeforeStoryPickerContextMenu}\n          ariaLabel={lang('AccDescrLike')}\n          ref={storyReactionRef}\n        >\n          {sentStoryReaction && (\n            <ReactionAnimatedEmoji\n              key={getReactionKey(sentStoryReaction)}\n              containerId={getStoryKey(chatId, storyId!)}\n              reaction={sentStoryReaction}\n              withEffectOnly={isSentStoryReactionHeart}\n            />\n          )}\n          {(!sentStoryReaction || isSentStoryReactionHeart) && (\n            <Icon name=\"heart\" className={buildClassName(isSentStoryReactionHeart && 'story-reaction-heart')} />\n          )}\n        </Button>\n      )}\n      <Button\n        ref={mainButtonRef}\n        round\n        color=\"secondary\"\n        className={buildClassName(\n          mainButtonState,\n          'main-button',\n          !isReady && 'not-ready',\n          activeVoiceRecording && 'recording',\n        )}\n        disabled={areVoiceMessagesNotAllowed}\n        allowDisabledClick\n        noFastClick\n        ariaLabel={lang(sendButtonAriaLabel)}\n        onClick={mainButtonHandler}\n        onContextMenu={\n          mainButtonState === MainButtonState.Send && canShowCustomSendMenu ? handleContextMenu : undefined\n        }\n      >\n        <Icon name=\"send\" />\n        <Icon name=\"microphone-alt\" />\n        {onForward && <Icon name=\"forward\" />}\n        {isInMessageList && <Icon name=\"schedule\" />}\n        {isInMessageList && <Icon name=\"check\" />}\n      </Button>\n      {effectEmoji && (\n        <span className=\"effect-icon\" onClick={handleRemoveEffect}>\n          {renderText(effectEmoji)}\n        </span>\n      )}\n      {effect && canPlayEffect && (\n        <MessageEffect\n          shouldPlay={shouldPlayEffect}\n          effect={effect}\n          onStop={handleStopEffect}\n        />\n      )}\n      {canShowCustomSendMenu && (\n        <CustomSendMenu\n          isOpen={isCustomSendMenuOpen}\n          canSchedule={isInMessageList && !isViewOnceEnabled}\n          canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n          onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n          onSendSchedule={!isInScheduledList ? handleSendScheduled : undefined}\n          onSendWhenOnline={handleSendWhenOnline}\n          onRemoveEffect={handleRemoveEffect}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          isSavedMessages={isChatWithSelf}\n          chatId={chatId}\n          withEffects={areEffectsSupported}\n          hasCurrentEffect={Boolean(effect)}\n          effectReactions={effectReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleEffectReaction}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        />\n      )}\n      {calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, storyId, messageListType, isMobile, type,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const chatBot = !isSystemBot(chatId) ? selectBot(global, chatId) : undefined;\n    const isChatWithBot = Boolean(chatBot);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isChatWithUser = isUserId(chatId);\n    const userFullInfo = isChatWithUser ? selectUserFullInfo(global, chatId) : undefined;\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const messageWithActualBotKeyboard = (isChatWithBot || !isChatWithUser)\n      && selectNewestMessageWithBotKeyboardButtons(global, chatId, threadId);\n    const {\n      language, shouldSuggestStickers, shouldSuggestCustomEmoji, shouldUpdateStickerSetOrder,\n    } = global.settings.byKey;\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n    const botKeyboardMessageId = messageWithActualBotKeyboard ? messageWithActualBotKeyboard.id : undefined;\n    const keyboardMessage = botKeyboardMessageId ? selectChatMessage(global, chatId, botKeyboardMessageId) : undefined;\n    const { currentUserId } = global;\n    const currentUser = selectUser(global, currentUserId!)!;\n    const defaultSendAsId = chatFullInfo ? chatFullInfo?.sendAsId || currentUserId : undefined;\n    const sendAsId = chat?.sendAsPeerIds && defaultSendAsId && (\n      chat.sendAsPeerIds.some((peer) => peer.id === defaultSendAsId)\n        ? defaultSendAsId\n        : (chat?.adminRights?.anonymous ? chat?.id : undefined)\n    );\n    const sendAsUser = sendAsId ? selectUser(global, sendAsId) : undefined;\n    const sendAsChat = !sendAsUser && sendAsId ? selectChat(global, sendAsId) : undefined;\n    const requestedDraft = selectRequestedDraft(global, chatId);\n    const requestedDraftFiles = selectRequestedDraftFiles(global, chatId);\n\n    const tabState = selectTabState(global);\n    const isStoryViewerOpen = Boolean(tabState.storyViewer.storyId);\n\n    const currentMessageList = selectCurrentMessageList(global);\n    const isForCurrentMessageList = chatId === currentMessageList?.chatId\n      && threadId === currentMessageList?.threadId\n      && messageListType === currentMessageList?.type\n      && !isStoryViewerOpen;\n    const user = selectUser(global, chatId);\n    const canSendVoiceByPrivacy = (user && !userFullInfo?.noVoiceMessages) ?? true;\n    const slowMode = chatFullInfo?.slowMode;\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const editingDraft = messageListType === 'scheduled'\n      ? selectEditingScheduledDraft(global, chatId)\n      : selectEditingDraft(global, chatId, threadId);\n\n    const story = storyId && selectPeerStory(global, chatId, storyId);\n    const sentStoryReaction = story && 'sentReaction' in story ? story.sentReaction : undefined;\n    const draft = selectDraft(global, chatId, threadId);\n    const replyToMessage = draft?.replyInfo\n      ? selectChatMessage(global, chatId, draft.replyInfo.replyToMsgId)\n      : undefined;\n    const replyToTopic = chat?.isForum && chat.isForumAsMessages && threadId === MAIN_THREAD_ID && replyToMessage\n      ? selectTopicFromMessage(global, replyToMessage)\n      : undefined;\n    const isInScheduledList = messageListType === 'scheduled';\n\n    const canSendQuickReplies = isChatWithUser && !isChatWithBot && !isInScheduledList && !isChatWithSelf;\n\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n\n    const areEffectsSupported = isChatWithUser && !isChatWithBot\n    && !isInScheduledList && !isChatWithSelf && type !== 'story' && chatId !== SERVICE_NOTIFICATIONS_USER_ID;\n    const canPlayEffect = selectPerformanceSettingsValue(global, 'stickerEffects');\n    const shouldPlayEffect = tabState.shouldPlayEffectInComposer;\n    const effectId = areEffectsSupported && draft?.effectId;\n    const effect = effectId ? global.availableEffectById[effectId] : undefined;\n    const effectReactions = global.reactions.effectReactions;\n\n    const maxMessageLength = global.config?.maxMessageLength || DEFAULT_MAX_MESSAGE_LENGTH;\n\n    return {\n      availableReactions: global.reactions.availableReactions,\n      topReactions: type === 'story' ? global.reactions.topReactions : undefined,\n      isOnActiveTab: !tabState.isBlurred,\n      editingMessage: selectEditingMessage(global, chatId, threadId, messageListType),\n      draft,\n      chat,\n      isChatWithBot,\n      isChatWithSelf,\n      isForCurrentMessageList,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, chatId),\n      isChannel: chat ? isChatChannel(chat) : undefined,\n      isRightColumnShown: selectIsRightColumnShown(global, isMobile),\n      isSelectModeActive: selectIsInSelectMode(global),\n      withScheduledButton: (\n        messageListType === 'thread'\n        && (userFullInfo || chatFullInfo)?.hasScheduledMessages\n      ),\n      isInScheduledList,\n      botKeyboardMessageId,\n      botKeyboardPlaceholder: keyboardMessage?.keyboardPlaceholder,\n      isForwarding: chatId === tabState.forwardMessages.toChatId,\n      pollModal: tabState.pollModal,\n      stickersForEmoji: global.stickers.forEmoji.stickers,\n      customEmojiForEmoji: global.customEmojis.forEmoji.stickers,\n      chatFullInfo,\n      topInlineBotIds: global.topInlineBots?.userIds,\n      currentUserId,\n      currentUser,\n      contentToBeScheduled: tabState.contentToBeScheduled,\n      shouldSuggestStickers,\n      shouldSuggestCustomEmoji,\n      shouldUpdateStickerSetOrder,\n      recentEmojis: global.recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      inlineBots: tabState.inlineBots.byUsername,\n      isInlineBotLoading: tabState.inlineBots.isLoading,\n      botCommands: userFullInfo ? (userFullInfo.botInfo?.commands || false) : undefined,\n      botMenuButton: userFullInfo?.botInfo?.menuButton,\n      sendAsUser,\n      sendAsChat,\n      sendAsId,\n      editingDraft,\n      requestedDraft,\n      requestedDraftFiles,\n      attachBots: global.attachMenu.bots,\n      attachMenuPeerType: selectChatType(global, chatId),\n      theme: selectTheme(global),\n      fileSizeLimit: selectCurrentLimit(global, 'uploadMaxFileparts') * MAX_UPLOAD_FILEPART_SIZE,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      isCurrentUserPremium,\n      canSendVoiceByPrivacy,\n      attachmentSettings: global.attachmentSettings,\n      slowMode,\n      currentMessageList,\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      canSendOneTimeMedia: !isChatWithSelf && isChatWithUser && !isChatWithBot && !isInScheduledList,\n      shouldCollectDebugLogs: global.settings.byKey.shouldCollectDebugLogs,\n      sentStoryReaction,\n      stealthMode: global.stories.stealthMode,\n      replyToTopic,\n      quickReplyMessages: global.quickReplies.messagesById,\n      quickReplies: global.quickReplies.byId,\n      canSendQuickReplies,\n      noWebPage,\n      webPagePreview: selectTabState(global).webPagePreview,\n      isContactRequirePremium: userFullInfo?.isContactRequirePremium,\n      effect,\n      effectReactions,\n      areEffectsSupported,\n      canPlayEffect,\n      shouldPlayEffect,\n      maxMessageLength,\n    };\n  },\n)(Composer));\n","import { useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiMessage } from '../../../../api/types';\n\nimport { canReplaceMessageMedia, getAttachmentMediaType } from '../../../../global/helpers';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport buildAttachment from '../helpers/buildAttachment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nexport default function useAttachmentModal({\n  attachments,\n  fileSizeLimit,\n  setAttachments,\n  chatId,\n  canSendAudios,\n  canSendVideos,\n  canSendPhotos,\n  canSendDocuments,\n  insertNextText,\n  editedMessage,\n}: {\n  attachments: ApiAttachment[];\n  fileSizeLimit: number;\n  setAttachments: (attachments: ApiAttachment[]) => void;\n  chatId: string;\n  canSendAudios?: boolean;\n  canSendVideos?: boolean;\n  canSendPhotos?: boolean;\n  canSendDocuments?: boolean;\n  insertNextText: VoidFunction;\n  editedMessage: ApiMessage | undefined;\n}) {\n  const lang = useOldLang();\n  const { openLimitReachedModal, showAllowedMessageTypesNotification, showNotification } = getActions();\n  const [shouldForceAsFile, setShouldForceAsFile] = useState<boolean>(false);\n  const [shouldForceCompression, setShouldForceCompression] = useState<boolean>(false);\n  const [shouldSuggestCompression, setShouldSuggestCompression] = useState<boolean | undefined>(undefined);\n\n  const handleClearAttachments = useLastCallback(() => {\n    setAttachments(MEMO_EMPTY_ARRAY);\n    insertNextText();\n  });\n\n  const handleSetAttachments = useLastCallback(\n    (newValue: ApiAttachment[] | ((current: ApiAttachment[]) => ApiAttachment[])) => {\n      const newAttachments = typeof newValue === 'function' ? newValue(attachments) : newValue;\n      if (!newAttachments.length) {\n        handleClearAttachments();\n        return;\n      }\n\n      if (newAttachments.some((attachment) => {\n        const type = getAttachmentMediaType(attachment);\n\n        return (type === 'audio' && !canSendAudios && !canSendDocuments)\n          || (type === 'video' && !canSendVideos && !canSendDocuments)\n          || (type === 'photo' && !canSendPhotos && !canSendDocuments)\n          || (type === 'file' && !canSendDocuments);\n      })) {\n        showAllowedMessageTypesNotification({ chatId });\n      } else if (newAttachments.some(({ size }) => size > fileSizeLimit)) {\n        openLimitReachedModal({\n          limit: 'uploadMaxFileparts',\n        });\n      } else {\n        setAttachments(newAttachments);\n        const shouldForce = newAttachments.some((attachment) => {\n          const type = getAttachmentMediaType(attachment);\n\n          return (type === 'audio' && !canSendAudios)\n            || (type === 'video' && !canSendVideos)\n            || (type === 'photo' && !canSendPhotos);\n        });\n\n        setShouldForceAsFile(Boolean(shouldForce && canSendDocuments));\n        setShouldForceCompression(!canSendDocuments);\n      }\n    },\n  );\n\n  const handleAppendFiles = useLastCallback(async (files: File[], isSpoiler?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => (\n        buildAttachment(file.name, file, { shouldSendAsSpoiler: isSpoiler || undefined })\n      )));\n      handleSetAttachments([...attachments, ...newAttachments]);\n    }\n  });\n\n  const handleFileSelect = useLastCallback(async (files: File[], suggestCompression?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => buildAttachment(file.name, file)));\n      handleSetAttachments(newAttachments);\n    }\n    setShouldSuggestCompression(suggestCompression);\n  });\n\n  return {\n    shouldSuggestCompression,\n    handleAppendFiles,\n    handleFileSelect,\n    handleClearAttachments,\n    handleSetAttachments,\n    shouldForceCompression,\n    shouldForceAsFile,\n  };\n}\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport captureEscKeyListener from '../../../../util/captureEscKeyListener';\nimport * as voiceRecording from '../../../../util/voiceRecording';\nimport { IS_SAFARI, IS_VOICE_RECORDING_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ntype ActiveVoiceRecording =\n  { stop: () => Promise<voiceRecording.Result>; pause: NoneToVoidFunction }\n  | undefined;\n\nconst useVoiceRecording = () => {\n  // eslint-disable-next-line no-null/no-null\n  const recordButtonRef = useRef<HTMLButtonElement>(null);\n  const [activeVoiceRecording, setActiveVoiceRecording] = useState<ActiveVoiceRecording>();\n  const startRecordTimeRef = useRef<number>();\n  const [currentRecordTime, setCurrentRecordTime] = useState<number | undefined>();\n  const [isViewOnceEnabled, setIsViewOnceEnabled] = useState(false);\n\n  useEffect(() => {\n    // Preloading worker fixes silent first record on iOS\n    if (IS_SAFARI && IS_VOICE_RECORDING_SUPPORTED) {\n      void voiceRecording.init();\n    }\n  }, []);\n\n  const startRecordingVoice = useLastCallback(async () => {\n    try {\n      const { stop, pause } = await voiceRecording.start((tickVolume: number) => {\n        if (recordButtonRef.current) {\n          if (startRecordTimeRef.current && Date.now() % 4 === 0) {\n            requestMutation(() => {\n              if (!recordButtonRef.current) return;\n              recordButtonRef.current.style.boxShadow = `0 0 0 ${(tickVolume || 0) * 50}px rgba(0,0,0,.15)`;\n            });\n          }\n          setCurrentRecordTime(Date.now());\n        }\n      });\n      startRecordTimeRef.current = Date.now();\n      setCurrentRecordTime(Date.now());\n\n      setActiveVoiceRecording({ stop, pause });\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  });\n\n  const pauseRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current!.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.pause();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  const stopRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    setActiveVoiceRecording(undefined);\n    startRecordTimeRef.current = undefined;\n    setCurrentRecordTime(undefined);\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.stop();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  useEffect(() => {\n    return activeVoiceRecording ? captureEscKeyListener(stopRecordingVoice) : undefined;\n  }, [activeVoiceRecording, stopRecordingVoice]);\n\n  const toogleViewOnceEnabled = useLastCallback(() => {\n    setIsViewOnceEnabled(!isViewOnceEnabled);\n  });\n\n  return {\n    startRecordingVoice,\n    pauseRecordingVoice,\n    stopRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  };\n};\n\nexport default useVoiceRecording;\n","import type { StateHookSetter } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiAttachment,\n  ApiFormattedText,\n  ApiMessage,\n} from '../../../../api/types';\nimport type { PasteCtx } from '../../../common/richinput/RichEditable';\nimport type { RichInputCtx } from '../../../common/richinput/useRichEditable';\n\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport {\n  canReplaceMessageMedia,\n  isUploadingFileSticker,\n} from '../../../../global/helpers';\nimport {\n  containsCustomEmoji,\n  stripCustomEmoji,\n} from '../../../../global/helpers/symbols';\nimport {\n  useRichEditablePasteHandler,\n} from '../../../common/richinput/useRichEditable';\nimport buildAttachment from '../helpers/buildAttachment';\nimport getFilesFromDataTransferItems from '../helpers/getFilesFromDataTransferItems';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nconst TYPE_HTML = 'text/html';\nconst DOCUMENT_TYPE_WORD = 'urn:schemas-microsoft-com:office:word';\nconst NAMESPACE_PREFIX_WORD = 'xmlns:w';\n\nconst useClipboardPaste = (\n  isActive: boolean,\n  richInputCtx: RichInputCtx,\n  setAttachments: StateHookSetter<ApiAttachment[]>,\n  setNextText: StateHookSetter<ApiFormattedText | undefined>,\n  editedMessage: ApiMessage | undefined,\n  shouldStripCustomEmoji?: boolean,\n  onCustomEmojiStripped?: VoidFunction,\n) => {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n\n  useRichEditablePasteHandler(\n    richInputCtx,\n    async (p: PasteCtx) => {\n      if (p.text && containsCustomEmoji(p.text) && shouldStripCustomEmoji) {\n        p.text = stripCustomEmoji(p.text);\n        onCustomEmojiStripped?.();\n      }\n\n      const items = p.items;\n      let files: File[] | undefined = [];\n\n      if (items.length > 0) {\n        files = await getFilesFromDataTransferItems(items);\n        if (editedMessage) {\n          files = files?.slice(0, 1);\n        }\n      }\n\n      if (!files?.length && !p.text.text) {\n        return;\n      }\n\n      let isWordDocument = false;\n      try {\n        const parser = new DOMParser();\n        const parsedDocument = parser.parseFromString(p.html, TYPE_HTML);\n        isWordDocument = parsedDocument.documentElement.getAttribute(NAMESPACE_PREFIX_WORD)\n          === DOCUMENT_TYPE_WORD;\n      } catch (err: any) {\n        // Ignore\n      }\n\n      const hasText = p.text.text;\n      let shouldSetAttachments = files?.length && !isWordDocument;\n\n      const newAttachments = files\n        ? await Promise.all(\n          files.map((file) => buildAttachment(file.name, file)),\n        )\n        : [];\n      const canReplace = (editedMessage\n          && newAttachments?.length\n          && canReplaceMessageMedia(editedMessage, newAttachments[0]))\n        || Boolean(hasText);\n      const isUploadingDocumentSticker = isUploadingFileSticker(\n        newAttachments[0],\n      );\n      const isInAlbum = editedMessage && editedMessage?.groupedId;\n\n      if (editedMessage && isUploadingDocumentSticker) {\n        showNotification({\n          message: lang(\n            isInAlbum\n              ? 'lng_edit_media_album_error'\n              : 'lng_edit_media_invalid_file',\n          ),\n        });\n        return;\n      }\n\n      if (isInAlbum) {\n        shouldSetAttachments = canReplace;\n        if (!shouldSetAttachments) {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n          return;\n        }\n      }\n\n      if (shouldSetAttachments) {\n        requestNextMutation(() => {\n          setAttachments(\n            editedMessage\n              ? newAttachments\n              : (attachments) => attachments.concat(newAttachments),\n          );\n        });\n      }\n    },\n    isActive,\n  );\n};\n\nexport default useClipboardPaste;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport {\n  getChatTitle,\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserBot,\n  isUserId,\n} from '../../global/helpers';\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  isSavedDialog?: boolean;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isSavedDialog,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteSavedHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockUser,\n  } = getActions();\n\n  const lang = useOldLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteForAll = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteAndStop = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockUser({ userId: chat.id });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteChat = useCallback(() => {\n    if (isSavedDialog) {\n      deleteSavedHistory({ chatId: chat.id });\n    } else if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  }, [\n    isPrivateChat,\n    isBasicGroup,\n    isChannel,\n    isSuperGroup,\n    currentUserId,\n    chat.isCreator,\n    chat.id,\n    isSavedDialog,\n    onClose,\n  ]);\n\n  const handleLeaveChat = useCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else {\n      handleDeleteChat();\n    }\n  }, [chat.id, handleDeleteChat, isChannel, isSuperGroup, leaveChannel, onClose]);\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          peer={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isSavedDialog) {\n      return isChatWithSelf ? 'ClearHistoryMyNotesTitle' : 'ClearHistoryTitleSingle2';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderContent() {\n    if (isSavedDialog) {\n      return (\n        <p>\n          {renderText(\n            isChatWithSelf ? lang('ClearHistoryMyNotesMessage') : lang('ClearHistoryMessageSingle', chatTitle),\n            ['simple_markdown', 'emoji'],\n          )}\n        </p>\n      );\n    }\n    if (isChannel && chat.isCreator) {\n      return (\n        <p>\n          {renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown', 'emoji'])}\n        </p>\n      );\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown', 'emoji'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown', 'emoji'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isSavedDialog) {\n      return 'Delete';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderContent()}\n      <div className=\"dialog-buttons-column\">\n        {isBot && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n            {lang('DeleteAndStop')}\n          </Button>\n        )}\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteForAll}>\n            {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n          </Button>\n        )}\n        {!isPrivateChat && chat.isCreator && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n            {lang('DeleteForAll')}\n          </Button>\n        )}\n        <Button\n          color=\"danger\"\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={(isPrivateChat || isSavedDialog) ? handleDeleteChat : handleLeaveChat}\n        >\n          {lang(renderActionText())}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat, isSavedDialog }): StateProps => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot && !isSavedDialog);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n    };\n  },\n)(DeleteChatModal));\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiDocument, ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getDocumentMediaHash,\n  getMediaFormat,\n  getMediaThumbUri,\n  getMediaTransferState,\n  isDocumentVideo,\n} from '../../global/helpers';\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport File from './File';\n\ntype OwnProps = {\n  document: ApiDocument;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading?: boolean;\n  shouldWarnAboutSvg?: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n} & ({\n  message: ApiMessage;\n  onDateClick: (arg: ApiMessage) => void;\n} | {\n  message?: ApiMessage;\n  onDateClick?: never;\n});\n\nconst BYTES_PER_MB = 1024 * 1024;\nconst SVG_EXTENSIONS = new Set(['svg', 'svgz']);\n\nconst Document = ({\n  document,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  shouldWarnAboutSvg,\n  isDownloading,\n  message,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n}: OwnProps) => {\n  const { cancelMediaDownload, downloadMedia, setSettingOption } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const [isSvgDialogOpen, openSvgDialog, closeSvgDialog] = useFlag();\n  const [shouldNotWarnAboutSvg, setShouldNotWarnAboutSvg] = useState(false);\n\n  const { fileName, size, timestamp } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getDocumentMediaHash(document, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress(\n    documentHash, !shouldDownload, getMediaFormat(document, 'download'), undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    shouldDownload && !isLoaded,\n    uploadProgress !== undefined,\n  );\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMediaThumbUri(document) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getDocumentMediaHash(document, 'pictogram'), !isIntersecting);\n\n  const withMediaViewer = onMediaClick && document.innerMediaType;\n\n  const handleDownload = useLastCallback(() => {\n    downloadMedia({ media: document, originMessage: message });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: document });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick!();\n      return;\n    }\n\n    if (SVG_EXTENSIONS.has(extension) && shouldWarnAboutSvg) {\n      openSvgDialog();\n      return;\n    }\n\n    handleDownload();\n  });\n\n  const handleSvgConfirm = useLastCallback(() => {\n    setSettingOption({ shouldWarnAboutSvg: !shouldNotWarnAboutSvg });\n    closeSvgDialog();\n    handleDownload();\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick?.(message);\n  });\n\n  return (\n    <>\n      <File\n        ref={ref}\n        name={fileName}\n        extension={extension}\n        size={size}\n        timestamp={withDate ? datetime || timestamp : undefined}\n        thumbnailDataUri={thumbDataUri}\n        previewData={localBlobUrl || previewData}\n        smaller={smaller}\n        isTransferring={isTransferring}\n        isUploading={isUploading}\n        transferProgress={transferProgress}\n        className={className}\n        sender={sender}\n        isSelectable={isSelectable}\n        isSelected={isSelected}\n        actionIcon={withMediaViewer ? (isDocumentVideo(document) ? 'play' : 'eye') : 'download'}\n        onClick={handleClick}\n        onDateClick={onDateClick ? handleDateClick : undefined}\n      />\n      <ConfirmDialog\n        isOpen={isSvgDialogOpen}\n        onClose={closeSvgDialog}\n        confirmHandler={handleSvgConfirm}\n      >\n        {lang('lng_launch_svg_warning')}\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldNotWarnAboutSvg}\n          label={lang('lng_launch_exe_dont_ask')}\n          onCheck={setShouldNotWarnAboutSvg}\n        />\n      </ConfirmDialog>\n    </>\n  );\n};\n\nexport default memo(Document);\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useOldLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {renderText(content)}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport Icon from './icons/Icon';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: React.RefObject<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: IconName;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  let elementRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [withThumb] = useState(!previewData);\n  const noThumb = Boolean(previewData);\n  const thumbRef = useCanvasBlur(thumbnailDataUri, noThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED);\n  const thumbClassNames = useMediaTransitionDeprecated(!noThumb);\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n  const subtitle = useMemo(() => {\n    if (!isTransferring || !transferProgress) return sizeString;\n    return `${getFileSizeString(size * transferProgress)} / ${sizeString}`;\n  }, [isTransferring, size, sizeString, transferProgress]);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={previewData}\n              className=\"full-media\"\n              width={width}\n              height={height}\n              draggable={false}\n              alt=\"\"\n            />\n            {withThumb && (\n              <canvas\n                ref={thumbRef}\n                className={buildClassName('thumbnail', thumbClassNames)}\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <Icon\n            name={actionIcon || 'download'}\n            className={buildClassName('action-icon', shouldSpinnerRender && 'hidden')}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\" title={name}>{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {subtitle}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && Boolean(timestamp) && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && Boolean(timestamp) && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiThreadInfo, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin, type StoryViewerOrigin, type ThreadId } from '../../types';\n\nimport {\n  getChatTypeString,\n  getGroupStatus,\n  getMainUsername,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessages,\n  selectChatOnlineCount,\n  selectThreadInfo,\n  selectThreadMessagesCount,\n  selectTopic,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TopicIcon from './TopicIcon';\nimport TypingStatus from './TypingStatus';\n\nconst TOPIC_ICON_SIZE = 2.5 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  className?: string;\n  statusIcon?: IconName;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  noEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  noRtl?: boolean;\n  noAvatar?: boolean;\n  noStatusOrTyping?: boolean;\n  withStory?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  isSavedDialog?: boolean;\n  onClick?: VoidFunction;\n  onEmojiStatusClick?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    chat?: ApiChat;\n    threadInfo?: ApiThreadInfo;\n    topic?: ApiTopic;\n    onlineCount?: number;\n    areMessagesLoaded: boolean;\n    messagesCount?: number;\n    self?: ApiUser;\n  };\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  className,\n  statusIcon,\n  avatarSize = 'medium',\n  noAvatar,\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  threadInfo,\n  noRtl,\n  chat,\n  onlineCount,\n  areMessagesLoaded,\n  topic,\n  messagesCount,\n  noStatusOrTyping,\n  withStory,\n  storyViewerOrigin,\n  noEmojiStatus,\n  emojiStatusSize,\n  isSavedDialog,\n  self,\n  onClick,\n  onEmojiStatusClick,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const isTopic = Boolean(chat?.isForum && threadInfo && topic);\n  const { id: chatId, isMin, isRestricted } = chat || {};\n\n  useEffect(() => {\n    if (chatId && !isMin) {\n      if (withFullInfo) loadFullChat({ chatId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: chatId, isPreload: true });\n    }\n  }, [chatId, isMin, withFullInfo, isSuperGroup, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (chat && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: chat.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => chat && withUsername && getMainUsername(chat), [chat, withUsername]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isTopic) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <Transition\n            name=\"fade\"\n            shouldRestoreHeight\n            activeKey={messagesCount !== undefined ? 1 : 2}\n            className=\"message-count-transition\"\n          >\n            {messagesCount !== undefined && lang('messages', messagesCount, 'i')}\n          </Transition>\n        </span>\n      );\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{lang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const groupStatus = getGroupStatus(lang, chat);\n    const onlineStatus = onlineCount ? `, ${lang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {mainUsername && <span className=\"handle withStatus\">{mainUsername}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={\n        buildClassName('ChatInfo', className)\n      }\n      dir={!noRtl && lang.isRtl ? 'rtl' : undefined}\n      onClick={onClick}\n    >\n      {!noAvatar && !isTopic && (\n        <>\n          {isSavedDialog && self && (\n            <Avatar\n              key=\"saved-messages\"\n              size={avatarSize}\n              peer={self}\n              isSavedMessages\n              className=\"saved-dialog-avatar\"\n            />\n          )}\n          <Avatar\n            key={chat.id}\n            className={buildClassName(isSavedDialog && 'overlay-avatar')}\n            size={avatarSize}\n            peer={chat}\n            withStory={withStory}\n            storyViewerOrigin={storyViewerOrigin}\n            storyViewerMode=\"single-peer\"\n            isSavedDialog={isSavedDialog}\n            onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n          />\n        </>\n      )}\n      {isTopic && (\n        <TopicIcon\n          topic={topic!}\n          className=\"topic-header-icon\"\n          size={TOPIC_ICON_SIZE}\n        />\n      )}\n      <div className=\"info\">\n        {topic\n          ? <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          : (\n            <FullNameTitle\n              peer={chat}\n              emojiStatusSize={emojiStatusSize}\n              withEmojiStatus={!noEmojiStatus}\n              isSavedDialog={isSavedDialog}\n              onEmojiStatusClick={onEmojiStatusClick}\n            />\n          )}\n        {!noStatusOrTyping && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const threadInfo = threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n    const topic = threadId ? selectTopic(global, chatId, threadId) : undefined;\n    const messagesCount = topic && selectThreadMessagesCount(global, chatId, threadId!);\n    const self = selectUser(global, global.currentUserId!);\n\n    return {\n      chat,\n      threadInfo,\n      onlineCount,\n      topic,\n      areMessagesLoaded,\n      messagesCount,\n      self,\n    };\n  },\n)(GroupChatInfo));\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  className?: string;\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  draftDate?: number;\n};\n\nconst LastMessageMeta = ({\n  className, message, outgoingStatus, draftDate,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const shouldUseDraft = draftDate && draftDate > message.date;\n  return (\n    <div className={buildClassName('LastMessageMeta', className)}>\n      {outgoingStatus && !shouldUseDraft && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">\n        {formatPastTimeShort(lang, (shouldUseDraft ? draftDate : message.date) * 1000)}\n      </span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","// extracted by mini-css-extract-plugin\nexport default {\"primaryLink\":\"xNjJHI7j\",\"input\":\"Ag6k_p7b\",\"moreMenu\":\"p7t3macG\",\"copy\":\"obuPXobw\",\"title\":\"vCMpiQTJ\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport Icon from './icons/Icon';\n\nimport styles from './LinkField.module.scss';\n\ntype OwnProps = {\n  title?: string;\n  link: string;\n  isDisabled?: boolean;\n  className?: string;\n  withShare?: boolean;\n  onRevoke?: VoidFunction;\n};\n\nconst InviteLink: FC<OwnProps> = ({\n  title,\n  link,\n  isDisabled,\n  className,\n  withShare,\n  onRevoke,\n}) => {\n  const lang = useOldLang();\n  const { showNotification, openChatWithDraft } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const isOnlyCopy = !onRevoke;\n\n  const copyLink = useLastCallback(() => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: {\n        key: 'LinkCopied',\n      },\n    });\n  });\n\n  const handleCopyClick = useLastCallback(() => {\n    if (isDisabled) return;\n    copyLink();\n  });\n\n  const handleShare = useLastCallback(() => {\n    openChatWithDraft({ text: { text: link } });\n  });\n\n  const PrimaryLinkMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('AccDescrOpenMenu2')}\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile, lang]);\n\n  return (\n    <div className={className}>\n      <p className={styles.title}>\n        {lang(title || 'InviteLink.InviteLink')}\n      </p>\n      <div className={styles.primaryLink}>\n        <input\n          className={buildClassName('form-control', styles.input)}\n          value={link}\n          readOnly\n          onClick={handleCopyClick}\n        />\n        {isOnlyCopy ? (\n          <Button\n            color=\"translucent\"\n            className={styles.copy}\n            size=\"smaller\"\n            round\n            disabled={isDisabled}\n            onClick={handleCopyClick}\n          >\n            <Icon name=\"copy\" />\n          </Button>\n        ) : (\n          <DropdownMenu\n            className={styles.moreMenu}\n            trigger={PrimaryLinkMenuButton}\n            positionX=\"right\"\n          >\n            <MenuItem icon=\"copy\" onClick={handleCopyClick} disabled={isDisabled}>{lang('Copy')}</MenuItem>\n            {onRevoke && (\n              <MenuItem icon=\"delete\" onClick={onRevoke} destructive>{lang('RevokeButton')}</MenuItem>\n            )}\n          </DropdownMenu>\n        )}\n      </div>\n      {withShare && (\n        <Button\n          size=\"smaller\"\n          disabled={isDisabled}\n          onClick={handleShare}\n        >\n          {lang('FolderLinkScreen.LinkActionShare')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(InviteLink);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getMessageHtmlId,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\n\nimport MediaSpoiler from './MediaSpoiler';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media: FC<OwnProps> = ({\n  message,\n  idPrefix = 'shared-media',\n  isProtected,\n  observeIntersection,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const transitionClassNames = useMediaTransitionDeprecated(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n\n  const hasSpoiler = getMessageIsSpoiler(message);\n  const [isSpoilerShown, , hideSpoiler] = useFlag(hasSpoiler);\n\n  const handleClick = useLastCallback(() => {\n    hideSpoiler();\n    onClick!(message.id, message.chatId);\n  });\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${getMessageHtmlId(message.id)}`}\n      className=\"Media scroll-item\"\n      onClick={onClick ? handleClick : undefined}\n    >\n      <img\n        src={thumbDataUri}\n        className=\"media-miniature\"\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      <img\n        src={mediaBlobUrl}\n        className={buildClassName('full-media', 'media-miniature', transitionClassNames)}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {hasSpoiler && (\n        <MediaSpoiler\n          thumbDataUri={mediaBlobUrl || thumbDataUri}\n          isVisible={isSpoilerShown}\n          className=\"media-spoiler\"\n        />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\nimport Icon from './icons/Icon';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {status === 'failed' ? (\n          <div className=\"MessageOutgoingStatus--failed\">\n            <Icon name=\"message-failed\" />\n          </div>\n        ) : <Icon name={`message-${status}`} />}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description }) => {\n  const lang = useOldLang();\n  const { transitionClassNames } = useShowTransitionDeprecated(true);\n\n  return (\n    <div className={buildClassName('NothingFound', transitionClassNames, description && 'with-description')}>\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiPeer, ApiPeerColor } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { getApiPeerColorClass, getPeerColorClass } from './helpers/peerColor';\n\nimport EmojiIconBackground from './embedded/EmojiIconBackground';\n\nimport styles from './PeerColorWrapper.module.scss';\n\ninterface OwnProps extends React.HTMLAttributes<HTMLDivElement> {\n  peer?: ApiPeer;\n  peerColor?: ApiPeerColor;\n  noUserColors?: boolean;\n  shoudReset?: boolean;\n  className?: string;\n  emojiIconClassName?: string;\n  children: React.ReactNode;\n}\n\nfunction PeerColorWrapper({\n  peer, peerColor, noUserColors, shoudReset, className, emojiIconClassName, children, ...otherProps\n}: OwnProps) {\n  const color = peerColor || peer?.color;\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        peer && getPeerColorClass(peer, noUserColors, shoudReset),\n        peerColor && getApiPeerColorClass(peerColor),\n        className,\n      )}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...otherProps}\n    >\n      {color?.backgroundEmojiId && (\n        <EmojiIconBackground\n          className={emojiIconClassName}\n          emojiDocumentId={color.backgroundEmojiId}\n        />\n      )}\n      {children}\n    </div>\n  );\n}\n\nexport default memo(PeerColorWrapper);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nRjVJOQv\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChatMember, ApiTypingStatus, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { CustomPeer, StoryViewerOrigin } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getMainUsername, getUserStatus, isSystemBot, isUserOnline,\n} from '../../global/helpers';\nimport { selectChatMessages, selectUser, selectUserStatus } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useIntervalForceUpdate from '../../hooks/schedulers/useIntervalForceUpdate';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RippleEffect from '../ui/RippleEffect';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TypingStatus from './TypingStatus';\n\ntype OwnProps = {\n  userId?: string;\n  customPeer?: CustomPeer;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  statusIcon?: IconName;\n  ripple?: boolean;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withStory?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  noEmojiStatus?: boolean;\n  noFake?: boolean;\n  noVerified?: boolean;\n  emojiStatusSize?: number;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n  adminMember?: ApiChatMember;\n  isSavedDialog?: boolean;\n  className?: string;\n  onEmojiStatusClick?: NoneToVoidFunction;\n  iconElement?: React.ReactNode;\n  rightElement?: React.ReactNode;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    self?: ApiUser;\n    isSavedMessages?: boolean;\n    areMessagesLoaded: boolean;\n    isSynced?: boolean;\n  };\n\nconst UPDATE_INTERVAL = 1000 * 60; // 1 min\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  customPeer,\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  statusIcon,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withStory,\n  withFullInfo,\n  withUpdatingStatus,\n  emojiStatusSize,\n  noStatusOrTyping,\n  noEmojiStatus,\n  noFake,\n  noVerified,\n  noRtl,\n  user,\n  userStatus,\n  self,\n  isSavedMessages,\n  isSavedDialog,\n  areMessagesLoaded,\n  adminMember,\n  ripple,\n  className,\n  storyViewerOrigin,\n  isSynced,\n  onEmojiStatusClick,\n  iconElement,\n  rightElement,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const { id: userId } = user || {};\n\n  useEffect(() => {\n    if (userId) {\n      if (withFullInfo && isSynced) loadFullUser({ userId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: userId, isPreload: true });\n    }\n  }, [userId, withFullInfo, withMediaViewer, isSynced]);\n\n  useIntervalForceUpdate(UPDATE_INTERVAL);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (user && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: user.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => user && withUsername && getMainUsername(user), [user, withUsername]);\n\n  if (!user && !customPeer) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (customPeer?.subtitleKey) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <span className=\"user-status\" dir=\"auto\">{lang(customPeer.subtitleKey)}</span>\n        </span>\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isSystemBot(user.id)) {\n      return undefined;\n    }\n\n    const translatedStatus = getUserStatus(lang, user, userStatus);\n    const mainUserNameClassName = buildClassName('handle', translatedStatus && 'withStatus');\n    return (\n      <span className={buildClassName('status', isUserOnline(user, userStatus, true) && 'online')}>\n        {mainUsername && <span className={mainUserNameClassName}>{mainUsername}</span>}\n        {translatedStatus && <span className=\"user-status\" dir=\"auto\">{translatedStatus}</span>}\n      </span>\n    );\n  }\n\n  const customTitle = adminMember\n    ? adminMember.customTitle || lang(adminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin')\n    : undefined;\n\n  function renderNameTitle() {\n    if (customTitle) {\n      return (\n        <div className=\"info-name-title\">\n          <FullNameTitle\n            peer={user!}\n            withEmojiStatus={!noEmojiStatus}\n            emojiStatusSize={emojiStatusSize}\n            isSavedMessages={isSavedMessages}\n            isSavedDialog={isSavedDialog}\n            onEmojiStatusClick={onEmojiStatusClick}\n          />\n          {customTitle && <span className=\"custom-title\">{customTitle}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <FullNameTitle\n        peer={customPeer || user!}\n        noFake={noFake}\n        noVerified={noVerified}\n        withEmojiStatus={!noEmojiStatus}\n        emojiStatusSize={emojiStatusSize}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        onEmojiStatusClick={onEmojiStatusClick}\n        iconElement={iconElement}\n      />\n    );\n  }\n\n  return (\n    <div className={buildClassName('ChatInfo', className)} dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      {isSavedDialog && self && (\n        <Avatar\n          key=\"saved-messages\"\n          size={avatarSize}\n          peer={self}\n          isSavedMessages\n          className=\"saved-dialog-avatar\"\n        />\n      )}\n      <Avatar\n        key={user?.id}\n        size={avatarSize}\n        peer={customPeer || user}\n        className={buildClassName(isSavedDialog && 'overlay-avatar')}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        withStory={withStory}\n        storyViewerOrigin={storyViewerOrigin}\n        storyViewerMode=\"single-peer\"\n        onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {renderNameTitle()}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n      {ripple && <RippleEffect />}\n      {rightElement}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { isSynced } = global;\n    const user = userId ? selectUser(global, userId) : undefined;\n    const userStatus = userId ? selectUserStatus(global, userId) : undefined;\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const self = isSavedMessages ? user : selectUser(global, global.currentUserId!);\n    const areMessagesLoaded = Boolean(userId && selectChatMessages(global, userId));\n\n    return {\n      user,\n      userStatus,\n      isSavedMessages,\n      areMessagesLoaded,\n      self,\n      isSynced,\n    };\n  },\n)(PrivateChatInfo));\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../api/types';\n\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getPhotoMediaHash,\n  getProfilePhotoMediaHash,\n  getUserFullName,\n  getVideoProfilePhotoMediaHash,\n  isAnonymousForwardsChat,\n  isChatWithRepliesBot,\n  isDeletedUser,\n  isUserId,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { getFirstLetters } from '../../util/textFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useFlag from '../../hooks/useFlag';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\nimport Icon from './icons/Icon';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  isSavedDialog?: boolean;\n  photo?: ApiPhoto;\n  canPlayVideo: boolean;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isSavedMessages,\n  isSavedDialog,\n  canPlayVideo,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n  const isAnonymousForwards = chat && isAnonymousForwardsChat(chat.id);\n  const peer = (user || chat)!;\n  const canHaveMedia = peer && !isSavedMessages && !isDeleted && !isRepliesChat && !isAnonymousForwards;\n  const { isVideo } = photo || {};\n\n  const avatarHash = (!photo || photo.id === peer.avatarPhotoId) && getChatAvatarHash(peer, 'normal');\n\n  const previewHash = canHaveMedia && photo && !avatarHash && getPhotoMediaHash(photo, 'pictogram');\n  const previewBlobUrl = useMedia(previewHash || avatarHash);\n\n  const photoHash = canHaveMedia && photo && !isVideo && getProfilePhotoMediaHash(photo);\n  const photoBlobUrl = useMedia(photoHash);\n\n  const videoHash = canHaveMedia && photo && isVideo && getVideoProfilePhotoMediaHash(photo);\n  const videoBlobUrl = useMedia(videoHash);\n\n  const fullMediaData = videoBlobUrl || photoBlobUrl;\n  const [isVideoReady, markVideoReady] = useFlag();\n  const isFullMediaReady = Boolean(fullMediaData && (!isVideo || isVideoReady));\n  const transitionClassNames = useMediaTransitionDeprecated(isFullMediaReady);\n  const isBlurredThumb = canHaveMedia && !isFullMediaReady && !previewBlobUrl && photo?.thumbnail?.dataUri;\n  const blurredThumbCanvasRef = useCanvasBlur(\n    photo?.thumbnail?.dataUri, !isBlurredThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n  const hasMedia = photo || previewBlobUrl || isBlurredThumb;\n\n  useEffect(() => {\n    if (videoRef.current && !canPlayVideo) {\n      videoRef.current.currentTime = 0;\n    }\n  }, [canPlayVideo]);\n\n  const specialIcon = useMemo(() => {\n    if (isSavedMessages) {\n      return isSavedDialog ? 'my-notes' : 'avatar-saved-messages';\n    }\n\n    if (isDeleted) {\n      return 'avatar-deleted-account';\n    }\n\n    if (isRepliesChat) {\n      return 'reply-filled';\n    }\n\n    if (isAnonymousForwards) {\n      return 'author-hidden';\n    }\n\n    return undefined;\n  }, [isAnonymousForwards, isDeleted, isSavedDialog, isRepliesChat, isSavedMessages]);\n\n  let content: TeactNode | undefined;\n\n  if (specialIcon) {\n    content = <Icon name={specialIcon} role=\"img\" />;\n  } else if (hasMedia) {\n    content = (\n      <>\n        {isBlurredThumb ? (\n          <canvas ref={blurredThumbCanvasRef} className=\"thumb\" />\n        ) : (\n          <img src={previewBlobUrl} draggable={false} className=\"thumb\" alt=\"\" />\n        )}\n        {photo && (\n          isVideo ? (\n            <OptimizedVideo\n              canPlay={canPlayVideo}\n              ref={videoRef}\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              muted\n              disablePictureInPicture\n              loop\n              playsInline\n              onReady={markVideoReady}\n            />\n          ) : (\n            <img\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              alt=\"\"\n            />\n          )\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    getPeerColorClass(peer),\n    isSavedMessages && 'saved-messages',\n    isAnonymousForwards && 'anonymous-forwards',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !hasMedia) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={hasMedia ? onClick : undefined}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","// extracted by mini-css-extract-plugin\nexport default {\"fallbackPhoto\":\"Wm9Ygb23\",\"fallbackPhotoContents\":\"nflKKT3R\",\"fallbackPhotoVisible\":\"tFkRrvxe\",\"fallbackPhotoAvatar\":\"R7w3H5eC\",\"photoWrapper\":\"GBGLnrA7\",\"photoDashes\":\"uyvKpR3B\",\"photoDash\":\"wB4yjvei\",\"photoDash_current\":\"aZmp9FLh\",\"photoDashCurrent\":\"aZmp9FLh\",\"navigation\":\"ZZRcBh8v\",\"navigation_prev\":\"RQITz4WQ\",\"navigationPrev\":\"RQITz4WQ\",\"navigation_next\":\"_0F1Txru\",\"navigationNext\":\"_0F1Txru\",\"info\":\"UcyW7tVh\",\"status\":\"cpyXyZDl\",\"user-status\":\"_HDVUj4P\",\"userStatus\":\"_HDVUj4P\",\"get-status\":\"Qga38M20\",\"getStatus\":\"Qga38M20\",\"topicContainer\":\"yzg267rr\",\"topicTitle\":\"umOuiu3K\",\"topicIcon\":\"ZCxp0_t4\",\"topicIconTitle\":\"lkfZNWOm\",\"topicMessagesCounter\":\"tLTzQ2ks\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiPeerPhotos, ApiSticker, ApiTopic, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getUserStatus, isAnonymousForwardsChat, isChatChannel, isSystemBot, isUserOnline,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectCurrentMessageList,\n  selectPeerPhotos,\n  selectTabState,\n  selectThreadMessagesCount,\n  selectTopic,\n  selectUser,\n  selectUserStatus,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport renderText from './helpers/renderText';\n\nimport useIntervalForceUpdate from '../../hooks/schedulers/useIntervalForceUpdate';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport usePhotosPreload from './hooks/usePhotosPreload';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport ProfilePhoto from './ProfilePhoto';\nimport TopicIcon from './TopicIcon';\n\nimport './ProfileInfo.scss';\nimport styles from './ProfileInfo.module.scss';\n\ntype OwnProps = {\n  peerId: string;\n  forceShowSelf?: boolean;\n  canPlayVideo: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    chat?: ApiChat;\n    mediaIndex?: number;\n    avatarOwnerId?: string;\n    topic?: ApiTopic;\n    messagesCount?: number;\n    emojiStatusSticker?: ApiSticker;\n    emojiStatusSlug?: string;\n    profilePhotos?: ApiPeerPhotos;\n  };\n\nconst EMOJI_STATUS_SIZE = 24;\nconst EMOJI_TOPIC_SIZE = 120;\nconst LOAD_MORE_THRESHOLD = 3;\nconst MAX_PHOTO_DASH_COUNT = 30;\nconst STATUS_UPDATE_INTERVAL = 1000 * 60; // 1 min\n\nconst ProfileInfo: FC<OwnProps & StateProps> = ({\n  forceShowSelf,\n  canPlayVideo,\n  user,\n  userStatus,\n  chat,\n  mediaIndex,\n  avatarOwnerId,\n  topic,\n  messagesCount,\n  emojiStatusSticker,\n  emojiStatusSlug,\n  profilePhotos,\n  peerId,\n}) => {\n  const {\n    openMediaViewer,\n    openPremiumModal,\n    openStickerSet,\n    openPrivacySettingsNoticeModal,\n    loadMoreProfilePhotos,\n    openUniqueGiftBySlug,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  useIntervalForceUpdate(user ? STATUS_UPDATE_INTERVAL : undefined);\n\n  const photos = profilePhotos?.photos || MEMO_EMPTY_ARRAY;\n  const prevMediaIndex = usePreviousDeprecated(mediaIndex);\n  const prevAvatarOwnerId = usePreviousDeprecated(avatarOwnerId);\n  const [hasSlideAnimation, setHasSlideAnimation] = useState(true);\n  // slideOptimized doesn't work well when animation is dynamically disabled\n  const slideAnimation = hasSlideAnimation ? (lang.isRtl ? 'slideRtl' : 'slide') : 'none';\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  useEffect(() => {\n    if (photos.length - currentPhotoIndex <= LOAD_MORE_THRESHOLD) {\n      loadMoreProfilePhotos({ peerId });\n    }\n  }, [currentPhotoIndex, peerId, photos.length]);\n\n  // Set the current avatar photo to the last selected photo in Media Viewer after it is closed\n  useEffect(() => {\n    if (prevAvatarOwnerId && prevMediaIndex !== undefined && mediaIndex === undefined) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(prevMediaIndex);\n    }\n  }, [mediaIndex, prevMediaIndex, prevAvatarOwnerId]);\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  usePhotosPreload(photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useLastCallback(() => {\n    openMediaViewer({\n      isAvatarView: true,\n      chatId: peerId,\n      mediaIndex: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  });\n\n  const handleStatusClick = useLastCallback(() => {\n    if (emojiStatusSlug) {\n      openUniqueGiftBySlug({ slug: emojiStatusSlug });\n      return;\n    }\n    if (!peerId) {\n      openStickerSet({\n        stickerSetInfo: emojiStatusSticker!.stickerSetInfo,\n      });\n      return;\n    }\n\n    openPremiumModal({ fromUserId: peerId });\n  });\n\n  const selectPreviousMedia = useLastCallback(() => {\n    if (isFirst) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  });\n\n  const selectNextMedia = useLastCallback(() => {\n    if (isLast) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  });\n\n  const handleOpenGetReadDateModal = useLastCallback(() => {\n    openPrivacySettingsNoticeModal({ chatId: chat!.id, isReadDate: false });\n  });\n\n  function handleSelectFallbackPhoto() {\n    if (!isFirst) return;\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(photos.length - 1);\n  }\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>(`.${styles.photoWrapper}`);\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderTopic() {\n    return (\n      <div className={styles.topicContainer}>\n        <TopicIcon\n          topic={topic!}\n          size={EMOJI_TOPIC_SIZE}\n          className={styles.topicIcon}\n          letterClassName={styles.topicIconTitle}\n          noLoopLimit\n        />\n        <h3 className={styles.topicTitle} dir={lang.isRtl ? 'rtl' : undefined}>{renderText(topic!.title)}</h3>\n        <p className={styles.topicMessagesCounter}>\n          {messagesCount ? lang('Chat.Title.Topic', messagesCount, 'i') : lang('lng_forum_no_messages')}\n        </p>\n      </div>\n    );\n  }\n\n  function renderPhotoTabs() {\n    const totalPhotosLength = Math.max(photos.length, profilePhotos?.count || 0);\n    if (!photos || totalPhotosLength <= 1) {\n      return undefined;\n    }\n\n    const enumerator = Array.from({ length: Math.min(totalPhotosLength, MAX_PHOTO_DASH_COUNT) });\n    const activeDashIndex = currentPhotoIndex >= MAX_PHOTO_DASH_COUNT ? MAX_PHOTO_DASH_COUNT - 1 : currentPhotoIndex;\n\n    return (\n      <div className={styles.photoDashes}>\n        {enumerator.map((_, i) => (\n          <span className={buildClassName(styles.photoDash, i === activeDashIndex && styles.photoDash_current)} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto(isActive?: boolean) {\n    const photo = photos.length > 0\n      ? photos[currentPhotoIndex]\n      : undefined;\n\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={photo}\n        canPlayVideo={Boolean(isActive && canPlayVideo)}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderStatus() {\n    const isAnonymousForwards = isAnonymousForwardsChat(peerId);\n    const isSystemBotChat = isSystemBot(peerId);\n    if (isAnonymousForwards || isSystemBotChat) return undefined;\n\n    if (user) {\n      return (\n        <div\n          className={buildClassName(\n            styles.status,\n            'status',\n            isUserOnline(user, userStatus) && 'online',\n          )}\n        >\n          <span className={styles.userStatus} dir=\"auto\">\n            {getUserStatus(lang, user, userStatus)}\n          </span>\n          {userStatus?.isReadDateRestrictedByMe && (\n            <span className={styles.getStatus} onClick={handleOpenGetReadDateModal}>\n              <span>{lang('StatusHiddenShow')}</span>\n            </span>\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <span className={buildClassName(styles.status, 'status')} dir=\"auto\">{\n        isChatChannel(chat!)\n          ? lang('Subscribers', chat!.membersCount ?? 0, 'i')\n          : lang('Members', chat!.membersCount ?? 0, 'i')\n      }\n      </span>\n    );\n  }\n\n  if (topic) {\n    return renderTopic();\n  }\n\n  return (\n    <div\n      className={buildClassName('ProfileInfo')}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <div className={styles.photoWrapper}>\n        {renderPhotoTabs()}\n        {!forceShowSelf && profilePhotos?.personalPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            isFirst && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents}>\n              {lang(profilePhotos.personalPhoto.isVideo ? 'UserInfo.CustomVideo' : 'UserInfo.CustomPhoto')}\n            </div>\n          </div>\n        )}\n        {forceShowSelf && profilePhotos?.fallbackPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            (isFirst || isLast) && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents} onClick={handleSelectFallbackPhoto}>\n              {!isLast && (\n                <Avatar\n                  photo={profilePhotos.fallbackPhoto}\n                  className={styles.fallbackPhotoAvatar}\n                  size=\"mini\"\n                />\n              )}\n              {lang(profilePhotos.fallbackPhoto.isVideo ? 'UserInfo.PublicVideo' : 'UserInfo.PublicPhoto')}\n            </div>\n          </div>\n        )}\n        <Transition activeKey={currentPhotoIndex} name={slideAnimation}>\n          {renderPhoto}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_prev)}\n            aria-label={lang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_next)}\n            aria-label={lang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className={styles.info} dir={lang.isRtl ? 'rtl' : 'auto'}>\n        {(user || chat) && (\n          <FullNameTitle\n            peer={(user || chat)!}\n            withEmojiStatus\n            emojiStatusSize={EMOJI_STATUS_SIZE}\n            onEmojiStatusClick={handleStatusClick}\n            noLoopLimit\n            canCopyTitle\n          />\n        )}\n        {renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId }): StateProps => {\n    const user = selectUser(global, peerId);\n    const userStatus = selectUserStatus(global, peerId);\n    const chat = selectChat(global, peerId);\n    const profilePhotos = selectPeerPhotos(global, peerId);\n    const { mediaIndex, chatId: avatarOwnerId } = selectTabState(global).mediaViewer;\n    const isForum = chat?.isForum;\n    const { threadId: currentTopicId } = selectCurrentMessageList(global) || {};\n    const topic = isForum && currentTopicId ? selectTopic(global, peerId, currentTopicId) : undefined;\n\n    const emojiStatus = (user || chat)?.emojiStatus;\n    const emojiStatusSticker = emojiStatus ? global.customEmojis.byId[emojiStatus.documentId] : undefined;\n    const emojiStatusSlug = emojiStatus?.type === 'collectible' ? emojiStatus.slug : undefined;\n\n    return {\n      user,\n      userStatus,\n      chat,\n      mediaIndex,\n      avatarOwnerId,\n      emojiStatusSticker,\n      emojiStatusSlug,\n      profilePhotos,\n      ...(topic && {\n        topic,\n        messagesCount: selectThreadMessagesCount(global, peerId, currentTopicId!),\n      }),\n    };\n  },\n)(ProfileInfo));\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getProfilePhotoMediaHash } from '../../../global/helpers';\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaHash = getProfilePhotoMediaHash(photo);\n      const mediaData = mediaLoader.getFromMemory(mediaHash);\n      if (!mediaData) {\n        mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport CustomEmoji from './CustomEmoji';\nimport TopicDefaultIcon from './TopicDefaultIcon';\n\ntype OwnProps = {\n  topic: Pick<ApiTopic, 'iconEmojiId' | 'iconColor' | 'title' | 'id'>;\n  className?: string;\n  letterClassName?: string;\n  size?: number;\n  noLoopLimit?: true;\n  observeIntersection?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst LOOP_LIMIT = 2;\nconst DEFAULT_ICON_ID = '0';\n\nconst TopicIcon: FC<OwnProps> = ({\n  topic,\n  className,\n  letterClassName,\n  size,\n  noLoopLimit,\n  observeIntersection,\n  onClick,\n}) => {\n  if (topic.iconEmojiId && topic.iconEmojiId !== DEFAULT_ICON_ID) {\n    return (\n      <CustomEmoji\n        documentId={topic.iconEmojiId}\n        className={className}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n        loopLimit={!noLoopLimit ? LOOP_LIMIT : undefined}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <TopicDefaultIcon\n      iconColor={topic.iconColor}\n      title={topic.title}\n      topicId={topic.id}\n      className={className}\n      letterClassName={letterClassName}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(TopicIcon);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiTypingStatus, ApiUser } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useOldLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji || '').trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiWebPage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { TextPart } from '../../types';\n\nimport {\n  getFirstLinkInMessage, getMessageText,\n  getMessageWebPage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\nimport trimText from '../../util/trimText';\nimport { renderMessageSummary } from './helpers/renderMessageText';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Link from '../ui/Link';\nimport Media from './Media';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onMessageClick: (message: ApiMessage) => void;\n};\n\ntype ApiWebPageWithFormatted =\n  ApiWebPage\n  & { formattedDescription?: TextPart[] };\n\nconst WebLink: FC<OwnProps> = ({\n  message, senderTitle, isProtected, observeIntersection, onMessageClick,\n}) => {\n  const lang = useOldLang();\n\n  let linkData: ApiWebPageWithFormatted | undefined = getMessageWebPage(message);\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        formattedDescription: getMessageText(message) !== url\n          ? renderMessageSummary(lang, message, undefined, undefined, MAX_TEXT_LENGTH)\n          : undefined,\n      } as ApiWebPageWithFormatted;\n    }\n  }\n\n  const handleMessageClick = useLastCallback(() => {\n    onMessageClick(message);\n  });\n\n  if (!linkData) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    formattedDescription,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && description && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  const safeLinkContent = url.replace('mailto:', '') || displayUrl;\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} isProtected={isProtected} observeIntersection={observeIntersection} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {(truncatedDescription || formattedDescription) && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {formattedDescription || (truncatedDescription && renderText(truncatedDescription))}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text={safeLinkContent}\n          isRtl={lang.isRtl}\n        />\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(lang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(WebLink);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type {\n  ApiChat,\n  ApiMessage, ApiPeer, ApiReplyInfo, MediaContainer,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatTranslatedMessages } from '../../../types';\nimport type { IconName } from '../../../types/icons';\n\nimport { CONTENT_NOT_SUPPORTED } from '../../../config';\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageRoundVideo,\n  getPeerTitle,\n  isActionMessage,\n  isChatChannel,\n  isChatGroup,\n  isMessageTranslatable,\n  isUserId,\n} from '../../../global/helpers';\nimport { getMediaContentTypeDescription } from '../../../global/helpers/messageSummary';\nimport buildClassName from '../../../util/buildClassName';\nimport freezeWhenClosed from '../../../util/hoc/freezeWhenClosed';\nimport { getPictogramDimensions } from '../helpers/mediaDimensions';\nimport { getPeerColorClass } from '../helpers/peerColor';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useThumbnail from '../../../hooks/useThumbnail';\nimport useMessageTranslation from '../../middle/message/hooks/useMessageTranslation';\n\nimport ActionMessage from '../../middle/ActionMessage';\nimport RippleEffect from '../../ui/RippleEffect';\nimport Icon from '../icons/Icon';\nimport MediaSpoiler from '../MediaSpoiler';\nimport MessageSummary from '../MessageSummary';\nimport EmojiIconBackground from './EmojiIconBackground';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  className?: string;\n  replyInfo?: ApiReplyInfo;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  senderChat?: ApiChat;\n  forwardSender?: ApiPeer;\n  title?: string;\n  customText?: string;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  isInComposer?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  requestedChatTranslationLanguage?: string;\n  isOpen?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick: ((e: React.MouseEvent) => void);\n};\n\nconst NBSP = '\\u00A0';\nconst EMOJI_SIZE = 17;\n\nconst EmbeddedMessage: FC<OwnProps> = ({\n  className,\n  message,\n  replyInfo,\n  sender,\n  senderChat,\n  forwardSender,\n  title,\n  customText,\n  isProtected,\n  isInComposer,\n  noUserColors,\n  chatTranslations,\n  requestedChatTranslationLanguage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n\n  const containedMedia: MediaContainer | undefined = useMemo(() => {\n    const media = (replyInfo?.type === 'message' && replyInfo.replyMedia) || message?.content;\n    if (!media) {\n      return undefined;\n    }\n\n    return {\n      content: media,\n    };\n  }, [message, replyInfo]);\n\n  const gif = containedMedia?.content?.video?.isGif ? containedMedia.content.video : undefined;\n  const isVideoThumbnail = Boolean(gif && !gif.previewPhotoSizes?.length);\n\n  const mediaHash = containedMedia && getMessageMediaHash(containedMedia, isVideoThumbnail ? 'full' : 'pictogram');\n  const mediaBlobUrl = useMedia(mediaHash, !isIntersecting);\n  const mediaThumbnail = useThumbnail(containedMedia);\n\n  const isRoundVideo = Boolean(containedMedia && getMessageRoundVideo(containedMedia));\n  const isSpoiler = Boolean(containedMedia && getMessageIsSpoiler(containedMedia));\n  const isQuote = Boolean(replyInfo?.type === 'message' && replyInfo.isQuote);\n  const replyForwardInfo = replyInfo?.type === 'message' ? replyInfo.replyFrom : undefined;\n\n  const shouldTranslate = message && isMessageTranslatable(message);\n  const { translatedText } = useMessageTranslation(\n    chatTranslations, message?.chatId, shouldTranslate ? message?.id : undefined, requestedChatTranslationLanguage,\n  );\n\n  const lang = useOldLang();\n\n  const senderTitle = sender ? getPeerTitle(lang, sender)\n    : (replyForwardInfo?.hiddenUserName || message?.forwardInfo?.hiddenUserName);\n  const senderChatTitle = senderChat ? getPeerTitle(lang, senderChat) : undefined;\n  const forwardSenderTitle = forwardSender ? getPeerTitle(lang, forwardSender)\n    : message?.forwardInfo?.hiddenUserName;\n  const areSendersSame = sender && sender.id === forwardSender?.id;\n\n  const { handleClick, handleMouseDown } = useFastClick(onClick);\n\n  function renderTextContent() {\n    if (replyInfo?.type === 'message' && replyInfo.quoteText) {\n      return renderTextWithEntities({\n        text: replyInfo.quoteText.text,\n        entities: replyInfo.quoteText.entities,\n        noLineBreaks: isInComposer,\n        emojiSize: EMOJI_SIZE,\n      });\n    }\n\n    if (!message) {\n      return customText || renderMediaContentType(containedMedia) || NBSP;\n    }\n\n    if (isActionMessage(message)) {\n      return (\n        <ActionMessage\n          message={message}\n          isEmbedded\n          observeIntersectionForLoading={observeIntersectionForLoading}\n          observeIntersectionForPlaying={observeIntersectionForPlaying}\n        />\n      );\n    }\n\n    return (\n      <MessageSummary\n        message={message}\n        noEmoji={Boolean(mediaThumbnail)}\n        translatedText={translatedText}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        emojiSize={EMOJI_SIZE}\n      />\n    );\n  }\n\n  function renderMediaContentType(media?: MediaContainer) {\n    if (!media || media.content.text) return NBSP;\n    const description = getMediaContentTypeDescription(lang, media.content, {});\n    if (!description || description === CONTENT_NOT_SUPPORTED) return NBSP;\n    return (\n      <span>\n        {renderText(description)}\n      </span>\n    );\n  }\n\n  function checkShouldRenderSenderTitle() {\n    if (!senderChat) return true;\n    if (isUserId(senderChat?.id)) return true;\n    if (senderChat.id === sender?.id) return false;\n    return true;\n  }\n  function renderSender() {\n    if (title) {\n      return renderText(title);\n    }\n\n    if (!senderTitle) {\n      return NBSP;\n    }\n\n    let icon: IconName | undefined;\n    if (senderChat) {\n      if (isChatChannel(senderChat)) {\n        icon = 'channel-filled';\n      }\n\n      if (isChatGroup(senderChat)) {\n        icon = 'group-filled';\n      }\n    }\n\n    const isReplyToQuote = isInComposer && Boolean(replyInfo && 'quoteText' in replyInfo && replyInfo?.quoteText);\n\n    return (\n      <>\n        {checkShouldRenderSenderTitle() && (\n          <span className=\"embedded-sender\">\n            {renderText(isReplyToQuote ? lang('ReplyToQuote', senderTitle) : senderTitle)}\n          </span>\n        )}\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {icon && senderChatTitle && (\n          <span className=\"embedded-sender-chat\">\n            {renderText(senderChatTitle)}\n          </span>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        getPeerColorClass(sender, noUserColors, true),\n        isQuote && 'is-quote',\n        mediaThumbnail && 'with-thumb',\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      <div className=\"hover-effect\" />\n      <RippleEffect />\n      {mediaThumbnail && renderPictogram(\n        mediaThumbnail, mediaBlobUrl, isVideoThumbnail, isRoundVideo, isProtected, isSpoiler,\n      )}\n      {sender?.color?.backgroundEmojiId && (\n        <EmojiIconBackground\n          emojiDocumentId={sender.color.backgroundEmojiId}\n          className=\"EmbeddedMessage--background-icons\"\n        />\n      )}\n      <div className=\"message-text\">\n        <p className={buildClassName('embedded-text-wrapper', isQuote && 'multiline')}>\n          {renderTextContent()}\n        </p>\n        <div className=\"message-title\">\n          {renderSender()}\n          {forwardSenderTitle && !areSendersSame && (\n            <>\n              <Icon name={forwardSender ? 'share-filled' : 'forward'} className=\"embedded-origin-icon\" />\n              {renderText(forwardSenderTitle)}\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction renderPictogram(\n  thumbDataUri: string,\n  blobUrl?: string,\n  isFullVideo?: boolean,\n  isRoundVideo?: boolean,\n  isProtected?: boolean,\n  isSpoiler?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  const srcUrl = blobUrl || thumbDataUri;\n  const shouldRenderVideo = isFullVideo && blobUrl;\n\n  return (\n    <div className={buildClassName('embedded-thumb', isRoundVideo && 'round')}>\n      {!isSpoiler && !shouldRenderVideo && (\n        <img\n          src={srcUrl}\n          width={width}\n          height={height}\n          alt=\"\"\n          className=\"pictogram\"\n          draggable={false}\n        />\n      )}\n      {!isSpoiler && shouldRenderVideo && (\n        <video\n          src={blobUrl}\n          width={width}\n          height={height}\n          playsInline\n          disablePictureInPicture\n          className=\"pictogram\"\n        />\n      )}\n      <MediaSpoiler\n        thumbDataUri={shouldRenderVideo ? thumbDataUri : srcUrl}\n        isVisible={Boolean(isSpoiler)}\n        width={width}\n        height={height}\n      />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport const ClosableEmbeddedMessage = freezeWhenClosed(EmbeddedMessage);\n\nexport default EmbeddedMessage;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"pTWe_CYU\"};","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { preloadImage } from '../../../util/files';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport { useThrottleForHeavyAnimation } from '../../../hooks/useHeavyAnimation';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport styles from './EmojiIconBackground.module.scss';\n\ntype IconPosition = {\n  inline: number;\n  block: number;\n  opacity: number;\n  scale: number;\n};\n\nconst ICON_POSITIONS: IconPosition[] = [\n  {\n    inline: 22, block: 38, opacity: 0.35, scale: 0.75,\n  },\n  {\n    inline: 32, block: 12, opacity: 0.3, scale: 1,\n  },\n  {\n    inline: 60, block: 22, opacity: 0.25, scale: 0.75,\n  },\n  {\n    inline: 75, block: 44, opacity: 0.25, scale: 1,\n  },\n  {\n    inline: 75, block: 2, opacity: 0.2, scale: 0.625,\n  },\n  {\n    inline: 95, block: 18, opacity: 0.2, scale: 1,\n  },\n  {\n    inline: 115, block: 38, opacity: 0.2, scale: 0.625,\n  },\n  {\n    inline: 125, block: 12, opacity: 0.1, scale: 0.75,\n  },\n];\n\nconst EMOJI_SIZE = REM;\nconst LOTTIE_TINT_OPACITY = 'ff';\nconst NON_LOTTIE_TINT_OPACITY = 'bb';\n\ntype OwnProps = {\n  emojiDocumentId: string;\n  className?: string;\n};\n\nconst EmojiIconBackground = ({\n  emojiDocumentId,\n  className,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [emojiImage, setEmojiImage] = useState<HTMLImageElement | undefined>();\n\n  const dpr = useDevicePixelRatio();\n\n  const lang = useOldLang();\n\n  const { customEmoji } = useCustomEmoji(emojiDocumentId);\n  const previewMediaHash = customEmoji ? getStickerMediaHash(customEmoji, 'preview') : undefined;\n  const previewUrl = useMedia(previewMediaHash);\n\n  const customColor = useDynamicColorListener(containerRef);\n\n  const preloadAfterHeavyAnimation = useThrottleForHeavyAnimation(() => {\n    if (!previewUrl) return;\n    preloadImage(previewUrl).then(setEmojiImage);\n  }, [previewUrl]);\n\n  useEffect(() => {\n    preloadAfterHeavyAnimation();\n  }, [preloadAfterHeavyAnimation]);\n\n  const updateCanvas = useLastCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas || !emojiImage || !customColor) return;\n\n    const context = canvas.getContext('2d')!;\n    const { width, height } = canvas;\n\n    context.clearRect(0, 0, width, height);\n\n    ICON_POSITIONS.forEach(({\n      inline, block, opacity, scale,\n    }) => {\n      const x = (lang.isRtl ? inline : width / dpr - inline) * dpr;\n      const y = block * dpr;\n\n      const emojiSize = EMOJI_SIZE * dpr;\n\n      context.save();\n      context.globalAlpha = opacity;\n      context.translate(x, y);\n      context.scale(scale, scale);\n      context.drawImage(emojiImage, -emojiSize / 2, -emojiSize / 2, emojiSize, emojiSize);\n      context.restore();\n    });\n\n    const tintColor = `${customColor}${customEmoji!.isLottie ? LOTTIE_TINT_OPACITY : NON_LOTTIE_TINT_OPACITY}`;\n\n    context.save();\n    context.fillStyle = tintColor;\n    context.globalCompositeOperation = 'source-atop';\n    context.fillRect(0, 0, width, height);\n    context.restore();\n  });\n\n  const updateCanvasAfterHeavyAnimation = useThrottleForHeavyAnimation(updateCanvas, [updateCanvas]);\n\n  useEffect(() => {\n    updateCanvasAfterHeavyAnimation();\n  }, [emojiImage, lang.isRtl, customColor, updateCanvasAfterHeavyAnimation]);\n\n  const updateCanvasSize = useThrottleForHeavyAnimation((parentWidth: number, parentHeight: number) => {\n    requestMutation(() => {\n      const canvas = canvasRef.current;\n      if (!canvas) return;\n\n      canvas.width = parentWidth * dpr;\n      canvas.height = parentHeight * dpr;\n\n      canvas.style.width = `${parentWidth}px`;\n      canvas.style.height = `${parentHeight}px`;\n\n      updateCanvas();\n    });\n  }, [dpr]);\n\n  const handleResize = useThrottleForHeavyAnimation((entry: ResizeObserverEntry) => {\n    const { width, height } = entry.contentRect;\n\n    updateCanvasSize(width, height);\n  }, [updateCanvasSize]);\n\n  useResizeObserver(containerRef, handleResize);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    const { width, height } = container.getBoundingClientRect();\n\n    updateCanvasSize(width, height);\n  }, [updateCanvasSize]);\n\n  return (\n    <div className={buildClassName(styles.root, className)} ref={containerRef}>\n      <canvas ref={canvasRef} />\n    </div>\n  );\n};\n\nexport default memo(EmojiIconBackground);\n","import type { ApiBoostsStatus } from '../../../api/types';\n\nexport function getBoostProgressInfo(boostInfo: ApiBoostsStatus, freezeOnLevelUp?: boolean) {\n  const {\n    level, boosts, currentLevelBoosts, nextLevelBoosts, hasMyBoost, prepaidGiveaways,\n  } = boostInfo;\n\n  const isJustUpgraded = freezeOnLevelUp && boosts === currentLevelBoosts && hasMyBoost;\n\n  const currentLevel = isJustUpgraded ? level - 1 : level;\n  const hasNextLevel = Boolean(nextLevelBoosts);\n\n  const levelProgress = (!nextLevelBoosts || isJustUpgraded) ? 1\n    : (boosts - currentLevelBoosts) / (nextLevelBoosts - currentLevelBoosts);\n  const remainingBoosts = nextLevelBoosts ? nextLevelBoosts - boosts : 0;\n\n  const isMaxLevel = nextLevelBoosts === undefined;\n\n  return {\n    currentLevel,\n    hasNextLevel,\n    boosts,\n    levelProgress,\n    remainingBoosts,\n    isMaxLevel,\n    prepaidGiveaways,\n  };\n}\n","import { TME_LINK_PREFIX } from '../../../config';\n\nexport default function formatUsername(username: string, asAbsoluteLink?: boolean) {\n  return asAbsoluteLink ? `${TME_LINK_PREFIX}${username}` : `@${username}`;\n}\n","import { getGlobal } from '../../../global';\n\nimport type { ApiMessage, ApiSponsoredMessage } from '../../../api/types';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\nimport type { TextPart } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport {\n  getMessageStatefulContent,\n  getMessageText,\n} from '../../../global/helpers';\nimport {\n  getMessageSummaryDescription,\n  getMessageSummaryEmoji,\n  getMessageSummaryText,\n  TRUNCATED_SUMMARY_LENGTH,\n} from '../../../global/helpers/messageSummary';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport trimText from '../../../util/trimText';\nimport renderText from './renderText';\nimport { renderTextWithEntities } from './renderTextWithEntities';\n\nexport function renderMessageText({\n  message,\n  highlight,\n  emojiSize,\n  isSimple,\n  truncateLength,\n  isProtected,\n  forcePlayback,\n  shouldRenderAsHtml,\n  isForMediaViewer,\n} : {\n  message: ApiMessage | ApiSponsoredMessage;\n  highlight?: string;\n  emojiSize?: number;\n  isSimple?: boolean;\n  truncateLength?: number;\n  isProtected?: boolean;\n  forcePlayback?: boolean;\n  shouldRenderAsHtml?: boolean;\n  isForMediaViewer?: boolean;\n}) {\n  const { text, entities } = message.content.text || {};\n\n  if (!text) {\n    const contentNotSupportedText = getMessageText(message);\n    return contentNotSupportedText ? [trimText(contentNotSupportedText, truncateLength)] : undefined;\n  }\n\n  const messageKey = getMessageKey(message);\n\n  return renderTextWithEntities({\n    text: trimText(text, truncateLength),\n    entities,\n    highlight,\n    emojiSize,\n    shouldRenderAsHtml,\n    containerId: `${isForMediaViewer ? 'mv-' : ''}${messageKey}`,\n    isSimple,\n    isProtected,\n    forcePlayback,\n  });\n}\n\n// TODO Use Message Summary component instead\nexport function renderMessageSummary(\n  lang: OldLangFn,\n  message: ApiMessage,\n  noEmoji = false,\n  highlight?: string,\n  truncateLength = TRUNCATED_SUMMARY_LENGTH,\n): TextPart[] {\n  const { entities } = message.content.text || {};\n\n  const global = getGlobal();\n  const statefulContent = getMessageStatefulContent(global, message);\n\n  const hasSpoilers = entities?.some((e) => e.type === ApiMessageEntityTypes.Spoiler);\n  const hasCustomEmoji = entities?.some((e) => e.type === ApiMessageEntityTypes.CustomEmoji);\n  if (!hasSpoilers && !hasCustomEmoji) {\n    const text = trimText(getMessageSummaryText(lang, message, statefulContent, noEmoji), truncateLength);\n\n    if (highlight) {\n      return renderText(text, ['emoji', 'highlight'], { highlight });\n    } else {\n      return renderText(text);\n    }\n  }\n\n  const emoji = !noEmoji && getMessageSummaryEmoji(message);\n  const emojiWithSpace = emoji ? `${emoji} ` : '';\n\n  const text = renderMessageText({\n    message, highlight, isSimple: true, truncateLength,\n  });\n  const description = getMessageSummaryDescription(lang, message, statefulContent, text);\n\n  return [\n    ...renderText(emojiWithSpace),\n    ...(Array.isArray(description) ? description : [description]),\n  ].filter(Boolean);\n}\n","import type { ApiBusinessTimetableSegment } from '../../api/types';\n\nconst DAY_MINUTES = 1440;\nconst WEEK_MINUTES = 10080;\n\n/**\n * @returns Monday 00:00 of the current week for the local timezone\n */\nexport function getWeekStart(): number {\n  const now = new Date();\n  now.setHours(0, 0, 0, 0);\n  const day = now.getDay();\n  const diff = now.getDate() - day + (day === 0 ? -6 : 1);\n  return new Date(now.setDate(diff)).getTime();\n}\n\n/**\n * @returns UTC offset in seconds\n */\nexport function getUtcOffset() {\n  return new Date().getTimezoneOffset() * -60;\n}\n\nexport function shiftTimeRanges(ranges: ApiBusinessTimetableSegment[], shift: number): ApiBusinessTimetableSegment[] {\n  if (shift === 0) return ranges;\n\n  const shiftedRanges: ApiBusinessTimetableSegment[] = [];\n\n  for (const range of ranges) {\n    let start = (range.startMinute + shift) % WEEK_MINUTES;\n    let end = (range.endMinute + shift) % WEEK_MINUTES;\n\n    if (start < 0) start += WEEK_MINUTES;\n    if (end <= 0) end += WEEK_MINUTES;\n\n    if (start > end) {\n      shiftedRanges.push({ startMinute: start, endMinute: WEEK_MINUTES - 1 });\n      shiftedRanges.push({ startMinute: 0, endMinute: end });\n    } else {\n      shiftedRanges.push({ startMinute: start, endMinute: end });\n    }\n  }\n\n  shiftedRanges.sort((a, b) => a.startMinute - b.startMinute);\n\n  // Combine overlapping ranges\n  return shiftedRanges.reduce<ApiBusinessTimetableSegment[]>((acc, range) => {\n    const last = acc[acc.length - 1];\n    if (last && last.endMinute >= range.startMinute) {\n      last.endMinute = Math.max(last.endMinute, range.endMinute);\n    } else {\n      acc.push(range);\n    }\n    return acc;\n  }, []);\n}\n\nexport function splitDays(ranges: ApiBusinessTimetableSegment[]): Record<number, ApiBusinessTimetableSegment[]> {\n  const days: Record<number, ApiBusinessTimetableSegment[]> = {};\n\n  for (const range of ranges) {\n    const start = range.startMinute;\n    const end = range.endMinute;\n\n    const dayStart = Math.floor(start / DAY_MINUTES);\n    const dayEnd = Math.floor((end - 1) / DAY_MINUTES); // 00:00 is counted as same day\n\n    for (let day = dayStart; day <= dayEnd; day++) {\n      if (!days[day]) {\n        days[day] = [];\n      }\n\n      days[day].push({\n        startMinute: Math.max(0, start - day * DAY_MINUTES),\n        endMinute: Math.min(DAY_MINUTES, end - day * DAY_MINUTES),\n      });\n    }\n  }\n\n  return days;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ef_0p5Qm\",\"top\":\"nHSmCUNs\",\"icon\":\"rlM4Mbnn\",\"left\":\"JTZ8UnnP\",\"bottom\":\"lp9VIV1o\",\"status\":\"JVL7ZnnJ\",\"status-open\":\"segAfYXs\",\"statusOpen\":\"segAfYXs\",\"arrow\":\"dYxw2cFn\",\"offset-trigger\":\"gVwflFhz\",\"offsetTrigger\":\"gVwflFhz\",\"transition\":\"WKgL_XiP\",\"timetable\":\"MPBKHdZL\",\"schedule\":\"Rs0VPgpq\",\"weekday\":\"cmxPqAof\",\"current-day\":\"YZVvP_56\",\"currentDay\":\"YZVvP_56\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { ApiBusinessWorkHours } from '../../../api/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatTime, formatWeekday } from '../../../util/dates/dateFormat';\nimport {\n  getUtcOffset, getWeekStart, shiftTimeRanges, splitDays,\n} from '../../../util/dates/workHours';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\nimport Icon from '../icons/Icon';\n\nimport styles from './BusinessHours.module.scss';\n\nconst DAYS = Array.from({ length: 7 }, (_, i) => i);\n\ntype OwnProps = {\n  businessHours: ApiBusinessWorkHours;\n};\n\nconst BusinessHours = ({\n  businessHours,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const transitionRef = useRef<HTMLDivElement>(null);\n  const [isExpanded, expand, collapse] = useFlag(false);\n  const [isMyTime, showInMyTime, showInLocalTime] = useFlag(false);\n  const lang = useOldLang();\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, 60 * 1000);\n\n  const timezoneSignal = useSelectorSignal((global) => global.timezones?.byId);\n  const timezones = useDerivedState(timezoneSignal, [timezoneSignal]);\n  const timezoneMinuteDifference = useMemo(() => {\n    if (!timezones) return 0;\n    const timezone = timezones[businessHours.timezoneId];\n    const myOffset = getUtcOffset();\n    return (myOffset - timezone.utcOffset) / 60;\n  }, [businessHours.timezoneId, timezones]);\n\n  const workHours = useMemo(() => {\n    const weekStart = getWeekStart();\n    const shiftedHours = shiftTimeRanges(businessHours.workHours, isMyTime ? timezoneMinuteDifference : 0);\n    const days = splitDays(shiftedHours);\n    const result: Record<number, string[]> = {};\n\n    DAYS.forEach((day) => {\n      const segments = days[day];\n      if (!segments) {\n        result[day] = [lang('BusinessHoursDayClosed')];\n        return;\n      }\n\n      result[day] = segments.map(({ startMinute, endMinute }) => {\n        if (endMinute - startMinute === 24 * 60) return lang('BusinessHoursDayFullOpened');\n        const start = formatTime(lang, weekStart + startMinute * 60 * 1000);\n        const end = formatTime(lang, weekStart + endMinute * 60 * 1000);\n        return `${start} – ${end}`;\n      });\n    });\n\n    return result;\n  }, [businessHours.workHours, isMyTime, lang, timezoneMinuteDifference]);\n\n  const isBusinessOpen = useMemo(() => {\n    const localTimeHours = shiftTimeRanges(businessHours.workHours, timezoneMinuteDifference);\n\n    const weekStart = getWeekStart();\n    const now = new Date().getTime();\n    const minutesSinceWeekStart = (now - weekStart) / 1000 / 60;\n\n    return localTimeHours.some(({ startMinute, endMinute }) => (\n      startMinute <= minutesSinceWeekStart && minutesSinceWeekStart <= endMinute\n    ));\n  }, [businessHours.workHours, timezoneMinuteDifference]);\n\n  const currentDay = useMemo(() => {\n    const now = new Date(Date.now() - (isMyTime ? 0 : timezoneMinuteDifference * 60 * 1000));\n    return (now.getDay() + 6) % 7;\n  }, [isMyTime, timezoneMinuteDifference]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpanded) {\n      collapse();\n    } else {\n      expand();\n    }\n  });\n\n  const handleTriggerOffset = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n\n    if (isMyTime) {\n      showInLocalTime();\n    } else {\n      showInMyTime();\n    }\n  });\n\n  useEffect(() => {\n    if (!isExpanded) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.timetable}`);\n    if (!slide) return;\n\n    const height = slide.offsetHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height}px`;\n    });\n  }, [isExpanded]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.timetable}`)!;\n\n    requestMeasure(() => {\n      const height = slide.offsetHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height}px`;\n      });\n    });\n  });\n\n  return (\n    <ListItem\n      icon=\"clock\"\n      iconClassName={styles.icon}\n      multiline\n      className={styles.root}\n      isStatic={isExpanded}\n      ripple\n      narrow\n      withColorTransition\n      onClick={handleClick}\n    >\n      <div className={styles.top}>\n        <div className={styles.left}>\n          <div>{lang('BusinessHoursProfile')}</div>\n          <div className={buildClassName(styles.status, isBusinessOpen && styles.statusOpen)}>\n            {isBusinessOpen ? lang('BusinessHoursProfileNowOpen') : lang('BusinessHoursProfileNowClosed')}\n          </div>\n        </div>\n        <Icon className={styles.arrow} name={isExpanded ? 'up' : 'down'} />\n      </div>\n      {isExpanded && (\n        <div className={styles.bottom}>\n          {Boolean(timezoneMinuteDifference) && (\n            <div\n              className={styles.offsetTrigger}\n              role=\"button\"\n              tabIndex={0}\n              onMouseDown={!IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n              onClick={IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n            >\n              {lang(isMyTime ? 'BusinessHoursProfileSwitchMy' : 'BusinessHoursProfileSwitchLocal')}\n            </div>\n          )}\n          <Transition\n            className={styles.transition}\n            ref={transitionRef}\n            name=\"fade\"\n            activeKey={Number(isMyTime)}\n            onStart={handleAnimationStart}\n          >\n            <dl className={styles.timetable}>\n              {DAYS.map((day) => (\n                <>\n                  <dt className={buildClassName(styles.weekday, day === currentDay && styles.currentDay)}>\n                    {formatWeekday(lang, day === 6 ? 0 : day + 1)}\n                  </dt>\n                  <dd className={styles.schedule}>\n                    {workHours[day].map((segment) => (\n                      <div>{segment}</div>\n                    ))}\n                  </dd>\n                </>\n              ))}\n            </dl>\n          </Transition>\n        </div>\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(BusinessHours);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wCp6TBYF\",\"number\":\"lQeU96Fj\",\"float\":\"nKt3QDc_\",\"show-up\":\"ZaSLCV2k\",\"showUp\":\"ZaSLCV2k\",\"dissapear\":\"jA50ot3v\",\"shiftOrigin\":\"e1ezfWJb\",\"effect\":\"cFEXGUih\",\"giftIcon\":\"c4HDQNGJ\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport {\n  type ApiBirthday, ApiMediaFormat, type ApiStickerSet, type ApiUser,\n} from '../../../api/types';\n\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport { selectIsPremiumPurchaseBlocked } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateToString } from '../../../util/dates/dateFormat';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/windowEnvironment';\nimport renderText from '../helpers/renderText';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport StickerView from '../StickerView';\n\nimport styles from './UserBirthday.module.scss';\n\nconst NUMBER_EMOJI_SUFFIX = '\\uFE0F\\u20E3';\nconst NUMBER_STICKER_SIZE = 128;\nconst EFFECT_EMOJIS = ['🎉', '🎆', '🎈'];\nconst EFFECT_SIZE = 288;\nconst ANIMATION_DURATION = 3000;\n\ntype OwnProps = {\n  user: ApiUser;\n  birthday: ApiBirthday;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  isPremiumPurchaseBlocked?: boolean;\n  birthdayNumbers?: ApiStickerSet;\n  animatedEmojiEffects?: ApiStickerSet;\n};\n\nconst UserBirthday = ({\n  user,\n  birthday,\n  isPremiumPurchaseBlocked,\n  birthdayNumbers,\n  animatedEmojiEffects,\n  isInSettings,\n}: OwnProps & StateProps) => {\n  const { openGiftModal, requestConfetti } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const animationPlayedRef = useRef(false);\n  const [isPlayingAnimation, playAnimation, stopAnimation] = useFlag();\n\n  const lang = useOldLang();\n\n  const {\n    formattedDate,\n    isToday,\n    age,\n  } = useMemo(() => {\n    const today = new Date();\n    const date = new Date();\n    if (birthday.year) {\n      date.setFullYear(birthday.year);\n    }\n    date.setMonth(birthday.month - 1);\n    date.setDate(birthday.day);\n    date.setHours(0, 0, 0, 0);\n\n    const formatted = formatDateToString(date, lang.code, true, 'long');\n    const isBirthdayToday = date.getDate() === today.getDate() && date.getMonth() === today.getMonth();\n    return {\n      formattedDate: formatted,\n      isToday: isBirthdayToday,\n      age: birthday.year && getAge(date),\n    };\n  }, [birthday, lang]);\n\n  const numbersForAge = useMemo(() => {\n    if (!age || !isToday) return undefined;\n    const numbers = birthdayNumbers?.stickers?.filter(({ emoji }) => emoji?.endsWith(NUMBER_EMOJI_SUFFIX));\n    if (!numbers) return undefined;\n    const byEmoji = buildCollectionByKey(numbers, 'emoji');\n\n    const ageDigits = age.toString().split('');\n    return ageDigits.map((digit) => byEmoji[digit + NUMBER_EMOJI_SUFFIX]);\n  }, [age, birthdayNumbers?.stickers, isToday]);\n\n  const effectSticker = useMemo(() => {\n    if (!isToday) return undefined;\n    const randomEffect = EFFECT_EMOJIS[Math.floor(Math.random() * EFFECT_EMOJIS.length)];\n    return animatedEmojiEffects?.stickers?.find(({ emoji }) => emoji === randomEffect);\n  }, [animatedEmojiEffects?.stickers, isToday]);\n\n  // Preload stickers\n  useEffect(() => {\n    if (!isToday || !numbersForAge) return;\n\n    numbersForAge.forEach((sticker) => {\n      const hash = getStickerMediaHash(sticker, 'preview');\n      mediaLoader.fetch(hash, ApiMediaFormat.BlobUrl);\n    });\n\n    if (effectSticker) {\n      const effectHash = getStickerMediaHash(effectSticker, 'preview');\n      mediaLoader.fetch(effectHash, ApiMediaFormat.BlobUrl);\n    }\n  }, [effectSticker, isToday, numbersForAge]);\n\n  useTimeout(stopAnimation, isPlayingAnimation ? ANIMATION_DURATION : undefined);\n\n  useEffect(() => {\n    if (isPlayingAnimation) {\n      animationPlayedRef.current = true;\n\n      const column = document.getElementById(isInSettings ? 'LeftColumn' : 'RightColumn');\n      if (!column) return;\n\n      requestMeasure(() => {\n        const {\n          top, left, width, height,\n        } = column.getBoundingClientRect();\n\n        requestConfetti({\n          top,\n          left,\n          width,\n          height,\n          style: 'top-down',\n        });\n      });\n    }\n  }, [isInSettings, isPlayingAnimation]);\n\n  const valueKey = `ProfileBirthday${isToday ? 'Today' : ''}Value${age ? 'Year' : ''}`;\n\n  const canGiftPremium = isToday && !user.isPremium && !user.isSelf && !isPremiumPurchaseBlocked;\n\n  const handleOpenGiftModal = useLastCallback(() => {\n    openGiftModal({ forUserId: user.id });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (!isToday) return;\n\n    if (canGiftPremium && animationPlayedRef.current) {\n      handleOpenGiftModal();\n      return;\n    }\n\n    playAnimation();\n  });\n\n  const isStatic = !isToday && !canGiftPremium;\n\n  return (\n    <div className={styles.root}>\n      <ListItem\n        icon=\"calendar\"\n        secondaryIcon={canGiftPremium ? 'gift' : undefined}\n        secondaryIconClassName={styles.giftIcon}\n        multiline\n        narrow\n        ref={ref}\n        ripple={!isStatic}\n        onClick={handleClick}\n        isStatic={isStatic}\n        onSecondaryIconClick={handleOpenGiftModal}\n      >\n        <div className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {renderText(lang(valueKey, [formattedDate, age], undefined, age))}\n        </div>\n        <span className=\"subtitle\">{lang(isToday ? 'ProfileBirthdayToday' : 'ProfileBirthday')}</span>\n      </ListItem>\n      {isPlayingAnimation && IS_OFFSET_PATH_SUPPORTED && numbersForAge?.map((sticker, index) => (\n        <div\n          className={buildClassName(styles.number, index > 0 && styles.shiftOrigin)}\n          style={`--digit-offset: ${index}`}\n        >\n          <StickerView\n            containerRef={ref}\n            sticker={sticker}\n            size={NUMBER_STICKER_SIZE}\n            forceAlways\n          />\n        </div>\n      ))}\n      {isPlayingAnimation && effectSticker && (\n        <div className={styles.effect}>\n          <StickerView\n            containerRef={ref}\n            sticker={effectSticker}\n            size={EFFECT_SIZE}\n            shouldLoop\n            forceAlways\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { birthdayNumbers, animatedEmojiEffects } = global;\n    return {\n      birthdayNumbers,\n      animatedEmojiEffects,\n      isPremiumPurchaseBlocked: selectIsPremiumPurchaseBlocked(global),\n    };\n  },\n)(UserBirthday));\n\n// https://stackoverflow.com/a/7091965\nfunction getAge(birthdate: Date) {\n  const today = new Date();\n  let age = today.getFullYear() - birthdate.getFullYear();\n  const m = today.getMonth() - birthdate.getMonth();\n  if (m < 0 || (m === 0 && today.getDate() < birthdate.getDate())) {\n    age--;\n  }\n\n  return age;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"businessLocation\":\"UZbkeFDB\",\"personalChannel\":\"HP5EJx7s\",\"personalChannelTitle\":\"cHyTGri2\",\"botVerificationSection\":\"RWFu5ENh\",\"sectionInfo\":\"IrqRJFxm\",\"botVerificationIcon\":\"b32hsSPS\",\"personalChannelSubscribers\":\"kYd2GrmU\",\"personalChannelItem\":\"qOJwhXMC\",\"openAppButton\":\"x925YeS3\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiBotVerification,\n  ApiChat,\n  ApiCountryCode,\n  ApiUser,\n  ApiUserFullInfo,\n  ApiUsername,\n} from '../../../api/types';\nimport type { BotAppPermissions } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { FRAGMENT_PHONE_CODE, FRAGMENT_PHONE_LENGTH } from '../../../config';\nimport {\n  buildStaticMapHash,\n  getChatLink,\n  getHasAdminRight,\n  isChatChannel,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport {\n  selectBotAppPermissions,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTopicLink,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\nimport stopEvent from '../../../util/stopEvent';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\nimport { ChatAnimationTypes } from '../../left/main/hooks';\nimport formatUsername from '../helpers/formatUsername';\nimport renderText from '../helpers/renderText';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport Chat from '../../left/main/Chat';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport Switcher from '../../ui/Switcher';\nimport CustomEmoji from '../CustomEmoji';\nimport SafeLink from '../SafeLink';\nimport BusinessHours from './BusinessHours';\nimport UserBirthday from './UserBirthday';\n\nimport styles from './ChatExtra.module.scss';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  isSavedDialog?: boolean;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  chat?: ApiChat;\n  userFullInfo?: ApiUserFullInfo;\n  canInviteUsers?: boolean;\n  isMuted?: boolean;\n  phoneCodeList: ApiCountryCode[];\n  topicId?: number;\n  description?: string;\n  chatInviteLink?: string;\n  topicLink?: string;\n  hasSavedMessages?: boolean;\n  personalChannel?: ApiChat;\n  hasMainMiniApp?: boolean;\n  isBotCanManageEmojiStatus?: boolean;\n  botAppPermissions?: BotAppPermissions;\n  botVerification?: ApiBotVerification;\n};\n\nconst DEFAULT_MAP_CONFIG = {\n  width: 64,\n  height: 64,\n  zoom: 15,\n};\n\nconst BOT_VERIFICATION_ICON_SIZE = 16;\n\nconst ChatExtra: FC<OwnProps & StateProps> = ({\n  chatOrUserId,\n  user,\n  chat,\n  userFullInfo,\n  isInSettings,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  topicId,\n  description,\n  chatInviteLink,\n  topicLink,\n  hasSavedMessages,\n  personalChannel,\n  hasMainMiniApp,\n  isBotCanManageEmojiStatus,\n  botAppPermissions,\n  botVerification,\n}) => {\n  const {\n    showNotification,\n    updateChatMutedState,\n    updateTopicMutedState,\n    loadPeerStories,\n    openSavedDialog,\n    openMapModal,\n    requestCollectibleInfo,\n    requestMainWebView,\n    toggleUserEmojiStatusPermission,\n    toggleUserLocationPermission,\n  } = getActions();\n\n  const {\n    id: userId,\n    usernames,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId, usernames: chatUsernames } = chat || {};\n  const peerId = userId || chatId;\n  const {\n    businessLocation,\n    businessWorkHours,\n    personalChannelMessageId,\n    birthday,\n  } = userFullInfo || {};\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useEffectWithPrevDeps(([prevPeerId]) => {\n    if (!peerId || prevPeerId === peerId) return;\n    if (user || (chat && isChatChannel(chat))) {\n      loadPeerStories({ peerId });\n    }\n  }, [peerId, chat, user]);\n\n  const { width, height, zoom } = DEFAULT_MAP_CONFIG;\n  const dpr = useDevicePixelRatio();\n  const locationMediaHash = businessLocation?.geo\n    && buildStaticMapHash(businessLocation.geo, width, height, zoom, dpr);\n  const locationBlobUrl = useMedia(locationMediaHash);\n\n  const locationRightComponent = useMemo(() => {\n    if (!businessLocation?.geo) return undefined;\n    if (locationBlobUrl) {\n      return <img src={locationBlobUrl} alt=\"\" className={styles.businessLocation} />;\n    }\n\n    return <Skeleton className={styles.businessLocation} />;\n  }, [businessLocation, locationBlobUrl]);\n\n  const isTopicInfo = Boolean(topicId && topicId !== MAIN_THREAD_ID);\n  const shouldRenderAllLinks = (chat && isChatChannel(chat)) || user?.isPremium;\n\n  const activeUsernames = useMemo(() => {\n    const result = usernames?.filter((u) => u.isActive);\n\n    return result?.length ? result : undefined;\n  }, [usernames]);\n\n  const activeChatUsernames = useMemo(() => {\n    const result = !user ? chatUsernames?.filter((u) => u.isActive) : undefined;\n\n    return result?.length ? result : undefined;\n  }, [chatUsernames, user]);\n\n  const link = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return isTopicInfo ? topicLink! : getChatLink(chat) || chatInviteLink;\n  }, [chat, isTopicInfo, topicLink, chatInviteLink]);\n\n  const handleClickLocation = useLastCallback(() => {\n    const { address, geo } = businessLocation!;\n    if (!geo) {\n      copyTextToClipboard(address);\n      showNotification({ message: oldLang('BusinessLocationCopied') });\n      return;\n    }\n\n    openMapModal({ geoPoint: geo, zoom });\n  });\n\n  const handleNotificationChange = useLastCallback(() => {\n    if (isTopicInfo) {\n      updateTopicMutedState({\n        chatId: chatId!,\n        topicId: topicId!,\n        isMuted: !isMuted,\n      });\n    } else {\n      updateChatMutedState({ chatId: chatId!, isMuted: !isMuted });\n    }\n  });\n\n  const manageEmojiStatusChange = useLastCallback(() => {\n    if (!user) return;\n    toggleUserEmojiStatusPermission({ botId: user.id, isEnabled: !isBotCanManageEmojiStatus });\n  });\n\n  const handleLocationPermissionChange = useLastCallback(() => {\n    if (!user) return;\n    toggleUserLocationPermission({ botId: user.id, isAccessGranted: !botAppPermissions?.geolocation });\n  });\n\n  const handleOpenSavedDialog = useLastCallback(() => {\n    openSavedDialog({ chatId: chatOrUserId });\n  });\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n\n  const handlePhoneClick = useLastCallback(() => {\n    if (phoneNumber?.length === FRAGMENT_PHONE_LENGTH && phoneNumber.startsWith(FRAGMENT_PHONE_CODE)) {\n      requestCollectibleInfo({ collectible: phoneNumber, peerId: peerId!, type: 'phone' });\n      return;\n    }\n    copy(formattedNumber!, oldLang('Phone'));\n  });\n\n  const handleUsernameClick = useLastCallback((username: ApiUsername, isChat?: boolean) => {\n    if (!username.isEditable) {\n      requestCollectibleInfo({ collectible: username.username, peerId: peerId!, type: 'username' });\n      return;\n    }\n    copy(formatUsername(username.username, isChat), oldLang(isChat ? 'Link' : 'Username'));\n  });\n\n  const handleOpenApp = useLastCallback(() => {\n    const botId = user?.id;\n    if (!botId) {\n      return;\n    }\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId,\n      peerId: botId,\n      theme,\n      shouldMarkBotTrusted: true,\n    });\n  });\n\n  const appTermsInfo = lang('ProfileOpenAppAbout', {\n    terms: (\n      <SafeLink\n        text={lang('ProfileOpenAppTerms')}\n        url={lang('ProfileBotOpenAppInfoLink')}\n      />\n    ),\n  }, { withNodes: true });\n\n  if (chat?.isRestricted || (isSelf && !isInSettings)) {\n    return undefined;\n  }\n\n  function renderUsernames(usernameList: ApiUsername[], isChat?: boolean) {\n    const [mainUsername, ...otherUsernames] = usernameList;\n\n    const usernameLinks = otherUsernames.length\n      ? (oldLang('UsernameAlso', '%USERNAMES%') as string)\n        .split('%')\n        .map((s) => {\n          return (s === 'USERNAMES' ? (\n            <>\n              {otherUsernames.map((username, idx) => {\n                return (\n                  <>\n                    {idx > 0 ? ', ' : ''}\n                    <a\n                      key={username.username}\n                      href={formatUsername(username.username, true)}\n                      onMouseDown={stopEvent}\n                      onClick={(e) => {\n                        stopEvent(e);\n                        handleUsernameClick(username, isChat);\n                      }}\n                      className=\"text-entity-link username-link\"\n                    >\n                      {formatUsername(username.username)}\n                    </a>\n                  </>\n                );\n              })}\n            </>\n          ) : s);\n        })\n      : undefined;\n\n    return (\n      <ListItem\n        icon={isChat ? 'link' : 'mention'}\n        multiline\n        narrow\n        ripple\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => {\n          handleUsernameClick(mainUsername, isChat);\n        }}\n      >\n        <span className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {formatUsername(mainUsername.username, isChat)}\n        </span>\n        <span className=\"subtitle\">\n          {usernameLinks && <span className=\"other-usernames\">{usernameLinks}</span>}\n          {oldLang(isChat ? 'Link' : 'Username')}\n        </span>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"ChatExtra\">\n      {personalChannel && (\n        <div className={styles.personalChannel}>\n          <h3 className={styles.personalChannelTitle}>{oldLang('ProfileChannel')}</h3>\n          <span className={styles.personalChannelSubscribers}>\n            {oldLang('Subscribers', personalChannel.membersCount, 'i')}\n          </span>\n          <Chat\n            chatId={personalChannel.id}\n            orderDiff={0}\n            animationType={ChatAnimationTypes.None}\n            isPreview\n            previewMessageId={personalChannelMessageId}\n            className={styles.personalChannelItem}\n          />\n        </div>\n      )}\n      {Boolean(formattedNumber?.length) && (\n        // eslint-disable-next-line react/jsx-no-bind\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={handlePhoneClick}>\n          <span className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>{formattedNumber}</span>\n          <span className=\"subtitle\">{oldLang('Phone')}</span>\n        </ListItem>\n      )}\n      {activeUsernames && renderUsernames(activeUsernames)}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n          allowSelection\n        >\n          <span className=\"title word-break allow-selection\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {\n              renderText(description, [\n                'br',\n                shouldRenderAllLinks ? 'links' : 'tg_links',\n                'emoji',\n              ])\n            }\n          </span>\n          <span className=\"subtitle\">{oldLang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {activeChatUsernames && !isTopicInfo && renderUsernames(activeChatUsernames, true)}\n      {((!activeChatUsernames && canInviteUsers) || isTopicInfo) && link && (\n        <ListItem\n          icon=\"link\"\n          multiline\n          narrow\n          ripple\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => copy(link, oldLang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{oldLang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {birthday && (\n        <UserBirthday key={peerId} birthday={birthday} user={user!} isInSettings={isInSettings} />\n      )}\n      { hasMainMiniApp && (\n        <ListItem\n          multiline\n          isStatic\n          narrow\n        >\n          <Button\n            className={styles.openAppButton}\n            size=\"smaller\"\n            onClick={handleOpenApp}\n          >\n            {oldLang('ProfileBotOpenApp')}\n          </Button>\n          <div className={styles.sectionInfo}>\n            {appTermsInfo}\n          </div>\n        </ListItem>\n      )}\n      {!isInSettings && (\n        <ListItem icon=\"unmute\" narrow ripple onClick={handleNotificationChange}>\n          <span>{oldLang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'}\n            checked={isMuted}\n            inactive\n          />\n        </ListItem>\n      )}\n      {businessWorkHours && (\n        <BusinessHours businessHours={businessWorkHours} />\n      )}\n      {businessLocation && (\n        <ListItem\n          icon=\"location\"\n          ripple\n          multiline\n          narrow\n          rightElement={locationRightComponent}\n          onClick={handleClickLocation}\n        >\n          <div className=\"title\">{businessLocation.address}</div>\n          <span className=\"subtitle\">{oldLang('BusinessProfileLocation')}</span>\n        </ListItem>\n      )}\n      {hasSavedMessages && !isInSettings && (\n        <ListItem icon=\"saved-messages\" narrow ripple onClick={handleOpenSavedDialog}>\n          <span>{oldLang('SavedMessagesTab')}</span>\n        </ListItem>\n      )}\n      {userFullInfo && 'isBotAccessEmojiGranted' in userFullInfo && (\n        <ListItem icon=\"user\" narrow ripple onClick={manageEmojiStatusChange}>\n          <span>{oldLang('BotProfilePermissionEmojiStatus')}</span>\n          <Switcher\n            label={oldLang('BotProfilePermissionEmojiStatus')}\n            checked={isBotCanManageEmojiStatus}\n            inactive\n          />\n        </ListItem>\n      )}\n      {botAppPermissions?.geolocation !== undefined && (\n        <ListItem icon=\"location\" narrow ripple onClick={handleLocationPermissionChange}>\n          <span>{oldLang('BotProfilePermissionLocation')}</span>\n          <Switcher\n            label={oldLang('BotProfilePermissionLocation')}\n            checked={botAppPermissions?.geolocation}\n            inactive\n          />\n        </ListItem>\n      )}\n      {botVerification && (\n        <div className={styles.botVerificationSection}>\n          <CustomEmoji\n            className={styles.botVerificationIcon}\n            documentId={botVerification.iconId}\n            size={BOT_VERIFICATION_ICON_SIZE}\n          />\n          {botVerification.description}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId, isSavedDialog }): StateProps => {\n    const { countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = chatOrUserId ? selectUser(global, chatOrUserId) : undefined;\n    const botAppPermissions = chatOrUserId ? selectBotAppPermissions(global, chatOrUserId) : undefined;\n    const isForum = chat?.isForum;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const topicId = isForum && threadId ? Number(threadId) : undefined;\n\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const userFullInfo = user && selectUserFullInfo(global, user.id);\n\n    const botVerification = userFullInfo?.botVerification || chatFullInfo?.botVerification;\n\n    const chatInviteLink = chatFullInfo?.inviteLink;\n    const description = userFullInfo?.bio || chatFullInfo?.about;\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    const topicLink = topicId ? selectTopicLink(global, chatOrUserId, topicId) : undefined;\n\n    const hasSavedMessages = !isSavedDialog && global.chats.listIds.saved?.includes(chatOrUserId);\n\n    const personalChannel = userFullInfo?.personalChannelId\n      ? selectChat(global, userFullInfo.personalChannelId)\n      : undefined;\n\n    const hasMainMiniApp = user?.hasMainMiniApp;\n\n    return {\n      phoneCodeList,\n      chat,\n      user,\n      userFullInfo,\n      canInviteUsers,\n      botAppPermissions,\n      isMuted,\n      topicId,\n      chatInviteLink,\n      description,\n      topicLink,\n      hasSavedMessages,\n      personalChannel,\n      hasMainMiniApp,\n      isBotCanManageEmojiStatus: userFullInfo?.isBotCanManageEmojiStatus,\n      botVerification,\n    };\n  },\n)(ChatExtra));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatFolderModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default ChatFolderModalAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './MuteChatModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst MuteChatModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MuteChatModal = useModuleLoader(Bundles.Extra, 'MuteChatModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MuteChatModal ? <MuteChatModal {...props} /> : undefined;\n};\n\nexport default MuteChatModalAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"byPckqUT\",\"indicator\":\"nl36F75B\",\"indicatorInner\":\"AA5s1Pu4\",\"selected\":\"qy2i51dM\",\"active\":\"IsUWP16T\",\"bar-animation-transform-2\":\"p_1Kbke9\",\"barAnimationTransform2\":\"p_1Kbke9\",\"bar-animation-transform-1\":\"gOCprMbJ\",\"barAnimationTransform1\":\"gOCprMbJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './ChatCallStatus.module.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n  isMobile?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n  isMobile,\n}) => {\n  return (\n    <div className={buildClassName(\n      styles.root,\n      isActive && styles.active,\n      isSelected && !isMobile && styles.selected,\n    )}\n    >\n      <div className={styles.indicator}>\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiDraft,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiTopic,\n  ApiTypeStory,\n  ApiTypingStatus,\n  ApiUser,\n  ApiUserStatus,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport {\n  getMessageAction,\n  groupStatetefulContent,\n  isUserId,\n  isUserOnline,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatLastMessage,\n  selectChatLastMessageId,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectIsForumPanelClosed,\n  selectIsForumPanelOpen,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectOutgoingStatus,\n  selectPeer,\n  selectPeerStory,\n  selectSender,\n  selectTabState,\n  selectThreadParam,\n  selectTopicFromMessage,\n  selectTopicsInfo,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useChatListEntry from './hooks/useChatListEntry';\n\nimport Avatar from '../../common/Avatar';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\nimport ChatCallStatus from './ChatCallStatus';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n  offsetTop?: number;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n  previewMessageId?: number;\n  className?: string;\n  observeIntersection?: ObserveFn;\n  onDragEnter?: (chatId: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  lastMessageStory?: ApiTypeStory;\n  listedTopicIds?: number[];\n  topics?: Record<number, ApiTopic>;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  actionTargetUserIds?: string[];\n  actionTargetMessage?: ApiMessage;\n  actionTargetChatId?: string;\n  lastMessageSender?: ApiPeer;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiDraft;\n  isSelected?: boolean;\n  isSelectedForum?: boolean;\n  isForumPanelOpen?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastMessageTopic?: ApiTopic;\n  typingStatus?: ApiTypingStatus;\n  withInterfaceAnimations?: boolean;\n  lastMessageId?: number;\n  lastMessage?: ApiMessage;\n  currentUserId: string;\n  isSynced?: boolean;\n};\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  listedTopicIds,\n  topics,\n  observeIntersection,\n  chat,\n  lastMessageStory,\n  isMuted,\n  user,\n  userStatus,\n  actionTargetUserIds,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  actionTargetMessage,\n  actionTargetChatId,\n  offsetTop,\n  draft,\n  withInterfaceAnimations,\n  isSelected,\n  isSelectedForum,\n  isForumPanelOpen,\n  canScrollDown,\n  canChangeFolder,\n  lastMessageTopic,\n  typingStatus,\n  lastMessageId,\n  lastMessage,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  previewMessageId,\n  className,\n  isSynced,\n  onDragEnter,\n}) => {\n  const {\n    openChat,\n    openSavedDialog,\n    toggleChatInfo,\n    focusLastMessage,\n    focusMessage,\n    loadTopics,\n    openForumPanel,\n    closeForumPanel,\n    setShouldCloseRightColumn,\n    reportMessages,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n\n  const { isForum, isForumAsMessages } = chat || {};\n\n  useEnsureMessage(isSavedDialog ? currentUserId : chatId, lastMessageId, lastMessage);\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    typingStatus,\n    draft,\n    statefulMediaContent: groupStatetefulContent({ story: lastMessageStory }),\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageTopic,\n    lastMessageSender,\n    observeIntersection,\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n    isSavedDialog,\n    isPreview,\n    topics,\n  });\n\n  const getIsForumPanelClosed = useSelectorSignal(selectIsForumPanelClosed);\n\n  const handleClick = useLastCallback(() => {\n    const noForumTopicPanel = isMobile && isForumAsMessages;\n\n    if (isMobile) {\n      setShouldCloseRightColumn({ value: true });\n    }\n\n    if (isPreview) {\n      focusMessage({\n        chatId,\n        messageId: previewMessageId!,\n      });\n      return;\n    }\n\n    if (isSavedDialog) {\n      openSavedDialog({ chatId, noForumTopicPanel: true }, { forceOnHeavyAnimation: true });\n\n      if (isMobile) {\n        toggleChatInfo({ force: false });\n      }\n      return;\n    }\n\n    if (isForum) {\n      if (isForumPanelOpen) {\n        closeForumPanel(undefined, { forceOnHeavyAnimation: true });\n\n        return;\n      } else {\n        if (!noForumTopicPanel) {\n          openForumPanel({ chatId }, { forceOnHeavyAnimation: true });\n        }\n\n        if (!isForumAsMessages) return;\n      }\n    }\n\n    openChat({ id: chatId, noForumTopicPanel, shouldReplaceHistory: true }, { forceOnHeavyAnimation: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const handleDragEnter = useLastCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.(chatId);\n  });\n\n  const handleDelete = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const handleChatFolderChange = useLastCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  });\n\n  const handleReport = useLastCallback(() => {\n    if (!chat) return;\n    reportMessages({ chatId: chat.id, messageIds: [] });\n  });\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleMute,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    isSavedDialog,\n    currentUserId,\n    isPreview,\n  });\n\n  const isIntersecting = useIsIntersecting(ref, chat ? observeIntersection : undefined);\n\n  // Load the forum topics to display unread count badge\n  useEffect(() => {\n    if (isIntersecting && isForum && isSynced && listedTopicIds === undefined) {\n      loadTopics({ chatId });\n    }\n  }, [chatId, listedTopicIds, isSynced, isForum, isIntersecting]);\n\n  const isOnline = user && userStatus && isUserOnline(user, userStatus);\n  const { hasShownClass: isAvatarOnlineShown } = useShowTransitionDeprecated(isOnline);\n\n  const href = useMemo(() => {\n    if (!IS_OPEN_IN_NEW_TAB_SUPPORTED) return undefined;\n\n    if (isSavedDialog) {\n      return `#${createLocationHash(currentUserId, 'thread', chatId)}`;\n    }\n\n    return `#${createLocationHash(chatId, 'thread', MAIN_THREAD_ID)}`;\n  }, [chatId, currentUserId, isSavedDialog]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = user || chat;\n\n  const chatClassName = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isForum && 'forum',\n    isSelected && 'selected',\n    isSelectedForum && 'selected-forum',\n    isPreview && 'standalone',\n    className,\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={chatClassName}\n      href={href}\n      style={`top: ${offsetTop}px`}\n      ripple={!isForum && !isMobile}\n      contextActions={contextActions}\n      onClick={handleClick}\n      onDragEnter={handleDragEnter}\n      withPortalForMenu\n    >\n      <div className={buildClassName('status', 'status-clickable')}>\n        <Avatar\n          peer={peer}\n          isSavedMessages={user?.isSelf}\n          isSavedDialog={isSavedDialog}\n          size={isPreview ? 'medium' : 'large'}\n          withStory={!user?.isSelf}\n          withStoryGap={isAvatarOnlineShown || Boolean(chat.subscriptionUntil)}\n          storyViewerOrigin={StoryViewerOrigin.ChatList}\n          storyViewerMode=\"single-peer\"\n        />\n        <div className=\"avatar-badge-wrapper\">\n          <div\n            className={buildClassName('avatar-online', 'avatar-badge', isAvatarOnlineShown && 'avatar-online-shown')}\n          />\n          {!isAvatarOnlineShown && Boolean(chat.subscriptionUntil) && (\n            <StarIcon type=\"gold\" className=\"avatar-badge avatar-subscription\" size=\"adaptive\" />\n          )}\n          <ChatBadge\n            chat={chat}\n            isMuted={isMuted}\n            shouldShowOnlyMostImportant\n            forceHidden={getIsForumPanelClosed}\n            topics={topics}\n            isSelected={isSelected}\n          />\n        </div>\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isMobile={isMobile} isSelected={isSelected} isActive={withInterfaceAnimations} />\n        )}\n      </div>\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === user?.id && user?.isSelf}\n            isSavedDialog={isSavedDialog}\n            observeIntersection={observeIntersection}\n          />\n          {isMuted && !isSavedDialog && <Icon name=\"muted\" />}\n          <div className=\"separator\" />\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={!isSavedDialog ? lastMessageOutgoingStatus : undefined}\n              draftDate={draft?.date}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          {!isPreview && (\n            <ChatBadge\n              chat={chat}\n              isPinned={isPinned}\n              isMuted={isMuted}\n              isSavedDialog={isSavedDialog}\n              hasMiniApp={user?.hasMainMiniApp}\n              topics={topics}\n              isSelected={isSelected}\n            />\n          )}\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n          isSavedDialog={isSavedDialog}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, isSavedDialog, isPreview, previewMessageId,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const user = selectUser(global, chatId);\n    if (!chat) {\n      return {\n        currentUserId: global.currentUserId!,\n      };\n    }\n\n    const lastMessageId = previewMessageId || selectChatLastMessageId(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const lastMessage = previewMessageId\n      ? selectChatMessage(global, chatId, previewMessageId)\n      : selectChatLastMessage(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const { isOutgoing, forwardInfo } = lastMessage || {};\n    const savedDialogSender = isSavedDialog && forwardInfo?.fromId ? selectPeer(global, forwardInfo.fromId) : undefined;\n    const messageSender = lastMessage ? selectSender(global, lastMessage) : undefined;\n    const lastMessageSender = savedDialogSender || messageSender;\n    const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chat.id, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = !isPreview && chatId === currentChatId && (isSavedDialog\n      ? chatId === currentThreadId : currentThreadId === MAIN_THREAD_ID);\n    const isSelectedForum = (chat.isForum && chatId === currentChatId)\n      || chatId === selectTabState(global).forumPanelChatId;\n\n    const userStatus = selectUserStatus(global, chatId);\n    const lastMessageTopic = lastMessage && selectTopicFromMessage(global, lastMessage);\n\n    const typingStatus = selectThreadParam(global, chatId, MAIN_THREAD_ID, 'typingStatus');\n\n    const topicsInfo = selectTopicsInfo(global, chatId);\n\n    const storyData = lastMessage?.content.storyData;\n    const lastMessageStory = storyData && selectPeerStory(global, storyData.peerId, storyData.id);\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      lastMessageSender,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      isSelected,\n      isSelectedForum,\n      isForumPanelOpen: selectIsForumPanelOpen(global),\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: (global.chatFolders.orderedIds?.length || 0) > 1,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      user,\n      userStatus,\n      lastMessageTopic,\n      typingStatus,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      lastMessage,\n      lastMessageId,\n      currentUserId: global.currentUserId!,\n      listedTopicIds: topicsInfo?.listedTopicIds,\n      topics: topicsInfo?.topicsById,\n      isSynced: global.isSynced,\n      lastMessageStory,\n    };\n  },\n)(Chat));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { isSignal } from '../../../util/signals';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\n\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ShowTransition from '../../ui/ShowTransition';\n\nimport './ChatBadge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topic?: ApiTopic;\n  wasTopicOpened?: boolean;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  isSavedDialog?: boolean;\n  shouldShowOnlyMostImportant?: boolean;\n  hasMiniApp?: boolean;\n  forceHidden?: boolean | Signal<boolean>;\n  topics?: Record<number, ApiTopic>;\n  isSelected?: boolean;\n};\n\nconst ChatBadge: FC<OwnProps> = ({\n  topic,\n  topics,\n  chat,\n  isPinned,\n  isMuted,\n  shouldShowOnlyMostImportant,\n  wasTopicOpened,\n  forceHidden,\n  isSavedDialog,\n  hasMiniApp,\n  isSelected,\n}) => {\n  const { requestMainWebView } = getActions();\n\n  const oldLang = useOldLang();\n\n  const {\n    unreadMentionsCount = 0, unreadReactionsCount = 0,\n  } = !chat.isForum ? chat : {}; // TODO[forums] Unread mentions and reactions temporarily disabled for forums\n\n  const isTopicUnopened = !isPinned && topic && !wasTopicOpened;\n  const isForum = chat.isForum && !topic;\n  const topicsWithUnread = useMemo(() => (\n    isForum && topics ? Object.values(topics).filter(({ unreadCount }) => unreadCount) : undefined\n  ), [topics, isForum]);\n\n  const unreadCount = useMemo(() => (\n    isForum\n      // If we have unmuted topics, display the count of those. Otherwise, display the count of all topics.\n      ? ((isMuted && topicsWithUnread?.filter((acc) => acc.isMuted === false).length)\n        || topicsWithUnread?.length)\n      : (topic || chat).unreadCount\n  ), [chat, topic, topicsWithUnread, isForum, isMuted]);\n\n  const shouldBeMuted = useMemo(() => {\n    const hasUnmutedUnreadTopics = topics\n      && Object.values(topics).some((acc) => !acc.isMuted && acc.unreadCount);\n\n    return isMuted || (topics && !hasUnmutedUnreadTopics);\n  }, [topics, isMuted]);\n\n  const hasUnreadMark = topic ? false : chat.hasUnreadMark;\n\n  const resolvedForceHidden = useDerivedState(\n    () => (isSignal(forceHidden) ? forceHidden() : forceHidden),\n    [forceHidden],\n  );\n  const isShown = !resolvedForceHidden && Boolean(\n    unreadCount || unreadMentionsCount || hasUnreadMark || isPinned || unreadReactionsCount\n    || isTopicUnopened || hasMiniApp,\n  );\n\n  const isUnread = Boolean((unreadCount || hasUnreadMark) && !isSavedDialog);\n  const className = buildClassName(\n    'ChatBadge',\n    shouldBeMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  const handleOpenApp = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId: chat.id,\n      peerId: chat.id,\n      theme,\n    });\n  });\n\n  function renderContent() {\n    const unreadReactionsElement = unreadReactionsCount && (\n      <div className={buildClassName('ChatBadge reaction', shouldBeMuted && 'muted')}>\n        <Icon name=\"heart\" />\n      </div>\n    );\n\n    const unreadMentionsElement = unreadMentionsCount && (\n      <div className=\"ChatBadge mention\">\n        <Icon name=\"mention\" />\n      </div>\n    );\n\n    const unopenedTopicElement = isTopicUnopened && (\n      <div className={buildClassName('ChatBadge unopened', shouldBeMuted && 'muted')} />\n    );\n\n    const unreadCountElement = (hasUnreadMark || unreadCount) ? (\n      <div className={className}>\n        {!hasUnreadMark && <AnimatedCounter text={formatIntegerCompact(unreadCount!)} />}\n      </div>\n    ) : undefined;\n\n    const pinnedElement = isPinned && (\n      <div className={className}>\n        <Icon name=\"pinned-chat\" />\n      </div>\n    );\n\n    const miniAppButton = hasMiniApp && (\n      <Button\n        color={isSelected ? 'secondary' : 'primary'}\n        className=\"ChatBadge miniapp\"\n        pill\n        size=\"tiny\"\n        onClick={handleOpenApp}\n      >\n        {oldLang('BotOpen')}\n      </Button>\n    );\n\n    const visiblePinnedElement = !unreadCountElement && !unreadMentionsElement && !unreadReactionsElement\n      && pinnedElement;\n\n    const elements = [\n      unopenedTopicElement, unreadReactionsElement, unreadMentionsElement, unreadCountElement, visiblePinnedElement,\n    ].filter(Boolean);\n\n    if (isSavedDialog) return pinnedElement;\n\n    // Show only if empty or have pinned icon\n    if (hasMiniApp && (elements.length === 0 || visiblePinnedElement)) return miniAppButton;\n\n    if (elements.length === 0) return undefined;\n\n    if (elements.length === 1) return elements[0];\n\n    if (shouldShowOnlyMostImportant) {\n      const importanceOrderedElements = [\n        unreadMentionsElement, unreadCountElement, unreadReactionsElement, pinnedElement,\n      ].filter(Boolean);\n      return importanceOrderedElements[0];\n    }\n\n    return (\n      <div className=\"ChatBadge-wrapper\">\n        {elements}\n      </div>\n    );\n  }\n\n  return (\n    <ShowTransition isCustom className=\"ChatBadge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(ChatBadge);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport {\n  getActions, getGlobal, setGlobal, withGlobal,\n} from '../../../global';\n\nimport type { CustomEmojiIconsFolder, GlobalState } from '../../../global/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport type { LeftColumnContent, SettingsScreens } from '../../../types';\nimport type { IconName } from '../../../types/icons';\nimport type { MenuItemContextAction } from '../../ui/ListItem';\nimport type { TabWithProperties } from '../../ui/TabList';\nimport {\n  type ApiChatFolder, type ApiChatlistExportedInvite, type ApiSession, type ApiSticker,\n} from '../../../api/types';\n\nimport { ALL_FOLDER_ID } from '../../../config';\nimport { selectCanAnimateInterface, selectCanShareFolder, selectTabState } from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport { useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport StickerView from '../../common/StickerView';\nimport StoryRibbon from '../../story/StoryRibbon';\nimport TabList from '../../ui/TabList';\nimport Transition from '../../ui/Transition';\nimport ChatList from './ChatList';\n\nexport const DEFAULT_FOLDER_ICON = '📁';\n\ntype OwnProps = {\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n  foldersDispatch: FolderEditDispatch;\n  onLeftColumnContentChange: (content: LeftColumnContent) => void;\n  shouldHideFolderTabs?: boolean;\n  isForumPanelOpen?: boolean;\n};\n\ntype StateProps = {\n  foldersVertical: boolean;\n  canAnimate: boolean;\n  customEmojisById: Record<number, ApiSticker>;\n  customEmojiIcons: CustomEmojiIconsFolder;\n  chatFoldersById: Record<number, ApiChatFolder>;\n  folderInvitesById: Record<number, ApiChatlistExportedInvite[]>;\n  orderedFolderIds?: number[];\n  activeChatFolder: number;\n  currentUserId?: string;\n  shouldSkipHistoryAnimations?: boolean;\n  maxFolders: number;\n  maxChatLists: number;\n  maxFolderInvites: number;\n  hasArchivedChats?: boolean;\n  hasArchivedStories?: boolean;\n  archiveSettings: GlobalState['archiveSettings'];\n  isStoryRibbonShown?: boolean;\n  sessions?: Record<string, ApiSession>;\n};\n\nconst SAVED_MESSAGES_HOTKEY = '0';\nconst FIRST_FOLDER_INDEX = 0;\n\nexport const EMOTICON_TO_FOLDER_ICON: { [key: string]: IconName } = {\n  '💬': 'chats',\n  '✅': 'comments-sticker',\n  '👤': 'user-filled',\n  '👥': 'group-filled',\n  '⭐': 'star-small',\n  '📢': 'channel-filled',\n  '🤖': 'bot',\n  '📁': 'folder-badge',\n};\n\nexport const LOCSTOR_CUSTOM_EMOJI_KEY = 'CustomEmojisForFolders';\n\nexport function getLocalStorageFolderIcons():CustomEmojiIconsFolder {\n  let customEmojiIcons:CustomEmojiIconsFolder = {};\n\n  const storage = localStorage.getItem(LOCSTOR_CUSTOM_EMOJI_KEY);\n  if (storage) {\n    try {\n      customEmojiIcons = JSON.parse(storage);\n    } catch {\n      customEmojiIcons = {};\n      localStorage.setItem(LOCSTOR_CUSTOM_EMOJI_KEY, JSON.stringify({}));\n    }\n  }\n\n  return customEmojiIcons;\n}\n\nexport function getIconNameByFolder(folder: ApiChatFolder | Omit<ApiChatFolder, 'id' | 'description'>) {\n  if (folder.emoticon) {\n    return EMOTICON_TO_FOLDER_ICON[folder.emoticon];\n  } else if (folder.excludeRead) { // unread\n    return 'chats-badge';\n  } else if (folder.contacts === true && folder.nonContacts === true && folder.channels === false) { // personal\n    return 'user-filled';\n  } else if (folder.channels === false && folder.nonContacts === true) { // non-contacts\n    return 'user-filled';\n  } else if (folder.channels === false && folder.groups === true) { // groups\n    return 'group-filled';\n  } else if (folder.channels === false && folder.contacts === true) { // contacts\n    return 'user-filled';\n  } else if (folder.bots === true && folder.channels === false) { // bots\n    return 'bot';\n  }\n  return undefined;\n}\n\nconst ChatFolders: FC<OwnProps & StateProps> = ({\n  foldersDispatch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n  customEmojiIcons,\n  canAnimate,\n  foldersVertical,\n  chatFoldersById,\n  orderedFolderIds,\n  activeChatFolder,\n  currentUserId,\n  isForumPanelOpen,\n  shouldSkipHistoryAnimations,\n  maxFolders,\n  maxChatLists,\n  shouldHideFolderTabs,\n  folderInvitesById,\n  maxFolderInvites,\n  hasArchivedChats,\n  hasArchivedStories,\n  archiveSettings,\n  isStoryRibbonShown,\n  sessions,\n}) => {\n  const {\n    loadChatFolders,\n    setActiveChatFolder,\n    openChat,\n    openShareChatFolderModal,\n    openDeleteChatFolderModal,\n    openEditChatFolder,\n    openLimitReachedModal,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  // eslint-disable-next-line no-null/no-null\n  const transitionRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  useEffect(() => {\n    loadChatFolders();\n  }, []);\n\n  const {\n    ref,\n    shouldRender: shouldRenderStoryRibbon,\n    getIsClosing: getIsStoryRibbonClosing,\n  } = useShowTransition({\n    isOpen: isStoryRibbonShown,\n    className: false,\n    withShouldRender: true,\n  });\n  const isStoryRibbonClosing = useDerivedState(getIsStoryRibbonClosing);\n\n  const allChatsFolder: ApiChatFolder = useMemo(() => {\n    return {\n      id: ALL_FOLDER_ID,\n      title: { text: orderedFolderIds?.[0] === ALL_FOLDER_ID ? lang('FilterAllChatsShort') : lang('FilterAllChats') },\n      includedChatIds: MEMO_EMPTY_ARRAY,\n      excludedChatIds: MEMO_EMPTY_ARRAY,\n      emoticon: DEFAULT_FOLDER_ICON,\n    } satisfies ApiChatFolder;\n  }, [orderedFolderIds, lang]);\n\n  const displayedFolders = useMemo(() => {\n    return orderedFolderIds\n      ? orderedFolderIds.map((id) => {\n        if (id === ALL_FOLDER_ID) {\n          return allChatsFolder;\n        }\n\n        return chatFoldersById[id] || {};\n      }).filter(Boolean)\n      : undefined;\n  }, [chatFoldersById, allChatsFolder, orderedFolderIds]);\n\n  const allChatsFolderIndex = displayedFolders?.findIndex((folder) => folder.id === ALL_FOLDER_ID);\n  const isInAllChatsFolder = allChatsFolderIndex === activeChatFolder;\n  const isInFirstFolder = FIRST_FOLDER_INDEX === activeChatFolder;\n\n  const folderCountersById = useFolderManagerForUnreadCounters();\n  const folderTabs = useMemo(() => {\n    if (!displayedFolders || !displayedFolders.length) {\n      return undefined;\n    }\n\n    return displayedFolders.map((folder, i) => {\n      const { id, title } = folder;\n      const isBlocked = id !== ALL_FOLDER_ID && i > maxFolders - 1;\n      const canShareFolder = selectCanShareFolder(getGlobal(), id);\n      const contextActions: MenuItemContextAction[] = [];\n\n      if (canShareFolder) {\n        contextActions.push({\n          title: lang('FilterShare'),\n          icon: 'link',\n          handler: () => {\n            const chatListCount = Object.values(chatFoldersById).reduce((acc, el) => acc + (el.isChatList ? 1 : 0), 0);\n            if (chatListCount >= maxChatLists && !folder.isChatList) {\n              openLimitReachedModal({\n                limit: 'chatlistJoined',\n              });\n              return;\n            }\n\n            // Greater amount can be after premium downgrade\n            if (folderInvitesById[id]?.length >= maxFolderInvites) {\n              openLimitReachedModal({\n                limit: 'chatlistInvites',\n              });\n              return;\n            }\n\n            openShareChatFolderModal({\n              folderId: id,\n            });\n          },\n        });\n      }\n\n      if (id !== ALL_FOLDER_ID) {\n        contextActions.push({\n          title: lang('FilterEdit'),\n          icon: 'edit',\n          handler: () => {\n            openEditChatFolder({ folderId: id });\n          },\n        });\n\n        contextActions.push({\n          title: lang('FilterDelete'),\n          icon: 'delete',\n          destructive: true,\n          handler: () => {\n            openDeleteChatFolderModal({ folderId: id });\n          },\n        });\n      }\n\n      const unicodeEmoji = typeof customEmojiIcons[id] === 'string' ? customEmojiIcons[id] : undefined;\n      if (unicodeEmoji) {\n        folder.emoticon = unicodeEmoji as string;\n      }\n\n      const iconStyle: IconName | undefined = getIconNameByFolder(folder);\n      const iconStyleOrDefault: string = `${iconStyle ? `icon icon-${iconStyle}` : 'icon icon-folder-badge'}`;\n\n      const tabText = renderTextWithEntities({\n        text: title.text,\n        entities: title.entities,\n        noCustomEmojiPlayback: folder.noTitleAnimations,\n      });\n\n      const customEmoji = typeof customEmojiIcons[id] !== 'string' ? customEmojiIcons[id]\n        : undefined;\n\n      return {\n        shouldUseTextColor: (customEmoji as ApiSticker | undefined)?.shouldUseTextColor ?? false,\n        id,\n        icon: (\n          <> {!isMobile && foldersVertical && (\n\n            customEmoji ? (\n              <div className=\"emoji-wrapper\">\n                <StickerView\n                  containerRef={ref}\n                  sticker={customEmoji as ApiSticker}\n                  size={30}\n                  shouldLoop\n                  widthLoadingCircle\n                  shouldPreloadPreview\n                  noLoad={!true}\n                  noPlay={!canAnimate}\n                  noVideoOnMobile\n                  withTranslucentThumb={false}\n                />\n              </div>\n            ) : (\n              (iconStyle || !folder.emoticon) ? (\n                <i className={iconStyleOrDefault} />\n              ) : (\n                <i className=\"icon as-emoji\">{folder.emoticon}</i>\n              )\n            )\n          )}\n          </>),\n        title: (\n          <div className=\"tab-name\">{tabText}</div>\n        ),\n        badgeCount: folderCountersById[id]?.chatsCount,\n        isBadgeActive: Boolean(folderCountersById[id]?.notificationsCount),\n        isBlocked,\n        contextActions: contextActions?.length ? contextActions : undefined,\n      } satisfies TabWithProperties;\n    });\n  }, [\n    displayedFolders, maxFolders, folderCountersById, lang, chatFoldersById, maxChatLists, folderInvitesById,\n    maxFolderInvites, customEmojiIcons, canAnimate, isMobile, ref, foldersVertical,\n  ]);\n\n  const handleSwitchTab = useLastCallback((index: number) => {\n    setActiveChatFolder({ activeChatFolder: index }, { forceOnHeavyAnimation: true });\n  });\n\n  // Prevent `activeTab` pointing at non-existing folder after update\n  useEffect(() => {\n    if (!folderTabs?.length) {\n      return;\n    }\n\n    if (activeChatFolder >= folderTabs.length) {\n      setActiveChatFolder({ activeChatFolder: FIRST_FOLDER_INDEX });\n    }\n  }, [activeChatFolder, folderTabs, setActiveChatFolder]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV || !folderTabs?.length || isForumPanelOpen) {\n      return undefined;\n    }\n\n    return captureEvents(transitionRef.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: ((e, direction) => {\n        if (direction === SwipeDirection.Left) {\n          setActiveChatFolder(\n            { activeChatFolder: Math.min(activeChatFolder + 1, folderTabs.length - 1) },\n            { forceOnHeavyAnimation: true },\n          );\n          return true;\n        } else if (direction === SwipeDirection.Right) {\n          setActiveChatFolder({ activeChatFolder: Math.max(0, activeChatFolder - 1) }, { forceOnHeavyAnimation: true });\n          return true;\n        }\n\n        return false;\n      }),\n    });\n  }, [activeChatFolder, folderTabs, isForumPanelOpen, setActiveChatFolder]);\n\n  const isNotInFirstFolderRef = useRef();\n  isNotInFirstFolderRef.current = !isInFirstFolder;\n  useEffect(() => (isNotInFirstFolderRef.current ? captureEscKeyListener(() => {\n    if (isNotInFirstFolderRef.current) {\n      setActiveChatFolder({ activeChatFolder: FIRST_FOLDER_INDEX });\n    }\n  }) : undefined), [activeChatFolder, setActiveChatFolder]);\n\n  useHistoryBack({\n    isActive: !isInFirstFolder,\n    onBack: () => setActiveChatFolder({ activeChatFolder: FIRST_FOLDER_INDEX }, { forceOnHeavyAnimation: true }),\n  });\n\n  useEffect(() => {\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (e.ctrlKey && e.shiftKey && e.code.startsWith('Digit') && folderTabs) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit) return;\n\n        if (digit === SAVED_MESSAGES_HOTKEY) {\n          openChat({ id: currentUserId, shouldReplaceHistory: true });\n          return;\n        }\n\n        const folder = Number(digit) - 1;\n        if (folder > folderTabs.length - 1) return;\n\n        setActiveChatFolder({ activeChatFolder: folder }, { forceOnHeavyAnimation: true });\n        e.preventDefault();\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown, true);\n    };\n  }, [currentUserId, folderTabs, openChat, setActiveChatFolder]);\n\n  const {\n    ref: placeholderRef,\n    shouldRender: shouldRenderPlaceholder,\n  } = useShowTransition({\n    isOpen: !orderedFolderIds,\n    noMountTransition: true,\n    withShouldRender: true,\n  });\n\n  function renderCurrentTab(isActive: boolean) {\n    const activeFolder = Object.values(chatFoldersById)\n      .find(({ id }) => id === folderTabs![activeChatFolder].id);\n    const isFolder = activeFolder && !isInAllChatsFolder;\n\n    return (\n      <ChatList\n        folderType={isFolder ? 'folder' : 'all'}\n        folderId={isFolder ? activeFolder.id : undefined}\n        isActive={isActive}\n        isForumPanelOpen={isForumPanelOpen}\n        foldersDispatch={foldersDispatch}\n        onSettingsScreenSelect={onSettingsScreenSelect}\n        onLeftColumnContentChange={onLeftColumnContentChange}\n        canDisplayArchive={(hasArchivedChats || hasArchivedStories) && !archiveSettings.isHidden}\n        archiveSettings={archiveSettings}\n        sessions={sessions}\n      />\n    );\n  }\n\n  const shouldRenderFolders = folderTabs && folderTabs.length > 1;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'ChatFolders',\n        shouldRenderFolders && shouldHideFolderTabs && 'ChatFolders--tabs-hidden',\n        shouldRenderStoryRibbon && 'with-story-ribbon',\n        !shouldRenderFolders && 'no-folders',\n        foldersVertical && 'folders-vertical',\n      )}\n    >\n      {shouldRenderStoryRibbon && <StoryRibbon isClosing={isStoryRibbonClosing} />}\n      {shouldRenderFolders ? (\n        <TabList\n          contextRootElementSelector=\"#LeftColumn\"\n          tabs={folderTabs}\n          activeTab={activeChatFolder}\n          onSwitchTab={handleSwitchTab}\n          className={buildClassName()}\n        />\n      ) : shouldRenderPlaceholder ? (\n        <div ref={placeholderRef} className=\"tabs-placeholder\" />\n      ) : undefined}\n      <Transition\n        ref={transitionRef}\n        name={shouldSkipHistoryAnimations ? 'none' : lang.isRtl ? 'slideOptimizedRtl' : 'slideOptimized'}\n        activeKey={activeChatFolder}\n        renderCount={shouldRenderFolders ? folderTabs.length : undefined}\n      >\n        {(isActive: boolean) => {\n          return (\n            <>\n              {renderCurrentTab(isActive)}\n            </>\n          );\n        }}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const customEmojisById = global.customEmojis.byId;\n\n    // we get custom emojis saved in locstor and add them to the global\n    // to make sure it won't get stuck eternally loading the said emoji\n    // on the main screen\n    const customEmojiIcons:CustomEmojiIconsFolder = getLocalStorageFolderIcons();\n\n    for (const iconsByFolder of Object.values(customEmojiIcons)) {\n      // this cuts off unicode emojis\n      if (typeof iconsByFolder !== 'string') {\n        // saving emojis to global\n        global.customEmojis.byId[iconsByFolder.id] = iconsByFolder;\n        customEmojisById[iconsByFolder.id] = iconsByFolder;\n      }\n    }\n    setGlobal(global);\n\n    const {\n      chatFolders: {\n        byId: chatFoldersById,\n        orderedIds: orderedFolderIds,\n        invites: folderInvitesById,\n      },\n      chats: {\n        listIds: {\n          archived,\n        },\n      },\n      stories: {\n        orderedPeerIds: {\n          archived: archivedStories,\n        },\n      },\n      activeSessions: {\n        byHash: sessions,\n      },\n      currentUserId,\n      archiveSettings,\n    } = global;\n    const { shouldSkipHistoryAnimations, activeChatFolder } = selectTabState(global);\n    const { storyViewer: { isRibbonShown: isStoryRibbonShown } } = selectTabState(global);\n    const canAnimate = selectCanAnimateInterface(global);\n\n    const foldersView = global.settings.byKey.foldersView;\n\n    return {\n      foldersVertical: foldersView === 'side',\n      canAnimate,\n      customEmojisById,\n      customEmojiIcons,\n      chatFoldersById,\n      folderInvitesById,\n      orderedFolderIds,\n      activeChatFolder,\n      currentUserId,\n      shouldSkipHistoryAnimations,\n      hasArchivedChats: Boolean(archived?.length),\n      hasArchivedStories: Boolean(archivedStories?.length),\n      maxFolders: selectCurrentLimit(global, 'dialogFilters'),\n      maxFolderInvites: selectCurrentLimit(global, 'chatlistInvites'),\n      maxChatLists: selectCurrentLimit(global, 'chatlistJoined'),\n      archiveSettings,\n      isStoryRibbonShown,\n      sessions,\n    };\n  },\n)(ChatFolders));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sG8AAzvK\",\"minimized\":\"lTOui0dp\",\"button\":\"bNkLqJf1\",\"title\":\"rMTpNazX\",\"unread-count\":\"O7esHjyC\",\"unreadCount\":\"O7esHjyC\",\"info\":\"OS2LWzdu\",\"name\":\"bkCtPuPQ\",\"icon\":\"f4LUPgr4\",\"avatarWrapper\":\"RMY__Znz\",\"avatar\":\"qeb0Aox1\",\"chatsPreview\":\"_1817Hwgd\",\"unread\":\"SS39xuL3\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type { CustomPeer } from '../../../types';\n\nimport { ARCHIVED_FOLDER_ID } from '../../../config';\nimport { getChatTitle } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport { useFolderManagerForOrderedIds, useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Badge from '../../ui/Badge';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\nimport styles from './Archive.module.scss';\n\ntype OwnProps = {\n  archiveSettings: GlobalState['archiveSettings'];\n  onDragEnter?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PREVIEW_SLICE = 5;\nconst ARCHIVE_CUSTOM_PEER: CustomPeer = {\n  isCustomPeer: true,\n  title: 'Archived Chats',\n  avatarIcon: 'archive-filled',\n  customPeerAvatarColor: '#9EAAB5',\n};\n\nconst Archive: FC<OwnProps> = ({\n  archiveSettings,\n  onDragEnter,\n  onClick,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useOldLang();\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const unreadCounters = useFolderManagerForUnreadCounters();\n  const archiveUnreadCount = unreadCounters[ARCHIVED_FOLDER_ID]?.chatsCount;\n\n  const previewItems = useMemo(() => {\n    if (!orderedChatIds?.length) return lang('Loading');\n\n    const chatsById = getGlobal().chats.byId;\n\n    return orderedChatIds.slice(0, PREVIEW_SLICE).map((chatId, i, arr) => {\n      const isLast = i === arr.length - 1;\n      const chat = chatsById[chatId];\n      if (!chat) {\n        return undefined;\n      }\n\n      const title = getChatTitle(lang, chat);\n\n      return (\n        <>\n          <span className={buildClassName(styles.chat, archiveUnreadCount && chat.unreadCount && styles.unread)}>\n            {renderText(title)}\n          </span>\n          {isLast ? '' : ', '}\n        </>\n      );\n    });\n  }, [orderedChatIds, lang, archiveUnreadCount]);\n\n  const contextActions = useMemo(() => {\n    const actionMinimize = !archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_collapse'),\n      icon: 'collapse',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionExpand = archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_expand'),\n      icon: 'expand',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: false });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionHide = {\n      title: lang('lng_context_archive_to_menu'),\n      icon: 'archive-to-main',\n      handler: () => {\n        updateArchiveSettings({ isHidden: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    return compact([actionMinimize, actionExpand, actionHide]);\n  }, [archiveSettings.isMinimized, lang, updateArchiveSettings]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.();\n  }, [onDragEnter]);\n\n  function renderCollapsed() {\n    return (\n      <div className={buildClassName(styles.info, 'info')}>\n        <div className=\"info-row\">\n          <div className={buildClassName('title', styles.title)}>\n            <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>\n              <Icon name=\"archive-filled\" className={styles.icon} />\n              {lang('ArchivedChats')}\n            </h3>\n          </div>\n          <Badge\n            className={styles.unreadCount}\n            text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderRegular() {\n    return (\n      <>\n        <div className={buildClassName('status', styles.avatarWrapper)}>\n          <Avatar peer={ARCHIVE_CUSTOM_PEER} />\n        </div>\n        <div className={buildClassName(styles.info, 'info')}>\n          <div className=\"info-row\">\n            <div className={buildClassName('title', styles.title)}>\n              <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>{lang('ArchivedChats')}</h3>\n            </div>\n          </div>\n          <div className=\"subtitle\">\n            <div className={buildClassName('status', styles.chatsPreview)}>\n              {previewItems}\n            </div>\n            <Badge\n              className={styles.unreadCount}\n              text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <ListItem\n      onClick={onClick}\n      onDragEnter={handleDragEnter}\n      className={buildClassName(\n        styles.root,\n        archiveSettings.isMinimized && styles.minimized,\n        'chat-item-clickable',\n        'chat-item-archive',\n      )}\n      buttonClassName={styles.button}\n      contextActions={contextActions}\n      withPortalForMenu\n    >\n      {archiveSettings.isMinimized ? renderCollapsed() : renderRegular()}\n    </ListItem>\n  );\n};\n\nexport default memo(Archive);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"yftKUVDQ\",\"sticker\":\"UCBfMOiz\",\"title\":\"dB9cHelg\",\"description\":\"TJ_liZcJ\",\"is-ios\":\"z51XfrFn\",\"isIos\":\"z51XfrFn\",\"is-macos\":\"tiLqJXxs\",\"isMacos\":\"tiLqJXxs\",\"button-text\":\"aL7e0w4t\",\"buttonText\":\"aL7e0w4t\",\"centered\":\"NefQ8HbN\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyFolder.module.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst ICON_SIZE = 96;\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch, onSettingsScreenSelect,\n}) => {\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch({ type: 'editFolder', payload: chatFolder });\n    onSettingsScreenSelect(SettingsScreens.FoldersEditFolderFromChatList);\n  }, [chatFolder, foldersDispatch, onSettingsScreenSelect]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className={styles.description} dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <Icon name=\"settings\" />\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyChatListEditFilter')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): StateProps => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","// extracted by mini-css-extract-plugin\nexport default {\"minimized\":\"lTOui0dp\",\"root\":\"yEkGgZVL\",\"title\":\"VhAJDrnz\",\"info\":\"WmyL1NJ8\",\"buttons\":\"_40UGD1Y\",\"button\":\"pedMJD_v\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Button from '../../ui/Button';\n\nimport styles from './UnconfirmedSession.module.scss';\n\ntype OwnProps = {\n  sessions: Record<string, ApiSession>;\n  onHeightChange: (height: number) => void;\n};\n\nconst UnconfirmedSession = ({ sessions, onHeightChange } : OwnProps) => {\n  const { changeSessionSettings, terminateAuthorization, showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  useResizeObserver(ref, (entry) => {\n    const height = entry.borderBoxSize?.[0]?.blockSize || entry.contentRect.height;\n    onHeightChange(height);\n  });\n\n  const firstUnconfirmed = useMemo(() => {\n    return Object.values(sessions).sort((a, b) => b.dateCreated - a.dateCreated)\n      .find((session) => session.isUnconfirmed)!;\n  }, [sessions]);\n\n  const locationString = useMemo(() => {\n    return [firstUnconfirmed.deviceModel, firstUnconfirmed.region, firstUnconfirmed.country].filter(Boolean).join(', ');\n  }, [firstUnconfirmed]);\n\n  const handleAccept = useLastCallback(() => {\n    changeSessionSettings({\n      hash: firstUnconfirmed.hash,\n      isConfirmed: true,\n    });\n  });\n\n  const handleReject = useLastCallback(() => {\n    terminateAuthorization({ hash: firstUnconfirmed.hash });\n    showNotification({\n      title: lang('UnconfirmedAuthDeniedTitle', 1),\n      message: lang('UnconfirmedAuthDeniedMessageSingle', locationString),\n    });\n  });\n\n  return (\n    <div className={styles.root} ref={ref}>\n      <h2 className={styles.title}>{lang('UnconfirmedAuthTitle')}</h2>\n      <p className={styles.info}>\n        {lang('UnconfirmedAuthSingle', locationString)}\n      </p>\n      <div className={styles.buttons}>\n        <Button fluid isText size=\"smaller\" className={styles.button} onClick={handleAccept}>\n          {lang('UnconfirmedAuthConfirm')}\n        </Button>\n        <Button fluid isText size=\"smaller\" color=\"danger\" onClick={handleReject} className={styles.button}>\n          {lang('UnconfirmedAuthDeny')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(UnconfirmedSession);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport type { SettingsScreens } from '../../../types';\nimport { LeftColumnContent } from '../../../types';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVE_MINIMIZED_HEIGHT,\n  ARCHIVED_FOLDER_ID,\n  CHAT_HEIGHT_PX,\n  CHAT_LIST_SLICE,\n  FRESH_AUTH_PERIOD,\n  SAVED_FOLDER_ID,\n} from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderKey, getPinnedChatsCount } from '../../../util/folderManager';\nimport { getServerTime } from '../../../util/serverTime';\nimport { IS_APP, IS_MAC_OS } from '../../../util/windowEnvironment';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useTopOverscroll from '../../../hooks/scroll/useTopOverscroll';\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Archive from './Archive';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\nimport UnconfirmedSession from './UnconfirmedSession';\n\ntype OwnProps = {\n  className?: string;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  canDisplayArchive?: boolean;\n  archiveSettings?: GlobalState['archiveSettings'];\n  isForumPanelOpen?: boolean;\n  sessions?: Record<string, ApiSession>;\n  foldersDispatch?: FolderEditDispatch;\n  onSettingsScreenSelect?: (screen: SettingsScreens) => void;\n  onLeftColumnContentChange?: (content: LeftColumnContent) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\nconst DRAG_ENTER_DEBOUNCE = 500;\nconst RESERVED_HOTKEYS = new Set(['9', '0']);\n\nconst ChatList: FC<OwnProps> = ({\n  className,\n  folderType,\n  folderId,\n  isActive,\n  isForumPanelOpen,\n  canDisplayArchive,\n  archiveSettings,\n  sessions,\n  foldersDispatch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n}) => {\n  const {\n    openChat,\n    openNextChat,\n    closeForumPanel,\n    toggleStoryRibbon,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const shouldIgnoreDragRef = useRef(false);\n  const [unconfirmedSessionHeight, setUnconfirmedSessionHeight] = useState(0);\n\n  const isArchived = folderType === 'archived';\n  const isAllFolder = folderType === 'all';\n  const isSaved = folderType === 'saved';\n  const resolvedFolderId = (\n    isAllFolder ? ALL_FOLDER_ID : isArchived ? ARCHIVED_FOLDER_ID : isSaved ? SAVED_FOLDER_ID : folderId!\n  );\n\n  const shouldDisplayArchive = isAllFolder && canDisplayArchive && archiveSettings;\n\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId);\n  usePeerStoriesPolling(orderedIds);\n\n  const chatsHeight = (orderedIds?.length || 0) * CHAT_HEIGHT_PX;\n  const archiveHeight = shouldDisplayArchive\n    ? archiveSettings?.isMinimized ? ARCHIVE_MINIMIZED_HEIGHT : CHAT_HEIGHT_PX : 0;\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, orderedIds, undefined, CHAT_LIST_SLICE);\n\n  const shouldShowUnconfirmedSessions = useMemo(() => {\n    const sessionsArray = Object.values(sessions || {});\n    const current = sessionsArray.find((session) => session.isCurrent);\n    if (!current || getServerTime() - current.dateCreated < FRESH_AUTH_PERIOD) return false;\n\n    return isAllFolder && sessionsArray.some((session) => session.isUnconfirmed);\n  }, [isAllFolder, sessions]);\n\n  useEffect(() => {\n    if (!shouldShowUnconfirmedSessions) setUnconfirmedSessionHeight(0);\n  }, [shouldShowUnconfirmedSessions]);\n\n  // Support <Alt>+<Up/Down> to navigate between chats\n  useHotkeys(useMemo(() => (isActive && orderedIds?.length ? {\n    'Alt+ArrowUp': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds });\n    },\n    'Alt+ArrowDown': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds });\n    },\n  } : undefined), [isActive, orderedIds]));\n\n  // Support <Cmd>+<Digit> to navigate between chats\n  useEffect(() => {\n    if (!isActive || isSaved || !orderedIds || !IS_APP) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit || RESERVED_HOTKEYS.has(digit)) return;\n\n        const isArchiveInList = shouldDisplayArchive && archiveSettings && !archiveSettings.isMinimized;\n\n        const shift = isArchiveInList ? -1 : 0;\n        const position = Number(digit) + shift - 1;\n\n        if (isArchiveInList && position === -1) {\n          onLeftColumnContentChange?.(LeftColumnContent.Archived);\n          return;\n        }\n\n        if (position > orderedIds!.length - 1) return;\n\n        openChat({ id: orderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [\n    archiveSettings, isSaved, isActive, onLeftColumnContentChange, openChat, openNextChat, orderedIds,\n    shouldDisplayArchive,\n  ]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleArchivedClick = useLastCallback(() => {\n    onLeftColumnContentChange!(LeftColumnContent.Archived);\n    closeForumPanel();\n  });\n\n  const handleArchivedDragEnter = useLastCallback(() => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    handleArchivedClick();\n  });\n\n  const handleDragEnter = useDebouncedCallback((chatId: string) => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    openChat({ id: chatId, shouldReplaceHistory: true });\n  }, [openChat], DRAG_ENTER_DEBOUNCE, true);\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (x < rect.width || y < rect.y) return;\n    shouldIgnoreDragRef.current = true;\n  });\n\n  const handleShowStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: true, isArchived });\n  });\n\n  const handleHideStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: false, isArchived });\n  });\n\n  const renderedOverflowTrigger = useTopOverscroll(containerRef, handleShowStoryRibbon, handleHideStoryRibbon, isSaved);\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n\n    return viewportIds!.map((id, i) => {\n      const isPinned = viewportOffset + i < pinnedCount;\n      const offsetTop = unconfirmedSessionHeight + archiveHeight + (viewportOffset + i) * CHAT_HEIGHT_PX;\n\n      return (\n        <Chat\n          key={id}\n          teactOrderKey={isPinned ? i : getOrderKey(id, isSaved)}\n          chatId={id}\n          isPinned={isPinned}\n          folderId={folderId}\n          isSavedDialog={isSaved}\n          animationType={getAnimationType(id)}\n          orderDiff={orderDiffById[id]}\n          offsetTop={offsetTop}\n          observeIntersection={observe}\n          onDragEnter={handleDragEnter}\n        />\n      );\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      className={buildClassName('chat-list custom-scroll', isForumPanelOpen && 'forum-panel-open', className)}\n      ref={containerRef}\n      items={viewportIds}\n      itemSelector=\".ListItem:not(.chat-item-archive)\"\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      beforeChildren={renderedOverflowTrigger}\n      maxHeight={chatsHeight + archiveHeight + unconfirmedSessionHeight}\n      onLoadMore={getMore}\n      onDragLeave={handleDragLeave}\n    >\n      {shouldShowUnconfirmedSessions && (\n        <UnconfirmedSession\n          key=\"unconfirmed\"\n          sessions={sessions!}\n          onHeightChange={setUnconfirmedSessionHeight}\n        />\n      )}\n      {shouldDisplayArchive && (\n        <Archive\n          key=\"archive\"\n          archiveSettings={archiveSettings}\n          onClick={handleArchivedClick}\n          onDragEnter={handleArchivedDragEnter}\n        />\n      )}\n      {viewportIds?.length ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length && !isSaved ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch!}\n            onSettingsScreenSelect={onSettingsScreenSelect!}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(ChatList);\n","import React, { useEffect, useRef } from '../../lib/teact/teact';\n\nimport { forceMutation, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { stopScrollInertia } from '../../util/resetScroll';\nimport { IS_IOS, IS_SAFARI } from '../../util/windowEnvironment';\nimport useDebouncedCallback from '../useDebouncedCallback';\nimport useLastCallback from '../useLastCallback';\n\nconst MOUSE_WHEEL_DEBOUNCE = 250;\nconst TRIGGER_HEIGHT = 1;\nconst INERTIA_THRESHOLD = 100;\n\nexport default function useTopOverscroll(\n  containerRef: React.RefObject<HTMLDivElement>,\n  onOverscroll?: AnyToVoidFunction,\n  onReset?: AnyToVoidFunction,\n  isDisabled?: boolean,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const overscrollTriggerRef = useRef<HTMLDivElement>(null);\n\n  const isTriggerJustEnabled = useRef(false);\n  const lastScrollTopRef = useRef(0);\n  const isTriggerEnabledRef = useRef(false);\n  const lastIsOnTopRef = useRef(true);\n  const lastScrollAtRef = useRef(0);\n  const isReturningOverscrollRef = useRef(false);\n\n  const enableOverscrollTrigger = useLastCallback((noScrollInertiaStop = false) => {\n    if (isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current || !containerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'block';\n    containerRef.current.scrollTop = TRIGGER_HEIGHT;\n\n    if (!IS_SAFARI && !noScrollInertiaStop) {\n      stopScrollInertia(containerRef.current);\n    }\n\n    isTriggerJustEnabled.current = true;\n    lastScrollTopRef.current = TRIGGER_HEIGHT;\n    isTriggerEnabledRef.current = true;\n    lastIsOnTopRef.current = true;\n  });\n\n  const disableOverscrollTrigger = useLastCallback(() => {\n    if (!isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'none';\n\n    isTriggerEnabledRef.current = false;\n  });\n\n  const handleScroll = useLastCallback(() => {\n    if (!containerRef.current) return;\n\n    if (isTriggerJustEnabled.current) {\n      isTriggerJustEnabled.current = false;\n\n      return;\n    }\n\n    const newScrollTop = containerRef.current.scrollTop;\n    const isMovingDown = newScrollTop > lastScrollTopRef.current;\n    const isMovingUp = newScrollTop < lastScrollTopRef.current;\n    const isOnTop = newScrollTop === 0;\n    const lastEventDelay = Date.now() - lastScrollAtRef.current;\n\n    if (overscrollTriggerRef.current) {\n      if (isOnTop && !isTriggerEnabledRef.current) {\n        forceMutation(enableOverscrollTrigger, [containerRef.current, overscrollTriggerRef.current]);\n        return;\n      }\n\n      forceMutation(disableOverscrollTrigger, overscrollTriggerRef.current);\n    }\n\n    if (\n      isMovingUp && (\n        (lastIsOnTopRef.current && lastEventDelay > INERTIA_THRESHOLD)\n        || (newScrollTop < 0 && isReturningOverscrollRef.current) // Overscroll repeated by the user\n      )) {\n      onOverscroll?.();\n    } else if (isMovingDown && newScrollTop > 0) {\n      onReset?.();\n    }\n\n    lastScrollTopRef.current = newScrollTop;\n    lastIsOnTopRef.current = isOnTop;\n    lastScrollAtRef.current = Date.now();\n    isReturningOverscrollRef.current = isMovingDown && newScrollTop < 0;\n  });\n\n  // Handle non-scrollable container\n  const handleWheel = useDebouncedCallback((event: WheelEvent) => {\n    if (!containerRef.current) return;\n    const container = containerRef.current;\n\n    const isScrollable = container.scrollHeight > container.offsetHeight;\n    if (isScrollable || event.deltaY === 0) return;\n\n    if (event.deltaY < 0) {\n      onOverscroll?.();\n    } else {\n      onReset?.();\n    }\n  }, [containerRef, onOverscroll, onReset], MOUSE_WHEEL_DEBOUNCE);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return undefined;\n\n    if (container.scrollTop === 0) {\n      requestMutation(() => {\n        enableOverscrollTrigger(true);\n      });\n    }\n\n    container.addEventListener('scroll', handleScroll, { passive: true });\n    container.addEventListener('wheel', handleWheel, { passive: true });\n\n    return () => {\n      container.removeEventListener('scroll', handleScroll);\n      container.removeEventListener('wheel', handleWheel);\n    };\n  }, [containerRef, handleWheel]);\n\n  return !IS_IOS && !isDisabled ? (\n    <div ref={overscrollTriggerRef} className=\"overscroll-trigger\" key=\"overscroll-trigger\" />\n  ) : undefined;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ky16H_sV\",\"button-text\":\"W01t9CIf\",\"buttonText\":\"W01t9CIf\",\"sticker\":\"c8lE3XW5\",\"title\":\"wlwD1B1Q\",\"description\":\"V8OCFHmp\",\"is-ios\":\"IxW_z_r0\",\"isIos\":\"IxW_z_r0\",\"is-macos\":\"OFxKGCEJ\",\"isMacos\":\"OFxKGCEJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { getHasAdminRight } from '../../../global/helpers';\nimport { selectAnimatedEmoji, selectChat } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyForum.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  animatedEmoji?: ApiSticker;\n  canManageTopics?: boolean;\n};\n\nconst ICON_SIZE = 7 * REM;\n\nconst EmptyForum: FC<OwnProps & StateProps> = ({\n  chatId, animatedEmoji, canManageTopics,\n}) => {\n  const { openCreateTopicPanel } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleCreateTopic = useCallback(() => {\n    openCreateTopicPanel({ chatId });\n  }, [chatId, openCreateTopicPanel]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('ChatList.EmptyTopicsTitle')}</h3>\n      <p className={buildClassName(styles.description, styles.centered)} dir=\"auto\">\n        {lang('ChatList.EmptyTopicsDescription')}\n      </p>\n      {canManageTopics && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          onClick={handleCreateTopic}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyTopicsCreate')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId }): StateProps => {\n  const chat = selectChat(global, chatId);\n  const canManageTopics = chat && (chat.isCreator || getHasAdminRight(chat, 'manageTopics'));\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '🐣'),\n    canManageTopics,\n  };\n})(EmptyForum));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Fn34Vu_9\",\"closed-icon\":\"MB7Gomjn\",\"closedIcon\":\"MB7Gomjn\",\"topic-icon\":\"oXJl4tra\",\"topicIcon\":\"oXJl4tra\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiDraft, ApiMessage, ApiMessageOutgoingStatus,\n  ApiPeer, ApiTopic, ApiTypeStory, ApiTypingStatus,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { getMessageAction, groupStatetefulContent } from '../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectCanAnimateInterface,\n  selectCanDeleteTopic,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectOutgoingStatus,\n  selectPeerStory,\n  selectSender,\n  selectThreadInfo,\n  selectThreadParam,\n  selectTopics,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport useTopicContextActions from './hooks/useTopicContextActions';\n\nimport Icon from '../../common/icons/Icon';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport TopicIcon from '../../common/TopicIcon';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\n\nimport styles from './Topic.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  topic: ApiTopic;\n  isSelected: boolean;\n  style: string;\n  observeIntersection?: ObserveFn;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  canDelete?: boolean;\n  lastMessage?: ApiMessage;\n  lastMessageStory?: ApiTypeStory;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  canScrollDown?: boolean;\n  wasTopicOpened?: boolean;\n  withInterfaceAnimations?: boolean;\n  topics?: Record<number, ApiTopic>;\n};\n\nconst Topic: FC<OwnProps & StateProps> = ({\n  topic,\n  isSelected,\n  chatId,\n  chat,\n  style,\n  lastMessage,\n  lastMessageStory,\n  canScrollDown,\n  lastMessageOutgoingStatus,\n  observeIntersection,\n  canDelete,\n  actionTargetMessage,\n  actionTargetUserIds,\n  actionTargetChatId,\n  lastMessageSender,\n  animationType,\n  withInterfaceAnimations,\n  orderDiff,\n  typingStatus,\n  draft,\n  wasTopicOpened,\n  topics,\n}) => {\n  const {\n    openThread,\n    deleteTopic,\n    focusLastMessage,\n    setViewForumAsMessages,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const {\n    isPinned, isClosed,\n  } = topic;\n  const isMuted = topic.isMuted || (topic.isMuted === undefined && chat.isMuted);\n\n  const handleOpenDeleteModal = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    deleteTopic({ chatId: chat.id, topicId: topic.id });\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageSender,\n    lastMessageTopic: topic,\n    observeIntersection,\n    isTopic: true,\n    typingStatus,\n    topics,\n    statefulMediaContent: groupStatetefulContent({ story: lastMessageStory }),\n\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const handleOpenTopic = useLastCallback(() => {\n    openThread({ chatId, threadId: topic.id, shouldReplaceHistory: true });\n    setViewForumAsMessages({ chatId, isEnabled: false });\n\n    if (canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const contextActions = useTopicContextActions({\n    topic,\n    chat,\n    wasOpened: wasTopicOpened,\n    canDelete,\n    handleDelete: handleOpenDeleteModal,\n    handleMute,\n  });\n\n  return (\n    <ListItem\n      className={buildClassName(\n        styles.root,\n        'Chat',\n        isSelected && 'selected',\n        'chat-item-clickable',\n      )}\n      onClick={handleOpenTopic}\n      style={style}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', topic.id)}` : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      ref={ref}\n    >\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className={buildClassName('title')}>\n            <TopicIcon topic={topic} className={styles.topicIcon} observeIntersection={observeIntersection} />\n            <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          </div>\n          {topic.isMuted && <Icon name=\"muted\" />}\n          <div className=\"separator\" />\n          {isClosed && (\n            <Icon name=\"lock-badge\" className={styles.closedIcon} />\n          )}\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge\n            chat={chat}\n            isPinned={isPinned}\n            isMuted={isMuted}\n            topic={topic}\n            wasTopicOpened={wasTopicOpened}\n            topics={topics}\n          />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <ConfirmDialog\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          confirmIsDestructive\n          confirmHandler={handleDelete}\n          text={lang('lng_forum_topic_delete_sure')}\n          confirmLabel={lang('Delete')}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n          topicId={topic.id}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topic, isSelected }) => {\n    const chat = selectChat(global, chatId);\n\n    const lastMessage = selectChatMessage(global, chatId, topic.lastMessageId);\n    const { isOutgoing } = lastMessage || {};\n    const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n    const lastMessageSender = lastMessage && selectSender(global, lastMessage);\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chatId, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const typingStatus = selectThreadParam(global, chatId, topic.id, 'typingStatus');\n    const draft = selectDraft(global, chatId, topic.id);\n    const threadInfo = selectThreadInfo(global, chatId, topic.id);\n    const wasTopicOpened = Boolean(threadInfo?.lastReadInboxMessageId);\n    const topics = selectTopics(global, chatId);\n\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    const storyData = lastMessage?.content.storyData;\n    const lastMessageStory = storyData && selectPeerStory(global, storyData.peerId, storyData.id);\n\n    return {\n      chat,\n      lastMessage,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      lastMessageSender,\n      typingStatus,\n      canDelete: selectCanDeleteTopic(global, chatId, topic.id),\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      draft,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      canScrollDown: isSelected && chat?.id === currentChatId && currentThreadId === topic.id,\n      wasTopicOpened,\n      topics,\n      lastMessageStory,\n    };\n  },\n)(Topic));\n","import { useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../../api/types';\nimport type { MenuItemContextAction } from '../../../ui/ListItem';\n\nimport { getCanManageTopic, getHasAdminRight } from '../../../../global/helpers';\nimport { compact } from '../../../../util/iteratees';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nexport default function useTopicContextActions({\n  topic,\n  chat,\n  wasOpened,\n  canDelete,\n  handleDelete,\n  handleMute,\n}: {\n  topic: ApiTopic;\n  chat: ApiChat;\n  wasOpened?: boolean;\n  canDelete?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n}) {\n  const lang = useOldLang();\n\n  return useMemo(() => {\n    const {\n      isPinned, isMuted, isClosed, id: topicId,\n    } = topic;\n\n    const chatId = chat.id;\n\n    const {\n      editTopic,\n      toggleTopicPinned,\n      markTopicRead,\n      updateTopicMutedState,\n      openChatInNewTab,\n    } = getActions();\n\n    const canToggleClosed = getCanManageTopic(chat, topic);\n    const canTogglePinned = chat.isCreator || getHasAdminRight(chat, 'manageTopics');\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id, threadId: topicId });\n      },\n    };\n\n    const actionUnreadMark = topic.unreadCount || !wasOpened\n      ? {\n        title: lang('MarkAsRead'),\n        icon: 'readchats',\n        handler: () => {\n          markTopicRead({ chatId, topicId });\n        },\n      }\n      : undefined;\n\n    const actionPin = canTogglePinned ? (isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: false }),\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: true }),\n      }) : undefined;\n\n    const actionMute = ((chat.isMuted && isMuted !== false) || isMuted === true)\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateTopicMutedState({ chatId, topicId, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    const actionCloseTopic = canToggleClosed ? (isClosed\n      ? {\n        title: lang('lng_forum_topic_reopen'),\n        icon: 'reopen-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: false }),\n      }\n      : {\n        title: lang('lng_forum_topic_close'),\n        icon: 'close-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: true }),\n      }) : undefined;\n\n    const actionDelete = canDelete ? {\n      title: lang('lng_forum_topic_delete'),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    } : undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionPin,\n      actionUnreadMark,\n      actionMute,\n      actionCloseTopic,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [topic, chat, wasOpened, lang, canDelete, handleDelete, handleMute]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  beginHeavyAnimation,\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport type { TopicsInfo } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  GENERAL_TOPIC_ID, TOPIC_HEIGHT_PX, TOPIC_LIST_SENSITIVE_AREA, TOPICS_SLICE,\n} from '../../../config';\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getOrderedTopics } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectCurrentMessageList,\n  selectIsForumPanelOpen,\n  selectTabState,\n  selectTopicsInfo,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { waitForTransitionEnd } from '../../../util/cssAnimationEndListeners';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport GroupCallTopPane from '../../calls/group/GroupCallTopPane';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport Icon from '../../common/icons/Icon';\nimport HeaderActions from '../../middle/HeaderActions';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport EmptyForum from './EmptyForum';\nimport Topic from './Topic';\n\nimport styles from './ForumPanel.module.scss';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  isHidden?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n  onCloseAnimationEnd?: VoidFunction;\n  onOpenAnimationStart?: VoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  topicsInfo?: TopicsInfo;\n  currentTopicId?: number;\n  withInterfaceAnimations?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst ForumPanel: FC<OwnProps & StateProps> = ({\n  chat,\n  currentTopicId,\n  isOpen,\n  isHidden,\n  topicsInfo,\n  onTopicSearch,\n  onCloseAnimationEnd,\n  onOpenAnimationStart,\n  withInterfaceAnimations,\n}) => {\n  const {\n    closeForumPanel, openChatWithInfo, loadTopics,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollTopHandlerRef = useRef<HTMLDivElement>(null);\n  const { isMobile } = useAppLayout();\n  const chatId = chat?.id;\n\n  useEffect(() => {\n    if (chatId && !topicsInfo) {\n      loadTopics({ chatId });\n    }\n  }, [topicsInfo, chatId]);\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  const lang = useOldLang();\n\n  const handleClose = useLastCallback(() => {\n    closeForumPanel();\n  });\n\n  useEffect(() => {\n    if (!withInterfaceAnimations && !isOpen) {\n      onCloseAnimationEnd?.();\n    }\n  }, [withInterfaceAnimations, isOpen, onCloseAnimationEnd]);\n\n  const handleToggleChatInfo = useLastCallback(() => {\n    if (!chat) return;\n    openChatWithInfo({ id: chat.id, shouldReplaceHistory: true });\n  });\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useOnIntersect(scrollTopHandlerRef, observe, ({ isIntersecting }) => {\n    setIsScrolled(!isIntersecting);\n  });\n\n  const orderedIds = useMemo(() => {\n    return topicsInfo\n      ? getOrderedTopics(\n        Object.values(topicsInfo.topicsById),\n        topicsInfo.orderedPinnedTopicIds,\n      ).map(({ id }) => id)\n      : [];\n  }, [topicsInfo]);\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds, chat?.id);\n\n  const [viewportIds, getMore] = useInfiniteScroll(() => {\n    if (!chat) return;\n    loadTopics({ chatId: chat.id });\n  }, orderedIds, !topicsInfo?.totalCount || orderedIds.length >= topicsInfo.totalCount, TOPICS_SLICE);\n\n  const shouldRenderRef = useRef(false);\n  const isVisible = isOpen && !isHidden;\n  const prevIsVisible = usePreviousDeprecated(isVisible);\n\n  if (prevIsVisible !== isVisible) {\n    shouldRenderRef.current = false;\n  }\n\n  useHistoryBack({\n    isActive: isVisible,\n    onBack: handleClose,\n  });\n\n  useEffect(() => (isVisible ? captureEscKeyListener(handleClose) : undefined), [handleClose, isVisible]);\n\n  useEffect(() => {\n    if (prevIsVisible !== isVisible) {\n      // For performance reasons, we delay animation of the topic list panel to the next animation frame\n      requestNextMutation(() => {\n        if (!ref.current) return;\n\n        const endHeavyAnimation = beginHeavyAnimation();\n        waitForTransitionEnd(ref.current, endHeavyAnimation);\n\n        onOpenAnimationStart?.();\n\n        if (isVisible) {\n          shouldRenderRef.current = true;\n          ref.current!.style.transform = 'none';\n        } else {\n          shouldRenderRef.current = false;\n          ref.current!.style.transform = '';\n        }\n      });\n    }\n  }, [isVisible, onOpenAnimationStart, prevIsVisible]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureEvents(ref.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: ((e, direction) => {\n        const closeDirection = lang.isRtl ? SwipeDirection.Left : SwipeDirection.Right;\n\n        if (direction === closeDirection) {\n          closeForumPanel();\n          return true;\n        }\n\n        return false;\n      }),\n    });\n  }, [closeForumPanel, lang.isRtl]);\n\n  function renderTopics() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    return viewportIds?.map((id, i) => (\n      <Topic\n        key={id}\n        chatId={chat!.id}\n        topic={topicsInfo!.topicsById[id]}\n        style={`top: ${(viewportOffset + i) * TOPIC_HEIGHT_PX}px;`}\n        isSelected={currentTopicId === id}\n        observeIntersection={observe}\n        animationType={getAnimationType(id)}\n        orderDiff={orderDiffById[id]}\n      />\n    ));\n  }\n\n  const isLoading = topicsInfo === undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n        isScrolled && styles.scrolled,\n        lang.isRtl && styles.rtl,\n        !withInterfaceAnimations && styles.noAnimation,\n      )}\n      onTransitionEnd={!isOpen ? onCloseAnimationEnd : undefined}\n    >\n      <div id=\"TopicListHeader\" className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n\n        {chat && (\n          <GroupChatInfo\n            noAvatar\n            className={styles.info}\n            chatId={chat.id}\n            onClick={handleToggleChatInfo}\n          />\n        )}\n\n        {chat\n          && (\n            <HeaderActions\n              chatId={chat.id}\n              threadId={MAIN_THREAD_ID}\n              messageListType=\"thread\"\n              canExpandActions={false}\n              isForForum\n              isMobile={isMobile}\n              onTopicSearch={onTopicSearch}\n            />\n          )}\n      </div>\n\n      {chat && <GroupCallTopPane chatId={chat.id} />}\n\n      <div className={styles.notch} />\n\n      <InfiniteScroll\n        className=\"chat-list custom-scroll\"\n        ref={containerRef}\n        items={viewportIds}\n        preloadBackwards={TOPICS_SLICE}\n        withAbsolutePositioning\n        maxHeight={(orderedIds?.length || 0) * TOPIC_HEIGHT_PX}\n        onLoadMore={getMore}\n        sensitiveArea={TOPIC_LIST_SENSITIVE_AREA}\n        beforeChildren={<div ref={scrollTopHandlerRef} className={styles.scrollTopHandler} />}\n      >\n        {Boolean(viewportIds?.length) && (\n          renderTopics()\n        )}\n        {isLoading && !viewportIds?.length && (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n      {!isLoading && viewportIds?.length === 1 && viewportIds[0] === GENERAL_TOPIC_ID && (\n        <EmptyForum chatId={chatId!} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const chatId = selectTabState(global).forumPanelChatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n    } = selectCurrentMessageList(global) || {};\n    const topicsInfo = chatId ? selectTopicsInfo(global, chatId) : undefined;\n\n    return {\n      chat,\n      currentTopicId: chatId === currentChatId ? Number(currentThreadId) : undefined,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      topicsInfo,\n    };\n  },\n  (global) => selectIsForumPanelOpen(global),\n)(ForumPanel));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MlF2n1nb\",\"rtl\":\"Xs2y1fCE\",\"no-animation\":\"kmDMv6D8\",\"noAnimation\":\"kmDMv6D8\",\"notch\":\"hGeb3TQJ\",\"scrolled\":\"SZ24u3cn\",\"scroll-top-handler\":\"ERz3fcar\",\"scrollTopHandler\":\"ERz3fcar\",\"info\":\"Sf633zAP\"};","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType<T extends number | string>(orderDiffById: Record<T, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values(orderDiffById) as number[];\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: T): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ow6Ij9O5\",\"title-row\":\"CBda1UmC\",\"titleRow\":\"CBda1UmC\",\"loading\":\"L4Zk0yMN\",\"other-column\":\"d0hTIVJn\",\"otherColumn\":\"d0hTIVJn\",\"main-column\":\"lEbV6HrI\",\"mainColumn\":\"lEbV6HrI\",\"unread\":\"BhS75ocD\",\"last-message\":\"KJ16dBus\",\"lastMessage\":\"KJ16dBus\",\"after-wrapper\":\"uWo2dhui\",\"afterWrapper\":\"uWo2dhui\",\"after\":\"g3XnC73g\",\"title\":\"k3Ch25ZQ\",\"otherColumnIcon\":\"oknhG11L\",\"other-column-title\":\"ZUj3xAjs\",\"otherColumnTitle\":\"ZUj3xAjs\",\"other-columns\":\"IkuCBmvA\",\"otherColumns\":\"IkuCBmvA\",\"ellipsis\":\"_m_2xcPW\",\"reverse-corner\":\"U_yhhC0w\",\"reverseCorner\":\"U_yhhC0w\",\"overwritten-width\":\"HV0wCR4O\",\"overwrittenWidth\":\"HV0wCR4O\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChat, ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getOrderedTopics } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport TopicIcon from './TopicIcon';\n\nimport styles from './ChatForumLastMessage.module.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topics?: Record<number, ApiTopic>;\n  renderLastMessage: () => React.ReactNode;\n  observeIntersection?: ObserveFn;\n};\n\nconst NO_CORNER_THRESHOLD = Number(REM);\nconst MAX_TOPICS = 3;\n\nconst ChatForumLastMessage: FC<OwnProps> = ({\n  chat,\n  topics,\n  renderLastMessage,\n  observeIntersection,\n}) => {\n  const { openThread } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const lastMessageRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const mainColumnRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const [lastActiveTopic, ...otherTopics] = useMemo(() => {\n    if (!topics) {\n      return [];\n    }\n\n    return getOrderedTopics(Object.values(topics), undefined, true).slice(0, MAX_TOPICS);\n  }, [topics]);\n\n  const [isReversedCorner, setIsReversedCorner] = useState(false);\n  const [overwrittenWidth, setOverwrittenWidth] = useState<number | undefined>(undefined);\n\n  const {\n    handleClick: handleOpenTopicClick,\n    handleMouseDown: handleOpenTopicMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (lastActiveTopic.unreadCount === 0 || chat.isForumAsMessages) return;\n\n    e.stopPropagation();\n    e.preventDefault();\n\n    openThread({\n      chatId: chat.id,\n      threadId: lastActiveTopic.id,\n      shouldReplaceHistory: true,\n      noForumTopicPanel: getIsMobile(),\n    });\n  });\n\n  useEffect(() => {\n    const lastMessageElement = lastMessageRef.current;\n    const mainColumnElement = mainColumnRef.current;\n    if (!lastMessageElement || !mainColumnElement) return;\n\n    const lastMessageWidth = lastMessageElement.offsetWidth;\n    const mainColumnWidth = mainColumnElement.offsetWidth;\n\n    if (Math.abs(lastMessageWidth - mainColumnWidth) < NO_CORNER_THRESHOLD) {\n      setOverwrittenWidth(Math.max(lastMessageWidth, mainColumnWidth));\n    } else {\n      setOverwrittenWidth(undefined);\n    }\n    setIsReversedCorner(lastMessageWidth > mainColumnWidth);\n  }, [lastActiveTopic, renderLastMessage]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isReversedCorner && styles.reverseCorner,\n        overwrittenWidth && styles.overwrittenWidth,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={overwrittenWidth ? `--overwritten-width: ${overwrittenWidth}px` : undefined}\n    >\n      {lastActiveTopic && (\n        <div className={styles.titleRow}>\n          <div\n            className={buildClassName(\n              styles.mainColumn,\n              lastActiveTopic.unreadCount && styles.unread,\n            )}\n            ref={mainColumnRef}\n            onClick={handleOpenTopicClick}\n            onMouseDown={handleOpenTopicMouseDown}\n          >\n            <TopicIcon\n              topic={lastActiveTopic}\n              observeIntersection={observeIntersection}\n            />\n            <div className={styles.title}>{renderText(lastActiveTopic.title)}</div>\n            {!overwrittenWidth && isReversedCorner && (\n              <div className={styles.afterWrapper}>\n                <div className={styles.after} />\n              </div>\n            )}\n          </div>\n\n          <div className={styles.otherColumns}>\n            {otherTopics.map((topic) => (\n              <div\n                className={buildClassName(\n                  styles.otherColumn, topic.unreadCount && styles.unread,\n                )}\n                key={topic.id}\n              >\n                <TopicIcon\n                  topic={topic}\n                  className={styles.otherColumnIcon}\n                  observeIntersection={observeIntersection}\n                />\n                <span className={styles.otherColumnTitle}>{renderText(topic.title)}</span>\n              </div>\n            ))}\n          </div>\n\n          <div className={styles.ellipsis} />\n        </div>\n      )}\n      {!lastActiveTopic && <div className={buildClassName(styles.titleRow, styles.loading)}>{lang('Loading')}</div>}\n      <div\n        className={buildClassName(styles.lastMessage, lastActiveTopic?.unreadCount && styles.unread)}\n        ref={lastMessageRef}\n        onClick={handleOpenTopicClick}\n        onMouseDown={handleOpenTopicMouseDown}\n      >\n        {renderLastMessage()}\n        {!overwrittenWidth && !isReversedCorner && (\n          <div className={styles.afterWrapper}>\n            <div className={styles.after} />\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nexport default memo(ChatForumLastMessage);\n","import React, {\n  useCallback, useLayoutEffect, useMemo, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type {\n  ApiChat, ApiDraft, ApiMessage, ApiPeer, ApiTopic, ApiTypingStatus,\n  StatefulMediaContent,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { ANIMATION_END_DELAY, CHAT_HEIGHT_PX } from '../../../../config';\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport {\n  getExpiredMessageDescription,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSenderName,\n  getMessageSticker,\n  getMessageVideo,\n  isActionMessage,\n  isExpiredMessage,\n} from '../../../../global/helpers';\nimport { isApiPeerChat } from '../../../../global/helpers/peers';\nimport { getMessageReplyInfo } from '../../../../global/helpers/replies';\nimport buildClassName from '../../../../util/buildClassName';\nimport { renderActionMessageText } from '../../../common/helpers/renderActionMessageText';\nimport renderText from '../../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\nimport { ChatAnimationTypes } from './useChatAnimationType';\n\nimport useEnsureMessage from '../../../../hooks/useEnsureMessage';\nimport useEnsureStory from '../../../../hooks/useEnsureStory';\nimport useMedia from '../../../../hooks/useMedia';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ChatForumLastMessage from '../../../common/ChatForumLastMessage';\nimport Icon from '../../../common/icons/Icon';\nimport MessageSummary from '../../../common/MessageSummary';\nimport TypingStatus from '../../../common/TypingStatus';\n\nconst ANIMATION_DURATION = 200;\n\nexport default function useChatListEntry({\n  chat,\n  topics,\n  lastMessage,\n  statefulMediaContent,\n  chatId,\n  typingStatus,\n  draft,\n  actionTargetMessage,\n  actionTargetUserIds,\n  lastMessageTopic,\n  lastMessageSender,\n  actionTargetChatId,\n  observeIntersection,\n  animationType,\n  orderDiff,\n  withInterfaceAnimations,\n  isTopic,\n  isSavedDialog,\n  isPreview,\n}: {\n  chat?: ApiChat;\n  topics?: Record<number, ApiTopic>;\n  lastMessage?: ApiMessage;\n  statefulMediaContent: StatefulMediaContent | undefined;\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageTopic?: ApiTopic;\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  observeIntersection?: ObserveFn;\n  isTopic?: boolean;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n\n  animationType: ChatAnimationTypes;\n  orderDiff: number;\n  withInterfaceAnimations?: boolean;\n}) {\n  const oldLang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isAction = lastMessage && isActionMessage(lastMessage);\n\n  const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n  useEnsureMessage(chatId, isAction ? replyToMessageId : undefined, actionTargetMessage);\n\n  const storyData = lastMessage?.content.storyData;\n  const shouldTryLoadingStory = statefulMediaContent && !statefulMediaContent.story;\n\n  useEnsureStory(shouldTryLoadingStory ? storyData?.peerId : undefined, storyData?.id, statefulMediaContent?.story);\n\n  const mediaContent = statefulMediaContent?.story || lastMessage;\n  const mediaHasPreview = mediaContent && !getMessageSticker(mediaContent);\n\n  const mediaThumbnail = mediaHasPreview ? getMessageMediaThumbDataUri(mediaContent) : undefined;\n  const mediaBlobUrl = useMedia(mediaHasPreview ? getMessageMediaHash(mediaContent, 'micro') : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const actionTargetUsers = useMemo(() => {\n    if (!actionTargetUserIds) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    return actionTargetUserIds.map((userId) => usersById[userId]).filter(Boolean);\n  }, [actionTargetUserIds]);\n\n  const renderLastMessageOrTyping = useCallback(() => {\n    if (!isSavedDialog && !isPreview\n        && typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    const isDraftReplyToTopic = draft && draft.replyInfo?.replyToMsgId === lastMessageTopic?.id;\n    const isEmptyLocalReply = draft?.replyInfo && !draft.text && draft.isLocal;\n\n    const canDisplayDraft = !chat?.isForum && !isSavedDialog && !isPreview && draft && !isEmptyLocalReply\n      && (!isTopic || !isDraftReplyToTopic);\n\n    if (canDisplayDraft) {\n      return (\n        <p className=\"last-message\" dir={oldLang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{oldLang('Draft')}</span>\n          {renderTextWithEntities({\n            text: draft.text?.text || '',\n            entities: draft.text?.entities,\n            isSimple: true,\n            withTranslucentThumbs: true,\n          })}\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    if (isExpiredMessage(lastMessage)) {\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={oldLang.isRtl ? 'auto' : 'ltr'}>\n          {getExpiredMessageDescription(oldLang, lastMessage)}\n        </p>\n      );\n    }\n\n    if (isAction) {\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={oldLang.isRtl ? 'auto' : 'ltr'}>\n          {renderActionMessageText(\n            oldLang,\n            lastMessage,\n            lastMessageSender && !isApiPeerChat(lastMessageSender) ? lastMessageSender : undefined,\n            lastMessageSender && isApiPeerChat(lastMessageSender) ? lastMessageSender : chat,\n            actionTargetUsers,\n            actionTargetMessage,\n            actionTargetChatId,\n            lastMessageTopic,\n            { isEmbedded: true },\n            undefined,\n            undefined,\n          )}\n        </p>\n      );\n    }\n\n    const senderName = getMessageSenderName(oldLang, chatId, lastMessageSender);\n\n    return (\n      <p className=\"last-message shared-canvas-container\" dir={oldLang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {!isSavedDialog && lastMessage.forwardInfo && (<Icon name=\"share-filled\" className=\"chat-prefix-icon\" />)}\n        {lastMessage.replyInfo?.type === 'story' && (<Icon name=\"story-reply\" className=\"chat-prefix-icon\" />)}\n        {renderSummary(lastMessage, observeIntersection, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n      </p>\n    );\n  }, [\n    actionTargetChatId, actionTargetMessage, actionTargetUsers, chat, chatId, draft, isAction,\n    isRoundVideo, isTopic, oldLang, lastMessage, lastMessageSender, lastMessageTopic, mediaBlobUrl, mediaThumbnail,\n    observeIntersection, typingStatus, isSavedDialog, isPreview,\n  ]);\n\n  function renderSubtitle() {\n    if (chat?.isForum && !isTopic) {\n      return (\n        <ChatForumLastMessage\n          chat={chat}\n          renderLastMessage={renderLastMessageOrTyping}\n          observeIntersection={observeIntersection}\n          topics={topics}\n        />\n      );\n    }\n\n    return renderLastMessageOrTyping();\n  }\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (!withInterfaceAnimations || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      requestMutation(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * CHAT_HEIGHT_PX}px, 0)`;\n\n      requestMutation(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMutation(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [withInterfaceAnimations, orderDiff, animationType]);\n\n  return {\n    renderSubtitle,\n    ref,\n  };\n}\n\nfunction renderSummary(\n  message: ApiMessage, observeIntersection?: ObserveFn, blobUrl?: string, isRoundVideo?: boolean,\n) {\n  const messageSummary = (\n    <MessageSummary\n      message={message}\n      noEmoji={Boolean(blobUrl)}\n      observeIntersectionForLoading={observeIntersection}\n      inChatList\n    />\n  );\n\n  if (!blobUrl) {\n    return messageSummary;\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <Icon name=\"play\" />}\n      {messageSummary}\n    </span>\n  );\n}\n","import { useRef } from '../../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nexport default function useLeftHeaderButtonRtlForumTransition(shouldHideSearch?: boolean) {\n  const forceUpdate = useForceUpdate();\n  const shouldDisableDropdownMenuTransitionRef = useRef(shouldHideSearch);\n  const prevShouldHideSearch = usePreviousDeprecated(shouldHideSearch);\n\n  function handleDropdownMenuTransitionEnd() {\n    shouldDisableDropdownMenuTransitionRef.current = Boolean(shouldHideSearch);\n    forceUpdate();\n  }\n\n  if (shouldHideSearch === false && prevShouldHideSearch !== shouldHideSearch) {\n    shouldDisableDropdownMenuTransitionRef.current = false;\n  }\n\n  return { shouldDisableDropdownMenuTransitionRef, handleDropdownMenuTransitionEnd };\n}\n","import { useMemo } from '../../../../lib/teact/teact';\n\nimport { mapValues } from '../../../../util/iteratees';\nimport { useChatAnimationType } from './useChatAnimationType';\n\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nexport default function useOrderDiff(orderedIds: (string | number)[] | undefined, key?: string) {\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePreviousDeprecated(orderById);\n  const prevChatId = usePreviousDeprecated(key);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById || key !== prevChatId) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [key, orderById, prevChatId, prevOrderById]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  return {\n    orderDiffById,\n    getAnimationType,\n  };\n}\n","import type { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport type { OldLangFn } from '../../../../hooks/useOldLang';\n\nimport {\n  getChatTitle,\n  getPeerTitle,\n  isChatGroup,\n  isUserId,\n} from '../../../../global/helpers';\n\nexport function getSenderName(\n  lang: OldLangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getPeerTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if ('isSelf' in sender && sender.isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AN8wkEiR\",\"ghost\":\"ANWk2pWP\",\"scale\":\"kMHxyoSt\",\"elementContainer\":\"UDCMfXxs\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { SNAP_EFFECT_CONTAINER_ID, SNAP_EFFECT_ID, SVG_NAMESPACE } from '../../../config';\nimport { selectCanAnimateSnapEffect } from '../../../global/selectors';\nimport jsxToHtml from '../../../util/element/jsxToHtml';\nimport generateUniqueId from '../../../util/generateUniqueId';\n\nimport styles from './SnapEffectContainer.module.scss';\n\nconst VISIBLITY_MARGIN = 50;\nconst DURATION = 1000;\n\nconst SnapEffectContainer = () => {\n  return (\n    <div className={styles.root} id={SNAP_EFFECT_CONTAINER_ID} />\n  );\n};\n\nexport default memo(SnapEffectContainer);\n\nexport function animateSnap(element: HTMLElement) {\n  const global = getGlobal();\n  const canPlayEffect = selectCanAnimateSnapEffect(global);\n  if (!canPlayEffect) return false;\n  // Get element current fixed position on screen\n  const rect = element.getBoundingClientRect();\n  const x = rect.left + window.scrollX;\n  const y = rect.top + window.scrollY;\n  const width = rect.width;\n  const height = rect.height;\n\n  // Check for visibility\n  if (x + width + VISIBLITY_MARGIN < 0 || x - VISIBLITY_MARGIN > window.innerWidth\n    || y + height + VISIBLITY_MARGIN < 0 || y - VISIBLITY_MARGIN > window.innerHeight) {\n    return false;\n  }\n\n  const seed = Math.floor(Date.now() / 1000);\n  const filterId = `${SNAP_EFFECT_ID}-${generateUniqueId()}`;\n\n  const component = (\n    <svg\n      className={styles.ghost}\n      width={width}\n      height={height}\n      style={`left: ${x}px; top: ${y}px;`}\n      viewBox={`0 0 ${width} ${height}`}\n    >\n      <defs>\n        {createFilter(filterId, Math.min(width, height), seed)}\n      </defs>\n      <g filter={`url(#${filterId})`}>\n        <foreignObject className={styles.elementContainer} width={width} height={height} />\n      </g>\n    </svg>\n  );\n\n  const svg = jsxToHtml(component)[0] as HTMLElement;\n  const foreignObject = svg.querySelector('foreignObject')!;\n\n  const computedStyle = window.getComputedStyle(element);\n  const clone = element.cloneNode(true) as HTMLElement;\n  Array.from(computedStyle).forEach((key) => (\n    clone.style.setProperty(key, computedStyle.getPropertyValue(key), 'important')\n  ));\n\n  foreignObject.appendChild(clone);\n\n  const snapContainer = document.getElementById(SNAP_EFFECT_CONTAINER_ID)!;\n  snapContainer.appendChild(svg);\n\n  svg.addEventListener('animationend', () => {\n    snapContainer.removeChild(svg);\n  }, {\n    once: true,\n  });\n\n  return true;\n}\n\nfunction createFilter(id: string, smallestSide: number, baseSeed: number = 42) {\n  return (\n    <filter\n      xmlns={SVG_NAMESPACE}\n      id={id}\n      x=\"-150%\"\n      y=\"-150%\"\n      width=\"400%\"\n      height=\"400%\"\n      color-interpolation-filters=\"sRGB\"\n    >\n      <feTurbulence type=\"fractalNoise\" baseFrequency=\"0.5\" numOctaves=\"1\" result=\"dustNoise\" seed={baseSeed} />\n      <feComponentTransfer in=\"dustNoise\" result=\"dustNoiseMask\">\n        <feFuncA type=\"linear\" slope=\"5\" intercept=\"0\">\n          <animate attributeName=\"slope\" values=\"5; 2; 1; 0\" dur={`${DURATION}ms`} fill=\"freeze\" />\n        </feFuncA>\n      </feComponentTransfer>\n      <feComposite in=\"SourceGraphic\" in2=\"dustNoiseMask\" operator=\"in\" result=\"dustySource\" />\n      <feTurbulence\n        type=\"fractalNoise\"\n        baseFrequency=\"0.015\"\n        numOctaves=\"1\"\n        result=\"displacementNoise1\"\n        seed={baseSeed + 1}\n      />\n      <feTurbulence\n        type=\"fractalNoise\"\n        baseFrequency=\"1\"\n        numOctaves=\"2\"\n        result=\"displacementNoise2\"\n        seed={baseSeed + 2}\n      />\n      <feMerge result=\"combinedNoise\">\n        <feMergeNode in=\"displacementNoise1\" />\n        <feMergeNode in=\"displacementNoise2\" />\n      </feMerge>\n      <feDisplacementMap in=\"dustySource\" in2=\"combinedNoise\" scale=\"0\" xChannelSelector=\"R\" yChannelSelector=\"G\">\n        <animate attributeName=\"scale\" values={`0; ${smallestSide * 3}`} dur={`${DURATION}ms`} fill=\"freeze\" />\n      </feDisplacementMap>\n    </filter>\n  );\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './HeaderMenuContainer';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst HeaderMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const HeaderMenuContainer = useModuleLoader(Bundles.Extra, 'HeaderMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return HeaderMenuContainer ? <HeaderMenuContainer {...props} /> : undefined;\n};\n\nexport default HeaderMenuContainerAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { IAnchorPosition, MessageListType, ThreadId } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { ManagementScreens } from '../../types';\n\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getHasAdminRight,\n  getIsSavedDialog,\n  isAnonymousForwardsChat,\n  isChatBasicGroup, isChatChannel, isChatSuperGroup, isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanAnimateInterface,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectIsChatBotNotStarted,\n  selectIsChatWithSelf,\n  selectIsInSelectMode,\n  selectIsRightColumnShown,\n  selectIsUserBlocked,\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectTranslationLanguage,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { ARE_CALLS_SUPPORTED, IS_APP } from '../../util/windowEnvironment';\n\nimport { useHotkeys } from '../../hooks/useHotkeys';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport HeaderMenuContainer from './HeaderMenuContainer.async';\n\ninterface OwnProps {\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n  canExpandActions: boolean;\n  isForForum?: boolean;\n  isMobile?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  noMenu?: boolean;\n  isChannel?: boolean;\n  isRightColumnShown?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canUnblock?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewMonetization?: boolean;\n  canViewBoosts?: boolean;\n  canShowBoostModal?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  shouldJoinToSend?: boolean;\n  shouldSendJoinRequest?: boolean;\n  noAnimation?: boolean;\n  canTranslate?: boolean;\n  isTranslating?: boolean;\n  translationLanguage: string;\n  language: string;\n  detectedChatLanguage?: string;\n  doNotTranslate: string[];\n}\n\n// Chrome breaks layout when focusing input during transition\nconst SEARCH_FOCUS_DELAY_MS = 320;\n\nconst HeaderActions: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  noMenu,\n  isMobile,\n  isChannel,\n  canStartBot,\n  canRestartBot,\n  canUnblock,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewMonetization,\n  canViewBoosts,\n  canShowBoostModal,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  pendingJoinRequests,\n  isRightColumnShown,\n  isForForum,\n  canExpandActions,\n  shouldJoinToSend,\n  shouldSendJoinRequest,\n  noAnimation,\n  canTranslate,\n  isTranslating,\n  translationLanguage,\n  language,\n  detectedChatLanguage,\n  doNotTranslate,\n  onTopicSearch,\n}) => {\n  const {\n    joinChannel,\n    sendBotCommand,\n    openMiddleSearch,\n    restartBot,\n    requestMasterAndRequestCall,\n    requestNextManagementScreen,\n    showNotification,\n    openChat,\n    requestChatTranslation,\n    togglePeerTranslations,\n    openChatLanguageModal,\n    setSettingOption,\n    unblockUser,\n    setViewForumAsMessages,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuButtonRef = useRef<HTMLButtonElement>(null);\n  const lang = useOldLang();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuAnchor, setMenuAnchor] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleHeaderMenuOpen = useLastCallback(() => {\n    setIsMenuOpen(true);\n    const rect = menuButtonRef.current!.getBoundingClientRect();\n    setMenuAnchor({ x: rect.right, y: rect.bottom });\n  });\n\n  const handleHeaderMenuClose = useLastCallback(() => {\n    setIsMenuOpen(false);\n  });\n\n  const handleHeaderMenuHide = useLastCallback(() => {\n    setMenuAnchor(undefined);\n  });\n\n  const handleSubscribeClick = useLastCallback(() => {\n    joinChannel({ chatId });\n    if (shouldSendJoinRequest) {\n      showNotification({\n        message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n      });\n    }\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n  });\n\n  const handleTranslateClick = useLastCallback(() => {\n    if (isTranslating) {\n      requestChatTranslation({ chatId, toLanguageCode: undefined });\n      return;\n    }\n\n    requestChatTranslation({ chatId, toLanguageCode: translationLanguage });\n  });\n\n  const handleJoinRequestsClick = useLastCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.JoinRequests });\n  });\n\n  const handleSearchClick = useLastCallback(() => {\n    if (isForForum) {\n      onTopicSearch?.();\n      return;\n    }\n\n    openMiddleSearch();\n\n    if (isMobile) {\n      // iOS requires synchronous focus on user event.\n      setFocusInSearchInput();\n    } else if (noAnimation) {\n      // The second RAF is necessary because Teact must update the state and render the async component\n      requestMeasure(() => {\n        requestNextMutation(setFocusInSearchInput);\n      });\n    } else {\n      setTimeout(setFocusInSearchInput, SEARCH_FOCUS_DELAY_MS);\n    }\n  });\n\n  const handleAsMessagesClick = useLastCallback(() => {\n    openChat({ id: chatId });\n    setViewForumAsMessages({ chatId, isEnabled: true });\n  });\n\n  const handleRequestCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId });\n  });\n\n  const handleHotkeySearchClick = useLastCallback((e: KeyboardEvent) => {\n    if (!canSearch || !IS_APP || e.shiftKey) {\n      return;\n    }\n\n    e.preventDefault();\n    handleSearchClick();\n  });\n\n  const getTextWithLanguage = useLastCallback((langKey: string, langCode: string) => {\n    const simplified = langCode.split('-')[0];\n    const translationKey = `TranslateLanguage${simplified.toUpperCase()}`;\n    const name = lang(translationKey);\n    if (name !== translationKey) {\n      return lang(langKey, name);\n    }\n\n    const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n    return lang(`${langKey}Other`, translatedName);\n  });\n\n  const buttonText = useMemo(() => {\n    if (isTranslating) return lang('ShowOriginalButton');\n\n    return getTextWithLanguage('TranslateToButton', translationLanguage);\n  }, [translationLanguage, getTextWithLanguage, isTranslating, lang]);\n\n  const doNotTranslateText = useMemo(() => {\n    if (!detectedChatLanguage) return undefined;\n\n    return getTextWithLanguage('DoNotTranslateLanguage', detectedChatLanguage);\n  }, [getTextWithLanguage, detectedChatLanguage]);\n\n  const handleHide = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: false });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n  });\n\n  const handleChangeLanguage = useLastCallback(() => {\n    openChatLanguageModal({ chatId });\n  });\n\n  const handleDoNotTranslate = useLastCallback(() => {\n    if (!detectedChatLanguage) return;\n\n    setSettingOption({\n      doNotTranslate: [...doNotTranslate, detectedChatLanguage],\n    });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n\n    showNotification({ message: getTextWithLanguage('AddedToDoNotTranslate', detectedChatLanguage) });\n  });\n\n  useHotkeys(useMemo(() => ({\n    'Mod+F': handleHotkeySearchClick,\n  }), []));\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={isRightColumnShown}\n        color=\"translucent\"\n        size=\"smaller\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('TranslateMessage')}\n      >\n        <Icon name=\"language\" />\n      </Button>\n    );\n  }, [isRightColumnShown, lang]);\n\n  return (\n    <div className=\"HeaderActions\">\n      {!isForForum && canTranslate && (\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"language\" onClick={handleTranslateClick}>\n            {buttonText}\n          </MenuItem>\n          <MenuItem icon=\"replace\" onClick={handleChangeLanguage}>\n            {lang('Chat.Translate.Menu.To')}\n          </MenuItem>\n          <MenuSeparator />\n          {detectedChatLanguage\n            && <MenuItem icon=\"hand-stop\" onClick={handleDoNotTranslate}>{doNotTranslateText}</MenuItem>}\n          <MenuItem icon=\"close-circle\" onClick={handleHide}>{lang('Hide')}</MenuItem>\n        </DropdownMenu>\n      )}\n      {!isMobile && (\n        <>\n          {canExpandActions && !shouldSendJoinRequest && (canSubscribe || shouldJoinToSend) && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </Button>\n          )}\n          {canExpandActions && shouldSendJoinRequest && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang('ChannelJoinRequest')}\n            </Button>\n          )}\n          {canExpandActions && canStartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </Button>\n          )}\n          {canExpandActions && canRestartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </Button>\n          )}\n          {canExpandActions && canUnblock && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleUnblock}\n            >\n              {lang('Unblock')}\n            </Button>\n          )}\n          {canSearch && (\n            <Button\n              round\n              ripple={isRightColumnShown}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleSearchClick}\n              ariaLabel={lang('Conversation.SearchPlaceholder')}\n            >\n              <Icon name=\"search\" />\n            </Button>\n          )}\n          {canCall && (\n            <Button\n              round\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleRequestCall}\n              ariaLabel=\"Call\"\n            >\n              <Icon name=\"phone\" />\n            </Button>\n          )}\n        </>\n      )}\n      {!isForForum && Boolean(pendingJoinRequests) && (\n        <Button\n          round\n          className=\"badge-button\"\n          ripple={isRightColumnShown}\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleJoinRequestsClick}\n          ariaLabel={isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n        >\n          <Icon name=\"user\" />\n          <div className=\"badge\">{pendingJoinRequests}</div>\n        </Button>\n      )}\n      <Button\n        ref={menuButtonRef}\n        className={isMenuOpen ? 'active' : ''}\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        disabled={noMenu}\n        ariaLabel=\"More actions\"\n        onClick={handleHeaderMenuOpen}\n      >\n        <Icon name=\"more\" />\n      </Button>\n      {menuAnchor && (\n        <HeaderMenuContainer\n          chatId={chatId}\n          threadId={threadId}\n          isOpen={isMenuOpen}\n          anchor={menuAnchor}\n          withExtraActions={isMobile || !canExpandActions}\n          isChannel={isChannel}\n          canStartBot={canStartBot}\n          canSubscribe={canSubscribe}\n          canSearch={canSearch}\n          canCall={canCall}\n          canMute={canMute}\n          canViewStatistics={canViewStatistics}\n          canViewBoosts={canViewBoosts}\n          canViewMonetization={canViewMonetization}\n          canShowBoostModal={canShowBoostModal}\n          canLeave={canLeave}\n          canEnterVoiceChat={canEnterVoiceChat}\n          canCreateVoiceChat={canCreateVoiceChat}\n          pendingJoinRequests={pendingJoinRequests}\n          onJoinRequestsClick={handleJoinRequestsClick}\n          withForumActions={isForForum}\n          onSubscribeChannel={handleSubscribeClick}\n          onSearchClick={handleSearchClick}\n          onAsMessagesClick={handleAsMessagesClick}\n          onClose={handleHeaderMenuClose}\n          onCloseAnimationEnd={handleHeaderMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType, isMobile,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat && isChatChannel(chat));\n    const isSuperGroup = Boolean(chat && isChatSuperGroup(chat));\n    const language = selectLanguageCode(global);\n    const translationLanguage = selectTranslationLanguage(global);\n    const isPrivate = isUserId(chatId);\n    const { doNotTranslate } = global.settings.byKey;\n\n    if (!chat || chat.isRestricted || selectIsInSelectMode(global)) {\n      return {\n        noMenu: true,\n        language,\n        translationLanguage,\n        doNotTranslate,\n      };\n    }\n\n    const bot = selectBot(global, chatId);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const fullInfo = chatFullInfo || userFullInfo;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isMainThread = messageListType === 'thread' && threadId === MAIN_THREAD_ID;\n    const isDiscussionThread = messageListType === 'thread' && threadId !== MAIN_THREAD_ID;\n    const isRightColumnShown = selectIsRightColumnShown(global, isMobile);\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n\n    const isUserBlocked = isPrivate ? selectIsUserBlocked(global, chatId) : false;\n    const canRestartBot = Boolean(bot && isUserBlocked);\n    const canStartBot = !canRestartBot && Boolean(selectIsChatBotNotStarted(global, chatId));\n    const canUnblock = isUserBlocked && !bot;\n    const canSubscribe = Boolean(\n      (isMainThread || chat.isForum) && (isChannel || isSuperGroup) && chat.isNotJoined,\n    );\n    const canSearch = isMainThread || isDiscussionThread;\n    const canCall = ARE_CALLS_SUPPORTED && isUserId(chat.id) && !isChatWithSelf && !bot && !chat.isSupport\n      && !isAnonymousForwardsChat(chat.id);\n    const canMute = isMainThread && !isChatWithSelf && !canSubscribe;\n    const canLeave = isSavedDialog || (isMainThread && !canSubscribe);\n    const canEnterVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && chat.isCallActive;\n    const canCreateVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && !chat.isCallActive\n      && (chat.adminRights?.manageCall || (chat.isCreator && isChatBasicGroup(chat)));\n    const canViewStatistics = isMainThread && chatFullInfo?.canViewStatistics;\n    const canViewMonetization = isMainThread && chatFullInfo?.canViewMonetization;\n    const canViewBoosts = isMainThread\n      && (isSuperGroup || isChannel) && (canViewStatistics || getHasAdminRight(chat, 'postStories'));\n    const canShowBoostModal = !canViewBoosts && (isSuperGroup || isChannel);\n    const pendingJoinRequests = isMainThread ? chatFullInfo?.requestsPending : undefined;\n    const shouldJoinToSend = Boolean(chat?.isNotJoined && chat.isJoinToSend);\n    const shouldSendJoinRequest = Boolean(chat?.isNotJoined && chat.isJoinRequest);\n    const noAnimation = !selectCanAnimateInterface(global);\n\n    const isTranslating = Boolean(selectRequestedChatTranslationLanguage(global, chatId));\n    const canTranslate = selectCanTranslateChat(global, chatId) && !fullInfo?.isTranslationDisabled;\n\n    return {\n      noMenu: false,\n      isChannel,\n      isRightColumnShown,\n      canStartBot,\n      canRestartBot,\n      canSubscribe,\n      canSearch,\n      canCall,\n      canMute,\n      canViewStatistics,\n      canViewMonetization,\n      canViewBoosts,\n      canShowBoostModal,\n      canLeave,\n      canEnterVoiceChat,\n      canCreateVoiceChat,\n      pendingJoinRequests,\n      shouldJoinToSend,\n      shouldSendJoinRequest,\n      noAnimation,\n      canTranslate,\n      isTranslating,\n      translationLanguage,\n      language,\n      doNotTranslate,\n      detectedChatLanguage: chat.detectedLanguage,\n      canUnblock,\n    };\n  },\n)(HeaderActions));\n\nfunction setFocusInSearchInput() {\n  const searchInput = document.querySelector<HTMLInputElement>('#MiddleSearch input');\n  searchInput?.focus();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mklnEg0s\",\"compact\":\"VGmPJoga\",\"image\":\"tT8KQwg0\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiDocument } from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getDocumentMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useMedia from '../../../hooks/useMedia';\n\nimport styles from './AttachBotIcon.module.scss';\n\ntype OwnProps = {\n  icon: ApiDocument;\n  theme: ISettings['theme'];\n};\n\nconst ADDITIONAL_STROKE_WIDTH = '0.5px';\nconst DARK_THEME_COLOR = 'rgb(170, 170, 170)';\nconst LIGHT_THEME_COLOR = 'rgb(112, 117, 121)';\nconst COLOR_REPLACE_PATTERN = /#fff/gi;\n\nconst AttachBotIcon: FC<OwnProps> = ({\n  icon, theme,\n}) => {\n  const { isTouchScreen } = useAppLayout();\n  const mediaData = useMedia(getDocumentMediaHash(icon, 'full'), false, ApiMediaFormat.Text);\n\n  const iconSvg = useMemo(() => {\n    if (!mediaData) return '';\n    const color = theme === 'dark' ? DARK_THEME_COLOR : LIGHT_THEME_COLOR;\n\n    const mediaDataWithReplacedColors = mediaData.replace(COLOR_REPLACE_PATTERN, color);\n    const doc = new DOMParser().parseFromString(mediaDataWithReplacedColors, 'image/svg+xml');\n    doc.querySelectorAll('path').forEach((path) => {\n      path.style.stroke = color;\n      path.style.strokeWidth = ADDITIONAL_STROKE_WIDTH;\n    });\n\n    return `data:image/svg+xml;utf8,${doc.documentElement.outerHTML}`;\n  }, [mediaData, theme]);\n\n  return (\n    <i className={buildClassName(styles.root, 'icon', !isTouchScreen && styles.compact)}>\n      <img\n        src={iconSvg}\n        alt=\"\"\n        className={buildClassName(styles.image, !isTouchScreen && styles.compact)}\n        draggable={false}\n      />\n    </i>\n  );\n};\n\nexport default memo(AttachBotIcon);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachBot } from '../../../api/types';\nimport type { IAnchorPosition, ISettings, ThreadId } from '../../../types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport AttachBotIcon from './AttachBotIcon';\n\ntype OwnProps = {\n  bot: ApiAttachBot;\n  theme: ISettings['theme'];\n  isInSideMenu?: true;\n  chatId?: string;\n  threadId?: ThreadId;\n  canShowNew?: boolean;\n  onMenuOpened: VoidFunction;\n  onMenuClosed: VoidFunction;\n};\n\nconst AttachBotItem: FC<OwnProps> = ({\n  bot,\n  theme,\n  chatId,\n  threadId,\n  isInSideMenu,\n  canShowNew,\n  onMenuOpened,\n  onMenuClosed,\n}) => {\n  const { callAttachBot, toggleAttachBot } = getActions();\n\n  const lang = useOldLang();\n\n  const icon = useMemo(() => {\n    return bot.icons.find(({ name }) => name === 'default_static')?.document;\n  }, [bot.icons]);\n\n  const [isMenuOpen, openMenu, closeMenu] = useFlag();\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleContextMenu = useLastCallback((e: React.UIEvent) => {\n    e.preventDefault();\n    const rect = e.currentTarget.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n    onMenuOpened();\n    openMenu();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isInSideMenu) {\n      callAttachBot({\n        bot,\n        isFromSideMenu: true,\n      });\n    } else {\n      callAttachBot({\n        bot,\n        chatId: chatId!,\n        threadId,\n      });\n    }\n  });\n\n  const handleCloseMenu = useLastCallback(() => {\n    closeMenu();\n    onMenuClosed();\n  });\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleRemoveBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot.id,\n      isEnabled: false,\n    });\n  });\n\n  return (\n    <MenuItem\n      key={bot.id}\n      customIcon={icon && <AttachBotIcon icon={icon} theme={theme} />}\n      icon={!icon ? 'bots' : undefined}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {bot.shortName}\n      {canShowNew && bot.isDisclaimerNeeded && <span className=\"menu-item-badge\">{lang('New')}</span>}\n      {menuPosition && (\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${menuPosition.x}px;top: ${menuPosition.y}px;`}\n          className=\"bot-attach-context-menu\"\n          autoClose\n          withPortal\n          onClose={handleCloseMenu}\n          onCloseAnimationEnd={handleCloseAnimationEnd}\n        >\n          <MenuItem icon=\"stop\" destructive onClick={handleRemoveBot}>{lang('WebApp.RemoveBot')}</MenuItem>\n        </Menu>\n      )}\n\n    </MenuItem>\n  );\n};\n\nexport default memo(AttachBotItem);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomEmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomEmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomEmojiTooltip = useModuleLoader(Bundles.Extra, 'CustomEmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomEmojiTooltip ? <CustomEmojiTooltip {...props} /> : undefined;\n};\n\nexport default CustomEmojiTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomSendMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomSendMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomSend = useModuleLoader(Bundles.Extra, 'CustomSendMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomSend ? <CustomSend {...props} /> : undefined;\n};\n\nexport default CustomSendMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useEffectOnce from '../../../hooks/useEffectOnce';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Icon from '../../common/icons/Icon';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  isGeneric?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, isGeneric, onFileSelect }) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const svgRef = useRef<SVGSVGElement>(null);\n\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  });\n\n  const handleResize = useLastCallback(() => {\n    const svg = svgRef.current;\n    if (!svg) {\n      return;\n    }\n\n    const { width, height } = svg.getBoundingClientRect();\n    svg.viewBox.baseVal.width = width;\n    svg.viewBox.baseVal.height = height;\n  });\n\n  // Can't listen for SVG resize\n  useResizeObserver(ref, handleResize);\n\n  useEffectOnce(handleResize);\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      ref={ref}\n      onDrop={onFileSelect}\n      onDragEnter={markHovered}\n      onDragLeave={handleDragLeave}\n      data-dropzone\n    >\n      <svg className=\"target-outline-container\">\n        <rect className=\"target-outline\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" rx=\"8\" />\n      </svg>\n      <div className=\"target-content\">\n        <Icon name={isQuick ? 'photo' : 'document'} />\n        <div className=\"title\">Drop files here to send them</div>\n        {!isGeneric && <div className=\"description\">{isQuick ? 'in a quick way' : 'without compression'}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { canReplaceMessageMedia } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport buildAttachment from './helpers/buildAttachment';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[], suggestCompression?: boolean) => void;\n  editingMessage?: ApiMessage | undefined;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea: FC<OwnProps> = ({\n  isOpen, withQuick, onHide, onFileSelect, editingMessage,\n}) => {\n  const lang = useOldLang();\n  const { showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const hideTimeoutRef = useRef<number>(null);\n  const prevWithQuick = usePreviousDeprecated(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen);\n  const isInAlbum = editingMessage && editingMessage?.groupedId;\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      const newAttachment = folderFiles && await buildAttachment(folderFiles[0].name, folderFiles[0]);\n      const canReplace = editingMessage && newAttachment && canReplaceMessageMedia(editingMessage, newAttachment);\n\n      if (canReplace) {\n        showNotification({ message: lang(isInAlbum ? 'lng_edit_media_album_error' : 'lng_edit_media_invalid_file') });\n        return;\n      }\n      if (folderFiles?.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    onHide();\n    onFileSelect(files, withQuick ? false : undefined);\n  });\n\n  const handleQuickFilesDrop = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), true);\n    }\n  });\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if (\n      (fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && (\n        !toTarget || !(toTarget as HTMLDivElement)!.matches('.DropTarget, .DropArea')\n      )\n    ) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  });\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const shouldRenderQuick = withQuick || prevWithQuick;\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerSelector=\"#middle-column-portals\">\n      <div\n        className={className}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={onHide}\n        onClick={onHide}\n      >\n        <DropTarget onFileSelect={handleFilesDrop} isGeneric={!shouldRenderQuick} />\n        {shouldRenderQuick && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './EmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default EmojiTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  getIsHeavyAnimating,\n  memo, useEffect, useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiInputMessageReplyInfo } from '../../../api/types';\nimport type { ISettings, ThreadId } from '../../../types';\nimport type { RichInputCtx } from '../../common/richinput/useRichEditable';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectCanPlayAnimatedEmojis, selectDraft, selectIsInSelectMode } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport { getIsDirectTextInputDisabled } from '../../../util/directInputManager';\nimport parseEmojiOnlyString from '../../../util/emoji/parseEmojiOnlyString';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport { debounce } from '../../../util/schedulers';\nimport { IS_ANDROID, IS_IOS, IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\nimport { useRichEditableKeyboardListener } from '../../common/richinput/useRichEditable';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport { RichInputKeyboardPriority } from '../../common/richinput/Keyboard';\nimport RichEditableAttachment from '../../common/richinput/RichEditableAttachment';\nimport TextFormatter from '../../common/richinput/TextFormatter.async';\nimport Button from '../../ui/Button';\nimport TextTimer from '../../ui/TextTimer';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\n\nconst SCROLLER_CLASS = 'input-scroller';\nconst INPUT_WRAPPER_CLASS = 'message-input-wrapper';\n\ntype OwnProps = {\n  richInputCtx: RichInputCtx;\n  id: string;\n  chatId: string;\n  threadId: ThreadId;\n  isAttachmentModalInput?: boolean;\n  isStoryInput?: boolean;\n  customEmojiPrefix: string;\n  editableInputId?: string;\n  isReady: boolean;\n  isActive: boolean;\n  placeholder: string;\n  timedPlaceholderLangKey?: string;\n  timedPlaceholderDate?: number;\n  forcedPlaceholder?: string;\n  noFocusInterception?: boolean;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  canSendPlainText?: boolean;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n  onScroll?: (event: React.UIEvent<HTMLElement>) => void;\n  captionLimit?: number;\n  isNeedPremium?: boolean;\n};\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  isSelectModeActive?: boolean;\n  messageSendKeyCombo?: ISettings['messageSendKeyCombo'];\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\n// Heuristics allowing the user to make a triple click\nconst SELECTION_RECALCULATE_DELAY_MS = 260;\n\nconst IGNORE_KEYS = [\n  'Esc', 'Escape', 'Enter', 'PageUp', 'PageDown', 'Meta', 'Alt', 'Ctrl', 'ArrowDown', 'ArrowUp', 'Control', 'Shift',\n];\n\nconst MessageInput: FC<OwnProps & StateProps> = ({\n  richInputCtx,\n  id,\n  chatId,\n  captionLimit,\n  isAttachmentModalInput,\n  isStoryInput,\n  editableInputId,\n  isActive,\n  placeholder,\n  timedPlaceholderLangKey,\n  timedPlaceholderDate,\n  forcedPlaceholder,\n  canSendPlainText,\n  canAutoFocus,\n  noFocusInterception,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyInfo,\n  isSelectModeActive,\n  messageSendKeyCombo,\n  onSuppressedFocus,\n  onSend,\n  onScroll,\n  isNeedPremium,\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n    showAllowedMessageTypesNotification,\n    openPremiumModal,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  // let inputRef = richInputCtx.inputRef;\n\n  // eslint-disable-next-line no-null/no-null\n  const selectionTimeoutRef = useRef<number>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollerCloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const absoluteContainerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [isTextFormatterDisabled, setIsTextFormatterDisabled] = useState<boolean>(false);\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const [shouldDisplayTimer, setShouldDisplayTimer] = useState(false);\n\n  useEffect(() => {\n    setShouldDisplayTimer(Boolean(timedPlaceholderLangKey && timedPlaceholderDate));\n  }, [timedPlaceholderDate, timedPlaceholderLangKey]);\n\n  const handleTimerEnd = useLastCallback(() => {\n    setShouldDisplayTimer(false);\n  });\n\n  // useInputCustomEmojis(\n  //   richInputCtx.getHtml,\n  //   inputRef,\n  //   sharedCanvasRef,\n  //   sharedCanvasHqRef,\n  //   absoluteContainerRef,\n  //   customEmojiPrefix,\n  //   canPlayAnimatedEmojis,\n  //   isReady,\n  //   isActive,\n  // );\n\n  // const maxInputHeight = isAttachmentModalInput\n  //   ? MAX_ATTACHMENT_MODAL_INPUT_HEIGHT\n  //   : isStoryInput ? MAX_STORY_MODAL_INPUT_HEIGHT : (isMobile ? 256 : 416);\n  const updateInputHeight = useLastCallback(() => {\n    requestForcedReflow(() => {\n      // TODO: Improve height handling\n\n      // const scroller = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!;\n      // const currentHeight = Number(scroller.style.height.replace('px', ''));\n      // const clone = scrollerCloneRef.current!;\n      // const { scrollHeight } = clone;\n      // const newHeight = Math.min(scrollHeight, maxInputHeight);\n\n      // if (newHeight === currentHeight) {\n      //   return undefined;\n      // }\n\n      // const isOverflown = scrollHeight > maxInputHeight;\n\n      // function exec() {\n      //   const transitionDuration = Math.round(\n      //     TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n      //   );\n      //   scroller.style.height = `${newHeight}px`;\n      //   scroller.style.transitionDuration = `${transitionDuration}ms`;\n      //   scroller.classList.toggle('overflown', isOverflown);\n      // }\n\n      // if (willSend) {\n      //   // Delay to next frame to sync with sending animation\n      //   requestMutation(exec);\n      //   return undefined;\n      // } else {\n      //   return exec;\n      // }\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight();\n  }, [isAttachmentModalInput, updateInputHeight]);\n\n  const chatIdRef = useRef(chatId);\n  chatIdRef.current = chatId;\n\n  const focusInput = useLastCallback(() => {\n    if (isNeedPremium) {\n      return;\n    }\n\n    if (getIsHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    richInputCtx.editable.root.focus();\n  });\n\n  const handleCloseTextFormatter = useLastCallback(() => {\n    closeTextFormatter();\n    window.getSelection()?.collapseToEnd();\n  });\n\n  const checkSelection = useLastCallback(() => {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    if (!isActive) return false;\n\n    const selection = richInputCtx.editable.selectionS();\n    if (!selection) {\n      closeTextFormatter();\n      if (IS_ANDROID) {\n        setIsTextFormatterDisabled(false);\n      }\n      return false;\n    }\n\n    const selectionRange = selection.range;\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  });\n\n  const processSelection = useLastCallback(() => {\n    if (!checkSelection()) {\n      return;\n    }\n\n    if (isTextFormatterDisabled) {\n      return;\n    }\n\n    // const selectionRange = window.getSelection()!.getRangeAt(0);\n    // const selectionRect = selectionRange.getBoundingClientRect();\n    // const scrollerRect = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!.getBoundingClientRect();\n\n    // let x = (selectionRect.left + selectionRect.width / 2) - scrollerRect.left;\n\n    // if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n    //   x = TEXT_FORMATTER_SAFE_AREA_PX;\n    // } else if (x > scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n    //   x = scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    // }\n\n    // setTextFormatterAnchorPosition({\n    //   x,\n    //   y: selectionRect.top - scrollerRect.top,\n    // });\n\n    // setSelectedRange(selectionRange);\n    openTextFormatter();\n  });\n\n  useEffect(() => {\n    processSelection();\n  }, [processSelection, richInputCtx.editable.selectionS]);\n\n  function processSelectionWithTimeout() {\n    if (selectionTimeoutRef.current) {\n      window.clearTimeout(selectionTimeoutRef.current);\n    }\n    // Small delay to allow browser properly recalculate selection\n    selectionTimeoutRef.current = window.setTimeout(processSelection, SELECTION_RECALCULATE_DELAY_MS);\n  }\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (e.button !== 2) {\n      const listenerEl = e.currentTarget.closest(`.${INPUT_WRAPPER_CLASS}`) || e.target;\n\n      listenerEl.addEventListener('mouseup', processSelectionWithTimeout, { once: true });\n      return;\n    }\n\n    if (isContextMenuOpenRef.current) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function handleCloseContextMenu(e2: KeyboardEvent | MouseEvent) {\n      if (e2 instanceof KeyboardEvent && e2.key !== 'Esc' && e2.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', handleCloseContextMenu);\n      window.removeEventListener('mousedown', handleCloseContextMenu);\n    }\n\n    document.addEventListener('mousedown', handleCloseContextMenu);\n    document.addEventListener('keydown', handleCloseContextMenu);\n  }\n\n  function handleKeyDown(e: KeyboardEvent) {\n    // https://levelup.gitconnected.com/javascript-events-handlers-keyboard-and-load-events-1b3e46a6b0c3#1960\n    const { isComposing } = e;\n\n    const empty = richInputCtx.editable.emptyS();\n    if (!isComposing && empty && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return true;\n      }\n    }\n\n    if (!isComposing && e.key === 'Enter') {\n      if (\n        !isMobileDevice\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n        return true;\n      }\n    } else if (!isComposing && e.key === 'ArrowUp' && empty && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n      return true;\n    } else {\n      e.target?.addEventListener('keyup', processSelectionWithTimeout, { once: true });\n    }\n    return false;\n  }\n\n  useRichEditableKeyboardListener(richInputCtx, {\n    priority: RichInputKeyboardPriority.Composer,\n    onKeydown: handleKeyDown,\n  });\n\n  function handleAndroidContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    setIsTextFormatterDisabled(!isTextFormatterDisabled);\n\n    if (!isTextFormatterDisabled) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      processSelection();\n    } else {\n      closeTextFormatter();\n    }\n  }\n\n  function handleClick() {\n    if (isAttachmentModalInput || canSendPlainText || (isStoryInput && isNeedPremium)) return;\n    showAllowedMessageTypesNotification({ chatId });\n  }\n\n  const handleOpenPremiumModal = useLastCallback(() => openPremiumModal());\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyInfo, canAutoFocus]);\n\n  useEffect(() => {\n    if (\n      !chatId\n      || editableInputId !== EDITABLE_INPUT_ID\n      || noFocusInterception\n      || isMobileDevice\n      || isSelectModeActive\n    ) {\n      return undefined;\n    }\n\n    const handleDocumentKeyDown = (e: KeyboardEvent) => {\n      if (getIsDirectTextInputDisabled()) {\n        return;\n      }\n\n      const { key } = e;\n      const target = e.target as HTMLElement | undefined;\n\n      if (!target || IGNORE_KEYS.includes(key)) {\n        return;\n      }\n\n      const input = richInputCtx.editable.root;\n      const isSelectionCollapsed = document.getSelection()?.isCollapsed;\n\n      if (\n        ((key.startsWith('Arrow') || (e.shiftKey && key === 'Shift')) && !isSelectionCollapsed)\n        || (e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT')\n      ) {\n        return;\n      }\n\n      if (\n        input\n        && target !== input\n        && target.tagName !== 'INPUT'\n        && target.tagName !== 'TEXTAREA'\n        && !target.isContentEditable\n      ) {\n        focusEditableElement(input, true, true);\n\n        const newEvent = new KeyboardEvent(e.type, e as any);\n        input.dispatchEvent(newEvent);\n      }\n    };\n\n    document.addEventListener('keydown', handleDocumentKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDown, true);\n    };\n  }, [richInputCtx.editable, chatId, editableInputId, isMobileDevice, isSelectModeActive, noFocusInterception]);\n\n  useEffect(() => {\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab' && !getIsDirectTextInputDisabled()) {\n        e.preventDefault();\n        requestMutation(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput]);\n\n  useEffect(() => {\n    const input = richInputCtx.editable.root;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [richInputCtx.editable, shouldSuppressFocus]);\n\n  const isTouched = useDerivedState(\n    () => Boolean(isActive && !richInputCtx.editable.emptyS()),\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n    [isActive, richInputCtx.editable.emptyS, richInputCtx.editable],\n  );\n\n  const className = buildClassName(\n    'form-control allow-selection',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  const inputScrollerContentClass = buildClassName('input-scroller-content', isNeedPremium && 'is-need-premium');\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={lang.isRtl ? 'rtl' : undefined}>\n      <div\n        className={buildClassName('custom-scroll', SCROLLER_CLASS, isNeedPremium && 'is-need-premium')}\n        onScroll={onScroll}\n        onClick={!isAttachmentModalInput && !canSendPlainText ? handleClick : undefined}\n      >\n        <div\n          className={inputScrollerContentClass}\n          onMouseDown={handleMouseDown}\n          onContextMenu={IS_ANDROID ? handleAndroidContextMenu : undefined}\n          onTouchCancel={IS_ANDROID ? processSelectionWithTimeout : undefined}\n        >\n          <RichEditableAttachment\n            richInputCtx={richInputCtx}\n            className={className}\n            detached={!isActive}\n            tabIndex={0}\n            placeholder={placeholder}\n            disableEdit={!isAttachmentModalInput && !canSendPlainText}\n          />\n          {!forcedPlaceholder && (\n            <span\n              className={buildClassName(\n                'placeholder-text',\n                !isAttachmentModalInput && !canSendPlainText && 'with-icon',\n                isTouched && 'touched',\n                isNeedPremium && 'is-need-premium',\n              )}\n              dir=\"auto\"\n            >\n              {!isAttachmentModalInput && !canSendPlainText\n                && <Icon name=\"lock-badge\" className=\"placeholder-icon\" />}\n              {shouldDisplayTimer ? (\n                <TextTimer langKey={timedPlaceholderLangKey!} endsAt={timedPlaceholderDate!} onEnd={handleTimerEnd} />\n              ) : placeholder}\n              {isStoryInput && isNeedPremium && (\n                <Button className=\"unlock-button\" size=\"tiny\" color=\"adaptive\" onClick={handleOpenPremiumModal}>\n                  {lang('StoryRepliesLockedButton')}\n                </Button>\n              )}\n            </span>\n          )}\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          <div ref={absoluteContainerRef} className=\"absolute-video-container\" />\n        </div>\n      </div>\n      <div\n        ref={scrollerCloneRef}\n        className={buildClassName('custom-scroll',\n          SCROLLER_CLASS,\n          'clone',\n          isNeedPremium && 'is-need-premium')}\n      >\n        <div className={inputScrollerContentClass}>\n          <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n        </div>\n      </div>\n      {captionLimit !== undefined && (\n        <div className=\"max-length-indicator\" dir=\"auto\">\n          {captionLimit}\n        </div>\n      )}\n      <TextFormatter\n        richInputCtx={richInputCtx}\n        isOpen={isTextFormatterOpen}\n        isActive={isActive}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder!)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }: OwnProps): StateProps => {\n    const { messageSendKeyCombo } = global.settings.byKey;\n\n    return {\n      messageSendKeyCombo,\n      replyInfo: chatId && threadId ? selectDraft(global, chatId, threadId)?.replyInfo : undefined,\n      isSelectModeActive: selectIsInSelectMode(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(MessageInput));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SymbolMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SymbolMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SymbolMenu = useModuleLoader(Bundles.Extra, 'SymbolMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SymbolMenu ? <SymbolMenu {...props} /> : undefined;\n};\n\nexport default SymbolMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { IAnchorPosition, ThreadId } from '../../../types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_MODAL_CSS_SELECTOR } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport Spinner from '../../ui/Spinner';\nimport SymbolMenu from './SymbolMenu.async';\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isMobile?: boolean;\n  isReady?: boolean;\n  isSymbolMenuOpen?: boolean;\n  canSendGifs?: boolean;\n  canSendStickers?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  forceDarkTheme?: boolean;\n  openSymbolMenu: VoidFunction;\n  closeSymbolMenu: VoidFunction;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  closeBotCommandMenu?: VoidFunction;\n  closeSendAsMenu?: VoidFunction;\n  isSymbolMenuForced?: boolean;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  className?: string;\n  inputCssSelector?: string;\n};\n\nconst SymbolMenuButton: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isMobile,\n  canSendGifs,\n  canSendStickers,\n  isMessageComposer,\n  isReady,\n  isSymbolMenuOpen,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  isSymbolMenuForced,\n  className,\n  forceDarkTheme,\n  inputCssSelector = EDITABLE_INPUT_CSS_SELECTOR,\n  openSymbolMenu,\n  closeSymbolMenu,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n  closeBotCommandMenu,\n  closeSendAsMenu,\n}) => {\n  const {\n    setStickerSearchQuery,\n    setGifSearchQuery,\n    addRecentEmoji,\n    addRecentCustomEmoji,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const triggerRef = useRef<HTMLDivElement>(null);\n\n  const [isSymbolMenuLoaded, onSymbolMenuLoadingComplete] = useFlag();\n  const [contextMenuAnchor, setContextMenuAnchor] = useState<IAnchorPosition | undefined>(undefined);\n\n  const symbolMenuButtonClassName = buildClassName(\n    'mobile-symbol-menu-button',\n    !isReady && 'not-ready',\n    isSymbolMenuLoaded\n      ? (isSymbolMenuOpen && 'menu-opened')\n      : (isSymbolMenuOpen && 'is-loading'),\n  );\n\n  const handleActivateSymbolMenu = useLastCallback(() => {\n    closeBotCommandMenu?.();\n    closeSendAsMenu?.();\n    openSymbolMenu();\n    const triggerEl = triggerRef.current;\n    if (!triggerEl) return;\n    const { x, y } = triggerEl.getBoundingClientRect();\n    setContextMenuAnchor({ x, y });\n  });\n\n  const handleSearchOpen = useLastCallback((type: 'stickers' | 'gifs') => {\n    if (type === 'stickers') {\n      setStickerSearchQuery({ query: '' });\n      setGifSearchQuery({ query: undefined });\n    } else {\n      setGifSearchQuery({ query: '' });\n      setStickerSearchQuery({ query: undefined });\n    }\n  });\n\n  const handleSymbolMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(\n      isAttachmentModal ? EDITABLE_INPUT_MODAL_CSS_SELECTOR : inputCssSelector,\n    );\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      openSymbolMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu?.();\n      openSymbolMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getRootElement = useLastCallback(() => triggerRef.current?.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => document.querySelector('#portals .SymbolMenu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  return (\n    <>\n      {isMobile ? (\n        <Button\n          className={symbolMenuButtonClassName}\n          round\n          color=\"translucent\"\n          onClick={isSymbolMenuOpen ? closeSymbolMenu : handleSymbolMenuOpen}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <Icon name=\"smile\" />\n          <Icon name=\"keyboard\" />\n          {isSymbolMenuOpen && !isSymbolMenuLoaded && <Spinner color=\"gray\" />}\n        </Button>\n      ) : (\n        <ResponsiveHoverButton\n          className={buildClassName('symbol-menu-button', isSymbolMenuOpen && 'activated')}\n          round\n          color=\"translucent\"\n          onActivate={handleActivateSymbolMenu}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <div ref={triggerRef} className=\"symbol-menu-trigger\" />\n          <Icon name=\"smile\" />\n        </ResponsiveHoverButton>\n      )}\n\n      <SymbolMenu\n        chatId={chatId}\n        threadId={threadId}\n        isOpen={isSymbolMenuOpen || Boolean(isSymbolMenuForced)}\n        canSendGifs={canSendGifs}\n        canSendStickers={canSendStickers}\n        isMessageComposer={isMessageComposer}\n        idPrefix={idPrefix}\n        onLoad={onSymbolMenuLoadingComplete}\n        onClose={closeSymbolMenu}\n        onEmojiSelect={onEmojiSelect}\n        onStickerSelect={onStickerSelect}\n        onCustomEmojiSelect={onCustomEmojiSelect}\n        onGifSelect={onGifSelect}\n        onRemoveSymbol={onRemoveSymbol}\n        onSearchOpen={handleSearchOpen}\n        addRecentEmoji={addRecentEmoji}\n        addRecentCustomEmoji={addRecentCustomEmoji}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n        className={buildClassName(className, forceDarkTheme && 'component-theme-dark')}\n        anchor={isAttachmentModal ? contextMenuAnchor : undefined}\n        getTriggerElement={isAttachmentModal ? getTriggerElement : undefined}\n        getRootElement={isAttachmentModal ? getRootElement : undefined}\n        getMenuElement={isAttachmentModal ? getMenuElement : undefined}\n        getLayout={isAttachmentModal ? getLayout : undefined}\n      />\n    </>\n  );\n};\n\nexport default memo(SymbolMenuButton);\n","import type { ApiAttachment } from '../../../../api/types';\n\nimport {\n  GIF_MIME_TYPE,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../../config';\nimport { parseAudioMetadata } from '../../../../util/audio';\nimport {\n  createPosterForVideo,\n  preloadImage,\n  preloadVideo,\n} from '../../../../util/files';\nimport { scaleImage } from '../../../../util/imageResize';\n\nconst MAX_QUICK_IMG_SIZE = 1280; // px\nconst MAX_THUMB_IMG_SIZE = 40; // px\nconst MAX_ASPECT_RATIO = 20;\nconst FILE_EXT_REGEX = /\\.[^/.]+$/;\n\nexport default async function buildAttachment(\n  filename: string, blob: Blob, options?: Partial<ApiAttachment>,\n): Promise<ApiAttachment> {\n  const blobUrl = URL.createObjectURL(blob);\n  const { type: mimeType, size } = blob;\n  let quick;\n  let audio;\n  let previewBlobUrl;\n  let shouldSendAsFile;\n\n  if (SUPPORTED_PHOTO_CONTENT_TYPES.has(mimeType)) {\n    const img = await preloadImage(blobUrl);\n    const { width, height } = img;\n    shouldSendAsFile = !validateAspectRatio(width, height);\n\n    const shouldShrink = Math.max(width, height) > MAX_QUICK_IMG_SIZE;\n    const isGif = mimeType === GIF_MIME_TYPE;\n\n    if (!shouldSendAsFile) {\n      if (!options?.compressedBlobUrl && !isGif && (shouldShrink || mimeType !== 'image/jpeg')) {\n        const resizedUrl = await scaleImage(\n          blobUrl, shouldShrink ? MAX_QUICK_IMG_SIZE / Math.max(width, height) : 1, 'image/jpeg',\n        );\n        URL.revokeObjectURL(blobUrl);\n        return buildAttachment(filename, blob, {\n          compressedBlobUrl: resizedUrl,\n        });\n      }\n\n      if (mimeType === 'image/jpeg') {\n        filename = filename.replace(FILE_EXT_REGEX, '.jpg');\n      }\n\n      quick = { width, height };\n    }\n\n    const shouldShrinkPreview = Math.max(width, height) > MAX_THUMB_IMG_SIZE;\n    if (shouldShrinkPreview) {\n      previewBlobUrl = await scaleImage(\n        blobUrl, MAX_THUMB_IMG_SIZE / Math.max(width, height), 'image/jpeg',\n      );\n    } else {\n      previewBlobUrl = blobUrl;\n    }\n  } else if (SUPPORTED_VIDEO_CONTENT_TYPES.has(mimeType)) {\n    try {\n      const { videoWidth: width, videoHeight: height, duration } = await preloadVideo(blobUrl);\n      shouldSendAsFile = !validateAspectRatio(width, height);\n      if (!shouldSendAsFile) {\n        quick = { width: width!, height: height!, duration: duration! };\n      }\n    } catch (err) {\n      shouldSendAsFile = true;\n    }\n\n    previewBlobUrl = await createPosterForVideo(blobUrl);\n  } else if (SUPPORTED_AUDIO_CONTENT_TYPES.has(mimeType)) {\n    const {\n      duration, title, performer, coverUrl,\n    } = await parseAudioMetadata(blobUrl);\n    audio = {\n      duration: duration || 0,\n      title,\n      performer,\n    };\n    previewBlobUrl = coverUrl;\n  }\n\n  return {\n    blobUrl,\n    filename,\n    mimeType,\n    size,\n    quick,\n    audio,\n    previewBlobUrl,\n    shouldSendAsFile: shouldSendAsFile || undefined,\n    uniqueId: `${Date.now()}-${Math.random()}`,\n    ...options,\n  };\n}\n\nexport function prepareAttachmentsToSend(\n  attachments: ApiAttachment[], shouldSendCompressed?: boolean,\n): ApiAttachment[] {\n  return attachments.map((attach) => {\n    if (shouldSendCompressed) {\n      if (attach.compressedBlobUrl) {\n        return {\n          ...attach,\n          blobUrl: attach.compressedBlobUrl,\n        };\n      }\n      return attach;\n    }\n\n    return {\n      ...attach,\n      shouldSendAsFile: !(attach.voice || attach.audio) || undefined,\n      shouldSendAsSpoiler: undefined,\n    };\n  });\n}\n\nfunction validateAspectRatio(width: number, height: number) {\n  const maxAspectRatio = Math.max(width, height) / Math.min(width, height);\n  return maxAspectRatio <= MAX_ASPECT_RATIO;\n}\n","type AudioMetadata = {\n  title?: string;\n  performer?: string;\n  duration?: number;\n  coverUrl?: string;\n};\n\nexport async function parseAudioMetadata(url: string): Promise<AudioMetadata> {\n  const { fetchFromUrl, selectCover } = await import('../lib/music-metadata-browser');\n  const metadata = await fetchFromUrl(url);\n  const { common: { title, artist, picture }, format: { duration } } = metadata;\n\n  const cover = selectCover(picture);\n  const coverBlob = cover ? new Blob([cover.data], { type: cover.format }) : undefined;\n  const coverUrl = coverBlob ? URL.createObjectURL(coverBlob) : undefined;\n\n  return {\n    title,\n    performer: artist,\n    duration,\n    coverUrl,\n  };\n}\n","import { validateFiles } from '../../../../util/files';\n\nexport default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return validateFiles(files);\n}\n","import React, { type TeactNode } from '../../../../lib/teact/teact';\n\nimport type { ApiKeyboardButton } from '../../../../api/types';\nimport type { LangFn } from '../../../../util/localization';\n\nimport { STARS_ICON_PLACEHOLDER } from '../../../../config';\nimport { replaceWithTeact } from '../../../../util/replaceWithTeact';\nimport renderText from '../../../common/helpers/renderText';\n\nimport { type OldLangFn } from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\n\nexport default function renderKeyboardButtonText(lang: OldLangFn | LangFn, button: ApiKeyboardButton): TeactNode {\n  if (button.type === 'receipt') {\n    return lang('PaymentReceipt');\n  }\n\n  if (button.type === 'buy') {\n    return replaceWithTeact(button.text, STARS_ICON_PLACEHOLDER, <Icon className=\"star-currency-icon\" name=\"star\" />);\n  }\n\n  return renderText(button.text);\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { RichInputCtx } from '../../../common/richinput/useRichEditable';\n\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport { buildCustomEmojiHtml } from '../../../common/richinput/customEmoji';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\nconst RE_ENDS_ON_EMOJI = new RegExp(`(${twemojiRegex.source})$`, 'g');\n\nexport default function useCustomEmojiTooltip(\n  isEnabled: boolean,\n  richInputCtx: RichInputCtx,\n  customEmojis?: ApiSticker[],\n) {\n  const { loadCustomEmojiForEmoji, clearCustomEmojiForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractLastEmojiThrottled = useThrottledResolver(() => {\n    const matchable = richInputCtx.editable.matchableS();\n\n    if (!isEnabled || !matchable || !richInputCtx.editable.selectionS()?.collapsed) return undefined;\n\n    const emojiMatch = matchable.match(RE_ENDS_ON_EMOJI);\n    if (!emojiMatch || emojiMatch.length === 0) return undefined;\n\n    return emojiMatch[emojiMatch.length - 1];\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [richInputCtx.editable.matchableS, isEnabled], THROTTLE);\n\n  const getLastEmoji = useDerivedSignal(\n    extractLastEmojiThrottled, [extractLastEmojiThrottled, richInputCtx.editable.matchableS], true,\n  );\n\n  const isActive = useDerivedState(() => Boolean(getLastEmoji()), [getLastEmoji]);\n  const hasCustomEmojis = Boolean(customEmojis?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const lastEmoji = getLastEmoji();\n    if (lastEmoji) {\n      if (!hasCustomEmojis) {\n        loadCustomEmojiForEmoji({\n          emoji: lastEmoji,\n        });\n      }\n    } else {\n      clearCustomEmojiForEmoji();\n    }\n  }, [isEnabled, isActive, getLastEmoji, hasCustomEmojis, clearCustomEmojiForEmoji, loadCustomEmojiForEmoji]);\n\n  const insertCustomEmoji = useLastCallback((emoji: ApiSticker) => {\n    const lastEmoji = getLastEmoji();\n    if (!isEnabled || !lastEmoji) return;\n\n    const html = buildCustomEmojiHtml(emoji);\n    requestNextMutation(() => {\n      richInputCtx.editable.insertMatchableHtml(html, (c) => lastEmoji.indexOf(c) === -1);\n    });\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, richInputCtx.editable.matchableS]);\n\n  return {\n    isCustomEmojiTooltipOpen: Boolean(isActive && hasCustomEmojis && !isManuallyClosed),\n    closeCustomEmojiTooltip: markManuallyClosed,\n    insertCustomEmoji,\n  };\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { EmojiData, EmojiModule, EmojiRawData } from '../../../../util/emoji/emoji';\nimport type { RichInputCtx } from '../../../common/richinput/useRichEditable';\n\nimport { selectCustomEmojiForEmojis } from '../../../../global/selectors';\nimport { uncompressEmoji } from '../../../../util/emoji/emoji';\nimport {\n  buildCollectionByKey, mapValues, pickTruthy, unique, uniqueByField,\n} from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport memoized from '../../../../util/memoized';\nimport renderText from '../../../common/helpers/renderText';\nimport { buildCustomEmojiHtml } from '../../../common/richinput/customEmoji';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n  maxKeyLength: number;\n}\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nlet RE_LOWERCASE_TEST: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst THROTTLE = 300;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\p{L}\\p{N}]*$/gui;\n  RE_LOWERCASE_TEST = /\\p{Ll}/u;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\d\\wа-яёґєії]*$/gi;\n  RE_LOWERCASE_TEST = /[a-zяёґєії]/;\n}\n\nexport default function useEmojiTooltip(\n  isEnabled: boolean,\n  richInputCtx: RichInputCtx,\n  recentEmojiIds: string[],\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n) {\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n  const [filteredCustomEmojis, setFilteredCustomEmojis] = useState<ApiSticker[]>(MEMO_EMPTY_ARRAY);\n\n  // Initialize data on first render\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    function exec() {\n      setById(emojiData.emojis);\n    }\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData().then(exec);\n    }\n  }, [isEnabled]);\n\n  const detectEmojiCodeThrottled = useThrottledResolver(() => {\n    if (!isEnabled) return undefined;\n    const matchable = richInputCtx.editable.matchableS();\n    if (!matchable || !matchable.includes(':')) return undefined;\n\n    const matches = matchable.match(RE_EMOJI_SEARCH);\n    if (!matches || matches.length === 0) return undefined;\n\n    return matches[matches.length - 1].trim();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [richInputCtx.editable.matchableS, isEnabled], THROTTLE);\n\n  const getEmojiCode = useDerivedSignal(\n    detectEmojiCodeThrottled, [detectEmojiCodeThrottled, richInputCtx.editable.matchableS], true,\n  );\n\n  const updateFiltered = useLastCallback((emojis: Emoji[]) => {\n    setFilteredEmojis(emojis);\n\n    if (emojis === MEMO_EMPTY_ARRAY) {\n      setFilteredCustomEmojis(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const nativeEmojis = emojis.map((emoji) => emoji.native);\n    const customEmojis = uniqueByField(\n      selectCustomEmojiForEmojis(getGlobal(), nativeEmojis),\n      'id',\n    );\n    setFilteredCustomEmojis(customEmojis);\n  });\n\n  const insertEmoji = useLastCallback((emoji: string | ApiSticker) => {\n    const emojiHtml = typeof emoji === 'string' ? renderText(emoji, ['emoji_html']) : buildCustomEmojiHtml(emoji);\n    richInputCtx.editable.insertMatchableHtml(`${emojiHtml}`, (c) => c === ':');\n    updateFiltered(MEMO_EMPTY_ARRAY);\n  });\n\n  useEffect(() => {\n    const emojiCode = getEmojiCode();\n    if (!emojiCode || !byId) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const filter = emojiCode.substring(1, undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if ((filter.length === 1 && RE_LOWERCASE_TEST.test(filter)) || filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter.toLowerCase(), EMOJIS_LIMIT);\n    }\n\n    if (!matched.length) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    updateFiltered(matched);\n  }, [\n    baseEmojiKeywords, byId, getEmojiCode, emojiKeywords, insertEmoji, recentEmojiIds, updateFiltered,\n  ]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, richInputCtx.editable.matchableS]);\n\n  return {\n    isEmojiTooltipOpen: Boolean(filteredEmojis.length || filteredCustomEmojis.length) && !isManuallyClosed,\n    closeEmojiTooltip: markManuallyClosed,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  };\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n  const maxKeyLength = keywords.reduce((max, keyword) => Math.max(max, keyword.length), 0);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n    maxKeyLength,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names, maxKeyLength,\n  } = library;\n\n  let matched: Emoji[] = [];\n\n  if (filter.length > maxKeyLength) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(Object.values(pickTruthy(byKeyword!, matchedKeywords)).flat());\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(Object.values(pickTruthy(byName, matchedNames)).flat());\n\n  matched = unique(matched);\n\n  if (!matched.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return matched.slice(0, limit);\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiChatMember, ApiUser } from '../../../../api/types';\nimport type { RichInputCtx } from '../../../common/richinput/useRichEditable';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { getMainUsername, getUserFirstOrLastName } from '../../../../global/helpers';\nimport { filterPeersByQuery } from '../../../../global/helpers/peers';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\n\nlet RE_USERNAME_SEARCH: RegExp;\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of Firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яёґєії]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  isEnabled: boolean,\n  richInputCtx: RichInputCtx,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const [filteredUsers, setFilteredUsers] = useState<ApiUser[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractUsernameTagThrottled = useThrottledResolver(() => {\n    const text = richInputCtx.editable.matchableS();\n    if (!isEnabled || !richInputCtx.editable.selectionS()?.collapsed) return undefined;\n    if (!text || !text.includes('@')) return undefined;\n\n    const matches = text.match(RE_USERNAME_SEARCH);\n    if (!matches || matches.length === 0) return undefined;\n    return matches[matches.length - 1].trim();\n\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [isEnabled, richInputCtx.editable, richInputCtx.editable.matchableS], THROTTLE);\n\n  const getUsernameTag = useDerivedSignal(\n    extractUsernameTagThrottled, [extractUsernameTagThrottled, richInputCtx.editable.matchableS], true,\n  );\n\n  const getWithInlineBots = useDerivedSignal(() => {\n    return isEnabled && richInputCtx.editable.htmlS().startsWith('@');\n\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [richInputCtx.editable, richInputCtx.editable.htmlS, isEnabled]);\n\n  useEffect(() => {\n    const usernameTag = getUsernameTag();\n\n    if (!usernameTag || !(groupChatMembers || topInlineBotIds)) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!usersById) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n      if (member.userId !== currentUserId) {\n        acc.push(member.userId);\n      }\n\n      return acc;\n    }, []);\n\n    const filter = usernameTag.substring(1);\n    const filteredIds = filterPeersByQuery({\n      ids: unique([\n        ...((getWithInlineBots() && topInlineBotIds) || []),\n        ...(memberIds || []),\n      ]),\n      query: filter,\n      type: 'user',\n    });\n\n    setFilteredUsers(Object.values(pickTruthy(usersById, filteredIds)));\n  }, [currentUserId, groupChatMembers, topInlineBotIds, getUsernameTag, getWithInlineBots]);\n\n  const insertMention = useLastCallback((user: ApiUser) => {\n    if (!user.usernames && !getUserFirstOrLastName(user)) {\n      return;\n    }\n\n    const mainUsername = getMainUsername(user);\n    const userFirstOrLastName = getUserFirstOrLastName(user) || '';\n    const htmlToInsert = mainUsername\n      ? `@${mainUsername} `\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${user.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${userFirstOrLastName}</a> `;\n\n    richInputCtx.editable.insertMatchableHtml(htmlToInsert, (c) => c === '@');\n\n    setFilteredUsers(undefined);\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, richInputCtx.editable.htmlS]);\n\n  return {\n    isMentionTooltipOpen: Boolean(filteredUsers?.length && !isManuallyClosed),\n    closeMentionTooltip: markManuallyClosed,\n    insertMention,\n    mentionFilteredUsers: filteredUsers,\n  };\n}\n","import {\n  type RefObject,\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n  useUnmountCleanup,\n} from '../../../lib/teact/teact';\nimport { setExtraStyles } from '../../../lib/teact/teact-dom';\n\nimport { requestForcedReflow, requestNextMutation } from '../../../lib/fasterdom/fasterdom';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../hooks/useThrottledCallback';\n\nexport interface PaneState {\n  element?: HTMLElement;\n  height: number;\n  isOpen?: boolean;\n}\n\n// Max slide transition duration\nconst CLOSE_DURATION = 450;\nconst RESIZE_THROTTLE = 100;\n\nexport default function useHeaderPane<RefType extends HTMLElement = HTMLDivElement>({\n  ref: providedRef,\n  isOpen,\n  isDisabled,\n  withResizeObserver,\n  onStateChange,\n} : {\n  ref?: RefObject<RefType | null>;\n  isOpen?: boolean;\n  isDisabled?: boolean;\n  withResizeObserver?: boolean;\n  onStateChange?: (state: PaneState) => void;\n}) {\n  const [shouldRender, setShouldRender] = useState(isOpen);\n  // eslint-disable-next-line no-null/no-null\n  const localRef = useRef<RefType>(null);\n  const ref = providedRef || localRef;\n\n  const lastHeightRef = useRef(0);\n\n  const reset = useLastCallback(() => {\n    setShouldRender(true);\n    onStateChange?.({\n      element: undefined,\n      height: 0,\n      isOpen: false,\n    });\n  });\n\n  useEffect(() => {\n    if (isDisabled) {\n      reset();\n    }\n  }, [isDisabled]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setShouldRender(true);\n    }\n  }, [isOpen]);\n\n  useUnmountCleanup(reset);\n\n  useTimeout(() => {\n    setShouldRender(false);\n  }, !isOpen ? CLOSE_DURATION : undefined);\n\n  // Should be `useCallback` to trigger effect on deps change\n  const handleUpdate = useCallback(() => {\n    const element = ref.current;\n    if (isDisabled || !element || !shouldRender) return;\n\n    if (!isOpen) {\n      onStateChange?.({\n        element,\n        height: 0,\n        isOpen: false,\n      });\n      return;\n    }\n\n    requestForcedReflow(() => {\n      const currentHeight = element.offsetHeight;\n      lastHeightRef.current = currentHeight;\n      return () => {\n        onStateChange?.({\n          element,\n          height: currentHeight,\n          isOpen,\n        });\n      };\n    });\n  }, [isOpen, shouldRender, isDisabled, ref, onStateChange]);\n\n  const handleResize = useThrottledCallback(() => {\n    const element = ref.current;\n    if (!element) return;\n\n    const newHeight = element.offsetHeight;\n    if (newHeight === lastHeightRef.current) {\n      return;\n    }\n\n    handleUpdate();\n  }, [handleUpdate, ref], RESIZE_THROTTLE, true);\n\n  useLayoutEffect(handleUpdate, [handleUpdate]);\n\n  useResizeObserver(ref, handleResize, !withResizeObserver || !shouldRender);\n\n  return {\n    shouldRender,\n    ref,\n  };\n}\n\nexport function applyAnimationState(list: PaneState[], noTransition = false) {\n  let cumulativeHeight = 0;\n  for (let i = 0; i < list.length; i++) {\n    const state = list[i];\n    const element = state.element;\n    if (!element) {\n      continue;\n    }\n\n    const shiftPx = `${cumulativeHeight}px`;\n\n    const apply = () => {\n      setExtraStyles(element, {\n        transform: `translateY(${state.isOpen ? shiftPx : `calc(${shiftPx} - 100%)`})`,\n        zIndex: String(-i),\n        transition: noTransition ? 'none' : '',\n      });\n    };\n\n    if (!element.dataset.isPanelOpen && state.isOpen && !noTransition) {\n      // Start animation right above its final position\n      setExtraStyles(element, {\n        transform: `translateY(calc(${shiftPx} - 100%))`,\n        zIndex: String(-i),\n        transition: 'none',\n      });\n      element.dataset.isPanelOpen = 'true';\n      requestNextMutation(apply);\n    } else {\n      apply();\n    }\n\n    cumulativeHeight += state.height;\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"EVLTkrt1\",\"preview\":\"V3HabdKr\",\"linkPreview\":\"ClGe8yij\",\"media\":\"WAItYc5d\",\"nonInteractive\":\"AQWPv0bP\",\"expired\":\"tprkr7qf\",\"expiredIcon\":\"nLA7VEhv\"};","import React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessageStoryData, ApiTypeStory } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaAreaOverlay from '../../story/mediaArea/MediaAreaOverlay';\n\nimport styles from './BaseStory.module.scss';\n\ninterface OwnProps {\n  story?: ApiTypeStory | ApiMessageStoryData;\n  isPreview?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n}\n\nfunction BaseStory({\n  story, isPreview, isProtected, isConnected,\n}: OwnProps) {\n  const { openStoryViewer, loadPeerStoriesByIds, showNotification } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n  const isExpired = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbnail = isLoaded ? (video ? video.thumbnail?.dataUri : story.content.photo?.thumbnail?.dataUri) : undefined;\n  const mediaUrl = useCurrentOrPrev(imgBlobUrl, true);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(Boolean(mediaUrl));\n  const blurredBackgroundRef = useCanvasBlur(\n    thumbnail,\n    isExpired && !isPreview,\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n\n  const fullClassName = buildClassName(\n    styles.root,\n    'media-inner',\n    (!isConnected || isExpired) && styles.nonInteractive,\n    isExpired && styles.expired,\n    isPreview && styles.preview,\n  );\n\n  useEffect(() => {\n    if (story && !(isLoaded || isExpired)) {\n      loadPeerStoriesByIds({ peerId: story.peerId, storyIds: [story.id] });\n    }\n  }, [story, isExpired, isLoaded]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpired) {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n      return;\n    }\n\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={isConnected ? handleClick : undefined}\n    >\n      {!isExpired && isPreview && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {shouldRender && (\n        <>\n          <img\n            src={mediaUrl}\n            alt=\"\"\n            className={buildClassName(styles.media, isPreview && styles.linkPreview, transitionClassNames)}\n            draggable={false}\n          />\n          {isLoaded && <MediaAreaOverlay story={story} className={transitionClassNames} />}\n        </>\n      )}\n      {isExpired && (\n        <span>\n          <Icon name=\"story-expired\" className={styles.expiredIcon} />\n          {lang('StoryExpiredSubtitle')}\n        </span>\n      )}\n      {Boolean(video?.duration) && (\n        <div className=\"message-media-duration\">\n          {formatMediaDuration(video!.duration)}\n        </div>\n      )}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default memo(BaseStory);\n","// extracted by mini-css-extract-plugin\nexport default {\"anchor\":\"IYu2f7FM\",\"mirrorAnchor\":\"GsTZawTE\",\"root\":\"McmbiWZE\",\"mirror\":\"wNvU2uqi\"};","import React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableEffect } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { type ObserveFn, useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOverlayPosition from './hooks/useOverlayPosition';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport Portal from '../../ui/Portal';\n\nimport styles from './MessageEffect.module.scss';\n\ntype OwnProps = {\n  messageId?: number;\n  isMirrored?: boolean;\n  effect: ApiAvailableEffect;\n  shouldPlay?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onStop?: VoidFunction;\n};\n\nconst EFFECT_SIZE = 256;\n\nconst MessageEffect = ({\n  messageId,\n  isMirrored,\n  effect,\n  shouldPlay,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onStop,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const anchorRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const canLoad = useIsIntersecting(anchorRef, observeIntersectionForLoading);\n  const canPlay = useIsIntersecting(anchorRef, observeIntersectionForPlaying);\n\n  const [isPlaying, startPlaying, stopPlaying] = useFlag();\n  const [isPositionUpdateRequired, requirePositionUpdate, resetPositionUpdate] = useFlag();\n\n  const effectHash = getEffectHash(effect);\n  const effectBlob = useMedia(effectHash, !canLoad);\n\n  const handleEnded = useLastCallback(() => {\n    stopPlaying();\n    onStop?.();\n  });\n\n  const updatePosition = useOverlayPosition({\n    anchorRef,\n    overlayRef: ref,\n    isMirrored,\n    isDisabled: !isPlaying,\n    isForMessageEffect: true,\n    id: effect.id,\n  });\n\n  useEffect(() => {\n    if (isPositionUpdateRequired) updatePosition();\n    resetPositionUpdate();\n  }, [updatePosition, resetPositionUpdate, isPositionUpdateRequired]);\n\n  useEffect(() => {\n    if (canPlay && shouldPlay && effectBlob) {\n      startPlaying();\n      requirePositionUpdate();\n    }\n  }, [canPlay, effectBlob, shouldPlay, updatePosition]);\n\n  const effectClassName = buildClassName(\n    styles.root,\n    isMirrored && styles.mirror,\n  );\n\n  return (\n    <div className={buildClassName(styles.anchor, isMirrored && styles.mirrorAnchor)} ref={anchorRef}>\n      {isPlaying && (\n        <Portal>\n          <AnimatedSticker\n            ref={ref}\n            key={`effect-${messageId ?? effect.id}`}\n            className={effectClassName}\n            tgsUrl={effectBlob}\n            size={EFFECT_SIZE}\n            play\n            isLowPriority\n            noLoop\n            forceAlways\n            onEnded={handleEnded}\n          />\n        </Portal>\n      )}\n    </div>\n  );\n};\n\nfunction getEffectHash(effect: ApiAvailableEffect) {\n  if (effect.effectAnimationId) {\n    return `sticker${effect.effectAnimationId}`;\n  }\n\n  return `sticker${effect.effectStickerId}?size=f`;\n}\n\nexport default memo(MessageEffect);\n","import React, { useEffect, useRef, useState } from '../../../lib/teact/teact';\n\nimport type { ApiMediaExtendedPreview, ApiPhoto } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ISettings } from '../../../types';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  getMediaFormat, getMediaThumbUri, getMediaTransferState, getPhotoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\nimport { calculateMediaDimensions, MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  photo: ApiPhoto | ApiMediaExtendedPreview;\n  isInWebPage?: boolean;\n  messageText?: string;\n  isOwn?: boolean;\n  observeIntersection?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  size?: 'inline' | 'pictogram';\n  shouldAffectAppendix?: boolean;\n  dimensions?: IMediaDimensions & { isSmall?: boolean };\n  asForwarded?: boolean;\n  nonInteractive?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  theme: ISettings['theme'];\n  className?: string;\n  clickArg?: T;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst Photo = <T,>({\n  id,\n  photo,\n  messageText,\n  isOwn,\n  observeIntersection,\n  noAvatars,\n  canAutoLoad,\n  isInSelectMode,\n  isSelected,\n  uploadProgress,\n  forcedWidth,\n  size = 'inline',\n  dimensions,\n  asForwarded,\n  nonInteractive,\n  shouldAffectAppendix,\n  isDownloading,\n  isProtected,\n  theme,\n  isInWebPage,\n  clickArg,\n  className,\n  onClick,\n  onCancelUpload,\n}: OwnProps<T>) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isPaidPreview = photo.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? photo.blobUrl : undefined;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = isLoadAllowed && isIntersecting && !isPaidPreview;\n  const {\n    mediaData, loadProgress,\n  } = useMediaWithLoadProgress(!isPaidPreview ? getPhotoMediaHash(photo, size) : undefined, !shouldLoad);\n  const fullMediaData = localBlobUrl || mediaData;\n\n  const withBlurredBackground = Boolean(forcedWidth);\n  const [withThumb] = useState(!fullMediaData);\n  const noThumb = Boolean(fullMediaData);\n  const thumbRef = useBlurredMediaThumbRef(photo, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const blurredBackgroundRef = useBlurredMediaThumbRef(photo, !withBlurredBackground);\n  const thumbDataUri = getMediaThumbUri(photo);\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(isPaidPreview || photo.isSpoiler);\n\n  useEffect(() => {\n    if (isPaidPreview || photo.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [isPaidPreview, photo]);\n\n  const {\n    loadProgress: downloadProgress,\n  } = useMediaWithLoadProgress(\n    !isPaidPreview ? getPhotoMediaHash(photo, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(photo, 'download') : undefined,\n  );\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    shouldLoad && !fullMediaData,\n    uploadProgress !== undefined,\n  );\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring,\n    noMountTransition: wasLoadDisabled,\n    className: 'slow',\n    withShouldRender: true,\n  });\n  const {\n    ref: downloadButtonRef,\n    shouldRender: shouldRenderDownloadButton,\n  } = useShowTransition({\n    isOpen: !fullMediaData && !isLoadAllowed,\n    withShouldRender: true,\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n    if (fullMediaData) {\n      const messageId = Number(contentEl.closest<HTMLDivElement>('.Message')!.dataset.messageId);\n      getCustomAppendixBg(fullMediaData, Boolean(isOwn), messageId, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    } else {\n      contentEl.classList.add('has-appendix-thumb');\n    }\n  }, [shouldAffectAppendix, fullMediaData, isOwn, isInSelectMode, isSelected, theme]);\n\n  const { width, height, isSmall } = dimensions || calculateMediaDimensions({\n    media: photo,\n    isOwn,\n    asForwarded,\n    noAvatars,\n    isMobile,\n    messageText,\n    isInWebPage,\n  });\n\n  const componentClassName = buildClassName(\n    'media-inner',\n    !isUploading && !nonInteractive && 'interactive',\n    isSmall && 'small-image',\n    (width === height || size === 'pictogram') && 'square-image',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = size === 'inline' ? `height: ${height}px;${dimensionsStyle}` : undefined;\n\n  return (\n    <div\n      id={id}\n      ref={ref}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {fullMediaData && (\n        <img\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          alt=\"\"\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n          draggable={!isProtected}\n        />\n      )}\n      {withThumb && (\n        <canvas ref={thumbRef} className=\"thumbnail\" />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      {shouldRenderSpinner && !shouldRenderDownloadButton && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner progress={transferProgress} onClick={isUploading ? handleClick : undefined} />\n        </div>\n      )}\n      {shouldRenderDownloadButton && <Icon ref={downloadButtonRef} name=\"download\" />}\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {isTransferring && (\n        <span className=\"message-transfer-progress\">{Math.round(transferProgress * 100)}%</span>\n      )}\n    </div>\n  );\n};\n\nexport default Photo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useEffect, useLayoutEffect,\n  useRef, useSignal, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport {\n  getMediaFormat,\n  getMessageMediaThumbDataUri,\n  getVideoMediaHash,\n  hasMessageTtl,\n} from '../../../global/helpers';\nimport { stopCurrentAudio } from '../../../util/audioPlayer';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport safePlay from '../../../util/safePlay';\nimport { ROUND_VIDEO_DIMENSIONS_PX } from '../../common/helpers/mediaDimensions';\n\nimport { useThrottledSignal } from '../../../hooks/useAsyncResolvers';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport Button from '../../ui/Button';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './RoundVideo.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  className?: string;\n  canAutoLoad?: boolean;\n  isDownloading?: boolean;\n  origin?: 'oneTimeModal';\n  observeIntersection?: ObserveFn;\n  onStop?: NoneToVoidFunction;\n  onReadMedia?: NoneToVoidFunction;\n  onHideTranscription?: (isHidden: boolean) => void;\n  isTranscriptionError?: boolean;\n  canTranscribe?: boolean;\n  isTranscribed?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscribing?: boolean;\n};\n\nconst PROGRESS_CENTER = ROUND_VIDEO_DIMENSIONS_PX / 2;\nconst PROGRESS_MARGIN = 6;\nconst PROGRESS_CIRCUMFERENCE = (PROGRESS_CENTER - PROGRESS_MARGIN) * 2 * Math.PI;\nconst PROGRESS_THROTTLE = 16; // Min period needed for `playerEl.currentTime` to update\n\nlet stopPrevious: NoneToVoidFunction;\n\nconst RoundVideo: FC<OwnProps> = ({\n  message,\n  className,\n  canAutoLoad,\n  isDownloading,\n  origin,\n  observeIntersection,\n  onStop,\n  onReadMedia,\n  isTranscriptionError,\n  isTranscribed,\n  canTranscribe,\n  onHideTranscription,\n  isTranscriptionHidden,\n  isTranscribing,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const playerRef = useRef<HTMLVideoElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const circleRef = useRef<SVGCircleElement>(null);\n\n  const { cancelMediaDownload, openOneTimeMediaModal, transcribeAudio } = getActions();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const video = message.content.video!;\n\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersecting);\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'inline'),\n    !shouldLoad,\n    getMediaFormat(video, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'download'),\n    !isDownloading,\n    ApiMediaFormat.BlobUrl,\n  );\n\n  const [isPlayerReady, markPlayerReady] = useFlag();\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === 'oneTimeModal';\n  const shouldRenderSpoiler = hasTtl && !isInOneTimeModal;\n  const hasThumb = Boolean(getMessageMediaThumbDataUri(message));\n  const noThumb = !hasThumb || isPlayerReady || shouldRenderSpoiler;\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const isTransferring = (isLoadAllowed && !isPlayerReady) || isDownloading;\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring,\n    noMountTransition: wasLoadDisabled,\n    withShouldRender: true,\n  });\n\n  const [isActivated, setIsActivated] = useState(false);\n\n  const [getProgress, setProgress] = useSignal(0);\n  const getThrottledProgress = useThrottledSignal(getProgress, PROGRESS_THROTTLE);\n\n  useEffect(() => {\n    if (!isActivated) {\n      return;\n    }\n\n    const playerEl = playerRef.current!;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  }, [setProgress, isActivated, getThrottledProgress]);\n\n  useLayoutEffect(() => {\n    if (!isActivated || !circleRef.current) {\n      return;\n    }\n\n    const strokeDashOffset = PROGRESS_CIRCUMFERENCE - getThrottledProgress() * PROGRESS_CIRCUMFERENCE;\n    circleRef.current.setAttribute('stroke-dashoffset', strokeDashOffset.toString());\n  }, [isActivated, getThrottledProgress]);\n\n  const shouldPlay = Boolean(mediaData && isIntersecting);\n\n  const stopPlaying = useLastCallback(() => {\n    if (!playerRef.current) {\n      return;\n    }\n\n    setIsActivated(false);\n    setProgress(0);\n    safePlay(playerRef.current);\n  });\n\n  const capturePlaying = useLastCallback(() => {\n    stopPrevious?.();\n    stopPrevious = stopPlaying;\n  });\n\n  const togglePlaying = useLastCallback(() => {\n    const playerEl = playerRef.current!;\n    if (isActivated) {\n      if (playerEl.paused) {\n        safePlay(playerEl);\n        stopCurrentAudio();\n      } else {\n        playerEl.pause();\n      }\n    } else {\n      capturePlaying();\n      // Pause is a workaround for iOS Safari – otherwise it stops video after several frames\n      playerEl.pause();\n      playerEl.currentTime = 0;\n      safePlay(playerEl);\n      stopCurrentAudio();\n      setIsActivated(true);\n    }\n  });\n\n  useEffect(() => {\n    if (!isInOneTimeModal) {\n      return;\n    }\n    togglePlaying();\n  }, [isInOneTimeModal]);\n\n  const handleClick = useLastCallback((event) => {\n    if (event.target.closest('.transcribe-button')) {\n      return;\n    }\n\n    if (!mediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (hasTtl && !isInOneTimeModal) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    togglePlaying();\n  });\n\n  const handleTimeUpdate = useLastCallback((e: React.UIEvent<HTMLVideoElement>) => {\n    const playerEl = e.currentTarget;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  function renderPlayWrapper() {\n    return (\n      <div className=\"play-wrapper\">\n        <Button\n          color=\"dark\"\n          round\n          size=\"smaller\"\n          className=\"play\"\n          nonInteractive\n        >\n          <Icon name=\"play\" />\n        </Button>\n        <Icon name=\"view-once\" />\n      </div>\n    );\n  }\n\n  const handleButtonClick = useLastCallback(() => {\n    if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n      onHideTranscription(!isTranscriptionHidden);\n    } else if (!isTranscribing) {\n      handleTranscribe();\n    }\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName('RoundVideo', 'media-inner', isInOneTimeModal && 'non-interactive', className)}\n      onClick={handleClick}\n    >\n      {mediaData && (\n        <div className=\"video-wrapper\">\n          {shouldRenderSpoiler && (\n            <MediaSpoiler\n              isVisible\n              thumbDataUri={thumbDataUri}\n              width={ROUND_VIDEO_DIMENSIONS_PX}\n              height={ROUND_VIDEO_DIMENSIONS_PX}\n              className=\"media-spoiler\"\n            />\n          )}\n          <OptimizedVideo\n            canPlay={shouldPlay}\n            ref={playerRef}\n            src={mediaData}\n            className=\"full-media\"\n            width={ROUND_VIDEO_DIMENSIONS_PX}\n            height={ROUND_VIDEO_DIMENSIONS_PX}\n            autoPlay={!shouldRenderSpoiler}\n            disablePictureInPicture\n            muted={!isActivated}\n            loop={!isActivated}\n            playsInline\n            isPriority\n            onEnded={isActivated ? onStop ?? stopPlaying : undefined}\n            onTimeUpdate={isActivated ? handleTimeUpdate : undefined}\n            onReady={markPlayerReady}\n          />\n        </div>\n      )}\n      {!shouldRenderSpoiler && (\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n          style={`width: ${ROUND_VIDEO_DIMENSIONS_PX}px; height: ${ROUND_VIDEO_DIMENSIONS_PX}px`}\n        />\n      )}\n      <div className=\"progress\">\n        {isActivated && (\n          <svg width={ROUND_VIDEO_DIMENSIONS_PX} height={ROUND_VIDEO_DIMENSIONS_PX}>\n            <circle\n              ref={circleRef}\n              cx={PROGRESS_CENTER}\n              cy={PROGRESS_CENTER}\n              r={PROGRESS_CENTER - PROGRESS_MARGIN}\n              className=\"progress-circle\"\n              transform={`rotate(-90, ${PROGRESS_CENTER}, ${PROGRESS_CENTER})`}\n              stroke-dasharray={PROGRESS_CIRCUMFERENCE}\n              stroke-dashoffset={PROGRESS_CIRCUMFERENCE}\n            />\n          </svg>\n        )}\n      </div>\n      {shouldRenderSpinner && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner progress={isDownloading ? downloadProgress : loadProgress} />\n        </div>\n      )}\n      {shouldRenderSpoiler && !shouldRenderSpinner && renderPlayWrapper()}\n      {!mediaData && !isLoadAllowed && (\n        <Icon name=\"download\" />\n      )}\n      {!isInOneTimeModal && (\n        <div className=\"message-media-duration\">\n          {isActivated ? formatMediaDuration(playerRef.current!.currentTime) : formatMediaDuration(video.duration)}\n          {(!isActivated || playerRef.current!.paused) && <Icon name=\"muted\" />}\n        </div>\n      )}\n      {canTranscribe && (\n        <Button\n          onClick={handleButtonClick}\n          className=\"transcribe-button\"\n        >\n          {isTranscribed || isTranscriptionError ? <Icon name=\"down\" /> : <Icon name=\"transcribe\" />}\n          {isTranscribing && (\n            <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n              <rect\n                className=\"loading-rect\"\n                fill=\"transparent\"\n                width=\"32\"\n                height=\"24\"\n                stroke-width=\"3\"\n                stroke-linejoin=\"round\"\n                rx=\"6\"\n                ry=\"6\"\n                stroke=\"white\"\n                stroke-dashoffset=\"1\"\n                stroke-dasharray=\"32,68\"\n              />\n            </svg>\n          )}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default RoundVideo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type {\n  ApiSponsoredMessage,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './MessageContextMenu.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  anchor: IAnchorPosition;\n  message: ApiSponsoredMessage;\n  triggerRef: React.RefObject<HTMLElement>;\n  shouldSkipAbout?: boolean;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  onAboutAdsClick: NoneToVoidFunction;\n  onSponsoredHide: NoneToVoidFunction;\n  onSponsorInfo?: NoneToVoidFunction;\n  onSponsoredReport?: NoneToVoidFunction;\n};\n\nconst SponsoredMessageContextMenu: FC<OwnProps> = ({\n  isOpen,\n  message,\n  anchor,\n  triggerRef,\n  shouldSkipAbout,\n  onClose,\n  onCloseAnimationEnd,\n  onAboutAdsClick,\n  onSponsoredHide,\n  onSponsorInfo,\n  onSponsoredReport,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getRootElement = useLastCallback(() => document.body);\n\n  const isSeparatorNeeded = message.sponsorInfo || !shouldSkipAbout || message.canReport;\n\n  return (\n    <Menu\n      ref={menuRef}\n      isOpen={isOpen}\n      anchor={anchor}\n      withPortal\n      className=\"with-menu-transitions\"\n      getLayout={getLayout}\n      getTriggerElement={getTriggerElement}\n      getMenuElement={getMenuElement}\n      getRootElement={getRootElement}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {message.sponsorInfo && onSponsorInfo && (\n        <MenuItem icon=\"channel\" onClick={onSponsorInfo}>{lang('SponsoredMessageSponsor')}</MenuItem>\n      )}\n      {!shouldSkipAbout && (\n        <MenuItem icon=\"info\" onClick={onAboutAdsClick}>\n          {lang(message.canReport ? 'AboutRevenueSharingAds' : 'SponsoredMessageInfo')}\n        </MenuItem>\n      )}\n      {message.canReport && onSponsoredReport && (\n        <MenuItem icon=\"hand-stop\" onClick={onSponsoredReport}>\n          {lang('ReportAd')}\n        </MenuItem>\n      )}\n      {isSeparatorNeeded && <MenuSeparator />}\n      <MenuItem icon=\"close-circle\" onClick={onSponsoredHide}>\n        {lang('HideAd')}\n      </MenuItem>\n    </Menu>\n  );\n};\n\nexport default memo(SponsoredMessageContextMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSponsoredMessage } from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport SponsoredMessageContextMenu from './SponsoredMessageContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  message: ApiSponsoredMessage;\n  anchor: IAnchorPosition;\n  triggerRef: React.RefObject<HTMLElement>;\n  shouldSkipAbout?: boolean;\n  onItemClick?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\nconst SponsoredMessageContextMenuContainer: FC<OwnProps> = ({\n  isOpen,\n  message,\n  anchor,\n  triggerRef,\n  shouldSkipAbout,\n  onItemClick,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    openAboutAdsModal,\n    showDialog,\n    reportSponsoredMessage,\n    hideSponsoredMessages,\n  } = getActions();\n\n  const { ref } = useShowTransition({\n    isOpen,\n    onCloseAnimationEnd,\n  });\n\n  const handleItemClick = useLastCallback(() => {\n    onItemClick?.();\n    onClose();\n  });\n\n  const handleAboutAdsOpen = useLastCallback(() => {\n    openAboutAdsModal({ chatId: message.chatId });\n    handleItemClick();\n  });\n\n  const handleSponsoredHide = useLastCallback(() => {\n    hideSponsoredMessages();\n    handleItemClick();\n  });\n\n  const handleSponsorInfo = useLastCallback(() => {\n    showDialog({\n      data: {\n        message: [message.sponsorInfo, message.additionalInfo].join('\\n'),\n      },\n    });\n    handleItemClick();\n  });\n\n  const handleReportSponsoredMessage = useLastCallback(() => {\n    reportSponsoredMessage({ peerId: message.chatId, randomId: message.randomId });\n    handleItemClick();\n  });\n\n  if (!anchor) {\n    return undefined;\n  }\n\n  return (\n    <div ref={ref} className=\"ContextMenuContainer\">\n      <SponsoredMessageContextMenu\n        isOpen={isOpen}\n        anchor={anchor}\n        triggerRef={triggerRef}\n        message={message}\n        shouldSkipAbout={shouldSkipAbout}\n        onClose={onClose}\n        onCloseAnimationEnd={onClose}\n        onAboutAdsClick={handleAboutAdsOpen}\n        onSponsoredHide={handleSponsoredHide}\n        onSponsorInfo={handleSponsorInfo}\n        onSponsoredReport={handleReportSponsoredMessage}\n      />\n    </div>\n  );\n};\n\nexport default memo(SponsoredMessageContextMenuContainer);\n","import React, { useEffect, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaExtendedPreview, ApiVideo } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport {\n  getMediaFormat, getMediaThumbUri, getMediaTransferState, getVideoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { calculateExtendedPreviewDimensions, calculateVideoDimensions } from '../../common/helpers/mediaDimensions';\nimport { MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useUnsupportedMedia from '../../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  video: ApiVideo | ApiMediaExtendedPreview;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  dimensions?: IMediaDimensions;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  className?: string;\n  clickArg?: T;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst Video = <T,>({\n  id,\n  video,\n  isOwn,\n  isInWebPage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  uploadProgress,\n  forcedWidth,\n  dimensions,\n  asForwarded,\n  isDownloading,\n  isProtected,\n  className,\n  clickArg,\n  onClick,\n  onCancelUpload,\n}: OwnProps<T>) => {\n  const { cancelMediaDownload } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const isPaidPreview = video.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? video.blobUrl : undefined;\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(isPaidPreview || video.isSpoiler);\n\n  useEffect(() => {\n    if (isPaidPreview || video.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [isPaidPreview, video]);\n\n  const isIntersectingForLoading = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isIntersectingForPlaying = (\n    useIsIntersecting(ref, observeIntersectionForPlaying)\n    && isIntersectingForLoading\n  );\n  const wasIntersectedRef = useRef(isIntersectingForLoading);\n  if (isIntersectingForPlaying && !wasIntersectedRef.current) {\n    wasIntersectedRef.current = true;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersectingForLoading && !isPaidPreview);\n  const [isPlayAllowed, setIsPlayAllowed] = useState(Boolean(canAutoPlay && !isSpoilerShown));\n\n  const fullMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'inline') : undefined;\n  const [isFullMediaPreloaded] = useState(Boolean(fullMediaHash && mediaLoader.getFromMemory(fullMediaHash)));\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    fullMediaHash,\n    !shouldLoad,\n    !isPaidPreview ? getMediaFormat(video, 'inline') : undefined,\n  );\n  const fullMediaData = localBlobUrl || mediaData;\n  const [isPlayerReady, markPlayerReady] = useFlag();\n\n  const thumbDataUri = getMediaThumbUri(video);\n  const hasThumb = Boolean(thumbDataUri);\n  const withBlurredBackground = Boolean(forcedWidth);\n\n  const isInline = fullMediaData && wasIntersectedRef.current;\n\n  const isUnsupported = useUnsupportedMedia(videoRef, true, !isInline);\n\n  const previewMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'preview') : undefined;\n  const [isPreviewPreloaded] = useState(Boolean(previewMediaHash && mediaLoader.getFromMemory(previewMediaHash)));\n  const canLoadPreview = isIntersectingForLoading;\n  const previewBlobUrl = useMedia(previewMediaHash, !canLoadPreview);\n  const shouldHidePreview = isPlayerReady && !isUnsupported;\n  const previewRef = useMediaTransition<HTMLImageElement>((hasThumb || previewBlobUrl) && !shouldHidePreview);\n\n  const noThumb = Boolean(!hasThumb || previewBlobUrl || isPlayerReady);\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const blurredBackgroundRef = useBlurredMediaThumbRef(video, !withBlurredBackground);\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    !isPaidPreview ? getVideoMediaHash(video, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(video, 'download') : undefined,\n  );\n\n  const { isUploading, isTransferring, transferProgress } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    (shouldLoad && !isPlayerReady && !isFullMediaPreloaded) || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring && !isUnsupported,\n    noMountTransition: wasLoadDisabled,\n    withShouldRender: true,\n  });\n  const {\n    ref: playButtonRef,\n  } = useShowTransition({\n    isOpen: Boolean((isLoadAllowed || fullMediaData) && !isPlayAllowed && !shouldRenderSpinner),\n  });\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    setPlayProgress(Math.max(0, e.currentTarget.currentTime - 1));\n  });\n\n  const duration = (Number.isFinite(videoRef.current?.duration) && !isUnsupported\n    ? videoRef.current?.duration : video.duration) || 0;\n\n  const {\n    width, height,\n  } = dimensions || (\n    isPaidPreview\n      ? calculateExtendedPreviewDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n      : calculateVideoDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n  );\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>, isFromSpinner?: boolean) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!isPaidPreview && isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (fullMediaData && !isPlayAllowed) {\n      setIsPlayAllowed(true);\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    if (isFromSpinner && shouldLoad && !isPlayerReady && !isFullMediaPreloaded) {\n      setIsLoadAllowed(false);\n      e.stopPropagation();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  const handleClickOnSpinner = useLastCallback(\n    (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n      handleClick(e, true);\n    },\n  );\n\n  const componentClassName = buildClassName(\n    'media-inner dark',\n    !isUploading && 'interactive',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = `height: ${height}px;${dimensionsStyle}`;\n\n  return (\n    <div\n      ref={ref}\n      id={id}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : (e) => handleClick(e)}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {isInline && (\n        <OptimizedVideo\n          ref={videoRef}\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          canPlay={isPlayAllowed && isIntersectingForPlaying && !isUnsupported}\n          muted\n          loop\n          playsInline\n          disablePictureInPicture\n          draggable={!isProtected}\n          onTimeUpdate={handleTimeUpdate}\n          onReady={markPlayerReady}\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        />\n      )}\n      <img\n        ref={previewRef}\n        src={previewBlobUrl}\n        className={buildClassName('thumbnail', withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px;` : undefined}\n        draggable={!isProtected}\n      />\n      {hasThumb && !isPreviewPreloaded && (\n        <canvas ref={thumbRef} className=\"thumbnail\" />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      <Icon ref={playButtonRef} name=\"large-play\" />\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {shouldRenderSpinner && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner\n            progress={transferProgress}\n            onClick={handleClickOnSpinner}\n          />\n        </div>\n      )}\n      {!isLoadAllowed && !fullMediaData && (\n        <Icon name=\"download\" />\n      )}\n      {isTransferring && (!isUnsupported || isDownloading) ? (\n        <span className=\"message-transfer-progress\">\n          {(isUploading || isDownloading) ? `${Math.round(transferProgress * 100)}%` : '...'}\n        </span>\n      ) : (\n        <div className=\"message-media-duration\">\n          {!isPaidPreview && video.isGif ? 'GIF' : formatMediaDuration(Math.max(duration - playProgress, 0))}\n          {isUnsupported && <Icon name=\"message-failed\" className=\"playback-failed\" />}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Video;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage, ApiTypeStory } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { AudioOrigin, type ISettings } from '../../../types';\n\nimport { getMessageWebPage } from '../../../global/helpers';\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport trimText from '../../../util/trimText';\nimport { getGiftAttributes, getStickerFromGift } from '../../common/helpers/gifts';\nimport renderText from '../../common/helpers/renderText';\nimport { calculateMediaDimensions } from './helpers/mediaDimensions';\nimport { getWebpageButtonLangKey } from './helpers/webpageType';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Audio from '../../common/Audio';\nimport Document from '../../common/Document';\nimport EmojiIconBackground from '../../common/embedded/EmojiIconBackground';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport RadialPatternBackground from '../../common/profile/RadialPatternBackground';\nimport SafeLink from '../../common/SafeLink';\nimport StickerView from '../../common/StickerView';\nimport Button from '../../ui/Button';\nimport BaseStory from './BaseStory';\nimport Photo from './Photo';\nimport Video from './Video';\n\nimport './WebPage.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\nconst WEBPAGE_STORY_TYPE = 'telegram_story';\nconst WEBPAGE_GIFT_TYPE = 'telegram_nft';\nconst STICKER_SIZE = 80;\nconst EMOJI_SIZE = 38;\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  inPreview?: boolean;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n  backgroundEmojiId?: string;\n  theme: ISettings['theme'];\n  story?: ApiTypeStory;\n  shouldWarnAboutSvg?: boolean;\n  autoLoadFileMaxSizeMb?: number;\n  onAudioPlay?: NoneToVoidFunction;\n  onMediaClick?: NoneToVoidFunction;\n  onCancelMediaTransfer?: NoneToVoidFunction;\n  onContainerClick?: ((e: React.MouseEvent) => void);\n  isEditing?: boolean;\n};\ntype StateProps = {\n  canPlayAnimatedEmojis: boolean;\n};\nconst STAR_GIFT_STICKER_SIZE = 120;\n\nconst WebPage: FC<OwnProps & StateProps> = ({\n  message,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  inPreview,\n  asForwarded,\n  isDownloading = false,\n  isProtected,\n  isConnected,\n  story,\n  theme,\n  backgroundEmojiId,\n  shouldWarnAboutSvg,\n  autoLoadFileMaxSizeMb,\n  onMediaClick,\n  onContainerClick,\n  onAudioPlay,\n  onCancelMediaTransfer,\n  isEditing,\n}) => {\n  const { openUrl, openTelegramLink } = getActions();\n  const webPage = getMessageWebPage(message);\n  const { isMobile } = useAppLayout();\n  // eslint-disable-next-line no-null/no-null\n  const stickersRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const giftStickersRef = useRef<HTMLDivElement>(null);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const handleMediaClick = useLastCallback(() => {\n    onMediaClick!();\n  });\n\n  const handleContainerClick = useLastCallback((e: React.MouseEvent) => {\n    onContainerClick?.(e);\n  });\n\n  const handleOpenTelegramLink = useLastCallback(() => {\n    if (!webPage) return;\n\n    openTelegramLink({\n      url: webPage.url,\n    });\n  });\n\n  const { story: storyData, stickers } = webPage || {};\n\n  useEnsureStory(storyData?.peerId, storyData?.id, story);\n\n  const hasCustomColor = stickers?.isWithTextColor || stickers?.documents?.[0]?.shouldUseTextColor;\n  const customColor = useDynamicColorListener(stickersRef, !hasCustomColor);\n\n  if (!webPage) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    photo,\n    video,\n    audio,\n    type,\n    document,\n    mediaSize,\n  } = webPage;\n  const isStory = type === WEBPAGE_STORY_TYPE;\n  const isGift = type === WEBPAGE_GIFT_TYPE;\n  const isExpiredStory = story && 'isDeleted' in story;\n\n  const quickButtonLangKey = !inPreview && !isExpiredStory ? getWebpageButtonLangKey(type) : undefined;\n  const quickButtonTitle = quickButtonLangKey && lang(quickButtonLangKey);\n\n  const truncatedDescription = trimText(description, MAX_TEXT_LENGTH);\n  const isArticle = Boolean(truncatedDescription || title || siteName);\n  let isSquarePhoto = Boolean(stickers);\n  if (isArticle && webPage?.photo && !webPage.video && !webPage.document) {\n    const { width, height } = calculateMediaDimensions({\n      media: webPage.photo,\n      isOwn: message.isOutgoing,\n      isInWebPage: true,\n      asForwarded,\n      noAvatars,\n      isMobile,\n    });\n    isSquarePhoto = (width === height || mediaSize === 'small') && mediaSize !== 'large';\n  }\n  const isMediaInteractive = (photo || video) && onMediaClick && !isSquarePhoto;\n\n  const className = buildClassName(\n    'WebPage',\n    inPreview && 'in-preview',\n    !isEditing && inPreview && 'interactive',\n    isSquarePhoto && 'with-square-photo',\n    !photo && !video && !inPreview && 'without-media',\n    video && 'with-video',\n    !isArticle && 'no-article',\n    document && 'with-document',\n    quickButtonTitle && 'with-quick-button',\n    isGift && 'with-gift',\n  );\n\n  function renderQuickButton(caption: string) {\n    return (\n      <Button\n        className=\"WebPage--quick-button\"\n        size=\"tiny\"\n        color=\"translucent\"\n        isRectangular\n        noForcedUpperCase\n        onClick={handleOpenTelegramLink}\n      >\n        {caption}\n      </Button>\n    );\n  }\n\n  function renderStarGiftUnique() {\n    const gift = webPage?.gift;\n    if (!gift || gift.type !== 'starGiftUnique') return undefined;\n\n    const sticker = getStickerFromGift(gift)!;\n    const attributes = getGiftAttributes(gift);\n    const { backdrop, pattern, model } = attributes || {};\n\n    if (!backdrop || !pattern || !model) return undefined;\n\n    const backgroundColors = [backdrop.centerColor, backdrop.edgeColor];\n\n    return (\n      <div\n        className=\"web-page-gift web-page-centered web-page-unique\"\n        onClick={() => handleOpenTelegramLink()}\n      >\n        <div className=\"web-page-unique-background-wrapper\">\n          <RadialPatternBackground\n            className=\"web-page-unique-background\"\n            backgroundColors={backgroundColors}\n            patternColor={backdrop.patternColor}\n            patternIcon={pattern.sticker}\n          />\n        </div>\n        <div ref={giftStickersRef} key={sticker.id} className=\"WebPage--unique-sticker\">\n          <StickerView\n            containerRef={giftStickersRef}\n            sticker={sticker}\n            size={STAR_GIFT_STICKER_SIZE}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <PeerColorWrapper\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={oldLang.isRtl ? 'rtl' : 'auto'}\n      onClick={handleContainerClick}\n    >\n      <div className={buildClassName(\n        'WebPage--content',\n        isStory && 'is-story',\n        isGift && 'is-gift',\n      )}\n      >\n        {backgroundEmojiId && (\n          <EmojiIconBackground\n            emojiDocumentId={backgroundEmojiId}\n            className=\"WebPage--background-icons\"\n          />\n        )}\n        {isStory && (\n          <BaseStory story={story} isProtected={isProtected} isConnected={isConnected} isPreview />\n        )}\n        {isGift && !inPreview && (\n          renderStarGiftUnique()\n        )}\n        {isArticle && (\n          <div\n            className={buildClassName('WebPage-text', !inPreview && 'WebPage-text_interactive')}\n            onClick={!inPreview ? () => openUrl({ url, shouldSkipModal: true }) : undefined}\n          >\n            <SafeLink className=\"site-name\" url={url} text={siteName || displayUrl} />\n            {(!inPreview || isGift) && title && (\n              <p className=\"site-title\">{renderText(title)}</p>\n            )}\n            {truncatedDescription && !isGift && (\n              <p className=\"site-description\">{renderText(truncatedDescription, ['emoji', 'br'])}</p>\n            )}\n          </div>\n        )}\n        {photo && !isGift && !video && !document && (\n          <Photo\n            photo={photo}\n            isOwn={message.isOutgoing}\n            isInWebPage\n            observeIntersection={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            size={isSquarePhoto ? 'pictogram' : 'inline'}\n            asForwarded={asForwarded}\n            nonInteractive={!isMediaInteractive}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            theme={theme}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && video && (\n          <Video\n            video={video}\n            isOwn={message.isOutgoing}\n            isInWebPage\n            observeIntersectionForLoading={observeIntersectionForLoading!}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            canAutoPlay={canAutoPlay}\n            asForwarded={asForwarded}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && audio && (\n          <Audio\n            theme={theme}\n            message={message}\n            origin={AudioOrigin.Inline}\n            noAvatars={noAvatars}\n            isDownloading={isDownloading}\n            onPlay={onAudioPlay}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && document && (\n          <Document\n            document={document}\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n            onMediaClick={handleMediaClick}\n            onCancelUpload={onCancelMediaTransfer}\n            isDownloading={isDownloading}\n            shouldWarnAboutSvg={shouldWarnAboutSvg}\n          />\n        )}\n        {!inPreview && stickers && (\n          <div\n            ref={stickersRef}\n            className={buildClassName(\n              'media-inner', 'square-image', stickers.isEmoji && 'WebPage--emoji-grid', 'WebPage--stickers',\n            )}\n          >\n            {stickers.documents.map((sticker) => (\n              <div key={sticker.id} className=\"WebPage--sticker\">\n                <StickerView\n                  containerRef={stickersRef}\n                  sticker={sticker}\n                  shouldLoop\n                  size={stickers.isEmoji ? EMOJI_SIZE : STICKER_SIZE}\n                  customColor={customColor}\n                  observeIntersectionForPlaying={observeIntersectionForPlaying}\n                  observeIntersectionForLoading={observeIntersectionForLoading}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n        {inPreview && displayUrl && !isArticle && (\n          <div className=\"WebPage-text\">\n            <p className=\"site-name\">{displayUrl}</p>\n            <p className=\"site-description\">{oldLang('Chat.Empty.LinkPreview')}</p>\n          </div>\n        )}\n      </div>\n      {quickButtonTitle && renderQuickButton(quickButtonTitle)}\n    </PeerColorWrapper>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(WebPage));\n","import type { RegularLangKey } from '../../../../types/language';\n\n// https://github.com/telegramdesktop/tdesktop/blob/3da787791f6d227f69b32bf4003bc6071d05e2ac/Telegram/SourceFiles/history/view/history_view_view_button.cpp#L51\nexport function getWebpageButtonLangKey(type?: string): RegularLangKey | undefined {\n  switch (type) {\n    case 'telegram_channel_request':\n    case 'telegram_megagroup_request':\n    case 'telegram_chat_request':\n      return 'ViewButtonRequestJoin';\n    case 'telegram_message':\n      return 'ViewButtonMessage';\n    case 'telegram_bot':\n      return 'ViewButtonBot';\n    case 'telegram_voicechat':\n      return 'ViewButtonVoiceChat';\n    case 'telegram_livestream':\n      return 'ViewButtonVoiceChatChannel';\n    case 'telegram_megagroup':\n    case 'telegram_chat':\n      return 'ViewButtonGroup';\n    case 'telegram_channel':\n      return 'ViewButtonChannel';\n    case 'telegram_user':\n      return 'ViewButtonUser';\n    case 'telegram_botapp':\n      return 'ViewButtonBotApp';\n    case 'telegram_chatlist':\n      return 'ViewChatList';\n    case 'telegram_story':\n      return 'ViewButtonStory';\n    case 'telegram_channel_boost':\n    case 'telegram_group_boost':\n      return 'ViewButtonBoost';\n    case 'telegram_stickerset':\n      return 'ViewButtonStickerset';\n    case 'telegram_nft':\n      return 'ViewButtonGiftUnique';\n    default:\n      return undefined;\n  }\n}\n","import type { ISettings } from '../../../../types';\n\nimport { MAX_WORKERS, requestMediaWorker } from '../../../../util/launchMediaWorkers';\n\nconst SELECTED_APPENDIX_COLORS = {\n  dark: {\n    outgoing: 'rgb(135,116,225)',\n    incoming: 'rgb(33,33,33)',\n  },\n  light: {\n    outgoing: 'rgb(238,255,222)',\n    incoming: 'rgb(255,255,255)',\n  },\n};\n\nexport default function getCustomAppendixBg(\n  src: string, isOwn: boolean, id: number, isSelected?: boolean, theme?: ISettings['theme'],\n) {\n  if (isSelected) {\n    return Promise.resolve(SELECTED_APPENDIX_COLORS[theme || 'light'][isOwn ? 'outgoing' : 'incoming']);\n  }\n\n  return requestMediaWorker({\n    name: 'offscreen-canvas:getAppendixColorFromImage',\n    args: [src, isOwn],\n  }, Math.round(id) % MAX_WORKERS);\n}\n","import type { ApiMediaExtendedPreview, ApiPhoto, ApiVideo } from '../../../../api/types';\n\nimport {\n  calculateExtendedPreviewDimensions,\n  calculateInlineImageDimensions,\n  calculateVideoDimensions,\n  REM,\n} from '../../../common/helpers/mediaDimensions';\n\nconst SMALL_IMAGE_THRESHOLD = 12;\nconst MIN_MESSAGE_LENGTH_FOR_BLUR = 40;\nexport const MIN_MEDIA_WIDTH_WITH_TEXT = 20 * REM;\nconst MIN_MEDIA_WIDTH = SMALL_IMAGE_THRESHOLD * REM;\nexport const MIN_MEDIA_HEIGHT = 5 * REM;\n\nexport function getMinMediaWidth(text?: string, hasCommentButton?: boolean) {\n  return (text?.length ?? 0) > MIN_MESSAGE_LENGTH_FOR_BLUR || hasCommentButton\n    ? MIN_MEDIA_WIDTH_WITH_TEXT\n    : MIN_MEDIA_WIDTH;\n}\n\nexport function calculateMediaDimensions({\n  media,\n  messageText,\n  isOwn,\n  isInWebPage,\n  asForwarded,\n  noAvatars,\n  isMobile,\n} : {\n  media: ApiPhoto | ApiVideo | ApiMediaExtendedPreview;\n  messageText?: string;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  asForwarded?: boolean;\n  noAvatars?: boolean;\n  isMobile?: boolean;\n}) {\n  const isPhoto = media.mediaType === 'photo';\n  const isVideo = media.mediaType === 'video';\n  const isWebPagePhoto = isPhoto && isInWebPage;\n  const isWebPageVideo = isVideo && isInWebPage;\n  const { width, height } = isPhoto\n    ? calculateInlineImageDimensions(media, isOwn, asForwarded, isWebPagePhoto, noAvatars, isMobile)\n    : isVideo ? calculateVideoDimensions(media, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile)\n      : calculateExtendedPreviewDimensions(media, isOwn, asForwarded, isInWebPage, noAvatars, isMobile);\n\n  const minMediaWidth = getMinMediaWidth(messageText);\n\n  let stretchFactor = 1;\n  if (width < minMediaWidth && minMediaWidth - width < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = minMediaWidth / width;\n  }\n  if (height * stretchFactor < MIN_MEDIA_HEIGHT && MIN_MEDIA_HEIGHT - height * stretchFactor < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = MIN_MEDIA_HEIGHT / height;\n  }\n\n  const finalWidth = Math.round(width * stretchFactor);\n  const finalHeight = Math.round(height * stretchFactor);\n\n  return {\n    width: finalWidth,\n    height: finalHeight,\n    isSmall: finalWidth < minMediaWidth || finalHeight < MIN_MEDIA_HEIGHT,\n  };\n}\n","import { useLayoutEffect, useMemo, useRef } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport cycleRestrict from '../util/cycleRestrict';\nimport { preloadImage } from '../util/files';\nimport { MAX_WORKERS, requestMediaWorker } from '../util/launchMediaWorkers';\nimport useLastCallback from './useLastCallback';\n\nconst RADIUS_RATIO = 0.1; // Use 10% of the smallest dimension as the blur radius\n\nlet lastWorkerIndex = -1;\n\nexport default function useOffscreenCanvasBlur(\n  thumbData?: string, // data URI or blob URL\n  isDisabled = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const workerIndex = useMemo(() => cycleRestrict(MAX_WORKERS, ++lastWorkerIndex), []);\n  const offscreenRef = useRef<OffscreenCanvas>();\n\n  const blurThumb = useLastCallback(async (canvas: HTMLCanvasElement, uri: string) => {\n    const image = await preloadImage(uri);\n    if (!image) {\n      return;\n    }\n\n    requestMutation(() => {\n      canvas.width = image.width;\n      canvas.height = image.height;\n\n      offscreenRef.current = canvas.transferControlToOffscreen();\n\n      const radius = Math.ceil(Math.min(image.width, image.height) * RADIUS_RATIO);\n\n      requestMediaWorker({\n        name: 'offscreen-canvas:blurThumb',\n        args: [offscreenRef.current, uri, radius],\n        transferables: [offscreenRef.current],\n      }, workerIndex);\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!thumbData || isDisabled || offscreenRef.current) return;\n\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    blurThumb(canvas, thumbData);\n  }, [blurThumb, isDisabled, thumbData]);\n\n  return canvasRef;\n}\n","import { getMediaThumbUri, type MediaWithThumbs } from '../../../../global/helpers';\n\nimport useOffscreenCanvasBlur from '../../../../hooks/useOffscreenCanvasBlur';\n\ntype CanvasBlurReturnType = ReturnType<typeof useOffscreenCanvasBlur>;\n\nexport default function useBlurredMediaThumbRef(\n  forcedUri: string | undefined, isDisabled: boolean,\n): CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(media: MediaWithThumbs, isDisabled?: boolean) : CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(\n  media: MediaWithThumbs | string | undefined,\n  isDisabled?: boolean,\n) {\n  const dataUri = media ? typeof media === 'string' ? media : getMediaThumbUri(media) : undefined;\n\n  return useOffscreenCanvasBlur(dataUri, isDisabled);\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ChatTranslatedMessages } from '../../../../types';\n\nimport { throttle } from '../../../../util/schedulers';\n\nconst MESSAGE_LIMIT_PER_REQUEST = 20;\nconst THROTTLE_DELAY = 500;\nconst PENDING_TRANSLATIONS = new Map<string, Map<string, number[]>>();\n\nexport default function useMessageTranslation(\n  chatTranslations: ChatTranslatedMessages | undefined,\n  chatId?: string,\n  messageId?: number,\n  requestedLanguageCode?: string,\n) {\n  const messageTranslation = requestedLanguageCode && messageId\n    ? chatTranslations?.byLangCode[requestedLanguageCode]?.[messageId] : undefined;\n\n  const { isPending, text } = messageTranslation || {};\n\n  useEffect(() => {\n    if (!chatId || !messageId) return;\n\n    if (!text && isPending === undefined && requestedLanguageCode) {\n      addPendingTranslation(chatId, messageId, requestedLanguageCode);\n    }\n  }, [chatId, text, isPending, messageId, requestedLanguageCode]);\n\n  if (!chatId || !messageId) {\n    return {\n      isPending: false,\n      translatedText: undefined,\n    };\n  }\n\n  return {\n    isPending,\n    translatedText: text,\n  };\n}\n\nconst throttledProcessPending = throttle(processPending, THROTTLE_DELAY);\n\nfunction processPending() {\n  const { translateMessages } = getActions();\n  let hasUnprocessed = false;\n  PENDING_TRANSLATIONS.forEach((chats, toLanguageCode) => {\n    chats.forEach((messageIds, chatId) => {\n      const messageIdsToTranslate = messageIds.slice(0, MESSAGE_LIMIT_PER_REQUEST);\n\n      if (messageIdsToTranslate.length < messageIds.length) {\n        hasUnprocessed = true;\n      }\n\n      translateMessages({ chatId, messageIds: messageIdsToTranslate, toLanguageCode });\n\n      removePendingTranslations(chatId, messageIdsToTranslate, toLanguageCode);\n    });\n  });\n\n  if (hasUnprocessed) {\n    throttledProcessPending();\n  }\n}\n\nfunction addPendingTranslation(\n  chatId: string,\n  messageId: number,\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode) || new Map<string, number[]>();\n  const messageIds = languageTranslations.get(chatId) || [];\n\n  if (messageIds.includes(messageId)) {\n    throttledProcessPending();\n    return;\n  }\n\n  messageIds.push(messageId);\n  languageTranslations.set(chatId, messageIds);\n  PENDING_TRANSLATIONS.set(toLanguageCode, languageTranslations);\n\n  getActions().markMessagesTranslationPending({ chatId, messageIds, toLanguageCode });\n\n  throttledProcessPending();\n}\n\nfunction removePendingTranslations(\n  chatId: string,\n  messageIds: number[],\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode);\n  if (!languageTranslations?.size) {\n    PENDING_TRANSLATIONS.delete(toLanguageCode);\n    return;\n  }\n\n  const oldMessageIds = languageTranslations.get(chatId);\n  if (!oldMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    return;\n  }\n\n  const newMessageIds = oldMessageIds.filter((id) => !messageIds.includes(id));\n\n  if (!newMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    if (!languageTranslations.size) {\n      PENDING_TRANSLATIONS.delete(toLanguageCode);\n    }\n    return;\n  }\n\n  languageTranslations.set(chatId, newMessageIds);\n}\n","import { type RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst OFFSET_X = REM;\n\nexport default function useOverlayPosition({\n  anchorRef,\n  overlayRef,\n  isMirrored,\n  isForMessageEffect,\n  isDisabled,\n  id,\n} : {\n  anchorRef: RefObject<HTMLDivElement>;\n  overlayRef: RefObject<HTMLDivElement>;\n  isMirrored?: boolean;\n  isForMessageEffect?: boolean;\n  isDisabled?: boolean;\n  id?: string;\n}) {\n  const updatePosition = useLastCallback(() => {\n    const element = overlayRef.current;\n    const anchor = anchorRef.current;\n    if (!element || !anchor) {\n      return;\n    }\n\n    const anchorRect = anchor.getBoundingClientRect();\n    const elementRect = element.getBoundingClientRect();\n    const windowWidth = window.innerWidth;\n\n    requestMutation(() => {\n      const anchorCenterY = anchorRect.top + anchorRect.height / 2;\n      const anchorBottomY = anchorRect.bottom;\n      const y = isForMessageEffect ? anchorBottomY : anchorCenterY;\n      element.style.top = `${y - elementRect.height / 2}px`;\n\n      if (isMirrored) {\n        element.style.left = `${anchorRect.left - OFFSET_X}px`;\n      } else {\n        element.style.right = `${windowWidth - anchorRect.right - OFFSET_X}px`;\n      }\n    });\n  });\n\n  useEffect(() => {\n    if (isDisabled) return;\n    updatePosition();\n  }, [isDisabled, id]);\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const messagesContainer = anchorRef.current!.closest<HTMLDivElement>('.MessageList')!;\n    if (!messagesContainer) return undefined;\n\n    messagesContainer.addEventListener('scroll', updatePosition, { passive: true });\n\n    return () => {\n      messagesContainer.removeEventListener('scroll', updatePosition);\n    };\n  }, [isDisabled, anchorRef]);\n\n  return updatePosition;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"uGUjDZKl\",\"custom\":\"oc1hpMwv\",\"visible\":\"kqcWe4tf\",\"custom-animated\":\"sx6RTuAU\",\"customAnimated\":\"sx6RTuAU\",\"custom-fade-in\":\"_p445E1b\",\"customFadeIn\":\"_p445E1b\",\"chosen\":\"M62HGuIV\",\"static-icon\":\"MZ2tH980\",\"staticIcon\":\"MZ2tH980\",\"lock\":\"WMpEr5XQ\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../../lib/teact/teact';\n\nimport type { ApiReaction, ApiReactionCustomEmoji, ApiReactionPaid } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport CustomEmoji from '../../../common/CustomEmoji';\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiReactionPaid;\n  chosen?: boolean;\n  isReady?: boolean;\n  noAppearAnimation?: boolean;\n  style?: string;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n};\n\nconst ReactionSelectorCustomReaction: FC<OwnProps> = ({\n  reaction,\n  chosen,\n  isReady,\n  noAppearAnimation,\n  style,\n  isLocked,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const handleClick = useLastCallback(() => {\n    if (reaction.type === 'paid') {\n      onSendPaidReaction?.();\n      return;\n    }\n\n    onToggleReaction(reaction);\n  });\n\n  const {\n    isContextMenuOpen,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, reaction.type !== 'paid', undefined, undefined, undefined, true);\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onShowPaidReactionModal?.();\n\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, onShowPaidReactionModal, handleContextMenuHide, isContextMenuOpen]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        styles.custom,\n        chosen && reaction.type !== 'paid' && styles.chosen,\n        !noAppearAnimation && isReady && styles.customAnimated,\n        noAppearAnimation && styles.visible,\n      )}\n      ref={ref}\n      style={style}\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n    >\n      {reaction.type === 'paid' ? (\n        <AnimatedIcon\n          tgsUrl={LOCAL_TGS_URLS.StarReaction}\n          size={REACTION_SIZE}\n          noLoop={false}\n        />\n      ) : (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          size={REACTION_SIZE}\n        />\n      )}\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorCustomReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../../common/AnimatedSticker';\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiAvailableReaction;\n  isReady?: boolean;\n  chosen?: boolean;\n  noAppearAnimation?: boolean;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst ReactionSelectorReaction: FC<OwnProps> = ({\n  reaction,\n  isReady,\n  noAppearAnimation,\n  chosen,\n  isLocked,\n  onToggleReaction,\n}) => {\n  const mediaAppearData = useMedia(`sticker${reaction.appearAnimation?.id}`, !isReady || noAppearAnimation);\n  const mediaData = useMedia(`document${reaction.selectAnimation?.id}`, !isReady || noAppearAnimation);\n  const staticIconData = useMedia(`document${reaction.staticIcon?.id}`, !noAppearAnimation);\n  const [isAnimationLoaded, markAnimationLoaded] = useFlag();\n\n  const [isFirstPlay, , unmarkIsFirstPlay] = useFlag(true);\n  const [isActivated, activate, deactivate] = useFlag();\n\n  function handleClick() {\n    onToggleReaction(reaction.reaction);\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, chosen && styles.chosen)}\n      onClick={handleClick}\n      onMouseEnter={isReady && !isFirstPlay ? activate : undefined}\n    >\n      {noAppearAnimation && (\n        <img\n          className={styles.staticIcon}\n          src={staticIconData}\n          alt={reaction.reaction.emoticon}\n          draggable={false}\n        />\n      )}\n      {!isAnimationLoaded && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.appearAnimation?.id}\n          tgsUrl={mediaAppearData}\n          play={isFirstPlay}\n          noLoop\n          size={REACTION_SIZE}\n          onEnded={unmarkIsFirstPlay}\n          forceAlways\n        />\n      )}\n      {!isFirstPlay && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.selectAnimation?.id}\n          tgsUrl={mediaData}\n          play={isActivated}\n          noLoop\n          size={REACTION_SIZE}\n          onLoad={markAnimationLoaded}\n          onEnded={deactivate}\n          forceAlways\n        />\n      )}\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChatReactions,\n  ApiReaction,\n  ApiReactionCount,\n  ApiReactionCustomEmoji,\n  ApiReactionPaid,\n} from '../../../../api/types';\nimport type { IAnchorPosition } from '../../../../types';\n\nimport {\n  canSendReaction, getReactionKey, isSameReaction, sortReactions,\n} from '../../../../global/helpers';\nimport buildClassName, { createClassNameBuilder } from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\nimport Button from '../../../ui/Button';\nimport Link from '../../../ui/Link';\nimport ReactionSelectorCustomReaction from './ReactionSelectorCustomReaction';\nimport ReactionSelectorReaction from './ReactionSelectorReaction';\n\nimport './ReactionSelector.scss';\n\ntype RenderableReactions = (ApiAvailableReaction | ApiReactionCustomEmoji | ApiReactionPaid)[];\n\ntype OwnProps = {\n  enabledReactions?: ApiChatReactions;\n  isPrivate?: boolean;\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  effectReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  currentReactions?: ApiReactionCount[];\n  reactionsLimit?: number;\n  isReady?: boolean;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n  className?: string;\n  isInSavedMessages?: boolean;\n  isInStoryViewer?: boolean;\n  isForEffects?: boolean;\n  isWithPaidReaction?: boolean;\n  onClose?: NoneToVoidFunction;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n  onShowMore: (position: IAnchorPosition) => void;\n};\n\nconst cn = createClassNameBuilder('ReactionSelector');\nconst REACTIONS_AMOUNT = 7;\nconst FADE_IN_DELAY = 20;\n\nconst ReactionSelector: FC<OwnProps> = ({\n  allAvailableReactions,\n  topReactions,\n  defaultTagReactions,\n  enabledReactions,\n  currentReactions,\n  reactionsLimit,\n  isPrivate,\n  isReady,\n  canPlayAnimatedEmojis,\n  className,\n  isCurrentUserPremium,\n  isInSavedMessages,\n  isInStoryViewer,\n  isForEffects,\n  effectReactions,\n  isWithPaidReaction,\n  onClose,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n  onShowMore,\n}) => {\n  const { openPremiumModal } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  const areReactionsLocked = isInSavedMessages && !isCurrentUserPremium && !isInStoryViewer;\n\n  const shouldUseCurrentReactions = Boolean(reactionsLimit\n    && currentReactions && currentReactions.length >= reactionsLimit);\n\n  const availableReactions = useMemo(() => {\n    const reactions = (() => {\n      if (shouldUseCurrentReactions) return currentReactions?.map((reaction) => reaction.reaction);\n      if (isForEffects) return effectReactions;\n      if (isInSavedMessages) return defaultTagReactions;\n      if (enabledReactions?.type === 'some') return enabledReactions.allowed;\n      return allAvailableReactions?.map((reaction) => reaction.reaction);\n    })();\n\n    const filteredReactions: RenderableReactions = reactions?.map((reaction) => {\n      const isCustomReaction = reaction.type === 'custom';\n      const availableReaction = allAvailableReactions?.find((r) => isSameReaction(r.reaction, reaction));\n\n      if (isForEffects) return availableReaction;\n\n      if ((!isCustomReaction && !availableReaction) || availableReaction?.isInactive) return undefined;\n\n      if (!isPrivate && !shouldUseCurrentReactions\n         && (!enabledReactions || !canSendReaction(reaction, enabledReactions))) {\n        return undefined;\n      }\n\n      return isCustomReaction ? reaction : availableReaction;\n    }).filter(Boolean) || [];\n\n    const sortedReactions = sortReactions(filteredReactions, topReactions);\n    if (isWithPaidReaction) {\n      sortedReactions.unshift({ type: 'paid' });\n    }\n    return sortedReactions;\n  }, [\n    allAvailableReactions, currentReactions, defaultTagReactions, enabledReactions, isInSavedMessages, isPrivate,\n    topReactions, isForEffects, effectReactions, shouldUseCurrentReactions, isWithPaidReaction,\n  ]);\n\n  const reactionsToRender = useMemo(() => {\n    // Component can fit one more if we do not need show more button\n    return availableReactions.length === REACTIONS_AMOUNT + 1\n      ? availableReactions\n      : availableReactions.slice(0, REACTIONS_AMOUNT);\n  }, [availableReactions]);\n  const withMoreButton = reactionsToRender.length < availableReactions.length;\n\n  const userReactionIndexes = useMemo(() => {\n    const chosenReactions = currentReactions?.filter(({ chosenOrder }) => chosenOrder !== undefined) || [];\n    return new Set(chosenReactions.map(({ reaction }) => (\n      reactionsToRender.findIndex((r) => r && isSameReaction('reaction' in r ? r.reaction : r, reaction))\n    )));\n  }, [currentReactions, reactionsToRender]);\n\n  const handleShowMoreClick = useLastCallback(() => {\n    const bound = ref.current?.getBoundingClientRect() || { x: 0, y: 0 };\n    onShowMore({\n      x: bound.x,\n      y: bound.y,\n    });\n  });\n\n  const handleOpenPremiumModal = useLastCallback(() => {\n    onClose?.();\n    openPremiumModal({\n      initialSection: 'saved_tags',\n    });\n  });\n\n  const hintText = useMemo(() => {\n    if (isInSavedMessages) {\n      if (!isCurrentUserPremium) {\n        const text = lang('lng_subscribe_tag_about');\n        const parts = text.split('{link}');\n        return (\n          <span>\n            {parts[0]}\n            <Link isPrimary onClick={handleOpenPremiumModal}>\n              {lang('lng_subscribe_tag_link')}\n            </Link>\n            {parts[1]}\n          </span>\n        );\n      }\n\n      return lang('SavedTagReactionsHint2');\n    }\n\n    if (isInStoryViewer) {\n      return lang('StoryReactionsHint');\n    }\n\n    if (isForEffects) {\n      return lang('AddEffectMessageHint');\n    }\n\n    return undefined;\n  }, [isCurrentUserPremium, isInSavedMessages, isInStoryViewer, lang, isForEffects]);\n\n  if (!reactionsToRender.length) return undefined;\n\n  return (\n    <div className={buildClassName(cn('&'), className)} ref={ref}>\n      <div className={cn('bubble-small', lang.isRtl && 'isRtl')} />\n      <div className={cn('items-wrapper')}>\n        <div className={cn('bubble-big', lang.isRtl && 'isRtl')} />\n        <div className={cn('items')}>\n          {hintText && <div className={cn('hint')}>{hintText}</div>}\n          <div className={cn('reactions')} dir={lang.isRtl ? 'rtl' : undefined}>\n            {reactionsToRender.map((reaction, i) => (\n              'reaction' in reaction ? (\n                <ReactionSelectorReaction\n                  key={getReactionKey(reaction.reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                />\n              ) : (\n                <ReactionSelectorCustomReaction\n                  key={getReactionKey(reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  onSendPaidReaction={onSendPaidReaction}\n                  onShowPaidReactionModal={onShowPaidReactionModal}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                  style={`--_animation-delay: ${(REACTIONS_AMOUNT - i) * FADE_IN_DELAY}ms`}\n                />\n              )\n            ))}\n            {withMoreButton && (\n              <Button\n                color=\"translucent\"\n                className={cn('show-more')}\n                onClick={handleShowMoreClick}\n              >\n                <Icon name=\"down\" />\n              </Button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ReactionSelector);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectCurrentChat, selectUser } from '../../global/selectors';\nimport renderText from '../common/helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  userId?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  contactName?: string;\n};\n\nconst DeleteMemberModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  userId,\n  contactName,\n  onClose,\n}) => {\n  const { deleteChatMember } = getActions();\n\n  const lang = useOldLang();\n\n  const handleDeleteChatMember = useCallback(() => {\n    deleteChatMember({ chatId: chat!.id, userId: userId! });\n    onClose();\n  }, [chat, deleteChatMember, onClose, userId]);\n\n  if (!chat || !userId) {\n    return undefined;\n  }\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('GroupRemoved.Remove')}\n      textParts={renderText(lang('PeerInfo.Confirm.RemovePeer', contactName))}\n      confirmLabel={lang('lng_box_remove')}\n      confirmHandler={handleDeleteChatMember}\n      confirmIsDestructive\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const chat = selectCurrentChat(global);\n    const user = userId && selectUser(global, userId);\n    const contactName = user ? getUserFirstOrLastName(user) : undefined;\n\n    return {\n      chat,\n      contactName,\n    };\n  },\n)(DeleteMemberModal));\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay! > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Gi8Nokbl\",\"header\":\"H01lE7mv\",\"title\":\"VQbs04hT\",\"caption\":\"X7bBlGdi\",\"table\":\"s5beXqqL\",\"tableCell\":\"gvrp3KoR\",\"tableHeading\":\"IHb3ZATQ\",\"tableValue\":\"zAPFdKbZ\",\"tableSecondaryValue\":\"_mYEmh_u\",\"value\":\"idLrmbhS\",\"negative\":\"SLfwGHQC\",\"decimalPart\":\"ZAfXkuWL\",\"decimalUsdPart\":\"HRXb_S2M\",\"toncoin\":\"it39BC_c\"};","import type { ReactNode } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type {\n  ApiBoostStatistics, ApiChannelMonetizationStatistics,\n  ApiChannelStatistics, ApiGroupStatistics, ApiPostStatistics, StatisticsOverviewItem,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatFullDate } from '../../../util/dates/dateFormat';\nimport { formatInteger, formatIntegerCompact } from '../../../util/textFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './StatisticsOverview.module.scss';\n\ntype OverviewCell = {\n  name: string;\n  title: string;\n  isPercentage?: boolean;\n  withAbsoluteValue?: boolean;\n  isPlain?: boolean;\n  isApproximate?: boolean;\n};\n\nconst CHANNEL_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'followers', title: 'ChannelStats.Overview.Followers' },\n    { name: 'enabledNotifications', title: 'ChannelStats.Overview.EnabledNotifications', isPercentage: true },\n  ],\n  [\n    { name: 'viewsPerPost', title: 'ChannelStats.Overview.ViewsPerPost' },\n    { name: 'viewsPerStory', title: 'ChannelStats.Overview.ViewsPerStory' },\n  ],\n  [\n    { name: 'sharesPerPost', title: 'ChannelStats.Overview.SharesPerPost' },\n    { name: 'sharesPerStory', title: 'ChannelStats.Overview.SharesPerStory' },\n  ],\n  [\n    { name: 'reactionsPerPost', title: 'ChannelStats.Overview.ReactionsPerPost' },\n    { name: 'reactionsPerStory', title: 'ChannelStats.Overview.ReactionsPerStory' },\n  ],\n];\n\nconst GROUP_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'members', title: 'Stats.GroupMembers' },\n    { name: 'messages', title: 'Stats.GroupMessages' },\n  ],\n  [\n    { name: 'viewers', title: 'Stats.GroupViewers' },\n    { name: 'posters', title: 'Stats.GroupPosters' },\n  ],\n];\n\nconst MESSAGE_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Stats.Message.Views', isPlain: true },\n    { name: 'publicForwards', title: 'Stats.Message.PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    {\n      name: 'forwardsCount', title: 'Stats.Message.PrivateShares', isPlain: true, isApproximate: true,\n    },\n  ],\n];\n\nconst STORY_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Channel.Stats.Overview.Views', isPlain: true },\n    { name: 'publicForwards', title: 'PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    { name: 'forwardsCount', title: 'PrivateShares', isPlain: true },\n  ],\n];\n\nconst BOOST_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'level', title: 'Stats.Boosts.Level', isPlain: true },\n    {\n      name: 'premiumSubscribers',\n      title: 'Stats.Boosts.PremiumSubscribers',\n      isPercentage: true,\n      isApproximate: true,\n      withAbsoluteValue: true,\n    },\n  ],\n  [\n    { name: 'boosts', title: 'Stats.Boosts.ExistingBoosts', isPlain: true },\n    { name: 'remainingBoosts', title: 'Stats.Boosts.BoostsToLevelUp', isPlain: true },\n  ],\n];\n\ntype StatisticsType = 'channel' | 'group' | 'message' | 'boost' | 'story' | 'monetization';\n\nexport type OwnProps = {\n  type: StatisticsType;\n  title?: string;\n  className?: string;\n  isToncoin?: boolean;\n  statistics:\n  ApiChannelStatistics |\n  ApiGroupStatistics |\n  ApiPostStatistics |\n  ApiBoostStatistics |\n  ApiChannelMonetizationStatistics;\n  subtitle?: ReactNode;\n};\n\nconst StatisticsOverview: FC<OwnProps> = ({\n  title,\n  type,\n  statistics,\n  isToncoin,\n  className,\n  subtitle,\n}) => {\n  const lang = useOldLang();\n\n  const renderOverviewItemValue = ({ change, percentage }: StatisticsOverviewItem) => {\n    if (!change) {\n      return undefined;\n    }\n\n    const isChangeNegative = Number(change) < 0;\n\n    return (\n      <span className={buildClassName(styles.value, isChangeNegative && styles.negative)}>\n        {isChangeNegative ? `-${formatIntegerCompact(Math.abs(change))}` : `+${formatIntegerCompact(change)}`}\n        {percentage && (\n          <>\n            {' '}\n            ({percentage}%)\n          </>\n        )}\n      </span>\n    );\n  };\n\n  const renderBalanceCell = (balance: number, usdRate: number, text: string) => {\n    const [integerTonPart, decimalTonPart] = balance.toFixed(4).split('.');\n    const [integerUsdPart, decimalUsdPart] = (balance * usdRate).toFixed(2).split('.');\n    return (\n      <div>\n        <Icon className={styles.toncoin} name=\"toncoin\" />\n        <b className={styles.tableValue}>\n          {integerTonPart}<span className={styles.decimalPart}>.{decimalTonPart}</span>\n        </b>\n        {' '}\n        <span className={styles.tableHeading}>\n          ≈ ${integerUsdPart}<span className={styles.decimalUsdPart}>.{decimalUsdPart}</span>\n        </span>\n        <h3 className={styles.tableHeading}>{lang(text)}</h3>\n      </div>\n    );\n  };\n\n  const { period } = (statistics as ApiGroupStatistics);\n  const { balances, usdRate } = (statistics as ApiChannelMonetizationStatistics);\n\n  const schema = getSchemaByType(type);\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      <div className={styles.header}>\n        {title && (\n          <div className={styles.title}>\n            {title}\n          </div>\n        )}\n\n        {period && (\n          <div className={styles.caption}>\n            {formatFullDate(lang, period.minDate * 1000)} — {formatFullDate(lang, period.maxDate * 1000)}\n          </div>\n        )}\n      </div>\n\n      <table className={styles.table}>\n        {isToncoin ? (\n          <tr>\n            <td className={styles.tableCell}>\n              {renderBalanceCell(balances?.availableBalance || 0, usdRate || 0, 'lng_channel_earn_available')}\n              {renderBalanceCell(balances?.currentBalance || 0, usdRate || 0, 'lng_channel_earn_reward')}\n              {renderBalanceCell(balances?.overallRevenue || 0, usdRate || 0, 'lng_channel_earn_total')}\n            </td>\n          </tr>\n        ) : schema.map((row) => (\n          <tr>\n            {row.map((cell: OverviewCell) => {\n              const field = (statistics as any)[cell.name];\n\n              if (cell.isPlain) {\n                return (\n                  <td className={styles.tableCell}>\n                    <b className={styles.tableValue}>\n                      {`${cell.isApproximate ? '≈' : ''}${formatInteger(field)}`}\n                    </b>\n                    <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              if (cell.isPercentage) {\n                return (\n                  <td className={styles.tableCell}>\n                    {cell.withAbsoluteValue && (\n                      <span className={styles.tableValue}>\n                        {`${cell.isApproximate ? '≈' : ''}${formatInteger(field.part)}`}\n                      </span>\n                    )}\n                    <span className={cell.withAbsoluteValue ? styles.tableSecondaryValue : styles.tableValue}>\n                      {field.percentage}%\n                    </span>\n                    <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              return (\n                <td className={styles.tableCell}>\n                  <b className={styles.tableValue}>\n                    {formatIntegerCompact(field.current)}\n                  </b>\n                  {' '}\n                  {renderOverviewItemValue(field)}\n                  <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                </td>\n              );\n            })}\n          </tr>\n        ))}\n      </table>\n\n      {subtitle}\n    </div>\n  );\n};\n\nfunction getSchemaByType(type: StatisticsType) {\n  switch (type) {\n    case 'group':\n      return GROUP_OVERVIEW;\n    case 'message':\n      return MESSAGE_OVERVIEW;\n    case 'boost':\n      return BOOST_OVERVIEW;\n    case 'story':\n      return STORY_OVERVIEW;\n    case 'channel':\n    default:\n      return CHANNEL_OVERVIEW;\n  }\n}\n\nexport default memo(StatisticsOverview);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport { StoryViewerOrigin } from '../../types';\n\nimport { getPeerTitle, isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  peer: ApiPeer;\n  isArchived?: boolean;\n}\n\nfunction StoryRibbonButton({ peer, isArchived }: OwnProps) {\n  const {\n    openChat,\n    openChatWithInfo,\n    openStoryViewer,\n    toggleStoriesHidden,\n  } = getActions();\n\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isSelf = 'isSelf' in peer && peer.isSelf;\n  const isChannel = !isUserId(peer.id);\n\n  useStoryPreloader(peer.id);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.story-peer-context-menu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true, isDense: true }));\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen) return;\n\n    openStoryViewer({ peerId: peer.id, origin: StoryViewerOrigin.StoryRibbon });\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  const handleSavedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'stories' });\n  });\n\n  const handleArchivedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'storiesArchive' });\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleOpenProfile = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleArchivePeer = useLastCallback(() => {\n    toggleStoriesHidden({ peerId: peer.id, isHidden: !isArchived });\n  });\n\n  return (\n    <div\n      ref={ref}\n      role=\"button\"\n      data-peer-id={peer.id}\n      tabIndex={0}\n      className={styles.peer}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      <Avatar\n        peer={peer}\n        withStory\n        storyViewerOrigin={StoryViewerOrigin.StoryRibbon}\n        storyViewerMode=\"full\"\n      />\n      <div className={buildClassName(styles.name, peer.hasUnreadStories && styles.name_hasUnreadStory)}>\n        {isSelf ? lang('MyStory') : getPeerTitle(lang, peer)}\n      </div>\n      {contextMenuAnchor !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          className={buildClassName('story-peer-context-menu', styles.contextMenu)}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {isSelf ? (\n            <>\n              <MenuItem onClick={handleSavedStories} icon=\"play-story\">\n                {lang('StoryList.Context.SavedStories')}\n              </MenuItem>\n              <MenuItem onClick={handleArchivedStories} icon=\"archive\">\n                {lang('StoryList.Context.ArchivedStories')}\n              </MenuItem>\n            </>\n          ) : (\n            <>\n              {!isChannel && (\n                <MenuItem onClick={handleOpenChat} icon=\"message\">\n                  {lang('SendMessageTitle')}\n                </MenuItem>\n              )}\n              {isChannel ? (\n                <MenuItem onClick={handleOpenProfile} icon=\"channel\">\n                  {lang('ChatList.ContextOpenChannel')}\n                </MenuItem>\n              ) : (\n                <MenuItem onClick={handleOpenProfile} icon=\"user\">\n                  {lang('StoryList.Context.ViewProfile')}\n                </MenuItem>\n              )}\n              <MenuItem\n                onClick={handleArchivePeer}\n                icon={isArchived ? 'unarchive' : 'archive'}\n              >\n                {lang(isArchived ? 'StoryList.Context.Unarchive' : 'StoryList.Context.Archive')}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryRibbonButton);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StoryRibbonButton from './StoryRibbonButton';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  className?: string;\n  isClosing?: boolean;\n}\n\ninterface StateProps {\n  orderedPeerIds: string[];\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n}\n\nfunction StoryRibbon({\n  isArchived,\n  className,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  isClosing,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  const fullClassName = buildClassName(\n    styles.root,\n    !orderedPeerIds.length && styles.hidden,\n    isClosing && styles.closing,\n    className,\n    'no-scrollbar',\n  );\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useHorizontalScroll(ref, getIsMobile());\n\n  return (\n    <div\n      ref={ref}\n      id=\"StoryRibbon\"\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {orderedPeerIds.map((peerId) => {\n        const peer = usersById[peerId] || chatsById[peerId];\n\n        if (!peer) {\n          return undefined;\n        }\n\n        return (\n          <StoryRibbonButton\n            key={peerId}\n            peer={peer}\n            isArchived={isArchived}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isArchived }): StateProps => {\n    const { orderedPeerIds: { active, archived } } = global.stories;\n    const usersById = global.users.byId;\n    const chatsById = global.chats.byId;\n\n    return {\n      orderedPeerIds: isArchived ? archived : active,\n      usersById,\n      chatsById,\n    };\n  },\n)(StoryRibbon));\n","import React, {\n  beginHeavyAnimation, memo, useEffect, useMemo,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { GlobalState } from '../../global/types';\n\nimport { ANIMATION_END_DELAY, PREVIEW_AVATAR_COUNT } from '../../config';\nimport { selectIsForumPanelOpen, selectPerformanceSettingsValue, selectTabState } from '../../global/selectors';\nimport { animateClosing, animateOpening, ANIMATION_DURATION } from './helpers/ribbonAnimation';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\n\nimport styles from './StoryToggler.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  canShow?: boolean;\n}\n\ninterface StateProps {\n  currentUserId: string;\n  orderedPeerIds: string[];\n  isShown: boolean;\n  isForumPanelOpen?: boolean;\n  withAnimation?: boolean;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n  peerStories: GlobalState['stories']['byPeerId'];\n}\n\nconst PRELOAD_PEERS = 5;\n\nfunction StoryToggler({\n  currentUserId,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  canShow,\n  isShown,\n  isForumPanelOpen,\n  isArchived,\n  withAnimation,\n  peerStories,\n}: OwnProps & StateProps) {\n  const { toggleStoryRibbon } = getActions();\n\n  const lang = useOldLang();\n\n  const peers = useMemo(() => {\n    if (orderedPeerIds.length === 1) {\n      return [usersById[orderedPeerIds[0]] || chatsById[orderedPeerIds[0]]];\n    }\n\n    return orderedPeerIds\n      .map((id) => usersById[id] || chatsById[id])\n      .filter((peer) => peer && peer.id !== currentUserId)\n      .slice(0, PREVIEW_AVATAR_COUNT)\n      .reverse();\n  }, [currentUserId, orderedPeerIds, usersById, chatsById]);\n\n  const closeFriends = useMemo(() => {\n    if (!peers?.length) return {};\n    return peers.reduce((acc, peer) => {\n      const stories = peerStories[peer.id];\n      if (!stories) return acc;\n\n      const isCloseFriend = stories.orderedIds.some((id) => {\n        const story = stories.byId[id];\n        if (!story || !('isForCloseFriends' in story)) return false;\n        const isRead = stories.lastReadId && story.id <= stories.lastReadId;\n        return story.isForCloseFriends && !isRead;\n      });\n\n      acc[peer.id] = isCloseFriend;\n      return acc;\n    }, {} as Record<string, boolean>);\n  }, [peerStories, peers]);\n\n  const preloadPeerIds = useMemo(() => {\n    return orderedPeerIds.slice(0, PRELOAD_PEERS);\n  }, [orderedPeerIds]);\n\n  useStoryPreloader(preloadPeerIds);\n\n  const isVisible = canShow && isShown;\n  // For some reason, setting 'slow' here also fixes scroll freezes on iOS when collapsing Story Ribbon\n  const { ref, shouldRender } = useShowTransition<HTMLButtonElement>({\n    isOpen: isVisible,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  useEffect(() => {\n    if (!withAnimation || isForumPanelOpen) return;\n    if (isVisible) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(isArchived);\n    } else {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(isArchived);\n    }\n  }, [isArchived, isVisible, withAnimation, isForumPanelOpen]);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <button\n      ref={ref}\n      type=\"button\"\n      id=\"StoryToggler\"\n      className={styles.root}\n      aria-label={lang('Chat.Context.Peer.OpenStory')}\n      onClick={() => toggleStoryRibbon({ isShown: true, isArchived })}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {peers.map((peer) => (\n        <Avatar\n          key={peer.id}\n          peer={peer}\n          size=\"tiny\"\n          className={styles.avatar}\n          withStorySolid\n          forceFriendStorySolid={closeFriends[peer.id]}\n        />\n      ))}\n    </button>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { isArchived }): StateProps => {\n  const { orderedPeerIds: { archived, active }, byPeerId } = global.stories;\n  const { storyViewer: { isRibbonShown, isArchivedRibbonShown } } = selectTabState(global);\n  const isForumPanelOpen = selectIsForumPanelOpen(global);\n  const withAnimation = selectPerformanceSettingsValue(global, 'storyRibbonAnimations');\n\n  return {\n    currentUserId: global.currentUserId!,\n    orderedPeerIds: isArchived ? archived : active,\n    isShown: isArchived ? !isArchivedRibbonShown : !isRibbonShown,\n    isForumPanelOpen,\n    withAnimation,\n    usersById: global.users.byId,\n    chatsById: global.chats.byId,\n    peerStories: byPeerId,\n  };\n})(StoryToggler));\n","import { ANIMATION_END_DELAY } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport ribbonStyles from '../StoryRibbon.module.scss';\nimport togglerStyles from '../StoryToggler.module.scss';\n\nexport const ANIMATION_DURATION = 250;\nconst RIBBON_OFFSET = 0.25 * REM;\nconst RIBBON_Z_INDEX = 11;\nconst STROKE_OFFSET = 0.1875 * REM;\nconst CANVAS_OFFSET = 0.125 * REM;\n\nconst callbacks: Set<NoneToVoidFunction> = new Set();\n\nexport function animateOpening(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container, toggler, leftMainHeader, ribbonPeers, toggleAvatars,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n\n  const { bottom: headerBottom, right: headerRight } = leftMainHeader.getBoundingClientRect();\n  const toTop = headerBottom + RIBBON_OFFSET;\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    let {\n      // eslint-disable-next-line prefer-const\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = toggleAvatar.getBoundingClientRect();\n\n    const {\n      left: toLeft,\n      width: toWidth,\n    } = peer.getBoundingClientRect();\n\n    if (toLeft > headerRight) {\n      return;\n    }\n\n    fromLeft -= STROKE_OFFSET;\n    fromWidth += 2 * STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft;\n    const fromTranslateY = fromTop - toTop;\n    const fromScale = fromWidth / toWidth;\n\n    fromTop -= STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft + 2 * STROKE_OFFSET;\n    const toTranslateY = toTop - fromTop + STROKE_OFFSET;\n    const toScale = toWidth / (fromWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      if (!toggleAvatar) return;\n      const ghost = createGhost(peer);\n\n      let ghost2: HTMLElement | undefined;\n\n      // If this is a toogle avatar we create a second ghost and do crossfade animation\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        // Else we animate only name\n        ghost.classList.add(togglerStyles.ghostAnimateName);\n      }\n\n      applyStyles(ghost, {\n        top: `${toTop}px`,\n        left: `${toLeft}px`,\n        zIndex: `${zIndex}`,\n        opacity: ghost2 ? '0' : '',\n        transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${fromTop}px`,\n          left: `${fromLeft}px`,\n          zIndex: `${zIndex}`,\n        });\n      }\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n      toggleAvatar.classList.add('animating');\n      peer.classList.add('animating');\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: '',\n          transform: '',\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2, {\n            opacity: '0',\n            transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n          });\n        } else {\n          ghost.classList.add(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            toggleAvatar?.classList.remove('animating');\n            peer.classList.remove('animating');\n\n            callbacks.delete(cb);\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nexport function animateClosing(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container,\n    toggler,\n    toggleAvatars,\n    ribbonPeers,\n    leftMainHeader,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n  const { right: headerRight } = leftMainHeader.getBoundingClientRect();\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    const {\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = peer.getBoundingClientRect();\n\n    let {\n      left: toLeft,\n      width: toWidth,\n      top: toTop,\n    } = toggleAvatar.getBoundingClientRect();\n\n    if (fromLeft > headerRight) {\n      return;\n    }\n\n    toLeft -= STROKE_OFFSET;\n    toWidth += 2 * STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft;\n    const toTranslateY = toTop - fromTop - CANVAS_OFFSET;\n    const toScale = toWidth / fromWidth;\n\n    toTop -= STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft + 2 * STROKE_OFFSET;\n    const fromTranslateY = fromTop - toTop + STROKE_OFFSET;\n    const fromScale = fromWidth / (toWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      const ghost = createGhost(peer);\n      let ghost2: HTMLElement | undefined;\n\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        ghost.classList.add(togglerStyles.ghostAnimateName, togglerStyles.ghostRevealName);\n      }\n\n      applyStyles(ghost, {\n        top: `${fromTop}px`,\n        left: `${fromLeft}px`,\n        width: `${fromWidth}px`,\n        zIndex: `${zIndex}`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${toTop}px`,\n          left: `${toLeft}px`,\n          zIndex: `${zIndex}`,\n          opacity: '0',\n          transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n        });\n      }\n\n      peer.classList.add('animating');\n      toggleAvatar!.classList.add('animating');\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: ghost2 ? '0' : '',\n          transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2!, {\n            opacity: '',\n            transform: '',\n          });\n        } else {\n          ghost.classList.remove(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            peer.classList.remove('animating');\n            toggleAvatar!.classList.remove('animating');\n          });\n\n          callbacks.delete(cb);\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nfunction getHTMLElements(isArchived?: boolean) {\n  let container = document.getElementById('LeftColumn');\n  if (container && isArchived) {\n    container = container.querySelector<HTMLElement>('.ArchivedChats');\n  }\n  if (!container) return {};\n  const toggler = container.querySelector<HTMLElement>('#StoryToggler');\n  const ribbon = container.querySelector<HTMLElement>('#StoryRibbon');\n  const leftMainHeader = container.querySelector<HTMLElement>('.left-header');\n  const ribbonPeers = ribbon?.querySelectorAll<HTMLElement>(`.${ribbonStyles.peer}`);\n  const toggleAvatars = toggler?.querySelectorAll<HTMLElement>('.Avatar');\n\n  return {\n    container,\n    toggler,\n    leftMainHeader,\n    ribbonPeers,\n    toggleAvatars,\n  };\n}\n\nfunction createGhost(sourceEl: HTMLElement) {\n  const ghost = sourceEl.cloneNode(true) as HTMLElement;\n  ghost.classList.add(togglerStyles.ghost);\n\n  // Avoid source animating class being copied to the ghost\n  ghost.classList.remove('animating');\n\n  ghost.draggable = false;\n  ghost.oncontextmenu = stopEvent;\n\n  const sourceCanvas = sourceEl.querySelector('canvas');\n  if (sourceCanvas) {\n    const canvas = ghost.querySelector('canvas');\n    canvas?.getContext('2d')?.drawImage(sourceCanvas, 0, 0);\n  }\n\n  return ghost;\n}\n\nfunction getPeerId(el: HTMLElement) {\n  return el?.getAttribute('data-peer-id');\n}\n\nfunction selectByPeerId(el: HTMLElement, id: string) {\n  return el?.querySelector<HTMLElement>(`[data-peer-id=\"${id}\"]`);\n}\n\nfunction createDelayedCallback(callback: NoneToVoidFunction, ms: number) {\n  const timeout = setTimeout(callback, ms);\n\n  return () => {\n    clearTimeout(timeout);\n    callback();\n  };\n}\n\nfunction cancelDelayedCallbacks() {\n  callbacks.forEach((cb) => cb());\n  callbacks.clear();\n}\n","export const PRIMARY_VIDEO_MIME = 'video/mp4; codecs=hvc1.1.6.L63.00';\nexport const SECONDARY_VIDEO_MIME = 'video/mp4; codecs=avc1.64001E';\n","import { useEffect } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport { selectPeerStories } from '../../../global/selectors';\nimport unloadVideo from '../../../util/browser/unloadVideo';\nimport { preloadImage } from '../../../util/files';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { getProgressiveUrl } from '../../../util/mediaLoader';\nimport { makeProgressiveLoader } from '../../../util/progressiveLoader';\nimport { pause } from '../../../util/schedulers';\nimport { PRIMARY_VIDEO_MIME } from '../helpers/videoFormats';\n\nimport { checkIfStreamingSupported } from '../../../hooks/useStreaming';\n\nconst preloadedStories: Record<string, Set<number>> = {};\nconst PEER_STORIES_FOR_PRELOAD = 5;\nconst PROGRESSIVE_PRELOAD_DURATION = 1000;\nconst STREAM_PRELOAD_SIZE = 1024 * 1024 * 2; // 2 MB\n\nconst FIRST_PRELOAD_DELAY = 1000;\nconst canPreload = pause(FIRST_PRELOAD_DELAY);\n\ntype MediaHash = { hash: string; format: ApiMediaFormat; isStream?: boolean };\n\nfunction useStoryPreloader(peerIds: string[]): void;\nfunction useStoryPreloader(peerId?: string, aroundStoryId?: number): void;\nfunction useStoryPreloader(peerId?: string | string[], aroundStoryId?: number) {\n  useEffect(() => {\n    if (peerId === undefined) return;\n\n    const preloadHashes = async (mediaHashes: Array<MediaHash>) => {\n      await canPreload;\n      mediaHashes.forEach(({ hash, format, isStream }) => {\n        if (isStream) {\n          preloadStream(hash);\n          return;\n        }\n        mediaLoader.fetch(\n          hash,\n          format,\n        )\n          .then((result) => {\n            if (!result) return;\n\n            if (format === ApiMediaFormat.Progressive) {\n              preloadProgressive(result);\n            }\n            if (format === ApiMediaFormat.BlobUrl) {\n              preloadImage(result);\n            }\n          });\n      });\n    };\n\n    const peerIds = Array.isArray(peerId) ? peerId : [peerId];\n\n    peerIds.forEach((id) => {\n      const storyId = aroundStoryId || getGlobal().stories.byPeerId[id]?.orderedIds?.[0];\n      if (!storyId) return;\n      preloadHashes(getPreloadMediaHashes(id, storyId));\n    });\n  }, [aroundStoryId, peerId]);\n}\n\nfunction findIdsAroundCurrentId<T>(ids: T[], currentId: T, aroundAmount: number): T[] {\n  const currentIndex = ids.indexOf(currentId);\n  const start = Math.max(currentIndex - aroundAmount, 0);\n  const end = Math.min(currentIndex + aroundAmount, ids.length);\n  return ids.slice(start, end);\n}\n\nfunction getPreloadMediaHashes(peerId: string, storyId: number) {\n  const peerStories = selectPeerStories(getGlobal(), peerId);\n  if (!peerStories || !peerStories.orderedIds?.length) {\n    return [];\n  }\n\n  const preloadIds = findIdsAroundCurrentId(peerStories.orderedIds, storyId, PEER_STORIES_FOR_PRELOAD);\n\n  const mediaHashes: Array<MediaHash> = [];\n  preloadIds.forEach((currentStoryId) => {\n    if (preloadedStories[peerId]?.has(currentStoryId)) {\n      return;\n    }\n\n    const story = peerStories.byId[currentStoryId];\n    if (!story || !('content' in story)) {\n      return;\n    }\n\n    const isVideo = Boolean(story.content.video);\n\n    // Media\n    mediaHashes.push({\n      hash: getStoryMediaHash(story, 'full'),\n      format: isVideo ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl,\n      isStream: isVideo && checkIfStreamingSupported(PRIMARY_VIDEO_MIME),\n    });\n    // Thumbnail\n    mediaHashes.push({ hash: getStoryMediaHash(story), format: ApiMediaFormat.BlobUrl });\n    if (story.content.altVideos) {\n      mediaHashes.push({\n        hash: getStoryMediaHash(story, 'full', true)!,\n        format: ApiMediaFormat.Progressive,\n      });\n    }\n\n    preloadedStories[peerId] = (preloadedStories[peerId] || new Set()).add(currentStoryId);\n  });\n\n  return mediaHashes;\n}\n\nfunction preloadProgressive(url: string) {\n  const head = document.head;\n  const video = document.createElement('video');\n  video.preload = 'auto';\n  video.src = url;\n  video.muted = true;\n  video.autoplay = true;\n  video.disableRemotePlayback = true;\n  video.style.display = 'none';\n  head.appendChild(video);\n  video.load();\n  setTimeout(() => {\n    unloadVideo(video);\n    head.removeChild(video);\n  }, PROGRESSIVE_PRELOAD_DURATION);\n}\n\n// eslint-disable-next-line no-async-without-await/no-async-without-await\nasync function preloadStream(hash: string) {\n  const loader = makeProgressiveLoader(getProgressiveUrl(hash));\n  let cachedSize = 0;\n  for await (const chunk of loader) {\n    cachedSize += chunk.byteLength;\n    if (cachedSize >= STREAM_PRELOAD_SIZE) {\n      break;\n    }\n  }\n}\n\nexport default useStoryPreloader;\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"RXAMu4VD\",\"mediaArea\":\"pruw1nLm\",\"preview\":\"_5HkplWee\",\"shiny\":\"xFjJpeOA\",\"wave\":\"Ux0tlNbE\",\"light\":\"_7esBA3m\",\"dark\":\"eic2vQ8c\",\"reactionBackground\":\"c3ajA3hg\",\"flipped\":\"furSXGdL\",\"reaction\":\"Et3MvYmN\",\"withCount\":\"mFTLUHm2\",\"reactionCount\":\"Tr8mYyDk\",\"weather\":\"KBjMtRUS\",\"weatherInner\":\"IFChB3tD\",\"temperature\":\"_ke1UBIl\"};","import React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaAreaSuggestedReaction, ApiStory } from '../../../api/types';\n\nimport { getStoryKey, isSameReaction, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport ReactionAnimatedEmoji from '../../common/reactions/ReactionAnimatedEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  mediaArea: ApiMediaAreaSuggestedReaction;\n  index: number;\n  isPreview?: boolean;\n  className?: string;\n  style?: string;\n};\n\nconst REACTION_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 4;\n\nconst MediaAreaSuggestedReaction = ({\n  story,\n  mediaArea,\n  index,\n  className,\n  style,\n  isPreview,\n}: OwnProps) => {\n  const { sendStoryReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [customEmojiSize, setCustomEmojiSize] = useState(1.5 * REM);\n\n  const { peerId, id, views } = story;\n  const { reactions } = views || {};\n  const { reaction, isDark, isFlipped } = mediaArea;\n\n  const isChannel = !isUserId(peerId);\n  const containerId = `${getStoryKey(peerId, id)}-${index}-${isPreview ? 'preview' : 'viewer'}`;\n\n  const reactionCount = useMemo(() => (\n    reactions?.find((r) => isSameReaction(r.reaction, reaction))?.count\n  ), [reaction, reactions]);\n  const shouldDisplayCount = !isPreview && Boolean(reactionCount) && isChannel;\n\n  const updateCustomEmojiSize = useLastCallback(() => {\n    if (!ref.current) return;\n    const height = ref.current.clientHeight;\n    setCustomEmojiSize(Math.round(height * REACTION_SIZE_MULTIPLIER));\n  });\n\n  useEffectWithPrevDeps(([prevReactionCount]) => {\n    if (Boolean(reactionCount) !== Boolean(prevReactionCount)) {\n      updateCustomEmojiSize();\n    }\n  }, [reactionCount]);\n\n  useResizeObserver(ref, updateCustomEmojiSize);\n\n  const handleClick = useLastCallback(() => {\n    sendStoryReaction({\n      peerId,\n      storyId: id,\n      containerId,\n      reaction,\n    });\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(isDark ? styles.dark : styles.light, className)}\n      style={buildStyle(style, `--custom-emoji-size: ${customEmojiSize}px`)}\n      onClick={handleClick}\n    >\n      <div\n        className={buildClassName(styles.reactionBackground, isFlipped && styles.flipped)}\n      />\n      {Boolean(customEmojiSize) && (\n        <ReactionAnimatedEmoji\n          className={buildClassName(styles.reaction, shouldDisplayCount && styles.withCount)}\n          reaction={reaction}\n          containerId={containerId}\n          size={customEmojiSize}\n          effectSize={customEmojiSize * EFFECT_SIZE_MULTIPLIER}\n          shouldPause={isPreview}\n          shouldLoop={!isPreview}\n        />\n      )}\n      {shouldDisplayCount && (\n        <span className={styles.reactionCount}>{reactionCount}</span>\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaAreaSuggestedReaction);\n","import React, {\n  type FC, memo,\n  useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { setExtraStyles } from '../../../lib/teact/teact-dom';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiMediaAreaWeather, ApiSticker } from '../../../api/types';\n\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectRestrictedEmoji } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { convertToRGBA, getTextColor } from '../../../util/colors';\nimport { formatTemperature } from '../../../util/formatTemperature';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  mediaArea: ApiMediaAreaWeather;\n  className?: string;\n  style?: string;\n  isPreview?: boolean;\n};\n\ntype StateProps = {\n  restrictedEmoji?: ApiSticker;\n};\n\nconst EMOJI_SIZE_MULTIPLIER = 0.7;\nconst TEMPERATURE_SIZE = 32;\n\nconst MediaAreaWeather: FC<OwnProps & StateProps> = ({\n  mediaArea,\n  className,\n  style,\n  restrictedEmoji,\n  isPreview,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [customEmojiSize, setCustomEmojiSize] = useState(0);\n\n  const { temperatureC, color } = mediaArea;\n\n  const backgroundColor = convertToRGBA(color);\n  const textColor = getTextColor(color);\n\n  const updateCustomSize = useLastCallback((isImmediate?: boolean) => {\n    if (!ref.current) return undefined;\n    const el = ref.current;\n\n    const height = el.clientHeight;\n    const customEmojiHeight = Math.round(height * EMOJI_SIZE_MULTIPLIER);\n    setCustomEmojiSize(customEmojiHeight);\n    const applyFn = () => {\n      setExtraStyles(el, {\n        '--custom-emoji-size': `${customEmojiHeight}px`,\n        'font-size': `${height / TEMPERATURE_SIZE}rem`,\n      });\n    };\n\n    if (isImmediate) return applyFn;\n\n    requestMutation(applyFn);\n\n    return undefined;\n  });\n\n  useLayoutEffect(() => {\n    requestForcedReflow(() => updateCustomSize(true));\n  }, []);\n\n  useResizeObserver(ref, () => updateCustomSize());\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(styles.weather, className)}\n      style={buildStyle(\n        style,\n        `--custom-background-color: ${backgroundColor}`,\n        `color: ${textColor}`,\n      )}\n    >\n      <div className={styles.weatherInner}>\n        {restrictedEmoji && (\n          <CustomEmoji\n            key={restrictedEmoji.id}\n            documentId={restrictedEmoji.id}\n            size={customEmojiSize}\n            noPlay={isPreview}\n            withTranslucentThumb\n            forceAlways\n          />\n        )}\n        <p className={styles.temperature}>\n          {formatTemperature(temperatureC)}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, ownProps): StateProps => {\n  const { mediaArea } = ownProps;\n  const restrictedEmoji = selectRestrictedEmoji(global, mediaArea.emoji);\n  return { restrictedEmoji };\n})(MediaAreaWeather));\n","export const formatTemperature = (temperatureC: number) => {\n  const isFahrenheit = Boolean(navigator.language === 'en-US');\n  return isFahrenheit ? `${Math.round((temperatureC * 9) / 5 + 32)}°F` : `${Math.round(temperatureC)}°C`;\n};\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaArea, ApiStory } from '../../../api/types';\n\nimport { MOBILE_SCREEN_MAX_WIDTH } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nimport MediaAreaSuggestedReaction from './MediaAreaSuggestedReaction';\nimport MediaAreaWeather from './MediaAreaWeather';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  isActive?: boolean;\n  isStoryPlaying?: boolean;\n  className?: string;\n};\n\nconst STORY_ASPECT_RATIO = 9 / 16;\nconst PERCENTAGE_BASE = 100;\n\nconst NO_SHINY_TYPES = new Set<ApiMediaArea['type']>(['channelPost', 'uniqueGift']);\n\nconst MediaAreaOverlay = ({\n  story, isActive, className, isStoryPlaying,\n}: OwnProps) => {\n  const {\n    openMapModal, openUniqueGiftBySlug, focusMessage, closeStoryViewer, openUrl,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [mediaWidth, setMediaWidth] = useState(0);\n\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current) return;\n    const element = ref.current;\n    setMediaWidth(element!.clientWidth!);\n\n    if (windowSize.width > MOBILE_SCREEN_MAX_WIDTH) {\n      requestMutation(() => {\n        element.style.removeProperty('--media-width');\n        element.style.removeProperty('--media-height');\n      });\n      return;\n    }\n\n    const screenAspectRatio = windowSize.width / windowSize.height;\n\n    const width = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight * STORY_ASPECT_RATIO : element.clientWidth;\n    const height = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight : element.clientWidth / STORY_ASPECT_RATIO;\n\n    requestMutation(() => {\n      element.style.setProperty('--media-width', `${width}px`);\n      element.style.setProperty('--media-height', `${height}px`);\n    });\n  }, [isActive, windowSize]);\n\n  const handleMediaAreaClick = (mediaArea: ApiMediaArea) => {\n    switch (mediaArea.type) {\n      case 'geoPoint':\n      case 'venue': {\n        openMapModal({ geoPoint: mediaArea.geo });\n        break;\n      }\n      case 'channelPost': {\n        focusMessage({\n          chatId: mediaArea.channelId,\n          messageId: mediaArea.messageId,\n        });\n        closeStoryViewer();\n        break;\n      }\n      case 'url': {\n        openUrl({ url: mediaArea.url });\n        break;\n      }\n      case 'uniqueGift': {\n        openUniqueGiftBySlug({ slug: mediaArea.slug });\n        break;\n      }\n    }\n  };\n\n  const mediaAreas = story.mediaAreas;\n\n  return (\n    <div\n      className={buildClassName(styles.overlay, !isActive && styles.preview, className)}\n      ref={ref}\n    >\n      {mediaAreas?.map((mediaArea, i) => {\n        switch (mediaArea.type) {\n          case 'geoPoint':\n          case 'venue':\n          case 'channelPost':\n          case 'url':\n          case 'uniqueGift': {\n            const isShiny = isActive && !NO_SHINY_TYPES.has(mediaArea.type);\n            return (\n              <div\n                className={buildClassName(styles.mediaArea, isShiny && styles.shiny)}\n                style={prepareStyle(mediaArea)}\n                onClick={() => handleMediaAreaClick(mediaArea)}\n              />\n            );\n          }\n          case 'suggestedReaction':\n            return (\n              <MediaAreaSuggestedReaction\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${mediaArea.type}-${i}`}\n                story={story}\n                mediaArea={mediaArea}\n                index={i}\n                isPreview={!isActive}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea)}\n              />\n            );\n          case 'weather': {\n            return (\n              <MediaAreaWeather\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${mediaArea.type}-${i}`}\n                mediaArea={mediaArea}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea, mediaWidth)}\n                isPreview={!isActive || isStoryPlaying}\n              />\n            );\n          }\n          default:\n            return undefined;\n        }\n      })}\n    </div>\n  );\n};\n\nfunction prepareStyle(mediaArea: ApiMediaArea, mediaWidth?: number) {\n  const {\n    x, y, width, height, rotation, radius,\n  } = mediaArea.coordinates;\n\n  let pixelRadius = '';\n\n  if (mediaWidth && radius && mediaWidth > 0) {\n    const pixelWidth = (mediaWidth * (width / PERCENTAGE_BASE));\n    const pixelHeight = (mediaWidth * (height / PERCENTAGE_BASE));\n    pixelRadius = `${Math.min(pixelWidth, pixelHeight) * (radius / PERCENTAGE_BASE)}px`;\n  }\n\n  return buildStyle(\n    `left: ${x}%`,\n    `top: ${y}%`,\n    `width: ${width}%`,\n    `height: ${height}%`,\n    `transform: rotate(${rotation}deg) translate(-50%, -50%)`,\n    pixelRadius && `border-radius: ${pixelRadius}`,\n  );\n}\n\nexport default memo(MediaAreaOverlay);\n","import type { GlobalState } from '../types';\n\nimport { getMainUsername, isChatBasicGroup } from '../helpers';\nimport { selectChat, selectChatFullInfo } from './chats';\nimport { selectUser } from './users';\n\nexport function selectChatGroupCall<T extends GlobalState>(global: T, chatId: string) {\n  const fullInfo = selectChatFullInfo(global, chatId);\n  if (!fullInfo || !fullInfo.groupCallId) return undefined;\n\n  return selectGroupCall(global, fullInfo.groupCallId);\n}\n\nexport function selectGroupCall<T extends GlobalState>(global: T, groupCallId: string) {\n  return global.groupCalls.byId[groupCallId];\n}\n\nexport function selectGroupCallParticipant<T extends GlobalState>(\n  global: T, groupCallId: string, participantId: string,\n) {\n  return selectGroupCall(global, groupCallId)?.participants[participantId];\n}\n\nexport function selectIsAdminInActiveGroupCall<T extends GlobalState>(global: T): boolean {\n  const chatId = selectActiveGroupCall(global)?.chatId;\n\n  if (!chatId) return false;\n\n  const chat = selectChat(global, chatId);\n  if (!chat) return false;\n\n  return (isChatBasicGroup(chat) && chat.isCreator) || Boolean(chat.adminRights?.manageCall);\n}\n\nexport function selectActiveGroupCall<T extends GlobalState>(global: T) {\n  const { groupCalls: { activeGroupCallId } } = global;\n  if (!activeGroupCallId) {\n    return undefined;\n  }\n\n  return selectGroupCall(global, activeGroupCallId);\n}\n\nexport function selectPhoneCallUser<T extends GlobalState>(global: T) {\n  const { phoneCall, currentUserId } = global;\n  if (!phoneCall || !phoneCall.participantId || !phoneCall.adminId) {\n    return undefined;\n  }\n\n  const id = phoneCall.adminId === currentUserId ? phoneCall.participantId : phoneCall.adminId;\n  return selectUser(global, id);\n}\n\nexport function selectCanInviteToActiveGroupCall<T extends GlobalState>(global: T) {\n  const groupCall = selectActiveGroupCall(global);\n\n  if (!groupCall || !groupCall.chatId) {\n    return false;\n  }\n\n  const chat = selectChat(global, groupCall.chatId);\n  if (!chat) {\n    return false;\n  }\n\n  const hasPublicUsername = Boolean(getMainUsername(chat));\n  if (hasPublicUsername) {\n    return true;\n  }\n\n  const inviteLink = selectChatFullInfo(global, chat.id)?.inviteLink;\n  return Boolean(inviteLink);\n}\n","import type { ApiLimitType } from '../../api/types';\nimport type { GlobalState } from '../types';\n\nimport { DEFAULT_LIMITS } from '../../config';\nimport { selectIsCurrentUserPremium } from './users';\n\nexport function selectCurrentLimit<T extends GlobalState>(global: T, limit: ApiLimitType) {\n  const { appConfig } = global;\n  if (!appConfig) {\n    return DEFAULT_LIMITS[limit][0];\n  }\n\n  const isPremium = selectIsCurrentUserPremium(global);\n  const { limits } = appConfig;\n\n  // When there are new limits when updating a layer, until we get a new configuration, we must use the default values\n  const value = limits[limit]?.[isPremium ? 1 : 0] ?? DEFAULT_LIMITS[limit][isPremium ? 1 : 0];\n  if (limit === 'dialogFilters') return value + 1; // Server does not count \"All\" as folder, but we need to\n  return value;\n}\n\nexport function selectPremiumLimit<T extends GlobalState>(global: T, limit: ApiLimitType) {\n  const { appConfig } = global;\n  if (!appConfig) return DEFAULT_LIMITS[limit][1];\n\n  const { limits } = appConfig;\n\n  return limits[limit][1];\n}\n","import { useEffect, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { IS_MOBILE } from '../../util/windowEnvironment';\nimport useLastCallback from '../useLastCallback';\nimport useOldLang from '../useOldLang';\n\nconst NOTIFICATION_DURATION = 8000;\n\nexport default function useUnsupportedMedia(\n  ref: React.RefObject<HTMLVideoElement>, shouldDisableNotification?: boolean, isDisabled?: boolean,\n) {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n  const [isUnsupported, setIsUnsupported] = useState(false);\n\n  const handleUnsupported = useLastCallback(() => {\n    setIsUnsupported(true);\n    if (shouldDisableNotification) return;\n\n    showNotification({\n      message: IS_MOBILE ? lang('Video.Unsupported.Mobile') : lang('Video.Unsupported.Desktop'),\n      duration: NOTIFICATION_DURATION,\n    });\n  });\n\n  const onError = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n    const { error } = target;\n    if (!error) return;\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaError/code\n    if (error.code === 3 || error.code === 4) {\n      handleUnsupported();\n    }\n  });\n\n  const onCanPlay = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n\n    if (!target.videoHeight || !target.videoWidth) {\n      handleUnsupported();\n    }\n  });\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const { current } = ref;\n    if (!current) {\n      return undefined;\n    }\n\n    current.addEventListener('error', onError);\n    current.addEventListener('canplay', onCanPlay);\n\n    return () => {\n      current.removeEventListener('error', onError);\n      current.removeEventListener('canplay', onCanPlay);\n    };\n  }, [isDisabled, ref]);\n\n  return isUnsupported;\n}\n","import { useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { isChatChannel, isUserBot, isUserId } from '../../global/helpers';\nimport { selectPeer, selectUserStatus } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nconst POLLING_INTERVAL = 60 * 60 * 1000;\nconst PEER_LAST_POLLING_TIME = new Map<string, number>();\nlet PEER_ID_QUEUE = new Set<string>();\nconst LIMIT_PER_REQUEST = 100;\nconst REQUEST_THROTTLE = 500;\n\nconst loadFromQueue = throttle(() => {\n  const queue = Array.from(PEER_ID_QUEUE);\n  const queueToLoad = queue.slice(0, LIMIT_PER_REQUEST);\n  const otherQueue = queue.slice(LIMIT_PER_REQUEST + 1);\n\n  getActions().loadStoriesMaxIds({\n    peerIds: queueToLoad,\n  });\n\n  queueToLoad.forEach((id) => PEER_LAST_POLLING_TIME.set(id, Date.now()));\n\n  PEER_ID_QUEUE = new Set(otherQueue);\n\n  // Schedule next load\n  if (PEER_ID_QUEUE.size) {\n    loadFromQueue();\n  }\n}, REQUEST_THROTTLE);\n\nexport default function usePeerStoriesPolling(ids?: string[]) {\n  const peers = useMemo(() => {\n    const global = getGlobal();\n    return ids?.map((id) => selectPeer(global, id)).filter(Boolean);\n  }, [ids]);\n\n  const pollablePeerIds = useMemo(() => {\n    const global = getGlobal();\n    return peers?.filter((peer) => {\n      const lastPollingTime = PEER_LAST_POLLING_TIME.get(peer.id) || 0;\n      if (Date.now() - lastPollingTime < POLLING_INTERVAL) {\n        return false;\n      }\n\n      if (isUserId(peer.id)) {\n        const user = peer as ApiUser;\n        const status = selectUserStatus(global, user.id);\n        const isStatusAvailable = status && status.type !== 'userStatusEmpty';\n        return !user.isContact && !user.isSelf && !isUserBot(user) && !peer.isSupport && isStatusAvailable;\n      } else {\n        const chat = peer as ApiChat;\n        return isChatChannel(chat) && !chat.isRestricted;\n      }\n    }).map((user) => user.id);\n  }, [peers]);\n\n  useEffect(() => {\n    if (pollablePeerIds?.length) {\n      pollablePeerIds.forEach((id) => PEER_ID_QUEUE.add(id));\n      loadFromQueue();\n    }\n  }, [pollablePeerIds]);\n}\n","import { getGlobal } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport type { Dispatch, StateReducer } from '../useReducer';\n\nimport { selectChat } from '../../global/selectors';\nimport { omit, pick } from '../../util/iteratees';\nimport useReducer from '../useReducer';\n\nexport type FolderChatType = {\n  icon: IconName;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  const global = getGlobal();\n  const existingSelectedChatIds = selectedChatIds.filter((id) => selectChat(global, id));\n\n  return {\n    selectedChatIds: existingSelectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setEmoticon' | 'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters' | 'setIsTouched' |\n  'setFolderId' | 'setIsChatlist'\n  );\nexport type FolderEditDispatch = Dispatch<FoldersState, FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: { text: '' },\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n): FoldersState => {\n  switch (action.type) {\n    case 'setEmoticon':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          emoticon: action.payload,\n        },\n        isTouched: true,\n      };\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: { text: action.payload },\n        },\n        isTouched: true,\n      };\n    case 'setFolderId':\n      return {\n        ...state,\n        folderId: action.payload,\n        mode: 'edit',\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : { text: getSuggestedFolderName(state.includeFilters) },\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, description, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsTouched': {\n      return {\n        ...state,\n        isTouched: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    }\n    case 'setIsChatlist':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          isChatList: action.payload,\n        },\n      };\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","import useForceUpdate from '../useForceUpdate';\nimport useInterval from './useInterval';\n\nexport default function useIntervalForceUpdate(interval?: number) {\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, interval, true);\n}\n","import type { Scheduler } from '../util/schedulers';\nimport type { Signal } from '../util/signals';\n\nimport useDebouncedCallback from './useDebouncedCallback';\nimport useDerivedSignal from './useDerivedSignal';\nimport useThrottledCallback from './useThrottledCallback';\n\nexport function useThrottledResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  msOrSchedulerFn: number | Scheduler,\n  noFirst = false,\n) {\n  return useThrottledCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, msOrSchedulerFn, noFirst);\n}\n\nexport function useThrottledSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n): Signal<T> {\n  const throttledResolver = useThrottledResolver(() => getValue(), [getValue], ms, noFirst);\n\n  return useDerivedSignal(\n    throttledResolver, [throttledResolver, getValue], true,\n  );\n}\n\nexport function useDebouncedResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  ms: number,\n  noFirst = false,\n  noLast = false,\n) {\n  return useDebouncedCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n\nexport function useDebouncedSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n  noLast = false,\n): Signal<T> {\n  const debouncedResolver = useDebouncedResolver(() => getValue(), [getValue], ms, noFirst, noLast);\n\n  return useDerivedSignal(\n    debouncedResolver, [debouncedResolver, getValue], true,\n  );\n}\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\nimport { getActions, getGlobal } from '../global';\n\nimport type { Track, TrackId } from '../util/audioPlayer';\nimport type { MediaSessionHandlers } from '../util/mediaSession';\n\nimport { PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION } from '../config';\nimport { selectTabState } from '../global/selectors';\nimport { register } from '../util/audioPlayer';\nimport {\n  registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nconst useAudioPlayer = (\n  trackId: TrackId | undefined,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n  onPause?: NoneToVoidFunction,\n  noReset = false,\n  noHandleEvents = false,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const controllerRef = useRef<ReturnType<typeof register>>(null);\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  });\n\n  useSyncEffect(() => {\n    if (!trackId) {\n      return;\n    }\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      if (noHandleEvents) {\n        return;\n      }\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n          if (trackType !== 'oneTimeVoice') {\n            registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          }\n          setPlaybackState('playing');\n          const { audioPlayer } = selectTabState(getGlobal());\n          setVolume(audioPlayer.volume);\n          toggleMuted(Boolean(audioPlayer.isMuted));\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (trackType === 'voice' || duration > PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION) {\n            setPlaybackRate(audioPlayer.playbackRate);\n          }\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          onPause?.();\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          if (noReset && proxy.currentTime === 0) {\n            break;\n          }\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current!;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      // `isPlayingSync` is only needed to help `setIsPlaying` because it is asynchronous\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      isPlayingSync = true;\n    }\n\n    if (onInit && !noHandleEvents) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current ?? {};\n\n  const duration = useMemo(() => {\n    return proxy?.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n  }, [proxy?.duration, originalDuration]);\n\n  // RAF progress\n  useEffect(() => {\n    if (!proxy) {\n      return;\n    }\n    if (noReset && proxy.currentTime === 0) {\n      return;\n    }\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates, noReset]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy?.(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy?.src && proxy?.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play?.(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy?.src, proxy?.paused, trackType]);\n\n  const playIfPresent = useLastCallback(() => {\n    if (src) {\n      play?.(src);\n    }\n  });\n\n  const playPause = useLastCallback(() => {\n    if (isPlaying) {\n      pause?.();\n    } else {\n      playIfPresent();\n    }\n  });\n\n  const setTime = useLastCallback((time: number) => {\n    setCurrentTime?.(time);\n    if (duration && proxy) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  });\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: React.RefObject<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getActions().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n\nexport default useAudioPlayer;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { MenuItemContextAction } from '../components/ui/ListItem';\nimport { type ApiChat, type ApiUser } from '../api/types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport {\n  getCanDeleteChat, isChatArchived, isChatChannel, isChatGroup,\n  isUserId,\n} from '../global/helpers';\nimport { compact } from '../util/iteratees';\nimport { IS_ELECTRON, IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../util/windowEnvironment';\nimport useOldLang from './useOldLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  handleDelete,\n  handleMute,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  isSavedDialog?: boolean;\n  currentUserId?: string;\n  isPreview?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n  handleChatFolderChange: NoneToVoidFunction;\n  handleReport?: NoneToVoidFunction;\n}, isInSearch = false) => {\n  const lang = useOldLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n\n  const deleteTitle = useMemo(() => {\n    if (!chat) return undefined;\n\n    if (isSavedDialog) {\n      return lang('Delete');\n    }\n\n    if (isUserId(chat.id)) {\n      return lang('DeleteChatUser');\n    }\n\n    if (getCanDeleteChat(chat)) {\n      return lang('DeleteChat');\n    }\n\n    if (isChatChannel(chat)) {\n      return lang('LeaveChannel');\n    }\n\n    return lang('Group.LeaveGroup');\n  }, [chat, isSavedDialog, lang]);\n\n  return useMemo(() => {\n    if (!chat || isPreview) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      toggleSavedDialogPinned,\n      updateChatMutedState,\n      toggleChatArchived,\n      toggleChatUnread,\n      openChatInNewTab,\n    } = getActions();\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: IS_ELECTRON ? 'Open in new window' : 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        if (isSavedDialog) {\n          openChatInNewTab({ chatId: currentUserId!, threadId: chat.id });\n        } else {\n          openChatInNewTab({ chatId: chat.id });\n        }\n      },\n    };\n\n    const togglePinned = () => {\n      if (isSavedDialog) {\n        toggleSavedDialogPinned({ id: chat.id });\n      } else {\n        toggleChatPinned({ id: chat.id, folderId: folderId! });\n      }\n    };\n\n    const actionPin = isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: togglePinned,\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: togglePinned,\n      };\n\n    const actionDelete = {\n      title: deleteTitle,\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    if (isSavedDialog) {\n      return compact([actionOpenInNewTab, actionPin, actionDelete]) as MenuItemContextAction[];\n    }\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('ChatList.Filter.AddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    if (isInSearch) {\n      return compact([actionOpenInNewTab, actionPin, actionAddToFolder, actionMute]) as MenuItemContextAction[];\n    }\n\n    const actionMaskAsRead = (chat.unreadCount || chat.hasUnreadMark)\n      ? { title: lang('MarkAsRead'), icon: 'readchats', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n    const actionMarkAsUnread = !(chat.unreadCount || chat.hasUnreadMark) && !chat.isForum\n      ? { title: lang('MarkAsUnread'), icon: 'unread', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && !user && (isChatChannel(chat) || isChatGroup(chat));\n    const actionReport = canReport\n      ? { title: lang('ReportPeer.Report'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionAddToFolder,\n      actionMaskAsRead,\n      actionMarkAsUnread,\n      actionPin,\n      !isSelf && actionMute,\n      !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      actionReport,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted, currentUserId,\n    handleDelete, handleMute, handleReport, folderId, isSelf, isServiceNotifications, isSavedDialog, deleteTitle,\n    isPreview,\n  ]);\n};\n\nexport default useChatContextActions;\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiTypeStory } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nconst THROTTLE_THRESHOLD_MS = 200;\n\nfunction useEnsureStory(\n  peerId?: string,\n  storyId?: number,\n  story?: ApiTypeStory,\n) {\n  const { loadPeerStoriesByIds } = getActions();\n\n  const loadStoryThrottled = useMemo(() => {\n    const throttled = throttle(loadPeerStoriesByIds, THROTTLE_THRESHOLD_MS, true);\n    return () => {\n      throttled({ peerId: peerId!, storyIds: [storyId!] });\n    };\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    const shouldLoadStory = !story || !('content' in story || 'isDeleted' in story);\n    if (peerId && storyId && shouldLoadStory) {\n      loadStoryThrottled();\n    }\n  }, [loadStoryThrottled, story, storyId, peerId]);\n}\n\nexport default useEnsureStory;\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useForumPanelRender(isForumPanelOpen = false) {\n  const shouldRenderForumPanelRef = useRef(isForumPanelOpen);\n  const isAnimationStartedRef = useRef(false);\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isForumPanelOpen) {\n      shouldRenderForumPanelRef.current = true;\n    }\n  }, [isForumPanelOpen]);\n\n  const handleForumPanelAnimationEnd = useLastCallback(() => {\n    shouldRenderForumPanelRef.current = false;\n    isAnimationStartedRef.current = false;\n    forceUpdate();\n  });\n\n  const handleForumPanelAnimationStart = useLastCallback(() => {\n    isAnimationStartedRef.current = true;\n    forceUpdate();\n  });\n\n  return {\n    shouldRenderForumPanel: shouldRenderForumPanelRef.current,\n    isAnimationStarted: isAnimationStartedRef.current,\n    handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart,\n  };\n}\n","import { useEffect } from '../lib/teact/teact';\n\nimport { createCallbackManager } from '../util/callbacks';\nimport { getHotkeyMatcher } from '../util/parseHotkey';\n\nconst IGNORE_TAGS = new Set(['INPUT', 'TEXTAREA', 'SELECT']);\n\nconst handlers = createCallbackManager();\ndocument.documentElement.addEventListener('keydown', handlers.runCallbacks);\n\nexport function useHotkeys(hotkeys?: Record<string, (e: KeyboardEvent) => void>) {\n  useEffect(() => {\n    if (!hotkeys) {\n      return undefined;\n    }\n\n    const entries = Object.entries(hotkeys);\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (!shouldFireEvent(e)) {\n        return;\n      }\n\n      entries.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(e)) {\n          handler(e);\n        }\n      });\n    }\n\n    return handlers.addCallback(handleKeyDown);\n  }, [hotkeys]);\n}\n\nfunction shouldFireEvent(e: KeyboardEvent) {\n  if (e.target instanceof HTMLElement) {\n    return !IGNORE_TAGS.has(e.target.tagName);\n  }\n\n  return true;\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport useAppLayout from './useAppLayout';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\nconst MODAL_HIDE_DELAY_MS = 300;\n\nexport default function useInputFocusOnOpen(\n  inputRef: RefObject<HTMLInputElement | HTMLTextAreaElement>,\n  isOpen?: boolean,\n  onClose?: NoneToVoidFunction,\n) {\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (isOpen) {\n      if (!isMobile) {\n        setTimeout(() => {\n          requestMutation(() => {\n            if (inputRef.current?.isConnected) {\n              inputRef.current.focus();\n            }\n          });\n        }, FOCUS_DELAY_MS);\n      }\n    } else {\n      if (inputRef.current?.isConnected) {\n        inputRef.current.blur();\n      }\n\n      if (onClose) {\n        setTimeout(onClose, MODAL_HIDE_DELAY_MS);\n      }\n    }\n  }, [inputRef, isMobile, isOpen, onClose]);\n}\n","import { useCallback, useRef, useUnmountCleanup } from '../lib/teact/teact';\n\nconst DEFAULT_THRESHOLD = 250;\n\nfunction useLongPress({\n  onClick, onStart, onEnd, threshold = DEFAULT_THRESHOLD,\n}: {\n  onStart?: NoneToVoidFunction;\n  onClick?: (event: React.MouseEvent | React.TouchEvent) => void;\n  onEnd?: NoneToVoidFunction;\n  threshold?: number;\n}) {\n  const isLongPressActive = useRef(false);\n  const isPressed = useRef(false);\n  const timerId = useRef<number | undefined>(undefined);\n\n  const start = useCallback((e: React.MouseEvent | React.TouchEvent) => {\n    const canProcessEvent = ('button' in e && e.button === 0) || ('touches' in e && e.touches.length > 0);\n    if (isPressed.current || !canProcessEvent) {\n      return;\n    }\n\n    isPressed.current = true;\n    timerId.current = window.setTimeout(() => {\n      onStart?.();\n      isLongPressActive.current = true;\n    }, threshold);\n  }, [onStart, threshold]);\n\n  const cancel = useCallback((e: React.MouseEvent | React.TouchEvent) => {\n    if (!isPressed.current) return;\n\n    if (isLongPressActive.current) {\n      onEnd?.();\n    } else {\n      onClick?.(e);\n    }\n\n    isLongPressActive.current = false;\n    isPressed.current = false;\n    window.clearTimeout(timerId.current);\n  }, [onEnd, onClick]);\n\n  useUnmountCleanup(() => {\n    window.clearTimeout(timerId.current);\n  });\n\n  return {\n    onMouseDown: start,\n    onMouseUp: cancel,\n    onMouseLeave: cancel,\n    onTouchStart: start,\n    onTouchEnd: cancel,\n  };\n}\n\nexport default useLongPress;\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { ApiMediaFormat } from '../api/types';\n\nimport { selectIsSynced } from '../global/selectors';\nimport * as mediaLoader from '../util/mediaLoader';\nimport { throttle } from '../util/schedulers';\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/windowEnvironment';\nimport useSelector from './data/useSelector';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory(mediaHash) : undefined;\n  const isStreaming = IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive;\n  const forceUpdate = useForceUpdate();\n  const isSynced = useSelector(selectIsSynced);\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, isStreaming, delay, handleProgress, isHtmlAllowed, id, isSynced,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/windowEnvironment';\nimport useLastCallback from './useLastCallback';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  const markMouseInside = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  });\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport usePreviousDeprecated from './usePreviousDeprecated';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function usePrevDuringAnimation<T>(current: T, duration?: number): T {\n  const prev = usePreviousDeprecated(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useSyncEffect(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [duration, forceUpdate, isCurrentPresent, isPrevPresent]);\n\n  return (!timeoutRef.current || !duration || isCurrentPresent ? current : prev)!;\n}\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<State, Actions> = (action: ReducerAction<Actions>) => State;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const forceUpdate = useForceUpdate();\n  const reducerRef = useRef(reducer);\n  const state = useRef(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    state.current = reducerRef.current(state.current, action);\n    forceUpdate();\n    return state.current;\n  }, []);\n\n  return [\n    state.current,\n    dispatch,\n  ] as [State, Dispatch<State, Actions>];\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './CalendarModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst CalendarModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CalendarModal = useModuleLoader(Bundles.Extra, 'CalendarModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CalendarModal ? <CalendarModal {...props} /> : undefined;\n};\n\nexport default CalendarModalAsync;\n","import React, { useState } from '../lib/teact/teact';\n\nimport { SCHEDULED_WHEN_ONLINE } from '../config';\nimport { getDayStartAt } from '../util/dates/dateFormat';\nimport { getServerTimeOffset } from '../util/serverTime';\nimport useLastCallback from './useLastCallback';\nimport useOldLang from './useOldLang';\n\nimport CalendarModal from '../components/common/CalendarModal.async';\n\ntype OnScheduledCallback = (scheduledAt: number) => void;\n\nconst useSchedule = (\n  canScheduleUntilOnline?: boolean,\n  onCancel?: () => void,\n  openAt?: number,\n) => {\n  const lang = useOldLang();\n  const [onScheduled, setOnScheduled] = useState<OnScheduledCallback | undefined>();\n\n  const handleMessageSchedule = useLastCallback((date: Date, isWhenOnline = false) => {\n    // Scheduled time can not be less than 10 seconds in future\n    const scheduledAt = Math.round(Math.max(date.getTime(), Date.now() + 60 * 1000) / 1000)\n      + (isWhenOnline ? 0 : getServerTimeOffset());\n    onScheduled?.(scheduledAt);\n    setOnScheduled(undefined);\n  });\n\n  const handleMessageScheduleUntilOnline = useLastCallback(() => {\n    handleMessageSchedule(new Date(SCHEDULED_WHEN_ONLINE * 1000), true);\n  });\n\n  const handleCloseCalendar = useLastCallback(() => {\n    setOnScheduled(undefined);\n    onCancel?.();\n  });\n\n  const requestCalendar = useLastCallback((whenScheduled: OnScheduledCallback) => {\n    setOnScheduled(() => whenScheduled);\n  });\n\n  const scheduledDefaultDate = openAt ? new Date(openAt * 1000) : new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  const calendar = (\n    <CalendarModal\n      isOpen={Boolean(onScheduled)}\n      withTimePicker\n      selectedAt={scheduledDefaultDate.getTime()}\n      maxAt={getDayStartAt(scheduledMaxDate)}\n      isFutureMode\n      secondButtonLabel={canScheduleUntilOnline ? lang('Schedule.SendWhenOnline') : undefined}\n      onClose={handleCloseCalendar}\n      onSubmit={handleMessageSchedule}\n      onSecondButtonClick={canScheduleUntilOnline ? handleMessageScheduleUntilOnline : undefined}\n    />\n  );\n\n  return [requestCalendar, calendar] as const;\n};\n\nexport default useSchedule;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiSendMessageAction } from '../api/types';\nimport type { ThreadId } from '../types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: ThreadId) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      if (!chatId || !threadId) return;\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { DEBUG } from '../config';\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../util/animation';\nimport unloadVideo from '../util/browser/unloadVideo';\nimport { makeProgressiveLoader } from '../util/progressiveLoader';\nimport { IS_SAFARI } from '../util/windowEnvironment';\n\nconst VIDEO_REVEAL_DELAY = 100;\n\nexport function useStreaming(videoRef: RefObject<HTMLVideoElement>, url?: string, mimeType?: string) {\n  useEffect(() => {\n    if (!url || !videoRef.current) return undefined;\n    const MediaSourceClass = getMediaSource();\n    const video = videoRef.current;\n\n    if (!IS_SAFARI || !mimeType || !MediaSourceClass?.isTypeSupported(mimeType)) {\n      return undefined;\n    }\n    const mediaSource = new MediaSourceClass();\n\n    function revealVideo() {\n      requestMutation(() => {\n        video.style.display = 'block';\n        setTimeout(() => {\n          requestMutation(() => {\n            applyStyles(video, { opacity: '1' });\n          });\n        }, VIDEO_REVEAL_DELAY);\n      });\n    }\n\n    function onSourceOpen() {\n      if (!url || !mimeType) return;\n\n      const sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n      const loader = makeProgressiveLoader(url);\n\n      function onUpdateEnded() {\n        loader.next()\n          .then(({\n            value,\n            done,\n          }) => {\n            if (mediaSource.readyState !== 'open') return;\n            if (done) {\n              endOfStream(mediaSource);\n              return;\n            }\n            appendBuffer(sourceBuffer, value);\n          });\n      }\n\n      sourceBuffer.addEventListener('updateend', onUpdateEnded);\n\n      loader.next()\n        .then(({\n          value,\n          done,\n        }) => {\n          if (done || mediaSource.readyState !== 'open') return;\n          revealVideo();\n          appendBuffer(sourceBuffer, value);\n        });\n    }\n\n    mediaSource.addEventListener('sourceopen', onSourceOpen, { once: true });\n\n    requestMutation(() => {\n      applyStyles(video, {\n        display: 'none',\n        opacity: '0',\n      });\n      video.src = URL.createObjectURL(mediaSource);\n    });\n\n    return () => {\n      requestMutation(() => {\n        const src = video.src;\n        unloadVideo(video);\n        mediaSource.removeEventListener('sourceopen', onSourceOpen);\n        if (mediaSource.readyState === 'open') {\n          endOfStream(mediaSource);\n        }\n        URL.revokeObjectURL(src);\n      });\n    };\n  }, [mimeType, url, videoRef]);\n\n  return checkIfStreamingSupported(mimeType);\n}\n\nexport function checkIfStreamingSupported(mimeType?: string) {\n  if (!IS_SAFARI || !mimeType) return false;\n  return Boolean(getMediaSource()?.isTypeSupported(mimeType));\n}\n\nfunction appendBuffer(sourceBuffer: SourceBuffer, buffer: ArrayBuffer) {\n  try {\n    sourceBuffer.appendBuffer(buffer);\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to append buffer', error);\n    }\n  }\n}\n\nfunction endOfStream(mediaSource: MediaSource) {\n  try {\n    mediaSource.endOfStream();\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to end stream', error);\n    }\n  }\n}\n\nfunction getMediaSource(): typeof MediaSource | undefined {\n  if ('ManagedMediaSource' in window) {\n    // @ts-ignore\n    return ManagedMediaSource;\n  }\n  if ('MediaSource' in window) {\n    return MediaSource;\n  }\n  return undefined;\n}\n","import { useEffect } from '../../lib/teact/teact';\n\nimport { onBeforeUnload } from '../../util/schedulers';\nimport useLastCallback from '../useLastCallback';\n\nexport default function useBeforeUnload(callback: AnyToVoidFunction) {\n  const lastCallback = useLastCallback(callback);\n\n  useEffect(() => onBeforeUnload(lastCallback), [lastCallback]);\n}\n","import { useEffect, useLayoutEffect, useState } from '../../lib/teact/teact';\n\nimport { ElectronEvent } from '../../types/electron';\n\nimport { IS_IOS } from '../../util/windowEnvironment';\n\ntype ElementType = HTMLElement;\ntype RefType = {\n  current: ElementType | null;\n};\n\ntype ReturnType = [boolean, () => void, () => void] | [false];\ntype CallbackType = (isPlayed: boolean) => void;\n\nconst prop = getBrowserFullscreenElementProp();\n\nexport default function useFullscreen(elRef: RefType, exitCallback?: CallbackType,\n  enterCallback?: CallbackType): ReturnType {\n  const [isFullscreen, setIsFullscreen] = useState(Boolean(prop && document[prop]));\n\n  const setFullscreen = () => {\n    if (!elRef.current || !(prop || IS_IOS) || isFullscreen) {\n      return;\n    }\n    safeRequestFullscreen(elRef.current);\n    setIsFullscreen(true);\n  };\n\n  const exitFullscreen = () => {\n    if (!elRef.current) {\n      return;\n    }\n    safeExitFullscreen();\n    setIsFullscreen(false);\n  };\n\n  useLayoutEffect(() => {\n    const element = elRef.current;\n    const listener = () => {\n      const isEnabled = Boolean(prop && document[prop]);\n      setIsFullscreen(isEnabled);\n      if (isEnabled) {\n        enterCallback?.(false);\n      } else {\n        exitCallback?.(false);\n      }\n      // In Firefox fullscreen video controls are not visible by default, so we force them manually\n      if (element instanceof HTMLVideoElement) element.controls = isEnabled;\n    };\n\n    const listenerEnter = () => {\n      setIsFullscreen(true);\n      if (enterCallback) enterCallback(true);\n    };\n\n    const listenerExit = () => {\n      setIsFullscreen(false);\n      if (exitCallback) exitCallback(false);\n    };\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    if (element) {\n      element.addEventListener('webkitbeginfullscreen', listenerEnter, false);\n      element.addEventListener('webkitendfullscreen', listenerExit, false);\n    }\n\n    return () => {\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n      if (element) {\n        element.removeEventListener('webkitbeginfullscreen', listenerEnter, false);\n        element.removeEventListener('webkitendfullscreen', listenerExit, false);\n      }\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  if (!prop && !IS_IOS) {\n    return [false];\n  }\n\n  return [isFullscreen, setFullscreen, exitFullscreen];\n}\n\nexport const useFullscreenStatus = () => {\n  const [isFullscreen, setIsFullscreen] = useState(false);\n\n  useEffect(() => {\n    const listener = () => {\n      setIsFullscreen(checkIfFullscreen());\n    };\n\n    const removeElectronListener = window.electron?.on(ElectronEvent.FULLSCREEN_CHANGE, setIsFullscreen);\n    window.electron?.isFullscreen().then(setIsFullscreen);\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    return () => {\n      removeElectronListener?.();\n\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n    };\n  }, []);\n\n  return isFullscreen;\n};\n\nfunction getBrowserFullscreenElementProp() {\n  if (typeof document.fullscreenElement !== 'undefined') {\n    return 'fullscreenElement';\n  } else if (typeof document.mozFullScreenElement !== 'undefined') {\n    return 'mozFullScreenElement';\n  } else if (typeof document.webkitFullscreenElement !== 'undefined') {\n    return 'webkitFullscreenElement';\n  }\n  return '';\n}\n\nexport function checkIfFullscreen() {\n  const fullscreenProp = getBrowserFullscreenElementProp();\n  return Boolean(fullscreenProp && document[fullscreenProp]);\n}\n\nexport function safeRequestFullscreen(element: ElementType) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  } else if (element.webkitEnterFullscreen) {\n    element.webkitEnterFullscreen();\n  } else if (element.mozRequestFullScreen) {\n    element.mozRequestFullScreen();\n  }\n}\n\nexport function safeExitFullscreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.webkitCancelFullScreen) {\n    document.webkitCancelFullScreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  }\n}\n","export enum ElectronEvent {\n  FULLSCREEN_CHANGE = 'fullscreen-change',\n  UPDATE_ERROR = 'update-error',\n  UPDATE_AVAILABLE = 'update-available',\n  DEEPLINK = 'deeplink',\n}\n\nexport enum ElectronAction {\n  GET_IS_FULLSCREEN = 'get-is-fullscreen',\n  INSTALL_UPDATE = 'install-update',\n  HANDLE_DOUBLE_CLICK = 'handle-double-click',\n  OPEN_NEW_WINDOW = 'open-new-window',\n  SET_WINDOW_TITLE = 'set-window-title',\n  SET_TRAFFIC_LIGHT_POSITION = 'set-traffic-light-position',\n  SET_IS_AUTO_UPDATE_ENABLED = 'set-is-auto-update-enabled',\n  GET_IS_AUTO_UPDATE_ENABLED = 'get-is-auto-update-enabled',\n  SET_IS_TRAY_ICON_ENABLED = 'set-is-tray-icon-enabled',\n  GET_IS_TRAY_ICON_ENABLED = 'get-is-tray-icon-enabled',\n  RESTORE_LOCAL_STORAGE = 'restore-local-storage',\n}\n\nexport type TrafficLightPosition = 'standard' | 'lowered';\n\nexport interface ElectronApi {\n  isFullscreen: () => Promise<boolean>;\n  installUpdate: () => Promise<void>;\n  handleDoubleClick: () => Promise<void>;\n  openNewWindow: (url: string, title?: string) => Promise<void>;\n  setWindowTitle: (title?: string) => Promise<void>;\n  setTrafficLightPosition: (position: TrafficLightPosition) => Promise<void>;\n  setIsAutoUpdateEnabled: (value: boolean) => Promise<void>;\n  getIsAutoUpdateEnabled: () => Promise<boolean>;\n  setIsTrayIconEnabled: (value: boolean) => Promise<void>;\n  getIsTrayIconEnabled: () => Promise<boolean>;\n  restoreLocalStorage: () => Promise<void>;\n  on: (eventName: ElectronEvent, callback: any) => VoidFunction;\n}\n\ndeclare global {\n  interface Window {\n    electron?: ElectronApi;\n  }\n}\n","import generateUniqueId from './generateUniqueId';\nimport { throttleWithTickEnd } from './schedulers';\n\nexport interface CancellableCallback {\n  (\n    ...args: any[]\n  ): void;\n\n  isCanceled?: boolean;\n}\n\ntype InitPayload = {\n  type: 'init';\n  messageId?: string;\n  args: any;\n};\n\ntype CallMethodPayload = {\n  type: 'callMethod';\n  messageId?: string;\n  name: string;\n  args: any;\n  withCallback?: boolean;\n};\n\ntype CancelProgressPayload = {\n  type: 'cancelProgress';\n  messageId: string;\n};\n\nexport type OriginPayload =\n  InitPayload\n  | CallMethodPayload\n  | CancelProgressPayload;\n\nexport type OriginMessageData = {\n  channel?: string;\n  payloads: OriginPayload[];\n};\n\nexport interface OriginMessageEvent {\n  data: OriginMessageData;\n}\n\nexport type ApiUpdate =\n  { type: string }\n  & any;\n\nexport type WorkerPayload =\n  {\n    channel?: string;\n    type: 'update';\n    update: ApiUpdate;\n  }\n  |\n  {\n    channel?: string;\n    type: 'methodResponse';\n    messageId: string;\n    response?: any;\n    error?: { message: string };\n  }\n  |\n  {\n    channel?: string;\n    type: 'methodCallback';\n    messageId: string;\n    callbackArgs: any[];\n  }\n  |\n  {\n    channel?: string;\n    type: 'unhandledError';\n    error?: { message: string };\n  };\n\nexport type WorkerMessageData = {\n  channel?: string;\n  payloads: WorkerPayload[];\n};\n\nexport interface WorkerMessageEvent {\n  data: WorkerMessageData;\n}\n\ninterface RequestState {\n  messageId: string;\n  resolve: Function;\n  reject: Function;\n  callback: AnyToVoidFunction;\n}\n\ntype InputRequestTypes = Record<string, AnyFunction>;\n\ntype Values<T> = T[keyof T];\nexport type RequestTypes<T extends InputRequestTypes> = Values<{\n  [Name in keyof (T)]: {\n    name: Name & string;\n    args: Parameters<T[Name]>;\n    transferables?: Transferable[];\n  }\n}>;\n\nclass ConnectorClass<T extends InputRequestTypes> {\n  private requestStates = new Map<string, RequestState>();\n\n  private requestStatesByCallback = new Map<AnyToVoidFunction, RequestState>();\n\n  private pendingPayloads: OriginPayload[] = [];\n\n  private pendingTransferables: Transferable[] = [];\n\n  constructor(\n    public target: Worker,\n    private onUpdate?: (update: ApiUpdate) => void,\n    private channel?: string,\n  ) {\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  public destroy() {\n  }\n\n  init(...args: any[]) {\n    this.postMessageOnTickEnd({\n      type: 'init',\n      args,\n    });\n  }\n\n  request(messageData: RequestTypes<T>) {\n    const { requestStates, requestStatesByCallback } = this;\n    const { transferables, ...restMessageData } = messageData;\n\n    const messageId = generateUniqueId();\n    const payload: CallMethodPayload = {\n      type: 'callMethod',\n      messageId,\n      ...restMessageData,\n    };\n\n    const requestState = { messageId } as RequestState;\n\n    // Re-wrap type because of `postMessage`\n    const promise: Promise<any> = new Promise((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    });\n\n    if (typeof payload.args[payload.args.length - 1] === 'function') {\n      payload.withCallback = true;\n\n      const callback = payload.args.pop() as AnyToVoidFunction;\n      requestState.callback = callback;\n      requestStatesByCallback.set(callback, requestState);\n    }\n\n    requestStates.set(messageId, requestState);\n    promise\n      .catch(() => undefined)\n      .finally(() => {\n        requestStates.delete(messageId);\n\n        if (requestState.callback) {\n          requestStatesByCallback.delete(requestState.callback);\n        }\n      });\n\n    this.postMessageOnTickEnd(payload, transferables);\n\n    return promise;\n  }\n\n  cancelCallback(progressCallback: CancellableCallback) {\n    progressCallback.isCanceled = true;\n\n    const { messageId } = this.requestStatesByCallback.get(progressCallback) || {};\n    if (!messageId) {\n      return;\n    }\n\n    this.postMessageOnTickEnd({\n      type: 'cancelProgress',\n      messageId,\n    });\n  }\n\n  onMessage(data: WorkerMessageData) {\n    const { requestStates, channel } = this;\n    if (data.channel !== channel) {\n      return;\n    }\n\n    data.payloads.forEach((payload) => {\n      if (payload.type === 'update' && this.onUpdate) {\n        this.onUpdate(payload.update);\n      }\n      if (payload.type === 'methodResponse') {\n        const requestState = requestStates.get(payload.messageId);\n        if (requestState) {\n          if (payload.error) {\n            requestState.reject(payload.error);\n          } else {\n            requestState.resolve(payload.response);\n          }\n        }\n      } else if (payload.type === 'methodCallback') {\n        const requestState = requestStates.get(payload.messageId);\n        requestState?.callback?.(...payload.callbackArgs);\n      } else if (payload.type === 'unhandledError') {\n        throw new Error(payload.error?.message);\n      }\n    });\n  }\n\n  private postMessageOnTickEnd(payload: OriginPayload, transferables?: Transferable[]) {\n    this.pendingPayloads.push(payload);\n\n    if (transferables) {\n      this.pendingTransferables.push(...transferables);\n    }\n\n    this.postMessagesOnTickEnd();\n  }\n\n  private postMessagesOnTickEnd = throttleWithTickEnd(() => {\n    const { channel } = this;\n    const payloads = this.pendingPayloads;\n    const transferables = this.pendingTransferables;\n\n    this.pendingPayloads = [];\n    this.pendingTransferables = [];\n\n    this.target.postMessage({ channel, payloads }, transferables);\n  });\n}\n\nexport function createConnector<T extends InputRequestTypes>(\n  worker: Worker,\n  onUpdate?: (update: ApiUpdate) => void,\n  channel?: string,\n) {\n  const connector = new ConnectorClass<T>(worker, onUpdate, channel);\n\n  function handleMessage({ data }: WorkerMessageEvent) {\n    connector.onMessage(data);\n  }\n\n  worker.addEventListener('message', handleMessage);\n\n  connector.destroy = () => {\n    worker.removeEventListener('message', handleMessage);\n  };\n\n  return connector;\n}\n\nexport type Connector<T extends InputRequestTypes = InputRequestTypes> = ReturnType<typeof createConnector<T>>;\n","import { getActions, getGlobal } from '../global';\n\nimport type { ApiMessage } from '../api/types';\nimport type { MessageKey } from './keys/messageKey';\nimport { AudioOrigin, GlobalSearchContent } from '../types';\n\nimport { requestNextMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCurrentMessageList, selectTabState } from '../global/selectors';\nimport { getMessageServerKey, parseMessageKey } from './keys/messageKey';\nimport { isSafariPatchInProgress, patchSafariProgressiveAudio } from './patchSafariProgressiveAudio';\nimport safePlay from './safePlay';\nimport { IS_SAFARI } from './windowEnvironment';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio' | 'oneTimeVoice';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\n\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = selectTabState(getGlobal()).audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset `src` to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // `onPause` not called otherwise, but required to sync UI\n        requestNextMutation(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (selectTabState(getGlobal()).globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId | undefined {\n  const key = getMessageServerKey(message);\n  if (!key) {\n    return undefined;\n  }\n  return `${key}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import { pause } from './schedulers';\n\ntype PendingDownload = {\n  url: string;\n  filename: string;\n};\n\n// Chrome prevents more than 10 downloads per second\nconst LIMIT_PER_BATCH = 10;\nconst BATCH_INTERVAL = 1000;\n\nlet pendingDownloads: PendingDownload[] = [];\nlet planned = false;\n\nexport default function download(url: string, filename: string) {\n  pendingDownloads.push({ url, filename });\n  if (!planned) {\n    planned = true;\n    setTimeout(async () => {\n      await processQueue();\n      planned = false;\n    }, BATCH_INTERVAL);\n  }\n}\n\nasync function processQueue() {\n  let count = 0;\n  for (const pendingDownload of pendingDownloads) {\n    downloadOne(pendingDownload);\n    count++;\n    if (count === LIMIT_PER_BATCH) {\n      await pause(BATCH_INTERVAL);\n      count = 0;\n    }\n  }\n  pendingDownloads = [];\n}\n\nfunction downloadOne({ url, filename }: PendingDownload) {\n  const link = document.createElement('a');\n  link.href = url;\n  link.target = '_blank';\n  link.rel = 'noopener noreferrer';\n  link.download = filename;\n  try {\n    link.click();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err); // Suppress redundant \"Blob loading failed\" error popup on IOS\n  }\n}\n","import { MESSAGE_CONTENT_CLASS_NAME } from '../config';\n\nconst ELEMENT_NODE = 1;\n\nexport default function getMessageIdsForSelectedText() {\n  const selection = window.getSelection();\n  let selectedFragments = selection?.rangeCount ? selection.getRangeAt(0).cloneContents() : undefined;\n\n  const shouldIncludeLastMessage = selection?.focusNode && selection.focusOffset > 0\n    && hasParentWithClassName(selection.focusNode, MESSAGE_CONTENT_CLASS_NAME);\n  if (!selectedFragments || selectedFragments.childElementCount === 0) {\n    return undefined;\n  }\n\n  const messageIds = Array.from(selectedFragments.children)\n    .reduce((result, node) => {\n      if (node.nodeType === ELEMENT_NODE && node.classList.contains('message-date-group')) {\n        return Array.from(node.querySelectorAll('.Message'))\n          .reduce((acc, messageEl) => acc.concat(Number((messageEl as HTMLElement).dataset.messageId)), result);\n      } else if (node.nodeType === ELEMENT_NODE && node.classList.contains('Message')) {\n        return result.concat(Number((node as HTMLElement).dataset.messageId));\n      }\n\n      return result;\n    }, [] as number[]);\n\n  // Cleanup a document fragment because it is playing media content in the background\n  while (selectedFragments.firstChild) {\n    selectedFragments.removeChild(selectedFragments.firstChild);\n  }\n  selectedFragments = undefined;\n\n  if (!shouldIncludeLastMessage) {\n    messageIds.pop();\n  }\n\n  return messageIds;\n}\n\nfunction hasParentWithClassName(element: Node, className: string): boolean {\n  if (element.nodeType === ELEMENT_NODE && (element as HTMLElement).classList.contains(className)) {\n    return true;\n  }\n\n  return element.parentNode ? hasParentWithClassName(element.parentNode, className) : false;\n}\n","import { getAverageColor, getColorLuma } from './colors';\n\nconst LUMA_THRESHOLD = 240;\n\nexport function scaleImage(image: string | Blob, ratio: number, outputType: string = 'image/png'): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, img.width * ratio, img.height * ratio, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nexport function resizeImage(\n  image: string | Blob, width: number, height: number, outputType: string = 'image/png',\n): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, width, height, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nasync function scale(\n  img: HTMLImageElement, width: number, height: number, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  // Safari does not have built-in resize method with quality control\n  if ('createImageBitmap' in window) {\n    try {\n      const bitmap = await window.createImageBitmap(img,\n        { resizeWidth: width, resizeHeight: height, resizeQuality: 'high' });\n      if (bitmap.height !== height || bitmap.width !== width) {\n        throw new Error('Image bitmap resize not supported!'); // FF93 added support for options, but not resize\n      }\n      const averageColor = await getAverageColor(img.src);\n      const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n      return await new Promise((res) => {\n        const canvas = document.createElement('canvas');\n        canvas.width = bitmap.width;\n        canvas.height = bitmap.height;\n        const ctx2D = canvas.getContext('2d')!;\n        ctx2D.fillStyle = fillColor;\n        ctx2D.fillRect(0, 0, canvas.width, canvas.height);\n        const ctx = canvas.getContext('bitmaprenderer');\n        if (ctx) {\n          ctx.transferFromImageBitmap(bitmap);\n        } else {\n          ctx2D.drawImage(bitmap, 0, 0);\n        }\n        canvas.toBlob(res, outputType);\n      });\n    } catch (e) {\n      // Fallback. Firefox below 93 does not recognize `createImageBitmap` with 2 parameters\n      return steppedScale(img, width, height, undefined, outputType);\n    }\n  } else {\n    return steppedScale(img, width, height, undefined, outputType);\n  }\n}\n\nasync function steppedScale(\n  img: HTMLImageElement, width: number, height: number, step: number = 0.5, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d')!;\n  const oc = document.createElement('canvas');\n  const octx = oc.getContext('2d')!;\n\n  canvas.width = width;\n  canvas.height = height;\n\n  if (img.width * step > width) { // For performance avoid unnecessary drawing\n    const mul = 1 / step;\n    let cur = {\n      width: Math.floor(img.width * step),\n      height: Math.floor(img.height * step),\n    };\n\n    oc.width = cur.width;\n    oc.height = cur.height;\n\n    octx.drawImage(img, 0, 0, cur.width, cur.height);\n\n    while (cur.width * step > width) {\n      cur = {\n        width: Math.floor(cur.width * step),\n        height: Math.floor(cur.height * step),\n      };\n      octx.drawImage(oc, 0, 0, cur.width * mul, cur.height * mul, 0, 0, cur.width, cur.height);\n    }\n\n    ctx.drawImage(oc, 0, 0, cur.width, cur.height, 0, 0, canvas.width, canvas.height);\n  } else {\n    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n  }\n\n  const averageColor = await getAverageColor(img.src);\n  const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n  ctx.fillStyle = fillColor;\n  ctx.globalCompositeOperation = 'destination-over';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  return new Promise((resolve) => {\n    canvas.toBlob(resolve, outputType);\n  });\n}\n","import type { MediaWorkerApi } from '../lib/mediaWorker/index.worker';\nimport type { Connector } from './PostMessageConnector';\n\nimport { IS_TEST } from '../config';\n\nimport { createConnector } from './PostMessageConnector';\n\nexport const MAX_WORKERS = Math.min(navigator.hardwareConcurrency || 4, 4);\n\nlet instances: {\n  worker: Worker;\n  connector: Connector<MediaWorkerApi>;\n}[] | undefined;\n\nexport default function launchMediaWorkers() {\n  if (IS_TEST) return [];\n  if (!instances) {\n    instances = new Array(MAX_WORKERS).fill(undefined).map(\n      () => {\n        const worker = new Worker(new URL('../lib/mediaWorker/index.worker.ts', import.meta.url));\n        const connector = createConnector<MediaWorkerApi>(worker, undefined, 'media');\n        return { worker, connector };\n      },\n    );\n  }\n\n  return instances;\n}\n\nexport function requestMediaWorker(payload: Parameters<Connector<MediaWorkerApi>['request']>[0], index: number) {\n  return launchMediaWorkers()[index].connector.request(payload);\n}\n","import type { ApiGeoPoint } from '../api/types';\n\nconst PROVIDERS = {\n  google: 'https://maps.google.com/maps',\n  bing: 'https://bing.com/maps/default.aspx',\n  osm: 'https://www.openstreetmap.org',\n  apple: 'https://maps.apple.com',\n};\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L82\nconst VENUE_COLORS = new Map(Object.entries({\n  'building/medical': '#43b3f4',\n  'building/gym': '#43b3f4',\n  'education/cafeteria': '#f7943f',\n  'travel/bedandbreakfast': '#9987ff',\n  'travel/hotel': '#9987ff',\n  'travel/hostel': '#9987ff',\n  'travel/resort': '#9987ff',\n  'travel/hotel_bar': '#e56dd6',\n  arts_entertainment: '#e56dd6',\n  building: '#6e81b2',\n  education: '#a57348',\n  event: '#959595',\n  food: '#f7943f',\n  home: '#00aeef',\n  nightlife: '#e56dd6',\n  parks_outdoors: '#6cc039',\n  shops: '#ffb300',\n  travel: '#1c9fff',\n  work: '#ad7854',\n}));\n\nconst RANDOM_COLORS = [\n  '#e56cd5', '#f89440', '#9986ff', '#44b3f5', '#6dc139', '#ff5d5a', '#f87aad', '#6e82b3', '#f5ba21',\n];\n\nexport function prepareMapUrl(provider: keyof typeof PROVIDERS, point: Omit<ApiGeoPoint, 'accessHash'>, zoom = 15) {\n  const { lat, long } = point;\n  const providerUrl = PROVIDERS[provider];\n  switch (provider) {\n    case 'google':\n      return `${providerUrl}/place/${lat}+${long}/@${lat},${long},${zoom}z`;\n    case 'bing':\n      return `${providerUrl}?cp=${lat}~${long}&lvl=${zoom}&sp=point.${lat}_${long}`;\n    case 'apple':\n      return `${providerUrl}?q=${lat},${long}`;\n    case 'osm':\n    default:\n      return `${providerUrl}/?mlat=${lat}&mlon=${long}&zoom=${zoom}`;\n  }\n}\n\nexport function getMetersPerPixel(lat: number, zoom: number) {\n  // https://groups.google.com/g/google-maps-js-api-v3/c/hDRO4oHVSeM/m/osOYQYXg2oUJ\n  return (156543.03392 * Math.cos(lat * (Math.PI / 180))) / 2 ** zoom;\n}\n\nexport function getVenueIconUrl(type?: string) {\n  if (!type) return '';\n  return `https://ss3.4sqi.net/img/categories_v2/${type}_88.png`;\n}\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L104\nexport function getVenueColor(type?: string) {\n  if (!type) return '#008df2';\n  return VENUE_COLORS.get(type)\n    || VENUE_COLORS.get(type.split('/')[0])\n    || RANDOM_COLORS[stringToNumber(type) % RANDOM_COLORS.length];\n}\n\nfunction stringToNumber(str: string) {\n  return str.split('').reduce((prevHash, currVal) => (\n    // eslint-disable-next-line no-bitwise\n    (((prevHash << 5) - prevHash) + currVal.charCodeAt(0)) | 0), 0);\n}\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","import { ApiMediaFormat } from '../api/types';\n\nimport { callApi } from '../api/gramjs';\n\nconst MB = 1024 * 1024;\nconst DEFAULT_PART_SIZE = 0.25 * MB;\nconst MAX_END_TO_CACHE = 5 * MB - 1; // We only cache the first 2 MB of each file\n\nconst bufferCache = new Map<string, ArrayBuffer>();\nconst sizeCache = new Map<string, number>();\nconst pendingRequests = new Map<string, Promise<{ arrayBuffer?: ArrayBuffer; fullSize?: number } | undefined>>();\n\nexport async function* makeProgressiveLoader(\n  url: string,\n  start = 0,\n  chunkSize = DEFAULT_PART_SIZE,\n): AsyncGenerator<ArrayBuffer, void, undefined> {\n  const match = url.match(/fileSize=(\\d+)/);\n  let fileSize;\n  if (match) {\n    fileSize = match && Number(match[1]);\n  } else {\n    fileSize = sizeCache.get(url);\n  }\n\n  while (true) {\n    if (fileSize && start >= fileSize) return;\n\n    let end = start + chunkSize - 1;\n    if (fileSize && end > fileSize) {\n      end = fileSize - 1;\n    }\n\n    // Check if we have the chunk in memory\n    const cacheKey = `${url}:${start}-${end}`;\n    let arrayBuffer = bufferCache.get(cacheKey);\n\n    if (!arrayBuffer) {\n      let request = pendingRequests.get(cacheKey);\n      if (!request) {\n        request = callApi('downloadMedia', {\n          mediaFormat: ApiMediaFormat.Progressive,\n          url,\n          start,\n          end,\n        });\n\n        pendingRequests.set(cacheKey, request);\n      }\n\n      const result = await request.finally(() => {\n        pendingRequests.delete(cacheKey);\n      });\n\n      if (!result?.arrayBuffer) return;\n\n      // If fileSize is not yet defined, retrieve it from the first chunk's response\n      if (result.fullSize && !fileSize) {\n        fileSize = result.fullSize;\n        sizeCache.set(url, result.fullSize);\n      }\n\n      // Store the chunk in memory\n      arrayBuffer = result.arrayBuffer;\n\n      // Cache the first 2 MB of each file\n      if (end <= MAX_END_TO_CACHE) {\n        bufferCache.set(cacheKey, result.arrayBuffer);\n      }\n    }\n\n    // Yield the chunk data\n    yield arrayBuffer;\n\n    start = end + 1;\n  }\n}\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n","import windowSize from '../windowSize';\n\nexport function isElementInViewport(el: HTMLElement) {\n  if (el.style.display === 'none') {\n    return false;\n  }\n\n  const rect = el.getBoundingClientRect();\n  const { height: windowHeight } = windowSize.get();\n\n  return (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CdTfL4f7\",\"fadeIn\":\"MyeHARy0\",\"closing\":\"EZbKn_M3\",\"peer\":\"kW0xpExG\",\"name\":\"BDZrSTO_\",\"name_hasUnreadStory\":\"OoUm5AUZ\",\"nameHasUnreadStory\":\"OoUm5AUZ\",\"hidden\":\"lnVtxMZI\",\"contextMenu\":\"N1sagA0s\"};","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"BDZrSTO_\",\"root\":\"QOz6fQFU\",\"avatar\":\"dXSy0i2c\",\"avatarHidden\":\"n0vJEdNW\",\"ghost\":\"E1IeDpeb\",\"ghostAnimateName\":\"HMp3KTKQ\",\"ghostRevealName\":\"unYkDic1\",\"ghostLast\":\"dZJGfaXC\"};"],"names":["memo","withGlobal","global","chatId","chat","selectChat","groupCall","selectChatGroupCall","isActive","selectTabState","isMasterTab","groupCalls","activeGroupCallId","undefined","id","Boolean","participantsCount","isLoaded","isCallNotEmpty","isCallActive","GroupCallTopPane","className","onPaneStateChange","requestMasterAndJoinGroupCall","subscribeToGroupCallUpdates","getActions","lang","useOldLang","handleJoinGroupCall","useCallback","participants","fetchedParticipants","useMemo","usersById","getGlobal","users","byId","chatsById","chats","Object","values","slice","map","filter","useEffect","subscribed","renderingParticipantCount","useCurrentOrPrev","renderingFetchedParticipants","isRendering","ref","shouldRender","useHeaderPane","isOpen","onStateChange","React","createElement","buildClassName","onClick","length","AvatarList","size","peers","Button","round","TINY_SCREEN_WIDTH_MQL","window","matchMedia","WITH_AVATAR_TINY_SCREEN_WIDTH_MQL","renderSeekline","playProgress","bufferedRanges","seekerRef","start","end","style","Audio","theme","message","senderTitle","uploadProgress","origin","date","noAvatars","isSelectable","isSelected","isDownloading","isTranscribing","isTranscriptionHidden","isTranscribed","isTranscriptionError","canDownload","canTranscribe","autoPlay","onHideTranscription","onPlay","onPause","onReadMedia","onCancelUpload","onDateClick","cancelMediaDownload","downloadMedia","transcribeAudio","openOneTimeMediaModal","content","audio","contentAudio","voice","video","isMediaUnread","getMessageWebPageAudio","media","mediaSource","isVoice","isSeeking","useRef","isRtl","isMobile","useAppLayout","isActivated","setIsActivated","useState","shouldLoad","coverHash","getMediaHash","coverBlobUrl","useMedia","ApiMediaFormat","BlobUrl","hasTtl","hasMessageTtl","isInOneTimeModal","AudioOrigin","OneTimeModal","trackType","mediaData","getMediaFormat","loadProgress","downloadProgress","useMediaWithLoadProgress","handleForcePlay","useLastCallback","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","noReset","isPlaying","playPause","setCurrentTime","duration","useAudioPlayer","makeTrackId","getMediaDuration","isMessageLocal","reversePlayProgress","isOwn","isOwnMessage","isReverse","waveformCanvasRef","withAvatar","canvasRef","data","spikes","peak","waveform","Array","Math","min","fill","MIN_SPIKES","MAX_SPIKES","matches","getSeeklineSpikeAmounts","durationFactor","spikesCount","fitCount","newData","springFactor","leftFiller","rightFiller","i","idx","floor","val","interpolateArray","encoded5bit","bitsCount","valuesCount","result","bitsData","l","byteIndex","bitShift","value","lastByteIndex","lastBitShift","lastValue","decodeWaveform","Uint8Array","useLayoutEffect","canvas","current","progress","fillStyle","progressFillStyle","width","height","ctx","getContext","scale","forEach","item","globalAlpha","spikeHeight","max","x","y","radius","SPIKE_WIDTH","beginPath","moveTo","arcTo","closePath","roundedRectangle","renderWaveform","useWaveformCanvas","withSeekline","isLoadingForPlaying","isUploading","isTransferring","transferProgress","getMediaTransferState","shouldRenderSpinner","transitionClassNames","spinnerClassNames","useShowTransitionDeprecated","shouldRenderCross","handleButtonClick","setAudioPlayerOrigin","handleDownloadClick","originMessage","handleSeek","e","left","getBoundingClientRect","clientX","MouseEvent","targetTouches","stopPropagation","handleStartSeek","button","handleStopSeek","handleDateClick","handleTranscribe","messageId","renderFirstLine","title","fileName","captureEvents","onCapture","onRelease","onDrag","fullClassName","Inline","Search","SharedMedia","buttonClassNames","push","contentClassName","renderWithTitle","dir","renderText","Link","formatPastTimeShort","formatMediaDuration","performer","renderSecondLine","Icon","name","ripple","color","ariaLabel","backgroundImage","nonInteractive","AnimatedIcon","tgsUrl","LOCAL_TGS_URLS","Flame","noLoop","ProgressSpinner","transparent","withColor","noCross","rotationOffset","showProgress","showSeekline","getFileSizeString","Fragment","formatMediaDateTime","renderAudio","onClickTranscribe","draggable","viewBox","rx","ry","stroke","renderVoice","resetInput","applyIosAutoCapitalizationFix","inputEl","focus","IS_IOS","document","classList","add","body","appendChild","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","prepareForRegExp","html","replace","RE_COMMAND","isFrozen","URL_ENTITIES","Set","ApiMessageEntityTypes","TextUrl","Url","INLINE_BOT_QUERY_REGEXP","HAS_NEW_LINE","MEMO_NO_RESULT","username","query","canShowHelp","usernameLowered","tempEl","buildQueryStateMemo","memoized","toLowerCase","STARTS_ENDS_ON_EMOJI_IMG_REGEX","RegExp","EMOJI_IMG_REGEX","source","POLYFILL_OPTIONS","encoderPath","URL","href","reuseWorker","BLOB_PARAMS","type","opusRecorderPromise","OpusRecorder","mediaRecorder","async","init","default","analyzerCallback","startMediaRecorder","startedAt","Date","now","pausedAt","chunks","ondataavailable","typedArray","releaseAnalyzer","recorder","cb","sourceNode","analyser","context","createAnalyser","fftSize","connect","dataLength","frequencyBinCount","dataArray","isDestroyed","tick","getByteFrequencyData","volume","reduce","acc","requestMeasure","subscribeToAnalyzer","stop","Promise","resolve","reject","onstop","blob","Blob","onerror","delayStop","setTimeout","pause","props","attachments","AttachmentModal","useModuleLoader","Bundles","Extra","AttachMenu","threadId","isButtonVisible","canAttachMedia","canAttachPolls","canSendPhotos","canSendVideos","canSendDocuments","canSendAudios","attachBots","peerType","isScheduled","shouldCollectDebugLogs","onFileSelect","onMenuOpen","onMenuClose","onPollCreate","canEditMedia","editingMessage","isAttachMenuOpen","openAttachMenu","closeAttachMenu","useFlag","handleMouseEnter","handleMouseLeave","markMouseInside","useMouseInside","canSendVideoAndPhoto","canSendVideoOrPhoto","isAttachmentBotMenuOpen","markAttachmentBotMenuOpen","unmarkAttachmentBotMenuOpen","isMenuOpen","isPhotoOrVideo","groupedId","getMessagePhoto","getMessageWebPagePhoto","getMessageVideo","getMessageWebPageVideo","isFile","getMessageAudio","getMessageVoice","getMessageDocument","handleToggleAttachMenu","handleFileSelect","shouldSuggestCompression","files","target","validatedFiles","validateFiles","handleQuickSelect","openSystemFilesDialog","from","CONTENT_TYPES_WITH_PREVIEW","SUPPORTED_PHOTO_CONTENT_TYPES","SUPPORTED_VIDEO_CONTENT_TYPES","join","handleDocumentSelect","SUPPORTED_AUDIO_CONTENT_TYPES","handleSendLogs","file","File","getDebugLogs","DEBUG_LOG_FILENAME","bots","bot","isForAttachMenu","attachMenuPeerTypes","includes","ResponsiveHoverButton","onActivate","ariaControls","hasPopup","disabled","Menu","autoClose","positionX","positionY","onClose","onCloseAnimationEnd","onMouseEnter","IS_TOUCH_ENV","onMouseLeave","noCloseOnBackdrop","ariaLabelledBy","MenuItem","icon","AttachBotItem","onMenuOpened","onMenuClosed","BotCommandMenu","selectCurrentMessageList","selectChatMessage","BotKeyboardMenu","clickBotInlineButton","isKeyboardSingleUse","buttonTexts","texts","keyboardButtons","row","renderKeyboardButtonText","noCompact","j","BotMenuButton","text","isDisabled","textRef","textEl","scrollWidth","closest","setProperty","composerEl","removeProperty","ChatCommandTooltip","shouldForceShowEditing","messageListType","forwardMessages","fromChatId","toChatId","messageIds","forwardMessageIds","noAuthors","noCaptions","isShareMessageModalShown","isModalShown","shouldPreventComposerAnimation","editingId","selectEditingScheduledId","selectEditingId","shouldAnimate","selectCanAnimateInterface","isForwarding","forwardedMessages","draft","selectDraft","replyInfo","replyToPeerId","senderChat","sender","selectEditingMessage","replyToMsgId","selectSender","selectForwardedSender","selectPeer","forwardInfo","isChatWithSelf","selectIsChatWithSelf","isChannelPost","hiddenUserName","quoteText","isSenderChannel","isChatChannel","forwardsHaveCaptions","some","forward","keys","isContextMenuDisabled","storyData","isReplyToDiscussion","forwardedMessagesCount","isCurrentUserPremium","selectIsCurrentUserPremium","isInChangingRecipientMode","currentUserId","ComposerEmbeddedMessage","onClear","resetDraftReplyInfo","updateDraftReplyInfo","setEditingId","focusMessage","changeRecipient","openChatOrTopicWithReplyInDraft","setForwardNoAuthors","setForwardNoCaptions","exitForwardMode","setShouldPreventComposerAnimation","oldLang","useLang","isReplyToTopicStart","action","isShowingReply","isReplyWithQuote","isShown","clearEmbedded","captureEscKeyListener","isContextMenuOpen","contextMenuAnchor","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","handleMessageClick","handleClearClick","buildAutoCloseMenuItemHandler","handleForwardToAnotherChatClick","handleShowMessageClick","focusMessageFromDraft","noForumTopicPanel","handleRemoveQuoteClick","handleChangeReplyRecipientClick","handleReplyInSenderChat","handleDoNotReplyClick","getTriggerElement","getRootElement","getMenuElement","querySelector","renderingSender","innerClassName","getPeerColorClass","leftIcon","customText","strippedMessage","strippedText","stripCustomEmoji","renderingLeftIcon","canReplyInSenderChat","onContextMenu","ClosableEmbeddedMessage","isInComposer","faded","anchor","customIcon","MenuSeparator","DropArea","InlineBotTooltip","MentionTooltip","PollModal","SendAsMenu","StickerTooltip","RE_LINK","RE_LINK_TEMPLATE","noWebPage","selectNoWebPage","attachmentSettings","selectTheme","webPagePreview","WebPagePreview","getHtml","isEditing","loadWebPagePreview","clearWebPagePreview","toggleMessageWebPage","updateAttachmentSettings","formattedTextWithLinkRef","isInvertedMedia","isSmallerMedia","webPageMediaSize","detectLinkDebounced","useDebouncedResolver","formattedText","parseHtmlAsFormattedText","linkEntity","entities","find","entity","url","match","getLink","useDerivedSignal","link","useSyncEffect","useDerivedState","hasMediaSizeOptions","hasLargeMedia","renderingWebPage","handleClearWebpagePreview","handlePreviewClick","updateIsInvertedMedia","updateIsLargerMedia","photo","webPageWithoutPhoto","messageStub","webPage","WebPage","inPreview","onContainerClick","MainButtonState","storyId","chatBot","isSystemBot","selectBot","isChatWithBot","isChatWithUser","isUserId","userFullInfo","selectUserFullInfo","chatFullInfo","selectChatFullInfo","messageWithActualBotKeyboard","selectNewestMessageWithBotKeyboardButtons","language","shouldSuggestStickers","shouldSuggestCustomEmoji","shouldUpdateStickerSetOrder","settings","byKey","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","botKeyboardMessageId","keyboardMessage","currentUser","selectUser","defaultSendAsId","sendAsId","sendAsPeerIds","peer","adminRights","anonymous","sendAsUser","sendAsChat","requestedDraft","selectRequestedDraft","requestedDraftFiles","selectRequestedDraftFiles","tabState","isStoryViewerOpen","storyViewer","currentMessageList","isForCurrentMessageList","canSendVoiceByPrivacy","noVoiceMessages","slowMode","editingDraft","selectEditingScheduledDraft","selectEditingDraft","story","selectPeerStory","sentStoryReaction","sentReaction","replyToMessage","replyToTopic","isForum","isForumAsMessages","MAIN_THREAD_ID","selectTopicFromMessage","isInScheduledList","canSendQuickReplies","areEffectsSupported","SERVICE_NOTIFICATIONS_USER_ID","canPlayEffect","selectPerformanceSettingsValue","shouldPlayEffect","shouldPlayEffectInComposer","effectId","effect","availableEffectById","effectReactions","reactions","maxMessageLength","config","DEFAULT_MAX_MESSAGE_LENGTH","availableReactions","topReactions","isOnActiveTab","isBlurred","canScheduleUntilOnline","selectCanScheduleUntilOnline","isChannel","isRightColumnShown","selectIsRightColumnShown","isSelectModeActive","selectIsInSelectMode","withScheduledButton","hasScheduledMessages","botKeyboardPlaceholder","keyboardPlaceholder","pollModal","stickersForEmoji","stickers","forEmoji","customEmojiForEmoji","customEmojis","topInlineBotIds","topInlineBots","userIds","contentToBeScheduled","recentEmojis","keywords","inlineBots","byUsername","isInlineBotLoading","isLoading","botCommands","botInfo","commands","botMenuButton","menuButton","attachMenu","attachMenuPeerType","selectChatType","fileSizeLimit","selectCurrentLimit","MAX_UPLOAD_FILEPART_SIZE","captionLimit","isReactionPickerOpen","selectIsReactionPickerOpen","canBuyPremium","selectIsPremiumPurchaseBlocked","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","canSendOneTimeMedia","stealthMode","stories","quickReplyMessages","quickReplies","messagesById","isContactRequirePremium","Composer","renderer","dropAreaState","isReady","onDropHide","onFocus","onBlur","inputPlaceholder","editableInputCssSelector","editableInputId","inputId","onForward","sendMessage","clearDraft","showDialog","openPollModal","closePollModal","loadScheduledHistory","openThread","addRecentEmoji","sendInlineBotResult","loadSendAs","resetOpenChatWithDraft","callAttachBot","addRecentCustomEmoji","showNotification","showAllowedMessageTypesNotification","openStoryReactionPicker","closeReactionPicker","sendStoryReaction","editMessage","saveEffectInDraft","setReactionEffect","hideEffectInComposer","richInputCtx","useRichEditable","storyReactionRef","isMounted","setIsMounted","lastMessageSendTimeSeconds","prevDropAreaState","usePreviousDeprecated","windowWidth","windowSize","get","isInMessageList","isInStoryViewer","canShowSendAs","isSymbolMenuForced","forceShowSymbolMenu","cancelForceShowSymbolMenu","sendMessageAction","useSendMessageAction","isInputHasFocus","onAttachMenuOpen","onAttachMenuClose","canMediaBeReplaced","emojiSet","members","groupChatMembers","chatBotCommands","chatEmojiSetId","isSentStoryReactionHeart","isSameReaction","HEART_REACTION","processMessageInputForCustomEmoji","editable","htmlS","customEmojiNotificationNumber","requestCalendar","calendar","useSchedule","useTimeout","isChannelWithProfiles","areProfilesShown","isChatSuperGroup","shouldAnimateSendAsButtonRef","prevChatId","prevSendAsPeerIds","setAttachments","hasAttachments","nextText","setNextText","canSendStickers","canSendGifs","canAttachEmbedLinks","canSendVoices","canSendPlainText","getAllowedAttachmentOptions","isNeedPremium","isSendTextBlocked","hasWebPagePreview","isComposerBlocked","insertHtmlAndUpdateCursor","newHtml","inInputId","execCommand","insertTextAndUpdateCursor","insertFormattedTextAndUpdateCursor","getTextWithEntitiesAsHtml","insertCustomEmojiAndUpdateCursor","emoji","buildCustomEmojiHtml","insertNextText","shouldForceCompression","shouldForceAsFile","handleAppendFiles","handleClearAttachments","handleSetAttachments","editedMessage","openLimitReachedModal","setShouldForceAsFile","setShouldForceCompression","setShouldSuggestCompression","MEMO_EMPTY_ARRAY","newValue","newAttachments","attachment","getAttachmentMediaType","limit","shouldForce","isSpoiler","newAttachment","buildAttachment","canReplace","canReplaceMessageMedia","all","shouldSendAsSpoiler","suggestCompression","useAttachmentModal","isBotKeyboardOpen","openBotKeyboard","closeBotKeyboard","isBotCommandMenuOpen","openBotCommandMenu","closeBotCommandMenu","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","isSendAsMenuOpen","openSendAsMenu","closeSendAsMenu","isHoverDisabled","disableHover","enableHover","startRecordingVoice","stopRecordingVoice","pauseRecordingVoice","activeVoiceRecording","currentRecordTime","recordButtonRef","mainButtonRef","startRecordTimeRef","isViewOnceEnabled","setIsViewOnceEnabled","toogleViewOnceEnabled","useVoiceRecording","setActiveVoiceRecording","setCurrentRecordTime","IS_SAFARI","IS_VOICE_RECORDING_SUPPORTED","voiceRecording","tickVolume","requestMutation","boxShadow","err","console","error","shouldSendRecordingStatus","useInterval","SEND_MESSAGE_ACTION_INTERVAL","isEditingRef","useStateRef","isAdmin","isChatAdmin","isEmojiTooltipOpen","closeEmojiTooltip","filteredEmojis","filteredCustomEmojis","insertEmoji","useEmojiTooltip","isCustomEmojiTooltipOpen","closeCustomEmojiTooltip","insertCustomEmoji","useCustomEmojiTooltip","isStickerTooltipOpen","closeStickerTooltip","isEnabled","loadStickersForEmoji","clearStickersForEmoji","isManuallyClosed","markManuallyClosed","unmarkManuallyClosed","getSingleEmoji","IS_EMOJI_SUPPORTED","twemojiRegex","cleanHtml","parseEmojiOnlyString","hasStickers","singleEmoji","useStickerTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","isInlineBotTooltipOpen","botId","inlineBotId","isGallery","isInlineBotTooltipGallery","switchPm","inlineBotSwitchPm","switchWebview","inlineBotSwitchWebview","results","inlineBotResults","closeTooltip","closeInlineBotTooltip","help","inlineBotHelp","loadMore","loadMoreForInlineBot","queryInlineBot","resetInlineBot","resetAllInlineBots","extractBotQueryThrottled","useThrottledResolver","startsWith","innerHTML","querySelectorAll","el","innerText","getAttribute","getPlainText","parseBotQuery","prevUsername","offset","useInlineBotTooltip","hasQuickReplies","isChatCommandTooltipOpen","close","closeChatCommandTooltip","filteredBotCommands","botTooltipCommands","filteredQuickReplies","quickReplyCommands","setFilteredBotCommands","setFilteredQuickReplies","detectCommandThrottled","trim","getCommand","command","substring","nextFilteredBotCommands","c","newFilteredQuickReplies","quickReply","shortcut","useChatCommandTooltip","useDraft","saveDraft","loadCustomEmojis","isTouchedRef","isLocalDraft","isLocal","updateDraft","prevState","contents","getFormattedText","shouldKeepReply","runDebouncedForSaveDraft","useRunDebounced","DRAFT_DEBOUNCE","useLayoutEffectWithPrevDeps","prevThreadId","prevDraft","isTouched","clearInput","setFormattedText","customEmojiIds","CustomEmoji","documentId","ids","chatIdRef","threadIdRef","emptyS","scopedСhatId","scopedThreadId","useBackgroundMode","useBeforeUnload","resetComposer","shouldPreserveInput","handleEditComplete","handleEditCancel","useEditing","setEditingDraft","openDeleteMessageModal","setShouldForceShowEditing","replyingToId","useEffectWithPrevDeps","prevEditedMessage","prevReplyingToId","requestNextMutation","messageInput","EDITABLE_INPUT_CSS_SELECTOR","focusEditableElement","shouldSetNoWebPage","has","edited","update","getShouldResetNoWebPageDebounced","restoreNewDraftAfterEditing","hasMessageMedia","messageList","isSchedule","handleBlur","resetComposerRef","stopRecordingVoiceRef","canAnimate","showCustomEmojiPremiumNotification","notificationNumber","payload","shouldReplaceHistory","actionText","initialSection","Number","mainButtonState","Edit","Schedule","Send","Record","Forward","canShowCustomSendMenu","isCustomSendMenuOpen","storyReactionPickerAnchor","handleStoryPickerContextMenu","handleBeforeContextMenu","handleBeforeStoryPickerContextMenu","handleStoryPickerContextMenuHide","peerId","position","useClipboardPaste","shouldStripCustomEmoji","onCustomEmojiStripped","useRichEditablePasteHandler","p","containsCustomEmoji","items","getFilesFromDataTransferItems","isWordDocument","DOMParser","parseFromString","documentElement","hasText","shouldSetAttachments","isUploadingDocumentSticker","isUploadingFileSticker","isInAlbum","concat","handleEmbeddedClear","validateTextLength","isAttachmentModal","maxLength","extraLength","textParams","toString","hasErrorKey","checkSlowMode","nowSeconds","getServerTime","secondsSinceLastMessage","nextSendDateNotReached","nextSendDate","seconds","secondsRemaining","isSlowMode","blur","sendAttachments","attachmentsToSend","sendCompressed","shouldCompress","sendGrouped","shouldSendGrouped","isSilent","scheduledAt","prepareAttachmentsToSend","shouldGroupMessages","isLocalOnly","handleSendAttachmentsFromModal","handleSendAttachments","handleSend","nextState","currentAttachments","record","ttlSeconds","ONE_TIME_MEDIA_TTL_SECONDS","webPageUrl","activeElement","handleClickBotMenu","parsedLink","tryParseDeepLink","appName","processDeepLink","handleActivateBotCommandMenu","handleMessageSchedule","args","queryId","restArgs","prevContentToBeScheduled","getElementById","handleCustomEmojiSelect","emojiSetId","stickerSetInfo","isFree","handleCustomEmojiSelectAttachmentModal","EDITABLE_INPUT_MODAL_ID","handleGifSelect","gif","isScheduleRequested","handleStickerSelect","sticker","canUpdateStickerSetsOrder","isPreloadedGlobally","handleInlineBotSelect","inlineResult","handleBotCommandSelect","handlePollSend","poll","sendSilent","additionalArgs","handleSendAsMenuOpen","insertTextAndUpdateCursorAttachmentModal","removeSymbol","removeLastSymbol","removeSymbolAttachmentModal","handleAllScheduledClick","withBotMenuButton","isBotMenuButtonOpen","timedPlaceholderLangKey","timedPlaceholderDate","activeUntil","isComposerHasFocus","isReactionSelectorOpen","placeholderForForumAsMessages","shouldRenderReactionSelector","reactionSelectorTransitonClassNames","areVoiceMessagesNotAllowed","mainButtonHandler","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","sendButtonAriaLabel","handleToggleReaction","reaction","emoticon","customEmojiMessage","isReaction","handleToggleEffectReaction","handleReactionPickerOpen","sendAsMessage","handleLikeStory","containerId","getStoryKey","handleSendScheduled","handleSendSilent","handleSendWhenOnline","SCHEDULED_WHEN_ONLINE","handleSendScheduledAttachments","handleSendSilentAttachments","handleRemoveEffect","handleStopEffect","onSend","withBotCommands","effectEmoji","DropAreaState","None","withQuick","QuickFile","onHide","ReactionSelector","allAvailableReactions","onToggleReaction","isPrivate","isInSavedMessages","onShowMore","isForMessage","shouldSchedule","forceDarkTheme","onSendSilent","onSendScheduled","onFileAppend","onAttachmentsUpdate","onCustomEmojiSelect","onRemoveSymbol","onEmojiSelect","onSendWhenOnline","isQuiz","shouldBeAnonymous","selectedSendAsId","filteredUsers","onInsertUserName","withUsername","self","filterUnits","dy","in","stdDeviation","d","isSavedMessages","onSelectResult","Avatar","SymbolMenuButton","isMessageComposer","onGifSelect","onStickerSelect","inputCssSelector","idPrefix","MessageInput","customEmojiPrefix","isStoryInput","placeholder","forcedPlaceholder","canAutoFocus","noFocusInterception","shouldSuppressFocus","shouldSuppressTextFormatter","onSuppressedFocus","Spinner","formatVoiceRecordDuration","CustomEmojiTooltip","key","EmojiTooltip","emojis","onMouseDown","ReactionAnimatedEmoji","getReactionKey","withEffectOnly","allowDisabledClick","noFastClick","MessageEffect","shouldPlay","onStop","CustomSendMenu","canSchedule","onSendSchedule","onRemoveEffect","withEffects","hasCurrentEffect","isSavedDialog","isPrivateChat","user","getPrivateChatUserId","isBot","isUserBot","isSupport","canDeleteForAll","contactName","getUserFirstOrLastName","isBasicGroup","isChatBasicGroup","isSuperGroup","DeleteChatModal","leaveChannel","deleteHistory","deleteSavedHistory","deleteChannel","deleteChatUser","blockUser","chatTitle","getChatTitle","handleDeleteForAll","shouldDeleteForAll","handleDeleteAndStop","userId","handleDeleteChat","isCreator","handleLeaveChat","Modal","header","isText","SVG_EXTENSIONS","Document","observeIntersection","smaller","canAutoLoad","autoLoadFileMaxSizeMb","withDate","datetime","shouldWarnAboutSvg","onMediaClick","setSettingOption","isSvgDialogOpen","openSvgDialog","closeSvgDialog","shouldNotWarnAboutSvg","setShouldNotWarnAboutSvg","timestamp","extension","getDocumentExtension","isIntersecting","useIsIntersecting","wasIntersected","markIntersected","isLoadAllowed","setIsLoadAllowed","shouldDownload","documentHash","getDocumentMediaHash","hasPreview","getDocumentHasPreview","thumbDataUri","getMediaThumbUri","localBlobUrl","previewBlobUrl","previewData","withMediaViewer","innerMediaType","handleDownload","handleClick","handleSvgConfirm","thumbnailDataUri","actionIcon","isDocumentVideo","ConfirmDialog","confirmHandler","Checkbox","checked","label","onCheck","DotAnimation","elementRef","withThumb","noThumb","thumbRef","useCanvasBlur","IS_CANVAS_FILTER_SUPPORTED","thumbClassNames","useMediaTransitionDeprecated","shouldSpinnerRender","getColorFromExtension","sizeString","subtitle","getDocumentThumbnailDimensions","src","alt","TOPIC_ICON_SIZE","REM","threadInfo","selectThreadInfo","onlineCount","selectChatOnlineCount","areMessagesLoaded","selectChatMessages","topic","selectTopic","messagesCount","selectThreadMessagesCount","GroupChatInfo","typingStatus","statusIcon","avatarSize","noAvatar","status","withDots","withFullInfo","withUpdatingStatus","withChatType","noRtl","noStatusOrTyping","withStory","storyViewerOrigin","noEmojiStatus","emojiStatusSize","onEmojiStatusClick","loadFullChat","openMediaViewer","loadMoreProfilePhotos","isTopic","isMin","isRestricted","isPreload","handleAvatarViewerOpen","hasMedia","isAvatarView","mediaIndex","MediaViewerOrigin","ProfileAvatar","MiddleHeaderAvatar","mainUsername","getMainUsername","storyViewerMode","TopicIcon","FullNameTitle","withEmojiStatus","TypingStatus","Transition","shouldRestoreHeight","activeKey","getChatTypeString","groupStatus","getGroupStatus","onlineStatus","renderStatusOrTyping","LastMessageMeta","outgoingStatus","draftDate","shouldUseDraft","MessageOutgoingStatus","InviteLink","withShare","onRevoke","openChatWithDraft","isOnlyCopy","copyLink","copyTextToClipboard","handleCopyClick","handleShare","PrimaryLinkMenuButton","onTrigger","readOnly","DropdownMenu","trigger","destructive","Media","isProtected","getMessageMediaThumbDataUri","mediaBlobUrl","getMessageMediaHash","hasSpoiler","getMessageIsSpoiler","isSpoilerShown","hideSpoiler","getMessageHtmlId","decoding","stopEvent","MediaSpoiler","isVisible","isGif","Keys","NothingFound","description","peerColor","noUserColors","shoudReset","emojiIconClassName","children","otherProps","_extends","getApiPeerColorClass","backgroundEmojiId","EmojiIconBackground","emojiDocumentId","forceShowSelf","isSynced","userStatus","selectUserStatus","isSelf","PrivateChatInfo","customPeer","noFake","noVerified","adminMember","iconElement","rightElement","loadFullUser","useIntervalForceUpdate","customTitle","isOwner","subtitleKey","translatedStatus","getUserStatus","mainUserNameClassName","isUserOnline","RippleEffect","ProfilePhoto","canPlayVideo","videoRef","isDeleted","isDeletedUser","isRepliesChat","isChatWithRepliesBot","isAnonymousForwards","isAnonymousForwardsChat","canHaveMedia","isVideo","avatarHash","avatarPhotoId","getChatAvatarHash","previewHash","getPhotoMediaHash","photoHash","getProfilePhotoMediaHash","photoBlobUrl","videoHash","getVideoProfilePhotoMediaHash","fullMediaData","isVideoReady","markVideoReady","isFullMediaReady","isBlurredThumb","thumbnail","dataUri","blurredThumbCanvasRef","currentTime","specialIcon","role","OptimizedVideo","canPlay","muted","disablePictureInPicture","loop","playsInline","onReady","userFullName","getUserFullName","getFirstLetters","profilePhotos","selectPeerPhotos","avatarOwnerId","mediaViewer","currentTopicId","emojiStatus","emojiStatusSticker","emojiStatusSlug","slug","ProfileInfo","openPremiumModal","openStickerSet","openPrivacySettingsNoticeModal","openUniqueGiftBySlug","photos","prevMediaIndex","prevAvatarOwnerId","hasSlideAnimation","setHasSlideAnimation","slideAnimation","currentPhotoIndex","setCurrentPhotoIndex","isFirst","isLast","currentIndex","mediaHash","mediaLoader","usePhotosPreload","handleProfilePhotoClick","SettingsAvatar","handleStatusClick","fromUserId","selectPreviousMedia","selectNextMedia","handleOpenGetReadDateModal","isReadDate","element","styles","selectorToPreventScroll","onSwipe","direction","SwipeDirection","Right","Left","letterClassName","noLoopLimit","totalPhotosLength","count","enumerator","activeDashIndex","MAX_PHOTO_DASH_COUNT","_","renderPhotoTabs","personalPhoto","fallbackPhoto","renderPhoto","canCopyTitle","isSystemBotChat","isReadDateRestrictedByMe","membersCount","renderStatus","iconEmojiId","observeIntersectionForPlaying","loopLimit","TopicDefaultIcon","iconColor","topicId","typingUser","typingUserName","WebLink","onMessageClick","linkData","getMessageWebPage","getFirstLinkInMessage","domain","siteName","formattedDescription","getMessageText","renderMessageSummary","displayUrl","truncatedDescription","trimText","safeLinkContent","SafeLink","NBSP","EmbeddedMessage","forwardSender","chatTranslations","requestedChatTranslationLanguage","observeIntersectionForLoading","containedMedia","replyMedia","isVideoThumbnail","previewPhotoSizes","mediaThumbnail","useThumbnail","isRoundVideo","getMessageRoundVideo","isQuote","replyForwardInfo","replyFrom","shouldTranslate","isMessageTranslatable","translatedText","useMessageTranslation","getPeerTitle","senderChatTitle","forwardSenderTitle","areSendersSame","handleMouseDown","useFastClick","blobUrl","isFullVideo","getPictogramDimensions","srcUrl","shouldRenderVideo","renderPictogram","renderTextWithEntities","noLineBreaks","emojiSize","isActionMessage","ActionMessage","isEmbedded","MessageSummary","noEmoji","getMediaContentTypeDescription","CONTENT_NOT_SUPPORTED","renderMediaContentType","isChatGroup","isReplyToQuote","renderSender","freezeWhenClosed","ICON_POSITIONS","inline","block","opacity","EMOJI_SIZE","containerRef","emojiImage","setEmojiImage","dpr","useDevicePixelRatio","customEmoji","useCustomEmoji","previewMediaHash","getStickerMediaHash","previewUrl","customColor","useDynamicColorListener","preloadAfterHeavyAnimation","useThrottleForHeavyAnimation","preloadImage","then","updateCanvas","clearRect","save","translate","drawImage","restore","tintColor","isLottie","globalCompositeOperation","fillRect","updateCanvasAfterHeavyAnimation","updateCanvasSize","parentWidth","parentHeight","handleResize","entry","contentRect","useResizeObserver","container","getBoostProgressInfo","boostInfo","freezeOnLevelUp","level","boosts","currentLevelBoosts","nextLevelBoosts","hasMyBoost","prepaidGiveaways","isJustUpgraded","currentLevel","hasNextLevel","levelProgress","remainingBoosts","isMaxLevel","formatUsername","asAbsoluteLink","TME_LINK_PREFIX","renderMessageText","highlight","isSimple","truncateLength","forcePlayback","shouldRenderAsHtml","isForMediaViewer","contentNotSupportedText","messageKey","getMessageKey","TRUNCATED_SUMMARY_LENGTH","statefulContent","getMessageStatefulContent","hasSpoilers","Spoiler","hasCustomEmoji","getMessageSummaryText","getMessageSummaryEmoji","emojiWithSpace","getMessageSummaryDescription","isArray","DAY_MINUTES","WEEK_MINUTES","getWeekStart","setHours","day","getDay","diff","getDate","setDate","getTime","shiftTimeRanges","ranges","shift","shiftedRanges","range","startMinute","endMinute","sort","a","b","last","DAYS","BusinessHours","businessHours","transitionRef","isExpanded","expand","collapse","isMyTime","showInMyTime","showInLocalTime","forceUpdate","useForceUpdate","timezoneSignal","useSelectorSignal","timezones","timezoneMinuteDifference","timezone","timezoneId","getTimezoneOffset","utcOffset","workHours","weekStart","days","dayStart","dayEnd","splitDays","segments","formatTime","isBusinessOpen","localTimeHours","minutesSinceWeekStart","currentDay","handleTriggerOffset","slide","ACTIVE_SLIDE_CLASS_NAME","offsetHeight","handleAnimationStart","TO_SLIDE_CLASS_NAME","ListItem","iconClassName","multiline","isStatic","narrow","withColorTransition","tabIndex","onStart","formatWeekday","segment","EFFECT_EMOJIS","birthdayNumbers","animatedEmojiEffects","isPremiumPurchaseBlocked","UserBirthday","birthday","isInSettings","openGiftModal","requestConfetti","animationPlayedRef","isPlayingAnimation","playAnimation","stopAnimation","formattedDate","isToday","age","today","year","setMonth","month","formatDateToString","code","getMonth","getAge","numbersForAge","numbers","endsWith","byEmoji","buildCollectionByKey","split","digit","effectSticker","randomEffect","random","hash","effectHash","column","top","valueKey","canGiftPremium","isPremium","handleOpenGiftModal","forUserId","secondaryIcon","secondaryIconClassName","onSecondaryIconClick","IS_OFFSET_PATH_SUPPORTED","index","StickerView","forceAlways","shouldLoop","birthdate","m","DEFAULT_MAP_CONFIG","zoom","chatOrUserId","countryList","phoneCodes","phoneCodeList","botAppPermissions","selectBotAppPermissions","isMuted","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","botVerification","chatInviteLink","inviteLink","bio","about","canInviteUsers","isUserRightBanned","getHasAdminRight","topicLink","selectTopicLink","hasSavedMessages","listIds","saved","personalChannel","personalChannelId","hasMainMiniApp","isBotCanManageEmojiStatus","ChatExtra","updateChatMutedState","updateTopicMutedState","loadPeerStories","openSavedDialog","openMapModal","requestCollectibleInfo","requestMainWebView","toggleUserEmojiStatusPermission","toggleUserLocationPermission","usernames","phoneNumber","chatUsernames","businessLocation","businessWorkHours","personalChannelMessageId","prevPeerId","locationMediaHash","geo","buildStaticMapHash","locationBlobUrl","locationRightComponent","Skeleton","isTopicInfo","shouldRenderAllLinks","activeUsernames","u","activeChatUsernames","getChatLink","handleClickLocation","address","geoPoint","handleNotificationChange","manageEmojiStatusChange","handleLocationPermissionChange","isAccessGranted","geolocation","handleOpenSavedDialog","copy","formattedNumber","formatPhoneNumberWithCode","handlePhoneClick","FRAGMENT_PHONE_LENGTH","FRAGMENT_PHONE_CODE","collectible","handleUsernameClick","isChat","isEditable","handleOpenApp","extractCurrentThemeParams","shouldMarkBotTrusted","appTermsInfo","terms","withNodes","Chat","orderDiff","animationType","ChatAnimationTypes","isPreview","previewMessageId","renderUsernames","allowSelection","Switcher","inactive","iconId","usernameList","otherUsernames","usernameLinks","s","ChatFolderModal","MuteChatModal","ChatCallStatus","lastMessageId","selectChatLastMessageId","lastMessage","selectChatLastMessage","isOutgoing","savedDialogSender","fromId","messageSender","lastMessageSender","replyToMessageId","getMessageReplyInfo","lastMessageAction","getMessageAction","actionTargetMessage","targetUserIds","actionTargetUserIds","targetChatId","actionTargetChatId","currentChatId","currentThreadId","isSelectedForum","forumPanelChatId","lastMessageTopic","selectThreadParam","topicsInfo","selectTopicsInfo","lastMessageStory","isForumPanelOpen","selectIsForumPanelOpen","canScrollDown","canChangeFolder","chatFolders","orderedIds","lastMessageOutgoingStatus","selectOutgoingStatus","withInterfaceAnimations","listedTopicIds","topics","topicsById","folderId","isPinned","offsetTop","onDragEnter","openChat","toggleChatInfo","focusLastMessage","loadTopics","openForumPanel","closeForumPanel","setShouldCloseRightColumn","reportMessages","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","useEnsureMessage","renderSubtitle","useChatListEntry","statefulMediaContent","groupStatetefulContent","getIsForumPanelClosed","selectIsForumPanelClosed","forceOnHeavyAnimation","force","handleDragEnter","preventDefault","handleDelete","handleMute","handleChatFolderChange","handleReport","contextActions","useChatContextActions","isOnline","hasShownClass","isAvatarOnlineShown","IS_OPEN_IN_NEW_TAB_SUPPORTED","createLocationHash","chatClassName","withPortalForMenu","withStoryGap","subscriptionUntil","StoryViewerOrigin","ChatList","StarIcon","ChatBadge","shouldShowOnlyMostImportant","forceHidden","hasMiniApp","wasTopicOpened","unreadMentionsCount","unreadReactionsCount","isTopicUnopened","topicsWithUnread","unreadCount","shouldBeMuted","hasUnmutedUnreadTopics","hasUnreadMark","isSignal","isUnread","ShowTransition","isCustom","unreadReactionsElement","unreadMentionsElement","unopenedTopicElement","unreadCountElement","AnimatedCounter","formatIntegerCompact","pinnedElement","miniAppButton","pill","visiblePinnedElement","elements","renderContent","DEFAULT_FOLDER_ICON","EMOTICON_TO_FOLDER_ICON","LOCSTOR_CUSTOM_EMOJI_KEY","getLocalStorageFolderIcons","customEmojiIcons","storage","localStorage","getItem","JSON","parse","setItem","stringify","getIconNameByFolder","folder","excludeRead","contacts","nonContacts","channels","groups","customEmojisById","iconsByFolder","setGlobal","chatFoldersById","orderedFolderIds","invites","folderInvitesById","archived","orderedPeerIds","archivedStories","activeSessions","byHash","sessions","archiveSettings","shouldSkipHistoryAnimations","activeChatFolder","isRibbonShown","isStoryRibbonShown","foldersVertical","foldersView","hasArchivedChats","hasArchivedStories","maxFolders","maxFolderInvites","maxChatLists","ChatFolders","foldersDispatch","onSettingsScreenSelect","onLeftColumnContentChange","shouldHideFolderTabs","loadChatFolders","setActiveChatFolder","openShareChatFolderModal","openDeleteChatFolderModal","openEditChatFolder","shouldRenderStoryRibbon","getIsClosing","getIsStoryRibbonClosing","useShowTransition","withShouldRender","isStoryRibbonClosing","allChatsFolder","ALL_FOLDER_ID","includedChatIds","excludedChatIds","displayedFolders","allChatsFolderIndex","findIndex","isInAllChatsFolder","isInFirstFolder","folderCountersById","useFolderManagerForUnreadCounters","folderTabs","isBlocked","selectCanShareFolder","handler","isChatList","unicodeEmoji","iconStyle","iconStyleOrDefault","tabText","noCustomEmojiPlayback","noTitleAnimations","shouldUseTextColor","widthLoadingCircle","shouldPreloadPreview","noLoad","noPlay","noVideoOnMobile","withTranslucentThumb","badgeCount","chatsCount","isBadgeActive","notificationsCount","handleSwitchTab","isNotInFirstFolderRef","useHistoryBack","onBack","handleKeyDown","ctrlKey","shiftKey","addEventListener","removeEventListener","placeholderRef","shouldRenderPlaceholder","noMountTransition","shouldRenderFolders","StoryRibbon","isClosing","TabList","contextRootElementSelector","tabs","activeTab","onSwitchTab","renderCount","activeFolder","isFolder","folderType","canDisplayArchive","isHidden","renderCurrentTab","ARCHIVE_CUSTOM_PEER","isCustomPeer","avatarIcon","customPeerAvatarColor","Archive","updateArchiveSettings","orderedChatIds","useFolderManagerForOrderedIds","ARCHIVED_FOLDER_ID","unreadCounters","archiveUnreadCount","previewItems","arr","unread","actionMinimize","isMinimized","actionExpand","actionHide","compact","root","minimized","buttonClassName","info","Badge","avatarWrapper","chatsPreview","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","EmptyFolder","handleEditFolder","SettingsScreens","FoldersEditFolderFromChatList","AnimatedIconFromSticker","fluid","UnconfirmedSession","onHeightChange","changeSessionSettings","terminateAuthorization","borderBoxSize","blockSize","firstUnconfirmed","dateCreated","session","isUnconfirmed","locationString","deviceModel","region","country","handleAccept","isConfirmed","handleReject","RESERVED_HOTKEYS","openNextChat","toggleStoryRibbon","shouldIgnoreDragRef","unconfirmedSessionHeight","setUnconfirmedSessionHeight","isArchived","isAllFolder","isSaved","resolvedFolderId","SAVED_FOLDER_ID","shouldDisplayArchive","usePeerStoriesPolling","chatsHeight","CHAT_HEIGHT_PX","archiveHeight","ARCHIVE_MINIMIZED_HEIGHT","orderDiffById","getAnimationType","useOrderDiff","viewportIds","getMore","useInfiniteScroll","CHAT_LIST_SLICE","shouldShowUnconfirmedSessions","sessionsArray","isCurrent","FRESH_AUTH_PERIOD","useHotkeys","targetIndexDelta","IS_APP","IS_MAC_OS","metaKey","isArchiveInList","LeftColumnContent","Archived","observe","useIntersectionObserver","rootRef","throttleMs","handleArchivedClick","handleArchivedDragEnter","useDebouncedCallback","handleDragLeave","rect","currentTarget","clientY","renderedOverflowTrigger","onOverscroll","onReset","overscrollTriggerRef","isTriggerJustEnabled","lastScrollTopRef","isTriggerEnabledRef","lastIsOnTopRef","lastScrollAtRef","isReturningOverscrollRef","enableOverscrollTrigger","noScrollInertiaStop","display","scrollTop","stopScrollInertia","disableOverscrollTrigger","handleScroll","newScrollTop","isMovingDown","isMovingUp","isOnTop","lastEventDelay","forceMutation","handleWheel","event","scrollHeight","deltaY","passive","useTopOverscroll","InfiniteScroll","itemSelector","preloadBackwards","withAbsolutePositioning","beforeChildren","maxHeight","onLoadMore","onDragLeave","viewportOffset","indexOf","pinnedCount","getPinnedChatsCount","teactOrderKey","getOrderKey","renderChats","Loading","ICON_SIZE","canManageTopics","EmptyForum","openCreateTopicPanel","handleCreateTopic","centered","buttonText","lastReadInboxMessageId","selectTopics","canDelete","selectCanDeleteTopic","Topic","deleteTopic","setViewForumAsMessages","isClosed","handleOpenDeleteModal","handleOpenTopic","wasOpened","editTopic","toggleTopicPinned","markTopicRead","openChatInNewTab","canToggleClosed","getCanManageTopic","canTogglePinned","actionOpenInNewTab","actionUnreadMark","actionPin","actionMute","actionCloseTopic","actionDelete","useTopicContextActions","confirmIsDestructive","confirmLabel","ForumPanel","onTopicSearch","onOpenAnimationStart","openChatWithInfo","scrollTopHandlerRef","isScrolled","setIsScrolled","handleClose","handleToggleChatInfo","useOnIntersect","getOrderedTopics","orderedPinnedTopicIds","totalCount","TOPICS_SLICE","shouldRenderRef","prevIsVisible","endHeavyAnimation","beginHeavyAnimation","waitForTransitionEnd","transform","onTransitionEnd","HeaderActions","canExpandActions","isForForum","TOPIC_HEIGHT_PX","sensitiveArea","TOPIC_LIST_SENSITIVE_AREA","renderTopics","GENERAL_TOPIC_ID","useChatAnimationType","orderDiffs","numberOfUp","numberOfDown","Infinity","Opacity","Move","NO_CORNER_THRESHOLD","ChatForumLastMessage","renderLastMessage","lastMessageRef","mainColumnRef","lastActiveTopic","otherTopics","isReversedCorner","setIsReversedCorner","overwrittenWidth","setOverwrittenWidth","handleOpenTopicClick","handleOpenTopicMouseDown","getIsMobile","lastMessageElement","mainColumnElement","lastMessageWidth","offsetWidth","mainColumnWidth","abs","ANIMATION_DURATION","isAction","shouldTryLoadingStory","useEnsureStory","mediaContent","mediaHasPreview","getMessageSticker","actionTargetUsers","renderLastMessageOrTyping","isDraftReplyToTopic","isEmptyLocalReply","withTranslucentThumbs","isExpiredMessage","getExpiredMessageDescription","renderActionMessageText","isApiPeerChat","senderName","getMessageSenderName","messageSummary","inChatList","renderSummary","remove","ANIMATION_END_DELAY","useLeftHeaderButtonRtlForumTransition","shouldHideSearch","shouldDisableDropdownMenuTransitionRef","prevShouldHideSearch","handleDropdownMenuTransitionEnd","orderById","prevOrderById","mapValues","order","getSenderName","senderId","VISIBLITY_MARGIN","DURATION","SnapEffectContainer","SNAP_EFFECT_CONTAINER_ID","animateSnap","selectCanAnimateSnapEffect","scrollX","scrollY","innerWidth","innerHeight","seed","filterId","SNAP_EFFECT_ID","generateUniqueId","component","ghost","smallestSide","baseSeed","xmlns","SVG_NAMESPACE","baseFrequency","numOctaves","slope","intercept","attributeName","dur","in2","operator","xChannelSelector","yChannelSelector","createFilter","elementContainer","svg","jsxToHtml","foreignObject","computedStyle","getComputedStyle","clone","cloneNode","getPropertyValue","snapContainer","removeChild","once","HeaderMenuContainer","selectLanguageCode","translationLanguage","selectTranslationLanguage","doNotTranslate","noMenu","fullInfo","isMainThread","isDiscussionThread","getIsSavedDialog","isUserBlocked","selectIsUserBlocked","canRestartBot","canStartBot","selectIsChatBotNotStarted","canUnblock","canSubscribe","isNotJoined","canSearch","canCall","ARE_CALLS_SUPPORTED","canMute","canLeave","canEnterVoiceChat","canCreateVoiceChat","manageCall","canViewStatistics","canViewMonetization","canViewBoosts","canShowBoostModal","pendingJoinRequests","requestsPending","shouldJoinToSend","isJoinToSend","shouldSendJoinRequest","isJoinRequest","noAnimation","isTranslating","selectRequestedChatTranslationLanguage","canTranslate","selectCanTranslateChat","isTranslationDisabled","detectedChatLanguage","detectedLanguage","joinChannel","sendBotCommand","openMiddleSearch","restartBot","requestMasterAndRequestCall","requestNextManagementScreen","requestChatTranslation","togglePeerTranslations","openChatLanguageModal","unblockUser","menuButtonRef","setIsMenuOpen","menuAnchor","setMenuAnchor","handleHeaderMenuOpen","right","bottom","handleHeaderMenuClose","handleHeaderMenuHide","handleSubscribeClick","handleStartBot","handleRestartBot","handleUnblock","handleTranslateClick","toLanguageCode","handleJoinRequestsClick","screen","ManagementScreens","JoinRequests","handleSearchClick","setFocusInSearchInput","handleAsMessagesClick","handleRequestCall","handleHotkeySearchClick","getTextWithLanguage","langKey","langCode","translationKey","toUpperCase","translatedName","Intl","DisplayNames","of","doNotTranslateText","handleHide","handleChangeLanguage","handleDoNotTranslate","MoreMenuButton","withExtraActions","onJoinRequestsClick","withForumActions","onSubscribeChannel","onSearchClick","onAsMessagesClick","searchInput","COLOR_REPLACE_PATTERN","AttachBotIcon","isTouchScreen","Text","iconSvg","mediaDataWithReplacedColors","doc","path","strokeWidth","outerHTML","isInSideMenu","canShowNew","toggleAttachBot","icons","openMenu","closeMenu","menuPosition","setMenuPosition","isFromSideMenu","handleCloseMenu","handleCloseAnimationEnd","handleRemoveBot","shortName","isDisclaimerNeeded","withPortal","CustomSend","DropTarget","isQuick","isGeneric","svgRef","isHovered","markHovered","unmarkHovered","relatedTarget","toTarget","baseVal","useEffectOnce","onDrop","hideTimeoutRef","prevWithQuick","handleFilesDrop","dataTransfer","dt","folderFiles","handleQuickFilesDrop","fromTarget","shouldRenderQuick","Portal","containerSelector","onDragOver","handleDragOver","clearTimeout","SCROLLER_CLASS","IGNORE_KEYS","messageSendKeyCombo","isAttachmentModalInput","onScroll","editLastMessage","replyToNextMessage","selectionTimeoutRef","cloneRef","scrollerCloneRef","sharedCanvasRef","sharedCanvasHqRef","absoluteContainerRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","isTextFormatterDisabled","setIsTextFormatterDisabled","isMobileDevice","IS_ANDROID","shouldDisplayTimer","setShouldDisplayTimer","handleTimerEnd","updateInputHeight","requestForcedReflow","focusInput","getIsHeavyAnimating","handleCloseTextFormatter","getSelection","collapseToEnd","checkSelection","selection","selectionS","selectedText","processSelection","processSelectionWithTimeout","useRichEditableKeyboardListener","priority","RichInputKeyboardPriority","onKeydown","isComposing","empty","altKey","handleOpenPremiumModal","EDITABLE_INPUT_ID","handleDocumentKeyDown","getIsDirectTextInputDisabled","input","isSelectionCollapsed","isCollapsed","tagName","isContentEditable","newEvent","KeyboardEvent","dispatchEvent","captureFirstTab","debounce","captureKeyboardListeners","onTab","suppressFocus","inputScrollerContentClass","handleCloseContextMenu","e2","onTouchCancel","RichEditableAttachment","detached","disableEdit","TextTimer","endsAt","onEnd","TextFormatter","SymbolMenu","setStickerSearchQuery","setGifSearchQuery","triggerRef","isSymbolMenuLoaded","onSymbolMenuLoadingComplete","setContextMenuAnchor","symbolMenuButtonClassName","handleActivateSymbolMenu","triggerEl","handleSearchOpen","handleSymbolMenuOpen","EDITABLE_INPUT_MODAL_CSS_SELECTOR","getLayout","onLoad","onSearchOpen","MAX_QUICK_IMG_SIZE","MAX_THUMB_IMG_SIZE","MAX_ASPECT_RATIO","FILE_EXT_REGEX","filename","options","createObjectURL","mimeType","quick","shouldSendAsFile","img","validateAspectRatio","shouldShrink","GIF_MIME_TYPE","compressedBlobUrl","resizedUrl","scaleImage","revokeObjectURL","videoWidth","videoHeight","preloadVideo","createPosterForVideo","coverUrl","fetchFromUrl","selectCover","metadata","common","artist","picture","format","cover","coverBlob","parseAudioMetadata","uniqueId","shouldSendCompressed","attach","dataTransferItems","traverseFileTreePromise","itemFile","getAsFile","isDirectory","createReader","readEntries","entries","entriesPromises","kind","webkitGetAsEntry","replaceWithTeact","STARS_ICON_PLACEHOLDER","THROTTLE","RE_ENDS_ON_EMOJI","loadCustomEmojiForEmoji","clearCustomEmojiForEmoji","extractLastEmojiThrottled","matchable","matchableS","collapsed","emojiMatch","getLastEmoji","hasCustomEmojis","lastEmoji","insertMatchableHtml","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RE_LOWERCASE_TEST","EMOJIS_LIMIT","FILTER_MIN_LENGTH","prepareRecentEmojisMemo","recentEmojiIds","pickTruthy","prepareLibraryMemo","byNative","baseEmojisByKeyword","natives","emojisByKeyword","byKeyword","byName","names","maxKeyLength","keyword","searchInLibraryMemo","library","matched","matchedKeywords","flat","matchedNames","unique","setById","setFilteredEmojis","setFilteredCustomEmojis","exec","uncompressEmoji","ensureEmojiData","detectEmojiCodeThrottled","getEmojiCode","updateFiltered","nativeEmojis","native","uniqueByField","selectCustomEmojiForEmojis","emojiHtml","emojiCode","test","RE_USERNAME_SEARCH","setFilteredUsers","extractUsernameTagThrottled","getUsernameTag","getWithInlineBots","usernameTag","memberIds","member","filteredIds","filterPeersByQuery","userFirstOrLastName","htmlToInsert","MentionName","CLOSE_DURATION","RESIZE_THROTTLE","providedRef","withResizeObserver","setShouldRender","localRef","lastHeightRef","reset","useUnmountCleanup","handleUpdate","currentHeight","useThrottledCallback","applyAnimationState","list","noTransition","cumulativeHeight","state","shiftPx","apply","setExtraStyles","zIndex","String","transition","dataset","isPanelOpen","isConnected","openStoryViewer","loadPeerStoriesByIds","isExpired","imageHash","getStoryMediaHash","imgBlobUrl","mediaUrl","blurredBackgroundRef","storyIds","isSinglePeer","isSingleStory","MediaAreaOverlay","isMirrored","anchorRef","canLoad","startPlaying","stopPlaying","isPositionUpdateRequired","requirePositionUpdate","resetPositionUpdate","effectAnimationId","effectStickerId","getEffectHash","effectBlob","handleEnded","updatePosition","useOverlayPosition","overlayRef","isForMessageEffect","effectClassName","AnimatedSticker","play","isLowPriority","onEnded","Photo","messageText","isInSelectMode","forcedWidth","dimensions","asForwarded","shouldAffectAppendix","isInWebPage","clickArg","isPaidPreview","mediaType","withBlurredBackground","useBlurredMediaThumbRef","useMediaTransition","showSpoiler","wasLoadDisabled","spinnerRef","downloadButtonRef","shouldRenderDownloadButton","isAllowed","prevShouldAffectAppendix","MESSAGE_CONTENT_SELECTOR","removeAttribute","CUSTOM_APPENDIX_ATTRIBUTE","contentEl","getCustomAppendixBg","appendixBg","setAttribute","isSmall","calculateMediaDimensions","componentClassName","MIN_MEDIA_HEIGHT","dimensionsStyle","withAnimation","PROGRESS_CENTER","ROUND_VIDEO_DIMENSIONS_PX","PROGRESS_CIRCUMFERENCE","PI","stopPrevious","RoundVideo","playerRef","circleRef","getVideoMediaHash","isPlayerReady","markPlayerReady","shouldRenderSpoiler","getProgress","setProgress","useSignal","getThrottledProgress","useThrottledSignal","playerEl","strokeDashOffset","safePlay","capturePlaying","togglePlaying","paused","stopCurrentAudio","handleTimeUpdate","isPriority","onTimeUpdate","cx","cy","r","SponsoredMessageContextMenu","shouldSkipAbout","onAboutAdsClick","onSponsoredHide","onSponsorInfo","onSponsoredReport","menuRef","isSeparatorNeeded","sponsorInfo","canReport","SponsoredMessageContextMenuContainer","onItemClick","openAboutAdsModal","reportSponsoredMessage","hideSponsoredMessages","handleItemClick","handleAboutAdsOpen","handleSponsoredHide","handleSponsorInfo","additionalInfo","handleReportSponsoredMessage","randomId","Video","canAutoPlay","isIntersectingForLoading","isIntersectingForPlaying","wasIntersectedRef","isPlayAllowed","setIsPlayAllowed","fullMediaHash","isFullMediaPreloaded","hasThumb","isInline","isUnsupported","useUnsupportedMedia","isPreviewPreloaded","canLoadPreview","shouldHidePreview","previewRef","playButtonRef","setPlayProgress","isFinite","calculateExtendedPreviewDimensions","calculateVideoDimensions","isFromSpinner","handleClickOnSpinner","onAudioPlay","onCancelMediaTransfer","openUrl","openTelegramLink","stickersRef","giftStickersRef","handleMediaClick","handleContainerClick","handleOpenTelegramLink","hasCustomColor","isWithTextColor","documents","mediaSize","isStory","isGift","quickButtonLangKey","getWebpageButtonLangKey","quickButtonTitle","isArticle","isSquarePhoto","isMediaInteractive","PeerColorWrapper","BaseStory","gift","getStickerFromGift","attributes","getGiftAttributes","backdrop","pattern","model","backgroundColors","centerColor","edgeColor","RadialPatternBackground","patternColor","patternIcon","renderStarGiftUnique","shouldSkipModal","isEmoji","caption","isRectangular","noForcedUpperCase","SELECTED_APPENDIX_COLORS","dark","outgoing","incoming","light","requestMediaWorker","MAX_WORKERS","SMALL_IMAGE_THRESHOLD","MIN_MESSAGE_LENGTH_FOR_BLUR","MIN_MEDIA_WIDTH_WITH_TEXT","MIN_MEDIA_WIDTH","getMinMediaWidth","hasCommentButton","isPhoto","isWebPagePhoto","isWebPageVideo","calculateInlineImageDimensions","minMediaWidth","stretchFactor","finalWidth","finalHeight","RADIUS_RATIO","lastWorkerIndex","thumbData","workerIndex","cycleRestrict","offscreenRef","blurThumb","uri","image","transferControlToOffscreen","ceil","transferables","useOffscreenCanvasBlur","PENDING_TRANSLATIONS","Map","requestedLanguageCode","messageTranslation","byLangCode","isPending","languageTranslations","set","markMessagesTranslationPending","throttledProcessPending","addPendingTranslation","throttle","translateMessages","hasUnprocessed","messageIdsToTranslate","delete","oldMessageIds","newMessageIds","removePendingTranslations","OFFSET_X","anchorRect","elementRect","anchorCenterY","anchorBottomY","messagesContainer","REACTION_SIZE","ReactionSelectorCustomReaction","chosen","noAppearAnimation","isLocked","onSendPaidReaction","onShowPaidReactionModal","StarReaction","ReactionSelectorReaction","mediaAppearData","appearAnimation","selectAnimation","staticIconData","staticIcon","isAnimationLoaded","markAnimationLoaded","isFirstPlay","unmarkIsFirstPlay","activate","deactivate","cn","createClassNameBuilder","defaultTagReactions","enabledReactions","currentReactions","reactionsLimit","isForEffects","isWithPaidReaction","areReactionsLocked","shouldUseCurrentReactions","allowed","filteredReactions","isCustomReaction","availableReaction","isInactive","canSendReaction","sortedReactions","sortReactions","unshift","reactionsToRender","REACTIONS_AMOUNT","withMoreButton","userReactionIndexes","chosenReactions","chosenOrder","handleShowMoreClick","bound","hintText","parts","isPrimary","selectCurrentChat","DeleteMemberModal","deleteChatMember","handleDeleteChatMember","textParts","useAsyncRendering","dependencies","delay","timeoutRef","CHANNEL_OVERVIEW","isPercentage","GROUP_OVERVIEW","MESSAGE_OVERVIEW","isPlain","isApproximate","STORY_OVERVIEW","BOOST_OVERVIEW","withAbsoluteValue","StatisticsOverview","statistics","isToncoin","renderBalanceCell","balance","usdRate","integerTonPart","decimalTonPart","toFixed","integerUsdPart","decimalUsdPart","period","balances","schema","getSchemaByType","formatFullDate","minDate","maxDate","availableBalance","currentBalance","overallRevenue","cell","field","formatInteger","part","percentage","renderOverviewItemValue","change","isChangeNegative","toggleStoriesHidden","useStoryPreloader","isDense","preventMessageInputBlurWithBubbling","handleSavedStories","profileTab","handleArchivedStories","handleOpenChat","handleOpenProfile","handleArchivePeer","hasUnreadStories","name_hasUnreadStory","contextMenu","active","hidden","closing","useHorizontalScroll","StoryRibbonButton","byPeerId","isArchivedRibbonShown","peerStories","canShow","PREVIEW_AVATAR_COUNT","reverse","closeFriends","isCloseFriend","isRead","lastReadId","isForCloseFriends","preloadPeerIds","animateClosing","animateOpening","avatar","withStorySolid","forceFriendStorySolid","RIBBON_OFFSET","RIBBON_Z_INDEX","STROKE_OFFSET","CANVAS_OFFSET","callbacks","cancelDelayedCallbacks","toggler","leftMainHeader","ribbonPeers","toggleAvatars","getHTMLElements","headerBottom","headerRight","toTop","lastToggleAvatar","firstToggleAvatar","lastId","getPeerId","toggleAvatar","selectByPeerId","fromTop","fromLeft","fromWidth","toLeft","toWidth","fromTranslateX","fromTranslateY","fromScale","toTranslateX","toTranslateY","toScale","createGhost","ghost2","togglerStyles","ghostLast","ghostAnimateName","applyStyles","ghostRevealName","createDelayedCallback","contains","ribbon","ribbonStyles","sourceEl","oncontextmenu","sourceCanvas","callback","ms","timeout","clear","PRIMARY_VIDEO_MIME","SECONDARY_VIDEO_MIME","preloadedStories","canPreload","aroundStoryId","mediaHashes","isStream","loader","makeProgressiveLoader","getProgressiveUrl","cachedSize","chunk","byteLength","preloadStream","Progressive","head","preload","autoplay","disableRemotePlayback","load","unloadVideo","preloadProgressive","preloadHashes","selectPeerStories","preloadIds","currentId","aroundAmount","PEER_STORIES_FOR_PRELOAD","findIdsAroundCurrentId","currentStoryId","checkIfStreamingSupported","altVideos","getPreloadMediaHashes","MediaAreaSuggestedReaction","mediaArea","customEmojiSize","setCustomEmojiSize","views","isDark","isFlipped","reactionCount","shouldDisplayCount","updateCustomEmojiSize","clientHeight","prevReactionCount","buildStyle","effectSize","shouldPause","ownProps","restrictedEmoji","selectRestrictedEmoji","MediaAreaWeather","temperatureC","backgroundColor","convertToRGBA","textColor","getTextColor","updateCustomSize","isImmediate","customEmojiHeight","applyFn","navigator","formatTemperature","STORY_ASPECT_RATIO","NO_SHINY_TYPES","prepareStyle","mediaWidth","rotation","coordinates","pixelRadius","pixelWidth","pixelHeight","isStoryPlaying","closeStoryViewer","setMediaWidth","useWindowSize","clientWidth","MOBILE_SCREEN_MAX_WIDTH","screenAspectRatio","mediaAreas","isShiny","channelId","handleMediaAreaClick","groupCallId","selectGroupCall","selectGroupCallParticipant","participantId","selectIsAdminInActiveGroupCall","selectActiveGroupCall","selectPhoneCallUser","phoneCall","adminId","selectCanInviteToActiveGroupCall","appConfig","DEFAULT_LIMITS","limits","selectPremiumLimit","NOTIFICATION_DURATION","shouldDisableNotification","setIsUnsupported","handleUnsupported","IS_MOBILE","onError","onCanPlay","POLLING_INTERVAL","PEER_LAST_POLLING_TIME","PEER_ID_QUEUE","loadFromQueue","queue","queueToLoad","otherQueue","LIMIT_PER_REQUEST","loadStoriesMaxIds","peerIds","pollablePeerIds","lastPollingTime","isStatusAvailable","isContact","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","mode","selectTemp","selectedChatIds","selectedChatTypes","includeFilters","pick","excludeFilters","getSuggestedFolderName","filters","INITIAL_STATE","chatFilter","foldersReducer","omit","useFoldersReducer","useReducer","interval","resolver","deps","msOrSchedulerFn","noFirst","setValue","getValue","throttledResolver","noLast","useDebouncedSignal","debouncedResolver","trackId","originalDuration","handlers","onInit","onForcePlay","onTrackChange","noPlaylist","noProgressUpdates","noHandleEvents","controllerRef","setIsPlaying","isPlayingSync","register","eventName","setVolume","setPlaybackRate","toggleMuted","proxy","registerMediaSession","mediaHandlers","requestNextTrack","requestPreviousTrack","closeAudioPlayer","seekbackward","skipTime","seekOffset","seekforward","seekTo","seekTime","nexttrack","previoustrack","makeMediaHandlers","setPlaybackState","audioPlayer","PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION","playbackRate","setPositionState","updateMetadata","destroy","isSafariPatchInProgress","prevShouldPlay","prevSrc","playIfPresent","setTime","time","audioProxy","isInSearch","isServiceNotifications","deleteTitle","getCanDeleteChat","toggleChatPinned","toggleSavedDialogPinned","toggleChatArchived","toggleChatUnread","IS_ELECTRON","togglePinned","actionAddToFolder","actionMaskAsRead","actionMarkAsUnread","actionArchive","isChatArchived","actionReport","isInFolder","loadStoryThrottled","throttled","useForumPanelRender","shouldRenderForumPanelRef","isAnimationStartedRef","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","shouldRenderForumPanel","isAnimationStarted","IGNORE_TAGS","createCallbackManager","hotkeys","addCallback","HTMLElement","shouldFireEvent","hotkey","ctrl","meta","mod","pressedKey","isExactHotkey","modifiers","reservedKeys","parseHotkey","getHotkeyMatcher","runCallbacks","FOCUS_DELAY_MS","MODAL_HIDE_DELAY_MS","useInputFocusOnOpen","inputRef","threshold","isLongPressActive","isPressed","timerId","canProcessEvent","touches","cancel","onMouseUp","onTouchStart","onTouchEnd","STREAMING_PROGRESS","STREAMING_TIMEOUT","PROGRESS_THROTTLE","mediaFormat","isHtmlAllowed","isStreaming","IS_PROGRESSIVE_SUPPORTED","useSelector","selectIsSynced","useUniqueId","setLoadProgress","startedAtRef","handleProgress","spentTime","MENU_CLOSE_TIMEOUT","closeTimeout","menuCloseTimeout","isMouseInside","usePrevDuringAnimation","prev","isCurrentPresent","isPrevPresent","reducer","initialState","reducerRef","dispatch","CalendarModal","onCancel","openAt","onScheduled","setOnScheduled","isWhenOnline","getServerTimeOffset","handleMessageScheduleUntilOnline","handleCloseCalendar","whenScheduled","withTimePicker","selectedAt","maxAt","getDayStartAt","isFutureMode","secondButtonLabel","onSubmit","onSecondButtonClick","VIDEO_REVEAL_DELAY","useStreaming","MediaSourceClass","getMediaSource","isTypeSupported","onSourceOpen","sourceBuffer","addSourceBuffer","next","done","readyState","endOfStream","appendBuffer","buffer","DEBUG","warn","ManagedMediaSource","MediaSource","lastCallback","onBeforeUnload","prop","getBrowserFullscreenElementProp","useFullscreen","elRef","exitCallback","enterCallback","isFullscreen","setIsFullscreen","listener","HTMLVideoElement","controls","listenerEnter","listenerExit","setFullscreen","requestFullscreen","webkitRequestFullscreen","webkitEnterFullscreen","mozRequestFullScreen","exitFullscreen","mozCancelFullScreen","webkitCancelFullScreen","webkitExitFullscreen","useFullscreenStatus","checkIfFullscreen","removeElectronListener","electron","on","ElectronEvent","FULLSCREEN_CHANGE","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","fullscreenProp","ConnectorClass","constructor","onUpdate","channel","_defineProperty","throttleWithTickEnd","this","payloads","pendingPayloads","pendingTransferables","postMessage","postMessageOnTickEnd","request","messageData","requestStates","requestStatesByCallback","restMessageData","requestState","promise","assign","withCallback","pop","catch","finally","cancelCallback","progressCallback","isCanceled","onMessage","response","callbackArgs","Error","postMessagesOnTickEnd","createConnector","worker","connector","handleMessage","tracks","currentTrackId","voiceQueue","musicQueue","playNext","isReverseOrder","currentTrack","nextTrackId","findNextInQueue","openAudioPlayer","parseMessageKey","splitTrackId","nextTrack","track","handleEvent","Proxy","createAudio","trackIdComparator","addTrackToQueue","preventPlayAfterPatch","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","Music","openedChatId","queueFilter","cleanUpQueue","fastSeek","rate","shouldRemoveFromQueue","h","trackIdFilter","removeFromQueue","getTrackQueue","chatAudio","getMessageServerKey","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","LIMIT_PER_BATCH","BATCH_INTERVAL","pendingDownloads","planned","download","pendingDownload","downloadOne","processQueue","rel","click","ELEMENT_NODE","getMessageIdsForSelectedText","selectedFragments","rangeCount","getRangeAt","cloneContents","shouldIncludeLastMessage","focusNode","focusOffset","hasParentWithClassName","MESSAGE_CONTENT_CLASS_NAME","childElementCount","node","nodeType","messageEl","firstChild","parentNode","LUMA_THRESHOLD","ratio","outputType","Image","onload","resizeImage","steppedScale","bitmap","createImageBitmap","resizeWidth","resizeHeight","resizeQuality","averageColor","getAverageColor","fillColor","getColorLuma","res","ctx2D","transferFromImageBitmap","toBlob","step","oc","octx","mul","cur","hardwareConcurrency","instances","launchMediaWorkers","IS_TEST","Worker","PROVIDERS","google","bing","osm","apple","VENUE_COLORS","arts_entertainment","building","education","food","home","nightlife","parks_outdoors","shops","travel","work","RANDOM_COLORS","prepareMapUrl","provider","point","lat","long","providerUrl","getMetersPerPixel","cos","getVenueIconUrl","getVenueColor","str","prevHash","currVal","charCodeAt","DEFAULT_HANDLERS","mediaSession","setMediaSessionHandlers","setActionHandler","clearMediaSession","playbackState","buildMediaMetadata","album","artwork","MediaMetadata","cache","WeakMap","fn","cached","areSortedArraysEqual","lastArgs","lastResult","DEFAULT_PART_SIZE","MAX_END_TO_CACHE","bufferCache","sizeCache","pendingRequests","chunkSize","fileSize","cacheKey","arrayBuffer","callApi","fullSize","fileSelector","accept","noMultiple","onchange","isElementInViewport","windowHeight"],"sourceRoot":""}