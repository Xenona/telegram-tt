{"version":3,"file":"1170.379b0fb44abf1108a0a3.js","mappings":"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","sources":["webpack://telegram-t/./src/components/common/AnimatedCounter.tsx","webpack://telegram-t/./src/components/common/AnimatedCounter.module.scss?3640","webpack://telegram-t/./src/components/common/AnimatedIconFromSticker.tsx","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.module.scss?eca8","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.tsx","webpack://telegram-t/./src/components/common/AvatarList.module.scss?00d4","webpack://telegram-t/./src/components/common/AvatarList.tsx","webpack://telegram-t/./src/components/common/BadgeButton.module.scss?da7b","webpack://telegram-t/./src/components/common/BadgeButton.tsx","webpack://telegram-t/./src/components/common/MediaSpoiler.module.scss?4929","webpack://telegram-t/./src/components/common/MediaSpoiler.tsx","webpack://telegram-t/./src/components/common/PasswordForm.tsx","webpack://telegram-t/./src/components/common/PeerChip.module.scss?346e","webpack://telegram-t/./src/components/common/PeerChip.tsx","webpack://telegram-t/./src/components/common/PremiumProgress.module.scss?8969","webpack://telegram-t/./src/components/common/PremiumProgress.tsx","webpack://telegram-t/./src/components/common/helpers/gifts.ts","webpack://telegram-t/./src/components/common/helpers/renderMessageText.ts","webpack://telegram-t/./src/components/common/helpers/sortChatIds.ts","webpack://telegram-t/./src/components/common/pickers/PeerPicker.tsx","webpack://telegram-t/./src/components/common/pickers/PickerItem.module.scss?49ce","webpack://telegram-t/./src/components/common/pickers/PickerItem.tsx","webpack://telegram-t/./src/components/common/profile/RadialPatternBackground.module.scss?0cfb","webpack://telegram-t/./src/components/common/profile/RadialPatternBackground.tsx","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.module.scss?b4fe","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionStaticEmoji.tsx","webpack://telegram-t/./src/components/common/richinput/BlockquoteEnter.ts","webpack://telegram-t/./src/components/common/richinput/RichEditableAttachment.tsx","webpack://telegram-t/./src/components/common/richinput/TextFormatter.async.tsx","webpack://telegram-t/./src/util/execCommand.ts","webpack://telegram-t/./src/lib/cleanDocsHtml.ts","webpack://telegram-t/./src/components/middle/composer/helpers/cleanHtml.ts","webpack://telegram-t/./src/util/AbsoluteVideo.ts","webpack://telegram-t/./src/components/common/richinput/EditableEmojiRender.ts","webpack://telegram-t/./src/components/common/richinput/RichEditable.module.scss?0eb0","webpack://telegram-t/./src/components/common/richinput/Previewer.tsx","webpack://telegram-t/./src/components/common/richinput/RichEditable.ts","webpack://telegram-t/./src/components/common/richinput/useRichEditable.tsx","webpack://telegram-t/./src/components/middle/message/helpers/getSelectionAsFormattedText.ts","webpack://telegram-t/./src/components/common/PinMessageModal.async.tsx","webpack://telegram-t/./src/components/middle/message/helpers/copyOptions.ts","webpack://telegram-t/./src/components/middle/message/TimeMenuItem.module.scss?e6ff","webpack://telegram-t/./src/components/middle/message/LastEditTimeMenuItem.tsx","webpack://telegram-t/./src/components/middle/message/ReadTimeMenuItem.tsx","webpack://telegram-t/./src/components/middle/message/MessageContextMenu.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.tsx","webpack://telegram-t/./src/components/middle/message/helpers/isSelectionRangeInsideMessage.ts","webpack://telegram-t/./src/components/middle/message/hooks/useFocusMessage.ts","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.module.scss?c7b9","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorCustomReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelector.tsx","webpack://telegram-t/./src/components/common/reactions/PaidReactionEmoji.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionButton.tsx","webpack://telegram-t/./src/components/middle/message/reactions/Reactions.tsx","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.module.scss?c2fd","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.tsx","webpack://telegram-t/./src/components/middle/message/reactions/SavedTagButton.tsx","webpack://telegram-t/./src/global/helpers/payments.ts","webpack://telegram-t/./src/hooks/schedulers/useTimeout.ts","webpack://telegram-t/./src/hooks/useCanvasBlur.ts","webpack://telegram-t/./src/hooks/useCustomBackground.ts","webpack://telegram-t/./src/hooks/useEnsureMessage.ts","webpack://telegram-t/./src/hooks/useFolderManager.ts","webpack://telegram-t/./src/hooks/useHorizontalScroll.ts","webpack://telegram-t/./src/hooks/usePrevious.ts","webpack://telegram-t/./src/hooks/useResizeMessageObserver.ts","webpack://telegram-t/./src/hooks/useRunDebounced.ts","webpack://telegram-t/./src/components/common/CalendarModal.async.tsx","webpack://telegram-t/./src/hooks/useSchedule.tsx","webpack://telegram-t/./src/util/AnimBackgroundRender.ts","webpack://telegram-t/./src/util/BaseAnimBackgroundRender.ts","webpack://telegram-t/./src/util/animateHorizontalScroll.ts","webpack://telegram-t/./src/util/animateScroll.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/util/getMessageIdsForSelectedText.ts","webpack://telegram-t/./src/util/objects/customPeer.ts","webpack://telegram-t/./src/util/parseMarkdown.ts","webpack://telegram-t/./src/util/parseHtmlAsFormattedText.ts","webpack://telegram-t/./src/util/scrollLock.ts","webpack://telegram-t/./src/util/visibility/getOffsetToContainer.ts","webpack://telegram-t/./src/util/visibility/isElementInViewport.ts","webpack://telegram-t/./src/components/common/pickers/PickerStyles.module.scss?c0e4","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.module.scss?3a3d","webpack://telegram-t/./src/components/middle/message/reactions/ReactionButton.module.scss?4249"],"sourcesContent":["import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getGlobal } from '../../global';\n\nimport { selectCanAnimateInterface } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { throttleWithTickEnd } from '../../util/schedulers';\n\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport useLang from '../../hooks/useLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport styles from './AnimatedCounter.module.scss';\n\ntype OwnProps = {\n  text: string;\n  className?: string;\n  isDisabled?: boolean;\n  ref?: React.RefObject<HTMLSpanElement>;\n};\n\nconst ANIMATION_TIME = 200;\nconst MAX_SIMULTANEOUS_ANIMATIONS = 10;\n\nlet scheduledAnimationsCounter = 0;\n\nconst resetCounterOnTickEnd = throttleWithTickEnd(() => {\n  scheduledAnimationsCounter = 0;\n});\n\nconst AnimatedCounter: FC<OwnProps> = ({\n  text,\n  className,\n  isDisabled,\n  ref,\n}) => {\n  const { isRtl } = useLang();\n\n  const prevText = usePreviousDeprecated(text);\n  const forceUpdate = useForceUpdate();\n\n  const shouldAnimate = scheduleAnimation(\n    !isDisabled && selectCanAnimateInterface(getGlobal()) && prevText !== undefined && prevText !== text,\n  );\n\n  const characters = useMemo(() => {\n    return shouldAnimate ? renderAnimatedCharacters(text, prevText) : text;\n  }, [shouldAnimate, prevText, text]);\n\n  useEffect(() => {\n    if (!shouldAnimate) return undefined;\n\n    const timeoutId = window.setTimeout(() => {\n      forceUpdate();\n    }, ANIMATION_TIME);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [shouldAnimate, text]);\n\n  return (\n    <span ref={ref} className={buildClassName(className, !isDisabled && styles.root)} dir={isRtl ? 'rtl' : undefined}>\n      {characters}\n    </span>\n  );\n};\n\nexport default memo(AnimatedCounter);\n\nfunction scheduleAnimation(condition: boolean) {\n  if (!condition || scheduledAnimationsCounter >= MAX_SIMULTANEOUS_ANIMATIONS) return false;\n\n  if (scheduledAnimationsCounter === 0) {\n    resetCounterOnTickEnd();\n  }\n\n  scheduledAnimationsCounter++;\n\n  return true;\n}\n\nfunction renderAnimatedCharacters(text: string, prevText?: string) {\n  const elements: React.ReactNode[] = [];\n  const textLength = text.length;\n  const prevTextLength = prevText?.length ?? 0;\n\n  for (let i = 0; i <= textLength; i++) {\n    const charIndex = textLength - i;\n    const prevTextCharIndex = prevTextLength - i;\n\n    if (prevText && prevTextCharIndex >= 0 && text[charIndex] !== prevText[prevTextCharIndex]) {\n      elements.unshift(\n        <div className={styles.characterContainer}>\n          <div className={styles.character}>{text[charIndex] ?? ''}</div>\n          <div className={styles.characterOld}>{prevText[prevTextCharIndex]}</div>\n          <div className={styles.characterNew}>{text[charIndex] ?? ''}</div>\n        </div>,\n      );\n    } else {\n      elements.unshift(<span>{text[charIndex] ?? ''}</span>);\n    }\n  }\n\n  return elements;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"tgKbsVmz\",\"character-container\":\"IYTzbS8o\",\"characterContainer\":\"IYTzbS8o\",\"character\":\"Jw1oQFdk\",\"character-old\":\"TZfEz3sc\",\"characterOld\":\"TZfEz3sc\",\"character-disappear\":\"ORlhAlOv\",\"characterDisappear\":\"ORlhAlOv\",\"character-new\":\"Y9ied8_t\",\"characterNew\":\"Y9ied8_t\",\"character-appear\":\"s_g6bwRZ\",\"characterAppear\":\"s_g6bwRZ\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../api/types';\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { getStickerMediaHash } from '../../global/helpers';\n\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { sticker?: ApiSticker; noLoad?: boolean; forcePreview?: boolean };\n\nfunction AnimatedIconFromSticker(props: OwnProps) {\n  const {\n    sticker, noLoad, forcePreview, ...otherProps\n  } = props;\n\n  const thumbDataUri = sticker?.thumbnail?.dataUri;\n  const localMediaHash = sticker && getStickerMediaHash(sticker, 'full');\n  const previewBlobUrl = useMedia(\n    sticker ? getStickerMediaHash(sticker, 'preview') : undefined,\n    noLoad && !forcePreview,\n    ApiMediaFormat.BlobUrl,\n  );\n  const tgsUrl = useMedia(localMediaHash, noLoad);\n\n  return (\n    <AnimatedIconWithPreview\n      tgsUrl={tgsUrl}\n      previewUrl={previewBlobUrl}\n      thumbDataUri={thumbDataUri}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...otherProps}\n    />\n  );\n}\n\nexport default memo(AnimatedIconFromSticker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"xCi2f0YH\",\"preview\":\"lM2usrZU\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\n\nimport AnimatedIcon from './AnimatedIcon';\n\nimport styles from './AnimatedIconWithPreview.module.scss';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { previewUrl?: string; thumbDataUri?: string; noPreviewTransition?: boolean };\n\nconst ANIMATION_DURATION = 300;\n\nconst loadedPreviewUrls = new Set();\n\nfunction AnimatedIconWithPreview(props: OwnProps) {\n  const {\n    previewUrl, thumbDataUri, className, ...otherProps\n  } = props;\n\n  const [isThumbOpen, , unmarkThumbOpen] = useFlag(Boolean(thumbDataUri));\n  const thumbClassNames = useMediaTransitionDeprecated(isThumbOpen);\n\n  const [isPreviewOpen, markPreviewOpen, unmarkPreviewOpen] = useFlag(loadedPreviewUrls.has(previewUrl));\n  const previewClassNames = useMediaTransitionDeprecated(isPreviewOpen);\n\n  const [isAnimationReady, markAnimationReady] = useFlag(false);\n\n  const handlePreviewLoad = useLastCallback(() => {\n    markPreviewOpen();\n    loadedPreviewUrls.add(previewUrl);\n  });\n\n  const handleAnimationReady = useLastCallback(() => {\n    unmarkThumbOpen();\n    unmarkPreviewOpen();\n    setTimeout(markAnimationReady, ANIMATION_DURATION);\n  });\n\n  const { size } = props;\n\n  return (\n    <div\n      className={buildClassName(className, styles.root)}\n      style={buildStyle(size !== undefined && `width: ${size}px; height: ${size}px;`)}\n    >\n      {thumbDataUri && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img src={thumbDataUri} className={buildClassName(styles.preview, thumbClassNames)} draggable={false} />\n      )}\n      {previewUrl && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img\n          src={previewUrl}\n          className={buildClassName(styles.preview, previewClassNames)}\n          draggable={false}\n          onLoad={handlePreviewLoad}\n        />\n      )}\n      {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n      <AnimatedIcon {...otherProps} onLoad={handleAnimationReady} />\n    </div>\n  );\n}\n\nexport default memo(AnimatedIconWithPreview);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"kXs18Nmi\",\"avatar\":\"XND8fhC1\",\"badge\":\"SHyAyGFO\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { AvatarSize } from './Avatar';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar, { AVATAR_SIZES } from './Avatar';\n\nimport styles from './AvatarList.module.scss';\n\nconst DEFAULT_LIMIT = 3;\n\ntype OwnProps = {\n  size: AvatarSize;\n  peers?: ApiPeer[];\n  className?: string;\n  limit?: number;\n  badgeText?: string;\n};\n\nconst AvatarList: FC<OwnProps> = ({\n  peers,\n  size,\n  className,\n  limit = DEFAULT_LIMIT,\n  badgeText,\n}) => {\n  const lang = useOldLang();\n\n  const pxSize = typeof size === 'number' ? size : AVATAR_SIZES[size];\n\n  const renderingBadgeText = useMemo(() => {\n    if (badgeText) return badgeText;\n    if (!peers?.length || peers.length <= limit) return undefined;\n    return `+${peers.length - limit}`;\n  }, [badgeText, peers, limit]);\n\n  return (\n    <div\n      className={buildClassName(className, styles.root)}\n      style={`--_size: ${pxSize}px;`}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {peers?.slice(0, limit).map((peer) => <Avatar size={size} peer={peer} className={styles.avatar} />)}\n      {renderingBadgeText && (\n        <div className={styles.badge}>\n          {renderingBadgeText}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(AvatarList);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"hJUqHi4B\",\"clickable\":\"hjDEmFaT\"};","import React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport styles from './BadgeButton.module.scss';\n\ntype OwnProps = {\n  children: React.ReactNode;\n  className?: string;\n  onClick?: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onMouseDown?: (e: React.MouseEvent<HTMLDivElement>) => void;\n};\n\nconst BadgeButton = ({\n  children,\n  className,\n  onClick,\n  onMouseDown,\n}: OwnProps) => {\n  return (\n    <div\n      className={buildClassName(styles.root, onClick && styles.clickable, className)}\n      onClick={onClick}\n      onMouseDown={onMouseDown}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default BadgeButton;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"qF2WgYVg\",\"mask-animation\":\"pNM3cgkY\",\"maskAnimation\":\"pNM3cgkY\",\"circle-cut\":\"WiW38HGg\",\"circleCut\":\"WiW38HGg\",\"dots\":\"XBor45hE\",\"canvas\":\"eULqS2yR\",\"opacity-breath\":\"sW9ega1D\",\"opacityBreath\":\"sW9ega1D\",\"dots-animation\":\"mAAEjSPE\",\"dotsAnimation\":\"mAAEjSPE\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\n\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport styles from './MediaSpoiler.module.scss';\n\ntype OwnProps = {\n  isVisible: boolean;\n  withAnimation?: boolean;\n  thumbDataUri?: string;\n  width?: number;\n  height?: number;\n  className?: string;\n};\n\nconst BLUR_RADIUS = 25;\nconst ANIMATION_DURATION = 500;\n\nconst MediaSpoiler: FC<OwnProps> = ({\n  isVisible,\n  withAnimation,\n  thumbDataUri,\n  className,\n  width,\n  height,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(\n    isVisible, undefined, true, withAnimation ? false : undefined, undefined, ANIMATION_DURATION,\n  );\n  const canvasRef = useCanvasBlur(thumbDataUri, !shouldRender, undefined, BLUR_RADIUS, width, height);\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (!ref.current) return;\n    const el = ref.current;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const shiftX = x - (rect.width / 2);\n    const shiftY = y - (rect.height / 2);\n    requestMutation(() => {\n      el.setAttribute('style', `--click-shift-x: ${shiftX}px; --click-shift-y: ${shiftY}px`);\n    });\n  });\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, transitionClassNames, className, withAnimation && styles.maskAnimation)}\n      ref={ref}\n      onClick={withAnimation ? handleClick : undefined}\n    >\n      <canvas\n        ref={canvasRef}\n        className={styles.canvas}\n        width={width}\n        height={height}\n      />\n      <div className={styles.dots} />\n    </div>\n  );\n};\n\nexport default memo(MediaSpoiler);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { MIN_PASSWORD_LENGTH } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Icon from './icons/Icon';\n\ntype OwnProps = {\n  submitLabel?: string;\n  error?: string;\n  hint?: string;\n  placeholder?: string;\n  description?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  shouldShowSubmit?: boolean;\n  shouldResetValue?: boolean;\n  isPasswordVisible?: boolean;\n  clearError: NoneToVoidFunction;\n  noRipple?: boolean;\n  onChangePasswordVisibility: (state: boolean) => void;\n  onInputChange?: (password: string) => void;\n  onSubmit?: (password: string) => void;\n};\n\nconst PasswordForm: FC<OwnProps> = ({\n  isLoading = false,\n  isPasswordVisible,\n  error,\n  hint,\n  placeholder = 'Password',\n  submitLabel = 'Next',\n  description,\n  shouldShowSubmit,\n  shouldResetValue,\n  shouldDisablePasswordManager = false,\n  noRipple = false,\n  clearError,\n  onChangePasswordVisibility,\n  onInputChange,\n  onSubmit,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n  const [password, setPassword] = useState('');\n  const [canSubmit, setCanSubmit] = useState(false);\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  useEffect(() => {\n    if (shouldResetValue) {\n      setPassword('');\n    }\n  }, [shouldResetValue]);\n\n  useTimeout(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, focusDelayTimeoutMs);\n\n  useEffect(() => {\n    if (error) {\n      requestMutation(() => {\n        inputRef.current!.focus();\n        inputRef.current!.select();\n      });\n    }\n  }, [error]);\n\n  function onPasswordChange(e: ChangeEvent<HTMLInputElement>) {\n    if (error) {\n      clearError();\n    }\n\n    const { target } = e;\n    setPassword(target.value);\n    setCanSubmit(target.value.length >= MIN_PASSWORD_LENGTH);\n    if (onInputChange) {\n      onInputChange(target.value);\n    }\n  }\n\n  function togglePasswordVisibility() {\n    onChangePasswordVisibility(!isPasswordVisible);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    if (isLoading) {\n      return;\n    }\n\n    if (canSubmit) {\n      onSubmit!(password);\n    }\n  }\n\n  function renderFakeInput() {\n    return (\n      <input\n        type=\"password\"\n        id=\"prevent_autofill\"\n        autoComplete=\"off\"\n        className=\"visually-hidden\"\n        tabIndex={-2}\n      />\n    );\n  }\n\n  return (\n    <form action=\"\" onSubmit={onSubmit ? handleSubmit : stopEvent} autoComplete=\"off\">\n      <div\n        className={buildClassName('input-group password-input', password && 'touched', error && 'error')}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldDisablePasswordManager && renderFakeInput()}\n        <input\n          ref={inputRef}\n          className=\"form-control\"\n          type={isPasswordVisible ? 'text' : 'password'}\n          id=\"sign-in-password\"\n          value={password || ''}\n          autoComplete={shouldDisablePasswordManager ? 'one-time-code' : 'current-password'}\n          onChange={onPasswordChange}\n          maxLength={256}\n          dir=\"auto\"\n        />\n        <label>{error || hint || placeholder}</label>\n        <div\n          className=\"div-button toggle-password\"\n          onClick={togglePasswordVisibility}\n          role=\"button\"\n          tabIndex={0}\n          title=\"Toggle password visibility\"\n          aria-label=\"Toggle password visibility\"\n        >\n          <Icon name={isPasswordVisible ? 'eye' : 'eye-crossed'} />\n        </div>\n      </div>\n      {description && <p className=\"description\">{description}</p>}\n      {onSubmit && (canSubmit || shouldShowSubmit) && (\n        <Button size=\"smaller\" type=\"submit\" ripple={!noRipple} isLoading={isLoading} disabled={!canSubmit}>\n          {submitLabel}\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default memo(PasswordForm);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_Lq6_4e5\",\"minimized\":\"UhOZvxvs\",\"closeable\":\"uvvgSFUJ\",\"remove\":\"xVPG2UTy\",\"nonDestructive\":\"fAk5yEeV\",\"notClickable\":\"P8r3OoaX\",\"avatar\":\"La8BQ9yr\",\"iconWrapper\":\"NtoGLT22\",\"icon\":\"f91Ad80i\",\"name\":\"XPVuH29G\",\"squareAvatar\":\"JIHfTUVn\"};","import type { TeactNode } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport { getPeerTitle, isApiPeerChat } from '../../global/helpers/peers';\nimport { selectPeer, selectUser } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getPeerColorClass } from './helpers/peerColor';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\n\nimport styles from './PeerChip.module.scss';\n\ntype OwnProps<T = undefined> = {\n  // eslint-disable-next-line react/no-unused-prop-types\n  peerId?: string;\n  // eslint-disable-next-line react/no-unused-prop-types\n  forceShowSelf?: boolean;\n  customPeer?: CustomPeer;\n  mockPeer?: ApiPeer;\n  icon?: IconName;\n  title?: string;\n  isMinimized?: boolean;\n  canClose?: boolean;\n  isCloseNonDestructive?: boolean;\n  className?: string;\n  withPeerColors?: boolean;\n  withEmojiStatus?: boolean;\n  clickArg?: T;\n  onClick?: (arg: T) => void;\n  itemClassName?: string;\n};\n\ntype StateProps = {\n  peer?: ApiPeer;\n  isSavedMessages?: boolean;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst PeerChip = <T,>({\n  icon,\n  title,\n  isMinimized,\n  canClose,\n  isCloseNonDestructive,\n  clickArg,\n  peer,\n  mockPeer,\n  customPeer,\n  className,\n  isSavedMessages,\n  withPeerColors,\n  withEmojiStatus,\n  onClick,\n  itemClassName,\n}: OwnProps<T> & StateProps) => {\n  const lang = useOldLang();\n\n  const apiPeer = mockPeer || peer;\n  const anyPeer = customPeer || apiPeer;\n\n  const chat = apiPeer && isApiPeerChat(apiPeer) ? apiPeer : undefined;\n\n  let iconElement: TeactNode | undefined;\n  let titleElement: TeactNode | undefined;\n  let titleText: string | undefined;\n\n  if (icon && title) {\n    iconElement = (\n      <div className={styles.iconWrapper}>\n        <Icon name={icon} style={styles.icon} />\n      </div>\n    );\n\n    titleElement = title;\n  } else if (anyPeer) {\n    iconElement = (\n      <Avatar\n        className={styles.avatar}\n        peer={anyPeer}\n        size=\"small\"\n        isSavedMessages={isSavedMessages}\n      />\n    );\n\n    titleText = getPeerTitle(lang, anyPeer) || title;\n    titleElement = title || (\n      <FullNameTitle peer={anyPeer} isSavedMessages={isSavedMessages} withEmojiStatus={withEmojiStatus} />\n    );\n  }\n\n  const fullClassName = buildClassName(\n    styles.root,\n    (chat?.isForum || customPeer?.isAvatarSquare) && styles.squareAvatar,\n    isMinimized && styles.minimized,\n    canClose && styles.closeable,\n    isCloseNonDestructive && styles.nonDestructive,\n    !onClick && styles.notClickable,\n    withPeerColors && getPeerColorClass(customPeer || peer),\n    className,\n  );\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={() => onClick?.(clickArg!)}\n      title={isMinimized ? titleText : undefined}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {iconElement}\n      {!isMinimized && (\n        <div className={buildClassName(styles.name, itemClassName)} dir=\"auto\">\n          {titleElement}\n        </div>\n      )}\n      {canClose && (\n        <div className={styles.remove}>\n          <Icon name=\"close\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId, forceShowSelf }): StateProps => {\n    if (!peerId) {\n      return {};\n    }\n\n    const peer = selectPeer(global, peerId);\n    const user = selectUser(global, peerId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n\n    return {\n      peer,\n      isSavedMessages,\n    };\n  },\n)(PeerChip)) as typeof PeerChip;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nY2ggBsF\",\"withBadge\":\"RYtVQAjM\",\"badgeContainer\":\"dhigNjAq\",\"slide-in\":\"YfcP52Ym\",\"slideIn\":\"YfcP52Ym\",\"floating-badge-wrapper\":\"cOpfCGPh\",\"floatingBadgeWrapper\":\"cOpfCGPh\",\"rotate-in\":\"AgMPRKbT\",\"rotateIn\":\"AgMPRKbT\",\"floating-badge\":\"uNwBLNOy\",\"floatingBadge\":\"uNwBLNOy\",\"floating-badge-triangle\":\"qRwO7SZm\",\"floatingBadgeTriangle\":\"qRwO7SZm\",\"floating-badge-icon\":\"MJ7MTmxi\",\"floatingBadgeIcon\":\"MJ7MTmxi\",\"floating-badge-value\":\"MwzZt3Qo\",\"floatingBadgeValue\":\"MwzZt3Qo\",\"left\":\"_b5HgBXr\",\"right\":\"P6mch4bB\",\"progress\":\"sZZV0yoe\",\"fullProgress\":\"m8ie8IxL\",\"primary\":\"Zi0w7QJ3\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useResizeObserver from '../../hooks/useResizeObserver';\n\nimport Icon from './icons/Icon';\n\nimport styles from './PremiumProgress.module.scss';\n\ntype OwnProps = {\n  leftText?: string;\n  rightText?: string;\n  floatingBadgeIcon?: IconName;\n  floatingBadgeText?: string;\n  progress?: number;\n  isPrimary?: boolean;\n  className?: string;\n};\n\nconst PremiumProgress: FC<OwnProps> = ({\n  leftText,\n  rightText,\n  floatingBadgeText,\n  floatingBadgeIcon,\n  progress,\n  isPrimary,\n  className,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const floatingBadgeRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const parentContainerRef = useRef<HTMLDivElement>(null);\n\n  const [shiftX, setShiftX] = useState(0);\n  const [tailPosition, setTailPosition] = useState(0);\n\n  const updateBadgePosition = () => {\n    if (floatingBadgeRef.current && parentContainerRef.current && progress !== undefined) {\n      const badgeWidth = floatingBadgeRef.current.offsetWidth;\n      const parentWidth = parentContainerRef.current.offsetWidth;\n      const minShift = badgeWidth / 2;\n      const maxShift = parentWidth - badgeWidth / 2;\n      const currentShift = progress * parentWidth;\n      const safeShift = Math.max(minShift, Math.min(currentShift, maxShift));\n\n      setShiftX(safeShift / parentWidth);\n\n      let newTailPosition;\n      if (currentShift < minShift) {\n        newTailPosition = (progress * parentWidth) / (minShift * 2);\n      } else if (currentShift > maxShift) {\n        const progressMapped = (progress - (maxShift / parentWidth)) / (1 - maxShift / parentWidth);\n        newTailPosition = 0.5 + (progressMapped * 0.4);\n      } else {\n        newTailPosition = 0.5;\n      }\n      setTailPosition(newTailPosition);\n    }\n  };\n\n  useEffect(updateBadgePosition, [progress]);\n\n  useResizeObserver(parentContainerRef, updateBadgePosition);\n\n  const hasFloatingBadge = Boolean(floatingBadgeIcon || floatingBadgeText);\n  const isProgressFull = Boolean(progress) && progress > 0.99;\n\n  return (\n    <div\n      ref={parentContainerRef}\n      className={buildClassName(\n        styles.root,\n        hasFloatingBadge && styles.withBadge,\n        isPrimary && styles.primary,\n        className,\n      )}\n      style={buildStyle(\n        progress !== undefined && `--progress: ${progress}`,\n        tailPosition !== undefined && `--tail-position: ${tailPosition}`,\n        `--shift-x: ${shiftX}`,\n      )}\n    >\n      {hasFloatingBadge && (\n        <div className={styles.badgeContainer}>\n          <div className={styles.floatingBadgeWrapper}>\n            <div className={styles.floatingBadge} ref={floatingBadgeRef}>\n              {floatingBadgeIcon && <Icon name={floatingBadgeIcon} className={styles.floatingBadgeIcon} />}\n              {floatingBadgeText && (\n                <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                  {floatingBadgeText}\n                </div>\n              )}\n            </div>\n            <div className={styles.floatingBadgeTriangle}>\n              <svg width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\">\n                <path d=\"m 28,4 v 9 c 0.0089,7.283278 -3.302215,5.319646 -6.750951,8.589815 l -5.8284,5.82843 c -0.781,0.78105 -2.0474,0.78104 -2.8284,0 L 6.7638083,21.589815 C 2.8288652,17.959047 0.04527024,20.332086 0,13 V 4 C 0,4 0.00150581,0.97697493 3,1 5.3786658,1.018266 22.594519,0.9142007 25,1 c 2.992326,0.1067311 3,3 3,3 z\" fill=\"#7E85FF\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n      )}\n      <div className={styles.left}>\n        <span>{leftText}</span>\n      </div>\n      <div className={styles.right}>\n        <span>{rightText}</span>\n      </div>\n      <div className={buildClassName(styles.progress, isProgressFull && styles.fullProgress)}>\n        <div className={styles.left}>\n          <span>{leftText}</span>\n        </div>\n        <div className={styles.right}>\n          <span>{rightText}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumProgress);\n","import type {\n  ApiFormattedText,\n  ApiStarGift,\n  ApiStarGiftAttribute,\n  ApiStarGiftAttributeBackdrop,\n  ApiStarGiftAttributeModel,\n  ApiStarGiftAttributeOriginalDetails,\n  ApiStarGiftAttributePattern,\n  ApiSticker,\n} from '../../../api/types';\n\nexport type GiftAttributes = {\n  model?: ApiStarGiftAttributeModel;\n  originalDetails?: ApiStarGiftAttributeOriginalDetails;\n  pattern?: ApiStarGiftAttributePattern;\n  backdrop?: ApiStarGiftAttributeBackdrop;\n};\n\nexport function getStickerFromGift(gift: ApiStarGift): ApiSticker | undefined {\n  if (gift.type === 'starGift') {\n    return gift.sticker;\n  }\n\n  return gift.attributes.find((attr): attr is ApiStarGiftAttributeModel => attr.type === 'model')?.sticker;\n}\n\nexport function getTotalGiftAvailability(gift: ApiStarGift): number | undefined {\n  if (gift.type === 'starGift') {\n    return gift.availabilityTotal;\n  }\n\n  return gift.totalCount;\n}\n\nexport function getGiftMessage(gift: ApiStarGift): ApiFormattedText | undefined {\n  if (gift.type !== 'starGiftUnique') return undefined;\n\n  return gift.attributes.find((attr): attr is ApiStarGiftAttributeOriginalDetails => attr.type === 'model')?.message;\n}\n\nexport function getGiftAttributes(gift: ApiStarGift): GiftAttributes | undefined {\n  if (gift.type !== 'starGiftUnique') return undefined;\n\n  return getGiftAttributesFromList(gift.attributes);\n}\n\nexport function getGiftAttributesFromList(attributes: ApiStarGiftAttribute[]) {\n  const model = attributes.find((attr): attr is ApiStarGiftAttributeModel => attr.type === 'model');\n  const backdrop = attributes.find((attr): attr is ApiStarGiftAttributeBackdrop => attr.type === 'backdrop');\n  const pattern = attributes.find((attr): attr is ApiStarGiftAttributePattern => attr.type === 'pattern');\n  const originalDetails = attributes.find((attr): attr is ApiStarGiftAttributeOriginalDetails => (\n    attr.type === 'originalDetails'\n  ));\n\n  return {\n    model,\n    originalDetails,\n    pattern,\n    backdrop,\n  };\n}\n","import { getGlobal } from '../../../global';\n\nimport type { ApiMessage, ApiSponsoredMessage } from '../../../api/types';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\nimport type { TextPart, ThreadId } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport {\n  getMessageStatefulContent,\n  getMessageText,\n} from '../../../global/helpers';\nimport {\n  getMessageSummaryDescription,\n  getMessageSummaryEmoji,\n  getMessageSummaryText,\n  TRUNCATED_SUMMARY_LENGTH,\n} from '../../../global/helpers/messageSummary';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport trimText from '../../../util/trimText';\nimport renderText from './renderText';\nimport { renderTextWithEntities } from './renderTextWithEntities';\n\nexport function renderMessageText({\n  message,\n  highlight,\n  emojiSize,\n  asPreview,\n  truncateLength,\n  isProtected,\n  forcePlayback,\n  shouldRenderAsHtml,\n  isForMediaViewer,\n  threadId,\n  maxTimestamp,\n} : {\n  message: ApiMessage | ApiSponsoredMessage;\n  highlight?: string;\n  emojiSize?: number;\n  asPreview?: boolean;\n  truncateLength?: number;\n  isProtected?: boolean;\n  forcePlayback?: boolean;\n  shouldRenderAsHtml?: boolean;\n  isForMediaViewer?: boolean;\n  threadId?: ThreadId;\n  maxTimestamp?: number;\n}) {\n  const { text, entities } = message.content.text || {};\n\n  if (!text) {\n    const contentNotSupportedText = getMessageText(message)?.text;\n    return contentNotSupportedText ? [trimText(contentNotSupportedText, truncateLength)] : undefined;\n  }\n\n  const messageKey = getMessageKey(message);\n\n  return renderTextWithEntities({\n    text: trimText(text, truncateLength),\n    entities,\n    highlight,\n    emojiSize,\n    shouldRenderAsHtml,\n    containerId: `${isForMediaViewer ? 'mv-' : ''}${messageKey}`,\n    asPreview,\n    isProtected,\n    forcePlayback,\n    messageId: 'id' in message ? message.id : undefined,\n    chatId: message.chatId,\n    threadId,\n    maxTimestamp,\n  });\n}\n\n// TODO Use Message Summary component instead\nexport function renderMessageSummary(\n  lang: OldLangFn,\n  message: ApiMessage,\n  noEmoji = false,\n  highlight?: string,\n  truncateLength = TRUNCATED_SUMMARY_LENGTH,\n): TextPart[] {\n  const { entities } = message.content.text || {};\n\n  const global = getGlobal();\n  const statefulContent = getMessageStatefulContent(global, message);\n\n  const hasSpoilers = entities?.some((e) => e.type === ApiMessageEntityTypes.Spoiler);\n  const hasCustomEmoji = entities?.some((e) => e.type === ApiMessageEntityTypes.CustomEmoji);\n  if (!hasSpoilers && !hasCustomEmoji) {\n    const text = trimText(getMessageSummaryText(lang, message, statefulContent, noEmoji), truncateLength);\n\n    if (highlight) {\n      return renderText(text, ['emoji', 'highlight'], { highlight });\n    } else {\n      return renderText(text);\n    }\n  }\n\n  const emoji = !noEmoji && getMessageSummaryEmoji(message);\n  const emojiWithSpace = emoji ? `${emoji} ` : '';\n\n  const text = renderMessageText({\n    message, highlight, asPreview: true, truncateLength,\n  });\n  const description = getMessageSummaryDescription(lang, message, statefulContent, text);\n\n  return [\n    ...renderText(emojiWithSpace),\n    ...(Array.isArray(description) ? description : [description]),\n  ].filter(Boolean);\n}\n","import { getGlobal } from '../../../global';\n\nimport { selectChat, selectChatLastMessage } from '../../../global/selectors';\nimport { orderBy } from '../../../util/iteratees';\n\nconst VERIFIED_PRIORITY_BASE = 3e9;\nconst PINNED_PRIORITY_BASE = 3e8;\n\nexport default function sortChatIds(\n  chatIds: string[],\n  shouldPrioritizeVerified = false,\n  priorityIds?: string[],\n  currentUserId?: string,\n) {\n  // Avoid calling sort on every global change\n  const global = getGlobal();\n\n  return orderBy(chatIds, (id) => {\n    if (id === currentUserId) {\n      return Infinity;\n    }\n\n    const chat = selectChat(global, id);\n    if (!chat) {\n      return 0;\n    }\n\n    let priority = 0;\n\n    const lastMessage = selectChatLastMessage(global, id);\n    if (lastMessage) {\n      priority += lastMessage.date;\n    }\n\n    if (shouldPrioritizeVerified && chat.isVerified) {\n      priority += VERIFIED_PRIORITY_BASE; // ~100 years in seconds\n    }\n\n    if (priorityIds && priorityIds.includes(id)) {\n      priority = Date.now() + PINNED_PRIORITY_BASE + (priorityIds.length - priorityIds.indexOf(id));\n    }\n\n    return priority;\n  }, 'desc');\n}\n","import React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport type { CustomPeerType, UniqueCustomPeer } from '../../../types';\n\nimport { DEBUG } from '../../../config';\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { getGroupStatus, getUserStatus, isUserOnline } from '../../../global/helpers';\nimport { getPeerTypeKey, isApiPeerChat } from '../../../global/helpers/peers';\nimport { selectPeer, selectUserStatus } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport Loading from '../../ui/Loading';\nimport Radio from '../../ui/Radio';\nimport Avatar from '../Avatar';\nimport FullNameTitle from '../FullNameTitle';\nimport Icon from '../icons/Icon';\nimport PeerChip from '../PeerChip';\nimport PickerItem from './PickerItem';\n\nimport styles from './PickerStyles.module.scss';\n\ntype SingleModeProps<CategoryType extends string> = {\n  allowMultiple?: false;\n  itemInputType?: 'radio';\n  selectedId?: string;\n  selectedIds?: never; // Help TS to throw an error if this is passed\n  selectedCategory?: CategoryType;\n  selectedCategories?: never;\n  onSelectedCategoryChange?: (category: CategoryType) => void;\n  onSelectedIdChange?: (id: string) => void;\n};\n\ntype MultipleModeProps<CategoryType extends string> = {\n  allowMultiple: true;\n  itemInputType: 'checkbox';\n  selectedId?: never;\n  selectedIds: string[];\n  lockedSelectedIds?: string[];\n  lockedUnselectedIds?: string[];\n  selectedCategory?: never;\n  selectedCategories?: CategoryType[];\n  onSelectedCategoriesChange?: (categories: CategoryType[]) => void;\n  onSelectedIdsChange?: (Ids: string[]) => void;\n};\n\ntype OwnProps<CategoryType extends string> = {\n  className?: string;\n  categories?: UniqueCustomPeer<CategoryType>[];\n  itemIds: string[];\n  lockedUnselectedSubtitle?: string;\n  filterValue?: string;\n  filterPlaceholder?: string;\n  categoryPlaceholderKey?: string;\n  notFoundText?: string;\n  searchInputId?: string;\n  itemClassName?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  isSearchable?: boolean;\n  forceShowSelf?: boolean;\n  isViewOnly?: boolean;\n  withStatus?: boolean;\n  withPeerTypes?: boolean;\n  withPeerUsernames?: boolean;\n  withDefaultPadding?: boolean;\n  onFilterChange?: (value: string) => void;\n  onDisabledClick?: (id: string, isSelected: boolean) => void;\n  onLoadMore?: () => void;\n} & (SingleModeProps<CategoryType> | MultipleModeProps<CategoryType>);\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\nconst ITEM_CLASS_NAME = 'PeerPickerItem';\n\nconst PeerPicker = <CategoryType extends string = CustomPeerType>({\n  className,\n  categories,\n  itemIds,\n  categoryPlaceholderKey,\n  filterValue,\n  filterPlaceholder,\n  notFoundText,\n  searchInputId,\n  itemClassName,\n  isLoading,\n  noScrollRestore,\n  isSearchable,\n  lockedUnselectedSubtitle,\n  forceShowSelf,\n  isViewOnly,\n  itemInputType,\n  withStatus,\n  withPeerTypes,\n  withPeerUsernames,\n  withDefaultPadding,\n  onFilterChange,\n  onDisabledClick,\n  onLoadMore,\n  ...optionalProps\n}: OwnProps<CategoryType>) => {\n  const lang = useOldLang();\n\n  const allowMultiple = optionalProps.allowMultiple;\n  const lockedSelectedIds = allowMultiple ? optionalProps.lockedSelectedIds : undefined;\n  const lockedUnselectedIds = allowMultiple ? optionalProps.lockedUnselectedIds : undefined;\n  const selectedCategories = useMemo(() => {\n    if (allowMultiple) {\n      return optionalProps.selectedCategories;\n    }\n\n    return optionalProps.selectedCategory ? [optionalProps.selectedCategory] : MEMO_EMPTY_ARRAY;\n  }, [allowMultiple, optionalProps.selectedCategory, optionalProps.selectedCategories]);\n\n  const selectedIds = useMemo(() => {\n    if (allowMultiple) {\n      return optionalProps.selectedIds;\n    }\n\n    return optionalProps.selectedId ? [optionalProps.selectedId] : MEMO_EMPTY_ARRAY;\n  }, [allowMultiple, optionalProps.selectedId, optionalProps.selectedIds]);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const shouldMinimize = selectedIds.length > MAX_FULL_ITEMS;\n\n  useEffect(() => {\n    if (!isSearchable) return undefined;\n    const timeoutId = window.setTimeout(() => {\n      requestMeasure(() => {\n        inputRef.current?.focus();\n      });\n    }, FOCUS_DELAY_MS);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [isSearchable]);\n\n  const lockedSelectedIdsSet = useMemo(() => new Set(lockedSelectedIds), [lockedSelectedIds]);\n  const lockedUnselectedIdsSet = useMemo(() => new Set(lockedUnselectedIds), [lockedUnselectedIds]);\n\n  const unlockedSelectedIds = useMemo(() => {\n    return selectedIds.filter((id) => !lockedSelectedIdsSet.has(id));\n  }, [lockedSelectedIdsSet, selectedIds]);\n\n  const categoriesByType = useMemo(() => {\n    if (!categories) return {};\n    return buildCollectionByKey(categories, 'type');\n  }, [categories]);\n\n  const sortedItemIds = useMemo(() => {\n    if (filterValue) {\n      return itemIds;\n    }\n\n    const lockedSelectedBucket: string[] = [];\n    const unlockedBucket: string[] = [];\n    const lockedUnselectableBucket: string[] = [];\n\n    itemIds.forEach((id) => {\n      if (lockedSelectedIdsSet.has(id)) {\n        lockedSelectedBucket.push(id);\n      } else if (lockedUnselectedIdsSet.has(id)) {\n        lockedUnselectableBucket.push(id);\n      } else {\n        unlockedBucket.push(id);\n      }\n    });\n\n    return lockedSelectedBucket.concat(unlockedBucket, lockedUnselectableBucket);\n  }, [filterValue, itemIds, lockedSelectedIdsSet, lockedUnselectedIdsSet]);\n\n  const handleItemClick = useLastCallback((id: string) => {\n    if (lockedSelectedIdsSet.has(id)) {\n      onDisabledClick?.(id, true);\n      return;\n    }\n\n    if (lockedUnselectedIdsSet.has(id)) {\n      onDisabledClick?.(id, false);\n      return;\n    }\n\n    if (allowMultiple && categoriesByType[id]) {\n      const categoryType = categoriesByType[id].type;\n      const newSelectedCategories = selectedCategories?.slice() || [];\n      if (newSelectedCategories.includes(categoryType)) {\n        newSelectedCategories.splice(newSelectedCategories.indexOf(categoryType), 1);\n      } else {\n        newSelectedCategories.push(categoryType);\n      }\n      optionalProps.onSelectedCategoriesChange?.(newSelectedCategories);\n\n      return;\n    }\n\n    if (allowMultiple) {\n      const newSelectedIds = selectedIds.slice();\n      if (newSelectedIds.includes(id)) {\n        newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n      } else {\n        newSelectedIds.push(id);\n      }\n      optionalProps.onSelectedIdsChange?.(newSelectedIds);\n\n      return;\n    }\n\n    if (categoriesByType[id]) {\n      optionalProps.onSelectedCategoryChange?.(categoriesByType[id].type);\n      return;\n    }\n\n    optionalProps.onSelectedIdChange?.(id);\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange?.(value);\n  });\n\n  const [viewportIds, getMore] = useInfiniteScroll(\n    onLoadMore, sortedItemIds, Boolean(filterValue),\n  );\n\n  const renderItem = useCallback((id: string, isCategory?: boolean) => {\n    const global = getGlobal();\n    const category = isCategory ? categoriesByType[id] : undefined;\n    const peer = !isCategory ? selectPeer(global, id) : undefined;\n\n    const peerOrCategory = peer || category;\n    if (!peerOrCategory) {\n      if (DEBUG) return <div key={id}>No peer or category with ID {id}</div>;\n      return undefined;\n    }\n\n    const isSelf = peer && !isApiPeerChat(peer) ? (peer.isSelf && !forceShowSelf) : undefined;\n\n    const isAlwaysUnselected = lockedUnselectedIdsSet.has(id);\n    const isAlwaysSelected = lockedSelectedIdsSet.has(id);\n    const isLocked = isAlwaysUnselected || isAlwaysSelected;\n    const isChecked = category ? selectedCategories?.includes(category.type) : selectedIds.includes(id);\n\n    function getInputElement() {\n      if (isLocked) return <Icon name=\"lock-badge\" />;\n      if (itemInputType === 'radio') {\n        return <Radio checked={isChecked} disabled={isLocked} onlyInput />;\n      }\n      if (itemInputType === 'checkbox') {\n        return <Checkbox checked={isChecked} disabled={isLocked} onlyInput />;\n      }\n      return undefined;\n    }\n\n    function getSubtitle() {\n      if (isAlwaysUnselected) return [lockedUnselectedSubtitle];\n      if (!peer) return undefined;\n\n      if (withPeerUsernames) {\n        const username = peer.usernames?.[0]?.username;\n        if (username) {\n          return [`@${username}`];\n        }\n      }\n\n      if (withStatus) {\n        if (isApiPeerChat(peer)) {\n          return [getGroupStatus(lang, peer)];\n        }\n\n        const userStatus = selectUserStatus(global, peer.id);\n        return [\n          getUserStatus(lang, peer, userStatus),\n          buildClassName(isUserOnline(peer, userStatus, true) && styles.onlineStatus),\n        ];\n      }\n\n      if (withPeerTypes) {\n        const langKey = getPeerTypeKey(peer);\n        return langKey && [lang(langKey)];\n      }\n\n      return undefined;\n    }\n\n    const [subtitle, subtitleClassName] = getSubtitle() || [];\n\n    return (\n      <PickerItem\n        key={id}\n        className={buildClassName(ITEM_CLASS_NAME, itemClassName)}\n        title={<FullNameTitle peer={peerOrCategory} />}\n        avatarElement={(\n          <Avatar\n            peer={peer || category}\n            isSavedMessages={isSelf}\n            size=\"medium\"\n          />\n        )}\n        subtitle={subtitle}\n        subtitleClassName={subtitleClassName}\n        disabled={isLocked}\n        inactive={isViewOnly}\n        ripple\n        inputElement={getInputElement()}\n        inputPosition=\"end\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleItemClick(id)}\n        // eslint-disable-next-line react/jsx-no-bind\n        onDisabledClick={onDisabledClick && (() => onDisabledClick(id, isAlwaysSelected))}\n      />\n    );\n  }, [\n    categoriesByType, forceShowSelf, isViewOnly, itemClassName, itemInputType, lang, lockedSelectedIdsSet,\n    lockedUnselectedIdsSet, lockedUnselectedSubtitle, onDisabledClick, selectedCategories, selectedIds,\n    withPeerTypes, withStatus, withPeerUsernames,\n  ]);\n\n  const beforeChildren = useMemo(() => {\n    if (!categories?.length) return undefined;\n    return (\n      <div key=\"categories\">\n        {categoryPlaceholderKey && <div className={styles.pickerCategoryTitle}>{lang(categoryPlaceholderKey)}</div>}\n        {categories?.map((category) => renderItem(category.type, true))}\n        <div className={styles.pickerCategoryTitle}>{lang('FilterChats')}</div>\n      </div>\n    );\n  }, [categories, categoryPlaceholderKey, lang, renderItem]);\n\n  return (\n    <div className={buildClassName(styles.container, className)}>\n      {isSearchable && (\n        <div className={buildClassName(styles.header, 'custom-scroll')} dir={lang.isRtl ? 'rtl' : undefined}>\n          {selectedCategories?.map((category) => (\n            <PeerChip\n              className={styles.peerChip}\n              customPeer={categoriesByType[category]}\n              onClick={handleItemClick}\n              clickArg={category}\n              canClose\n            />\n          ))}\n          {lockedSelectedIds?.map((id, i) => (\n            <PeerChip\n              className={styles.peerChip}\n              peerId={id}\n              isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n              forceShowSelf={forceShowSelf}\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          {unlockedSelectedIds.map((id, i) => (\n            <PeerChip\n              className={styles.peerChip}\n              peerId={id}\n              isMinimized={\n                shouldMinimize && i + (lockedSelectedIds?.length || 0) < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT\n              }\n              canClose\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          <InputText\n            id={searchInputId}\n            ref={inputRef}\n            value={filterValue}\n            onChange={handleFilterChange}\n            placeholder={filterPlaceholder || lang('SelectChat')}\n          />\n        </div>\n      )}\n\n      {viewportIds?.length ? (\n        <InfiniteScroll\n          className={buildClassName(styles.pickerList, withDefaultPadding && styles.padded, 'custom-scroll')}\n          items={viewportIds}\n          itemSelector={`.${ITEM_CLASS_NAME}`}\n          beforeChildren={beforeChildren}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportIds.map((id) => renderItem(id))}\n        </InfiniteScroll>\n      ) : !isLoading && viewportIds && !viewportIds.length ? (\n        <p className={styles.noResults}>{notFoundText || 'Sorry, nothing found.'}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(PeerPicker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"OHkx_W75\",\"clickable\":\"VUSwo4t5\",\"separator\":\"P53DrbWA\",\"disabled\":\"tvZeVJPh\",\"title\":\"JSSC0N8V\",\"subtitle\":\"OYmzCSp2\",\"withAvatar\":\"dMT9byM6\",\"multiline\":\"neXqB2_A\",\"input\":\"kmjqObdP\",\"startInput\":\"F0Hv3EQm\",\"endInput\":\"iqGhSQGm\",\"avatarElement\":\"dnAaRPCo\"};","import React, { type TeactNode } from '../../../lib/teact/teact';\n\nimport { IS_IOS } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport RippleEffect from '../../ui/RippleEffect';\n\nimport styles from './PickerItem.module.scss';\n\ntype OwnProps = {\n  title: TeactNode;\n  subtitle?: TeactNode;\n  avatarElement?: TeactNode;\n  inputElement?: TeactNode;\n  inputPosition?: 'start' | 'end';\n  disabled?: boolean;\n  inactive?: boolean;\n  ripple?: boolean;\n  className?: string;\n  titleClassName?: string;\n  subtitleClassName?: string;\n  style?: string;\n  onClick?: NoneToVoidFunction;\n  onDisabledClick?: NoneToVoidFunction;\n};\n\nconst PickerItem = ({\n  title,\n  subtitle,\n  avatarElement,\n  inputElement,\n  inputPosition = 'start',\n  disabled,\n  inactive,\n  ripple,\n  className,\n  titleClassName,\n  subtitleClassName,\n  style,\n  onClick,\n  onDisabledClick,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const isClickable = !inactive && !disabled;\n  const handleClick = useLastCallback(() => {\n    if (inactive) return;\n\n    if (disabled) {\n      onDisabledClick?.();\n      return;\n    }\n\n    onClick?.();\n  });\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        subtitle && styles.multiline,\n        disabled && styles.disabled,\n        isClickable && styles.clickable,\n        avatarElement && styles.withAvatar,\n        className,\n      )}\n      onClick={handleClick}\n      style={style}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      role={isClickable ? 'button' : undefined}\n      // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex\n      tabIndex={isClickable ? 0 : undefined}\n    >\n      {!disabled && !inactive && ripple && <RippleEffect />}\n      {inputElement && (\n        <div className={buildClassName(\n          styles.input,\n          inputPosition === 'end' ? styles.endInput : styles.startInput,\n        )}\n        >\n          {inputElement}\n        </div>\n      )}\n      {avatarElement && (\n        <div className={styles.avatarElement}>\n          {avatarElement}\n        </div>\n      )}\n      <div className={buildClassName(styles.title, titleClassName)}>\n        {title}\n      </div>\n      {subtitle && (\n        <div className={buildClassName(styles.subtitle, subtitleClassName)}>\n          {subtitle}\n        </div>\n      )}\n      {!inputElement && IS_IOS && (\n        <div className={styles.separator} />\n      )}\n    </div>\n  );\n};\n\nexport default PickerItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Af3tYFMg\",\"canvas\":\"GbpiDSS_\"};","import React, {\n  memo, useEffect, useMemo, useRef, useSignal, useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { preloadImage } from '../../../util/files';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport styles from './RadialPatternBackground.module.scss';\n\ntype OwnProps = {\n  backgroundColors: string[];\n  patternColor?: string;\n  patternIcon?: ApiSticker;\n  className?: string;\n  clearBottomSector?: boolean;\n};\n\nconst RINGS = 3;\nconst BASE_RING_ITEM_COUNT = 8;\nconst RING_INCREMENT = 0.5;\nconst CENTER_EMPTINESS = 0.05;\nconst MAX_RADIUS = 0.4;\nconst BASE_ICON_SIZE = 20;\n\nconst MIN_SIZE = 250;\n\nconst RadialPatternBackground = ({\n  backgroundColors,\n  patternColor,\n  patternIcon,\n  clearBottomSector,\n  className,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const [getContainerSize, setContainerSize] = useSignal({ width: 0, height: 0 });\n\n  const dpr = useDevicePixelRatio();\n\n  const [emojiImage, setEmojiImage] = useState<HTMLImageElement | undefined>();\n\n  const previewMediaHash = patternIcon && getStickerMediaHash(patternIcon, 'preview');\n  const previewUrl = useMedia(previewMediaHash);\n\n  useEffect(() => {\n    if (!previewUrl) return;\n    preloadImage(previewUrl).then(setEmojiImage);\n  }, [previewUrl]);\n\n  const patternPositions = useMemo(() => {\n    const coordinates: { x: number; y: number; sizeFactor: number }[] = [];\n    for (let ring = 1; ring <= RINGS; ring++) {\n      const ringItemCount = Math.floor(BASE_RING_ITEM_COUNT * (1 + (ring - 1) * RING_INCREMENT));\n      const ringProgress = ring / RINGS;\n      const ringRadius = CENTER_EMPTINESS + (MAX_RADIUS - CENTER_EMPTINESS) * ringProgress;\n\n      const angleShift = ring % 2 === 0 ? Math.PI / ringItemCount : 0;\n\n      for (let i = 0; i < ringItemCount; i++) {\n        const angle = (i / ringItemCount) * Math.PI * 2 + angleShift;\n\n        if (clearBottomSector && angle > Math.PI * 0.45 && angle < Math.PI * 0.55) {\n          continue;\n        }\n\n        // Slightly oval\n        const xOffset = ringRadius * 1.71 * Math.cos(angle);\n        const yOffset = ringRadius * Math.sin(angle);\n\n        const x = 0.5 + xOffset;\n        const y = 0.5 + yOffset;\n\n        const sizeFactor = 1.4 - ringProgress * Math.random();\n\n        coordinates.push({\n          x, y, sizeFactor,\n        });\n      }\n    }\n    return coordinates;\n  }, [clearBottomSector]);\n\n  useResizeObserver(containerRef, (entry) => {\n    setContainerSize({\n      width: entry.contentRect.width,\n      height: entry.contentRect.height,\n    });\n  });\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (container) {\n      setContainerSize({\n        width: container.clientWidth,\n        height: container.clientHeight,\n      });\n    }\n  }, [setContainerSize]);\n\n  const draw = useLastCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas || !emojiImage) return;\n    const ctx = canvas.getContext('2d')!;\n    const { width, height } = canvas;\n    if (!width || !height) return;\n\n    ctx.save();\n    patternPositions.forEach(({\n      x, y, sizeFactor,\n    }) => {\n      const centerShift = (width - Math.max(width, MIN_SIZE * dpr)) / 2; // Shift coords if canvas is smaller than `MIN_SIZE`\n      const renderX = x * Math.max(width, MIN_SIZE * dpr) + centerShift;\n      const renderY = y * Math.max(height, MIN_SIZE * dpr) + centerShift;\n\n      const size = BASE_ICON_SIZE * dpr * sizeFactor * (centerShift ? 0.8 : 1);\n\n      ctx.drawImage(emojiImage, renderX - size / 2, renderY - size / 2, size, size);\n    });\n    ctx.restore();\n\n    if (patternColor) {\n      ctx.save();\n      ctx.fillStyle = patternColor;\n      ctx.globalCompositeOperation = 'source-atop';\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    const radialGradient = ctx.createRadialGradient(width / 2, height / 2, 0, width / 2, height / 2, width / 2);\n    radialGradient.addColorStop(0, '#FFFFFF77');\n    radialGradient.addColorStop(1, '#FFFFFF');\n\n    // Alpha mask\n    ctx.save();\n    ctx.globalCompositeOperation = 'destination-out';\n    ctx.fillStyle = radialGradient;\n    ctx.fillRect(0, 0, width, height);\n    ctx.restore();\n  });\n\n  useEffect(() => {\n    draw();\n  }, [emojiImage]);\n\n  useEffect(() => {\n    const { width, height } = getContainerSize();\n    const canvas = canvasRef.current!;\n    if (!width || !height) {\n      return;\n    }\n\n    const maxSide = Math.max(width, height);\n    requestMutation(() => {\n      canvas.width = maxSide * dpr;\n      canvas.height = maxSide * dpr;\n\n      draw();\n    });\n  }, [getContainerSize, dpr]);\n\n  return (\n    <div\n      ref={containerRef}\n      className={buildClassName(styles.root, className)}\n      style={buildStyle(\n        `--_bg-1: ${backgroundColors[0]}`,\n        `--_bg-2: ${backgroundColors[1] || backgroundColors[0]}`,\n      )}\n    >\n      <canvas className={styles.canvas} ref={canvasRef} />\n    </div>\n  );\n};\n\nexport default memo(RadialPatternBackground);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"aInga6VW\",\"particle\":\"PZAuNVZH\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiEmojiStatusType, ApiReactionCustomEmoji } from '../../../api/types';\n\nimport { getStickerHashById } from '../../../global/helpers';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport CustomEmoji from '../CustomEmoji';\n\nimport styles from './CustomEmojiEffect.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiEmojiStatusType;\n  className?: string;\n  isLottie?: boolean;\n  particleSize?: number;\n  onEnded?: NoneToVoidFunction;\n};\n\nconst EFFECT_AMOUNT = 7;\n\nconst CustomEmojiEffect: FC<OwnProps> = ({\n  reaction,\n  isLottie,\n  className,\n  particleSize,\n  onEnded,\n}) => {\n  const stickerHash = getStickerHashById(reaction.documentId, true);\n\n  const previewMediaData = useMedia(!isLottie ? stickerHash : undefined);\n\n  const paths: string[] = useMemo(() => {\n    if (!IS_OFFSET_PATH_SUPPORTED) return [];\n    return Array.from({ length: EFFECT_AMOUNT }).map(() => generateRandomDropPath(particleSize));\n  }, [particleSize]);\n\n  if (!previewMediaData && !isLottie) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, className)}\n      style={buildStyle(Boolean(particleSize) && `--particle-size: ${particleSize}px`)}\n    >\n      {paths.map((path, i) => {\n        const style = `--offset-path: path('${path}');`;\n        if (isLottie) {\n          return (\n            <CustomEmoji\n              documentId={reaction.documentId}\n              className={styles.particle}\n              style={style}\n              withSharedAnimation\n              size={particleSize}\n              onAnimationEnd={i === 0 ? onEnded : undefined}\n            />\n          );\n        }\n\n        return (\n          <img\n            src={previewMediaData}\n            alt=\"\"\n            className={styles.particle}\n            style={style}\n            draggable={false}\n            onAnimationEnd={i === 0 ? onEnded : undefined}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiEffect);\n\nfunction generateRandomDropPath(particleSize = 20) {\n  const x = (particleSize / 2 + Math.random() * particleSize * 3) * (Math.random() > 0.5 ? 1 : -1);\n  const y = particleSize + Math.random() * particleSize * 4;\n\n  return `M 0 0 C 0 0 ${x} ${-y - particleSize} ${x} ${y}`;\n}\n","import React, {\n  memo, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n  ApiStickerSet,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { getStickerHashById, isSameReaction } from '../../../global/helpers';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { roundToNearestEven } from '../../../util/math';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../AnimatedSticker';\nimport CustomEmoji from '../CustomEmoji';\nimport CustomEmojiEffect from './CustomEmojiEffect';\nimport ReactionStaticEmoji from './ReactionStaticEmoji';\n\nimport styles from './ReactionAnimatedEmoji.module.scss';\n\ntype OwnProps = {\n  containerId: string;\n  reaction: ApiReaction;\n  className?: string;\n  size?: number;\n  effectSize?: number;\n  withEffectOnly?: boolean;\n  shouldPause?: boolean;\n  shouldLoop?: boolean;\n  loopLimit?: number;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  activeReactions?: ApiReaction[];\n  availableReactions?: ApiAvailableReaction[];\n  genericEffects?: ApiStickerSet;\n  withEffects?: boolean;\n};\n\nconst ICON_SIZE = 1.5 * REM;\nconst CENTER_ICON_MULTIPLIER = 1.9;\nconst EFFECT_SIZE = 6.5 * REM;\nconst CUSTOM_EMOJI_EFFECT_MULTIPLIER = 0.5;\nconst MIN_PARTICLE_SIZE = REM;\n\nconst ReactionAnimatedEmoji = ({\n  containerId,\n  reaction,\n  className,\n  size = ICON_SIZE,\n  effectSize = EFFECT_SIZE,\n  activeReactions,\n  availableReactions,\n  genericEffects,\n  withEffects,\n  withEffectOnly,\n  shouldPause,\n  shouldLoop,\n  loopLimit,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { stopActiveReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isCustom = reaction.type === 'custom';\n\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((r) => isSameReaction(r.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const centerIconId = availableReaction?.centerIcon?.id;\n\n  const { customEmoji } = useCustomEmoji(isCustom ? reaction.documentId : undefined);\n\n  const assignedEffectId = useMemo(() => {\n    if (!isCustom) return availableReaction?.aroundAnimation?.id;\n\n    if (!customEmoji) return undefined;\n    const assignedId = availableReactions?.find((available) => available.reaction.emoticon === customEmoji.emoji)\n      ?.aroundAnimation?.id;\n    return assignedId;\n  }, [availableReaction, availableReactions, customEmoji, isCustom]);\n\n  const effectId = useMemo(() => {\n    if (assignedEffectId) {\n      return assignedEffectId;\n    }\n\n    if (!genericEffects?.stickers) {\n      return undefined;\n    }\n\n    const { stickers } = genericEffects;\n    const randomIndex = Math.floor(Math.random() * stickers.length);\n\n    return stickers[randomIndex].id;\n  }, [assignedEffectId, genericEffects]);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const mediaHashCenterIcon = centerIconId && getStickerHashById(centerIconId);\n  const mediaHashEffect = effectId && getStickerHashById(effectId);\n\n  const mediaDataCenterIcon = useMedia(mediaHashCenterIcon);\n  const mediaDataEffect = useMedia(mediaHashEffect);\n\n  const activeReaction = useMemo(() => (\n    activeReactions?.find((active) => isSameReaction(active, reaction))\n  ), [activeReactions, reaction]);\n\n  const shouldPlayEffect = Boolean(\n    withEffects && activeReaction && (isCustom || mediaDataCenterIcon) && mediaDataEffect,\n  );\n  const shouldPlayCenter = isIntersecting && ((shouldPlayEffect && !withEffectOnly) || shouldLoop);\n  const {\n    shouldRender: shouldRenderEffect,\n    transitionClassNames: animationClassNames,\n  } = useShowTransitionDeprecated(shouldPlayEffect, undefined, true, 'slow');\n  const {\n    shouldRender: shouldRenderCenter,\n    transitionClassNames: centerAnimationClassNames,\n  } = useShowTransitionDeprecated(shouldPlayCenter, undefined, true, 'slow');\n\n  const handleEnded = useLastCallback(() => {\n    stopActiveReaction({ containerId, reaction });\n  });\n\n  const [isAnimationLoaded, markAnimationLoaded, unmarkAnimationLoaded] = useFlag();\n  const shouldShowStatic = !isCustom && (!shouldPlayCenter || !isAnimationLoaded);\n  const {\n    shouldRender: shouldRenderStatic,\n    transitionClassNames: staticClassNames,\n  } = useShowTransitionDeprecated(shouldShowStatic, undefined, true);\n\n  const rootClassName = buildClassName(\n    styles.root,\n    shouldRenderEffect && styles.animating,\n    withEffectOnly && styles.withEffectOnly,\n    className,\n  );\n\n  return (\n    <div className={rootClassName} ref={ref}>\n      {!withEffectOnly && shouldRenderStatic && (\n        <ReactionStaticEmoji\n          className={staticClassNames}\n          reaction={reaction}\n          availableReactions={availableReactions}\n          size={size}\n          observeIntersection={observeIntersection}\n        />\n      )}\n      {!withEffectOnly && isCustom && (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          className={styles.customEmoji}\n          size={size}\n          noPlay={shouldPause}\n          noVideoOnMobile\n          loopLimit={loopLimit}\n          observeIntersectionForPlaying={observeIntersection}\n          forceAlways\n        />\n      )}\n      {shouldRenderCenter && !isCustom && (\n        <AnimatedSticker\n          key={`${centerIconId}-${size}`}\n          className={buildClassName(styles.animatedIcon, centerAnimationClassNames)}\n          size={roundToNearestEven(size * CENTER_ICON_MULTIPLIER)}\n          tgsUrl={mediaDataCenterIcon}\n          play={isIntersecting && !shouldPause}\n          noLoop={!shouldLoop}\n          onLoad={markAnimationLoaded}\n          onEnded={unmarkAnimationLoaded}\n          forceAlways\n        />\n      )}\n      {shouldRenderEffect && (\n        <>\n          <AnimatedSticker\n            key={`${effectId}-${effectSize}`}\n            className={buildClassName(styles.effect, animationClassNames)}\n            size={effectSize}\n            tgsUrl={mediaDataEffect}\n            play={isIntersecting}\n            noLoop\n            onEnded={handleEnded}\n            forceAlways\n          />\n          {isCustom && !assignedEffectId && isIntersecting && (\n            <CustomEmojiEffect\n              reaction={reaction}\n              className={animationClassNames}\n              particleSize={Math.max(size * CUSTOM_EMOJI_EFFECT_MULTIPLIER, MIN_PARTICLE_SIZE)}\n              onEnded={handleEnded}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { containerId }) => {\n    const { genericEmojiEffects, reactions } = global;\n    const { activeReactions } = selectTabState(global);\n\n    const withEffects = selectPerformanceSettingsValue(global, 'reactionEffects');\n\n    return {\n      activeReactions: activeReactions?.[containerId],\n      availableReactions: reactions.availableReactions,\n      genericEffects: genericEmojiEffects,\n      withEffects,\n    };\n  },\n)(ReactionAnimatedEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\n\nimport CustomEmoji from '../CustomEmoji';\nimport Icon from '../icons/Icon';\n\nimport './ReactionStaticEmoji.scss';\n\nimport blankUrl from '../../../assets/blank.png';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  size?: number;\n  withIconHeart?: boolean;\n  observeIntersection?: ObserveFn;\n};\n\nconst ReactionStaticEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  className,\n  size,\n  withIconHeart,\n  observeIntersection,\n}) => {\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const staticIconId = availableReaction?.staticIcon?.id;\n  const mediaHash = staticIconId ? `document${staticIconId}` : undefined;\n  const mediaData = useMedia(mediaHash);\n\n  const transitionClassNames = useMediaTransitionDeprecated(mediaData);\n\n  const shouldApplySizeFix = reaction.type === 'emoji' && reaction.emoticon === '🦄';\n  const shouldReplaceWithHeartIcon = withIconHeart && reaction.type === 'emoji' && reaction.emoticon === '❤';\n\n  if (reaction.type === 'custom') {\n    return (\n      <CustomEmoji\n        documentId={reaction.documentId}\n        className={buildClassName('ReactionStaticEmoji', className)}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    );\n  }\n\n  if (shouldReplaceWithHeartIcon) {\n    return (\n      <Icon name=\"heart\" className=\"ReactionStaticEmoji\" style={`font-size: ${size}px; width: ${size}px`} />\n    );\n  }\n\n  return (\n    <img\n      className={buildClassName(\n        'ReactionStaticEmoji',\n        shouldApplySizeFix && 'with-unicorn-fix',\n        transitionClassNames,\n        className,\n      )}\n      style={size ? `width: ${size}px; height: ${size}px` : undefined}\n      src={mediaData || blankUrl}\n      alt={availableReaction?.title}\n      draggable={false}\n    />\n  );\n};\n\nexport default memo(ReactionStaticEmoji);\n","export const isBlockquote = (noteAnc: Node) => 'tagName' in noteAnc && noteAnc.tagName === 'BLOCKQUOTE';\n\nexport class BlockQuoteEnterHandler {\n  private wasEnter = false;\n\n  attachHandler(target: HTMLElement) {\n    target.addEventListener('beforeinput', this.evHandler.bind(this));\n  }\n\n  evHandler(e: InputEvent) {\n    if (e.inputType !== 'insertLineBreak' && e.inputType !== 'insertParagraph') {\n      this.wasEnter = false;\n      return;\n    }\n\n    this.insertEnterInsideBlockquote(e);\n\n    if (e.inputType === 'insertParagraph') {\n      const s = window.getSelection();\n\n      if (s) {\n        const r = s.getRangeAt(0);\n        let noteAnc: Node | null = r.endContainer;\n        while (noteAnc && !isBlockquote(noteAnc)) {\n          noteAnc = noteAnc.parentNode;\n        }\n\n        if (noteAnc && isBlockquote(noteAnc)) {\n          e.preventDefault();\n          document.execCommand('insertLineBreak', false);\n        }\n      }\n    }\n\n    this.wasEnter = true;\n  }\n\n  insertEnterInsideBlockquote(e: InputEvent): boolean {\n    const s = window.getSelection();\n\n    if (s && s.isCollapsed) {\n      const r = s.getRangeAt(0);\n      let noteAnc: Node | null = r.endContainer;\n\n      const remEnd = r.endContainer.textContent?.substring(r.endOffset);\n      if (this.wasEnter && (remEnd === '\\n' || remEnd === '')) {\n        let isEnd = true;\n        while (noteAnc && !isBlockquote(noteAnc)) {\n          if (noteAnc.nextSibling) {\n            if (noteAnc.nextSibling.textContent === '') {\n              noteAnc = noteAnc.nextSibling;\n              continue;\n            }\n            isEnd = false;\n            break;\n          }\n\n          noteAnc = noteAnc.parentNode;\n        }\n\n        if (isEnd && noteAnc) {\n          if (r.endContainer.textContent) {\n            r.endContainer.textContent = r.endContainer.textContent?.substring(\n              0,\n              r.endOffset,\n            );\n          }\n\n          s.removeAllRanges();\n          const nr = document.createRange();\n          nr.setStartAfter(noteAnc);\n          nr.setEndAfter(noteAnc);\n          const textNode = document.createTextNode(' ');\n          nr.insertNode(textNode);\n          nr.collapse(false);\n          s.addRange(nr);\n          e.preventDefault();\n\n          return true;\n        }\n      } else if (r.endOffset === 0) {\n        let isStart = true;\n        while (noteAnc && !isBlockquote(noteAnc)) {\n          if (noteAnc.previousSibling) {\n            isStart = false;\n            break;\n          }\n          noteAnc = noteAnc.parentNode;\n        }\n\n        if (isStart && noteAnc) {\n          s.removeAllRanges();\n          const nr = document.createRange();\n          nr.setStartBefore(noteAnc);\n          nr.setEndBefore(noteAnc);\n          const textNode = document.createTextNode(' ');\n          nr.insertNode(textNode);\n          nr.collapse(true);\n          s.addRange(nr);\n          e.preventDefault();\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport type { RichInputCtx } from './useRichEditable';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\n\ntype OwnProps = {\n  className?: string;\n  disableEdit?: boolean;\n  placeholder?: string;\n  tabIndex?: number;\n  detached?: boolean;\n  richInputCtx: RichInputCtx;\n};\n\nlet nextAttach: (() => void) | undefined;\n\nconst RichEditableAttachment: FC<OwnProps> = ({\n  richInputCtx,\n  className,\n  placeholder,\n  tabIndex,\n  disableEdit,\n  detached,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const attachmentRef = useRef<HTMLDivElement>(null);\n  const customColor = useDynamicColorListener(attachmentRef, undefined, detached);\n  const editable = richInputCtx.editable;\n\n  useEffect(() => {\n    if (!attachmentRef.current || detached) return () => {};\n\n    const attEditable = richInputCtx.editable;\n    const target = attachmentRef.current;\n\n    if (attEditable.isAttached()) {\n      nextAttach = () => {\n        attEditable.attachTo(target);\n      };\n    } else {\n      attEditable.attachTo(target);\n    }\n\n    return () => {\n      attEditable.detachFrom(target);\n      nextAttach?.();\n      nextAttach = undefined;\n    };\n  }, [attachmentRef, richInputCtx.editable, detached]);\n\n  useEffect(() => {\n    if (!attachmentRef.current || !editable.isAttached(attachmentRef.current)) return;\n\n    requestMutation(() => {\n      editable.applyRootProperties({\n        className,\n        disableEdit,\n        placeholder,\n        tabIndex,\n      });\n    });\n  }, [editable, attachmentRef, className, disableEdit, placeholder, tabIndex]);\n\n  useEffect(() => {\n    if (!attachmentRef.current || !editable.isAttached(attachmentRef.current)) return;\n\n    requestMutation(() => {\n      editable.emojiRenderer.setCustomColor(customColor ?? '');\n    });\n  }, [editable, attachmentRef, customColor]);\n\n  return <div ref={attachmentRef} />;\n};\n\nexport default memo(RichEditableAttachment);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './TextFormatter';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst TextFormatterAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const TextFormatter = useModuleLoader(Bundles.Extra, 'TextFormatter', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return TextFormatter ? <TextFormatter {...props} /> : undefined;\n};\n\nexport default TextFormatterAsync;\n","// Improvements, utils and workarounds for execCommand api\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\n\nconst EX_FIX = 'for-exec-command-fix';\n\nconst style = document.createElement('style');\ndocument.head.appendChild(style); // must append before you can access sheet property\n\nstyle.innerHTML = `\n.${EX_FIX} * {\n  display: inline  !important; // Required for insertHTML to work properly\n}\n\n.${EX_FIX} b {\n  font-weight: bold !important; // Required for \"bold\" command to unbold\n}\n`;\n\nexport function betterExecCommand(\n  input: HTMLElement | undefined,\n  range: Range | undefined,\n  command: string,\n  value?: string,\n) {\n  const inpArr = [];\n  if (input) inpArr.push(input);\n\n  requestMutation(() => {\n    if (range) {\n      window.getSelection()?.removeAllRanges();\n      window.getSelection()?.addRange(range);\n    }\n    input?.classList.add('for-exec-command-fix');\n    document.execCommand('styleWithCss', false, 'false');\n    document.execCommand(command, false, value);\n    input?.classList.remove('for-exec-command-fix');\n  });\n}\n","// Utility for cleaning html code from Google Docs.\n// Original source from DocsSoap:\n// https://www.npmjs.com/package/docs-soap\n\nconst GDOCS_ELEMENT_ID_REGEXP = /id=\"docs-internal-guid/i;\n\nconst GDOCS_STYLES = {\n  BOLD: '700',\n  ITALIC: 'italic',\n  UNDERLINE: 'underline',\n  STRIKETHROUGH: 'line-through',\n  SUPERSCRIPT: 'super',\n  SUBSCRIPT: 'sub',\n};\n\nconst ELEMENTS = {\n  ANCHOR: 'a',\n  BOLD: 'strong',\n  ITALIC: 'em',\n  UNDERLINE: 'u',\n  BLOCKQUOTE: 'blockquote',\n  STRIKETHROUGH: 'del',\n  SUPERSCRIPT: 'sup',\n  SUBSCRIPT: 'sub',\n};\n\nconst headers = [\n  'H1',\n  'H2',\n  'H3',\n  'H4',\n  'H5',\n  'H6',\n];\n\nfunction parseHtml(html: string): HTMLElement {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(html, 'text/html');\n\n  return doc.body;\n}\n\nfunction wrapNodeAnchor(node: Node, href: string): HTMLAnchorElement {\n  const anchor = document.createElement(ELEMENTS.ANCHOR) as HTMLAnchorElement;\n  anchor.href = href;\n  anchor.appendChild(node.cloneNode(true));\n\n  return anchor;\n}\n\nfunction wrapNodeInline(node: Node, style: string): Node {\n  const el = document.createElement(style);\n  el.appendChild(node.cloneNode(true));\n\n  return el;\n}\n\nfunction wrapNode(inner: HTMLElement, result: Node): Node {\n  let newNode = result.cloneNode(true);\n  if (!inner) {\n    return newNode;\n  }\n  if (inner.style && inner.style.fontWeight === GDOCS_STYLES.BOLD) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.BOLD);\n  }\n  if (inner.style && inner.style.fontStyle === GDOCS_STYLES.ITALIC) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.ITALIC);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.UNDERLINE) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.UNDERLINE);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.STRIKETHROUGH) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.STRIKETHROUGH);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUPERSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUPERSCRIPT);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUBSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUBSCRIPT);\n  }\n\n  return newNode;\n}\n\nfunction applyBlockStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = document.createTextNode('') as Node;\n  if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n    styledNode = node.childNodes[0];\n  }\n  if (node.childNodes[0] && node.childNodes[0].nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode.cloneNode(true), (node.childNodes[0] as HTMLAnchorElement).href);\n    styledNode = node.childNodes[0].childNodes[0];\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction applyInlineStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = node;\n  if (node.nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode, (node as HTMLAnchorElement).href);\n    if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n      styledNode = node.childNodes[0];\n    }\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction getCleanNode(node: Node): Node[] {\n  if (node.childNodes && (node.childNodes.length <= 1 || node.nodeName === 'OL' || node.nodeName === 'UL')) {\n    let newWrapper: Node | undefined;\n    let newNode = document.createTextNode(node.textContent || '') as Node;\n    if (node.nodeName === 'UL' || node.nodeName === 'OL' || node.nodeName === 'LI') {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = document.createDocumentFragment();\n      const items = [];\n      for (let i = 0; i < node.childNodes.length; i++) {\n        items.push(...getCleanNode(node.childNodes[i]));\n      }\n      items.map((i: Node): Node => newNode.appendChild(i));\n    } else if (headers.indexOf(node.nodeName) !== -1) {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = applyInlineStyles(node.childNodes[0]);\n    } else if (node.nodeName === 'P') {\n      newWrapper = document.createElement('p');\n      newNode = applyBlockStyles(node);\n    } else if (node.nodeName === 'BR') {\n      newNode = node;\n    } else {\n      newWrapper = document.createElement('span');\n      newNode = applyInlineStyles(node);\n    }\n    if (newWrapper) {\n      newWrapper.appendChild(newNode);\n      return [newWrapper];\n    }\n\n    return [node.cloneNode(true)];\n  }\n\n  if (node.childNodes) {\n    const nodes = [];\n    for (let i = 0; i < node.childNodes.length; i++) {\n      nodes.push(...getCleanNode(node.childNodes[i]));\n    }\n    return nodes;\n  }\n\n  return [node];\n}\n\nfunction filterNode(node: Node): boolean {\n  return node.nodeType !== 8; // Node.COMMENT_NODE = 8\n}\n\nfunction getCleanDocument(dirty: HTMLElement): HTMLElement {\n  const body = document.createElement('body');\n  const nodes = dirty.childNodes;\n  const filteredNodes = Array.from(nodes).filter(filterNode);\n  const cleanNodes = [];\n\n  for (const node of filteredNodes) {\n    cleanNodes.push(...getCleanNode(node));\n  }\n\n  for (let i = 0; i < cleanNodes.length; i++) {\n    body.appendChild(cleanNodes[i].cloneNode(true));\n  }\n\n  return body;\n}\n\nexport default function cleanDocsHtml(clipboardContent: string): string {\n  if (!clipboardContent.match(GDOCS_ELEMENT_ID_REGEXP)) {\n    return parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, '')).innerHTML;\n  }\n\n  return getCleanDocument(parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, ''))).innerHTML;\n}\n","import { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DEBUG } from '../../../../config';\nimport cleanDocsHtml from '../../../../lib/cleanDocsHtml';\nimport { ENTITY_CLASS_BY_NODE_NAME } from '../../../../util/parseHtmlAsFormattedText';\n\nconst STYLE_TAG_REGEX = /<style>(.*?)<\\/style>/gs;\n\nexport function preparePastedHtml(html: string) {\n  let fragment = document.createElement('div');\n  try {\n    html = cleanDocsHtml(html);\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n  fragment.innerHTML = html.replace(/\\u00a0/g, ' ').replace(STYLE_TAG_REGEX, ''); // Strip &nbsp and styles\n\n  const textContents = fragment.querySelectorAll<HTMLDivElement>('.text-content');\n  if (textContents.length) {\n    fragment = textContents[textContents.length - 1]; // Replace with the last copied message\n  }\n\n  Array.from(fragment.getElementsByTagName('*')).forEach((node) => {\n    if (!(node instanceof HTMLElement)) {\n      node.remove();\n      return;\n    }\n    node.removeAttribute('style');\n\n    // Fix newlines\n    if (node.tagName === 'BR') node.replaceWith('\\n');\n    if (node.tagName === 'P') node.appendChild(document.createTextNode('\\n'));\n    if (node.tagName === 'IMG' && !node.dataset.entityType) node.replaceWith(node.getAttribute('alt') || '');\n    // We do not intercept copy logic, so we remove some nodes here\n    if (node.dataset.ignoreOnPaste) node.remove();\n\n    if (ENTITY_CLASS_BY_NODE_NAME[node.tagName]) {\n      node.setAttribute('data-entity-type', ENTITY_CLASS_BY_NODE_NAME[node.tagName]);\n    }\n    // Strip non-entity tags\n    if (!node.dataset.entityType && node.textContent === node.innerText) node.replaceWith(node.textContent);\n    // Append entity parameters for parsing\n    if (node.dataset.alt) node.setAttribute('alt', node.dataset.alt);\n    switch (node.dataset.entityType) {\n      case ApiMessageEntityTypes.MentionName:\n        node.replaceWith(node.textContent || '');\n        break;\n      case ApiMessageEntityTypes.CustomEmoji:\n        node.textContent = node.dataset.alt || '';\n        break;\n    }\n  });\n\n  return fragment.innerHTML.trimEnd();\n}\n\nexport function escapeHtml(html: string) {\n  const fragment = document.createElement('div');\n  const text = document.createTextNode(html);\n  fragment.appendChild(text);\n  return fragment.innerHTML;\n}\n","import { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport safePlay from './safePlay';\n\ntype AbsoluteVideoOptions = {\n  position: { x: number; y: number };\n  noLoop?: boolean;\n  size: number;\n  style?: string;\n};\n\nexport default class AbsoluteVideo {\n  private video?: HTMLVideoElement;\n\n  private isPlaying = false;\n\n  constructor(\n    videoUrl: string,\n    private container: HTMLElement,\n    private options: AbsoluteVideoOptions,\n  ) {\n    this.video = document.createElement('video');\n    this.video.src = videoUrl;\n    this.video.disablePictureInPicture = true;\n    this.video.muted = true;\n    if (options.style) {\n      this.video.setAttribute('style', options.style);\n    }\n    this.video.style.position = 'absolute';\n    this.video.load();\n\n    if (!this.options.noLoop) {\n      this.video.loop = true;\n    }\n\n    requestMutation(() => {\n      this.container.appendChild(this.video!);\n\n      this.recalculatePositionAndSize();\n    });\n  }\n\n  public play() {\n    if (this.isPlaying || !this.video) return;\n    this.recalculatePositionAndSize();\n    if (this.video.paused) {\n      safePlay(this.video);\n    }\n    this.isPlaying = true;\n  }\n\n  public pause() {\n    if (!this.isPlaying || !this.video) return;\n    if (!this.video.paused) {\n      this.video.pause();\n    }\n    this.isPlaying = false;\n  }\n\n  public destroy() {\n    this.pause();\n    this.video?.remove();\n    this.video = undefined;\n  }\n\n  public updatePosition(position: AbsoluteVideoOptions['position']) {\n    this.options.position = position;\n    this.recalculatePositionAndSize();\n  }\n\n  private recalculatePositionAndSize() {\n    const { size, position: { x, y } } = this.options;\n    requestMeasure(() => {\n      if (!this.video) return;\n      const video = this.video;\n      const { width, height } = this.container.getBoundingClientRect();\n      requestMutation(() => {\n        video.style.left = `${Math.round(x * width)}px`;\n        video.style.top = `${Math.round(y * height)}px`;\n        video.style.width = `${size}px`;\n        video.style.height = `${size}px`;\n      });\n    });\n  }\n}\n","import { getGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { RichEditable } from './RichEditable';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { ensureRLottie } from '../../../lib/rlottie/RLottie.async';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../global/selectors';\nimport AbsoluteVideo from '../../../util/AbsoluteVideo';\nimport { getCustomEmojiMediaDataForInput } from '../../../util/emoji/customEmojiManager';\nimport { round } from '../../../util/math';\nimport { hexToRgb } from '../../../util/switchTheme';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport {\n  addColorFilter,\n  removeColorFilter,\n} from '../../../hooks/stickers/useColorFilter';\nimport { addBackgroundModeListener } from '../../../hooks/window/useBackgroundMode';\nimport { addDevicePixelRatioListener } from '../../../hooks/window/useDevicePixelRatio';\n\nconst SIZE = 1.25 * REM;\n\ntype CustomEmojiPlayer = {\n  play: () => void;\n  pause: () => void;\n  destroy: () => void;\n  updatePosition: (x: number, y: number) => void;\n};\n\nlet prefixCounter = 0;\n\nexport class EditableEmojiRender {\n  editable: RichEditable;\n\n  prefixId: string;\n\n  playersById: Map<string, CustomEmojiPlayer>;\n\n  customColor: string;\n\n  customColorFilter: string;\n\n  sharedCanvas: HTMLCanvasElement;\n\n  sharedCanvasHq: HTMLCanvasElement;\n\n  absoluteContainer: HTMLDivElement;\n\n  resizeObserver: ResizeObserver;\n\n  detachCbs: (() => void)[];\n\n  canPlayAnimatedEmojis: boolean;\n\n  constructor(editable: RichEditable) {\n    this.editable = editable;\n    this.playersById = new Map();\n    this.prefixId = `EditableEmojiRender_${prefixCounter++}_`;\n    this.customColor = '';\n    this.customColorFilter = '';\n    // const customColor = useDynamicColorListener(inputRef, !isReady);\n    // const colorFilter = useColorFilter(customColor, true);\n    // const dpr = useDevicePixelRatio();\n    // const playersById = useRef<Map<string, CustomEmojiPlayer>>(new Map());\n    this.sharedCanvas = document.createElement('canvas');\n    this.sharedCanvas.className = 'shared-canvas';\n    this.sharedCanvasHq = document.createElement('canvas');\n    this.sharedCanvasHq.className = 'shared-canvas';\n    this.absoluteContainer = document.createElement('div');\n    this.absoluteContainer.className = 'shared-canvas';\n\n    this.canPlayAnimatedEmojis = true;\n    this.detachCbs = [];\n\n    let throttleId: ReturnType<typeof setTimeout> | undefined;\n    this.resizeObserver = new ResizeObserver(() => {\n      if (throttleId !== undefined) return;\n      throttleId = setTimeout(() => {\n        this.synchronizeElements();\n      }, 300);\n    });\n  }\n\n  setCustomColor(newColor: string) {\n    if (this.customColor === newColor) return;\n\n    if (this.customColor) removeColorFilter(this.customColor);\n    this.customColor = newColor;\n\n    if (!newColor) return;\n    this.customColorFilter = addColorFilter(newColor);\n    this.synchronizeElements();\n    document.documentElement.style.setProperty(\n      '--input-custom-emoji-filter',\n      this.customColorFilter || 'none',\n    );\n  }\n\n  private clearPlayers(ids: string[]) {\n    ids.forEach((id) => {\n      const player = this.playersById.get(id);\n      if (player) {\n        player.destroy();\n        this.playersById.delete(id);\n      }\n    });\n  }\n\n  synchronizeElements() {\n    const global = getGlobal();\n    const playerIdsToClear = new Set(this.playersById.keys());\n    const customEmojis = Array.from(\n      this.editable.root.querySelectorAll<HTMLElement>('.custom-emoji'),\n    );\n\n    customEmojis.forEach((element) => {\n      if (!element.dataset.uniqueId) {\n        return;\n      }\n      const playerId = `${this.prefixId}${element.dataset.uniqueId}${\n        this.customColor || ''\n      }`;\n      const documentId = element.dataset.documentId!;\n\n      playerIdsToClear.delete(playerId);\n\n      const mediaUrl = getCustomEmojiMediaDataForInput(documentId);\n      if (!mediaUrl) {\n        return;\n      }\n\n      const canvasBounds = this.sharedCanvas.getBoundingClientRect();\n      const elementBounds = element.getBoundingClientRect();\n      const x = round(\n        (elementBounds.left - canvasBounds.left) / canvasBounds.width,\n        4,\n      );\n      const y = round(\n        (elementBounds.top - canvasBounds.top) / canvasBounds.height,\n        4,\n      );\n\n      if (this.playersById.has(playerId)) {\n        const player = this.playersById.get(playerId)!;\n        player.updatePosition(x, y);\n        return;\n      }\n\n      const customEmoji = global.customEmojis.byId[documentId];\n      if (!customEmoji) {\n        return;\n      }\n      const isHq = customEmoji?.stickerSetInfo\n        && selectIsAlwaysHighPriorityEmoji(global, customEmoji.stickerSetInfo);\n      const renderId = [\n        this.prefixId,\n        documentId,\n        this.customColor,\n        window.devicePixelRatio,\n      ]\n        .filter(Boolean)\n        .join('_');\n\n      createPlayer({\n        customEmoji,\n        sharedCanvas: this.sharedCanvas,\n        sharedCanvasHq: this.sharedCanvasHq,\n        absoluteContainer: this.absoluteContainer,\n        renderId,\n        viewId: playerId,\n        mediaUrl,\n        isHq,\n        position: { x, y },\n        textColor: this.customColor,\n        colorFilter: this.customColorFilter,\n      }).then((animation) => {\n        if (this.canPlayAnimatedEmojis) {\n          animation.play();\n        }\n\n        this.playersById.set(playerId, animation);\n      });\n    });\n\n    this.clearPlayers(Array.from(playerIdsToClear));\n  }\n\n  attachTo(container: HTMLElement) {\n    container.appendChild(this.sharedCanvas);\n    container.appendChild(this.sharedCanvasHq);\n    container.appendChild(this.absoluteContainer);\n\n    this.resizeObserver.observe(this.sharedCanvas);\n    this.detachCbs.push(() => this.resizeObserver.unobserve(this.sharedCanvas));\n\n    const removeDprListener = addDevicePixelRatioListener(() => {\n      this.synchronizeElements();\n    });\n    this.detachCbs.push(removeDprListener);\n\n    const removeBgListener = addBackgroundModeListener(\n      () => this.freezeAnimation(),\n      () => requestMutation(() => this.unfreezeAnimation()),\n    );\n    this.detachCbs.push(removeBgListener);\n\n    this.synchronizeElements();\n  }\n\n  detachFrom(container: HTMLElement) {\n    while (this.detachCbs.length) {\n      const cb = this.detachCbs.pop();\n      if (cb) cb();\n    }\n\n    this.clearPlayers(Array.from(this.playersById.keys()));\n    this.resizeObserver.unobserve(this.sharedCanvas);\n    container.removeChild(this.sharedCanvas);\n    container.removeChild(this.sharedCanvasHq);\n    container.removeChild(this.absoluteContainer);\n  }\n\n  private freezeAnimation() {\n    this.playersById.forEach((player) => {\n      player.pause();\n    });\n  }\n\n  private unfreezeAnimation() {\n    if (!this.canPlayAnimatedEmojis) {\n      return;\n    }\n\n    this.playersById.forEach((player) => {\n      player.play();\n    });\n  }\n}\n\nasync function createPlayer({\n  customEmoji,\n  sharedCanvas,\n  sharedCanvasHq,\n  absoluteContainer,\n  renderId,\n  viewId,\n  mediaUrl,\n  position,\n  isHq,\n  textColor,\n  colorFilter,\n}: {\n  customEmoji: ApiSticker;\n  sharedCanvas: HTMLCanvasElement;\n  sharedCanvasHq: HTMLCanvasElement;\n  absoluteContainer: HTMLElement;\n  renderId: string;\n  viewId: string;\n  mediaUrl: string;\n  position: { x: number; y: number };\n  isHq?: boolean;\n  textColor?: string;\n  colorFilter?: string;\n}): Promise<CustomEmojiPlayer> {\n  if (customEmoji.isLottie) {\n    const color = customEmoji.shouldUseTextColor && textColor\n      ? hexToRgb(textColor)\n      : undefined;\n    const RLottie = await ensureRLottie();\n    const lottie = RLottie.init(\n      mediaUrl,\n      isHq ? sharedCanvasHq : sharedCanvas,\n      renderId,\n      {\n        size: SIZE,\n        coords: position,\n        isLowPriority: !isHq,\n      },\n      viewId,\n      color ? [color.r, color.g, color.b] : undefined,\n    );\n\n    return {\n      play: () => lottie.play(),\n      pause: () => lottie.pause(),\n      destroy: () => lottie.removeView(viewId),\n      updatePosition: (x: number, y: number) => {\n        return lottie.setSharedCanvasCoords(viewId, { x, y });\n      },\n    };\n  }\n\n  if (customEmoji.isVideo) {\n    const style = customEmoji.shouldUseTextColor && colorFilter\n      ? `filter: ${colorFilter};`\n      : undefined;\n    const absoluteVideo = new AbsoluteVideo(mediaUrl, absoluteContainer, {\n      size: SIZE,\n      position,\n      style,\n    });\n    return {\n      play: () => absoluteVideo.play(),\n      pause: () => absoluteVideo.pause(),\n      destroy: () => absoluteVideo.destroy(),\n      updatePosition: (x: number, y: number) => absoluteVideo.updatePosition({ x, y }),\n    };\n  }\n\n  throw new Error('Unsupported custom emoji type');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"inputPreview\":\"yanzeI95\",\"previewHidden\":\"zyT59U5_\",\"attachTarget\":\"IkpAxpaa\",\"editRoot\":\"i7nYiF_y\"};","import React from '../../../lib/teact/teact';\nimport TeactDOM from '../../../lib/teact/teact-dom';\n\nimport type { Signal } from '../../../util/signals';\nimport type { RichEditable } from './RichEditable';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { createSignal } from '../../../util/signals';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport styles from './RichEditable.module.scss';\n\nexport class Previewer {\n  public root: HTMLElement;\n\n  private editable: RichEditable;\n\n  private hiddenOnPreview: HTMLElement[];\n\n  public isPreviewing: Signal<boolean>;\n\n  private setIsPreviewing: (isPreviewing: boolean) => void;\n\n  private delayedTimeout = -1;\n\n  constructor(edtiable: RichEditable) {\n    this.editable = edtiable;\n    this.root = document.createElement('div');\n    this.root.classList.add(styles.inputPreview);\n    this.root.classList.add(styles.previewHidden);\n    // While not really a form control, it needs same styles\n    // this.root.classList.add('form-control');\n\n    this.hiddenOnPreview = [\n      this.editable.root,\n      this.editable.emojiRenderer.sharedCanvas,\n      this.editable.emojiRenderer.sharedCanvasHq,\n      this.editable.emojiRenderer.absoluteContainer,\n    ];\n    [this.isPreviewing, this.setIsPreviewing] = createSignal(false);\n\n    this.editable.root.addEventListener('focus', () => {\n      this.endPreview();\n    });\n\n    this.editable.root.addEventListener('blur', () => {\n      this.delayedPreview(20);\n    });\n  }\n\n  addHiddenOnPreview(...el: HTMLElement[]) {\n    this.hiddenOnPreview.push(...el);\n  }\n\n  refreshPreview() {\n    if (!this.isPreviewing()) return;\n\n    const text = this.editable.getFormattedText();\n    TeactDOM.render(<>{renderTextWithEntities({ ...text })}</>, this.root);\n  }\n\n  startPreview() {\n    window.clearTimeout(this.delayedTimeout);\n    this.delayedTimeout = -1;\n\n    if (this.isPreviewing()) return;\n    this.setIsPreviewing(true);\n    this.refreshPreview();\n\n    requestMutation(() => {\n      for (const el of this.hiddenOnPreview) {\n        el.classList.add(styles.previewHidden);\n      }\n      this.root.classList.remove(styles.previewHidden);\n    });\n  }\n\n  delayedPreview(time = 20) {\n    if (this.delayedTimeout !== -1) return;\n\n    this.delayedTimeout = window.setTimeout(() => {\n      this.startPreview();\n    }, time);\n  }\n\n  endPreview() {\n    window.clearTimeout(this.delayedTimeout);\n    this.delayedTimeout = -1;\n\n    if (!this.isPreviewing()) return;\n\n    this.setIsPreviewing(false);\n    requestMutation(() => {\n      for (const el of this.hiddenOnPreview) {\n        el.classList.remove(styles.previewHidden);\n      }\n      this.root.classList.remove(styles.previewHidden);\n      TeactDOM.render(undefined, this.root);\n    });\n  }\n}\n","import type { ApiFormattedText } from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\nimport type { RichInputKeyboardListener } from './Keyboard';\n\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { betterExecCommand } from '../../../util/execCommand';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport parseHtmlAsFormattedText from '../../../util/parseHtmlAsFormattedText';\nimport { createSignal } from '../../../util/signals';\nimport { preparePastedHtml } from '../../middle/composer/helpers/cleanHtml';\nimport { getTextWithEntitiesAsHtml } from '../helpers/renderTextWithEntities';\nimport { INPUT_CUSTOM_EMOJI_SELECTOR } from './customEmoji';\n\nimport { BlockQuoteEnterHandler } from './BlockquoteEnter';\nimport { EditableEmojiRender } from './EditableEmojiRender';\nimport { Previewer } from './Previewer';\n\nimport styles from './RichEditable.module.scss';\n\nconst SAFARI_BR = '<br>';\nconst WHITESPACE_RE = /\\s/;\nexport const IMG_ALT_MATCHABLE_MARKER = 'IMG_ALT__';\nconst fragmentEl = document.createElement('div');\n\nexport type SelectionState = {\n  collapsed: boolean;\n  range: Range;\n};\n\nexport type PasteCtx = {\n  editable: RichEditable;\n  text: ApiFormattedText;\n  html: string;\n  items: DataTransferItemList;\n};\n\nexport class RichEditable {\n  public root: HTMLDivElement;\n\n  public htmlS: Signal<string>;\n\n  private htmlSet: (html: string) => void;\n\n  public emptyS: Signal<boolean>;\n\n  private emptySet: (empty: boolean) => void;\n\n  public matchableS: Signal<string | undefined>;\n\n  private matchableSet: (matchable: string | undefined) => void;\n\n  public selectionS: Signal<SelectionState | undefined>;\n\n  private selectionSet: (selection: SelectionState | undefined) => void;\n\n  private attached: HTMLElement | undefined;\n\n  private disableEdit: boolean;\n\n  private keyboardHandlers: RichInputKeyboardListener[];\n\n  private selectionListener: () => void;\n\n  private pasteHandlers: ((p: PasteCtx) => void)[];\n\n  private pasteListener: (e: ClipboardEvent) => void;\n\n  public emojiRenderer: EditableEmojiRender;\n\n  private blockquoteEnter: BlockQuoteEnterHandler;\n\n  public preview: Previewer;\n\n  constructor() {\n    this.root = document.createElement('div');\n    this.root.classList.add(styles.editRoot);\n    this.attached = undefined;\n\n    this.disableEdit = false;\n    this.updateRootProps();\n\n    [this.htmlS, this.htmlSet] = createSignal('');\n    [this.emptyS, this.emptySet] = createSignal(true);\n    [this.matchableS, this.matchableSet] = createSignal<string | undefined>(undefined);\n    [this.selectionS, this.selectionSet] = createSignal<SelectionState | undefined>(\n      undefined,\n    );\n\n    this.keyboardHandlers = [];\n    this.pasteHandlers = [];\n\n    this.selectionListener = () => this.handleSelectionUpdate();\n    this.pasteListener = (e) => this.handlePaste(e);\n\n    this.root.addEventListener('click', () => {\n      this.focus();\n    });\n\n    this.root.addEventListener('input', () => {\n      this.handleContentUpdate();\n    });\n\n    this.root.addEventListener('keydown', (e) => {\n      for (const handler of this.keyboardHandlers) {\n        if (handler.onKeydown(e)) break;\n      }\n      this.handleSelectionUpdate();\n    });\n\n    this.emojiRenderer = new EditableEmojiRender(this);\n    this.blockquoteEnter = new BlockQuoteEnterHandler();\n    this.blockquoteEnter.attachHandler(this.root);\n    this.preview = new Previewer(this);\n  }\n\n  private updateRootProps() {\n    if (this.disableEdit) {\n      this.root.contentEditable = 'false';\n    } else {\n      this.root.contentEditable = 'true';\n    }\n    this.root.role = 'textbox';\n    this.root.dir = 'auto';\n  }\n\n  public attachTo(el: HTMLElement) {\n    if (this.attached) {\n      throw new Error('Tried to attach when already attached');\n    }\n\n    this.attached = el;\n    el.appendChild(this.root);\n\n    document.addEventListener('selectionchange', this.selectionListener);\n    document.addEventListener('paste', this.pasteListener);\n\n    this.emojiRenderer.attachTo(el);\n\n    el.appendChild(this.preview.root);\n    el.classList.add(styles.attachTarget);\n    this.handleContentUpdate();\n  }\n\n  public detachFrom(el: HTMLElement) {\n    if (!this.attached) {\n      // eslint-disable-next-line no-console\n      console.warn('Tried to detach when not attached');\n      return;\n    }\n\n    this.emojiRenderer.detachFrom(el);\n\n    document.removeEventListener('selectionchange', this.selectionListener);\n    document.removeEventListener('paste', this.pasteListener);\n\n    el.removeChild(this.root);\n    this.attached = undefined;\n  }\n\n  public isAttached(el?: HTMLElement) {\n    if (el) return this.attached === el;\n    return this.attached !== undefined;\n  }\n\n  public applyRootProperties(props: {\n    className?: string;\n    disableEdit?: boolean;\n    placeholder?: string;\n    tabIndex?: number;\n  }) {\n    if (props.className) {\n      this.root.className = props.className;\n      this.root.classList.add(styles.editRoot);\n    }\n    if (props.placeholder) {\n      this.root.setAttribute('aria-label', props.placeholder);\n    }\n    if (props.tabIndex !== undefined) {\n      this.root.tabIndex = props.tabIndex;\n    }\n    if (props.disableEdit !== undefined) {\n      this.disableEdit = props.disableEdit;\n    }\n    this.updateRootProps();\n  }\n\n  public focus(force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n    focusEditableElement(this.root, force, forcePlaceCaretAtEnd);\n  }\n\n  public blur() {\n    this.root.blur();\n  }\n\n  private isRangeInside(r: Range) {\n    let parentNode: HTMLElement | undefined = r.commonAncestorContainer as HTMLElement;\n    let iterations = 1;\n    while (parentNode && parentNode !== this.root && iterations < 10) {\n      parentNode = parentNode.parentElement ?? undefined;\n      iterations++;\n    }\n\n    if (parentNode !== this.root) {\n      return false;\n    }\n    return true;\n  }\n\n  private ensureSelectionInside() {\n    const s = window.getSelection();\n    if (!s) return;\n\n    if (s.rangeCount > 0) {\n      const r = s.getRangeAt(0);\n      if (this.isRangeInside(r)) return;\n    }\n\n    const nr = document.createRange();\n    nr.selectNodeContents(this.root);\n    nr.collapse(false);\n    s.removeAllRanges();\n    s.addRange(nr);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  private calculateMatchable(s: Selection, r: Range): string | undefined {\n    if (!s.isCollapsed) return undefined;\n\n    // TODO: Check not inside code block\n\n    let curNode = r.endContainer;\n    let endPos = r.endOffset;\n    let startPos = r.endOffset;\n    if (\n      curNode.nodeType !== document.TEXT_NODE\n      && curNode.childNodes[endPos - 1]?.nodeType === document.TEXT_NODE\n    ) {\n      curNode = curNode.childNodes[endPos - 1];\n      endPos = curNode.textContent?.length || 0;\n      startPos = endPos;\n    }\n\n    if (curNode.nodeType !== document.TEXT_NODE) {\n      if (curNode.nodeType === document.ELEMENT_NODE) {\n        const curEl = curNode as HTMLElement;\n        if (curEl.tagName === 'IMG') {\n          return `IMG_ALT__${curEl.getAttribute('alt')}`;\n        }\n      }\n      return undefined;\n    } else {\n      startPos--;\n      endPos--;\n    }\n\n    const str = curNode.textContent;\n    if (!str) return undefined;\n\n    while (startPos > 0 && !WHITESPACE_RE.test(str[startPos])) {\n      startPos -= 1;\n    }\n\n    const ra = str.slice(startPos, endPos + 1);\n    return ra;\n  }\n\n  private handleSelectionUpdate() {\n    const s = window.getSelection();\n    const notSelected = !s || s.rangeCount === 0;\n    const r = notSelected ? undefined : s?.getRangeAt(0);\n\n    if (notSelected || !r || !this.isRangeInside(r)) {\n      this.matchableSet(undefined);\n      this.selectionSet(undefined);\n      return;\n    }\n\n    this.matchableSet(this.calculateMatchable(s, r));\n    this.selectionSet({\n      collapsed: s.isCollapsed,\n      range: r,\n    });\n  }\n\n  private handleContentUpdate() {\n    if (!this.attached) return;\n    const wasEmpty = this.emptyS();\n\n    this.htmlSet(this.root.innerHTML);\n    this.emptySet(\n      this.root.innerHTML === '' || this.root.innerHTML === SAFARI_BR,\n    );\n\n    this.handleSelectionUpdate();\n    this.preview.refreshPreview();\n    if (!wasEmpty && this.emptyS() && this.selectionS()?.collapsed) {\n      betterExecCommand(this.root, this.selectionS()?.range, 'removeFormat');\n    }\n\n    requestMeasure(() => {\n      this.emojiRenderer.synchronizeElements();\n    });\n  }\n\n  public clearInput() {\n    // TODO: Clear styling\n    this.root.innerHTML = '';\n    this.handleContentUpdate();\n  }\n\n  public setFormattedText(text: ApiFormattedText | undefined): string {\n    if (!text) {\n      this.clearInput();\n      return '';\n    }\n\n    const html = getTextWithEntitiesAsHtml(text);\n    this.root.innerHTML = html;\n    this.handleContentUpdate();\n\n    const s = window.getSelection();\n    if (s && this.root.lastChild) {\n      const r = document.createRange();\n      r.setEndAfter(this.root.lastChild);\n      r.setStartAfter(this.root.lastChild);\n      s.removeAllRanges();\n      s.addRange(r);\n    }\n    return html;\n  }\n\n  public getFormattedText(formatMarkdown: boolean = true): ApiFormattedText {\n    return parseHtmlAsFormattedText(this.htmlS(), false, !formatMarkdown);\n  }\n\n  public addKeyboardHandler(handler: RichInputKeyboardListener) {\n    this.keyboardHandlers.push(handler);\n    this.keyboardHandlers = this.keyboardHandlers.sort(\n      (a, b) => b.priority - a.priority,\n    );\n    return () => this.keyboardHandlers.filter((h) => h !== handler);\n  }\n\n  public addPasteHandler(handler: (p: PasteCtx) => void) {\n    this.pasteHandlers.push(handler);\n    return () => this.pasteHandlers.filter((h) => h !== handler);\n  }\n\n  public execCommand(cmd: string, value?: string) {\n    this.ensureSelectionInside();\n    betterExecCommand(this.root, this.selectionS()?.range ?? undefined, cmd, value);\n    this.handleContentUpdate();\n  }\n\n  public insertMatchableHtml(html: string, matchLimit: (c: string) => boolean) {\n    const s = window.getSelection();\n    if (!s || !s.rangeCount) return;\n\n    const r = s.getRangeAt(0);\n\n    let curNode = r.endContainer;\n    let endPos = r.endOffset;\n    let startPos = r.endOffset;\n\n    if (\n      curNode.nodeType !== document.TEXT_NODE\n      && curNode.childNodes[endPos - 1]?.nodeType === document.TEXT_NODE\n    ) {\n      curNode = curNode.childNodes[endPos - 1];\n      endPos = curNode.textContent?.length || 0;\n      startPos = endPos;\n    }\n\n    if (r.startContainer.nodeType === document.TEXT_NODE) {\n      const str = curNode.textContent;\n      if (!str) return;\n\n      while (startPos > 0 && !matchLimit(str[startPos])) {\n        startPos--;\n      }\n    } else if (r.startContainer.nodeType === document.ELEMENT_NODE) {\n      if (startPos > 0) startPos--;\n    }\n\n    r.setStart(curNode, startPos);\n    r.setEnd(curNode, endPos);\n    s.removeAllRanges();\n    s.addRange(r);\n    this.execCommand('insertHTML', html);\n  }\n\n  public removeLastSymbol() {\n    this.execCommand('delete');\n  }\n\n  public insertFormattedText(text: ApiFormattedText) {\n    const html = getTextWithEntitiesAsHtml(text);\n    this.execCommand('insertHTML', html);\n  }\n\n  private handlePaste(e: ClipboardEvent) {\n    if (!e.clipboardData) {\n      return;\n    }\n\n    let curNode: HTMLElement | undefined = e.target as HTMLElement;\n    while (curNode && curNode !== this.root) {\n      curNode = curNode.parentElement ?? undefined;\n    }\n    if (curNode !== this.root) {\n      return;\n    }\n\n    e.preventDefault();\n\n    if (document.activeElement !== this.root) {\n      return;\n    }\n\n    const pastedText = e.clipboardData.getData('text');\n    const html = e.clipboardData.getData('text/html');\n\n    const pasteCtx: PasteCtx = {\n      editable: this,\n      text: { text: pastedText },\n      html,\n      items: e.clipboardData.items,\n    };\n    if (html) {\n      pasteCtx.text = parseHtmlAsFormattedText(preparePastedHtml(html), false, true);\n      // TODO: This is needed to handle paste from vscode, but damn is this stupid\n      if (!pasteCtx.text.entities?.length) {\n        pasteCtx.text = { text: pastedText };\n      }\n    }\n\n    for (const pasteHandler of this.pasteHandlers) {\n      pasteHandler(pasteCtx);\n    }\n\n    this.insertFormattedText(pasteCtx.text);\n  }\n\n  public setSelRange(sel: Range) {\n    const s = window.getSelection();\n    if (s) {\n      s.removeAllRanges();\n      s.addRange(sel);\n      this.handleSelectionUpdate();\n    }\n  }\n\n  public getSelectedHtml(opts: { shouldDropCustomEmoji?: boolean; shouldDropQuotes?: boolean } = {}) {\n    const sel = this.selectionS();\n    if (!sel) {\n      return undefined;\n    }\n\n    const { shouldDropCustomEmoji, shouldDropQuotes } = {\n      ...opts,\n      shouldDropCustomEmoji: false,\n      shouldDropQuotes: true,\n    };\n\n    const r = sel.range.cloneRange();\n    while (r.commonAncestorContainer !== this.root) {\n      const nr = document.createRange();\n      nr.selectNodeContents(r.commonAncestorContainer);\n      if (nr.compareBoundaryPoints(Range.START_TO_START, r) !== 0) break;\n      if (nr.compareBoundaryPoints(Range.END_TO_END, r) !== 0) break;\n      r.selectNode(r.commonAncestorContainer);\n    }\n    fragmentEl.replaceChildren(r.cloneContents());\n\n    if (shouldDropCustomEmoji) {\n      fragmentEl.querySelectorAll(INPUT_CUSTOM_EMOJI_SELECTOR).forEach((el) => {\n        el.replaceWith(el.getAttribute('alt')!);\n      });\n    }\n\n    if (shouldDropQuotes) {\n      let clearBlockQuote: HTMLElement | null = fragmentEl.querySelector('blockquote');\n      while (clearBlockQuote) {\n        clearBlockQuote.replaceWith(...clearBlockQuote.childNodes);\n        clearBlockQuote = fragmentEl.querySelector('blockquote');\n      }\n    }\n\n    return fragmentEl.innerHTML;\n  }\n}\n","import type { RefObject } from '../../../lib/teact/teact';\nimport {\n  useEffect,\n  useRef,\n} from '../../../lib/teact/teact';\n\nimport type { Signal } from '../../../util/signals';\nimport type { RichInputKeyboardListener } from './Keyboard';\nimport type { PasteCtx } from './RichEditable';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport { RichEditable } from './RichEditable';\n\nexport type RichInputCtx = {\n  editable: RichEditable;\n  getHtml: Signal<string>;\n};\n\nexport function useRichEditable(): RichInputCtx & { ctx: RichInputCtx } {\n  const richEditable: RefObject<RichEditable | undefined> = useRef(undefined);\n  if (!richEditable.current) {\n    richEditable.current = new RichEditable();\n  }\n\n  const ctx: RichInputCtx = {\n    getHtml: richEditable.current.htmlS,\n    editable: richEditable.current,\n  };\n\n  return { ...ctx, ctx };\n}\n\nexport function useRichEditableKeyboardListener(\n  richInputCtx: RichInputCtx,\n  handler: RichInputKeyboardListener,\n  enable = true,\n) {\n  const keydownCallback = useLastCallback(handler.onKeydown);\n  const { priority } = handler;\n\n  useEffect(() => {\n    if (!enable) return () => {};\n\n    return richInputCtx.editable.addKeyboardHandler({\n      priority,\n      onKeydown: keydownCallback,\n    });\n  }, [richInputCtx.editable, keydownCallback, priority, enable]);\n}\n\nexport function useRichEditablePasteHandler(\n  richInputCtx: RichInputCtx,\n  handler: (p: PasteCtx) => void,\n  enable = true,\n) {\n  const keydownCallback = useLastCallback(handler);\n\n  useEffect(() => {\n    if (!enable) return () => {};\n\n    return richInputCtx.editable.addPasteHandler(keydownCallback);\n  }, [richInputCtx.editable, keydownCallback, enable]);\n}\n","import type { ApiFormattedText } from '../../../../api/types';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\n\nconst div = document.createElement('div');\nconst ALLOWED_QUOTE_ENTITIES = new Set([\n  ApiMessageEntityTypes.Bold,\n  ApiMessageEntityTypes.Italic,\n  ApiMessageEntityTypes.Underline,\n  ApiMessageEntityTypes.Strike,\n  ApiMessageEntityTypes.Spoiler,\n  ApiMessageEntityTypes.CustomEmoji,\n]);\n\nexport function getSelectionAsFormattedText(range: Range) {\n  const html = getSelectionAsHtml(range);\n  const formattedText = parseHtmlAsFormattedText(html, false, true);\n\n  return stripEntitiesForQuote(formattedText);\n}\n\nfunction getSelectionAsHtml(range: Range) {\n  const clonedSelection = range.cloneContents();\n  div.appendChild(clonedSelection);\n\n  const html = wrapHtmlWithMarkupTags(range, div.innerHTML);\n  div.innerHTML = '';\n\n  return html\n    .replace(/<br\\s*\\/?>/gi, '\\n')\n    .replace(/&nbsp;/gi, ' ') // Convert nbsp's to spaces\n    .replace(/\\u00a0/gi, ' ');\n}\n\nfunction stripEntitiesForQuote(text: ApiFormattedText): ApiFormattedText {\n  if (!text.entities) return text;\n\n  const entities = text.entities.filter((entity) => ALLOWED_QUOTE_ENTITIES.has(entity.type as ApiMessageEntityTypes));\n  return { ...text, entities: entities.length ? entities : undefined };\n}\n\nfunction wrapHtmlWithMarkupTags(range: Range, html: string) {\n  const container = range.commonAncestorContainer;\n  if (container.nodeType === Node.ELEMENT_NODE && (container as Element).classList.contains('text-content')) {\n    return html;\n  }\n  let currentElement = range.commonAncestorContainer.parentElement;\n  while (currentElement && !currentElement.classList.contains('text-content')) {\n    const tag = currentElement.tagName.toLowerCase();\n    const entityType = currentElement.dataset.entityType;\n    html = `<${tag} ${entityType ? `data-entity-type=\"${entityType}\"` : ''}>${html}</${tag}>`;\n    currentElement = currentElement.parentElement;\n  }\n\n  return html;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './PinMessageModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst PinMessageModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PinMessageModal = useModuleLoader(Bundles.Extra, 'PinMessageModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return PinMessageModal ? <PinMessageModal {...props} /> : undefined;\n};\n\nexport default PinMessageModalAsync;\n","import type { ApiMessage, StatefulMediaContent } from '../../../../api/types';\nimport type { IconName } from '../../../../types/icons';\nimport { ApiMediaFormat } from '../../../../api/types';\n\nimport {\n  getMessageContact,\n  getMessageHtmlId,\n  getMessagePhoto,\n  getMessageText,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n  getPhotoMediaHash,\n  hasMediaLocalBlobUrl,\n} from '../../../../global/helpers';\nimport { getMessageTextWithSpoilers } from '../../../../global/helpers/messageSummary';\nimport { IS_SAFARI } from '../../../../util/browser/windowEnvironment';\nimport {\n  CLIPBOARD_ITEM_SUPPORTED,\n  copyHtmlToClipboard,\n  copyImageToClipboard,\n  copyTextToClipboard,\n} from '../../../../util/clipboard';\nimport getMessageIdsForSelectedText from '../../../../util/getMessageIdsForSelectedText';\nimport * as mediaLoader from '../../../../util/mediaLoader';\nimport { renderMessageText } from '../../../common/helpers/renderMessageText';\n\ntype ICopyOptions = {\n  label: string;\n  icon: IconName;\n  handler: () => void;\n}[];\n\nexport function getMessageCopyOptions(\n  message: ApiMessage,\n  statefulContent: StatefulMediaContent | undefined,\n  href?: string,\n  canCopy?: boolean,\n  afterEffect?: () => void,\n  onCopyLink?: () => void,\n  onCopyMessages?: (messageIds: number[]) => void,\n  onCopyNumber?: () => void,\n): ICopyOptions {\n  const options: ICopyOptions = [];\n  const text = getMessageText(message);\n  const photo = getMessagePhoto(message)\n    || (!getMessageWebPageVideo(message) ? getMessageWebPagePhoto(message) : undefined);\n  const contact = getMessageContact(message);\n  const mediaHash = photo ? getPhotoMediaHash(photo, 'full') : undefined;\n  const canImageBeCopied = canCopy && photo && (mediaHash || hasMediaLocalBlobUrl(photo))\n    && CLIPBOARD_ITEM_SUPPORTED && !IS_SAFARI;\n  const selection = window.getSelection();\n\n  if (canImageBeCopied) {\n    options.push({\n      label: 'lng_context_copy_image',\n      icon: 'copy-media',\n      handler: () => {\n        Promise.resolve(mediaHash ? mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl) : photo!.blobUrl)\n          .then(copyImageToClipboard);\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  if (canCopy && href) {\n    options.push({\n      label: 'lng_context_copy_link',\n      icon: 'copy',\n      handler: () => {\n        copyTextToClipboard(href);\n\n        afterEffect?.();\n      },\n    });\n  } else if (canCopy && text) {\n    // Detect if the user has selection in the current message\n    const hasSelection = Boolean((\n      selection?.anchorNode?.parentNode\n      && (selection.anchorNode.parentNode as HTMLElement).closest('.Message .content-inner')\n      && selection.toString().replace(/(?:\\r\\n|\\r|\\n)/g, '') !== ''\n      && checkMessageHasSelection(message)\n    ));\n\n    options.push({\n      label: getCopyLabel(hasSelection),\n      icon: 'copy',\n      handler: () => {\n        const messageIds = getMessageIdsForSelectedText();\n        if (messageIds?.length && onCopyMessages) {\n          onCopyMessages(messageIds);\n        } else if (hasSelection) {\n          document.execCommand('copy');\n        } else {\n          const clipboardText = renderMessageText(\n            { message, shouldRenderAsHtml: true },\n          );\n          if (clipboardText) {\n            copyHtmlToClipboard(\n              clipboardText.join(''),\n              getMessageTextWithSpoilers(message, statefulContent)!,\n            );\n          }\n        }\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  if (onCopyLink) {\n    options.push({\n      label: 'lng_context_copy_message_link',\n      icon: 'link',\n      handler: onCopyLink,\n    });\n  }\n\n  if (contact && onCopyNumber) {\n    options.push({\n      label: 'lng_profile_copy_phone',\n      icon: 'copy',\n      handler: () => {\n        onCopyNumber();\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  return options;\n}\nfunction checkMessageHasSelection(message: ApiMessage): boolean {\n  const selection = window.getSelection();\n  const selectionParentNode = (selection?.anchorNode?.parentNode as HTMLElement);\n  const selectedMessageElement = selectionParentNode?.closest<HTMLDivElement>('.Message.message-list-item');\n  return getMessageHtmlId(message.id) === selectedMessageElement?.id;\n}\nfunction getCopyLabel(hasSelection: boolean): string {\n  if (hasSelection) {\n    return 'lng_context_copy_selected';\n  }\n  return 'lng_context_copy_text';\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"C3LVl_JT\",\"get\":\"bmxij_dk\",\"skeleton\":\"cd1ZZeSy\",\"transition\":\"mg4sBQ9n\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { formatDateAtTime } from '../../../util/dates/dateFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport MenuItem from '../../ui/MenuItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport styles from './TimeMenuItem.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n};\n\nfunction LastEditTimeMenuItem({\n  message,\n}: OwnProps) {\n  const lang = useOldLang();\n  const { editDate } = message;\n  const shouldRenderSkeleton = !editDate;\n\n  return (\n    <MenuItem icon=\"clock-edit\" className={styles.item}>\n      {shouldRenderSkeleton ? <Skeleton className={styles.skeleton} /> : Boolean(editDate)\n        && lang('Chat.PrivateMessageEditTimestamp.Date', formatDateAtTime(lang, editDate * 1000))}\n    </MenuItem>\n  );\n}\n\nexport default memo(LastEditTimeMenuItem);\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { formatDateAtTime } from '../../../util/dates/dateFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport MenuItem from '../../ui/MenuItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport Transition from '../../ui/Transition';\n\nimport styles from './TimeMenuItem.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  shouldRenderShowWhen?: boolean;\n  canLoadReadDate?: boolean;\n  closeContextMenu: NoneToVoidFunction;\n};\n\nfunction ReadTimeMenuItem({\n  message, shouldRenderShowWhen, canLoadReadDate, closeContextMenu,\n}: OwnProps) {\n  const { openPrivacySettingsNoticeModal } = getActions();\n  const lang = useOldLang();\n  const { readDate } = message;\n  const shouldRenderSkeleton = canLoadReadDate && !readDate && !shouldRenderShowWhen;\n\n  const handleOpenModal = () => {\n    closeContextMenu();\n    openPrivacySettingsNoticeModal({ chatId: message.chatId, isReadDate: true });\n  };\n\n  return (\n    <MenuItem icon=\"message-read\" className={styles.item}>\n      <Transition name=\"fade\" activeKey={shouldRenderSkeleton ? 1 : 2} className={styles.transition}>\n        {shouldRenderSkeleton ? <Skeleton className={styles.skeleton} /> : (\n          <>\n            {Boolean(readDate) && lang('PmReadAt', formatDateAtTime(lang, readDate * 1000))}\n            {!readDate && shouldRenderShowWhen && (\n              <div>\n                {lang('PmRead')}\n                <span className={styles.get} onClick={handleOpenModal}>\n                  {lang('PmReadShowWhen')}\n                </span>\n              </div>\n            )}\n          </>\n        )}\n      </Transition>\n    </MenuItem>\n  );\n}\n\nexport default memo(ReadTimeMenuItem);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChat,\n  ApiChatReactions,\n  ApiMessage,\n  ApiPeer,\n  ApiPoll,\n  ApiReaction,\n  ApiStickerSet,\n  ApiThreadInfo,\n  ApiTypeStory,\n  ApiUser,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport {\n  getUserFullName,\n  groupStatefulContent,\n  isUserId,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { disableScrolling } from '../../../util/scrollLock';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\nimport { getMessageCopyOptions } from './helpers/copyOptions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport LastEditTimeMenuItem from './LastEditTimeMenuItem';\nimport ReactionSelector from './reactions/ReactionSelector';\nimport ReadTimeMenuItem from './ReadTimeMenuItem';\n\nimport './MessageContextMenu.scss';\n\ntype OwnProps = {\n  isReactionPickerOpen?: boolean;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  isOpen: boolean;\n  anchor: IAnchorPosition;\n  targetHref?: string;\n  message: ApiMessage;\n  poll?: ApiPoll;\n  story?: ApiTypeStory;\n  canSendNow?: boolean;\n  enabledReactions?: ApiChatReactions;\n  isWithPaidReaction?: boolean;\n  reactionsLimit?: number;\n  canReschedule?: boolean;\n  canReply?: boolean;\n  canQuote?: boolean;\n  repliesThreadInfo?: ApiThreadInfo;\n  canPin?: boolean;\n  canUnpin?: boolean;\n  canDelete?: boolean;\n  canReport?: boolean;\n  canShowReactionsCount?: boolean;\n  canShowReactionList?: boolean;\n  canBuyPremium?: boolean;\n  canEdit?: boolean;\n  canForward?: boolean;\n  canFaveSticker?: boolean;\n  canUnfaveSticker?: boolean;\n  canCopy?: boolean;\n  canCopyLink?: boolean;\n  canSelect?: boolean;\n  canTranslate?: boolean;\n  canShowOriginal?: boolean;\n  canSelectLanguage?: boolean;\n  isPrivate?: boolean;\n  isCurrentUserPremium?: boolean;\n  canDownload?: boolean;\n  canSaveGif?: boolean;\n  canRevote?: boolean;\n  canClosePoll?: boolean;\n  isDownloading?: boolean;\n  canShowSeenBy?: boolean;\n  seenByRecentPeers?: ApiPeer[];\n  noReplies?: boolean;\n  hasCustomEmoji?: boolean;\n  customEmojiSets?: ApiStickerSet[];\n  canPlayAnimatedEmojis?: boolean;\n  isInSavedMessages?: boolean;\n  shouldRenderShowWhen?: boolean;\n  canLoadReadDate?: boolean;\n  onReply?: NoneToVoidFunction;\n  onOpenThread?: VoidFunction;\n  onEdit?: NoneToVoidFunction;\n  onPin?: NoneToVoidFunction;\n  onUnpin?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onDelete?: NoneToVoidFunction;\n  onFaveSticker?: NoneToVoidFunction;\n  onReport?: NoneToVoidFunction;\n  onUnfaveSticker?: NoneToVoidFunction;\n  onSelect?: NoneToVoidFunction;\n  onSend?: NoneToVoidFunction;\n  onReschedule?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  onCopyLink?: NoneToVoidFunction;\n  onCopyMessages?: (messageIds: number[]) => void;\n  onCopyNumber?: NoneToVoidFunction;\n  onDownload?: NoneToVoidFunction;\n  onSaveGif?: NoneToVoidFunction;\n  onCancelVote?: NoneToVoidFunction;\n  onClosePoll?: NoneToVoidFunction;\n  onShowSeenBy?: NoneToVoidFunction;\n  onShowReactors?: NoneToVoidFunction;\n  onTranslate?: NoneToVoidFunction;\n  onShowOriginal?: NoneToVoidFunction;\n  onSelectLanguage?: NoneToVoidFunction;\n  onToggleReaction?: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n  onReactionPickerOpen?: (position: IAnchorPosition) => void;\n  userFullName?: string;\n  canGift?: boolean;\n};\n\nconst SCROLLBAR_WIDTH = 10;\nconst REACTION_SELECTOR_WIDTH_REM = 19.25;\nconst ANIMATION_DURATION = 200;\n\nconst MessageContextMenu: FC<OwnProps> = ({\n  isReactionPickerOpen,\n  availableReactions,\n  topReactions,\n  defaultTagReactions,\n  isOpen,\n  message,\n  poll,\n  story,\n  isPrivate,\n  isCurrentUserPremium,\n  enabledReactions,\n  isWithPaidReaction,\n  reactionsLimit,\n  anchor,\n  targetHref,\n  canSendNow,\n  canReschedule,\n  canBuyPremium,\n  canReply,\n  canQuote,\n  canEdit,\n  noReplies,\n  canPin,\n  canUnpin,\n  canDelete,\n  canForward,\n  canReport,\n  canFaveSticker,\n  canUnfaveSticker,\n  canCopy,\n  canCopyLink,\n  canSelect,\n  canDownload,\n  canSaveGif,\n  canRevote,\n  canClosePoll,\n  canTranslate,\n  canShowOriginal,\n  canSelectLanguage,\n  isDownloading,\n  repliesThreadInfo,\n  canShowSeenBy,\n  canShowReactionsCount,\n  canShowReactionList,\n  seenByRecentPeers,\n  hasCustomEmoji,\n  customEmojiSets,\n  canPlayAnimatedEmojis,\n  isInSavedMessages,\n  shouldRenderShowWhen,\n  canLoadReadDate,\n  onReply,\n  onOpenThread,\n  onEdit,\n  onPin,\n  onUnpin,\n  onForward,\n  onDelete,\n  onFaveSticker,\n  onReport,\n  onUnfaveSticker,\n  onSelect,\n  onSend,\n  onReschedule,\n  onClose,\n  onCloseAnimationEnd,\n  onCopyLink,\n  onCopyNumber,\n  onDownload,\n  onSaveGif,\n  onCancelVote,\n  onClosePoll,\n  onShowSeenBy,\n  onShowReactors,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n  onCopyMessages,\n  onReactionPickerOpen,\n  onTranslate,\n  onShowOriginal,\n  onSelectLanguage,\n  userFullName,\n  canGift,\n}) => {\n  const {\n    showNotification, openStickerSet, openCustomEmojiSets, loadStickers, openGiftModal,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollableRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const noReactions = !isPrivate && !enabledReactions;\n  const areReactionsPossible = message.areReactionsPossible;\n  const withReactions = (canShowReactionList && !noReactions) || areReactionsPossible;\n  const isEdited = ('isEdited' in message) && message.isEdited;\n  const seenByDates = message.seenByDates;\n  const isPremiumGift = message.content.action?.type === 'giftPremium';\n  const isGiftCode = message.content.action?.type === 'giftCode';\n  const isStarGift = message.content.action?.type === 'starGift';\n  const isStarGiftUnique = message.content.action?.type === 'starGiftUnique';\n  const shouldShowGiftButton = isUserId(message.chatId)\n    && canGift && (isPremiumGift || isGiftCode || isStarGift || isStarGiftUnique);\n\n  const [areItemsHidden, hideItems] = useFlag();\n  const [isReady, markIsReady, unmarkIsReady] = useFlag();\n  const { isMobile, isDesktop } = useAppLayout();\n  const seenByDatesCount = useMemo(() => (seenByDates ? Object.keys(seenByDates).length : 0), [seenByDates]);\n\n  const handleAfterCopy = useLastCallback(() => {\n    showNotification({\n      message: lang('Share.Link.Copied'),\n    });\n    onClose();\n  });\n\n  const handleGiftClick = useLastCallback(() => {\n    openGiftModal({ forUserId: message.chatId });\n    onClose();\n  });\n\n  useEffect(() => {\n    if (isOpen && areItemsHidden && !isReactionPickerOpen) {\n      onClose();\n    }\n  }, [onClose, isOpen, isReactionPickerOpen, areItemsHidden]);\n\n  useEffect(() => {\n    if (customEmojiSets?.length) {\n      customEmojiSets.map((customEmojiSet) => {\n        return loadStickers({\n          stickerSetInfo: {\n            id: customEmojiSet.id,\n            accessHash: customEmojiSet.accessHash,\n          },\n        });\n      });\n    }\n  }, [customEmojiSets, openCustomEmojiSets]);\n\n  const handleOpenCustomEmojiSets = useLastCallback(() => {\n    if (!customEmojiSets) return;\n    if (customEmojiSets.length === 1) {\n      openStickerSet({\n        stickerSetInfo: {\n          shortName: customEmojiSets[0].shortName,\n        },\n      });\n    } else {\n      openCustomEmojiSets({\n        setIds: customEmojiSets.map((set) => set.id),\n      });\n    }\n    onClose();\n  });\n\n  const copyOptions = getMessageCopyOptions(\n    message,\n    groupStatefulContent({ poll, story }),\n    targetHref,\n    canCopy,\n    handleAfterCopy,\n    canCopyLink ? onCopyLink : undefined,\n    onCopyMessages,\n    onCopyNumber,\n  );\n\n  const getTriggerElement = useLastCallback(() => {\n    return document.querySelector(`.Transition_slide-active > .MessageList div[data-message-id=\"${message.id}\"]`);\n  });\n\n  const getRootElement = useLastCallback(() => document.querySelector('.Transition_slide-active > .MessageList'));\n\n  const getMenuElement = useLastCallback(() => document.querySelector('.MessageContextMenu .bubble'));\n\n  const getLayout = useLastCallback(() => {\n    const extraHeightAudioPlayer = (isMobile\n      && (document.querySelector<HTMLElement>('.AudioPlayer-content'))?.offsetHeight) || 0;\n    const middleColumn = document.getElementById('MiddleColumn')!;\n    const middleColumnComputedStyle = getComputedStyle(middleColumn);\n    const headerToolsHeight = parseFloat(middleColumnComputedStyle.getPropertyValue('--middle-header-panes-height'));\n    const extraHeightPinned = headerToolsHeight || 0;\n\n    return {\n      extraPaddingX: SCROLLBAR_WIDTH,\n      extraTopPadding: (document.querySelector<HTMLElement>('.MiddleHeader')!).offsetHeight,\n      extraMarginTop: extraHeightPinned + extraHeightAudioPlayer,\n      shouldAvoidNegativePosition: !isDesktop,\n      menuElMinWidth: withReactions && isMobile ? REACTION_SELECTOR_WIDTH_REM * REM : undefined,\n    };\n  });\n\n  useEffect(() => {\n    if (!isOpen) {\n      unmarkIsReady();\n      return;\n    }\n\n    setTimeout(() => {\n      markIsReady();\n    }, ANIMATION_DURATION);\n  }, [isOpen, markIsReady, unmarkIsReady]);\n\n  useEffect(() => {\n    return disableScrolling(scrollableRef.current, '.ReactionPicker');\n  }, [isOpen]);\n\n  const handleOpenMessageReactionPicker = useLastCallback((position: IAnchorPosition) => {\n    onReactionPickerOpen!(position);\n    hideItems();\n  });\n\n  return (\n    <Menu\n      ref={menuRef}\n      isOpen={isOpen}\n      anchor={anchor}\n      getTriggerElement={getTriggerElement}\n      getRootElement={getRootElement}\n      getMenuElement={getMenuElement}\n      getLayout={getLayout}\n      withMaxHeight\n      className={buildClassName(\n        'MessageContextMenu', 'fluid', withReactions && 'with-reactions',\n      )}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {withReactions && (\n        <ReactionSelector\n          enabledReactions={enabledReactions}\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          defaultTagReactions={defaultTagReactions}\n          currentReactions={message.reactions?.results}\n          reactionsLimit={reactionsLimit}\n          onToggleReaction={onToggleReaction!}\n          onSendPaidReaction={onSendPaidReaction}\n          onShowPaidReactionModal={onShowPaidReactionModal}\n          isWithPaidReaction={isWithPaidReaction}\n          isPrivate={isPrivate}\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isInSavedMessages}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleOpenMessageReactionPicker}\n          onClose={onClose}\n          className={buildClassName(areItemsHidden && 'ReactionSelector-hidden')}\n        />\n      )}\n\n      <div\n        ref={scrollableRef}\n        className={buildClassName(\n          'MessageContextMenu_items scrollable-content custom-scroll',\n          areItemsHidden && 'MessageContextMenu_items-hidden',\n        )}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldShowGiftButton\n          && (\n            <MenuItem icon=\"gift\" onClick={handleGiftClick}>\n              {message?.isOutgoing ? lang('SendAnotherGift')\n                : lang('Conversation.ContextMenuSendGiftTo', userFullName)}\n            </MenuItem>\n          )}\n        {canSendNow && <MenuItem icon=\"send-outline\" onClick={onSend}>{lang('MessageScheduleSend')}</MenuItem>}\n        {canReschedule && (\n          <MenuItem icon=\"schedule\" onClick={onReschedule}>{lang('MessageScheduleEditTime')}</MenuItem>\n        )}\n        {canReply && (\n          <MenuItem icon=\"reply\" onClick={onReply}>\n            {lang(canQuote ? 'lng_context_quote_and_reply' : 'Reply')}\n          </MenuItem>\n        )}\n        {!noReplies && Boolean(repliesThreadInfo?.messagesCount) && (\n          <MenuItem icon=\"replies\" onClick={onOpenThread}>\n            {lang('Conversation.ContextViewReplies', repliesThreadInfo!.messagesCount, 'i')}\n          </MenuItem>\n        )}\n        {canEdit && <MenuItem icon=\"edit\" onClick={onEdit}>{lang('Edit')}</MenuItem>}\n        {canFaveSticker && (\n          <MenuItem icon=\"favorite\" onClick={onFaveSticker}>{lang('AddToFavorites')}</MenuItem>\n        )}\n        {canUnfaveSticker && (\n          <MenuItem icon=\"favorite\" onClick={onUnfaveSticker}>{lang('Stickers.RemoveFromFavorites')}</MenuItem>\n        )}\n        {canTranslate && <MenuItem icon=\"language\" onClick={onTranslate}>{lang('TranslateMessage')}</MenuItem>}\n        {canShowOriginal && <MenuItem icon=\"language\" onClick={onShowOriginal}>{lang('ShowOriginalButton')}</MenuItem>}\n        {canSelectLanguage && (\n          <MenuItem icon=\"web\" onClick={onSelectLanguage}>{lang('lng_settings_change_lang')}</MenuItem>\n        )}\n        {copyOptions.map((option) => (\n          <MenuItem\n            key={option.label}\n            icon={option.icon}\n            onClick={option.handler}\n            withPreventDefaultOnMouseDown\n          >{lang(option.label)}\n          </MenuItem>\n        ))}\n        {canPin && <MenuItem icon=\"pin\" onClick={onPin}>{lang('DialogPin')}</MenuItem>}\n        {canUnpin && <MenuItem icon=\"unpin\" onClick={onUnpin}>{lang('DialogUnpin')}</MenuItem>}\n        {canSaveGif && <MenuItem icon=\"gifs\" onClick={onSaveGif}>{lang('lng_context_save_gif')}</MenuItem>}\n        {canRevote && <MenuItem icon=\"revote\" onClick={onCancelVote}>{lang('lng_polls_retract')}</MenuItem>}\n        {canClosePoll && <MenuItem icon=\"stop\" onClick={onClosePoll}>{lang('lng_polls_stop')}</MenuItem>}\n        {canDownload && (\n          <MenuItem icon=\"download\" onClick={onDownload}>\n            {isDownloading ? lang('lng_context_cancel_download') : lang('lng_media_download')}\n          </MenuItem>\n        )}\n        {canForward && <MenuItem icon=\"forward\" onClick={onForward}>{lang('Forward')}</MenuItem>}\n        {canSelect && <MenuItem icon=\"select\" onClick={onSelect}>{lang('Common.Select')}</MenuItem>}\n        {canReport && <MenuItem icon=\"flag\" onClick={onReport}>{lang('lng_context_report_msg')}</MenuItem>}\n        {canDelete && <MenuItem destructive icon=\"delete\" onClick={onDelete}>{lang('Delete')}</MenuItem>}\n        {hasCustomEmoji && (\n          <>\n            <MenuSeparator size=\"thick\" />\n            {!customEmojiSets && (\n              <>\n                <Skeleton inline className=\"menu-loading-row\" />\n                <Skeleton inline className=\"menu-loading-row\" />\n              </>\n            )}\n            {customEmojiSets && customEmojiSets.length === 1 && (\n              <MenuItem withWrap onClick={handleOpenCustomEmojiSets} className=\"menu-custom-emoji-sets\">\n                {renderText(lang('MessageContainsEmojiPack', customEmojiSets[0].title), ['simple_markdown', 'emoji'])}\n              </MenuItem>\n            )}\n            {customEmojiSets && customEmojiSets.length > 1 && (\n              <MenuItem withWrap onClick={handleOpenCustomEmojiSets} className=\"menu-custom-emoji-sets\">\n                {renderText(lang('MessageContainsEmojiPacks', customEmojiSets.length), ['simple_markdown'])}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {(canShowSeenBy || canShowReactionsCount) && (\n          <>\n            <MenuSeparator size={hasCustomEmoji ? 'thin' : 'thick'} />\n            <MenuItem\n              icon={canShowReactionsCount ? 'heart-outline' : 'group'}\n              onClick={canShowReactionsCount ? onShowReactors : onShowSeenBy}\n              disabled={!canShowReactionsCount && !seenByDatesCount}\n            >\n              <span className=\"MessageContextMenu--seen-by-label-wrapper\">\n                <span className=\"MessageContextMenu--seen-by-label\" dir={lang.isRtl ? 'rtl' : undefined}>\n                  {canShowReactionsCount && message.reactors?.count ? (\n                    canShowSeenBy && seenByDatesCount\n                      ? lang(\n                        'Chat.OutgoingContextMixedReactionCount',\n                        [message.reactors.count, seenByDatesCount],\n                      )\n                      : lang('Chat.ContextReactionCount', message.reactors.count, 'i')\n                  ) : (\n                    seenByDatesCount === 1 && seenByRecentPeers\n                      ? renderText(\n                        isUserId(seenByRecentPeers[0].id)\n                          ? getUserFullName(seenByRecentPeers[0] as ApiUser)!\n                          : (seenByRecentPeers[0] as ApiChat).title,\n                      ) : (\n                        seenByDatesCount\n                          ? lang('Conversation.ContextMenuSeen', seenByDatesCount, 'i')\n                          : lang('Conversation.ContextMenuNoViews')\n                      )\n                  )}\n                </span>\n              </span>\n              <AvatarList className=\"avatars\" size=\"micro\" peers={seenByRecentPeers} />\n            </MenuItem>\n          </>\n        )}\n        {(canLoadReadDate || shouldRenderShowWhen || isEdited) && (\n          <MenuSeparator size={hasCustomEmoji ? 'thin' : 'thick'} />\n        )}\n        {(canLoadReadDate || shouldRenderShowWhen) && (\n          <ReadTimeMenuItem\n            canLoadReadDate={canLoadReadDate}\n            shouldRenderShowWhen={shouldRenderShowWhen}\n            message={message}\n            closeContextMenu={onClose}\n          />\n        )}\n        {isEdited && (\n          <LastEditTimeMenuItem\n            message={message}\n          />\n        )}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(MessageContextMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChat,\n  ApiChatReactions,\n  ApiMessage,\n  ApiPoll,\n  ApiReaction,\n  ApiStickerSet,\n  ApiStickerSetInfo,\n  ApiThreadInfo,\n  ApiTypeStory,\n} from '../../../api/types';\nimport type {\n  ActiveDownloads,\n  IAlbum,\n  IAnchorPosition,\n  MessageListType,\n  ThreadId,\n} from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { PREVIEW_AVATAR_COUNT, SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport {\n  areReactionsEmpty,\n  getCanPostInChat,\n  getIsDownloading,\n  getMessageDownloadableMedia,\n  getMessageVideo,\n  getUserFullName,\n  hasMessageTtl,\n  isActionMessage,\n  isChatChannel,\n  isChatGroup,\n  isMessageLocal,\n  isOwnMessage,\n  isUserId,\n  isUserRightBanned,\n} from '../../../global/helpers';\nimport {\n  selectActiveDownloads,\n  selectAllowedMessageActionsSlow,\n  selectBot,\n  selectCanForwardMessage,\n  selectCanGift,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectCanTranslateMessage,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsMessageProtected,\n  selectIsMessageUnread,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectMessageCustomEmojiSets,\n  selectMessageTranslations,\n  selectPeerStory,\n  selectPollFromMessage,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectStickerSet,\n  selectThreadInfo,\n  selectTopic,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { getSelectionAsFormattedText } from './helpers/getSelectionAsFormattedText';\nimport { isSelectionRangeInsideMessage } from './helpers/isSelectionRangeInsideMessage';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSchedule from '../../../hooks/useSchedule';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport PinMessageModal from '../../common/PinMessageModal.async';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport MessageContextMenu from './MessageContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  message: ApiMessage;\n  album?: IAlbum;\n  anchor: IAnchorPosition;\n  targetHref?: string;\n  messageListType: MessageListType;\n  noReplies?: boolean;\n  detectedLanguage?: string;\n  repliesThreadInfo?: ApiThreadInfo;\n  className?: string;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  threadId?: ThreadId;\n  poll?: ApiPoll;\n  story?: ApiTypeStory;\n  chat?: ApiChat;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  noOptions?: boolean;\n  canSendNow?: boolean;\n  canReschedule?: boolean;\n  canReply?: boolean;\n  canPin?: boolean;\n  canShowReactionsCount?: boolean;\n  canBuyPremium?: boolean;\n  canShowReactionList?: boolean;\n  customEmojiSetsInfo?: ApiStickerSetInfo[];\n  customEmojiSets?: ApiStickerSet[];\n  canUnpin?: boolean;\n  canDelete?: boolean;\n  canReport?: boolean;\n  canEdit?: boolean;\n  canForward?: boolean;\n  canFaveSticker?: boolean;\n  canUnfaveSticker?: boolean;\n  canCopy?: boolean;\n  canTranslate?: boolean;\n  canShowOriginal?: boolean;\n  isMessageTranslated?: boolean;\n  canSelectLanguage?: boolean;\n  isPrivate?: boolean;\n  isCurrentUserPremium?: boolean;\n  hasFullInfo?: boolean;\n  canCopyLink?: boolean;\n  canSelect?: boolean;\n  canDownload?: boolean;\n  canSaveGif?: boolean;\n  canRevote?: boolean;\n  canClosePoll?: boolean;\n  canLoadReadDate?: boolean;\n  shouldRenderShowWhen?: boolean;\n  activeDownloads: ActiveDownloads;\n  canShowSeenBy?: boolean;\n  enabledReactions?: ApiChatReactions;\n  canScheduleUntilOnline?: boolean;\n  reactionsLimit?: number;\n  canPlayAnimatedEmojis?: boolean;\n  isReactionPickerOpen?: boolean;\n  isInSavedMessages?: boolean;\n  isChannel?: boolean;\n  canReplyInChat?: boolean;\n  isWithPaidReaction?: boolean;\n  userFullName?: string;\n  canGift?: boolean;\n};\n\nconst selection = window.getSelection();\nconst UNQUOTABLE_OFFSET = -1;\n\nconst ContextMenuContainer: FC<OwnProps & StateProps> = ({\n  threadId,\n  availableReactions,\n  topReactions,\n  defaultTagReactions,\n  isOpen,\n  messageListType,\n  message,\n  customEmojiSetsInfo,\n  customEmojiSets,\n  album,\n  poll,\n  story,\n  anchor,\n  targetHref,\n  noOptions,\n  canSendNow,\n  hasFullInfo,\n  canReschedule,\n  canReply,\n  canPin,\n  repliesThreadInfo,\n  canUnpin,\n  canDelete,\n  canShowReactionsCount,\n  chat,\n  canReport,\n  canShowReactionList,\n  canEdit,\n  enabledReactions,\n  reactionsLimit,\n  isPrivate,\n  isCurrentUserPremium,\n  canForward,\n  canBuyPremium,\n  canFaveSticker,\n  canUnfaveSticker,\n  canCopy,\n  canCopyLink,\n  canSelect,\n  canDownload,\n  canSaveGif,\n  canRevote,\n  canClosePoll,\n  canPlayAnimatedEmojis,\n  canLoadReadDate,\n  shouldRenderShowWhen,\n  activeDownloads,\n  noReplies,\n  canShowSeenBy,\n  canScheduleUntilOnline,\n  canTranslate,\n  isMessageTranslated,\n  canShowOriginal,\n  canSelectLanguage,\n  isReactionPickerOpen,\n  isInSavedMessages,\n  canReplyInChat,\n  isWithPaidReaction,\n  userFullName,\n  canGift,\n  className,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    openThread,\n    updateDraftReplyInfo,\n    setEditingId,\n    pinMessage,\n    openForwardMenu,\n    openReplyMenu,\n    faveSticker,\n    unfaveSticker,\n    toggleMessageSelection,\n    sendScheduledMessages,\n    rescheduleMessage,\n    downloadMedia,\n    cancelMediaDownload,\n    loadSeenBy,\n    openSeenByModal,\n    openReactorListModal,\n    loadFullChat,\n    loadReactors,\n    copyMessagesByIds,\n    saveGif,\n    loadStickers,\n    cancelPollVote,\n    closePoll,\n    toggleReaction,\n    requestMessageTranslation,\n    showOriginalMessage,\n    openChatLanguageModal,\n    openMessageReactionPicker,\n    openPremiumModal,\n    loadOutboxReadDate,\n    copyMessageLink,\n    openDeleteMessageModal,\n    addLocalPaidReaction,\n    openPaidReactionModal,\n    reportMessages,\n  } = getActions();\n\n  const lang = useOldLang();\n  const { ref: containerRef } = useShowTransition({\n    isOpen,\n    onCloseAnimationEnd,\n    className: false,\n  });\n  const [isMenuOpen, setIsMenuOpen] = useState(true);\n  const [isPinModalOpen, setIsPinModalOpen] = useState(false);\n  const [isClosePollDialogOpen, openClosePollDialog, closeClosePollDialog] = useFlag();\n  const [selectionQuoteOffset, setSelectionQuoteOffset] = useState(UNQUOTABLE_OFFSET);\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline, onClose, message.date);\n\n  // `undefined` indicates that emoji are present and loading\n  const hasCustomEmoji = customEmojiSetsInfo === undefined || Boolean(customEmojiSetsInfo.length);\n\n  useEffect(() => {\n    if (canShowSeenBy && isOpen) {\n      loadSeenBy({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [loadSeenBy, isOpen, message.chatId, message.id, canShowSeenBy]);\n\n  useEffect(() => {\n    if (canLoadReadDate && isOpen) {\n      loadOutboxReadDate({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [canLoadReadDate, isOpen, message.chatId, message.id, message.readDate]);\n\n  useEffect(() => {\n    if (canShowReactionsCount && isOpen) {\n      loadReactors({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [canShowReactionsCount, isOpen, loadReactors, message.chatId, message.id]);\n\n  useEffect(() => {\n    if (customEmojiSetsInfo?.length && customEmojiSets?.length !== customEmojiSetsInfo.length) {\n      customEmojiSetsInfo.forEach((set) => {\n        loadStickers({ stickerSetInfo: set });\n      });\n    }\n  }, [customEmojiSetsInfo, customEmojiSets, loadStickers]);\n\n  useEffect(() => {\n    if (!hasFullInfo && !isPrivate && isOpen) {\n      loadFullChat({ chatId: message.chatId });\n    }\n  }, [hasFullInfo, isOpen, isPrivate, loadFullChat, message.chatId]);\n\n  const seenByRecentPeers = useMemo(() => {\n    // No need for expensive global updates on chats or users, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n    const usersById = getGlobal().users.byId;\n    if (message.reactions?.recentReactions?.length) {\n      const uniqueReactors = new Set(message.reactions?.recentReactions?.map(\n        ({ peerId }) => usersById[peerId] || chatsById[peerId],\n      ));\n\n      return Array.from(uniqueReactors).filter(Boolean).slice(0, PREVIEW_AVATAR_COUNT);\n    }\n\n    if (!message.seenByDates) {\n      return undefined;\n    }\n\n    return Object.keys(message.seenByDates).slice(0, PREVIEW_AVATAR_COUNT)\n      .map((id) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [message.reactions?.recentReactions, message.seenByDates]);\n\n  const isDownloading = useMemo(() => {\n    if (album) {\n      return album.messages.some((msg) => {\n        const downloadableMedia = getMessageDownloadableMedia(msg);\n        if (!downloadableMedia) return false;\n        return getIsDownloading(activeDownloads, downloadableMedia);\n      });\n    }\n\n    const downloadableMedia = getMessageDownloadableMedia(message);\n    if (!downloadableMedia) return false;\n    return getIsDownloading(activeDownloads, downloadableMedia);\n  }, [activeDownloads, album, message]);\n\n  const selectionRange = canReply && selection?.rangeCount ? selection.getRangeAt(0) : undefined;\n\n  useEffect(() => {\n    if (isMessageTranslated) {\n      setSelectionQuoteOffset(UNQUOTABLE_OFFSET);\n      return;\n    }\n\n    const isMessageTextSelected = selectionRange\n      && !selectionRange.collapsed\n      && Boolean(message.content.text?.text)\n      && isSelectionRangeInsideMessage(selectionRange);\n\n    if (!isMessageTextSelected) {\n      setSelectionQuoteOffset(UNQUOTABLE_OFFSET);\n      return;\n    }\n\n    const selectionText = getSelectionAsFormattedText(selectionRange);\n\n    const messageText = message.content.text!.text!.replace(/\\u00A0/g, ' ');\n\n    const canQuote = selectionText.text.trim().length > 0\n      && messageText.includes(selectionText.text);\n    if (!canQuote) {\n      setSelectionQuoteOffset(UNQUOTABLE_OFFSET);\n      return;\n    }\n\n    setSelectionQuoteOffset(selectionRange.startOffset);\n  }, [\n    selectionRange, selectionRange?.collapsed, selectionRange?.startOffset, selectionRange?.endOffset,\n    isMessageTranslated, message.content.text,\n  ]);\n\n  const closeMenu = useLastCallback(() => {\n    setIsMenuOpen(false);\n    onClose();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    setIsMenuOpen(false);\n    closeMenu();\n    const messageIds = album?.messages\n      ? album.messages.map(({ id }) => id)\n      : [message.id];\n    openDeleteMessageModal({\n      chatId: message.chatId,\n      messageIds,\n      isSchedule: messageListType === 'scheduled',\n    });\n  });\n\n  const closePinModal = useLastCallback(() => {\n    setIsPinModalOpen(false);\n    onClose();\n  });\n\n  const handleReply = useLastCallback(() => {\n    const quoteText = selectionQuoteOffset !== UNQUOTABLE_OFFSET && selectionRange\n      ? getSelectionAsFormattedText(selectionRange) : undefined;\n    if (!canReplyInChat) {\n      openReplyMenu({\n        fromChatId: message.chatId, messageId: message.id, quoteText, quoteOffset: selectionQuoteOffset,\n      });\n    } else {\n      updateDraftReplyInfo({\n        replyToMsgId: message.id,\n        quoteText,\n        quoteOffset: selectionQuoteOffset,\n        replyToPeerId: undefined,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleOpenThread = useLastCallback(() => {\n    openThread({\n      chatId: message.chatId,\n      threadId: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleEdit = useLastCallback(() => {\n    setEditingId({ messageId: message.id });\n    closeMenu();\n  });\n\n  const handlePin = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsPinModalOpen(true);\n  });\n\n  const handleUnpin = useLastCallback(() => {\n    pinMessage({ chatId: message.chatId, messageId: message.id, isUnpin: true });\n    closeMenu();\n  });\n\n  const handleForward = useLastCallback(() => {\n    closeMenu();\n    if (album?.messages) {\n      const messageIds = album.messages.map(({ id }) => id);\n      openForwardMenu({ fromChatId: message.chatId, messageIds });\n    } else {\n      openForwardMenu({ fromChatId: message.chatId, messageIds: [message.id] });\n    }\n  });\n\n  const handleFaveSticker = useLastCallback(() => {\n    closeMenu();\n    faveSticker({ sticker: message.content.sticker! });\n  });\n\n  const handleUnfaveSticker = useLastCallback(() => {\n    closeMenu();\n    unfaveSticker({ sticker: message.content.sticker! });\n  });\n\n  const handleCancelVote = useLastCallback(() => {\n    closeMenu();\n    cancelPollVote({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handlePollClose = useLastCallback(() => {\n    closeMenu();\n    closePoll({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleSelectMessage = useLastCallback(() => {\n    const params = album?.messages\n      ? {\n        messageId: message.id,\n        childMessageIds: album.messages.map(({ id }) => id),\n        withShift: false,\n      }\n      : { messageId: message.id, withShift: false };\n\n    toggleMessageSelection(params);\n    closeMenu();\n  });\n\n  const handleScheduledMessageSend = useLastCallback(() => {\n    sendScheduledMessages({ chatId: message.chatId, id: message.id });\n    closeMenu();\n  });\n\n  const handleRescheduleMessage = useLastCallback((scheduledAt: number) => {\n    rescheduleMessage({\n      chatId: message.chatId,\n      messageId: message.id,\n      scheduledAt,\n    });\n    onClose();\n  });\n\n  const handleOpenCalendar = useLastCallback(() => {\n    setIsMenuOpen(false);\n    requestCalendar(handleRescheduleMessage);\n  });\n\n  const handleOpenSeenByModal = useLastCallback(() => {\n    closeMenu();\n    openSeenByModal({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleOpenReactorListModal = useLastCallback(() => {\n    closeMenu();\n    openReactorListModal({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleCopyMessages = useLastCallback((messageIds: number[]) => {\n    copyMessagesByIds({ messageIds });\n    closeMenu();\n  });\n\n  const handleCopyLink = useLastCallback(() => {\n    copyMessageLink({\n      chatId: message.chatId,\n      messageId: message.id,\n      shouldIncludeThread: threadId !== MAIN_THREAD_ID,\n      shouldIncludeGrouped: true, // TODO: Provide correct value when ability to target specific message is added\n    });\n    closeMenu();\n  });\n\n  const handleCopyNumber = useLastCallback(() => {\n    copyTextToClipboard(message.content.contact!.phoneNumber);\n    closeMenu();\n  });\n\n  const handleDownloadClick = useLastCallback(() => {\n    (album?.messages || [message]).forEach((msg) => {\n      const downloadableMedia = getMessageDownloadableMedia(msg);\n      if (!downloadableMedia) return;\n\n      if (isDownloading) {\n        cancelMediaDownload({ media: downloadableMedia });\n      } else {\n        downloadMedia({ media: downloadableMedia, originMessage: msg });\n      }\n    });\n    closeMenu();\n  });\n\n  const handleSaveGif = useLastCallback(() => {\n    const video = getMessageVideo(message);\n    saveGif({ gif: video! });\n    closeMenu();\n  });\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    if (isInSavedMessages && !isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'saved_tags',\n      });\n    } else {\n      toggleReaction({\n        chatId: message.chatId, messageId: message.id, reaction, shouldAddToRecent: true,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleSendPaidReaction = useLastCallback(() => {\n    addLocalPaidReaction({\n      chatId: message.chatId, messageId: message.id, count: 1,\n    });\n    closeMenu();\n  });\n\n  const handlePaidReactionModalOpen = useLastCallback(() => {\n    openPaidReactionModal({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n\n    closeMenu();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openMessageReactionPicker({ chatId: message.chatId, messageId: message.id, position });\n  });\n\n  const handleTranslate = useLastCallback(() => {\n    requestMessageTranslation({\n      chatId: message.chatId,\n      id: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleShowOriginal = useLastCallback(() => {\n    showOriginalMessage({\n      chatId: message.chatId,\n      id: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleSelectLanguage = useLastCallback(() => {\n    openChatLanguageModal({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n    closeMenu();\n  });\n\n  const reportMessageIds = useMemo(() => (album ? album.messages : [message]).map(({ id }) => id), [album, message]);\n\n  const handleReport = useLastCallback(() => {\n    if (!chat) return;\n    setIsMenuOpen(false);\n    onClose();\n    reportMessages({\n      chatId: chat.id, messageIds: reportMessageIds,\n    });\n  });\n\n  if (noOptions) {\n    closeMenu();\n\n    return undefined;\n  }\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  return (\n    <div ref={containerRef} className={buildClassName('ContextMenuContainer', className)}>\n      <MessageContextMenu\n        isReactionPickerOpen={isReactionPickerOpen}\n        availableReactions={availableReactions}\n        topReactions={topReactions}\n        defaultTagReactions={defaultTagReactions}\n        isWithPaidReaction={isWithPaidReaction}\n        message={message}\n        isPrivate={isPrivate}\n        isCurrentUserPremium={isCurrentUserPremium}\n        canBuyPremium={canBuyPremium}\n        isOpen={isMenuOpen}\n        enabledReactions={enabledReactions}\n        reactionsLimit={reactionsLimit}\n        anchor={anchor}\n        targetHref={targetHref}\n        canShowReactionsCount={canShowReactionsCount}\n        canShowReactionList={canShowReactionList}\n        canSendNow={canSendNow}\n        canReschedule={canReschedule}\n        canReply={canReply}\n        canQuote={selectionQuoteOffset !== UNQUOTABLE_OFFSET}\n        canDelete={canDelete}\n        canPin={canPin}\n        canReport={canReport}\n        repliesThreadInfo={repliesThreadInfo}\n        canUnpin={canUnpin}\n        canEdit={canEdit}\n        canForward={canForward}\n        canFaveSticker={canFaveSticker}\n        canUnfaveSticker={canUnfaveSticker}\n        canCopy={canCopy}\n        canCopyLink={canCopyLink}\n        canSelect={canSelect}\n        canDownload={canDownload}\n        canSaveGif={canSaveGif}\n        canRevote={canRevote}\n        canClosePoll={canClosePoll}\n        canShowSeenBy={canShowSeenBy}\n        canTranslate={canTranslate}\n        canShowOriginal={canShowOriginal}\n        canSelectLanguage={canSelectLanguage}\n        canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        shouldRenderShowWhen={shouldRenderShowWhen}\n        canLoadReadDate={canLoadReadDate}\n        hasCustomEmoji={hasCustomEmoji}\n        customEmojiSets={customEmojiSets}\n        isDownloading={isDownloading}\n        seenByRecentPeers={seenByRecentPeers}\n        isInSavedMessages={isInSavedMessages}\n        noReplies={noReplies}\n        poll={poll}\n        story={story}\n        onOpenThread={handleOpenThread}\n        onReply={handleReply}\n        onEdit={handleEdit}\n        onPin={handlePin}\n        onUnpin={handleUnpin}\n        onForward={handleForward}\n        onDelete={handleDelete}\n        onReport={handleReport}\n        onFaveSticker={handleFaveSticker}\n        onUnfaveSticker={handleUnfaveSticker}\n        onSelect={handleSelectMessage}\n        onSend={handleScheduledMessageSend}\n        onReschedule={handleOpenCalendar}\n        onClose={closeMenu}\n        onCopyLink={handleCopyLink}\n        onCopyMessages={handleCopyMessages}\n        onCopyNumber={handleCopyNumber}\n        onDownload={handleDownloadClick}\n        onSaveGif={handleSaveGif}\n        onCancelVote={handleCancelVote}\n        onClosePoll={openClosePollDialog}\n        onShowSeenBy={handleOpenSeenByModal}\n        onToggleReaction={handleToggleReaction}\n        onSendPaidReaction={handleSendPaidReaction}\n        onShowPaidReactionModal={handlePaidReactionModalOpen}\n        onShowReactors={handleOpenReactorListModal}\n        onReactionPickerOpen={handleReactionPickerOpen}\n        onTranslate={handleTranslate}\n        onShowOriginal={handleShowOriginal}\n        onSelectLanguage={handleSelectLanguage}\n        userFullName={userFullName}\n        canGift={canGift}\n      />\n      <PinMessageModal\n        isOpen={isPinModalOpen}\n        messageId={message.id}\n        chatId={message.chatId}\n        onClose={closePinModal}\n      />\n      <ConfirmDialog\n        isOpen={isClosePollDialogOpen}\n        onClose={closeClosePollDialog}\n        text={lang('lng_polls_stop_warning')}\n        confirmLabel={lang('lng_polls_stop_sure')}\n        confirmHandler={handlePollClose}\n      />\n      {canReschedule && calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, messageListType, detectedLanguage }): StateProps => {\n    const { threadId } = selectCurrentMessageList(global) || {};\n\n    const { defaultTags, topReactions, availableReactions } = global.reactions;\n\n    const activeDownloads = selectActiveDownloads(global);\n    const chat = selectChat(global, message.chatId);\n    const isPrivate = chat && isUserId(chat.id);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, message.chatId) : undefined;\n    const user = selectUser(global, message.chatId);\n    const userFullName = user && getUserFullName(user);\n\n    const {\n      seenByExpiresAt, seenByMaxChatMembers, maxUniqueReactions, readDateExpiresAt,\n    } = global.appConfig || {};\n\n    const reactionsLimit = chatFullInfo?.reactionsLimit || maxUniqueReactions;\n\n    const {\n      noOptions,\n      canReplyGlobally,\n      canPin,\n      canUnpin,\n      canDelete,\n      canReport,\n      canEdit,\n      canFaveSticker,\n      canUnfaveSticker,\n      canCopy,\n      canCopyLink,\n      canSelect,\n      canDownload,\n      canSaveGif,\n      canRevote,\n      canClosePoll,\n    } = (threadId && selectAllowedMessageActionsSlow(global, message, threadId)) || {};\n    const canForward = selectCanForwardMessage(global, message);\n\n    const userStatus = isPrivate ? selectUserStatus(global, chat.id) : undefined;\n    const isOwn = isOwnMessage(message);\n    const chatBot = chat && selectBot(global, chat.id);\n    const isBot = Boolean(chatBot);\n    const isMessageUnread = selectIsMessageUnread(global, message);\n    const canLoadReadDate = Boolean(\n      isPrivate\n      && isOwn\n      && !isBot\n      && !isMessageUnread\n      && readDateExpiresAt\n      && message.date > Date.now() / 1000 - readDateExpiresAt\n      && !userStatus?.isReadDateRestricted\n      && messageListType !== 'scheduled',\n    );\n    const shouldRenderShowWhen = Boolean(\n      canLoadReadDate && isPrivate && selectUserStatus(global, chat.id)?.isReadDateRestrictedByMe,\n    );\n    const isPinned = messageListType === 'pinned';\n    const isScheduled = messageListType === 'scheduled';\n    const isChannel = chat && isChatChannel(chat);\n\n    const threadInfo = threadId && selectThreadInfo(global, message.chatId, threadId);\n    const isMessageThread = Boolean(threadInfo && !threadInfo?.isCommentsInfo && threadInfo?.fromChannelId);\n    const topic = threadId ? selectTopic(global, message.chatId, threadId) : undefined;\n\n    const canSendText = chat && !isUserRightBanned(chat, 'sendPlain', chatFullInfo);\n\n    const canReplyInChat = chat && threadId ? getCanPostInChat(chat, topic, isMessageThread, chatFullInfo)\n     && canSendText : false;\n\n    const isLocal = isMessageLocal(message);\n    const hasTtl = hasMessageTtl(message);\n    const canShowSeenBy = Boolean(!isLocal\n      && chat\n      && !isMessageUnread\n      && seenByMaxChatMembers\n      && seenByExpiresAt\n      && isChatGroup(chat)\n      && isOwn\n      && !isScheduled\n      && chat.membersCount\n      && chat.membersCount <= seenByMaxChatMembers\n      && message.date > Date.now() / 1000 - seenByExpiresAt);\n    const isAction = isActionMessage(message);\n    const canShowReactionsCount = !isLocal && !isChannel && !isScheduled && !isAction && !isPrivate && message.reactions\n      && !areReactionsEmpty(message.reactions) && message.reactions.canSeeList;\n    const isProtected = selectIsMessageProtected(global, message);\n    const canCopyNumber = Boolean(message.content.contact);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const customEmojiSetsInfo = selectMessageCustomEmojiSets(global, message);\n    const customEmojiSetsNotFiltered = customEmojiSetsInfo?.map((set) => selectStickerSet(global, set));\n    const customEmojiSets = customEmojiSetsNotFiltered?.every<ApiStickerSet>(Boolean)\n      ? customEmojiSetsNotFiltered : undefined;\n\n    const translationRequestLanguage = selectRequestedMessageTranslationLanguage(global, message.chatId, message.id);\n    const hasTranslation = translationRequestLanguage\n      ? Boolean(selectMessageTranslations(global, message.chatId, translationRequestLanguage)[message.id]?.text)\n      : undefined;\n    const canTranslate = !hasTranslation && selectCanTranslateMessage(global, message, detectedLanguage);\n    const isChatTranslated = selectRequestedChatTranslationLanguage(global, message.chatId);\n\n    const isInSavedMessages = selectIsChatWithSelf(global, message.chatId);\n\n    const poll = selectPollFromMessage(global, message);\n    const storyData = message.content.storyData;\n    const story = storyData ? selectPeerStory(global, storyData.peerId, storyData.id) : undefined;\n\n    const canGift = selectCanGift(global, message.chatId);\n\n    return {\n      threadId,\n      chat,\n      availableReactions,\n      topReactions,\n      defaultTagReactions: defaultTags,\n      noOptions,\n      canReport,\n      canSendNow: isScheduled,\n      canReschedule: isScheduled,\n      canReply: !isPinned && !isScheduled && canReplyGlobally,\n      canPin: !isScheduled && canPin,\n      canUnpin: !isScheduled && canUnpin,\n      canDelete,\n      canEdit: !isPinned && canEdit,\n      canForward: !isScheduled && canForward,\n      canFaveSticker: !isScheduled && canFaveSticker,\n      canUnfaveSticker: !isScheduled && canUnfaveSticker,\n      canCopy: (canCopyNumber || (!isProtected && canCopy)),\n      canCopyLink: !isScheduled && canCopyLink,\n      canSelect,\n      canDownload: !isProtected && canDownload,\n      canSaveGif: !isProtected && canSaveGif,\n      canRevote,\n      canClosePoll: !isScheduled && canClosePoll,\n      activeDownloads,\n      canShowSeenBy,\n      canLoadReadDate,\n      shouldRenderShowWhen,\n      enabledReactions: chat?.isForbidden ? undefined : chatFullInfo?.enabledReactions,\n      reactionsLimit,\n      isPrivate,\n      isCurrentUserPremium,\n      hasFullInfo: Boolean(chatFullInfo),\n      canShowReactionsCount,\n      canShowReactionList: !isLocal && !isAction\n        && !isScheduled && chat?.id !== SERVICE_NOTIFICATIONS_USER_ID && !hasTtl,\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      customEmojiSetsInfo,\n      customEmojiSets,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, message.chatId),\n      canTranslate,\n      canShowOriginal: hasTranslation && !isChatTranslated,\n      canSelectLanguage: hasTranslation && !isChatTranslated,\n      isMessageTranslated: hasTranslation,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      isInSavedMessages,\n      isChannel,\n      canReplyInChat,\n      isWithPaidReaction: chatFullInfo?.isPaidReactionAvailable,\n      poll,\n      story,\n      userFullName,\n      canGift,\n    };\n  },\n)(ContextMenuContainer));\n","export function isSelectionRangeInsideMessage(range: Range) {\n  const ancestor = range.commonAncestorContainer;\n  const el = ancestor.nodeType === Node.TEXT_NODE\n    ? ancestor.parentNode! as Element\n    : ancestor as Element;\n\n  return Boolean(el.closest('.message-content-wrapper .text-content'))\n    && !(Boolean(el.closest('.EmbeddedMessage')) || Boolean(el.closest('.WebPage')));\n}\n","import { useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { addExtraClass } from '../../../../lib/teact/teact-dom';\n\nimport type { FocusDirection, ScrollTargetPosition } from '../../../../types';\n\nimport { SCROLL_MAX_DISTANCE } from '../../../../config';\nimport {\n  requestForcedReflow, requestMeasure, requestMutation,\n} from '../../../../lib/fasterdom/fasterdom';\nimport animateScroll from '../../../../util/animateScroll';\n\n// This is used when the viewport was replaced.\nconst BOTTOM_FOCUS_OFFSET = 500;\nconst RELOCATED_FOCUS_OFFSET = SCROLL_MAX_DISTANCE;\nconst FOCUS_MARGIN = 20;\n\nexport default function useFocusMessage({\n  elementRef,\n  chatId,\n  isFocused,\n  focusDirection,\n  noFocusHighlight,\n  isResizingContainer,\n  isJustAdded,\n  isQuote,\n  scrollTargetPosition,\n}: {\n  elementRef: { current: HTMLDivElement | null };\n  chatId: string;\n  isFocused?: boolean;\n  focusDirection?: FocusDirection;\n  noFocusHighlight?: boolean;\n  isResizingContainer?: boolean;\n  isJustAdded?: boolean;\n  isQuote?: boolean;\n  scrollTargetPosition?: ScrollTargetPosition;\n}) {\n  const isRelocatedRef = useRef(!isJustAdded);\n\n  useLayoutEffect(() => {\n    const isRelocated = isRelocatedRef.current;\n    isRelocatedRef.current = false;\n\n    if (isFocused && elementRef.current) {\n      const messagesContainer = elementRef.current.closest<HTMLDivElement>('.MessageList')!;\n      // `noFocusHighlight` is always called with “scroll-to-bottom” buttons\n      const isToBottom = noFocusHighlight;\n      const scrollPosition = scrollTargetPosition || isToBottom ? 'end' : 'centerOrTop';\n\n      const exec = () => {\n        const maxDistance = focusDirection !== undefined\n          ? (isToBottom ? BOTTOM_FOCUS_OFFSET : RELOCATED_FOCUS_OFFSET) : undefined;\n\n        const result = animateScroll({\n          container: messagesContainer,\n          element: elementRef.current!,\n          position: scrollPosition,\n          margin: FOCUS_MARGIN,\n          maxDistance,\n          forceDirection: focusDirection,\n          forceNormalContainerHeight: isResizingContainer,\n          shouldReturnMutationFn: true,\n        });\n\n        if (isQuote) {\n          const firstQuote = elementRef.current!.querySelector<HTMLSpanElement>('.is-quote');\n          if (firstQuote) {\n            requestMutation(() => {\n              addExtraClass(firstQuote, 'animate');\n            });\n          }\n        }\n\n        return result;\n      };\n\n      if (isRelocated) {\n        // We need this to override scroll setting from Message List layout effect\n        requestForcedReflow(exec);\n      } else {\n        requestMeasure(() => {\n          requestMutation(exec()!);\n        });\n      }\n    }\n  }, [\n    elementRef, chatId, isFocused, focusDirection, noFocusHighlight, isResizingContainer, isQuote, scrollTargetPosition,\n  ]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"uGUjDZKl\",\"custom\":\"oc1hpMwv\",\"visible\":\"kqcWe4tf\",\"custom-animated\":\"sx6RTuAU\",\"customAnimated\":\"sx6RTuAU\",\"custom-fade-in\":\"_p445E1b\",\"customFadeIn\":\"_p445E1b\",\"chosen\":\"M62HGuIV\",\"static-icon\":\"MZ2tH980\",\"staticIcon\":\"MZ2tH980\",\"lock\":\"WMpEr5XQ\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../../lib/teact/teact';\n\nimport type { ApiReaction, ApiReactionCustomEmoji, ApiReactionPaid } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport CustomEmoji from '../../../common/CustomEmoji';\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiReactionPaid;\n  chosen?: boolean;\n  isReady?: boolean;\n  noAppearAnimation?: boolean;\n  style?: string;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n};\n\nconst ReactionSelectorCustomReaction: FC<OwnProps> = ({\n  reaction,\n  chosen,\n  isReady,\n  noAppearAnimation,\n  style,\n  isLocked,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const handleClick = useLastCallback(() => {\n    if (reaction.type === 'paid') {\n      onSendPaidReaction?.();\n      return;\n    }\n\n    onToggleReaction(reaction);\n  });\n\n  const {\n    isContextMenuOpen,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, reaction.type !== 'paid', undefined, undefined, undefined, true);\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onShowPaidReactionModal?.();\n\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, onShowPaidReactionModal, handleContextMenuHide, isContextMenuOpen]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        styles.custom,\n        chosen && reaction.type !== 'paid' && styles.chosen,\n        !noAppearAnimation && isReady && styles.customAnimated,\n        noAppearAnimation && styles.visible,\n      )}\n      ref={ref}\n      style={style}\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n    >\n      {reaction.type === 'paid' ? (\n        <AnimatedIcon\n          tgsUrl={LOCAL_TGS_URLS.StarReaction}\n          size={REACTION_SIZE}\n          noLoop={false}\n        />\n      ) : (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          size={REACTION_SIZE}\n        />\n      )}\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorCustomReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../../common/AnimatedSticker';\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiAvailableReaction;\n  isReady?: boolean;\n  chosen?: boolean;\n  noAppearAnimation?: boolean;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst ReactionSelectorReaction: FC<OwnProps> = ({\n  reaction,\n  isReady,\n  noAppearAnimation,\n  chosen,\n  isLocked,\n  onToggleReaction,\n}) => {\n  const mediaAppearData = useMedia(`sticker${reaction.appearAnimation?.id}`, !isReady || noAppearAnimation);\n  const mediaData = useMedia(`document${reaction.selectAnimation?.id}`, !isReady || noAppearAnimation);\n  const staticIconData = useMedia(`document${reaction.staticIcon?.id}`, !noAppearAnimation);\n  const [isAnimationLoaded, markAnimationLoaded] = useFlag();\n\n  const [isFirstPlay, , unmarkIsFirstPlay] = useFlag(true);\n  const [isActivated, activate, deactivate] = useFlag();\n\n  function handleClick() {\n    onToggleReaction(reaction.reaction);\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, chosen && styles.chosen)}\n      onClick={handleClick}\n      onMouseEnter={isReady && !isFirstPlay ? activate : undefined}\n    >\n      {noAppearAnimation && (\n        <img\n          className={styles.staticIcon}\n          src={staticIconData}\n          alt={reaction.reaction.emoticon}\n          draggable={false}\n        />\n      )}\n      {!isAnimationLoaded && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.appearAnimation?.id}\n          tgsUrl={mediaAppearData}\n          play={isFirstPlay}\n          noLoop\n          size={REACTION_SIZE}\n          onEnded={unmarkIsFirstPlay}\n          forceAlways\n        />\n      )}\n      {!isFirstPlay && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.selectAnimation?.id}\n          tgsUrl={mediaData}\n          play={isActivated}\n          noLoop\n          size={REACTION_SIZE}\n          onLoad={markAnimationLoaded}\n          onEnded={deactivate}\n          forceAlways\n        />\n      )}\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChatReactions,\n  ApiReaction,\n  ApiReactionCount,\n  ApiReactionCustomEmoji,\n  ApiReactionPaid,\n} from '../../../../api/types';\nimport type { IAnchorPosition } from '../../../../types';\n\nimport {\n  canSendReaction, getReactionKey, isSameReaction, sortReactions,\n} from '../../../../global/helpers';\nimport buildClassName, { createClassNameBuilder } from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\nimport Button from '../../../ui/Button';\nimport Link from '../../../ui/Link';\nimport ReactionSelectorCustomReaction from './ReactionSelectorCustomReaction';\nimport ReactionSelectorReaction from './ReactionSelectorReaction';\n\nimport './ReactionSelector.scss';\n\ntype RenderableReactions = (ApiAvailableReaction | ApiReactionCustomEmoji | ApiReactionPaid)[];\n\ntype OwnProps = {\n  enabledReactions?: ApiChatReactions;\n  isPrivate?: boolean;\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  effectReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  currentReactions?: ApiReactionCount[];\n  reactionsLimit?: number;\n  isReady?: boolean;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n  className?: string;\n  isInSavedMessages?: boolean;\n  isInStoryViewer?: boolean;\n  isForEffects?: boolean;\n  isWithPaidReaction?: boolean;\n  onClose?: NoneToVoidFunction;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n  onShowMore: (position: IAnchorPosition) => void;\n};\n\nconst cn = createClassNameBuilder('ReactionSelector');\nconst REACTIONS_AMOUNT = 7;\nconst FADE_IN_DELAY = 20;\n\nconst ReactionSelector: FC<OwnProps> = ({\n  allAvailableReactions,\n  topReactions,\n  defaultTagReactions,\n  enabledReactions,\n  currentReactions,\n  reactionsLimit,\n  isPrivate,\n  isReady,\n  canPlayAnimatedEmojis,\n  className,\n  isCurrentUserPremium,\n  isInSavedMessages,\n  isInStoryViewer,\n  isForEffects,\n  effectReactions,\n  isWithPaidReaction,\n  onClose,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n  onShowMore,\n}) => {\n  const { openPremiumModal } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  const areReactionsLocked = isInSavedMessages && !isCurrentUserPremium && !isInStoryViewer;\n\n  const shouldUseCurrentReactions = Boolean(reactionsLimit\n    && currentReactions && currentReactions.length >= reactionsLimit);\n\n  const availableReactions = useMemo(() => {\n    const reactions = (() => {\n      if (shouldUseCurrentReactions) return currentReactions?.map((reaction) => reaction.reaction);\n      if (isForEffects) return effectReactions;\n      if (isInSavedMessages) return defaultTagReactions;\n      if (enabledReactions?.type === 'some') return enabledReactions.allowed;\n      return allAvailableReactions?.map((reaction) => reaction.reaction);\n    })();\n\n    const filteredReactions: RenderableReactions = reactions?.map((reaction) => {\n      const isCustomReaction = reaction.type === 'custom';\n      const availableReaction = allAvailableReactions?.find((r) => isSameReaction(r.reaction, reaction));\n\n      if (isForEffects) return availableReaction;\n\n      if ((!isCustomReaction && !availableReaction) || availableReaction?.isInactive) return undefined;\n\n      if (!isPrivate && !shouldUseCurrentReactions\n         && (!enabledReactions || !canSendReaction(reaction, enabledReactions))) {\n        return undefined;\n      }\n\n      return isCustomReaction ? reaction : availableReaction;\n    }).filter(Boolean) || [];\n\n    const sortedReactions = sortReactions(filteredReactions, topReactions);\n    if (isWithPaidReaction) {\n      sortedReactions.unshift({ type: 'paid' });\n    }\n    return sortedReactions;\n  }, [\n    allAvailableReactions, currentReactions, defaultTagReactions, enabledReactions, isInSavedMessages, isPrivate,\n    topReactions, isForEffects, effectReactions, shouldUseCurrentReactions, isWithPaidReaction,\n  ]);\n\n  const reactionsToRender = useMemo(() => {\n    // Component can fit one more if we do not need show more button\n    return availableReactions.length === REACTIONS_AMOUNT + 1\n      ? availableReactions\n      : availableReactions.slice(0, REACTIONS_AMOUNT);\n  }, [availableReactions]);\n  const withMoreButton = reactionsToRender.length < availableReactions.length;\n\n  const userReactionIndexes = useMemo(() => {\n    const chosenReactions = currentReactions?.filter(({ chosenOrder }) => chosenOrder !== undefined) || [];\n    return new Set(chosenReactions.map(({ reaction }) => (\n      reactionsToRender.findIndex((r) => r && isSameReaction('reaction' in r ? r.reaction : r, reaction))\n    )));\n  }, [currentReactions, reactionsToRender]);\n\n  const handleShowMoreClick = useLastCallback(() => {\n    const bound = ref.current?.getBoundingClientRect() || { x: 0, y: 0 };\n    onShowMore({\n      x: bound.x,\n      y: bound.y,\n    });\n  });\n\n  const handleOpenPremiumModal = useLastCallback(() => {\n    onClose?.();\n    openPremiumModal({\n      initialSection: 'saved_tags',\n    });\n  });\n\n  const hintText = useMemo(() => {\n    if (isInSavedMessages) {\n      if (!isCurrentUserPremium) {\n        const text = lang('lng_subscribe_tag_about');\n        const parts = text.split('{link}');\n        return (\n          <span>\n            {parts[0]}\n            <Link isPrimary onClick={handleOpenPremiumModal}>\n              {lang('lng_subscribe_tag_link')}\n            </Link>\n            {parts[1]}\n          </span>\n        );\n      }\n\n      return lang('SavedTagReactionsHint2');\n    }\n\n    if (isInStoryViewer) {\n      return lang('StoryReactionsHint');\n    }\n\n    if (isForEffects) {\n      return lang('AddEffectMessageHint');\n    }\n\n    return undefined;\n  }, [isCurrentUserPremium, isInSavedMessages, isInStoryViewer, lang, isForEffects]);\n\n  if (!reactionsToRender.length) return undefined;\n\n  return (\n    <div className={buildClassName(cn('&'), className)} ref={ref}>\n      <div className={cn('bubble-small', lang.isRtl && 'isRtl')} />\n      <div className={cn('items-wrapper')}>\n        <div className={cn('bubble-big', lang.isRtl && 'isRtl')} />\n        <div className={cn('items')}>\n          {hintText && <div className={cn('hint')}>{hintText}</div>}\n          <div className={cn('reactions')} dir={lang.isRtl ? 'rtl' : undefined}>\n            {reactionsToRender.map((reaction, i) => (\n              'reaction' in reaction ? (\n                <ReactionSelectorReaction\n                  key={getReactionKey(reaction.reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                />\n              ) : (\n                <ReactionSelectorCustomReaction\n                  key={getReactionKey(reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  onSendPaidReaction={onSendPaidReaction}\n                  onShowPaidReactionModal={onShowPaidReactionModal}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                  style={`--_animation-delay: ${(REACTIONS_AMOUNT - i) * FADE_IN_DELAY}ms`}\n                />\n              )\n            ))}\n            {withMoreButton && (\n              <Button\n                color=\"translucent\"\n                className={cn('show-more')}\n                onClick={handleShowMoreClick}\n              >\n                <Icon name=\"down\" />\n              </Button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ReactionSelector);\n","import React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiReaction, ApiReactionPaid } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../../global/selectors';\nimport { IS_ANDROID, IS_IOS } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { LOCAL_TGS_URLS } from '../helpers/animatedAssets';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport AnimatedIcon from '../AnimatedIcon';\nimport StarIcon from '../icons/StarIcon';\n\nimport styles from './ReactionAnimatedEmoji.module.scss';\n\ntype OwnProps = {\n  containerId: string;\n  reaction: ApiReactionPaid;\n  className?: string;\n  size?: number;\n  effectSize?: number;\n  localAmount?: number;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  activeReactions?: ApiReaction[];\n  withEffects?: boolean;\n};\n\nconst ICON_SIZE = 1.5 * REM;\nconst EFFECT_SIZE = 6.5 * REM;\nconst MAX_EFFECT_COUNT = (IS_IOS || IS_ANDROID) ? 2 : 5;\nconst QUALITY = (IS_IOS || IS_ANDROID) ? 2 : 3;\n\nconst PaidReactionEmoji = ({\n  containerId,\n  reaction,\n  className,\n  size = ICON_SIZE,\n  effectSize = EFFECT_SIZE,\n  activeReactions,\n  localAmount,\n  withEffects,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { stopActiveReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const effectRef = useRef<HTMLDivElement>(null);\n\n  const [effectsIds, setEffectsIds] = useState<number[]>([]);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const activeReaction = useMemo(() => (\n    activeReactions?.find((active) => isSameReaction(active, reaction))\n  ), [activeReactions, reaction]);\n\n  const shouldPlayEffect = Boolean(\n    withEffects && activeReaction,\n  );\n  const canAddMoreEffects = effectsIds.length < MAX_EFFECT_COUNT;\n\n  useEffectWithPrevDeps(([prevLocalAmount]) => {\n    if (!shouldPlayEffect) {\n      setEffectsIds([]);\n      return;\n    }\n\n    if (!localAmount || localAmount <= (prevLocalAmount || 0)) {\n      return;\n    }\n\n    if (canAddMoreEffects) {\n      setEffectsIds((prev) => [...prev, Date.now()]);\n    }\n  }, [localAmount, canAddMoreEffects, shouldPlayEffect]);\n\n  const {\n    shouldRender: shouldRenderEffect,\n  } = useShowTransition({\n    ref: effectRef,\n    noMountTransition: true,\n    isOpen: shouldPlayEffect,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  const handleEnded = useLastCallback(() => {\n    const newEffectsIds = effectsIds.slice(1);\n    setEffectsIds(newEffectsIds);\n    if (!newEffectsIds.length) {\n      stopActiveReaction({ containerId, reaction });\n    }\n  });\n\n  const rootClassName = buildClassName(\n    styles.root,\n    shouldRenderEffect && styles.animating,\n    className,\n  );\n\n  return (\n    <div className={rootClassName} ref={ref} teactFastList>\n      <StarIcon key=\"icon\" type=\"gold\" size=\"adaptive\" style={`width: ${size}px; height: ${size}px`} />\n      {shouldRenderEffect && effectsIds.map((id) => (\n        <AnimatedIcon\n          key={id}\n          ref={effectRef}\n          className={styles.effect}\n          size={effectSize}\n          tgsUrl={LOCAL_TGS_URLS.StarReactionEffect}\n          play={isIntersecting}\n          noLoop\n          forceAlways\n          nonInteractive\n          quality={QUALITY}\n          onEnded={handleEnded}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { containerId }) => {\n    const { activeReactions } = selectTabState(global);\n\n    const withEffects = selectPerformanceSettingsValue(global, 'reactionEffects');\n\n    return {\n      activeReactions: activeReactions?.[containerId],\n      withEffects,\n    };\n  },\n)(PaidReactionEmoji));\n","import React, { memo, useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiPeer, ApiReaction, ApiReactionCount,\n} from '../../../../api/types';\nimport type { GlobalState } from '../../../../global/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { isReactionChosen } from '../../../../global/helpers';\nimport buildClassName from '../../../../util/buildClassName';\nimport { formatIntegerCompact } from '../../../../util/textFormat';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useSelector from '../../../../hooks/data/useSelector';\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport usePrevious from '../../../../hooks/usePrevious';\nimport useShowTransition from '../../../../hooks/useShowTransition';\n\nimport AnimatedCounter from '../../../common/AnimatedCounter';\nimport AvatarList from '../../../common/AvatarList';\nimport PaidReactionEmoji from '../../../common/reactions/PaidReactionEmoji';\nimport ReactionAnimatedEmoji from '../../../common/reactions/ReactionAnimatedEmoji';\nimport Sparkles from '../../../common/Sparkles';\nimport Button from '../../../ui/Button';\n\nimport styles from './ReactionButton.module.scss';\n\nconst REACTION_SIZE = 1.25 * REM;\nconst MAX_SCALE = 3;\n\ntype OwnProps = {\n  chatId: string;\n  messageId: number;\n  reaction: ApiReactionCount;\n  containerId: string;\n  isOwnMessage?: boolean;\n  recentReactors?: ApiPeer[];\n  className?: string;\n  chosenClassName?: string;\n  isOutside?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (reaction: ApiReaction) => void;\n  onPaidClick?: (count: number) => void;\n};\n\nfunction selectStarsState(global: GlobalState) {\n  return global.stars;\n}\n\nconst ReactionButton = ({\n  reaction,\n  containerId,\n  isOwnMessage,\n  recentReactors,\n  className,\n  chosenClassName,\n  chatId,\n  messageId,\n  isOutside,\n  observeIntersection,\n  onClick,\n  onPaidClick,\n}: OwnProps) => {\n  const {\n    openStarsBalanceModal,\n    resetLocalPaidReactions,\n    openPaidReactionModal,\n    requestWave,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLButtonElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const counterRef = useRef<HTMLSpanElement>(null);\n  const animationRef = useRef<Animation>();\n\n  const lang = useLang();\n\n  const isPaid = reaction.reaction.type === 'paid';\n\n  const starsState = useSelector(selectStarsState);\n  const areStarsLoaded = Boolean(starsState);\n\n  const handlePaidClick = useLastCallback((count = 1) => {\n    onPaidClick?.(count);\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    if (reaction.reaction.type === 'paid') {\n      e.stopPropagation(); // Prevent default message double click behavior\n      handlePaidClick();\n\n      return;\n    }\n\n    onClick?.(reaction.reaction);\n  });\n\n  const {\n    isContextMenuOpen,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, reaction.reaction.type !== 'paid', undefined, undefined, undefined, true);\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      openPaidReactionModal({\n        chatId,\n        messageId,\n      });\n\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, isContextMenuOpen, chatId, messageId]);\n\n  useEffectWithPrevDeps(([prevReaction]) => {\n    const amount = reaction.localAmount;\n    const button = ref.current;\n    if (!amount || !button || amount === prevReaction?.localAmount) return;\n\n    if (areStarsLoaded && amount > starsState.balance.amount) {\n      openStarsBalanceModal({\n        originReaction: {\n          chatId,\n          messageId,\n          amount,\n        },\n      });\n      resetLocalPaidReactions({\n        chatId,\n        messageId,\n      });\n      return;\n    }\n\n    if (reaction.localAmount) {\n      const { left, top } = button.getBoundingClientRect();\n      const startX = left + button.offsetWidth / 2;\n      const startY = top + button.offsetHeight / 2;\n      requestWave({ startX, startY });\n    }\n\n    const currentScale = Number(getComputedStyle(button).scale) || 1;\n    animationRef.current?.cancel();\n    // Animate scaling by 20%, and then returning to 1\n    animationRef.current = button.animate([\n      { scale: currentScale },\n      { scale: Math.min(currentScale * 1.2, MAX_SCALE), offset: 0.2 },\n      { scale: 1 },\n    ], {\n      duration: 500 * currentScale,\n      easing: 'ease-out',\n    });\n  }, [reaction, starsState?.balance, areStarsLoaded, chatId, messageId]);\n\n  const prevAmount = usePrevious(reaction.localAmount);\n\n  const {\n    shouldRender: shouldRenderPaidCounter,\n  } = useShowTransition({\n    isOpen: Boolean(reaction.localAmount),\n    ref: counterRef,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  return (\n    <Button\n      className={buildClassName(\n        styles.root,\n        isOwnMessage && styles.own,\n        isPaid && styles.paid,\n        isOutside && styles.outside,\n        isReactionChosen(reaction) && styles.chosen,\n        isReactionChosen(reaction) && chosenClassName,\n        className,\n      )}\n      size=\"tiny\"\n      ref={ref}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n      onClick={handleClick}\n    >\n      {reaction.reaction.type === 'paid' ? (\n        <>\n          <Sparkles preset=\"button\" />\n          <PaidReactionEmoji\n            className={styles.animatedEmoji}\n            containerId={containerId}\n            reaction={reaction.reaction}\n            size={REACTION_SIZE}\n            localAmount={reaction.localAmount}\n            observeIntersection={observeIntersection}\n          />\n          {shouldRenderPaidCounter && (\n            <AnimatedCounter\n              ref={counterRef}\n              text={`+${formatIntegerCompact(lang, reaction.localAmount || prevAmount!)}`}\n              className={styles.paidCounter}\n            />\n          )}\n        </>\n      ) : (\n        <ReactionAnimatedEmoji\n          className={styles.animatedEmoji}\n          containerId={containerId}\n          reaction={reaction.reaction}\n          size={REACTION_SIZE}\n          observeIntersection={observeIntersection}\n        />\n      )}\n      {recentReactors?.length ? (\n        <AvatarList size=\"mini\" peers={recentReactors} />\n      ) : (\n        <AnimatedCounter\n          text={formatIntegerCompact(lang, reaction.count + (reaction.localAmount || 0))}\n          className={styles.counter}\n        />\n      )}\n    </Button>\n  );\n};\n\nexport default memo(ReactionButton);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../../global';\n\nimport type {\n  ApiMessage,\n  ApiPeer,\n  ApiReaction,\n  ApiReactionKey,\n  ApiSavedReactionTag,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\nimport type { ThreadId } from '../../../../types';\n\nimport { getReactionKey, isReactionChosen } from '../../../../global/helpers';\nimport { selectPeer } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { getMessageKey } from '../../../../util/keys/messageKey';\n\nimport useEffectOnce from '../../../../hooks/useEffectOnce';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ReactionButton from './ReactionButton';\nimport SavedTagButton from './SavedTagButton';\n\nimport './Reactions.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  threadId?: ThreadId;\n  isOutside?: boolean;\n  maxWidth?: number;\n  metaChildren?: React.ReactNode;\n  tags?: Record<ApiReactionKey, ApiSavedReactionTag>;\n  isCurrentUserPremium?: boolean;\n  observeIntersection?: ObserveFn;\n  noRecentReactors?: boolean;\n  isAccountFrozen?: boolean;\n};\n\nconst MAX_RECENT_AVATARS = 3;\nconst PAID_SEND_DELAY = 5000;\n\nconst Reactions: FC<OwnProps> = ({\n  message,\n  threadId,\n  isOutside,\n  maxWidth,\n  metaChildren,\n  observeIntersection,\n  noRecentReactors,\n  isCurrentUserPremium,\n  tags,\n  isAccountFrozen,\n}) => {\n  const {\n    toggleReaction,\n    addLocalPaidReaction,\n    updateMiddleSearch,\n    performMiddleSearch,\n    openPremiumModal,\n    resetLocalPaidReactions,\n    showNotification,\n    openFrozenAccountModal,\n  } = getActions();\n  const lang = useOldLang();\n\n  const { results, areTags, recentReactions } = message.reactions!;\n  const withServiceReactions = Boolean(message.areReactionsPossible && message.reactions);\n\n  const totalCount = useMemo(() => (\n    results.reduce((acc, reaction) => acc + reaction.count, 0)\n  ), [results]);\n\n  const recentReactorsByReactionKey = useMemo(() => {\n    const global = getGlobal();\n\n    return recentReactions?.reduce((acc, recentReaction) => {\n      const { reaction, peerId } = recentReaction;\n      const key = getReactionKey(reaction);\n      const peer = selectPeer(global, peerId);\n\n      if (!peer) return acc;\n\n      const peers = acc[key] || [];\n      peers.push(peer);\n      acc[key] = peers;\n      return acc;\n    }, {} as Record<ApiReactionKey, ApiPeer[]>);\n  }, [recentReactions]);\n\n  const props = useMemo(() => {\n    const messageKey = getMessageKey(message);\n    return results.map((reaction) => {\n      const reactionKey = getReactionKey(reaction.reaction);\n      const recentReactors = recentReactorsByReactionKey?.[reactionKey];\n      const shouldHideRecentReactors = totalCount > MAX_RECENT_AVATARS || noRecentReactors;\n      const tag = areTags ? tags?.[reactionKey] : undefined;\n\n      return {\n        reaction,\n        reactionKey,\n        messageKey,\n        recentReactors: !shouldHideRecentReactors ? recentReactors : undefined,\n        isChosen: isReactionChosen(reaction),\n        tag,\n      };\n    });\n  }, [message, noRecentReactors, recentReactorsByReactionKey, results, areTags, tags, totalCount]);\n\n  const handleClick = useLastCallback((reaction: ApiReaction) => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n    if (areTags) {\n      if (!isCurrentUserPremium) {\n        openPremiumModal({\n          initialSection: 'saved_tags',\n        });\n        return;\n      }\n\n      updateMiddleSearch({ chatId: message.chatId, threadId, update: { savedTag: reaction } });\n      performMiddleSearch({ chatId: message.chatId, threadId });\n      return;\n    }\n\n    toggleReaction({\n      chatId: message.chatId,\n      messageId: message.id,\n      reaction,\n    });\n  });\n\n  const paidLocalCount = useMemo(() => results.find((r) => r.reaction.type === 'paid')?.localAmount || 0, [results]);\n\n  const handlePaidClick = useLastCallback((count: number) => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    addLocalPaidReaction({\n      chatId: message.chatId,\n      messageId: message.id,\n      count,\n    });\n  });\n\n  useEffect(() => {\n    if (!paidLocalCount) return;\n\n    showNotification({\n      localId: getMessageKey(message),\n      title: lang('StarsSentTitle'),\n      message: lang('StarsSentText', paidLocalCount),\n      actionText: lang('StarsSentUndo'),\n      cacheBreaker: paidLocalCount.toString(),\n      action: {\n        action: 'resetLocalPaidReactions',\n        payload: { chatId: message.chatId, messageId: message.id },\n      },\n      dismissAction: {\n        action: 'sendPaidReaction',\n        payload: { chatId: message.chatId, messageId: message.id },\n      },\n      duration: PAID_SEND_DELAY,\n      shouldShowTimer: true,\n      disableClickDismiss: true,\n      icon: 'star',\n    });\n  }, [lang, message, paidLocalCount]);\n\n  const handleRemoveReaction = useLastCallback((reaction: ApiReaction) => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    toggleReaction({\n      chatId: message.chatId,\n      messageId: message.id,\n      reaction,\n    });\n  });\n\n  // Reset paid reactions on unmount\n  useEffectOnce(() => () => {\n    resetLocalPaidReactions({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n  });\n\n  return (\n    <div\n      className={buildClassName(\n        'Reactions',\n        isOutside && 'is-outside',\n        withServiceReactions && 'is-service',\n      )}\n      style={maxWidth ? `max-width: ${maxWidth}px` : undefined}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {props.map(({\n        reaction, recentReactors, messageKey, reactionKey, isChosen, tag,\n      }) => (\n        areTags ? (\n          <SavedTagButton\n            key={reactionKey}\n            className=\"message-reaction\"\n            chosenClassName=\"chosen\"\n            containerId={messageKey}\n            isOwnMessage={message.isOutgoing}\n            isChosen={isChosen}\n            reaction={reaction.reaction as ApiReaction}\n            tag={tag}\n            withContextMenu={isCurrentUserPremium}\n            onClick={handleClick}\n            onRemove={handleRemoveReaction}\n            observeIntersection={observeIntersection}\n          />\n        ) : (\n          <ReactionButton\n            key={reactionKey}\n            chatId={message.chatId}\n            messageId={message.id}\n            className=\"message-reaction\"\n            chosenClassName=\"chosen\"\n            containerId={messageKey}\n            isOwnMessage={message.isOutgoing}\n            recentReactors={recentReactors}\n            isOutside={isOutside}\n            reaction={reaction}\n            onClick={handleClick}\n            onPaidClick={handlePaidClick}\n            observeIntersection={observeIntersection}\n          />\n        )\n      ))}\n      {metaChildren}\n    </div>\n  );\n};\n\nexport default memo(Reactions);\n","// extracted by mini-css-extract-plugin\nexport default {\"subtitle\":\"cGrbcqD_\"};","import React, { memo, useState } from '../../../lib/teact/teact';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport InputText from '../../ui/InputText';\nimport Modal from '../../ui/Modal';\n\nimport styles from './PromptDialog.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  title: string;\n  subtitle?: React.ReactNode;\n  placeholder: string;\n  submitText?: string;\n  maxLength?: number;\n  initialValue?: string;\n  onClose: NoneToVoidFunction;\n  onSubmit: (text: string) => void;\n};\n\nconst PromptDialog = ({\n  isOpen,\n  title,\n  subtitle,\n  placeholder,\n  submitText,\n  maxLength,\n  initialValue = '',\n  onClose,\n  onSubmit,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const [text, setText] = useState(initialValue);\n\n  const handleTextChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setText(e.target.value);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    onSubmit(text);\n  });\n\n  return (\n    <Modal\n      className=\"narrow\"\n      title={title}\n      isOpen={isOpen}\n      onClose={onClose}\n      isSlim\n    >\n      {Boolean(subtitle) && (\n        <div className={styles.subtitle}>\n          {subtitle}\n        </div>\n      )}\n      <InputText\n        placeholder={placeholder}\n        value={text}\n        onChange={handleTextChange}\n        maxLength={maxLength}\n        teactExperimentControlled\n      />\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" onClick={handleSubmit}>\n          {submitText || lang('Save')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(PromptDialog);\n","import React, { memo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiReaction,\n  ApiSavedReactionTag,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ReactionAnimatedEmoji from '../../../common/reactions/ReactionAnimatedEmoji';\nimport PromptDialog from '../../../modals/prompt/PromptDialog';\nimport Button from '../../../ui/Button';\nimport Menu from '../../../ui/Menu';\nimport MenuItem from '../../../ui/MenuItem';\n\nimport styles from './ReactionButton.module.scss';\n\nconst REACTION_SIZE = 1.25 * REM;\nconst TITLE_MAX_LENGTH = 15;\nconst LOOP_LIMIT = 1;\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  tag?: ApiSavedReactionTag;\n  containerId: string;\n  isChosen?: boolean;\n  isOwnMessage?: boolean;\n  withCount?: boolean;\n  className?: string;\n  chosenClassName?: string;\n  isDisabled?: boolean;\n  withContextMenu?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (reaction: ApiReaction) => void;\n  onRemove?: (reaction: ApiReaction) => void;\n};\n\nconst SavedTagButton = ({\n  reaction,\n  tag,\n  containerId,\n  isChosen,\n  isOwnMessage,\n  className,\n  chosenClassName,\n  withCount,\n  isDisabled,\n  withContextMenu,\n  observeIntersection,\n  onClick,\n  onRemove,\n}: OwnProps) => {\n  const { editSavedReactionTag } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLButtonElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const [isRenamePromptOpen, openRenamePrompt, closeRenamePrompt] = useFlag();\n\n  const { title, count } = tag || {};\n  const hasText = Boolean(title || (withCount && count));\n\n  const handleClick = useLastCallback(() => {\n    onClick?.(reaction);\n  });\n\n  const handleRemoveClick = useLastCallback(() => {\n    onRemove?.(reaction);\n  });\n\n  const handleRenameTag = useLastCallback((newTitle: string) => {\n    editSavedReactionTag({\n      reaction,\n      title: newTitle,\n    });\n    closeRenamePrompt();\n  });\n\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, !withContextMenu, undefined, undefined, undefined, true);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getLayout = useLastCallback(() => ({ withPortal: true, shouldAvoidNegativePosition: true }));\n\n  if (withCount && count === 0) {\n    return undefined;\n  }\n\n  return (\n    <Button\n      className={buildClassName(\n        styles.root,\n        styles.tag,\n        isOwnMessage && styles.own,\n        isChosen && styles.chosen,\n        isChosen && chosenClassName,\n        isDisabled && styles.disabled,\n        className,\n      )}\n      size=\"tiny\"\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n      ref={ref}\n    >\n      <ReactionAnimatedEmoji\n        className={styles.animatedEmoji}\n        containerId={containerId}\n        reaction={reaction}\n        loopLimit={LOOP_LIMIT}\n        size={REACTION_SIZE}\n        observeIntersection={observeIntersection}\n      />\n      {hasText && (\n        <span className={styles.tagText}>\n          {title && <span>{title}</span>}\n          {withCount && <span>{count}</span>}\n        </span>\n      )}\n      <svg\n        className={styles.tail}\n        width=\"15\"\n        height=\"30\"\n        viewBox=\"0 0 15 30\"\n      >\n        <path className={styles.tailFill} d=\"m 0,30 c 3.1855,0 6.1803,-1.5176 8.0641,-4.0864 l 5.835,-7.9568 c 1.2906,-1.7599 1.2906,-4.1537 0,-5.9136 L 8.0641,4.08636 C 6.1803,1.51761 3.1855,0 0,0\" />\n      </svg>\n      {withContextMenu && (\n        <PromptDialog\n          isOpen={isRenamePromptOpen}\n          maxLength={TITLE_MAX_LENGTH}\n          title={lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          subtitle={lang('SavedTagLabelTagText')}\n          placeholder={lang('SavedTagLabelPlaceholder')}\n          initialValue={tag?.title}\n          onClose={closeRenamePrompt}\n          onSubmit={handleRenameTag}\n        />\n      )}\n      {withContextMenu && contextMenuAnchor && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          <MenuItem icon=\"tag-filter\" onClick={handleClick}>\n            {lang('SavedTagFilterByTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-name\" onClick={openRenamePrompt}>\n            {lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-crossed\" destructive onClick={handleRemoveClick}>\n            {lang('SavedTagRemoveTag')}\n          </MenuItem>\n        </Menu>\n      )}\n    </Button>\n  );\n};\n\nexport default memo(SavedTagButton);\n","import type {\n  ApiInputInvoice,\n  ApiInputSavedStarGift,\n  ApiMessage,\n  ApiRequestInputInvoice,\n  ApiRequestInputSavedStarGift,\n  ApiStarsAmount,\n  ApiStarsTransaction,\n  ApiStarsTransactionPeer,\n  ApiStarsTransactionPeerPeer,\n} from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { LangFn } from '../../util/localization';\nimport type { GlobalState } from '../types';\n\nimport arePropsShallowEqual from '../../util/arePropsShallowEqual';\nimport { selectChat, selectPeer, selectUser } from '../selectors';\n\nexport function getRequestInputInvoice<T extends GlobalState>(\n  global: T, inputInvoice: ApiInputInvoice,\n): ApiRequestInputInvoice | undefined {\n  if (inputInvoice.type === 'slug') return inputInvoice;\n\n  if (inputInvoice.type === 'stargift') {\n    const {\n      peerId, shouldHideName, giftId, message, shouldUpgrade,\n    } = inputInvoice;\n    const peer = selectPeer(global, peerId);\n\n    if (!peer) return undefined;\n\n    return {\n      type: 'stargift',\n      peer,\n      shouldHideName,\n      giftId,\n      message,\n      shouldUpgrade,\n    };\n  }\n\n  if (inputInvoice.type === 'starsgift') {\n    const {\n      userId, stars, amount, currency,\n    } = inputInvoice;\n    const user = selectUser(global, userId);\n\n    if (!user) return undefined;\n\n    return {\n      type: 'stars',\n      purpose: {\n        type: 'starsgift',\n        user,\n        stars,\n        amount,\n        currency,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'stars') {\n    const {\n      stars, amount, currency,\n    } = inputInvoice;\n\n    return {\n      type: 'stars',\n      purpose: {\n        type: 'stars',\n        stars,\n        amount,\n        currency,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'chatInviteSubscription') {\n    const { hash } = inputInvoice;\n\n    return {\n      type: 'chatInviteSubscription',\n      hash,\n    };\n  }\n\n  if (inputInvoice.type === 'message') {\n    const chat = selectChat(global, inputInvoice.chatId);\n    if (!chat) {\n      return undefined;\n    }\n    return {\n      type: 'message',\n      chat,\n      messageId: inputInvoice.messageId,\n    };\n  }\n\n  if (inputInvoice.type === 'premiumGiftStars') {\n    const {\n      months, userId, message,\n    } = inputInvoice;\n    const user = selectUser(global, userId);\n\n    if (!user) return undefined;\n\n    return {\n      type: 'premiumGiftStars',\n      months,\n      message,\n      user,\n    };\n  }\n\n  if (inputInvoice.type === 'giftcode') {\n    const {\n      userIds, boostChannelId, amount, currency, option, message,\n    } = inputInvoice;\n    const users = userIds.map((id) => selectUser(global, id)).filter(Boolean);\n    const boostChannel = boostChannelId ? selectChat(global, boostChannelId) : undefined;\n\n    return {\n      type: 'giveaway',\n      option,\n      purpose: {\n        type: 'giftcode',\n        amount,\n        currency,\n        users,\n        boostChannel,\n        message,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'starsgiveaway') {\n    const {\n      chatId, additionalChannelIds, amount, currency, untilDate, areWinnersVisible, countries,\n      isOnlyForNewSubscribers, prizeDescription, stars, users,\n    } = inputInvoice;\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return undefined;\n    }\n    const additionalChannels = additionalChannelIds?.map((id) => selectChat(global, id)).filter(Boolean);\n\n    return {\n      type: 'starsgiveaway',\n      purpose: {\n        type: 'starsgiveaway',\n        amount,\n        currency,\n        chat,\n        additionalChannels,\n        untilDate,\n        areWinnersVisible,\n        countries,\n        isOnlyForNewSubscribers,\n        prizeDescription,\n        stars,\n        users,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'giveaway') {\n    const {\n      chatId, additionalChannelIds, amount, currency, option, untilDate, areWinnersVisible, countries,\n      isOnlyForNewSubscribers, prizeDescription,\n    } = inputInvoice;\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return undefined;\n    }\n    const additionalChannels = additionalChannelIds?.map((id) => selectChat(global, id)).filter(Boolean);\n\n    return {\n      type: 'giveaway',\n      option,\n      purpose: {\n        type: 'giveaway',\n        amount,\n        currency,\n        chat,\n        additionalChannels,\n        untilDate,\n        areWinnersVisible,\n        countries,\n        isOnlyForNewSubscribers,\n        prizeDescription,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'stargiftUpgrade') {\n    const { inputSavedGift, shouldKeepOriginalDetails } = inputInvoice;\n    const savedGift = getRequestInputSavedStarGift(global, inputSavedGift);\n    if (!savedGift) return undefined;\n\n    return {\n      type: 'stargiftUpgrade',\n      inputSavedGift: savedGift,\n      shouldKeepOriginalDetails,\n    };\n  }\n\n  if (inputInvoice.type === 'stargiftTransfer') {\n    const { inputSavedGift, recipientId } = inputInvoice;\n    const savedGift = getRequestInputSavedStarGift(global, inputSavedGift);\n    const peer = selectPeer(global, recipientId);\n    if (!savedGift || !peer) return undefined;\n\n    return {\n      type: 'stargiftTransfer',\n      inputSavedGift: savedGift,\n      recipient: peer,\n    };\n  }\n\n  return undefined;\n}\n\nexport function getRequestInputSavedStarGift<T extends GlobalState>(\n  global: T, inputGift: ApiInputSavedStarGift,\n): ApiRequestInputSavedStarGift | undefined {\n  if (inputGift.type === 'user') return inputGift;\n\n  if (inputGift.type === 'chat') {\n    const chat = selectChat(global, inputGift.chatId);\n    if (!chat) return undefined;\n\n    return {\n      type: 'chat',\n      chat,\n      savedId: inputGift.savedId,\n    };\n  }\n\n  return undefined;\n}\n\nexport function buildStarsTransactionCustomPeer(\n  peer: Exclude<ApiStarsTransactionPeer, ApiStarsTransactionPeerPeer>,\n): CustomPeer {\n  if (peer.type === 'appStore') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.AppleTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.AppleTopUp.Subtitle',\n      peerColorId: 5,\n    };\n  }\n\n  if (peer.type === 'playMarket') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.GoogleTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.GoogleTopUp.Subtitle',\n      peerColorId: 3,\n    };\n  }\n\n  if (peer.type === 'fragment') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.FragmentTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.FragmentTopUp.Subtitle',\n      customPeerAvatarColor: '#000000',\n    };\n  }\n\n  if (peer.type === 'premiumBot') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.PremiumBotTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.PremiumBotTopUp.Subtitle',\n      peerColorId: 1,\n      withPremiumGradient: true,\n    };\n  }\n\n  if (peer.type === 'ads') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.TelegramAds.Title',\n      subtitleKey: 'Stars.Intro.Transaction.TelegramAds.Subtitle',\n      peerColorId: 2,\n    };\n  }\n\n  if (peer.type === 'api') {\n    return {\n      avatarIcon: 'bots',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.TelegramBotApi.Title',\n      subtitleKey: 'Stars.Intro.Transaction.TelegramBotApi.Subtitle',\n      peerColorId: 4,\n    };\n  }\n\n  return {\n    avatarIcon: 'star',\n    isCustomPeer: true,\n    titleKey: 'Stars.Intro.Transaction.Unsupported.Title',\n    subtitleKey: 'Stars.Intro.Transaction.Unsupported.Title',\n    peerColorId: 0,\n  };\n}\n\nexport function formatStarsTransactionAmount(lang: LangFn, starsAmount: ApiStarsAmount) {\n  const amount = starsAmount.amount + starsAmount.nanos / 1e9;\n  if (amount < 0) {\n    return `- ${lang.number(Math.abs(amount))}`;\n  }\n\n  return `+ ${lang.number(amount)}`;\n}\n\nexport function formatStarsAmount(lang: LangFn, starsAmount: ApiStarsAmount) {\n  return lang.number(starsAmount.amount + starsAmount.nanos / 1e9);\n}\n\nexport function getStarsTransactionFromGift(message: ApiMessage): ApiStarsTransaction | undefined {\n  const { action } = message.content;\n\n  if (action?.type !== 'giftStars') return undefined;\n\n  const { transactionId, stars } = action;\n\n  return {\n    id: transactionId,\n    stars: {\n      amount: stars,\n      nanos: 0,\n    },\n    peer: {\n      type: 'peer',\n      id: message.isOutgoing ? message.chatId : (message.senderId || message.chatId),\n    },\n    date: message.date,\n    isGift: true,\n    isMyGift: message.isOutgoing || undefined,\n  };\n}\n\nexport function getPrizeStarsTransactionFromGiveaway(message: ApiMessage): ApiStarsTransaction | undefined {\n  const { action } = message.content;\n\n  if (action?.type !== 'prizeStars') return undefined;\n\n  const { transactionId, stars, boostPeerId } = action;\n\n  return {\n    id: transactionId,\n    stars: {\n      amount: stars,\n      nanos: 0,\n    },\n    peer: {\n      type: 'peer',\n      id: boostPeerId,\n    },\n    date: message.date,\n    giveawayPostId: message.id,\n  };\n}\n\nexport function areInputSavedGiftsEqual(one: ApiInputSavedStarGift, two: ApiInputSavedStarGift) {\n  return arePropsShallowEqual(one, two);\n}\n","import { useEffect } from '../../lib/teact/teact';\n\nimport useLastCallback from '../useLastCallback';\n\nfunction useTimeout(callback: NoneToVoidFunction, delay?: number) {\n  const savedCallback = useLastCallback(callback);\n\n  useEffect(() => {\n    if (typeof delay !== 'number') {\n      return undefined;\n    }\n\n    const id = setTimeout(() => savedCallback(), delay);\n    return () => clearTimeout(id);\n  }, [delay]);\n}\n\nexport default useTimeout;\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../util/browser/windowEnvironment';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useCanvasBlur(\n  dataUri?: string,\n  isDisabled = false,\n  withRaf?: boolean,\n  radius = RADIUS,\n  preferredWidth?: number,\n  preferredHeight?: number,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const isStarted = useRef();\n\n  useSyncEffect(() => {\n    if (!isDisabled) {\n      isStarted.current = false;\n    }\n  }, [dataUri, isDisabled]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!dataUri || !canvas || isDisabled || isStarted.current) {\n      return;\n    }\n\n    isStarted.current = true;\n\n    const img = new Image();\n\n    const processBlur = () => {\n      const width = preferredWidth || img.width;\n      const height = preferredHeight || img.height;\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${radius}px)`;\n        }\n\n        ctx.drawImage(img, -radius * 2, -radius * 2, width + radius * 4, height + radius * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, radius, ITERATIONS);\n        }\n      });\n    };\n\n    img.onload = () => {\n      if (withRaf) {\n        requestMeasure(processBlur);\n      } else {\n        processBlur();\n      }\n    };\n\n    img.src = dataUri;\n  }, [dataUri, isDisabled, preferredHeight, preferredWidth, radius, withRaf]);\n\n  return canvasRef;\n}\n","import { useEffect, useState } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ThemeKey } from '../types';\n\nimport { CUSTOM_BG_CACHE_NAME, DARK_THEME_PATTERN_COLOR, DEFAULT_PATTERN_COLOR } from '../config';\nimport * as cacheApi from '../util/cacheApi';\nimport { preloadImage } from '../util/files';\n\nconst useCustomBackground = (theme: ThemeKey, settingValue?: string, onBgReady?: ()=>void) => {\n  const { setThemeSettings } = getActions();\n  const [value, setValue] = useState(settingValue);\n\n  useEffect(() => {\n    if (!settingValue) {\n      setValue(undefined);\n      onBgReady?.();\n      return;\n    }\n\n    if (settingValue.startsWith('#')) {\n      setValue(settingValue);\n      onBgReady?.();\n    } else {\n      cacheApi.fetch(CUSTOM_BG_CACHE_NAME, theme, cacheApi.Type.Blob)\n        .then((blob) => {\n          const url = URL.createObjectURL(blob);\n          preloadImage(url)\n            .then(() => {\n              setValue(`url(${url})`);\n              onBgReady?.();\n            });\n        })\n        .catch(() => {\n          setThemeSettings({\n            theme,\n            fill: undefined,\n            background: undefined,\n            backgroundColor: undefined,\n            isBlurred: true,\n            patternColor: theme === 'dark' ? DARK_THEME_PATTERN_COLOR : DEFAULT_PATTERN_COLOR,\n          });\n        });\n    }\n  }, [settingValue, theme, onBgReady]);\n\n  return settingValue ? value : undefined;\n};\n\nexport default useCustomBackground;\n","import { useEffect } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiMessage } from '../api/types';\n\nexport default function useEnsureMessage(\n  chatId: string,\n  messageId?: number,\n  message?: ApiMessage,\n  replyOriginForId?: number,\n  isDisabled?: boolean,\n) {\n  const { loadMessage } = getActions();\n\n  useEffect(() => {\n    if (isDisabled) return;\n    if (messageId && !message) {\n      loadMessage({ chatId, messageId: messageId!, replyOriginForId: replyOriginForId! });\n    }\n  }, [isDisabled, chatId, message, messageId, replyOriginForId]);\n}\n","import { useEffect } from '../lib/teact/teact';\n\nimport {\n  addChatsCountCallback,\n  addOrderedIdsCallback, addUnreadChatsByFolderIdCallback,\n  addUnreadCountersCallback,\n  getChatsCount,\n  getOrderedIds, getUnreadChatsByFolderId,\n  getUnreadCounters,\n} from '../util/folderManager';\nimport useForceUpdate from './useForceUpdate';\n\nexport function useFolderManagerForOrderedIds(folderId: number) {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addOrderedIdsCallback(folderId, forceUpdate), [folderId, forceUpdate]);\n\n  return getOrderedIds(folderId);\n}\n\nexport function useFolderManagerForUnreadCounters() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadCountersCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadCounters();\n}\n\nexport function useFolderManagerForChatsCount() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addChatsCountCallback(forceUpdate), [forceUpdate]);\n\n  return getChatsCount();\n}\n\nexport function useFolderManagerForUnreadChatsByFolder() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadChatsByFolderIdCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadChatsByFolderId();\n}\n","import { useEffect } from '../lib/teact/teact';\n\nconst useHorizontalScroll = (\n  containerRef: React.RefObject<HTMLDivElement>,\n  isDisabled?: boolean,\n  shouldPreventDefault = false,\n) => {\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    const container = containerRef.current!;\n\n    function handleScroll(e: WheelEvent) {\n      // Ignore horizontal scroll and let it work natively (e.g. on touchpad)\n      if (!e.deltaX) {\n        container.scrollLeft += e.deltaY / 4;\n        if (shouldPreventDefault) e.preventDefault();\n      }\n    }\n\n    container.addEventListener('wheel', handleScroll, { passive: !shouldPreventDefault });\n\n    return () => {\n      container.removeEventListener('wheel', handleScroll);\n    };\n  }, [containerRef, isDisabled, shouldPreventDefault]);\n};\n\nexport default useHorizontalScroll;\n","import { useRef } from '../lib/teact/teact';\n\n// This is not render-dependent and will never allow previous to match current\nexport default function usePrevious<T extends any>(current: T) {\n  const prevRef = useRef<T>();\n  const lastRef = useRef<T>();\n\n  if (lastRef.current !== current) {\n    prevRef.current = lastRef.current;\n  }\n\n  lastRef.current = current;\n\n  return prevRef.current;\n}\n","import { beginHeavyAnimation, useRef } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport { isAnimatingScroll } from '../util/animateScroll';\nimport useLastCallback from './useLastCallback';\nimport useResizeObserver from './useResizeObserver';\nimport useThrottledCallback from './useThrottledCallback';\n\nconst BOTTOM_FOCUS_SCROLL_THRESHOLD = 5;\nconst THROTTLE_MS = 300;\nconst RESIZE_ANIMATION_DURATION = 400;\n\nfunction useMessageResizeObserver(\n  ref: React.RefObject<HTMLElement> | undefined,\n  shouldFocusOnResize = false,\n) {\n  const {\n    focusLastMessage,\n  } = getActions();\n  const messageHeightRef = useRef(0);\n\n  const handleResize = useLastCallback(\n    (entry) => {\n      const lastHeight = messageHeightRef.current;\n\n      const newHeight = entry.contentRect.height;\n      messageHeightRef.current = newHeight;\n\n      if (isAnimatingScroll() || !lastHeight || newHeight <= lastHeight) return;\n\n      const container = entry.target.closest('.MessageList');\n      if (!container) return;\n\n      beginHeavyAnimation(RESIZE_ANIMATION_DURATION);\n\n      const resizeDiff = newHeight - lastHeight;\n      const { offsetHeight, scrollHeight, scrollTop } = container;\n      const currentScrollBottom = Math.round(scrollHeight - scrollTop - offsetHeight);\n      const previousScrollBottom = currentScrollBottom - resizeDiff;\n\n      if (previousScrollBottom <= BOTTOM_FOCUS_SCROLL_THRESHOLD) {\n        focusLastMessage();\n      }\n    },\n  );\n\n  const throttledResize = useThrottledCallback(handleResize, [handleResize], THROTTLE_MS, false);\n\n  useResizeObserver(ref, throttledResize, !shouldFocusOnResize);\n}\n\nexport default useMessageResizeObserver;\n","import useDebouncedCallback from './useDebouncedCallback';\n\nexport default function useRunDebounced(ms: number, noFirst?: boolean, noLast?: boolean, deps: any = []) {\n  return useDebouncedCallback((cb: NoneToVoidFunction) => {\n    cb();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './CalendarModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst CalendarModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CalendarModal = useModuleLoader(Bundles.Extra, 'CalendarModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CalendarModal ? <CalendarModal {...props} /> : undefined;\n};\n\nexport default CalendarModalAsync;\n","import React, { useState } from '../lib/teact/teact';\n\nimport { SCHEDULED_WHEN_ONLINE } from '../config';\nimport { getDayStartAt } from '../util/dates/dateFormat';\nimport { getServerTimeOffset } from '../util/serverTime';\nimport useLastCallback from './useLastCallback';\nimport useOldLang from './useOldLang';\n\nimport CalendarModal from '../components/common/CalendarModal.async';\n\ntype OnScheduledCallback = (scheduledAt: number) => void;\n\nconst useSchedule = (\n  canScheduleUntilOnline?: boolean,\n  onCancel?: () => void,\n  openAt?: number,\n) => {\n  const lang = useOldLang();\n  const [onScheduled, setOnScheduled] = useState<OnScheduledCallback | undefined>();\n\n  const handleMessageSchedule = useLastCallback((date: Date, isWhenOnline = false) => {\n    // Scheduled time can not be less than 10 seconds in future\n    const scheduledAt = Math.round(Math.max(date.getTime(), Date.now() + 60 * 1000) / 1000)\n      + (isWhenOnline ? 0 : getServerTimeOffset());\n    onScheduled?.(scheduledAt);\n    setOnScheduled(undefined);\n  });\n\n  const handleMessageScheduleUntilOnline = useLastCallback(() => {\n    handleMessageSchedule(new Date(SCHEDULED_WHEN_ONLINE * 1000), true);\n  });\n\n  const handleCloseCalendar = useLastCallback(() => {\n    setOnScheduled(undefined);\n    onCancel?.();\n  });\n\n  const requestCalendar = useLastCallback((whenScheduled: OnScheduledCallback) => {\n    setOnScheduled(() => whenScheduled);\n  });\n\n  const scheduledDefaultDate = openAt ? new Date(openAt * 1000) : new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  const calendar = (\n    <CalendarModal\n      isOpen={Boolean(onScheduled)}\n      withTimePicker\n      selectedAt={scheduledDefaultDate.getTime()}\n      maxAt={getDayStartAt(scheduledMaxDate)}\n      isFutureMode\n      secondButtonLabel={canScheduleUntilOnline ? lang('Schedule.SendWhenOnline') : undefined}\n      onClose={handleCloseCalendar}\n      onSubmit={handleMessageSchedule}\n      onSecondButtonClick={canScheduleUntilOnline ? handleMessageScheduleUntilOnline : undefined}\n    />\n  );\n\n  return [requestCalendar, calendar] as const;\n};\n\nexport default useSchedule;\n","import type { AnimBgColorPoints } from './BaseAnimBackgroundRender';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\n\nimport { BaseAnimBgRender, keyPoints } from './BaseAnimBackgroundRender';\n\nexport const VERTEX_SHADER = `\nattribute vec2 a_position;\n\nvoid main() {\n gl_Position = vec4(a_position, 1, 1);\n}`;\n\nexport const FRAGMENT_SHADER = `\nprecision highp float;\n\nstruct ColorPoint {\n  vec4 color;\n  vec2 pos;\n  vec2 prevPos;\n};\n\nuniform ColorPoint colorPoints[4];\nuniform vec2 resolution;\nuniform float transitionFactor;\n\nvoid main() {\n  vec2 position = gl_FragCoord.xy / resolution.xy;\n\n  position.y = 1.0 - position.y;\n\n  float centerDistanceX = position.x - 0.5;\n  float centerDistanceY = position.y - 0.5;\n  float centerDistance = sqrt(centerDistanceX * centerDistanceX + centerDistanceY * centerDistanceY);\n  float swirlFactor = 0.35 * centerDistance;\n  float theta = swirlFactor * swirlFactor * 0.8 * 8.0;\n  float sinTheta = sin(theta);\n  float cosTheta = cos(theta);\n\n  float pixelX = max(0.0, min(1.0, 0.5 + centerDistanceX * cosTheta - centerDistanceY * sinTheta));\n  float pixelY = max(0.0, min(1.0, 0.5 + centerDistanceX * sinTheta + centerDistanceY * cosTheta));\n\n  vec2 pixelPos = vec2(pixelX, 1.-pixelY);\n\n  float p = 4.0;\n  float dpt = 0.0;\n  vec4 gradColor = vec4(0.0, 0.0, 0.0, 0.0);\n  for(int i = 0; i < 4; i++) {\n    vec2 pointPos = colorPoints[i].pos * (1.0 - transitionFactor) + colorPoints[i].prevPos * transitionFactor;\n    float distance = max(0.0, 0.9 - distance(pixelPos, pointPos));\n    float dpp = pow(distance, p);\n    dpt += dpp;\n    gradColor += colorPoints[i].color * dpp;\n  }\n\n  gradColor.w = dpt;\n  gl_FragColor = gradColor / dpt;\n}\n`;\n\nexport function compileShader(\n  gl: WebGLRenderingContext,\n  type: number,\n  source: string,\n) {\n  const shader = gl.createShader(type)!;\n  gl.shaderSource(shader, source);\n  gl.compileShader(shader);\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n    throw new Error(`Failed to compile shader: ${gl.getShaderInfoLog(shader)}`);\n  }\n  return shader;\n}\n\ntype GLColorPoint = {\n  colorLoc: WebGLUniformLocation;\n  posLoc: WebGLUniformLocation;\n  prevPosLoc: WebGLUniformLocation;\n};\n\ntype GLState = {\n  prog: WebGLProgram;\n  posBuf: WebGLBuffer;\n  resolutionLoc: WebGLUniformLocation;\n  colorPoints: GLColorPoint[];\n  transitionFactorLoc: WebGLUniformLocation;\n};\n\nexport class AnimBgRender extends BaseAnimBgRender {\n  private gl: WebGLRenderingContext | null;\n\n  private glState: GLState | null;\n\n  public constructor(\n    canvas: HTMLCanvasElement | null,\n    container: HTMLDivElement | null,\n  ) {\n    super(canvas, container);\n\n    // @ts-ignore\n    this.gl = this.canvas.getContext('webgl');\n    if (!this.gl && this.canvas instanceof HTMLCanvasElement) {\n      this.gl = this.canvas.getContext(\n      // @ts-ignore\n        'experimental-webgl',\n      ) as WebGLRenderingContext;\n    }\n\n    // eslint-disable-next-line no-null/no-null\n    this.glState = null;\n\n    try {\n      this.glState = this.createGLState();\n      this.syncState();\n      this.render();\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.error('Failed to create GL state', e);\n    }\n  }\n\n  public renderBitmap(\n    [width, height]: [number, number],\n    colors: AnimBgColorPoints,\n    pos: number = 0,\n    transitionProgress: number = 0,\n  ): ImageBitmap | null {\n    if (!(this.canvas instanceof OffscreenCanvas)) throw new Error('Can render bitmap only offscreen');\n    // eslint-disable-next-line no-null/no-null\n    if (!this.gl) return null;\n\n    requestMutation(() => {\n      this.canvas.width = width;\n      this.canvas.height = height;\n    });\n    this.curPos = pos;\n    this.colors = colors;\n    this.syncState();\n    this.render(transitionProgress);\n    return this.canvas.transferToImageBitmap();\n  }\n\n  private createGLState(): GLState {\n    if (!this.gl) throw new Error('No GL context');\n    const gl = this.gl;\n\n    const prog = gl.createProgram();\n    if (!prog) {\n      throw new Error('No WebGLProgram found');\n    }\n\n    gl.attachShader(prog, compileShader(gl, gl.VERTEX_SHADER, VERTEX_SHADER));\n    gl.attachShader(\n      prog,\n      compileShader(this.gl, gl.FRAGMENT_SHADER, FRAGMENT_SHADER),\n    );\n    gl.linkProgram(prog);\n    gl.useProgram(prog);\n\n    const posLoc = gl.getAttribLocation(prog, 'a_position');\n    const posBuf = gl.createBuffer();\n    if (!posBuf) {\n      throw new Error('No WebGL buffer created');\n    }\n    gl.bindBuffer(gl.ARRAY_BUFFER, posBuf);\n    gl.bufferData(\n      gl.ARRAY_BUFFER,\n      new Float32Array(\n        [\n          [-1, -1, 1, -1, -1, 1],\n          [-1, 1, 1, -1, 1, 1],\n        ].flat(),\n      ),\n      gl.STATIC_DRAW,\n    );\n\n    gl.enableVertexAttribArray(posLoc);\n    gl.vertexAttribPointer(\n      posLoc,\n      2, // 2 components per iteration\n      gl.FLOAT, // the data is 32bit floats\n      false, // don't normalize the data\n      0, // 0 = move forward size * sizeof(type) each iteration to get the next position\n      0, // start at the beginning of the buffer\n    );\n\n    const colorPoints: GLColorPoint[] = [];\n    for (let i = 0; i < 4; i++) {\n      const colorLoc = gl.getUniformLocation(prog, `colorPoints[${i}].color`)!;\n      const posLoc2 = gl.getUniformLocation(prog, `colorPoints[${i}].pos`)!;\n      const prevPosLoc = gl.getUniformLocation(\n        prog,\n        `colorPoints[${i}].prevPos`,\n      )!;\n      colorPoints.push({ colorLoc, posLoc: posLoc2, prevPosLoc });\n    }\n\n    return {\n      prog,\n      posBuf,\n      colorPoints,\n      resolutionLoc: gl.getUniformLocation(prog, 'resolution')!,\n      transitionFactorLoc: gl.getUniformLocation(prog, 'transitionFactor')!,\n    };\n  }\n\n  protected syncState() {\n    if (!this.gl || !this.glState) return;\n    this.shouldStop = false;\n\n    const gl = this.gl;\n    gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n    gl.useProgram(this.glState.prog);\n    gl.uniform2fv(this.glState.resolutionLoc, [\n      gl.canvas.width,\n      gl.canvas.height,\n    ]);\n\n    for (let i = 0; i < 4; i++) {\n      const { colorLoc, posLoc, prevPosLoc } = this.glState.colorPoints[i];\n      const c = this.colors[i];\n      gl.uniform4f(colorLoc, c[0] / 255, c[1] / 255, c[2] / 255, c[3] / 255);\n      gl.uniform2f(posLoc, ...keyPoints[(this.curPos + i * 2) % 8]);\n      gl.uniform2f(prevPosLoc, ...keyPoints[(this.curPos + 7 + i * 2) % 8]);\n    }\n  }\n\n  protected render(progress?: number) {\n    if (!this.gl || !this.glState) {\n      const c = this.colors[0];\n      if (this.canvas instanceof HTMLCanvasElement) {\n        this.canvas.style.backgroundColor = `rgb(${c[0]}, ${c[1]}, ${c[2]})`;\n      }\n      return;\n    }\n\n    const gl = this.gl;\n    const { posBuf, transitionFactorLoc } = this.glState;\n    gl.useProgram(this.glState.prog);\n    gl.bindBuffer(gl.ARRAY_BUFFER, posBuf);\n    gl.uniform1f(\n      transitionFactorLoc,\n      1 - (progress ?? this.getTransitionProgress()),\n    );\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n  }\n}\n","/* eslint-disable no-bitwise */\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { fastRaf } from './schedulers';\n\nexport type AnimBgColor = [number, number, number, number];\nexport type AnimBgColorPoints = [\n  AnimBgColor,\n  AnimBgColor,\n  AnimBgColor,\n  AnimBgColor,\n];\n\nexport function transformStringsToColors(colors: {\n  first?: number;\n  second?: number;\n  third?: number;\n  fourth?: number;\n}): [AnimBgColor, AnimBgColor, AnimBgColor, AnimBgColor] {\n  if (!colors.first) colors.first = 0xffffff;\n\n  const fi = [\n    colors.first & 0xff,\n    (colors.first >> 8) & 0xff,\n    (colors.first >> 16) & 0xff,\n    0xff,\n  ];\n\n  if (!colors.second) colors.second = colors.first;\n  const se = [\n    colors.second & 0xff,\n    (colors.second >> 8) & 0xff,\n    (colors.second >> 16) & 0xff,\n    0xff,\n  ];\n\n  if (!colors.third) colors.third = colors.second;\n  const th = [\n    colors.third & 0xff,\n    (colors.third >> 8) & 0xff,\n    (colors.third >> 16) & 0xff,\n    0xff,\n  ];\n\n  if (!colors.fourth) colors.fourth = colors.third;\n  const fo = [\n    // eslint-disable-next-line no-bitwise\n    colors.fourth & 0xff,\n    // eslint-disable-next-line no-bitwise\n    (colors.fourth >> 8) & 0xff,\n    // eslint-disable-next-line no-bitwise\n    (colors.fourth >> 16) & 0xff,\n    0xff,\n  ];\n\n  return [fi, se, th, fo] as [\n    AnimBgColor,\n    AnimBgColor,\n    AnimBgColor,\n    AnimBgColor,\n  ];\n}\n\nexport const keyPoints: [number, number][] = [\n  [0.8, 0.1],\n  [0.6, 0.2],\n  [0.35, 0.25],\n  [0.25, 0.6],\n  [0.2, 0.9],\n  [0.4, 0.8],\n  [0.65, 0.75],\n  [0.75, 0.4],\n];\n\nconst TRANSITION_TIME = 200;\n\nexport abstract class BaseAnimBgRender {\n  protected container: HTMLDivElement | null;\n\n  protected canvas: HTMLCanvasElement | OffscreenCanvas;\n\n  protected shouldStop = false;\n\n  protected resObserver: ResizeObserver | null;\n\n  protected colors: AnimBgColorPoints;\n\n  protected curPos: number = 0;\n\n  protected transitionStart: number;\n\n  constructor(\n    canvas: HTMLCanvasElement | null,\n    container: HTMLDivElement | null,\n  ) {\n    if (container && canvas) {\n      this.container = container;\n      this.canvas = canvas;\n    } else {\n      // eslint-disable-next-line no-null/no-null\n      this.container = null;\n      this.canvas = new OffscreenCanvas(50, 50);\n    }\n\n    this.colors = [\n      [0xfe, 0xc4, 0x96, 0xff],\n      [0xdd, 0x6c, 0xb9, 0xff],\n      [0x96, 0x2f, 0xbf, 0xff],\n      [0x4f, 0x5b, 0xd5, 0xff],\n    ];\n\n    if (this.container) {\n      this.resObserver = new ResizeObserver((e) => {\n        requestMutation(() => {\n          if (e[0]?.contentRect.width === 0) return;\n          this.canvas.width = e[0]?.contentRect?.width ?? 50;\n          this.canvas.height = e[0]?.contentRect?.height ?? 50;\n          this.syncState();\n          this.render();\n        });\n      });\n      this.resObserver.observe(this.container);\n    } else {\n      // eslint-disable-next-line no-null/no-null\n      this.resObserver = null;\n    }\n\n    this.transitionStart = performance.now() - 2 * TRANSITION_TIME;\n  }\n\n  public nextState() {\n    this.curPos = (this.curPos + 1) % 8;\n    this.transitionStart = performance.now();\n    this.syncState();\n    this.renderLoop();\n  }\n\n  public setColors(colors: AnimBgColorPoints) {\n    this.colors = colors;\n    this.syncState();\n    this.render();\n  }\n\n  public detach() {\n    this.shouldStop = true;\n    this.resObserver?.disconnect();\n  }\n\n  protected abstract render(progress?: number): void;\n\n  protected getTransitionProgress(): number {\n    let transitionProgress = (performance.now() - this.transitionStart) / TRANSITION_TIME;\n    if (transitionProgress > 1) {\n      transitionProgress = 1;\n    }\n    return transitionProgress;\n  }\n\n  protected abstract syncState(): void;\n\n  private renderLoop() {\n    if (this.shouldStop) return;\n\n    const progress = this.getTransitionProgress();\n    this.render(progress);\n\n    if (progress === 1) return;\n    fastRaf(() => this.renderLoop());\n  }\n}\n","import { getGlobal } from '../global';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animate } from './animation';\n\nconst DEFAULT_DURATION = 300;\n\nconst stopById: Map<string, VoidFunction> = new Map();\n\nexport default function animateHorizontalScroll(container: HTMLElement, left: number, duration = DEFAULT_DURATION) {\n  if (!selectCanAnimateInterface(getGlobal())) {\n    duration = 0;\n  }\n\n  const isRtl = container.getAttribute('dir') === 'rtl';\n  const {\n    scrollLeft, offsetWidth: containerWidth, scrollWidth, dataset: { scrollId },\n  } = container;\n\n  let path = left - scrollLeft;\n\n  if (path < 0) {\n    const remainingPath = -scrollLeft * (isRtl ? -1 : 1);\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollWidth - (scrollLeft + containerWidth);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return Promise.resolve();\n  }\n\n  if (scrollId && stopById.has(scrollId)) {\n    stopById.get(scrollId)!();\n  }\n\n  const target = scrollLeft + path;\n\n  return new Promise<void>((resolve) => {\n    requestMutation(() => {\n      if (duration === 0) {\n        container.scrollLeft = target;\n        resolve();\n        return;\n      }\n\n      let isStopped = false;\n      const id = Math.random().toString();\n      container.dataset.scrollId = id;\n      stopById.set(id, () => {\n        isStopped = true;\n      });\n\n      container.style.scrollSnapType = 'none';\n\n      const startAt = Date.now();\n\n      function cleanup() {\n        container.style.scrollSnapType = '';\n        delete container.dataset.scrollId;\n        stopById.delete(id);\n      }\n\n      animate(() => {\n        if (isStopped) {\n          cleanup();\n          return false;\n        }\n\n        const t = Math.min((Date.now() - startAt) / duration, 1);\n\n        const currentPath = path * (1 - transition(t));\n        container.scrollLeft = Math.round(target - currentPath);\n\n        if (t >= 1) {\n          cleanup();\n          resolve();\n        }\n\n        return t < 1;\n      }, requestMutation);\n    });\n  });\n}\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import { beginHeavyAnimation } from '../lib/teact/teact';\nimport { getGlobal } from '../global';\n\nimport type { ScrollTargetPosition } from '../types';\nimport { FocusDirection } from '../types';\n\nimport {\n  SCROLL_MAX_DISTANCE,\n  SCROLL_MAX_DURATION,\n  SCROLL_MIN_DURATION,\n  SCROLL_SHORT_TRANSITION_MAX_DISTANCE,\n} from '../config';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { IS_ANDROID } from './browser/windowEnvironment';\nimport getOffsetToContainer from './visibility/getOffsetToContainer';\nimport { animateSingle, cancelSingleAnimation } from './animation';\n\nexport type AnimateScrollArgs = {\n  container: HTMLElement;\n  element: HTMLElement;\n  position: ScrollTargetPosition;\n  margin?: number;\n  maxDistance?: number;\n  forceDirection?: FocusDirection;\n  forceDuration?: number;\n  forceNormalContainerHeight?: boolean;\n  shouldReturnMutationFn?: boolean;\n};\n\nlet isAnimating = false;\nlet currentArgs: AnimateScrollArgs | undefined;\nlet onHeavyAnimationEnd: NoneToVoidFunction | undefined;\n\nexport default function animateScroll(args: AnimateScrollArgs) {\n  currentArgs = args;\n  const mutate = createMutateFunction(args);\n\n  if (args.shouldReturnMutationFn) {\n    return mutate;\n  }\n\n  requestMutation(mutate);\n  return undefined;\n}\n\nexport function restartCurrentScrollAnimation() {\n  if (!isAnimating) {\n    return;\n  }\n\n  cancelSingleAnimation();\n\n  requestMeasure(() => {\n    requestMutation(createMutateFunction(currentArgs!));\n  });\n}\n\nfunction createMutateFunction(args: AnimateScrollArgs) {\n  const {\n    container,\n    element,\n    position,\n    margin = 0,\n    maxDistance = SCROLL_MAX_DISTANCE,\n    forceDirection,\n    forceNormalContainerHeight,\n  } = args;\n\n  let forceDuration = args.forceDuration;\n\n  if (\n    forceDirection === FocusDirection.Static\n    || !selectCanAnimateInterface(getGlobal())\n  ) {\n    forceDuration = 0;\n  }\n\n  const { offsetHeight: elementHeight } = element;\n  const { scrollTop: currentScrollTop, offsetHeight: containerHeight, scrollHeight } = container;\n  const elementTop = getOffsetToContainer(element, container).top;\n\n  const targetContainerHeight = forceNormalContainerHeight && container.dataset.normalHeight\n    ? Number(container.dataset.normalHeight)\n    : containerHeight;\n\n  let scrollTo!: number;\n  switch (position) {\n    case 'start':\n      scrollTo = (elementTop - margin) + (IS_ANDROID ? 1 : 0);\n      break;\n    case 'end':\n      scrollTo = (elementTop + elementHeight + margin) - targetContainerHeight;\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n    case 'centerOrTop':\n      scrollTo = elementHeight < targetContainerHeight\n        ? (elementTop + elementHeight / 2 - targetContainerHeight / 2)\n        : (elementTop - margin);\n      break;\n  }\n\n  const scrollFrom = calculateScrollFrom(container, scrollTo, maxDistance, forceDirection);\n\n  let path = scrollTo - scrollFrom;\n  if (path < 0) {\n    const remainingPath = -scrollFrom;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollHeight - (scrollFrom + targetContainerHeight);\n    path = Math.min(path, remainingPath);\n  }\n\n  const absPath = Math.abs(path);\n\n  return () => {\n    if (absPath < 1) {\n      if (currentScrollTop !== scrollFrom) {\n        container.scrollTop = scrollFrom;\n      }\n\n      return;\n    }\n\n    const target = scrollFrom + path;\n\n    if (forceDuration === 0) {\n      container.scrollTop = target;\n      return;\n    }\n\n    const transition = absPath <= SCROLL_SHORT_TRANSITION_MAX_DISTANCE ? shortTransition : longTransition;\n    const duration = forceDuration || (\n      SCROLL_MIN_DURATION\n      + (absPath / SCROLL_MAX_DISTANCE) * (SCROLL_MAX_DURATION - SCROLL_MIN_DURATION)\n    );\n    const startAt = Date.now();\n\n    isAnimating = true;\n\n    const prevOnHeavyAnimationEnd = onHeavyAnimationEnd;\n    onHeavyAnimationEnd = beginHeavyAnimation(undefined, true);\n    prevOnHeavyAnimationEnd?.();\n\n    animateSingle(() => {\n      const t = Math.min((Date.now() - startAt) / duration, 1);\n      const currentPath = path * (1 - transition(t));\n      const newScrollTop = Math.round(target - currentPath);\n\n      container.scrollTop = newScrollTop;\n\n      isAnimating = t < 1 && newScrollTop !== target;\n\n      if (!isAnimating) {\n        currentArgs = undefined;\n\n        onHeavyAnimationEnd?.();\n        onHeavyAnimationEnd = undefined;\n      }\n\n      return isAnimating;\n    }, requestMutation);\n  };\n}\n\nexport function isAnimatingScroll() {\n  return isAnimating;\n}\n\nexport function cancelScrollBlockingAnimation() {\n  onHeavyAnimationEnd!();\n  onHeavyAnimationEnd = undefined;\n}\n\nfunction calculateScrollFrom(\n  container: HTMLElement,\n  scrollTo: number,\n  maxDistance = SCROLL_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n) {\n  const { scrollTop } = container;\n\n  if (forceDirection === undefined) {\n    const offset = scrollTo - scrollTop;\n\n    if (offset < -maxDistance) {\n      return scrollTop + (offset + maxDistance);\n    } else if (offset > maxDistance) {\n      return scrollTop + (offset - maxDistance);\n    }\n  } else if (forceDirection === FocusDirection.Up) {\n    return scrollTo + maxDistance;\n  } else if (forceDirection === FocusDirection.Down) {\n    return Math.max(0, scrollTo - maxDistance);\n  }\n\n  return scrollTop;\n}\n\nfunction shortTransition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n\nfunction longTransition(t: number) {\n  return 1 - ((1 - t) ** 6);\n}\n","import { IS_TOUCH_ENV } from './browser/windowEnvironment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    element.focus();\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","import { MESSAGE_CONTENT_CLASS_NAME } from '../config';\n\nconst ELEMENT_NODE = 1;\n\nexport default function getMessageIdsForSelectedText() {\n  const selection = window.getSelection();\n  let selectedFragments = selection?.rangeCount ? selection.getRangeAt(0).cloneContents() : undefined;\n\n  const shouldIncludeLastMessage = selection?.focusNode && selection.focusOffset > 0\n    && hasParentWithClassName(selection.focusNode, MESSAGE_CONTENT_CLASS_NAME);\n  if (!selectedFragments || selectedFragments.childElementCount === 0) {\n    return undefined;\n  }\n\n  const messageIds = Array.from(selectedFragments.children)\n    .reduce((result, node) => {\n      if (node.nodeType === ELEMENT_NODE && node.classList.contains('message-date-group')) {\n        return Array.from(node.querySelectorAll('.Message'))\n          .reduce((acc, messageEl) => acc.concat(Number((messageEl as HTMLElement).dataset.messageId)), result);\n      } else if (node.nodeType === ELEMENT_NODE && node.classList.contains('Message')) {\n        return result.concat(Number((node as HTMLElement).dataset.messageId));\n      }\n\n      return result;\n    }, [] as number[]);\n\n  // Cleanup a document fragment because it is playing media content in the background\n  while (selectedFragments.firstChild) {\n    selectedFragments.removeChild(selectedFragments.firstChild);\n  }\n  selectedFragments = undefined;\n\n  if (!shouldIncludeLastMessage) {\n    messageIds.pop();\n  }\n\n  return messageIds;\n}\n\nfunction hasParentWithClassName(element: Node, className: string): boolean {\n  if (element.nodeType === ELEMENT_NODE && (element as HTMLElement).classList.contains(className)) {\n    return true;\n  }\n\n  return element.parentNode ? hasParentWithClassName(element.parentNode, className) : false;\n}\n","import type { UniqueCustomPeer } from '../../types';\n\nexport const CUSTOM_PEER_PREMIUM: UniqueCustomPeer = {\n  isCustomPeer: true,\n  type: 'premium',\n  titleKey: 'PrivacyPremium',\n  subtitleKey: 'PrivacyPremiumText',\n  avatarIcon: 'star',\n  isAvatarSquare: true,\n  withPremiumGradient: true,\n};\n\nexport const CUSTOM_PEER_INCLUDED_CHAT_TYPES: UniqueCustomPeer[] = [\n  {\n    isCustomPeer: true,\n    type: 'contacts',\n    titleKey: 'FilterContacts',\n    avatarIcon: 'user',\n    isAvatarSquare: true,\n    peerColorId: 5,\n  },\n  {\n    isCustomPeer: true,\n    type: 'nonContacts',\n    titleKey: 'FilterNonContacts',\n    avatarIcon: 'non-contacts',\n    isAvatarSquare: true,\n    peerColorId: 4,\n  },\n  {\n    isCustomPeer: true,\n    type: 'groups',\n    titleKey: 'FilterGroups',\n    avatarIcon: 'group',\n    isAvatarSquare: true,\n    peerColorId: 3,\n  },\n  {\n    isCustomPeer: true,\n    type: 'channels',\n    titleKey: 'FilterChannels',\n    avatarIcon: 'channel',\n    isAvatarSquare: true,\n    peerColorId: 1,\n  },\n  {\n    isCustomPeer: true,\n    type: 'bots',\n    titleKey: 'FilterBots',\n    avatarIcon: 'bots',\n    isAvatarSquare: true,\n    peerColorId: 6,\n  },\n];\n\nexport const CUSTOM_PEER_EXCLUDED_CHAT_TYPES: UniqueCustomPeer[] = [\n  {\n    isCustomPeer: true,\n    type: 'excludeMuted',\n    titleKey: 'FilterMuted',\n    avatarIcon: 'mute',\n    isAvatarSquare: true,\n    peerColorId: 6,\n  },\n  {\n    isCustomPeer: true,\n    type: 'excludeRead',\n    titleKey: 'FilterRead',\n    avatarIcon: 'readchats',\n    isAvatarSquare: true,\n    peerColorId: 4,\n  },\n  {\n    isCustomPeer: true,\n    type: 'excludeArchived',\n    titleKey: 'FilterArchived',\n    avatarIcon: 'archive',\n    isAvatarSquare: true,\n    peerColorId: 5,\n  },\n];\n\nexport const CUSTOM_PEER_HIDDEN: UniqueCustomPeer<'hidden'> = {\n  isCustomPeer: true,\n  type: 'hidden',\n  titleKey: 'StarsTransactionHidden',\n  avatarIcon: 'author-hidden',\n  peerColorId: 4,\n};\n","import type {\n  ApiFormattedText,\n  ApiMessageEntity,\n  ApiMessageEntityDefault,\n} from '../api/types';\nimport {\n  ApiMessageEntityTypes,\n} from '../api/types';\n\ntype ParserEntityTypes =\n  | ApiMessageEntityTypes.Bold\n  | ApiMessageEntityTypes.Italic\n  | ApiMessageEntityTypes.Strike\n  | ApiMessageEntityTypes.Code\n  | ApiMessageEntityTypes.Pre\n  | ApiMessageEntityTypes.Spoiler;\n\nconst EntityChar: { [key: string]: ParserEntityTypes | undefined } = {\n  '*': ApiMessageEntityTypes.Bold,\n  _: ApiMessageEntityTypes.Italic,\n  '~': ApiMessageEntityTypes.Strike,\n  '`': ApiMessageEntityTypes.Code,\n  '|': ApiMessageEntityTypes.Spoiler,\n};\n\ntype Token = (\n  | {\n    type: 'entity';\n    entity: ApiMessageEntityTypes.Pre;\n    lang?: string;\n    trimmedCnt?: number;\n  }\n  | {\n    type: 'entity';\n    entity: Exclude<ParserEntityTypes, ApiMessageEntityTypes.Pre>;\n  }\n  | { type: 'text' }\n) & {\n  str: string;\n};\n\nfunction tokenize(text: string): Token[] {\n  const tokens: Token[] = [];\n  let accum = '';\n  const dumpAccum = () => {\n    if (accum.length) {\n      tokens.push({\n        type: 'text',\n        str: accum,\n      });\n    }\n    accum = '';\n  };\n\n  for (let i = 0; i < text.length; i++) {\n    const cur = text[i];\n    const lookAhead = text[i + 1] ?? '';\n    const sLookAhead = text[i + 2] ?? '';\n\n    const curEnt = EntityChar[cur];\n    if (curEnt === ApiMessageEntityTypes.Code) {\n      dumpAccum();\n      if (lookAhead === '`' && sLookAhead === '`') {\n        tokens.push({\n          type: 'entity',\n          entity: ApiMessageEntityTypes.Pre,\n          str: '```',\n        });\n        i += 2;\n      } else {\n        tokens.push({\n          type: 'entity',\n          entity: ApiMessageEntityTypes.Code,\n          str: '`',\n        });\n      }\n    } else if (curEnt) {\n      if (lookAhead === cur) {\n        dumpAccum();\n        tokens.push({\n          type: 'entity',\n          entity: curEnt,\n          str: cur + lookAhead,\n        });\n        i++;\n      } else {\n        accum += cur;\n      }\n    } else {\n      accum += cur;\n    }\n  }\n\n  dumpAccum();\n  return tokens;\n}\n\nfunction countTokens(tokens: Token[]): {\n  map: Map<ApiMessageEntityTypes, number>;\n  get(entity: ApiMessageEntityTypes): number;\n  dec(entity: ApiMessageEntityTypes, count?: number): void;\n  inc(entity: ApiMessageEntityTypes, count?: number): void;\n} {\n  const res: Map<ApiMessageEntityTypes, number> = new Map();\n  for (const token of tokens) {\n    if ('entity' in token) {\n      res.set(token.entity, (res.get(token.entity) ?? 0) + 1);\n    }\n  }\n\n  return {\n    map: res,\n    get(entity: ApiMessageEntityTypes) {\n      return res.get(entity) ?? 0;\n    },\n    dec(entity: ApiMessageEntityTypes, count = 1) {\n      res.set(entity, (res.get(entity) ?? 0) - count);\n    },\n    inc(entity: ApiMessageEntityTypes, count = 1) {\n      res.set(entity, (res.get(entity) ?? 0) + count);\n    },\n  };\n}\n\nfunction getPreLanguage(\n  preContents: string,\n): [string | undefined, string] | undefined {\n  const fullTrim = preContents.trim();\n  if (fullTrim.length === 0) {\n    return undefined;\n  }\n\n  const breakPos = preContents.indexOf('\\n');\n  let lang: string | undefined;\n  let rest = fullTrim;\n\n  if (breakPos !== -1) {\n    lang = preContents.slice(0, breakPos).trim();\n    rest = preContents.slice(breakPos + 1);\n  }\n\n  rest = rest.trim();\n  if (rest.length === 0) {\n    return [undefined, fullTrim];\n  }\n\n  if (lang?.length === 0) lang = undefined;\n\n  return [lang, rest];\n}\n\n/// Code pass: Remove all entities inside codeblocks\nfunction doCodePass(tokens: Token[]): Token[] {\n  const res: Token[] = [];\n  const tokenCount = countTokens(tokens);\n\n  let currentCode:\n  | ApiMessageEntityTypes.Code\n  | ApiMessageEntityTypes.Pre\n  | undefined;\n  let accum = '';\n  for (const token of tokens) {\n    if (token.type === 'entity') {\n      let discard = false;\n      if (currentCode === undefined) {\n        if (\n          token.entity === ApiMessageEntityTypes.Pre\n          || token.entity === ApiMessageEntityTypes.Code\n        ) {\n          if (tokenCount.get(token.entity) >= 2) {\n            currentCode = token.entity;\n            tokenCount.dec(token.entity);\n            res.push(token);\n          } else {\n            res.push({ type: 'text', str: token.str });\n          }\n        } else {\n          res.push(token);\n        }\n      } else if (currentCode === token.entity) {\n        tokenCount.dec(token.entity);\n\n        if (currentCode === ApiMessageEntityTypes.Pre) {\n          const langAndRest = getPreLanguage(accum);\n          if (langAndRest) {\n            const trimmedCnt = accum.length - langAndRest[1].length;\n\n            res.push({ type: 'text', str: langAndRest[1] });\n            res.push({\n              ...token,\n              entity: ApiMessageEntityTypes.Pre,\n              lang: langAndRest[0],\n              trimmedCnt,\n            });\n          } else {\n            // invalid pre block\n            res.pop();\n            res.push({ type: 'text', str: `\\`\\`\\`${accum}\\`\\`\\`` });\n          }\n        } else {\n          res.push({ type: 'text', str: accum });\n          res.push(token);\n        }\n\n        currentCode = undefined;\n        accum = '';\n      } else {\n        discard = true;\n      }\n\n      if (discard) {\n        // Entity inside codeblock, discard it to just text\n        tokenCount.dec(token.entity);\n        accum += token.str;\n      }\n    } else if (currentCode === undefined) {\n      res.push(token);\n    } else {\n      accum += token.str;\n    }\n  }\n\n  return res;\n}\n\ntype ConsumedInfo = {\n  pos: number;\n  consumed: number;\n};\n\n// Generate entities from tokens while removing unterminated ones\nfunction tokensToEntities(tokens: Token[]): [ApiFormattedText, ConsumedInfo[]] {\n  const tokenCount = countTokens(tokens);\n  const tokenStarts: Map<ApiMessageEntityTypes, number> = new Map();\n\n  let resStr = '';\n  const resEnt: ApiMessageEntity[] = [];\n  const resConsumed: ConsumedInfo[] = [];\n\n  for (const token of tokens) {\n    if (token.type === 'entity') {\n      if (tokenStarts.has(token.entity)) {\n        const startPos = tokenStarts.get(token.entity)!;\n\n        const newt: ApiMessageEntity = {\n          type: token.entity,\n          offset: startPos,\n          length: resStr.length - startPos,\n        };\n\n        if (\n          newt.type === ApiMessageEntityTypes.Pre\n          && token.entity === ApiMessageEntityTypes.Pre\n        ) {\n          newt.language = token.lang;\n\n          resConsumed.push({\n            pos: resStr.length,\n            consumed: token.trimmedCnt ?? 0,\n          });\n        }\n\n        resEnt.push(newt);\n\n        resConsumed.push({\n          pos: resStr.length,\n          consumed: token.str.length,\n        });\n        tokenCount.dec(token.entity);\n        tokenStarts.delete(token.entity);\n      } else if (tokenCount.get(token.entity) >= 2) {\n        resConsumed.push({\n          pos: resStr.length,\n          consumed: token.str.length,\n        });\n        tokenCount.dec(token.entity);\n        tokenStarts.set(token.entity, resStr.length);\n      } else {\n        resStr += token.str;\n      }\n    } else {\n      resStr += token.str;\n    }\n  }\n\n  return [\n    {\n      text: resStr,\n      entities: resEnt,\n    },\n    resConsumed,\n  ];\n}\n\nfunction trimMessage(text: ApiFormattedText): ApiFormattedText {\n  let str = text.text;\n  const entities = text.entities ?? [];\n  const startSize = str.length;\n  str = str.trimStart();\n  const startShift = startSize - str.length;\n  str = str.trimEnd();\n\n  if (startSize !== str.length) {\n    for (const ent of entities) {\n      if (ent.offset < startShift) {\n        ent.length = ent.offset + ent.length - startShift;\n        ent.offset = 0;\n      } else {\n        ent.offset -= startShift;\n      }\n\n      if (ent.length + ent.offset > str.length) {\n        ent.length = str.length - ent.offset;\n      }\n    }\n  }\n\n  return {\n    text: str,\n    entities,\n  };\n}\n\nfunction addExternalEntities(\n  text: ApiFormattedText,\n  consumed: ConsumedInfo[],\n  extEnt: ApiMessageEntity[],\n): ApiFormattedText {\n  if (extEnt.length === 0) return text;\n\n  consumed = consumed.sort((a, b) => a.pos - b.pos);\n  extEnt = extEnt.sort((a, b) => a.offset - b.offset);\n\n  for (const ent of extEnt) {\n    let start = ent.offset;\n    let end = ent.offset + ent.length;\n    for (let i = 0; i < consumed.length; i++) {\n      if (start >= consumed[i].pos) {\n        start -= Math.min(consumed[i].consumed, start - consumed[i].pos);\n      }\n\n      if (end >= consumed[i].pos) {\n        end -= Math.min(consumed[i].consumed, end - consumed[i].pos);\n      }\n    }\n    text.entities?.push({\n      ...ent,\n      offset: start,\n      length: end - start,\n    });\n  }\n\n  return text;\n}\n\ntype FixupEntityTypes =\n  | ApiMessageEntityTypes.Bold\n  | ApiMessageEntityTypes.Italic\n  | ApiMessageEntityTypes.Strike\n  | ApiMessageEntityTypes.Spoiler;\n\nconst breakableEntities: FixupEntityTypes[] = [\n  ApiMessageEntityTypes.Bold,\n  ApiMessageEntityTypes.Italic,\n  ApiMessageEntityTypes.Strike,\n  ApiMessageEntityTypes.Spoiler,\n];\n\n// Cleanup entites by removing duplicates and extending\ntype FixupToken = {\n  action: 'start' | 'end';\n  type: FixupEntityTypes;\n};\n\nfunction fixupEntities(text: ApiFormattedText): ApiFormattedText {\n  const startEntities = text.entities ?? [];\n  let resEntities = [];\n\n  const fixupMap: Map<number, FixupToken[]> = new Map();\n  for (const ent of startEntities) {\n    const start = ent.offset;\n    const end = ent.offset + ent.length;\n\n    const startMarkers = fixupMap.get(start) ?? [];\n    const endMarkers = fixupMap.get(end) ?? [];\n\n    const type = ent.type as FixupEntityTypes;\n    if (breakableEntities.includes(type)) {\n      startMarkers.push({ action: 'start', type });\n      endMarkers.push({ action: 'end', type });\n    } else {\n      resEntities.push(ent);\n    }\n\n    fixupMap.set(start, startMarkers);\n    fixupMap.set(end, endMarkers);\n  }\n\n  let fixupList = [...fixupMap.entries()];\n  fixupList = fixupList.sort((a, b) => a[0] - b[0]);\n\n  const curState: Map<FixupEntityTypes, number> = new Map();\n  let curEnts: ApiMessageEntityDefault[] = [];\n  for (const [pos, entr] of fixupList) {\n    // End all current entities\n    for (const e of curEnts) {\n      e.length = pos - e.offset;\n      resEntities.push(e);\n    }\n    curEnts = [];\n\n    for (const upd of entr) {\n      const cur = curState.get(upd.type) ?? 0;\n      if (upd.action === 'start') {\n        curState.set(upd.type, cur + 1);\n      } else {\n        curState.set(upd.type, cur - 1);\n      }\n    }\n\n    for (const [type, val] of curState.entries()) {\n      if (val > 0) {\n        curEnts.push({ type, offset: pos, length: 0 });\n      }\n    }\n  }\n\n  resEntities = resEntities.sort((a, b) => {\n    if (a.offset === b.offset) return b.length - a.length;\n    return a.offset - b.offset;\n  });\n\n  return { text: text.text, entities: resEntities };\n}\n\nexport function parseMarkdown(\n  text: string,\n  extEnt: ApiMessageEntity[] = [],\n): ApiFormattedText {\n  let tokens: Token[] = tokenize(text);\n  tokens = doCodePass(tokens);\n  // eslint-disable-next-line prefer-const\n  let [fmtText, consumed] = tokensToEntities(tokens);\n\n  fmtText = addExternalEntities(fmtText, consumed, extEnt);\n  fmtText = trimMessage(fmtText);\n  fmtText = fixupEntities(fmtText);\n  return fmtText;\n}\n","import type { ApiFormattedText, ApiMessageEntity } from '../api/types';\nimport { ApiMessageEntityTypes } from '../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../config';\nimport { parseMarkdown } from './parseMarkdown';\n\nexport const ENTITY_CLASS_BY_NODE_NAME: Record<string, ApiMessageEntityTypes> = {\n  B: ApiMessageEntityTypes.Bold,\n  STRONG: ApiMessageEntityTypes.Bold,\n  I: ApiMessageEntityTypes.Italic,\n  EM: ApiMessageEntityTypes.Italic,\n  INS: ApiMessageEntityTypes.Underline,\n  U: ApiMessageEntityTypes.Underline,\n  S: ApiMessageEntityTypes.Strike,\n  STRIKE: ApiMessageEntityTypes.Strike,\n  DEL: ApiMessageEntityTypes.Strike,\n  CODE: ApiMessageEntityTypes.Code,\n  PRE: ApiMessageEntityTypes.Pre,\n  BLOCKQUOTE: ApiMessageEntityTypes.Blockquote,\n};\n\nconst MAX_TAG_DEEPNESS = 5;\n\n// TODO: Markdown links\nexport default function parseHtmlAsFormattedText(\n  html: string, withMarkdownLinks = false, skipMarkdown = false,\n): ApiFormattedText {\n  const fragment = document.createElement('div');\n  fragment.innerHTML = withMarkdownLinks ? parseMarkdownLinks(html) : html;\n  fragment.querySelectorAll('br').forEach((br) => {\n    br.replaceWith('\\n');\n  });\n  let dtr = fragment.querySelector('div');\n  while (dtr) {\n    dtr.replaceWith('\\n', ...dtr.childNodes);\n    dtr = fragment.querySelector('div');\n  }\n  fixImageContent(fragment);\n  const text = fragment.innerText.trim().replace(/\\u200b+/g, '');\n  const trimShift = fragment.innerText.indexOf(text[0]);\n  let textIndex = -trimShift;\n  let recursionDeepness = 0;\n  const entities: ApiMessageEntity[] = [];\n\n  function addEntity(node: ChildNode) {\n    if (node.nodeType === Node.COMMENT_NODE) return;\n    const { index, entity } = getEntityDataFromNode(node, text, textIndex);\n\n    if (entity) {\n      textIndex = index;\n      entities.push(entity);\n    } else if (node.textContent) {\n      // Skip newlines on the beginning\n      if (index === 0 && node.textContent.trim() === '') {\n        return;\n      }\n      textIndex += node.textContent.length;\n    }\n\n    if (node.hasChildNodes() && recursionDeepness <= MAX_TAG_DEEPNESS) {\n      recursionDeepness += 1;\n      Array.from(node.childNodes).forEach(addEntity);\n    }\n  }\n\n  Array.from(fragment.childNodes).forEach((node) => {\n    recursionDeepness = 1;\n    addEntity(node);\n  });\n\n  let fmtRes: ApiFormattedText = {\n    text, entities,\n  };\n  // console.log(JSON.stringify(text))\n  if (!skipMarkdown) {\n    fmtRes = parseMarkdown(text, entities);\n  }\n\n  if (fmtRes.entities?.length === 0) fmtRes.entities = undefined;\n  return fmtRes;\n}\n\nexport function fixImageContent(fragment: HTMLDivElement) {\n  fragment.querySelectorAll('img').forEach((node) => {\n    if (node.dataset.documentId) { // Custom Emoji\n      node.textContent = (node as HTMLImageElement).alt || '';\n    } else { // Regular emoji with image fallback\n      node.replaceWith(node.alt || '');\n    }\n  });\n}\n\n// TODO: Improvem, though used realy rarely\nfunction parseMarkdownLinks(html: string) {\n  return html.replace(new RegExp(`\\\\[([^\\\\]]+?)]\\\\((${RE_LINK_TEMPLATE}+?)\\\\)`, 'g'), (_, text, link) => {\n    const url = link.includes('://') ? link : link.includes('@') ? `mailto:${link}` : `https://${link}`;\n    return `<a href=\"${url}\">${text}</a>`;\n  });\n}\n\nfunction getEntityDataFromNode(\n  node: ChildNode,\n  rawText: string,\n  textIndex: number,\n): { index: number; entity?: ApiMessageEntity } {\n  const type = getEntityTypeFromNode(node);\n\n  if (!type || !node.textContent) {\n    return {\n      index: textIndex,\n      entity: undefined,\n    };\n  }\n\n  const rawIndex = rawText.indexOf(node.textContent, textIndex);\n  // In some cases, last text entity ends with a newline (which gets trimmed from `rawText`).\n  // In this case, `rawIndex` would return `-1`, so we use `textIndex` instead.\n  const index = rawIndex >= 0 ? rawIndex : textIndex;\n  const offset = rawText.substring(0, index).length;\n  const { length } = rawText.substring(index, index + node.textContent.length);\n\n  if (type === ApiMessageEntityTypes.TextUrl) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        url: (node as HTMLAnchorElement).href,\n      },\n    };\n  }\n  if (type === ApiMessageEntityTypes.MentionName) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        userId: (node as HTMLAnchorElement).dataset.userId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Pre) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        language: (node as HTMLPreElement).dataset.language,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.CustomEmoji) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        documentId: (node as HTMLImageElement).dataset.documentId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Timestamp) {\n    const timestamp = Number((node as HTMLElement).dataset.timestamp);\n    if (Number.isNaN(timestamp)) {\n      return {\n        index,\n        entity: undefined,\n      };\n    }\n\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        timestamp,\n      },\n    };\n  }\n\n  return {\n    index,\n    entity: {\n      type,\n      offset,\n      length,\n    },\n  };\n}\n\nfunction getEntityTypeFromNode(node: ChildNode): ApiMessageEntityTypes | undefined {\n  if (node instanceof HTMLElement && node.dataset.entityType) {\n    return node.dataset.entityType as ApiMessageEntityTypes;\n  }\n\n  if (ENTITY_CLASS_BY_NODE_NAME[node.nodeName]) {\n    return ENTITY_CLASS_BY_NODE_NAME[node.nodeName];\n  }\n\n  if (node.nodeName === 'A') {\n    const anchor = node as HTMLAnchorElement;\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.MentionName) {\n      return ApiMessageEntityTypes.MentionName;\n    }\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.Url) {\n      return ApiMessageEntityTypes.Url;\n    }\n    if (anchor.href.startsWith('mailto:')) {\n      return ApiMessageEntityTypes.Email;\n    }\n    if (anchor.href.startsWith('tel:')) {\n      return ApiMessageEntityTypes.Phone;\n    }\n    if (anchor.href !== anchor.textContent) {\n      return ApiMessageEntityTypes.TextUrl;\n    }\n\n    return ApiMessageEntityTypes.Url;\n  }\n\n  if (node.nodeName === 'SPAN') {\n    return (node as HTMLElement).dataset.entityType as any;\n  }\n\n  if (node.nodeName === 'IMG') {\n    if ((node as HTMLImageElement).dataset.documentId) {\n      return ApiMessageEntityTypes.CustomEmoji;\n    }\n  }\n\n  return undefined;\n}\n","let scrollLockEl: HTMLElement | null | undefined;\nlet excludedClosestSelector: string | undefined;\n\nconst IGNORED_KEYS: Record<string, boolean> = {\n  Down: true,\n  ArrowDown: true,\n  Up: true,\n  ArrowUp: true,\n  Left: true,\n  ArrowLeft: true,\n  Right: true,\n  ArrowRight: true,\n  ' ': true,\n  PageUp: true,\n  PageDown: true,\n  End: true,\n  Home: true,\n  Tab: true,\n};\n\nfunction isTextBox(target: EventTarget | null) {\n  if (!target || !(target instanceof HTMLElement)) return false;\n  const element = target;\n  const tagName = element.tagName.toLowerCase();\n  if (tagName === 'textarea') return true;\n  if (tagName !== 'input') return false;\n  const type = element.getAttribute('type');\n  if (!type) return false;\n  const inputTypes = [\n    'text', 'password', 'number', 'email', 'tel', 'url',\n    'search', 'date', 'datetime', 'datetime-local', 'time', 'month', 'week',\n  ];\n  return inputTypes.indexOf(type.toLowerCase()) > -1;\n}\n\nexport const getTouchY = (e: WheelEvent | TouchEvent | React.WheelEvent | React.TouchEvent) => {\n  return ('changedTouches' in e ? e.changedTouches[0].clientY : 0);\n};\n\nconst preventDefault = (e: WheelEvent | TouchEvent) => {\n  const deltaY = 'deltaY' in e ? e.deltaY : getTouchY(e);\n\n  if (\n    !scrollLockEl\n    // Allow overlay scrolling\n    || !scrollLockEl.contains(e.target as HTMLElement)\n    // Prevent top overscroll\n    || (scrollLockEl.scrollTop <= 0 && deltaY <= 0)\n    // Prevent bottom overscroll\n    || (scrollLockEl.scrollTop >= (scrollLockEl.scrollHeight - scrollLockEl.offsetHeight) && deltaY >= 0)\n  ) {\n    if (excludedClosestSelector && (e.target as HTMLElement).closest(excludedClosestSelector)) return;\n    e.preventDefault();\n  }\n};\n\nfunction preventDefaultForScrollKeys(e: KeyboardEvent) {\n  if (IGNORED_KEYS[e.key] && !isTextBox(e.target)) {\n    e.preventDefault();\n  }\n}\n\nexport function disableScrolling(el?: HTMLElement | null, _excludedClosestSelector?: string) {\n  scrollLockEl = el;\n  excludedClosestSelector = _excludedClosestSelector;\n  // Disable scrolling in Chrome\n  document.addEventListener('wheel', preventDefault, { passive: false });\n  document.addEventListener('touchmove', preventDefault, { passive: false });\n  document.onkeydown = preventDefaultForScrollKeys;\n\n  return enableScrolling;\n}\n\nexport function enableScrolling() {\n  scrollLockEl = undefined;\n  excludedClosestSelector = undefined;\n  document.removeEventListener('wheel', preventDefault); // Enable scrolling in Chrome\n  document.removeEventListener('touchmove', preventDefault);\n  // eslint-disable-next-line no-null/no-null\n  document.onkeydown = null;\n}\n","export default function getOffsetToContainer(element: HTMLElement, container: HTMLElement) {\n  let offsetTop = 0;\n  let offsetLeft = 0;\n\n  let current: HTMLElement | null = element;\n\n  while (current && current !== container && !current.contains(container)) {\n    offsetTop += current.offsetTop;\n    offsetLeft += current.offsetLeft;\n\n    current = current.offsetParent as HTMLElement;\n  }\n\n  return { top: offsetTop, left: offsetLeft };\n}\n","import windowSize from '../windowSize';\n\nexport function isElementInViewport(el: HTMLElement) {\n  if (el.style.display === 'none') {\n    return false;\n  }\n\n  const rect = el.getBoundingClientRect();\n  const { height: windowHeight } = windowSize.get();\n\n  return (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"YmM5biTv\",\"header\":\"S7WFT2bv\",\"pickerCategoryTitle\":\"YK1300x2\",\"peerChip\":\"gsKPBPoK\",\"pickerList\":\"yLCbiItq\",\"padded\":\"bXzIGw8s\",\"noResults\":\"dXWKD0ve\",\"onlineStatus\":\"d5GDOYh9\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"O9uCTt5C\",\"animated-icon\":\"HiI6SMxF\",\"animatedIcon\":\"HiI6SMxF\",\"effect\":\"NhFcTGja\",\"animating\":\"ikfZ6Igz\",\"withEffectOnly\":\"jjRJmHCg\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gXO57D98\",\"chosen\":\"VXSJn0Sm\",\"paid\":\"N3lcrsh8\",\"outside\":\"Hqw10FGl\",\"animated-emoji\":\"lFjoRm_p\",\"animatedEmoji\":\"lFjoRm_p\",\"tag\":\"Dr889Kzc\",\"tail\":\"cUfY1b26\",\"is-safari\":\"rxxUijuG\",\"isSafari\":\"rxxUijuG\",\"tail-fill\":\"y591o4fN\",\"tailFill\":\"y591o4fN\",\"tag-text\":\"ly7cruxF\",\"tagText\":\"ly7cruxF\",\"counter\":\"P2FqNJAi\",\"disabled\":\"NRtGofbf\",\"paidCounter\":\"CW4UO1n3\"};"],"names":["scheduledAnimationsCounter","resetCounterOnTickEnd","throttleWithTickEnd","memo","AnimatedCounter","text","className","isDisabled","ref","isRtl","useLang","prevText","usePreviousDeprecated","forceUpdate","useForceUpdate","shouldAnimate","selectCanAnimateInterface","getGlobal","undefined","characters","useMemo","elements","textLength","length","prevTextLength","i","charIndex","prevTextCharIndex","unshift","React","createElement","renderAnimatedCharacters","useEffect","timeoutId","window","setTimeout","clearTimeout","buildClassName","dir","props","sticker","noLoad","forcePreview","otherProps","thumbDataUri","thumbnail","dataUri","localMediaHash","getStickerMediaHash","previewBlobUrl","useMedia","ApiMediaFormat","BlobUrl","tgsUrl","AnimatedIconWithPreview","_extends","previewUrl","loadedPreviewUrls","Set","isThumbOpen","unmarkThumbOpen","useFlag","Boolean","thumbClassNames","useMediaTransitionDeprecated","isPreviewOpen","markPreviewOpen","unmarkPreviewOpen","has","previewClassNames","isAnimationReady","markAnimationReady","handlePreviewLoad","useLastCallback","add","handleAnimationReady","size","style","buildStyle","src","styles","draggable","onLoad","AnimatedIcon","AvatarList","peers","limit","badgeText","lang","useOldLang","pxSize","AVATAR_SIZES","renderingBadgeText","slice","map","peer","Avatar","BadgeButton","children","onClick","onMouseDown","MediaSpoiler","isVisible","withAnimation","width","height","useRef","shouldRender","transitionClassNames","useShowTransitionDeprecated","canvasRef","useCanvasBlur","handleClick","e","current","el","rect","currentTarget","getBoundingClientRect","x","clientX","left","y","clientY","top","shiftX","shiftY","requestMutation","setAttribute","PasswordForm","isLoading","isPasswordVisible","error","hint","placeholder","submitLabel","description","shouldShowSubmit","shouldResetValue","shouldDisablePasswordManager","noRipple","clearError","onChangePasswordVisibility","onInputChange","onSubmit","inputRef","isMobile","useAppLayout","password","setPassword","useState","canSubmit","setCanSubmit","focusDelayTimeoutMs","useTimeout","IS_TOUCH_ENV","focus","select","action","event","preventDefault","stopEvent","autoComplete","type","id","tabIndex","value","onChange","target","MIN_PASSWORD_LENGTH","maxLength","role","title","Icon","name","Button","ripple","disabled","withGlobal","global","peerId","forceShowSelf","selectPeer","user","selectUser","isSavedMessages","isSelf","PeerChip","icon","isMinimized","canClose","isCloseNonDestructive","clickArg","mockPeer","customPeer","withPeerColors","withEmojiStatus","itemClassName","apiPeer","anyPeer","chat","isApiPeerChat","iconElement","titleElement","titleText","getPeerTitle","FullNameTitle","fullClassName","isForum","isAvatarSquare","getPeerColorClass","PremiumProgress","leftText","rightText","floatingBadgeText","floatingBadgeIcon","progress","isPrimary","floatingBadgeRef","parentContainerRef","setShiftX","tailPosition","setTailPosition","updateBadgePosition","badgeWidth","offsetWidth","parentWidth","minShift","maxShift","currentShift","safeShift","Math","max","min","newTailPosition","useResizeObserver","hasFloatingBadge","isProgressFull","viewBox","fill","d","getStickerFromGift","gift","attributes","find","attr","getTotalGiftAvailability","availabilityTotal","totalCount","getGiftAttributes","model","backdrop","pattern","originalDetails","getGiftAttributesFromList","renderMessageText","message","highlight","emojiSize","asPreview","truncateLength","isProtected","forcePlayback","shouldRenderAsHtml","isForMediaViewer","threadId","maxTimestamp","entities","content","contentNotSupportedText","getMessageText","trimText","messageKey","getMessageKey","renderTextWithEntities","containerId","messageId","chatId","renderMessageSummary","noEmoji","TRUNCATED_SUMMARY_LENGTH","statefulContent","getMessageStatefulContent","hasSpoilers","some","ApiMessageEntityTypes","Spoiler","hasCustomEmoji","CustomEmoji","getMessageSummaryText","renderText","emoji","getMessageSummaryEmoji","emojiWithSpace","getMessageSummaryDescription","Array","isArray","filter","VERIFIED_PRIORITY_BASE","PINNED_PRIORITY_BASE","sortChatIds","chatIds","shouldPrioritizeVerified","priorityIds","currentUserId","orderBy","Infinity","selectChat","priority","lastMessage","selectChatLastMessage","date","isVerified","includes","Date","now","indexOf","ITEM_CLASS_NAME","PeerPicker","categories","itemIds","categoryPlaceholderKey","filterValue","filterPlaceholder","notFoundText","searchInputId","noScrollRestore","isSearchable","lockedUnselectedSubtitle","isViewOnly","itemInputType","withStatus","withPeerTypes","withPeerUsernames","withDefaultPadding","onFilterChange","onDisabledClick","onLoadMore","optionalProps","allowMultiple","lockedSelectedIds","lockedUnselectedIds","selectedCategories","selectedCategory","MEMO_EMPTY_ARRAY","selectedIds","selectedId","shouldMinimize","requestMeasure","lockedSelectedIdsSet","lockedUnselectedIdsSet","unlockedSelectedIds","categoriesByType","buildCollectionByKey","sortedItemIds","lockedSelectedBucket","unlockedBucket","lockedUnselectableBucket","forEach","push","concat","handleItemClick","categoryType","newSelectedCategories","splice","onSelectedCategoriesChange","newSelectedIds","onSelectedIdsChange","onSelectedCategoryChange","onSelectedIdChange","handleFilterChange","viewportIds","getMore","useInfiniteScroll","renderItem","useCallback","isCategory","category","peerOrCategory","DEBUG","key","isAlwaysUnselected","isAlwaysSelected","isLocked","isChecked","subtitle","subtitleClassName","username","usernames","getGroupStatus","userStatus","selectUserStatus","getUserStatus","isUserOnline","onlineStatus","langKey","getPeerTypeKey","getSubtitle","PickerItem","avatarElement","inactive","inputElement","Radio","checked","onlyInput","Checkbox","inputPosition","beforeChildren","pickerCategoryTitle","container","header","peerChip","InputText","InfiniteScroll","pickerList","padded","items","itemSelector","Loading","noResults","titleClassName","isClickable","RippleEffect","IS_IOS","RadialPatternBackground","backgroundColors","patternColor","patternIcon","clearBottomSector","containerRef","getContainerSize","setContainerSize","useSignal","dpr","useDevicePixelRatio","emojiImage","setEmojiImage","previewMediaHash","preloadImage","then","patternPositions","coordinates","ring","ringItemCount","floor","ringProgress","ringRadius","angleShift","PI","angle","cos","sin","sizeFactor","random","entry","contentRect","clientWidth","clientHeight","draw","canvas","ctx","getContext","save","centerShift","renderX","renderY","drawImage","restore","fillStyle","globalCompositeOperation","fillRect","radialGradient","createRadialGradient","addColorStop","maxSide","CustomEmojiEffect","reaction","isLottie","particleSize","onEnded","stickerHash","getStickerHashById","documentId","previewMediaData","paths","IS_OFFSET_PATH_SUPPORTED","from","generateRandomDropPath","path","withSharedAnimation","onAnimationEnd","alt","ICON_SIZE","REM","EFFECT_SIZE","MIN_PARTICLE_SIZE","genericEmojiEffects","reactions","activeReactions","selectTabState","withEffects","selectPerformanceSettingsValue","availableReactions","genericEffects","ReactionAnimatedEmoji","effectSize","withEffectOnly","shouldPause","shouldLoop","loopLimit","observeIntersection","stopActiveReaction","getActions","isCustom","availableReaction","r","isSameReaction","centerIconId","centerIcon","customEmoji","useCustomEmoji","assignedEffectId","aroundAnimation","assignedId","available","emoticon","effectId","stickers","isIntersecting","useIsIntersecting","mediaHashCenterIcon","mediaHashEffect","mediaDataCenterIcon","mediaDataEffect","activeReaction","active","shouldPlayEffect","shouldPlayCenter","shouldRenderEffect","animationClassNames","shouldRenderCenter","centerAnimationClassNames","handleEnded","isAnimationLoaded","markAnimationLoaded","unmarkAnimationLoaded","shouldShowStatic","shouldRenderStatic","staticClassNames","rootClassName","root","animating","ReactionStaticEmoji","noPlay","noVideoOnMobile","observeIntersectionForPlaying","forceAlways","AnimatedSticker","animatedIcon","roundToNearestEven","play","noLoop","Fragment","effect","withIconHeart","staticIconId","staticIcon","mediaHash","mediaData","shouldApplySizeFix","shouldReplaceWithHeartIcon","blankUrl","isBlockquote","noteAnc","tagName","BlockQuoteEnterHandler","constructor","attachHandler","addEventListener","this","evHandler","bind","inputType","insertEnterInsideBlockquote","s","getSelection","getRangeAt","endContainer","parentNode","document","execCommand","wasEnter","isCollapsed","remEnd","textContent","substring","endOffset","isStart","previousSibling","removeAllRanges","nr","createRange","setStartBefore","setEndBefore","textNode","createTextNode","insertNode","collapse","addRange","isEnd","nextSibling","setStartAfter","setEndAfter","nextAttach","RichEditableAttachment","richInputCtx","disableEdit","detached","attachmentRef","customColor","useDynamicColorListener","editable","attEditable","isAttached","attachTo","detachFrom","applyRootProperties","emojiRenderer","setCustomColor","isOpen","TextFormatter","useModuleLoader","Bundles","Extra","EX_FIX","betterExecCommand","input","range","command","classList","remove","head","appendChild","innerHTML","GDOCS_ELEMENT_ID_REGEXP","GDOCS_STYLES","BOLD","ITALIC","UNDERLINE","STRIKETHROUGH","SUPERSCRIPT","SUBSCRIPT","ELEMENTS","ANCHOR","BLOCKQUOTE","headers","parseHtml","html","DOMParser","parseFromString","body","wrapNodeAnchor","node","href","anchor","cloneNode","wrapNodeInline","wrapNode","inner","result","newNode","fontWeight","fontStyle","textDecoration","verticalAlign","applyInlineStyles","dirty","styledNode","nodeName","childNodes","getCleanNode","newWrapper","createDocumentFragment","applyBlockStyles","nodes","filterNode","nodeType","STYLE_TAG_REGEX","AbsoluteVideo","videoUrl","options","_defineProperty","video","disablePictureInPicture","muted","position","load","loop","recalculatePositionAndSize","isPlaying","paused","safePlay","pause","destroy","updatePosition","round","SIZE","prefixCounter","EditableEmojiRender","throttleId","playersById","Map","prefixId","customColorFilter","sharedCanvas","sharedCanvasHq","absoluteContainer","canPlayAnimatedEmojis","detachCbs","resizeObserver","ResizeObserver","synchronizeElements","newColor","removeColorFilter","addColorFilter","documentElement","setProperty","clearPlayers","ids","player","get","delete","playerIdsToClear","keys","querySelectorAll","element","dataset","uniqueId","playerId","mediaUrl","getCustomEmojiMediaDataForInput","canvasBounds","elementBounds","customEmojis","byId","isHq","stickerSetInfo","selectIsAlwaysHighPriorityEmoji","renderId","devicePixelRatio","join","async","viewId","textColor","colorFilter","color","shouldUseTextColor","hexToRgb","lottie","ensureRLottie","init","coords","isLowPriority","g","b","removeView","setSharedCanvasCoords","isVideo","absoluteVideo","Error","createPlayer","animation","set","observe","unobserve","removeDprListener","addDevicePixelRatioListener","removeBgListener","addBackgroundModeListener","freezeAnimation","unfreezeAnimation","cb","pop","removeChild","Previewer","edtiable","hiddenOnPreview","isPreviewing","setIsPreviewing","createSignal","endPreview","delayedPreview","addHiddenOnPreview","refreshPreview","getFormattedText","TeactDOM","render","startPreview","delayedTimeout","time","WHITESPACE_RE","fragmentEl","RichEditable","attached","updateRootProps","htmlS","htmlSet","emptyS","emptySet","matchableS","matchableSet","selectionS","selectionSet","keyboardHandlers","pasteHandlers","selectionListener","handleSelectionUpdate","pasteListener","handlePaste","handleContentUpdate","handler","onKeydown","blockquoteEnter","preview","contentEditable","removeEventListener","console","warn","force","forcePlaceCaretAtEnd","focusEditableElement","blur","isRangeInside","commonAncestorContainer","iterations","parentElement","ensureSelectionInside","rangeCount","selectNodeContents","calculateMatchable","curNode","endPos","startPos","TEXT_NODE","ELEMENT_NODE","curEl","getAttribute","str","test","notSelected","collapsed","wasEmpty","clearInput","setFormattedText","getTextWithEntitiesAsHtml","lastChild","formatMarkdown","parseHtmlAsFormattedText","addKeyboardHandler","sort","a","h","addPasteHandler","cmd","insertMatchableHtml","matchLimit","startContainer","setStart","setEnd","removeLastSymbol","insertFormattedText","clipboardData","activeElement","pastedText","getData","pasteCtx","fragment","clipboardContent","match","filteredNodes","cleanNodes","getCleanDocument","replace","err","textContents","getElementsByTagName","HTMLElement","removeAttribute","replaceWith","entityType","ignoreOnPaste","ENTITY_CLASS_BY_NODE_NAME","innerText","MentionName","trimEnd","preparePastedHtml","pasteHandler","setSelRange","sel","getSelectedHtml","opts","shouldDropCustomEmoji","shouldDropQuotes","cloneRange","compareBoundaryPoints","Range","START_TO_START","END_TO_END","selectNode","replaceChildren","cloneContents","INPUT_CUSTOM_EMOJI_SELECTOR","clearBlockQuote","querySelector","useRichEditable","richEditable","getHtml","useRichEditableKeyboardListener","enable","keydownCallback","useRichEditablePasteHandler","div","ALLOWED_QUOTE_ENTITIES","Bold","Italic","Underline","Strike","getSelectionAsFormattedText","clonedSelection","Node","contains","currentElement","tag","toLowerCase","wrapHtmlWithMarkupTags","getSelectionAsHtml","entity","stripEntitiesForQuote","PinMessageModal","getCopyLabel","hasSelection","editDate","shouldRenderSkeleton","MenuItem","Skeleton","formatDateAtTime","shouldRenderShowWhen","canLoadReadDate","closeContextMenu","openPrivacySettingsNoticeModal","readDate","Transition","activeKey","handleOpenModal","isReadDate","MessageContextMenu","isReactionPickerOpen","topReactions","defaultTagReactions","poll","story","isPrivate","isCurrentUserPremium","enabledReactions","isWithPaidReaction","reactionsLimit","targetHref","canSendNow","canReschedule","canBuyPremium","canReply","canQuote","canEdit","noReplies","canPin","canUnpin","canDelete","canForward","canReport","canFaveSticker","canUnfaveSticker","canCopy","canCopyLink","canSelect","canDownload","canSaveGif","canRevote","canClosePoll","canTranslate","canShowOriginal","canSelectLanguage","isDownloading","repliesThreadInfo","canShowSeenBy","canShowReactionsCount","canShowReactionList","seenByRecentPeers","customEmojiSets","isInSavedMessages","onReply","onOpenThread","onEdit","onPin","onUnpin","onForward","onDelete","onFaveSticker","onReport","onUnfaveSticker","onSelect","onSend","onReschedule","onClose","onCloseAnimationEnd","onCopyLink","onCopyNumber","onDownload","onSaveGif","onCancelVote","onClosePoll","onShowSeenBy","onShowReactors","onToggleReaction","onSendPaidReaction","onShowPaidReactionModal","onCopyMessages","onReactionPickerOpen","onTranslate","onShowOriginal","onSelectLanguage","userFullName","canGift","showNotification","openStickerSet","openCustomEmojiSets","loadStickers","openGiftModal","menuRef","scrollableRef","noReactions","areReactionsPossible","withReactions","isEdited","seenByDates","isPremiumGift","isGiftCode","isStarGift","isStarGiftUnique","shouldShowGiftButton","isUserId","areItemsHidden","hideItems","isReady","markIsReady","unmarkIsReady","isDesktop","seenByDatesCount","Object","handleAfterCopy","handleGiftClick","forUserId","customEmojiSet","accessHash","handleOpenCustomEmojiSets","shortName","setIds","copyOptions","afterEffect","photo","getMessagePhoto","getMessageWebPageVideo","getMessageWebPagePhoto","contact","getMessageContact","getPhotoMediaHash","canImageBeCopied","hasMediaLocalBlobUrl","CLIPBOARD_ITEM_SUPPORTED","IS_SAFARI","selection","label","Promise","resolve","mediaLoader","blobUrl","copyImageToClipboard","copyTextToClipboard","anchorNode","closest","toString","selectionParentNode","selectedMessageElement","getMessageHtmlId","checkMessageHasSelection","messageIds","getMessageIdsForSelectedText","clipboardText","copyHtmlToClipboard","getMessageTextWithSpoilers","getMessageCopyOptions","groupStatefulContent","getTriggerElement","getRootElement","getMenuElement","getLayout","extraHeightAudioPlayer","offsetHeight","middleColumn","getElementById","middleColumnComputedStyle","getComputedStyle","extraHeightPinned","parseFloat","getPropertyValue","extraPaddingX","extraTopPadding","extraMarginTop","shouldAvoidNegativePosition","menuElMinWidth","disableScrolling","handleOpenMessageReactionPicker","Menu","withMaxHeight","ReactionSelector","allAvailableReactions","currentReactions","results","onShowMore","isOutgoing","messagesCount","option","withPreventDefaultOnMouseDown","destructive","MenuSeparator","inline","withWrap","reactors","count","getUserFullName","ReadTimeMenuItem","LastEditTimeMenuItem","UNQUOTABLE_OFFSET","messageListType","detectedLanguage","selectCurrentMessageList","defaultTags","activeDownloads","selectActiveDownloads","chatFullInfo","selectChatFullInfo","seenByExpiresAt","seenByMaxChatMembers","maxUniqueReactions","readDateExpiresAt","appConfig","noOptions","canReplyGlobally","selectAllowedMessageActionsSlow","selectCanForwardMessage","isOwn","isOwnMessage","chatBot","selectBot","isBot","isMessageUnread","selectIsMessageUnread","isReadDateRestricted","isReadDateRestrictedByMe","isPinned","isScheduled","isChannel","isChatChannel","threadInfo","selectThreadInfo","isMessageThread","isCommentsInfo","fromChannelId","topic","selectTopic","canSendText","isUserRightBanned","canReplyInChat","getCanPostInChat","isLocal","isMessageLocal","hasTtl","hasMessageTtl","isChatGroup","membersCount","isAction","isActionMessage","areReactionsEmpty","canSeeList","selectIsMessageProtected","canCopyNumber","selectIsCurrentUserPremium","customEmojiSetsInfo","selectMessageCustomEmojiSets","customEmojiSetsNotFiltered","selectStickerSet","every","translationRequestLanguage","selectRequestedMessageTranslationLanguage","hasTranslation","selectMessageTranslations","selectCanTranslateMessage","isChatTranslated","selectRequestedChatTranslationLanguage","selectIsChatWithSelf","selectPollFromMessage","storyData","selectPeerStory","selectCanGift","isForbidden","hasFullInfo","SERVICE_NOTIFICATIONS_USER_ID","selectIsPremiumPurchaseBlocked","canScheduleUntilOnline","selectCanScheduleUntilOnline","isMessageTranslated","selectCanPlayAnimatedEmojis","selectIsReactionPickerOpen","isPaidReactionAvailable","ContextMenuContainer","album","openThread","updateDraftReplyInfo","setEditingId","pinMessage","openForwardMenu","openReplyMenu","faveSticker","unfaveSticker","toggleMessageSelection","sendScheduledMessages","rescheduleMessage","downloadMedia","cancelMediaDownload","loadSeenBy","openSeenByModal","openReactorListModal","loadFullChat","loadReactors","copyMessagesByIds","saveGif","cancelPollVote","closePoll","toggleReaction","requestMessageTranslation","showOriginalMessage","openChatLanguageModal","openMessageReactionPicker","openPremiumModal","loadOutboxReadDate","copyMessageLink","openDeleteMessageModal","addLocalPaidReaction","openPaidReactionModal","reportMessages","useShowTransition","isMenuOpen","setIsMenuOpen","isPinModalOpen","setIsPinModalOpen","isClosePollDialogOpen","openClosePollDialog","closeClosePollDialog","selectionQuoteOffset","setSelectionQuoteOffset","requestCalendar","calendar","useSchedule","chatsById","chats","usersById","users","recentReactions","uniqueReactors","PREVIEW_AVATAR_COUNT","messages","msg","downloadableMedia","getMessageDownloadableMedia","getIsDownloading","selectionRange","ancestor","isSelectionRangeInsideMessage","selectionText","messageText","trim","startOffset","closeMenu","handleDelete","isSchedule","closePinModal","handleReply","quoteText","replyToMsgId","quoteOffset","replyToPeerId","fromChatId","handleOpenThread","handleEdit","handlePin","handleUnpin","isUnpin","handleForward","handleFaveSticker","handleUnfaveSticker","handleCancelVote","handlePollClose","handleSelectMessage","params","childMessageIds","withShift","handleScheduledMessageSend","handleRescheduleMessage","scheduledAt","handleOpenCalendar","handleOpenSeenByModal","handleOpenReactorListModal","handleCopyMessages","handleCopyLink","shouldIncludeThread","MAIN_THREAD_ID","shouldIncludeGrouped","handleCopyNumber","phoneNumber","handleDownloadClick","media","originMessage","handleSaveGif","getMessageVideo","gif","handleToggleReaction","initialSection","shouldAddToRecent","handleSendPaidReaction","handlePaidReactionModalOpen","handleReactionPickerOpen","handleTranslate","handleShowOriginal","handleSelectLanguage","reportMessageIds","handleReport","scheduledMaxDate","setFullYear","getFullYear","ConfirmDialog","confirmLabel","confirmHandler","BOTTOM_FOCUS_OFFSET","RELOCATED_FOCUS_OFFSET","SCROLL_MAX_DISTANCE","FOCUS_MARGIN","useFocusMessage","elementRef","isFocused","focusDirection","noFocusHighlight","isResizingContainer","isJustAdded","isQuote","scrollTargetPosition","isRelocatedRef","useLayoutEffect","isRelocated","messagesContainer","isToBottom","scrollPosition","exec","maxDistance","animateScroll","margin","forceDirection","forceNormalContainerHeight","shouldReturnMutationFn","firstQuote","addExtraClass","requestForcedReflow","REACTION_SIZE","ReactionSelectorCustomReaction","chosen","noAppearAnimation","isContextMenuOpen","handleBeforeContextMenu","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","onContextMenu","LOCAL_TGS_URLS","StarReaction","ReactionSelectorReaction","mediaAppearData","appearAnimation","selectAnimation","staticIconData","isFirstPlay","unmarkIsFirstPlay","isActivated","activate","deactivate","onMouseEnter","cn","createClassNameBuilder","isInStoryViewer","isForEffects","effectReactions","areReactionsLocked","shouldUseCurrentReactions","allowed","filteredReactions","isCustomReaction","isInactive","canSendReaction","sortedReactions","sortReactions","reactionsToRender","REACTIONS_AMOUNT","withMoreButton","userReactionIndexes","chosenReactions","chosenOrder","findIndex","handleShowMoreClick","bound","handleOpenPremiumModal","hintText","parts","split","Link","getReactionKey","MAX_EFFECT_COUNT","IS_ANDROID","QUALITY","PaidReactionEmoji","localAmount","effectRef","effectsIds","setEffectsIds","canAddMoreEffects","useEffectWithPrevDeps","prevLocalAmount","prev","noMountTransition","withShouldRender","newEffectsIds","teactFastList","StarIcon","StarReactionEffect","nonInteractive","quality","selectStarsState","stars","ReactionButton","recentReactors","chosenClassName","isOutside","onPaidClick","openStarsBalanceModal","resetLocalPaidReactions","requestWave","counterRef","animationRef","isPaid","starsState","useSelector","areStarsLoaded","handlePaidClick","stopPropagation","prevReaction","amount","button","balance","originReaction","startX","startY","currentScale","Number","scale","cancel","animate","offset","duration","easing","prevAmount","usePrevious","shouldRenderPaidCounter","own","paid","outside","isReactionChosen","Sparkles","preset","animatedEmoji","formatIntegerCompact","paidCounter","counter","Reactions","maxWidth","metaChildren","noRecentReactors","tags","isAccountFrozen","updateMiddleSearch","performMiddleSearch","openFrozenAccountModal","areTags","withServiceReactions","reduce","acc","recentReactorsByReactionKey","recentReaction","reactionKey","shouldHideRecentReactors","isChosen","update","savedTag","paidLocalCount","localId","actionText","cacheBreaker","payload","dismissAction","shouldShowTimer","disableClickDismiss","handleRemoveReaction","useEffectOnce","SavedTagButton","withContextMenu","onRemove","PromptDialog","submitText","initialValue","setText","handleTextChange","handleSubmit","Modal","isSlim","teactExperimentControlled","isText","withCount","editSavedReactionTag","isRenamePromptOpen","openRenamePrompt","closeRenamePrompt","hasText","handleRemoveClick","handleRenameTag","newTitle","contextMenuAnchor","withPortal","tagText","tail","tailFill","autoClose","getRequestInputInvoice","inputInvoice","shouldHideName","giftId","shouldUpgrade","userId","currency","purpose","hash","months","userIds","boostChannelId","boostChannel","additionalChannelIds","untilDate","areWinnersVisible","countries","isOnlyForNewSubscribers","prizeDescription","additionalChannels","inputSavedGift","shouldKeepOriginalDetails","savedGift","getRequestInputSavedStarGift","recipientId","recipient","inputGift","savedId","buildStarsTransactionCustomPeer","avatarIcon","isCustomPeer","titleKey","subtitleKey","peerColorId","customPeerAvatarColor","withPremiumGradient","formatStarsTransactionAmount","starsAmount","nanos","number","abs","formatStarsAmount","getStarsTransactionFromGift","transactionId","senderId","isGift","isMyGift","getPrizeStarsTransactionFromGiveaway","boostPeerId","giveawayPostId","areInputSavedGiftsEqual","one","two","arePropsShallowEqual","callback","delay","savedCallback","RADIUS","ITERATIONS","withRaf","radius","preferredWidth","preferredHeight","isStarted","useSyncEffect","img","Image","processBlur","alpha","IS_CANVAS_FILTER_SUPPORTED","fastBlur","onload","useCustomBackground","theme","settingValue","onBgReady","setThemeSettings","setValue","startsWith","cacheApi","CUSTOM_BG_CACHE_NAME","Blob","blob","url","URL","createObjectURL","catch","background","backgroundColor","isBlurred","DARK_THEME_PATTERN_COLOR","DEFAULT_PATTERN_COLOR","useEnsureMessage","replyOriginForId","loadMessage","useFolderManagerForOrderedIds","folderId","addOrderedIdsCallback","getOrderedIds","useFolderManagerForUnreadCounters","addUnreadCountersCallback","getUnreadCounters","useFolderManagerForChatsCount","addChatsCountCallback","getChatsCount","useFolderManagerForUnreadChatsByFolder","addUnreadChatsByFolderIdCallback","getUnreadChatsByFolderId","useHorizontalScroll","shouldPreventDefault","handleScroll","deltaX","scrollLeft","deltaY","passive","prevRef","lastRef","shouldFocusOnResize","focusLastMessage","messageHeightRef","handleResize","lastHeight","newHeight","isAnimatingScroll","beginHeavyAnimation","resizeDiff","scrollHeight","scrollTop","throttledResize","useThrottledCallback","useRunDebounced","ms","noFirst","noLast","deps","useDebouncedCallback","CalendarModal","onCancel","openAt","onScheduled","setOnScheduled","handleMessageSchedule","isWhenOnline","getTime","getServerTimeOffset","handleMessageScheduleUntilOnline","SCHEDULED_WHEN_ONLINE","handleCloseCalendar","whenScheduled","scheduledDefaultDate","setSeconds","setMilliseconds","withTimePicker","selectedAt","maxAt","getDayStartAt","isFutureMode","secondButtonLabel","onSecondButtonClick","compileShader","gl","source","shader","createShader","shaderSource","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","AnimBgRender","BaseAnimBgRender","super","HTMLCanvasElement","glState","createGLState","syncState","renderBitmap","colors","pos","transitionProgress","OffscreenCanvas","curPos","transferToImageBitmap","prog","createProgram","attachShader","VERTEX_SHADER","FRAGMENT_SHADER","linkProgram","useProgram","posLoc","getAttribLocation","posBuf","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","flat","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","colorPoints","colorLoc","getUniformLocation","posLoc2","prevPosLoc","resolutionLoc","transitionFactorLoc","shouldStop","viewport","uniform2fv","c","uniform4f","uniform2f","keyPoints","uniform1f","getTransitionProgress","drawArrays","TRIANGLES","transformStringsToColors","first","fi","second","se","third","th","fourth","resObserver","transitionStart","performance","nextState","renderLoop","setColors","detach","disconnect","fastRaf","DEFAULT_DURATION","stopById","animateHorizontalScroll","containerWidth","scrollWidth","scrollId","remainingPath","isStopped","scrollSnapType","startAt","cleanup","t","currentPath","transition","currentArgs","onHeavyAnimationEnd","isAnimating","args","mutate","createMutateFunction","restartCurrentScrollAnimation","cancelSingleAnimation","forceDuration","FocusDirection","Static","elementHeight","currentScrollTop","containerHeight","elementTop","getOffsetToContainer","targetContainerHeight","normalHeight","scrollTo","scrollFrom","Up","Down","calculateScrollFrom","absPath","SCROLL_SHORT_TRANSITION_MAX_DISTANCE","shortTransition","longTransition","SCROLL_MIN_DURATION","SCROLL_MAX_DURATION","prevOnHeavyAnimationEnd","animateSingle","newScrollTop","cancelScrollBlockingAnimation","nodeValue","selectedFragments","shouldIncludeLastMessage","focusNode","focusOffset","hasParentWithClassName","MESSAGE_CONTENT_CLASS_NAME","childElementCount","messageEl","firstChild","CUSTOM_PEER_PREMIUM","CUSTOM_PEER_INCLUDED_CHAT_TYPES","CUSTOM_PEER_EXCLUDED_CHAT_TYPES","CUSTOM_PEER_HIDDEN","EntityChar","_","Code","countTokens","tokens","res","token","dec","inc","getPreLanguage","preContents","fullTrim","breakPos","rest","breakableEntities","B","STRONG","I","EM","INS","U","S","STRIKE","DEL","CODE","PRE","Pre","Blockquote","MAX_TAG_DEEPNESS","withMarkdownLinks","skipMarkdown","RegExp","RE_LINK_TEMPLATE","link","parseMarkdownLinks","br","dtr","fixImageContent","textIndex","recursionDeepness","addEntity","COMMENT_NODE","index","rawText","Url","Email","Phone","TextUrl","getEntityTypeFromNode","rawIndex","language","Timestamp","timestamp","isNaN","getEntityDataFromNode","hasChildNodes","fmtRes","extEnt","accum","dumpAccum","cur","lookAhead","sLookAhead","curEnt","tokenize","tokenCount","currentCode","discard","langAndRest","trimmedCnt","doCodePass","fmtText","consumed","tokenStarts","resStr","resEnt","resConsumed","newt","tokensToEntities","ent","start","end","addExternalEntities","startSize","trimStart","startShift","trimMessage","startEntities","resEntities","fixupMap","startMarkers","endMarkers","fixupList","entries","curState","curEnts","entr","upd","val","fixupEntities","parseMarkdown","scrollLockEl","excludedClosestSelector","IGNORED_KEYS","ArrowDown","ArrowUp","Left","ArrowLeft","Right","ArrowRight","PageUp","PageDown","End","Home","Tab","changedTouches","getTouchY","preventDefaultForScrollKeys","isTextBox","_excludedClosestSelector","onkeydown","enableScrolling","offsetTop","offsetLeft","offsetParent","isElementInViewport","display","windowHeight","windowSize"],"sourceRoot":""}