{"version":3,"file":"641.eacb2792f90003aec83c.js","mappings":"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D,gBACA2D,gBACA1F,oBACAiC,yBACA0D,UACAjtB,WACAoT,iBACAta,SACAqZ,WACAqR,WACA4C,sBACA/S,mBACAqH,SACA3hB,QACAmrB,gBACA+C,gBACAZ,2BACAhK,wBACAiK,yBACA1C,iBACAtI,kBACAmO,aACAiC,iBACAhC,sBACAE,sBACAkC,wBACAc,4BACApS,gBACA4B,0BACA8N,aACAjF,wBACA+E,0BACAkD,oBACApD,uBACAK,oBACAG,uBACAE,mBACAhO,iBACA2I,eACA0G,gBACAlB,wBACArG,yBACAC,4BACAO,qBACAC,iBACA6F,gBACAE,cACAE,sBACAE,eACAvF,cACAC,cACAN,YACAmB,gBACAZ,kBACAE,uBACAsF,iBACA1Y,cACA6Y,sBACA5K,sBACApjB,SACAgpB,YACAhC,+BACA2I,4BACAC,mBACAC,WACArzB,aACAmvB,sBACAC,gBACA4C,iBACAE,yBACApZ,0BACAgU,qBACAuF,eACAD,uBACAG,sBACAC,gBACAjF,uBACAzG,kBACAJ,aACAgM,2BACApZ,qBACA6U,UACAE,mBACAT,uBACAE,iBACAE,oBACAO,oBACAf,mBACA8F,cACAC,WACAC,UACAC,aACAd,qCACAjE,gBACAI,2BACA+D,mBACA7D,mBACAE,yBAEA,MAAM,YACJwE,GAAW,WACXC,GAAU,WACVC,GAAU,cACVC,GAAa,eACbC,GAAc,qBACdC,GAAoB,WACpBC,GAAU,eACVC,GAAc,oBACdC,GAAmB,WACnBC,GAAU,uBACVC,GAAsB,cACtBC,GAAa,qBACbC,GAAoB,iBACpBC,GAAgB,oCAChBC,GAAmC,wBACnCC,GAAuB,cACvBC,GAAa,oBACbC,GAAmB,kBACnBC,GAAiB,YACjBC,GAAW,yBACXxN,GAAwB,kBACxByN,GAAiB,kBACjBC,GAAiB,qBACjBC,GAAoB,wBACpBC,KACE70B,EAAAA,EAAAA,MAEEqc,IAAUnc,EAAAA,EAAAA,KACVD,IAAOqc,EAAAA,EAAAA,MAEP,QAAEsK,GAASpb,IAAKspB,KAAiBC,EAAAA,EAAAA,MAGjCC,IAAatvB,EAAAA,EAAAA,IAAwB,MAGr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gBAC5DjxD,wBACImlB,GAAc,CAAEpe,gBAAgByf,EAAAA,EAAAA,KAAqBpiE,EAAQ4E,EAA6B,cAApB4V,OAC5C,iBAAnB1V,IAA+B,CAAEA,sBACxCu+G,IAAa,CACfE,kBACAE,oBACAC,uBACAE,gBACAC,sBACAC,yBAEFyB,gBACAqC,KAAM5nH,EAAO6nH,mBAAmB/7F,MAChCg6F,sBACAC,kBACAz2F,UACA6gB,QACA81E,gBACAE,yBACAxN,mBACA3tF,iBACAmF,mBACD,GAxOepwB,EAz3CuB+nH,EACzCljH,UACAmjH,+BACA/4D,gCACA5B,gCACAkxC,QACAr5F,YACA8E,aACAo3G,iBACA6G,aACA3P,YACA4P,kBACAC,cACA7G,iBACA5nD,YACA0uD,gBACAC,yBACAhH,yBACA/7G,kBACA6hH,mBACAmB,gBACA1jH,SACAi9G,mBACA1/F,UACA4/F,iBACAC,gBACAC,aACAG,eACAK,mBACAC,gBACAG,sBACAE,6BACAC,oBACAG,cACAF,kBACAG,eACAxgE,kBACA79C,kBACA4/G,qBACA8C,qBACAzjE,eACAuiE,mBACAjD,aACAE,kBACAK,gBACAC,sBACAJ,oBACAK,wBACAJ,uBACA/hG,gBACAc,kBACA0kC,iBACAE,uBACAz2B,aACA6wF,WACA5c,YACAof,aACA/xC,iBACAkyC,uBACAkB,sBACA+B,iBACAziB,kBACAz/F,cACAqhH,mBACAltG,YACAurG,mBACAv0F,sBACAw2F,mBACApc,2BACAlwF,mBACAksG,gBACAhkD,YACAt9D,iBACA4pG,oBACA2X,oBACAC,sBACAnrE,yBACA08D,qBACA2M,qBACAwD,wBACArG,qBACAgD,gBACAD,gBACAl2D,oBACAu2D,0BACA8B,4BACAhC,gCACAp2D,oCACAw4D,uBACA5F,gBACAhlB,eACAsI,yBACArpD,sBACA2pE,gBACAqC,QACA9B,sBACAC,kBACAz2F,UACA6gB,QACA81E,gBACAE,yBACAoC,4BACA5P,oBACA3tF,kBACAmF,uBAEA,MAAM,uBACJg4E,GAAsB,qBACtB5oF,GAAoB,uBACpBipG,GAAsB,sBACtB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","sources":["webpack://telegram-t/./src/components/calls/group/GroupCallTopPane.tsx","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/components/middle/composer/helpers/applyIosAutoCapitalizationFix.ts","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useChatCommandTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useDraft.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEditing.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInlineBotTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useStickerTooltip.ts","webpack://telegram-t/./src/util/voiceRecording.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/AttachMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotKeyboardMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/ComposerEmbeddedMessage.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.async.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/WebPagePreview.tsx","webpack://telegram-t/./src/components/common/Composer.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useAttachmentModal.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useVoiceRecording.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useClipboardPaste.ts","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/components/common/DotAnimation.tsx","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/components/common/LinkField.module.scss?fa18","webpack://telegram-t/./src/components/common/LinkField.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/components/common/PaymentMessageConfirmDialog.module.scss?1d52","webpack://telegram-t/./src/components/common/PaymentMessageConfirmDialog.tsx","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/common/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/ProfileInfo.module.scss?701a","webpack://telegram-t/./src/components/common/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/components/common/TopicIcon.tsx","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/components/common/embedded/EmbeddedMessage.tsx","webpack://telegram-t/./src/components/common/helpers/boostInfo.ts","webpack://telegram-t/./src/components/common/helpers/formatUsername.ts","webpack://telegram-t/./src/util/dates/workHours.ts","webpack://telegram-t/./src/components/common/profile/BusinessHours.module.scss?06fd","webpack://telegram-t/./src/components/common/profile/BusinessHours.tsx","webpack://telegram-t/./src/components/common/profile/UserBirthday.module.scss?dc99","webpack://telegram-t/./src/components/common/profile/UserBirthday.tsx","webpack://telegram-t/./src/components/common/profile/ChatExtra.module.scss?9412","webpack://telegram-t/./src/components/common/profile/ChatExtra.tsx","webpack://telegram-t/./src/components/common/richinput/Keyboard.ts","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx","webpack://telegram-t/./src/components/left/MuteChatModal.async.tsx","webpack://telegram-t/./src/components/left/main/ChatCallStatus.module.scss?f06e","webpack://telegram-t/./src/components/left/main/ChatCallStatus.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/left/main/ChatBadge.tsx","webpack://telegram-t/./src/components/left/main/ChatFolders.tsx","webpack://telegram-t/./src/components/left/main/Archive.module.scss?6d2a","webpack://telegram-t/./src/components/left/main/Archive.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.module.scss?0952","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/FrozenAccountNotification.tsx","webpack://telegram-t/./src/components/left/main/FrozenAccountNotification.module.scss?c59a","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.module.scss?bd2b","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/hooks/scroll/useTopOverscroll.tsx","webpack://telegram-t/./src/components/left/main/EmptyForum.module.scss?0a02","webpack://telegram-t/./src/components/left/main/EmptyForum.tsx","webpack://telegram-t/./src/components/left/main/Topic.module.scss?d97e","webpack://telegram-t/./src/components/left/main/Topic.tsx","webpack://telegram-t/./src/components/left/main/hooks/useTopicContextActions.ts","webpack://telegram-t/./src/components/left/main/ForumPanel.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.module.scss?d1a9","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/common/ChatForumLastMessage.module.scss?cb0b","webpack://telegram-t/./src/components/common/ChatForumLastMessage.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatListEntry.tsx","webpack://telegram-t/./src/components/left/main/hooks/useLeftHeaderButtonRtlForumTransition.ts","webpack://telegram-t/./src/components/left/main/hooks/useOrderDiff.ts","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/main/visualEffects/SnapEffectContainer.module.scss?fa7b","webpack://telegram-t/./src/components/main/visualEffects/SnapEffectContainer.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/HeaderActions.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.module.scss?7e9f","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotItem.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/buildAttachment.ts","webpack://telegram-t/./src/util/audio.ts","webpack://telegram-t/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://telegram-t/./src/components/middle/composer/helpers/renderKeyboardButtonText.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useCustomEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/usePaidMessageConfirmation.ts","webpack://telegram-t/./src/components/middle/hooks/useHeaderPane.tsx","webpack://telegram-t/./src/components/middle/message/BaseStory.module.scss?d118","webpack://telegram-t/./src/components/middle/message/BaseStory.tsx","webpack://telegram-t/./src/components/middle/message/helpers/getSingularPaidMedia.ts","webpack://telegram-t/./src/components/middle/message/helpers/calculateAlbumLayout.ts","webpack://telegram-t/./src/util/languageDetection.ts","webpack://telegram-t/./src/components/middle/message/hooks/useDetectChatLanguage.ts","webpack://telegram-t/./src/components/middle/message/hooks/useOuterHandlers.ts","webpack://telegram-t/./src/components/common/embedded/EmbeddedStory.tsx","webpack://telegram-t/./src/components/common/TopicChip.tsx","webpack://telegram-t/./src/components/common/TopicChip.module.scss?5208","webpack://telegram-t/./src/components/middle/message/hocs/withSelectControl.tsx","webpack://telegram-t/./src/components/middle/message/Album.tsx","webpack://telegram-t/./src/components/common/hooks/useAnimatedEmoji.ts","webpack://telegram-t/./src/components/middle/message/AnimatedCustomEmoji.tsx","webpack://telegram-t/./src/components/middle/message/AnimatedEmoji.tsx","webpack://telegram-t/./src/components/middle/message/CommentButton.tsx","webpack://telegram-t/./src/components/middle/message/Contact.module.scss?fec1","webpack://telegram-t/./src/components/middle/message/Contact.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/message/FactCheck.module.scss?3842","webpack://telegram-t/./src/components/middle/message/FactCheck.tsx","webpack://telegram-t/./src/components/middle/message/Game.tsx","webpack://telegram-t/./src/components/middle/message/Giveaway.module.scss?9b0c","webpack://telegram-t/./src/components/middle/message/Giveaway.tsx","webpack://telegram-t/./src/components/middle/message/InlineButtons.tsx","webpack://telegram-t/./src/components/middle/message/Invoice.tsx","webpack://telegram-t/./src/components/middle/message/InvoiceMediaPreview.module.scss?19f6","webpack://telegram-t/./src/components/middle/message/InvoiceMediaPreview.tsx","webpack://telegram-t/./src/components/middle/message/Location.tsx","webpack://telegram-t/./src/components/middle/message/MessageMeta.tsx","webpack://telegram-t/./src/components/middle/message/MessagePhoneCall.module.scss?15a3","webpack://telegram-t/./src/components/middle/message/MessagePhoneCall.tsx","webpack://telegram-t/./src/components/middle/message/PaidMediaOverlay.module.scss?e3d6","webpack://telegram-t/./src/components/middle/message/PaidMediaOverlay.tsx","webpack://telegram-t/./src/components/middle/message/PollOption.tsx","webpack://telegram-t/./src/components/middle/message/Poll.tsx","webpack://telegram-t/./src/components/middle/message/Sticker.module.scss?30d0","webpack://telegram-t/./src/components/middle/message/Sticker.tsx","webpack://telegram-t/./src/components/middle/message/Story.tsx","webpack://telegram-t/./src/components/middle/message/StoryMention.tsx","webpack://telegram-t/./src/components/middle/message/Message.tsx","webpack://telegram-t/./src/components/middle/message/hooks/useInnerHandlers.ts","webpack://telegram-t/./src/hooks/useTextLanguage.ts","webpack://telegram-t/./src/components/middle/message/helpers/buildContentClassName.ts","webpack://telegram-t/./src/components/middle/message/MessageAppendix.tsx","webpack://telegram-t/./src/components/middle/message/MessageEffect.module.scss?d23f","webpack://telegram-t/./src/components/middle/message/MessageEffect.tsx","webpack://telegram-t/./src/components/middle/message/Photo.tsx","webpack://telegram-t/./src/components/middle/message/RoundVideo.tsx","webpack://telegram-t/./src/components/middle/message/SponsoredContextMenu.tsx","webpack://telegram-t/./src/components/middle/message/SponsoredContextMenuContainer.tsx","webpack://telegram-t/./src/components/middle/message/Video.tsx","webpack://telegram-t/./src/components/middle/message/WebPageUniqueGift.module.scss?8703","webpack://telegram-t/./src/components/middle/message/WebPageUniqueGift.tsx","webpack://telegram-t/./src/components/middle/message/WebPage.tsx","webpack://telegram-t/./src/components/middle/message/helpers/webpageType.ts","webpack://telegram-t/./src/components/middle/message/helpers/getCustomAppendixBg.ts","webpack://telegram-t/./src/components/middle/message/helpers/mediaDimensions.ts","webpack://telegram-t/./src/hooks/useOffscreenCanvasBlur.ts","webpack://telegram-t/./src/components/middle/message/hooks/useBlurredMediaThumbRef.ts","webpack://telegram-t/./src/components/middle/message/hooks/useMessageTranslation.ts","webpack://telegram-t/./src/components/middle/message/hooks/useOverlayPosition.ts","webpack://telegram-t/./src/components/right/DeleteMemberModal.tsx","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.module.scss?5334","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.tsx","webpack://telegram-t/./src/components/story/StoryRibbonButton.tsx","webpack://telegram-t/./src/components/story/StoryRibbon.tsx","webpack://telegram-t/./src/components/story/StoryToggler.tsx","webpack://telegram-t/./src/components/story/helpers/ribbonAnimation.ts","webpack://telegram-t/./src/components/story/helpers/videoFormats.ts","webpack://telegram-t/./src/components/story/hooks/useStoryPreloader.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaArea.module.scss?fe60","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaSuggestedReaction.tsx","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaWeather.tsx","webpack://telegram-t/./src/util/formatTemperature.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaOverlay.tsx","webpack://telegram-t/./src/global/selectors/calls.ts","webpack://telegram-t/./src/global/selectors/limits.ts","webpack://telegram-t/./src/hooks/media/useUnsupportedMedia.ts","webpack://telegram-t/./src/hooks/polling/usePeerStoriesPolling.ts","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/hooks/schedulers/useIntervalForceUpdate.ts","webpack://telegram-t/./src/hooks/useAsyncResolvers.ts","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/hooks/useEnsureStory.ts","webpack://telegram-t/./src/hooks/useForumPanelRender.ts","webpack://telegram-t/./src/hooks/useHotkeys.ts","webpack://telegram-t/./src/util/parseHotkey.ts","webpack://telegram-t/./src/hooks/useInputFocusOnOpen.ts","webpack://telegram-t/./src/hooks/useLongPress.ts","webpack://telegram-t/./src/hooks/useMarkScrolled/useMarkScrolled.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/hooks/useSendMessageAction.ts","webpack://telegram-t/./src/hooks/useStreaming.ts","webpack://telegram-t/./src/hooks/window/useBeforeUnload.ts","webpack://telegram-t/./src/hooks/window/useFullscreen.ts","webpack://telegram-t/./src/types/electron.ts","webpack://telegram-t/./src/util/PostMessageConnector.ts","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/util/download.ts","webpack://telegram-t/./src/util/launchMediaWorkers.ts","webpack://telegram-t/./src/util/map.ts","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/util/memoized.ts","webpack://telegram-t/./src/util/progressiveLoader.ts","webpack://telegram-t/./src/util/systemFilesDialog.ts","webpack://telegram-t/./src/components/story/StoryRibbon.module.scss?8966","webpack://telegram-t/./src/components/story/StoryToggler.module.scss?58fa"],"sourcesContent":["import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiGroupCall } from '../../../api/types';\n\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { selectChatGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useHeaderPane, { type PaneState } from '../../middle/hooks/useHeaderPane';\n\nimport AvatarList from '../../common/AvatarList';\nimport Button from '../../ui/Button';\n\nimport './GroupCallTopPane.scss';\n\ntype OwnProps = {\n  chatId: string;\n  className?: string;\n  onPaneStateChange?: (state: PaneState) => void;\n};\n\ntype StateProps = {\n  groupCall?: ApiGroupCall;\n  isActive: boolean;\n};\n\nconst PREVIEW_AVATARS_COUNT = 3;\n\nconst GroupCallTopPane: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  className,\n  groupCall,\n  onPaneStateChange,\n}) => {\n  const {\n    requestMasterAndJoinGroupCall,\n    subscribeToGroupCallUpdates,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleJoinGroupCall = useCallback(() => {\n    requestMasterAndJoinGroupCall({\n      chatId,\n    });\n  }, [requestMasterAndJoinGroupCall, chatId]);\n\n  const participants = groupCall?.participants;\n\n  const fetchedParticipants = useMemo(() => {\n    if (!participants) {\n      return [];\n    }\n\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    return Object.values(participants)\n      .slice(0, PREVIEW_AVATARS_COUNT)\n      .map(({ id }) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [participants]);\n\n  useEffect(() => {\n    if (!groupCall?.id) return undefined;\n    if (!isActive && groupCall.isLoaded) return undefined;\n\n    subscribeToGroupCallUpdates({\n      id: groupCall.id,\n      subscribed: true,\n    });\n\n    return () => {\n      subscribeToGroupCallUpdates({\n        id: groupCall.id,\n        subscribed: false,\n      });\n    };\n  }, [groupCall?.id, groupCall?.isLoaded, isActive, subscribeToGroupCallUpdates]);\n\n  const renderingParticipantCount = useCurrentOrPrev(groupCall?.participantsCount, true);\n  const renderingFetchedParticipants = useCurrentOrPrev(fetchedParticipants, true);\n\n  const isRendering = Boolean(groupCall && isActive);\n\n  const { ref, shouldRender } = useHeaderPane({\n    isOpen: isRendering,\n    onStateChange: onPaneStateChange,\n  });\n\n  if (!shouldRender) return undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'GroupCallTopPane',\n        className,\n      )}\n      onClick={handleJoinGroupCall}\n    >\n      <div className=\"info\">\n        <span className=\"title\">{lang('VoipGroupVoiceChat')}</span>\n        <span className=\"participants\">{lang('Participants', renderingParticipantCount ?? 0, 'i')}</span>\n      </div>\n      {Boolean(renderingFetchedParticipants?.length) && (\n        <AvatarList size=\"small\" peers={renderingFetchedParticipants} className=\"avatars\" />\n      )}\n      <Button round className=\"join\">\n        {lang('VoipChatJoin')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const groupCall = selectChatGroupCall(global, chatId);\n    const activeGroupCallId = selectTabState(global).isMasterTab ? global.groupCalls.activeGroupCallId : undefined;\n\n    return {\n      groupCall,\n      isActive: activeGroupCallId !== groupCall?.id && Boolean(\n        groupCall\n          ? groupCall.participantsCount > 0 && groupCall.isLoaded\n          : chat && chat.isCallNotEmpty && chat.isCallActive,\n      ),\n    };\n  },\n)(GroupCallTopPane));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type {\n  ApiAudio, ApiMessage, ApiVideo, ApiVoice,\n} from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport type { OldLangFn } from '../../hooks/useOldLang';\nimport type { ThemeKey } from '../../types';\nimport { ApiMediaFormat } from '../../api/types';\nimport { AudioOrigin } from '../../types';\n\nimport {\n  getMediaDuration,\n  getMediaFormat,\n  getMediaHash,\n  getMediaTransferState,\n  getMessageWebPageAudio,\n  hasMessageTtl,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../global/helpers';\nimport { makeTrackId } from '../../util/audioPlayer';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport renderText from './helpers/renderText';\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useBuffering from '../../hooks/useBuffering';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Button from '../ui/Button';\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport AnimatedIcon from './AnimatedIcon';\nimport Icon from './icons/Icon';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ThemeKey;\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  noAvatars?: boolean;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading?: boolean;\n  isTranscribing?: boolean;\n  isTranscribed?: boolean;\n  canDownload?: boolean;\n  canTranscribe?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscriptionError?: boolean;\n  autoPlay?: boolean;\n  onHideTranscription?: (isHidden: boolean) => void;\n  onPlay?: (messageId: number, chatId: string) => void;\n  onPause?: NoneToVoidFunction;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (arg: ApiMessage) => void;\n};\n\nexport const TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 375px)');\nexport const WITH_AVATAR_TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 410px)');\nconst AVG_VOICE_DURATION = 10;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n\nconst Audio: FC<OwnProps> = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  noAvatars,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  isTranscribing,\n  isTranscriptionHidden,\n  isTranscribed,\n  isTranscriptionError,\n  canDownload,\n  canTranscribe,\n  autoPlay,\n  onHideTranscription,\n  onPlay,\n  onPause,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}) => {\n  const {\n    cancelMediaDownload, downloadMedia, transcribeAudio, openOneTimeMediaModal,\n  } = getActions();\n\n  const {\n    content: {\n      audio: contentAudio, voice, video,\n    }, isMediaUnread,\n  } = message;\n  const audio = contentAudio || getMessageWebPageAudio(message);\n  const media = (voice || video || audio)!;\n  const mediaSource = (voice || video);\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const { isRtl } = lang;\n\n  const { isMobile } = useAppLayout();\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = isActivated || PRELOAD;\n  const coverHash = getMediaHash(media, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === AudioOrigin.OneTimeModal;\n  const trackType = isVoice ? (hasTtl ? 'oneTimeVoice' : 'voice') : 'audio';\n\n  const mediaData = useMedia(\n    getMediaHash(media, 'inline'),\n    !shouldLoad,\n    getMediaFormat(media, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMediaHash(media, 'download'),\n    !isDownloading,\n    getMediaFormat(media, 'download'),\n  );\n\n  const handleForcePlay = useLastCallback(() => {\n    setIsActivated(true);\n    onPlay?.(message.id, message.chatId);\n  });\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsActivated(false);\n  });\n\n  const {\n    isBuffered, bufferedRanges, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const noReset = isInOneTimeModal;\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    getMediaDuration(message)!,\n    trackType,\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    Boolean(isActivated || autoPlay),\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message) || hasTtl,\n    undefined,\n    onPause,\n    noReset,\n    hasTtl && !isInOneTimeModal,\n  );\n\n  const reversePlayProgress = 1 - playProgress;\n  const isOwn = isOwnMessage(message);\n  const isReverse = hasTtl && isInOneTimeModal;\n\n  const waveformCanvasRef = useWaveformCanvas(\n    theme,\n    mediaSource,\n    (isMediaUnread && !isOwn && !isReverse) ? 1 : playProgress,\n    isOwn,\n    !noAvatars,\n    isMobile,\n    isReverse,\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (hasTtl) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay?.(message.id, message.chatId);\n    }\n\n    getActions().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && isPlaying) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia]);\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (isDownloading) {\n      cancelMediaDownload({ media });\n    } else {\n      downloadMedia({ media, originMessage: message });\n    }\n  });\n\n  const handleSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  });\n\n  const handleStartSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    handleSeek(e);\n  });\n\n  const handleStopSeek = useLastCallback(() => {\n    isSeeking.current = false;\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline || isInOneTimeModal) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek, isInOneTimeModal]);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    isInOneTimeModal && 'non-interactive',\n    origin === AudioOrigin.Inline && 'inline',\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toogle-play-wrapper'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else {\n    buttonClassNames.push(isPlaying ? 'pause' : 'play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <div className={contentClassName}>\n        <div className=\"content-row\">\n          <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n          <div className=\"message-date\">\n            {Boolean(date) && (\n              <Link\n                className=\"date\"\n                onClick={handleDateClick}\n              >\n                {formatPastTimeShort(lang, date * 1000)}\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {withSeekline && (\n          <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n            <span className=\"duration with-seekline\" dir=\"auto\">\n              {playProgress < 1 && `${formatMediaDuration(duration * playProgress, duration)}`}\n            </span>\n            {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n          </div>\n        )}\n        {!withSeekline && renderSecondLine()}\n      </div>\n    );\n  }\n\n  function renderTooglePlayWrapper() {\n    return (\n      <div className={buildClassName(...buttonClassNames)}>\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"smaller\"\n          className=\"toggle-play\"\n          color={coverBlobUrl ? 'translucent-white' : 'primary'}\n          ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n          onClick={handleButtonClick}\n          isRtl={lang.isRtl}\n          backgroundImage={coverBlobUrl}\n          nonInteractive={isInOneTimeModal}\n        >\n          {!isInOneTimeModal && <Icon name=\"play\" />}\n          {!isInOneTimeModal && <Icon name=\"pause\" />}\n          {isInOneTimeModal && (\n            <AnimatedIcon\n              className=\"flame\"\n              tgsUrl={LOCAL_TGS_URLS.Flame}\n              nonInteractive\n              noLoop={false}\n              size={40}\n            />\n          )}\n        </Button>\n        {hasTtl && !isInOneTimeModal && (\n          <Icon name=\"view-once\" />\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control no-selection\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      {renderTooglePlayWrapper()}\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            withColor\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {isInOneTimeModal && !shouldRenderSpinner && (\n        <div className={buildClassName('media-loading')}>\n          <ProgressSpinner\n            progress={playProgress}\n            transparent\n            size=\"m\"\n            noCross\n            rotationOffset={3 / 4}\n          />\n        </div>\n      )}\n      {audio && canDownload && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <Icon name={isDownloading ? 'close' : 'arrow-down'} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang,\n        audio,\n        duration,\n        isPlaying,\n        playProgress,\n        bufferedRanges,\n        seekerRef,\n        (isDownloading || isUploading),\n        date,\n        transferProgress,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && mediaSource && renderWithTitle()}\n      {(origin === AudioOrigin.Inline || isInOneTimeModal || isTranscribed) && mediaSource && (\n        renderVoice(\n          mediaSource,\n          seekerRef,\n          waveformCanvasRef,\n          hasTtl ? reversePlayProgress : playProgress,\n          isMediaUnread,\n          isTranscribing,\n          isTranscriptionHidden,\n          isTranscribed,\n          isTranscriptionError,\n          canTranscribe ? handleTranscribe : undefined,\n          onHideTranscription,\n          origin,\n        )\n      )}\n    </div>\n  );\n};\n\nfunction getSeeklineSpikeAmounts(isMobile?: boolean, withAvatar?: boolean) {\n  return {\n    MIN_SPIKES: isMobile ? (TINY_SCREEN_WIDTH_MQL.matches ? 16 : 20) : 25,\n    MAX_SPIKES: isMobile\n      ? (TINY_SCREEN_WIDTH_MQL.matches\n        ? 35\n        : (withAvatar && WITH_AVATAR_TINY_SCREEN_WIDTH_MQL.matches ? 40 : 45))\n      : 75,\n  };\n}\n\nfunction renderAudio(\n  lang: OldLangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = lang;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio!.size * progress)} / ` : undefined}{getFileSizeString(audio!.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          {performer && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer)}</span>\n            </>\n          )}\n          {Boolean(date) && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  media: ApiVoice | ApiVideo,\n  seekerRef: React.Ref<HTMLDivElement>,\n  waveformCanvasRef: React.Ref<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n  isTranscribing?: boolean,\n  isTranscriptionHidden?: boolean,\n  isTranscribed?: boolean,\n  isTranscriptionError?: boolean,\n  onClickTranscribe?: VoidFunction,\n  onHideTranscription?: (isHidden: boolean) => void,\n  origin?: AudioOrigin,\n) {\n  return (\n    <div className=\"content\">\n      <div className=\"waveform-wrapper\">\n        <div\n          className=\"waveform\"\n          draggable={false}\n          ref={seekerRef}\n        >\n          <canvas ref={waveformCanvasRef} />\n        </div>\n        {onClickTranscribe && (\n          // eslint-disable-next-line react/jsx-no-bind\n          <Button onClick={() => {\n            if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n              onHideTranscription(!isTranscriptionHidden);\n            } else if (!isTranscribing) {\n              onClickTranscribe();\n            }\n          }}\n          >\n            <Icon\n              name={(isTranscribed || isTranscriptionError) ? 'down' : 'transcribe'}\n              className={buildClassName(\n                'transcribe-icon',\n                (isTranscribed || isTranscriptionError) && !isTranscriptionHidden && 'transcribe-shown',\n              )}\n            />\n            {isTranscribing && (\n              <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n                <rect\n                  className=\"loading-rect\"\n                  fill=\"transparent\"\n                  width=\"32\"\n                  height=\"24\"\n                  stroke-width=\"3\"\n                  stroke-linejoin=\"round\"\n                  rx=\"6\"\n                  ry=\"6\"\n                  stroke=\"white\"\n                  stroke-dashoffset=\"1\"\n                  stroke-dasharray=\"32,68\"\n                />\n              </svg>\n            )}\n          </Button>\n        )}\n      </div>\n      <p\n        className={buildClassName('voice-duration', origin !== AudioOrigin.OneTimeModal && isMediaUnread && 'unread')}\n        dir=\"auto\"\n      >\n        {playProgress === 0 || playProgress === 1\n          ? formatMediaDuration(media!.duration) : formatMediaDuration(media!.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ThemeKey,\n  media?: ApiVoice | ApiVideo,\n  playProgress = 0,\n  isOwn = false,\n  withAvatar = false,\n  isMobile = false,\n  isReverse = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!media) {\n      return undefined;\n    }\n\n    const { waveform, duration } = media;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const { MIN_SPIKES, MAX_SPIKES } = getSeeklineSpikeAmounts(isMobile, withAvatar);\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [isMobile, media, withAvatar]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    const fillStyle = isOwn ? fillOwnColor : fillColor;\n    const progressFillStyle = isOwn ? progressFillOwnColor : progressFillColor;\n\n    renderWaveform(canvas, spikes, isReverse ? 1 - playProgress : playProgress, {\n      peak,\n      fillStyle,\n      progressFillStyle,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme, isReverse]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n) {\n  return (\n    <div\n      className=\"seekline\"\n      ref={seekerRef as React.Ref<HTMLDivElement>}\n    >\n      {bufferedRanges.map(({ start, end }) => (\n        <div\n          className=\"seekline-buffered-progress\"\n          style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n        />\n      ))}\n      <span className=\"seekline-play-progress\">\n        <i\n          className=\"seekline-play-progress-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          className=\"seekline-thumb-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(Audio);\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, (height + spikeHeight) / 2, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","/* eslint-disable no-bitwise */\n\n// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","import { IS_IOS } from '../../../../util/browser/windowEnvironment';\n\nlet resetInput: HTMLInputElement;\n\nif (IS_IOS) {\n  resetInput = document.createElement('input');\n  resetInput.classList.add('for-ios-autocapitalization-fix');\n  document.body.appendChild(resetInput);\n}\n\n// https://stackoverflow.com/a/55652503\nexport default function applyIosAutoCapitalizationFix(inputEl: HTMLElement) {\n  resetInput.focus();\n  inputEl.focus();\n}\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport type { ApiBotCommand, ApiQuickReply } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst RE_COMMAND = /^\\/([\\w@]{1,32})?$/i;\n\nconst THROTTLE = 300;\n\nexport default function useChatCommandTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  botCommands?: ApiBotCommand[] | false,\n  chatBotCommands?: ApiBotCommand[],\n  quickReplies?: Record<number, ApiQuickReply>,\n) {\n  const [filteredBotCommands, setFilteredBotCommands] = useState<ApiBotCommand[] | undefined>();\n  const [filteredQuickReplies, setFilteredQuickReplies] = useState<ApiQuickReply[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const detectCommandThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('/') ? prepareForRegExp(html).match(RE_COMMAND)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getCommand = useDerivedSignal(\n    detectCommandThrottled, [detectCommandThrottled, getHtml], true,\n  );\n\n  useEffect(() => {\n    const command = getCommand();\n    const commands = botCommands || chatBotCommands;\n    if (!command || (!commands && !quickReplies)) {\n      setFilteredBotCommands(undefined);\n      setFilteredQuickReplies(undefined);\n      return;\n    }\n\n    const filter = command.substring(1);\n    const nextFilteredBotCommands = commands?.filter((c) => !filter || c.command.startsWith(filter));\n\n    setFilteredBotCommands(\n      nextFilteredBotCommands?.length ? nextFilteredBotCommands : undefined,\n    );\n\n    const newFilteredQuickReplies = Object.values(quickReplies || {}).filter((quickReply) => (\n      !filter || quickReply.shortcut.startsWith(filter)\n    ));\n\n    setFilteredQuickReplies(\n      newFilteredQuickReplies?.length ? newFilteredQuickReplies : undefined,\n    );\n  }, [getCommand, botCommands, chatBotCommands, quickReplies]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isOpen: Boolean((filteredBotCommands?.length || filteredQuickReplies?.length) && !isManuallyClosed),\n    close: markManuallyClosed,\n    filteredBotCommands,\n    filteredQuickReplies,\n  };\n}\n","import { useEffect, useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiDraft, ApiMessage } from '../../../../api/types';\nimport type { ThreadId } from '../../../../types';\nimport type { RichInputCtx } from '../../../common/richinput/useRichEditable';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DRAFT_DEBOUNCE } from '../../../../config';\nimport {\n  requestMeasure,\n} from '../../../../lib/fasterdom/fasterdom';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../../hooks/useLayoutEffectWithPrevDeps';\nimport useRunDebounced from '../../../../hooks/useRunDebounced';\nimport { useStateRef } from '../../../../hooks/useStateRef';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nlet isFrozen = false;\n\nfunction freeze() {\n  isFrozen = true;\n\n  requestMeasure(() => {\n    isFrozen = false;\n  });\n}\n\nconst useDraft = ({\n  draft,\n  chatId,\n  threadId,\n  richInputCtx,\n  editedMessage,\n  isDisabled,\n} : {\n  draft?: ApiDraft;\n  chatId: string;\n  threadId: ThreadId;\n  richInputCtx: RichInputCtx;\n  editedMessage?: ApiMessage;\n  isDisabled?: boolean;\n}) => {\n  const { saveDraft, clearDraft, loadCustomEmojis } = getActions();\n\n  const isTouchedRef = useRef(false);\n\n  useEffect(() => {\n    const html = richInputCtx.editable.htmlS();\n    const isLocalDraft = draft?.isLocal !== undefined;\n    if (getTextWithEntitiesAsHtml(draft?.text) === html && !isLocalDraft) {\n      isTouchedRef.current = false;\n    } else {\n      isTouchedRef.current = true;\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [draft, richInputCtx.editable.htmlS]);\n  useEffect(() => {\n    isTouchedRef.current = false;\n  }, [chatId, threadId]);\n\n  const isEditing = Boolean(editedMessage);\n\n  const updateDraft = useLastCallback((prevState: { chatId?: string; threadId?: ThreadId } = {}) => {\n    if (isDisabled || isEditing || !isTouchedRef.current) return;\n\n    const contents = richInputCtx.editable.getFormattedText(false);\n    if (contents.text) {\n      requestMeasure(() => {\n        saveDraft({\n          chatId: prevState.chatId ?? chatId,\n          threadId: prevState.threadId ?? threadId,\n          text: contents,\n        });\n      });\n    } else {\n      clearDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n        shouldKeepReply: true,\n      });\n    }\n  });\n\n  const runDebouncedForSaveDraft = useRunDebounced(DRAFT_DEBOUNCE, true, undefined, [chatId, threadId]);\n\n  // Restore draft on chat change\n  useLayoutEffectWithPrevDeps(([prevChatId, prevThreadId, prevDraft]) => {\n    if (isDisabled) {\n      return;\n    }\n    const isTouched = isTouchedRef.current;\n\n    if (chatId === prevChatId && threadId === prevThreadId) {\n      if (isTouched && !draft) return; // Prevent reset from other client if we have local edits\n      if (!draft && prevDraft) {\n        richInputCtx.editable.clearInput();\n      }\n\n      if (isTouched) return;\n    }\n\n    if (editedMessage || !draft) {\n      return;\n    }\n\n    richInputCtx.editable.setFormattedText(draft.text ?? { text: '' });\n\n    const customEmojiIds = draft.text?.entities\n      ?.map((entity) => entity.type === ApiMessageEntityTypes.CustomEmoji && entity.documentId)\n      .filter(Boolean) || [];\n    if (customEmojiIds.length) loadCustomEmojis({ ids: customEmojiIds });\n  }, [chatId, threadId, draft, richInputCtx.editable, richInputCtx.editable.htmlS, editedMessage, isDisabled]);\n\n  // Save draft on chat change. Should be layout effect to read correct html on cleanup\n  useLayoutEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    return () => {\n      if (!isEditing) {\n        updateDraft({ chatId, threadId });\n      }\n\n      freeze();\n    };\n  }, [chatId, threadId, isEditing, updateDraft, isDisabled]);\n\n  const chatIdRef = useStateRef(chatId);\n  const threadIdRef = useStateRef(threadId);\n  useEffect(() => {\n    if (isDisabled || isFrozen) {\n      return;\n    }\n\n    if (richInputCtx.editable.emptyS()) {\n      updateDraft();\n\n      return;\n    }\n\n    const scopedСhatId = chatIdRef.current;\n    const scopedThreadId = threadIdRef.current;\n\n    runDebouncedForSaveDraft(() => {\n      if (chatIdRef.current === scopedСhatId && threadIdRef.current === scopedThreadId) {\n        updateDraft();\n      }\n    });\n  }, [\n    chatIdRef, richInputCtx.editable, richInputCtx.editable.htmlS,\n    isDisabled, runDebouncedForSaveDraft, threadIdRef, updateDraft,\n  ]);\n\n  useBackgroundMode(updateDraft);\n  useBeforeUnload(updateDraft);\n};\n\nexport default useDraft;\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiDraft, ApiFormattedText, ApiMessage } from '../../../../api/types';\nimport type { MessageListType, ThreadId } from '../../../../types';\nimport type { RichInputCtx } from '../../../common/richinput/useRichEditable';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport { requestMeasure, requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { hasMessageMedia } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\n\nimport { useDebouncedResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nconst URL_ENTITIES = new Set<string>([ApiMessageEntityTypes.TextUrl, ApiMessageEntityTypes.Url]);\nconst DEBOUNCE_MS = 300;\n\nconst useEditing = (\n  richInputCtx: RichInputCtx,\n  editedMessage: ApiMessage | undefined,\n  resetComposer: (shouldPreserveInput?: boolean) => void,\n  chatId: string,\n  threadId: ThreadId,\n  type: MessageListType,\n  draft?: ApiDraft,\n  editingDraft?: ApiFormattedText,\n): [VoidFunction, VoidFunction, boolean] => {\n  const {\n    editMessage, setEditingDraft, toggleMessageWebPage, openDeleteMessageModal,\n  } = getActions();\n  const [shouldForceShowEditing, setShouldForceShowEditing] = useState(false);\n\n  const replyingToId = draft?.replyInfo?.replyToMsgId;\n\n  useEffectWithPrevDeps(([prevEditedMessage, prevReplyingToId]) => {\n    if (!editedMessage) {\n      return;\n    }\n\n    if (replyingToId && prevReplyingToId !== replyingToId) {\n      richInputCtx.editable.clearInput();\n      setShouldForceShowEditing(false);\n      return;\n    }\n\n    if (prevEditedMessage?.id === editedMessage.id && replyingToId === prevReplyingToId) {\n      return;\n    }\n\n    const text = !prevEditedMessage && editingDraft?.text.length ? editingDraft : editedMessage.content.text;\n\n    richInputCtx.editable.setFormattedText(text);\n    setShouldForceShowEditing(true);\n\n    requestNextMutation(() => {\n      const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n      if (messageInput) {\n        focusEditableElement(messageInput, true);\n      }\n    });\n  }, [editedMessage, replyingToId, editingDraft, richInputCtx.editable]);\n\n  useEffect(() => {\n    if (!editedMessage) {\n      return;\n    }\n\n    const shouldSetNoWebPage = !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type));\n\n    toggleMessageWebPage({\n      chatId,\n      threadId,\n      noWebPage: shouldSetNoWebPage,\n    });\n  }, [chatId, threadId, editedMessage]);\n\n  useEffect(() => {\n    if (!editedMessage) return undefined;\n    return () => {\n      const edited = richInputCtx.editable.getFormattedText(false);\n      const update = edited.text.length ? edited : undefined;\n\n      setEditingDraft({\n        chatId, threadId, type, text: update,\n      });\n    };\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [chatId, editedMessage, richInputCtx.editable.htmlS, setEditingDraft, threadId, type]);\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    if (!editedMessage) return false;\n\n    const edited = richInputCtx.editable.getFormattedText(false);\n    return !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type))\n      && !(edited.entities?.some((entity) => URL_ENTITIES.has(entity.type)));\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [editedMessage, richInputCtx.editable.htmlS], DEBOUNCE_MS, true);\n\n  const getShouldResetNoWebPageDebounced = useDerivedSignal(detectLinkDebounced,\n    [detectLinkDebounced, richInputCtx.editable.htmlS],\n    true);\n\n  useEffectWithPrevDeps(([prevEditedMessage]) => {\n    if (!editedMessage || prevEditedMessage?.id !== editedMessage.id) {\n      return;\n    }\n\n    if (getShouldResetNoWebPageDebounced()) {\n      toggleMessageWebPage({\n        chatId,\n        threadId,\n        noWebPage: false,\n      });\n    }\n  }, [editedMessage, chatId, richInputCtx.editable.htmlS, threadId, getShouldResetNoWebPageDebounced]);\n\n  const restoreNewDraftAfterEditing = useLastCallback(() => {\n    if (!draft) return;\n\n    // Run one frame after editing draft reset\n    requestMeasure(() => {\n      richInputCtx.editable.setFormattedText(draft.text);\n\n      // Wait one more frame until new HTML is rendered\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    });\n  });\n\n  const handleEditCancel = useLastCallback(() => {\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleEditComplete = useLastCallback(() => {\n    const { text, entities } = richInputCtx.editable.getFormattedText(true);\n\n    if (!editedMessage) {\n      return;\n    }\n\n    if (!text && !hasMessageMedia(editedMessage)) {\n      openDeleteMessageModal({\n        chatId,\n        messageIds: [editedMessage.id],\n        isSchedule: type === 'scheduled',\n      });\n      return;\n    }\n\n    editMessage({\n      messageList: { chatId, threadId, type },\n      text,\n      entities,\n    });\n\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleBlur = useLastCallback(() => {\n    if (!editedMessage) return;\n    const edited = richInputCtx.editable.getFormattedText(false);\n    const update = edited.text.length ? edited : undefined;\n\n    setEditingDraft({\n      chatId, threadId, type, text: update,\n    });\n  });\n\n  useBackgroundMode(handleBlur);\n  useBeforeUnload(handleBlur);\n\n  return [handleEditComplete, handleEditCancel, shouldForceShowEditing];\n};\n\nexport default useEditing;\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { InlineBotSettings } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\n\nimport memoized from '../../../../util/memoized';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../../hooks/useSyncEffect';\n\nconst THROTTLE = 300;\nconst INLINE_BOT_QUERY_REGEXP = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+(.*)/is;\nconst HAS_NEW_LINE = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+\\n{2,}/i;\nconst MEMO_NO_RESULT = {\n  username: '',\n  query: '',\n  canShowHelp: false,\n  usernameLowered: '',\n};\n\nconst tempEl = document.createElement('div');\n\nexport default function useInlineBotTooltip(\n  isEnabled: boolean,\n  chatId: string,\n  getHtml: Signal<string>,\n  inlineBots?: Record<string, false | InlineBotSettings>,\n) {\n  const { queryInlineBot, resetInlineBot, resetAllInlineBots } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractBotQueryThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('@') ? parseBotQuery(html) : MEMO_NO_RESULT;\n  }, [getHtml, isEnabled], THROTTLE);\n  const {\n    username, query, canShowHelp, usernameLowered,\n  } = useDerivedState(extractBotQueryThrottled, [extractBotQueryThrottled, getHtml], true);\n\n  useSyncEffect(([prevUsername]) => {\n    if (prevUsername) {\n      resetInlineBot({ username: prevUsername });\n    }\n  }, [username, resetInlineBot]);\n\n  useEffect(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query,\n    });\n  }, [chatId, query, queryInlineBot, usernameLowered]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  const {\n    id: botId,\n    switchPm,\n    switchWebview,\n    offset,\n    results,\n    isGallery,\n    help,\n  } = (usernameLowered && inlineBots?.[usernameLowered]) || {};\n\n  const isOpen = Boolean((results?.length || switchPm) && !isManuallyClosed);\n\n  useEffect(() => {\n    if (!isOpen && !username) {\n      resetAllInlineBots();\n    }\n  }, [isOpen, resetAllInlineBots, username]);\n\n  const loadMore = useLastCallback(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query, offset,\n    });\n  });\n\n  return {\n    isOpen,\n    botId,\n    isGallery,\n    switchPm,\n    switchWebview,\n    results,\n    closeTooltip: markManuallyClosed,\n    help: canShowHelp && help ? `@${username} ${help}` : undefined,\n    loadMore,\n  };\n}\n\nconst buildQueryStateMemo = memoized((username: string, query: string, canShowHelp: boolean) => ({\n  username,\n  query,\n  canShowHelp,\n  usernameLowered: username.toLowerCase(),\n}));\n\nfunction parseBotQuery(html: string) {\n  if (!html.startsWith('@')) {\n    return MEMO_NO_RESULT;\n  }\n\n  const text = getPlainText(html);\n  const result = text.match(INLINE_BOT_QUERY_REGEXP);\n  if (!result) {\n    return MEMO_NO_RESULT;\n  }\n\n  return buildQueryStateMemo(result[1], result[2], result[2] === '' && !text.match(HAS_NEW_LINE));\n}\n\nfunction getPlainText(html: string) {\n  tempEl.innerHTML = html.replace(/<br>/g, '\\n');\n\n  tempEl.querySelectorAll<HTMLElement>('[alt]').forEach((el) => {\n    if (!el.innerText) {\n      el.innerText = el.getAttribute('alt')!;\n    }\n  });\n\n  return tempEl.innerText;\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { RichInputCtx } from '../../../common/richinput/useRichEditable';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/browser/windowEnvironment';\nimport parseEmojiOnlyString from '../../../../util/emoji/parseEmojiOnlyString';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst MAX_LENGTH = 8;\nconst MAX_UNSUPPORTED_LENGTH = 160;\nconst STARTS_ENDS_ON_EMOJI_IMG_REGEX = new RegExp(`^${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useStickerTooltip(\n  isEnabled: boolean,\n  richInputCtx: RichInputCtx,\n  stickers?: ApiSticker[],\n) {\n  const { loadStickersForEmoji, clearStickersForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const getSingleEmoji = useDerivedSignal(() => {\n    const html = richInputCtx.editable.htmlS();\n    if (!isEnabled || !html || (IS_EMOJI_SUPPORTED && html.length > MAX_LENGTH)) return undefined;\n    if (IS_EMOJI_SUPPORTED) {\n      if (html.length > MAX_LENGTH) return undefined;\n    } else if (html[0] !== '<' && html[1] !== '<' && html.length > MAX_UNSUPPORTED_LENGTH) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const cleanHtml = prepareForRegExp(html);\n    const isSingleEmoji = cleanHtml && (\n      (IS_EMOJI_SUPPORTED && parseEmojiOnlyString(cleanHtml) === 1)\n      || (!IS_EMOJI_SUPPORTED && Boolean(html.match(STARTS_ENDS_ON_EMOJI_IMG_REGEX)))\n    );\n\n    return isSingleEmoji\n      ? (IS_EMOJI_SUPPORTED ? cleanHtml : cleanHtml.match(/alt=\"(.+)\"/)?.[1]!)\n      : undefined;\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [richInputCtx.editable, richInputCtx.editable.htmlS, isEnabled]);\n\n  const isActive = useDerivedState(() => Boolean(getSingleEmoji()), [getSingleEmoji]);\n  const hasStickers = Boolean(stickers?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const singleEmoji = getSingleEmoji();\n    if (singleEmoji) {\n      if (!hasStickers) {\n        loadStickersForEmoji({ emoji: singleEmoji });\n      }\n    } else {\n      clearStickersForEmoji();\n    }\n  }, [isEnabled, isActive, getSingleEmoji, hasStickers, loadStickersForEmoji, clearStickersForEmoji]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, richInputCtx.editable.htmlS]);\n\n  return {\n    isStickerTooltipOpen: Boolean(isActive && hasStickers && !isManuallyClosed),\n    closeStickerTooltip: markManuallyClosed,\n  };\n}\n","import type { IOpusRecorder } from 'opus-recorder';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\n\nexport type Result = { blob: Blob; duration: number; waveform: number[] };\n\nconst encoderPath = new URL('opus-recorder/dist/encoderWorker.min', import.meta.url).href;\nconst MIN_RECORDING_TIME = 1000;\nconst POLYFILL_OPTIONS = { encoderPath, reuseWorker: true };\nconst BLOB_PARAMS = { type: 'audio/ogg' };\nconst FFT_SIZE = 64;\nconst MIN_VOLUME = 0.1;\n\nlet opusRecorderPromise: Promise<{ default: IOpusRecorder }>;\nlet OpusRecorder: IOpusRecorder;\nlet mediaRecorder: IOpusRecorder;\n\nexport async function init() {\n  if (!opusRecorderPromise) {\n    opusRecorderPromise = import('opus-recorder');\n    OpusRecorder = (await opusRecorderPromise).default;\n    mediaRecorder = new OpusRecorder(POLYFILL_OPTIONS);\n  }\n\n  return opusRecorderPromise;\n}\n\nexport async function start(analyzerCallback: Function) {\n  await startMediaRecorder();\n\n  const startedAt = Date.now();\n  let pausedAt: number;\n  const chunks: Uint8Array[] = [];\n  const waveform: number[] = [];\n\n  mediaRecorder.ondataavailable = (typedArray) => {\n    chunks.push(typedArray);\n  };\n\n  const releaseAnalyzer = subscribeToAnalyzer(mediaRecorder, (volume: number) => {\n    waveform.push(volume * 255);\n    analyzerCallback(volume);\n  });\n\n  return {\n    stop: () => new Promise<Result>((resolve, reject) => {\n      mediaRecorder.onstop = () => {\n        resolve({\n          blob: new Blob(chunks, BLOB_PARAMS),\n          duration: Math.round(((pausedAt || Date.now()) - startedAt) / 1000),\n          waveform,\n        });\n      };\n      mediaRecorder.onerror = reject;\n\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.stop();\n        releaseAnalyzer();\n      }, delayStop);\n    }),\n    pause: () => {\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.pause();\n        pausedAt = Date.now();\n        releaseAnalyzer();\n      }, delayStop);\n    },\n  };\n}\n\nasync function startMediaRecorder() {\n  await init();\n  await mediaRecorder.start();\n}\n\nfunction subscribeToAnalyzer(recorder: IOpusRecorder, cb: Function) {\n  const source = recorder.sourceNode;\n  const analyser = source.context.createAnalyser();\n  analyser.fftSize = FFT_SIZE;\n  source.connect(analyser);\n\n  const dataLength = analyser.frequencyBinCount;\n  const dataArray = new Uint8Array(dataLength);\n  let isDestroyed = false;\n\n  function tick() {\n    if (isDestroyed) {\n      return;\n    }\n\n    analyser.getByteFrequencyData(dataArray);\n\n    const sum = dataArray.reduce((acc, current) => acc + current, 0);\n    const mean = (sum / dataLength);\n    const volume = mean / 255;\n\n    cb(volume < MIN_VOLUME ? 0 : volume);\n\n    requestMeasure(tick);\n  }\n\n  tick();\n\n  return () => {\n    isDestroyed = true;\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './AttachmentModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst AttachmentModalAsync: FC<OwnProps> = (props) => {\n  const { attachments } = props;\n  const AttachmentModal = useModuleLoader(Bundles.Extra, 'AttachmentModal', !attachments.length);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return AttachmentModal ? <AttachmentModal {...props} /> : undefined;\n};\n\nexport default AttachmentModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo,\n} from '../../../lib/teact/teact';\n\nimport type { ApiAttachMenuPeerType, ApiMessage } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { MessageListType, ThemeKey, ThreadId } from '../../../types';\n\nimport {\n  CONTENT_TYPES_WITH_PREVIEW, DEBUG_LOG_FILENAME, SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport {\n  getMessageAudio, getMessageDocument,\n  getMessagePhoto,\n  getMessageVideo, getMessageVoice,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n} from '../../../global/helpers';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport { validateFiles } from '../../../util/files';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport AttachBotItem from './AttachBotItem';\n\nimport './AttachMenu.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isButtonVisible: boolean;\n  canAttachMedia: boolean;\n  canAttachPolls: boolean;\n  canSendPhotos: boolean;\n  canSendVideos: boolean;\n  canSendDocuments: boolean;\n  canSendAudios: boolean;\n  isScheduled?: boolean;\n  attachBots?: GlobalState['attachMenu']['bots'];\n  peerType?: ApiAttachMenuPeerType;\n  shouldCollectDebugLogs?: boolean;\n  theme: ThemeKey;\n  onFileSelect: (files: File[], shouldSuggestCompression?: boolean) => void;\n  onPollCreate: NoneToVoidFunction;\n  onMenuOpen: NoneToVoidFunction;\n  onMenuClose: NoneToVoidFunction;\n  canEditMedia?: boolean;\n  editingMessage?: ApiMessage;\n  messageListType?: MessageListType;\n  paidMessagesStars?: number;\n};\n\nconst AttachMenu: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isButtonVisible,\n  canAttachMedia,\n  canAttachPolls,\n  canSendPhotos,\n  canSendVideos,\n  canSendDocuments,\n  canSendAudios,\n  attachBots,\n  peerType,\n  isScheduled,\n  theme,\n  shouldCollectDebugLogs,\n  onFileSelect,\n  onMenuOpen,\n  onMenuClose,\n  onPollCreate,\n  canEditMedia,\n  editingMessage,\n  messageListType,\n  paidMessagesStars,\n}) => {\n  const [isAttachMenuOpen, openAttachMenu, closeAttachMenu] = useFlag();\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isAttachMenuOpen, closeAttachMenu);\n\n  const canSendVideoAndPhoto = canSendPhotos && canSendVideos;\n  const canSendVideoOrPhoto = canSendPhotos || canSendVideos;\n\n  const [isAttachmentBotMenuOpen, markAttachmentBotMenuOpen, unmarkAttachmentBotMenuOpen] = useFlag();\n  const isMenuOpen = isAttachMenuOpen || isAttachmentBotMenuOpen;\n\n  const isPhotoOrVideo = editingMessage && editingMessage?.groupedId\n    && Boolean(getMessagePhoto(editingMessage) || getMessageWebPagePhoto(editingMessage)\n      || Boolean(getMessageVideo(editingMessage) || getMessageWebPageVideo(editingMessage)));\n  const isFile = editingMessage && editingMessage?.groupedId && Boolean(getMessageAudio(editingMessage)\n    || getMessageVoice(editingMessage) || getMessageDocument(editingMessage));\n\n  useEffect(() => {\n    if (isAttachMenuOpen) {\n      markMouseInside();\n    }\n  }, [isAttachMenuOpen, markMouseInside]);\n\n  useEffect(() => {\n    if (isMenuOpen) {\n      onMenuOpen();\n    } else {\n      onMenuClose();\n    }\n  }, [isMenuOpen, onMenuClose, onMenuOpen]);\n\n  const handleToggleAttachMenu = useLastCallback(() => {\n    if (isAttachMenuOpen) {\n      closeAttachMenu();\n    } else {\n      openAttachMenu();\n    }\n  });\n\n  const handleFileSelect = useLastCallback((e: Event, shouldSuggestCompression?: boolean) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileSelect(validatedFiles, shouldSuggestCompression);\n    }\n  });\n\n  const handleQuickSelect = useLastCallback(() => {\n    openSystemFilesDialog(\n      Array.from(canSendVideoAndPhoto ? CONTENT_TYPES_WITH_PREVIEW : (\n        canSendPhotos ? SUPPORTED_PHOTO_CONTENT_TYPES : SUPPORTED_VIDEO_CONTENT_TYPES\n      )).join(','),\n      (e) => handleFileSelect(e, true),\n    );\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog(!canSendDocuments && canSendAudios\n      ? Array.from(SUPPORTED_AUDIO_CONTENT_TYPES).join(',') : (\n        '*'\n      ), (e) => handleFileSelect(e, false));\n  });\n\n  const handleSendLogs = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    onFileSelect([file]);\n  });\n\n  const bots = useMemo(() => {\n    return attachBots\n      ? Object.values(attachBots).filter((bot) => {\n        if (!peerType || !bot.isForAttachMenu) return false;\n        if (peerType === 'bots' && bot.id === chatId\n          && bot.attachMenuPeerTypes && bot.attachMenuPeerTypes.includes('self')) {\n          return true;\n        }\n        return bot.attachMenuPeerTypes!.includes(peerType);\n      })\n      : undefined;\n  }, [attachBots, chatId, peerType]);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  if (!isButtonVisible) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"AttachMenu\">\n      {\n        editingMessage && canEditMedia ? (\n          <ResponsiveHoverButton\n            id=\"replace-menu-button\"\n            className={buildClassName('AttachMenu--button composer-action-button', isAttachMenuOpen && 'activated')}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Replace an attachment\"\n            ariaControls=\"replace-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"replace\" />\n          </ResponsiveHoverButton>\n        ) : (\n          <ResponsiveHoverButton\n            id=\"attach-menu-button\"\n            disabled={Boolean(editingMessage)}\n            className={buildClassName('AttachMenu--button composer-action-button', isAttachMenuOpen && 'activated')}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Add an attachment\"\n            ariaControls=\"attach-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"attach\" />\n          </ResponsiveHoverButton>\n        )\n      }\n      <Menu\n        id=\"attach-menu-controls\"\n        isOpen={isMenuOpen}\n        autoClose\n        positionX=\"right\"\n        positionY=\"bottom\"\n        onClose={closeAttachMenu}\n        className=\"AttachMenu--menu fluid\"\n        onCloseAnimationEnd={closeAttachMenu}\n        onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n        onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n        noCloseOnBackdrop={!IS_TOUCH_ENV}\n        ariaLabelledBy=\"attach-menu-button\"\n      >\n        {/*\n       ** Using ternary operator here causes some attributes from first clause\n       ** transferring to the fragment content in the second clause\n       */}\n        {!canAttachMedia && (\n          <MenuItem className=\"media-disabled\" disabled>\n            {lang(messageListType === 'scheduled' && paidMessagesStars\n              ? 'DescriptionScheduledPaidMediaNotAllowed'\n              : 'DescriptionRestrictedMedia')}\n          </MenuItem>\n        )}\n        {canAttachMedia && (\n          <>\n            {canSendVideoOrPhoto && !isFile && (\n              <MenuItem icon=\"photo\" onClick={handleQuickSelect}>\n                {oldLang(canSendVideoAndPhoto ? 'AttachmentMenu.PhotoOrVideo'\n                  : (canSendPhotos ? 'InputAttach.Popover.Photo' : 'InputAttach.Popover.Video'))}\n              </MenuItem>\n            )}\n            {((canSendDocuments || canSendAudios) && !isPhotoOrVideo)\n              && (\n                <MenuItem icon=\"document\" onClick={handleDocumentSelect}>\n                  {oldLang(!canSendDocuments && canSendAudios ? 'InputAttach.Popover.Music' : 'AttachDocument')}\n                </MenuItem>\n              )}\n            {canSendDocuments && shouldCollectDebugLogs && (\n              <MenuItem icon=\"bug\" onClick={handleSendLogs}>\n                {oldLang('DebugSendLogs')}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {canAttachPolls && !editingMessage && (\n          <MenuItem icon=\"poll\" onClick={onPollCreate}>{oldLang('Poll')}</MenuItem>\n        )}\n\n        {!editingMessage && !canEditMedia && !isScheduled && bots?.map((bot) => (\n          <AttachBotItem\n            bot={bot}\n            chatId={chatId}\n            threadId={threadId}\n            theme={theme}\n            onMenuOpened={markAttachmentBotMenuOpen}\n            onMenuClosed={unmarkAttachmentBotMenuOpen}\n          />\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nexport default memo(AttachMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandMenu = useModuleLoader(Bundles.Extra, 'BotCommandMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return BotCommandMenu ? <BotCommandMenu {...props} /> : undefined;\n};\n\nexport default BotCommandMenuAsync;\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { selectChatMessage, selectCurrentMessageList } from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport renderKeyboardButtonText from './helpers/renderKeyboardButtonText';\n\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\n\nimport './BotKeyboardMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  messageId: number;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  message?: ApiMessage;\n};\n\nconst BotKeyboardMenu: FC<OwnProps & StateProps> = ({\n  isOpen, message, onClose,\n}) => {\n  const { clickBotInlineButton } = getActions();\n\n  const lang = useOldLang();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const { isKeyboardSingleUse } = message || {};\n\n  const buttonTexts = useMemo(() => {\n    const texts: TeactNode[][] = [];\n    message?.keyboardButtons!.forEach((row) => {\n      texts.push(row.map((button) => renderKeyboardButtonText(lang, button)));\n    });\n\n    return texts;\n  }, [lang, message?.keyboardButtons]);\n\n  if (!message || !message.keyboardButtons) {\n    return undefined;\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose={isKeyboardSingleUse}\n      positionX=\"right\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotKeyboardMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCompact\n    >\n      <div className=\"content custom-scroll\">\n        {message.keyboardButtons.map((row, i) => (\n          <div className=\"row\">\n            {row.map((button, j) => (\n              <Button\n                ripple\n                disabled={button.type === 'unsupported'}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => clickBotInlineButton({ chatId: message.chatId, messageId: message.id, button })}\n              >\n                {buttonTexts?.[i][j]}\n              </Button>\n            ))}\n          </div>\n        ))}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { messageId }): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    if (!chatId) {\n      return {};\n    }\n\n    return { message: selectChatMessage(global, chatId, messageId) };\n  },\n)(BotKeyboardMenu));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  onClick: VoidFunction;\n  text: string;\n  isDisabled?: boolean;\n};\n\nconst BotMenuButton: FC<OwnProps> = ({\n  isOpen,\n  onClick,\n  text,\n  isDisabled,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const textRef = useRef<HTMLSpanElement>(null);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return;\n\n    const width = textEl.scrollWidth + 1; // Make width slightly bigger prevent ellipsis in some cases\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n    composerEl.style.setProperty('--bot-menu-text-width', `${width}px`);\n  }, [isOpen, text]);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return undefined;\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n\n    return () => {\n      composerEl.style.removeProperty('--bot-menu-text-width');\n    };\n  }, []);\n\n  return (\n    <Button\n      className={buildClassName('composer-action-button bot-menu', isOpen && 'open')}\n      round\n      color=\"translucent\"\n      disabled={isDisabled}\n      onClick={onClick}\n      ariaLabel=\"Open bot command keyboard\"\n    >\n      <Icon name=\"webapp\" className={buildClassName('bot-menu-icon', isOpen && 'open')} />\n      <span ref={textRef} className=\"bot-menu-text\">{renderText(text)}</span>\n    </Button>\n  );\n};\n\nexport default memo(BotMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatCommandTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ChatCommandTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatCommandTooltip = useModuleLoader(Bundles.Extra, 'ChatCommandTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatCommandTooltip ? <ChatCommandTooltip {...props} /> : undefined;\n};\n\nexport default ChatCommandTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiInputMessageReplyInfo, ApiMessage, ApiPeer,\n} from '../../../api/types';\nimport type { MessageListType, ThreadId } from '../../../types/index';\n\nimport { isChatChannel, stripCustomEmoji } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatMessage,\n  selectDraft,\n  selectEditingId,\n  selectEditingMessage,\n  selectEditingScheduledId,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectPeer,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { getPeerColorClass } from '../../common/helpers/peerColor';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport { ClosableEmbeddedMessage } from '../../common/embedded/EmbeddedMessage';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './ComposerEmbeddedMessage.scss';\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  editingId?: number;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  shouldAnimate?: boolean;\n  forwardedMessagesCount?: number;\n  noAuthors?: boolean;\n  noCaptions?: boolean;\n  forwardsHaveCaptions?: boolean;\n  isCurrentUserPremium?: boolean;\n  isContextMenuDisabled?: boolean;\n  isReplyToDiscussion?: boolean;\n  isInChangingRecipientMode?: boolean;\n  shouldPreventComposerAnimation?: boolean;\n  senderChat?: ApiChat;\n  isSenderChannel?: boolean;\n  currentUserId?: string;\n};\n\ntype OwnProps = {\n  onClear?: () => void;\n  shouldForceShowEditing?: boolean;\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n};\n\nconst CLOSE_DURATION = 350;\n\nconst ComposerEmbeddedMessage: FC<OwnProps & StateProps> = ({\n  replyInfo,\n  editingId,\n  message,\n  sender,\n  shouldAnimate,\n  forwardedMessagesCount,\n  noAuthors,\n  noCaptions,\n  forwardsHaveCaptions,\n  shouldForceShowEditing,\n  isCurrentUserPremium,\n  isContextMenuDisabled,\n  isReplyToDiscussion,\n  onClear,\n  isInChangingRecipientMode,\n  shouldPreventComposerAnimation,\n  senderChat,\n  chatId,\n  currentUserId,\n  isSenderChannel,\n}) => {\n  const {\n    resetDraftReplyInfo,\n    updateDraftReplyInfo,\n    setEditingId,\n    focusMessage,\n    changeRecipient,\n    openChatOrTopicWithReplyInDraft,\n    setForwardNoAuthors,\n    setForwardNoCaptions,\n    exitForwardMode,\n    setShouldPreventComposerAnimation,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const isReplyToTopicStart = message?.content.action?.type === 'topicCreate';\n  const isShowingReply = replyInfo && !shouldForceShowEditing;\n  const isReplyWithQuote = Boolean(replyInfo?.quoteText);\n\n  const isForwarding = Boolean(forwardedMessagesCount);\n\n  const isShown = (() => {\n    if (isInChangingRecipientMode) return false;\n    if (message && (replyInfo || editingId)) return true;\n    if (sender && isForwarding) return true;\n    return false;\n  })();\n\n  const {\n    shouldRender, transitionClassNames,\n  } = useShowTransitionDeprecated(\n    isShown && !isReplyToTopicStart && !isReplyToDiscussion,\n    undefined,\n    !shouldAnimate,\n    undefined,\n    !shouldAnimate,\n    CLOSE_DURATION,\n    !shouldAnimate,\n  );\n  useEffect(() => {\n    if (shouldPreventComposerAnimation) {\n      setShouldPreventComposerAnimation({ shouldPreventComposerAnimation: false });\n    }\n  });\n\n  const clearEmbedded = useLastCallback(() => {\n    if (editingId) {\n      setEditingId({ messageId: undefined });\n    } else if (forwardedMessagesCount) {\n      exitForwardMode();\n    } else if (replyInfo && !shouldForceShowEditing) {\n      resetDraftReplyInfo();\n    }\n    onClear?.();\n  });\n\n  useEffect(() => (isShown ? captureEscKeyListener(clearEmbedded) : undefined), [isShown, clearEmbedded]);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const focusMessageFromDraft = () => {\n    focusMessage({ chatId: message!.chatId, messageId: message!.id, noForumTopicPanel: true });\n  };\n  const handleMessageClick = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  const handleClearClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n    e.stopPropagation();\n    clearEmbedded();\n    handleContextMenuHide();\n  });\n  const buildAutoCloseMenuItemHandler = (action: NoneToVoidFunction) => {\n    return () => {\n      handleContextMenuClose();\n      action();\n    };\n  };\n  const handleForwardToAnotherChatClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleShowMessageClick = useLastCallback(buildAutoCloseMenuItemHandler(focusMessageFromDraft));\n  const handleRemoveQuoteClick = useLastCallback(buildAutoCloseMenuItemHandler(\n    () => updateDraftReplyInfo({ quoteText: undefined }),\n  ));\n  const handleChangeReplyRecipientClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleReplyInSenderChat = useLastCallback(() => {\n    handleContextMenuClose();\n    if (!sender) return;\n    openChatOrTopicWithReplyInDraft({ chatId: sender.id });\n  });\n  const handleDoNotReplyClick = useLastCallback(buildAutoCloseMenuItemHandler(clearEmbedded));\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.forward-context-menu .bubble'));\n\n  useEffect(() => {\n    if (!shouldRender) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender]);\n\n  const className = buildClassName('ComposerEmbeddedMessage', transitionClassNames);\n  const renderingSender = useCurrentOrPrev(sender, true);\n  const innerClassName = buildClassName(\n    'ComposerEmbeddedMessage_inner',\n    getPeerColorClass(renderingSender),\n  );\n\n  const leftIcon = useMemo(() => {\n    if (editingId) {\n      return 'edit';\n    }\n    if (isForwarding) {\n      return 'forward';\n    }\n    if (isShowingReply) {\n      return 'reply';\n    }\n\n    return undefined;\n  }, [editingId, isForwarding, isShowingReply]);\n\n  const customText = forwardedMessagesCount && forwardedMessagesCount > 1\n    ? oldLang('ForwardedMessageCount', forwardedMessagesCount)\n    : undefined;\n\n  const strippedMessage = useMemo(() => {\n    if (!message || !isForwarding || !message.content.text || !noAuthors || isCurrentUserPremium) return message;\n\n    const strippedText = stripCustomEmoji(message.content.text);\n    return {\n      ...message,\n      content: {\n        ...message.content,\n        text: strippedText,\n      },\n    };\n  }, [isCurrentUserPremium, isForwarding, message, noAuthors]);\n\n  const renderingLeftIcon = useCurrentOrPrev(leftIcon, true);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const canReplyInSenderChat = sender && !isSenderChannel && chatId !== sender.id && sender.id !== currentUserId;\n\n  return (\n    <div className={className} ref={ref} onContextMenu={handleContextMenu}>\n      <div className={innerClassName}>\n        <div className=\"embedded-left-icon\" onClick={handleContextMenu}>\n          {renderingLeftIcon && <Icon name={renderingLeftIcon} />}\n          {Boolean(replyInfo?.quoteText) && (\n            <Icon name=\"quote\" className=\"quote-reply\" />\n          )}\n        </div>\n        <ClosableEmbeddedMessage\n          isOpen={isShown}\n          className=\"inside-input\"\n          replyInfo={replyInfo}\n          isInComposer\n          message={strippedMessage}\n          sender={!noAuthors ? sender : undefined}\n          customText={customText}\n          title={(editingId && !isShowingReply) ? oldLang('EditMessage')\n            : noAuthors ? oldLang('HiddenSendersNameDescription') : undefined}\n          onClick={handleMessageClick}\n          senderChat={senderChat}\n        />\n        <Button\n          className=\"embedded-cancel\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={oldLang('Cancel')}\n          onClick={handleClearClick}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        {(isShowingReply || isForwarding) && !isContextMenuDisabled && (\n          <Menu\n            isOpen={isContextMenuOpen}\n            anchor={contextMenuAnchor}\n            getTriggerElement={getTriggerElement}\n            getRootElement={getRootElement}\n            getMenuElement={getMenuElement}\n            className=\"forward-context-menu\"\n            onClose={handleContextMenuClose}\n            onCloseAnimationEnd={handleContextMenuHide}\n          >\n            {isForwarding && (\n              <>\n                <MenuItem\n                  icon={!noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={noAuthors ? <Icon name=\"placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: false,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'ShowSenderNames' : 'ShowSendersName')}\n                </MenuItem>\n                <MenuItem\n                  icon={noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={!noAuthors ? <Icon name=\"placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: true,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'HideSenderNames' : 'HideSendersName')}\n                </MenuItem>\n                {forwardsHaveCaptions && (\n                  <>\n                    <MenuSeparator />\n                    <MenuItem\n                      icon={!noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={noCaptions ? <Icon name=\"placeholder\" /> : undefined}\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: false,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.ShowCaption' : 'ShowCaption')}\n                    </MenuItem>\n                    <MenuItem\n                      icon={noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={!noCaptions ? <Icon name=\"placeholder\" /> : undefined}\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: true,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.HideCaption' : 'HideCaption')}\n                    </MenuItem>\n                  </>\n                )}\n                <MenuSeparator />\n                <MenuItem icon=\"replace\" onClick={handleForwardToAnotherChatClick}>\n                  {oldLang('ForwardAnotherChat')}\n                </MenuItem>\n              </>\n            )}\n            {isShowingReply && (\n              <>\n                <MenuItem\n                  icon=\"show-message\"\n                  onClick={handleShowMessageClick}\n                >\n                  {oldLang('Message.Context.Goto')}\n                </MenuItem>\n                {isReplyWithQuote && (\n                  <MenuItem\n                    icon=\"remove-quote\"\n                    onClick={handleRemoveQuoteClick}\n                  >\n                    {oldLang('RemoveQuote')}\n                  </MenuItem>\n                )}\n                {canReplyInSenderChat && (\n                  <MenuItem icon=\"user\" onClick={handleReplyInSenderChat}>\n                    {lang('ReplyInPrivateMessage')}\n                  </MenuItem>\n                )}\n                <MenuItem icon=\"replace\" onClick={handleChangeReplyRecipientClick}>\n                  {oldLang('ReplyToAnotherChat')}\n                </MenuItem>\n                <MenuItem icon=\"delete\" onClick={handleDoNotReplyClick}>\n                  {oldLang('DoNotReply')}\n                </MenuItem>\n              </>\n            )}\n          </Menu>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    shouldForceShowEditing, chatId, threadId, messageListType,\n  }): StateProps => {\n    const {\n      forwardMessages: {\n        fromChatId, toChatId, messageIds: forwardMessageIds, noAuthors, noCaptions,\n      },\n      isShareMessageModalShown: isModalShown,\n      shouldPreventComposerAnimation,\n    } = selectTabState(global);\n\n    const editingId = messageListType === 'scheduled'\n      ? selectEditingScheduledId(global, chatId)\n      : selectEditingId(global, chatId, threadId);\n    const shouldAnimate = selectCanAnimateInterface(global) && !shouldPreventComposerAnimation;\n    const isForwarding = toChatId === chatId;\n    const forwardedMessages = forwardMessageIds?.map((id) => selectChatMessage(global, fromChatId!, id)!);\n\n    const draft = selectDraft(global, chatId, threadId);\n    const replyInfo = draft?.replyInfo;\n    const replyToPeerId = replyInfo?.replyToPeerId;\n    const senderChat = replyToPeerId ? selectChat(global, replyToPeerId) : undefined;\n\n    let message: ApiMessage | undefined;\n    if (editingId) {\n      message = selectEditingMessage(global, chatId, threadId, messageListType);\n    } else if (isForwarding && forwardMessageIds!.length === 1) {\n      message = forwardedMessages?.[0];\n    } else if (replyInfo && !shouldForceShowEditing) {\n      message = selectChatMessage(global, replyInfo.replyToPeerId || chatId, replyInfo.replyToMsgId);\n    }\n\n    let sender: ApiPeer | undefined;\n\n    if (editingId && message) {\n      sender = selectSender(global, message);\n    } else if (isForwarding) {\n      if (message) {\n        sender = selectForwardedSender(global, message);\n        if (!sender) {\n          sender = selectSender(global, message);\n        }\n      }\n      if (!sender) {\n        sender = selectPeer(global, fromChatId!);\n      }\n    } else if (replyInfo && message && !shouldForceShowEditing) {\n      const { forwardInfo } = message;\n      const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n      if (forwardInfo && (forwardInfo.isChannelPost || isChatWithSelf)) {\n        sender = selectForwardedSender(global, message);\n      }\n\n      if (!sender && (!forwardInfo?.hiddenUserName || Boolean(replyInfo.quoteText))) {\n        sender = selectSender(global, message);\n      }\n    }\n\n    const chat = sender && selectChat(global, sender.id);\n    const isSenderChannel = chat && isChatChannel(chat);\n\n    const forwardsHaveCaptions = forwardedMessages?.some((forward) => (\n      forward?.content.text && Object.keys(forward.content).length > 1\n    ));\n\n    const isContextMenuDisabled = isForwarding && forwardMessageIds!.length === 1\n      && Boolean(message?.content.storyData);\n\n    const isReplyToDiscussion = replyInfo?.replyToMsgId === threadId && !replyInfo.replyToPeerId;\n\n    return {\n      replyInfo,\n      editingId,\n      message,\n      sender,\n      shouldAnimate,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      noAuthors,\n      noCaptions,\n      forwardsHaveCaptions,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isContextMenuDisabled,\n      isReplyToDiscussion,\n      isInChangingRecipientMode: isModalShown,\n      shouldPreventComposerAnimation,\n      senderChat,\n      currentUserId: global.currentUserId,\n      isSenderChannel,\n    };\n  },\n)(ComposerEmbeddedMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './DropArea';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst DropAreaAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DropArea = useModuleLoader(Bundles.Extra, 'DropArea', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return DropArea ? <DropArea {...props} /> : undefined;\n};\n\nexport default DropAreaAsync;\nexport { DropAreaState } from './DropArea';\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './InlineBotTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst InlineBotTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const InlineBotTooltip = useModuleLoader(Bundles.Extra, 'InlineBotTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return InlineBotTooltip ? <InlineBotTooltip {...props} /> : undefined;\n};\n\nexport default InlineBotTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './MentionTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst MentionTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MentionTooltip = useModuleLoader(Bundles.Extra, 'MentionTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MentionTooltip ? <MentionTooltip {...props} /> : undefined;\n};\n\nexport default MentionTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './PollModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst PollModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PollModal = useModuleLoader(Bundles.Extra, 'PollModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return PollModal ? <PollModal {...props} /> : undefined;\n};\n\nexport default PollModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SendAsMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SendAsMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SendAsMenu = useModuleLoader(Bundles.Extra, 'SendAsMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SendAsMenu ? <SendAsMenu {...props} /> : undefined;\n};\n\nexport default SendAsMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './StickerTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst StickerTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const StickerTooltip = useModuleLoader(Bundles.Extra, 'StickerTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return StickerTooltip ? <StickerTooltip {...props} /> : undefined;\n};\n\nexport default StickerTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiFormattedText, ApiMessage, ApiMessageEntityTextUrl, ApiWebPage,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ThemeKey, ThreadId, WebPageMediaSize } from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../../../config';\nimport { selectNoWebPage, selectTabState, selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport parseHtmlAsFormattedText from '../../../util/parseHtmlAsFormattedText';\n\nimport { useDebouncedResolver } from '../../../hooks/useAsyncResolvers';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport WebPage from '../message/WebPage';\n\nimport './WebPagePreview.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  isEditing: boolean;\n  isDisabled?: boolean;\n};\n\ntype StateProps = {\n  webPagePreview?: ApiWebPage;\n  noWebPage?: boolean;\n  theme: ThemeKey;\n  attachmentSettings: GlobalState['attachmentSettings'];\n};\n\nconst DEBOUNCE_MS = 300;\nconst RE_LINK = new RegExp(RE_LINK_TEMPLATE, 'i');\n\nconst WebPagePreview: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  getHtml,\n  isDisabled,\n  webPagePreview,\n  noWebPage,\n  theme,\n  attachmentSettings,\n  isEditing,\n}) => {\n  const {\n    loadWebPagePreview,\n    clearWebPagePreview,\n    toggleMessageWebPage,\n    updateAttachmentSettings,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const formattedTextWithLinkRef = useRef<ApiFormattedText>();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isInvertedMedia = attachmentSettings.isInvertedMedia;\n  const isSmallerMedia = attachmentSettings.webPageMediaSize === 'small';\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    const formattedText = parseHtmlAsFormattedText(getHtml());\n    const linkEntity = formattedText.entities?.find((entity): entity is ApiMessageEntityTextUrl => (\n      entity.type === ApiMessageEntityTypes.TextUrl\n    ));\n\n    formattedTextWithLinkRef.current = formattedText;\n\n    return linkEntity?.url || formattedText.text.match(RE_LINK)?.[0];\n  }, [getHtml], DEBOUNCE_MS, true);\n\n  const getLink = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffect(() => {\n    const link = getLink();\n    const formattedText = formattedTextWithLinkRef.current;\n\n    if (link) {\n      loadWebPagePreview({ text: formattedText! });\n    } else {\n      clearWebPagePreview();\n      toggleMessageWebPage({ chatId, threadId });\n    }\n  }, [getLink, chatId, threadId]);\n\n  useSyncEffect(() => {\n    clearWebPagePreview();\n    toggleMessageWebPage({ chatId, threadId });\n  }, [chatId, clearWebPagePreview, threadId, toggleMessageWebPage]);\n\n  const isShown = useDerivedState(() => {\n    return Boolean(webPagePreview && getHtml() && !noWebPage && !isDisabled);\n  }, [isDisabled, getHtml, noWebPage, webPagePreview]);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isShown);\n\n  const hasMediaSizeOptions = webPagePreview?.hasLargeMedia;\n\n  const renderingWebPage = useCurrentOrPrev(webPagePreview, true);\n\n  const handleClearWebpagePreview = useLastCallback(() => {\n    toggleMessageWebPage({ chatId, threadId, noWebPage: true });\n  });\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref, isEditing, true);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(\n    () => ref.current!.querySelector('.web-page-preview-context-menu .bubble'),\n  );\n\n  const handlePreviewClick = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  useEffect(() => {\n    if (!shouldRender || !renderingWebPage) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender, renderingWebPage]);\n\n  function updateIsInvertedMedia(value?: true) {\n    updateAttachmentSettings({ isInvertedMedia: value });\n  }\n\n  function updateIsLargerMedia(value?: WebPageMediaSize) {\n    updateAttachmentSettings({ webPageMediaSize: value });\n  }\n\n  if (!shouldRender || !renderingWebPage) {\n    return undefined;\n  }\n\n  // TODO Refactor so `WebPage` can be used without message\n  const { photo, ...webPageWithoutPhoto } = renderingWebPage;\n  const messageStub = {\n    content: {\n      webPage: webPageWithoutPhoto,\n    },\n  } as ApiMessage;\n\n  function renderContextMenu() {\n    return (\n      <Menu\n        isOpen={isContextMenuOpen}\n        anchor={contextMenuAnchor}\n        getTriggerElement={getTriggerElement}\n        getRootElement={getRootElement}\n        getMenuElement={getMenuElement}\n        className=\"web-page-preview-context-menu\"\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n        autoClose\n      >\n        <>\n          {\n            isInvertedMedia ? (\n              // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"move-caption-up\" onClick={() => updateIsInvertedMedia(undefined)}>\n                {lang('PreviewSender.MoveTextUp')}\n              </MenuItem>\n            ) : (\n            // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"move-caption-down\" onClick={() => updateIsInvertedMedia(true)}>\n                {lang(('PreviewSender.MoveTextDown'))}\n              </MenuItem>\n            )\n          }\n          {hasMediaSizeOptions && (\n            isSmallerMedia ? (\n            // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"expand\" onClick={() => updateIsLargerMedia('large')}>\n                {lang('ChatInput.EditLink.LargerMedia')}\n              </MenuItem>\n            ) : (\n            // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"collapse\" onClick={() => updateIsLargerMedia('small')}>\n                {lang(('ChatInput.EditLink.SmallerMedia'))}\n              </MenuItem>\n            )\n          )}\n          <MenuItem\n            icon=\"delete\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleClearWebpagePreview}\n          >\n            {lang('ChatInput.EditLink.RemovePreview')}\n          </MenuItem>\n        </>\n      </Menu>\n    );\n  }\n\n  return (\n    <div className={buildClassName('WebPagePreview', transitionClassNames)} ref={ref}>\n      <div className=\"WebPagePreview_inner\">\n        <div className=\"WebPagePreview-left-icon\" onClick={handlePreviewClick}>\n          <Icon name=\"link\" />\n        </div>\n        <WebPage\n          message={messageStub}\n          inPreview\n          theme={theme}\n          onContainerClick={handlePreviewClick}\n          isEditing={isEditing}\n        />\n        <Button\n          className=\"WebPagePreview-clear\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel=\"Clear Webpage Preview\"\n          onClick={handleClearWebpagePreview}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        {!isEditing && renderContextMenu()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    const {\n      attachmentSettings,\n    } = global;\n    return {\n      theme: selectTheme(global),\n      webPagePreview: selectTabState(global).webPagePreview,\n      noWebPage,\n      attachmentSettings,\n    };\n  },\n)(WebPagePreview));\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAttachment,\n  ApiAttachMenuPeerType,\n  ApiAvailableEffect,\n  ApiAvailableReaction,\n  ApiBotCommand,\n  ApiBotInlineMediaResult,\n  ApiBotInlineResult,\n  ApiBotMenuButton,\n  ApiChat,\n  ApiChatFullInfo,\n  ApiDisallowedGifts,\n  ApiDraft,\n  ApiFormattedText,\n  ApiMessage,\n  ApiMessageEntity,\n  ApiNewPoll,\n  ApiQuickReply,\n  ApiReaction,\n  ApiStealthMode,\n  ApiSticker,\n  ApiTopic,\n  ApiUser,\n  ApiVideo,\n  ApiWebPage,\n} from '../../api/types';\nimport type {\n  GlobalState, TabState,\n} from '../../global/types';\nimport type {\n  IAnchorPosition,\n  InlineBotSettings,\n  MessageList,\n  MessageListType,\n  ThemeKey,\n  ThreadId,\n} from '../../types';\nimport type { AnimBgRender } from '../../util/AnimBackgroundRender';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  DEFAULT_MAX_MESSAGE_LENGTH,\n  EDITABLE_INPUT_MODAL_ID,\n  HEART_REACTION,\n  MAX_UPLOAD_FILEPART_SIZE,\n  ONE_TIME_MEDIA_TTL_SECONDS,\n  SCHEDULED_WHEN_ONLINE,\n  SEND_MESSAGE_ACTION_INTERVAL,\n  SERVICE_NOTIFICATIONS_USER_ID,\n} from '../../config';\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  canEditMedia,\n  getAllowedAttachmentOptions,\n  getReactionKey,\n  getStoryKey,\n  isChatAdmin,\n  isChatChannel,\n  isChatSuperGroup,\n  isSameReaction,\n  isSystemBot,\n  isUserId,\n} from '../../global/helpers';\nimport { getChatNotifySettings } from '../../global/helpers/notifications';\nimport { getPeerTitle } from '../../global/helpers/peers';\nimport {\n  selectBot,\n  selectCanAnimateInterface,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatType,\n  selectCurrentMessageList,\n  selectDraft,\n  selectEditingDraft,\n  selectEditingMessage,\n  selectEditingScheduledDraft,\n  selectIsChatWithSelf,\n  selectIsCurrentUserFrozen,\n  selectIsCurrentUserPremium,\n  selectIsInSelectMode,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectIsRightColumnShown,\n  selectNewestMessageWithBotKeyboardButtons,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectNoWebPage,\n  selectPeerPaidMessagesStars,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectRequestedDraft,\n  selectRequestedDraftFiles,\n  selectTabState,\n  selectTheme,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { selectCurrentLimit } from '../../global/selectors/limits';\nimport { selectSharedSettings } from '../../global/selectors/sharedState';\nimport { IS_IOS, IS_VOICE_RECORDING_SUPPORTED } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration, formatVoiceRecordDuration } from '../../util/dates/dateFormat';\nimport { processDeepLink } from '../../util/deeplink';\nimport { tryParseDeepLink } from '../../util/deepLinkParser';\nimport { processMessageInputForCustomEmoji } from '../../util/emoji/customEmojiManager';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { formatStarsAsIcon } from '../../util/localization/format';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport parseHtmlAsFormattedText from '../../util/parseHtmlAsFormattedText';\nimport { getServerTime } from '../../util/serverTime';\nimport windowSize from '../../util/windowSize';\nimport applyIosAutoCapitalizationFix from '../middle/composer/helpers/applyIosAutoCapitalizationFix';\nimport buildAttachment, { prepareAttachmentsToSend } from '../middle/composer/helpers/buildAttachment';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\nimport { getTextWithEntitiesAsHtml } from './helpers/renderTextWithEntities';\nimport { buildCustomEmojiHtml } from './richinput/customEmoji';\nimport { useRichEditable } from './richinput/useRichEditable';\n\nimport useInterval from '../../hooks/schedulers/useInterval';\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useSchedule from '../../hooks/useSchedule';\nimport useSendMessageAction from '../../hooks/useSendMessageAction';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport useSyncEffect from '../../hooks/useSyncEffect';\nimport useAttachmentModal from '../middle/composer/hooks/useAttachmentModal';\nimport useChatCommandTooltip from '../middle/composer/hooks/useChatCommandTooltip';\nimport useClipboardPaste from '../middle/composer/hooks/useClipboardPaste';\nimport useCustomEmojiTooltip from '../middle/composer/hooks/useCustomEmojiTooltip';\nimport useDraft from '../middle/composer/hooks/useDraft';\nimport useEditing from '../middle/composer/hooks/useEditing';\nimport useEmojiTooltip from '../middle/composer/hooks/useEmojiTooltip';\nimport useInlineBotTooltip from '../middle/composer/hooks/useInlineBotTooltip';\nimport useMentionTooltip from '../middle/composer/hooks/useMentionTooltip';\nimport usePaidMessageConfirmation from '../middle/composer/hooks/usePaidMessageConfirmation';\nimport useStickerTooltip from '../middle/composer/hooks/useStickerTooltip';\nimport useVoiceRecording from '../middle/composer/hooks/useVoiceRecording';\n\nimport AttachmentModal from '../middle/composer/AttachmentModal.async';\nimport AttachMenu from '../middle/composer/AttachMenu';\nimport BotCommandMenu from '../middle/composer/BotCommandMenu.async';\nimport BotKeyboardMenu from '../middle/composer/BotKeyboardMenu';\nimport BotMenuButton from '../middle/composer/BotMenuButton';\nimport ChatCommandTooltip from '../middle/composer/ChatCommandTooltip.async';\nimport ComposerEmbeddedMessage from '../middle/composer/ComposerEmbeddedMessage';\nimport CustomEmojiTooltip from '../middle/composer/CustomEmojiTooltip.async';\nimport CustomSendMenu from '../middle/composer/CustomSendMenu.async';\nimport DropArea, { DropAreaState } from '../middle/composer/DropArea.async';\nimport EmojiTooltip from '../middle/composer/EmojiTooltip.async';\nimport InlineBotTooltip from '../middle/composer/InlineBotTooltip.async';\nimport MentionTooltip from '../middle/composer/MentionTooltip.async';\nimport MessageInput from '../middle/composer/MessageInput';\nimport PollModal from '../middle/composer/PollModal.async';\nimport SendAsMenu from '../middle/composer/SendAsMenu.async';\nimport StickerTooltip from '../middle/composer/StickerTooltip.async';\nimport SymbolMenuButton from '../middle/composer/SymbolMenuButton';\nimport WebPagePreview from '../middle/composer/WebPagePreview';\nimport MessageEffect from '../middle/message/MessageEffect';\nimport ReactionSelector from '../middle/message/reactions/ReactionSelector';\nimport Button from '../ui/Button';\nimport ResponsiveHoverButton from '../ui/ResponsiveHoverButton';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\nimport AnimatedCounter from './AnimatedCounter';\nimport Avatar from './Avatar';\nimport Icon from './icons/Icon';\nimport PaymentMessageConfirmDialog from './PaymentMessageConfirmDialog';\nimport ReactionAnimatedEmoji from './reactions/ReactionAnimatedEmoji';\n\nimport './Composer.scss';\n\ntype ComposerType = 'messageList' | 'story';\n\ntype OwnProps = {\n  renderer?: AnimBgRender | null;\n  type: ComposerType;\n  chatId: string;\n  threadId: ThreadId;\n  storyId?: number;\n  messageListType: MessageListType;\n  dropAreaState?: string;\n  isReady: boolean;\n  isMobile?: boolean;\n  inputId: string;\n  editableInputCssSelector: string;\n  editableInputId: string;\n  className?: string;\n  inputPlaceholder?: TeactNode | string;\n  onDropHide?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    isOnActiveTab: boolean;\n    editingMessage?: ApiMessage;\n    chat?: ApiChat;\n    chatFullInfo?: ApiChatFullInfo;\n    draft?: ApiDraft;\n    replyToTopic?: ApiTopic;\n    currentMessageList?: MessageList;\n    isChatWithBot?: boolean;\n    isChatWithSelf?: boolean;\n    isChannel?: boolean;\n    isForCurrentMessageList: boolean;\n    isRightColumnShown?: boolean;\n    isSelectModeActive?: boolean;\n    isReactionPickerOpen?: boolean;\n    shouldDisplayGiftsButton?: boolean;\n    isForwarding?: boolean;\n    forwardedMessagesCount?: number;\n    pollModal: TabState['pollModal'];\n    botKeyboardMessageId?: number;\n    botKeyboardPlaceholder?: string;\n    withScheduledButton?: boolean;\n    isInScheduledList?: boolean;\n    canScheduleUntilOnline?: boolean;\n    stickersForEmoji?: ApiSticker[];\n    customEmojiForEmoji?: ApiSticker[];\n    currentUserId?: string;\n    currentUser?: ApiUser;\n    recentEmojis: string[];\n    contentToBeScheduled?: TabState['contentToBeScheduled'];\n    shouldSuggestStickers?: boolean;\n    shouldSuggestCustomEmoji?: boolean;\n    baseEmojiKeywords?: Record<string, string[]>;\n    emojiKeywords?: Record<string, string[]>;\n    topInlineBotIds?: string[];\n    isInlineBotLoading: boolean;\n    inlineBots?: Record<string, false | InlineBotSettings>;\n    botCommands?: ApiBotCommand[] | false;\n    botMenuButton?: ApiBotMenuButton;\n    sendAsUser?: ApiUser;\n    sendAsChat?: ApiChat;\n    sendAsId?: string;\n    editingDraft?: ApiFormattedText;\n    requestedDraft?: ApiFormattedText;\n    requestedDraftFiles?: File[];\n    attachBots: GlobalState['attachMenu']['bots'];\n    attachMenuPeerType?: ApiAttachMenuPeerType;\n    theme: ThemeKey;\n    fileSizeLimit: number;\n    captionLimit: number;\n    isCurrentUserPremium?: boolean;\n    canSendVoiceByPrivacy?: boolean;\n    attachmentSettings: GlobalState['attachmentSettings'];\n    slowMode?: ApiChatFullInfo['slowMode'];\n    shouldUpdateStickerSetOrder?: boolean;\n    availableReactions?: ApiAvailableReaction[];\n    topReactions?: ApiReaction[];\n    canPlayAnimatedEmojis?: boolean;\n    canBuyPremium?: boolean;\n    shouldCollectDebugLogs?: boolean;\n    sentStoryReaction?: ApiReaction;\n    stealthMode?: ApiStealthMode;\n    canSendOneTimeMedia?: boolean;\n    quickReplyMessages?: Record<number, ApiMessage>;\n    quickReplies?: Record<number, ApiQuickReply>;\n    canSendQuickReplies?: boolean;\n    webPagePreview?: ApiWebPage;\n    noWebPage?: boolean;\n    isContactRequirePremium?: boolean;\n    paidMessagesStars?: number;\n    effect?: ApiAvailableEffect;\n    effectReactions?: ApiReaction[];\n    areEffectsSupported?: boolean;\n    canPlayEffect?: boolean;\n    shouldPlayEffect?: boolean;\n    maxMessageLength: number;\n    shouldPaidMessageAutoApprove?: boolean;\n    isSilentPosting?: boolean;\n    isPaymentMessageConfirmDialogOpen: boolean;\n    starsBalance: number;\n    isStarsBalanceModalOpen: boolean;\n    disallowedGifts?: ApiDisallowedGifts;\n    isAccountFrozen?: boolean;\n    isAppConfigLoaded?: boolean;\n  };\n\nenum MainButtonState {\n  Send = 'send',\n  Record = 'record',\n  Edit = 'edit',\n  Schedule = 'schedule',\n  Forward = 'forward',\n  SendOneTime = 'sendOneTime',\n}\n\ntype ScheduledMessageArgs = TabState['contentToBeScheduled'] | {\n  id: string; queryId: string; isSilent?: boolean;\n};\n\nconst VOICE_RECORDING_FILENAME = 'wonderful-voice-message.ogg';\n// When voice recording is active, composer placeholder will hide to prevent overlapping\nconst SCREEN_WIDTH_TO_HIDE_PLACEHOLDER = 600; // px\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\nconst SELECT_MODE_TRANSITION_MS = 200;\nconst SENDING_ANIMATION_DURATION = 350;\nconst MOUNT_ANIMATION_DURATION = 430;\n\nconst Composer: FC<OwnProps & StateProps> = ({\n  type,\n  renderer,\n  isOnActiveTab,\n  dropAreaState,\n  isInScheduledList,\n  canScheduleUntilOnline,\n  isReady,\n  isMobile,\n  editingMessage,\n  chatId,\n  threadId,\n  storyId,\n  currentMessageList,\n  messageListType,\n  draft,\n  chat,\n  chatFullInfo,\n  replyToTopic,\n  isForCurrentMessageList,\n  isCurrentUserPremium,\n  canSendVoiceByPrivacy,\n  isChatWithBot,\n  isChatWithSelf,\n  isChannel,\n  fileSizeLimit,\n  isRightColumnShown,\n  isSelectModeActive,\n  isReactionPickerOpen,\n  shouldDisplayGiftsButton,\n  isForwarding,\n  forwardedMessagesCount,\n  pollModal,\n  botKeyboardMessageId,\n  botKeyboardPlaceholder,\n  inputPlaceholder,\n  withScheduledButton,\n  stickersForEmoji,\n  customEmojiForEmoji,\n  topInlineBotIds,\n  currentUserId,\n  currentUser,\n  captionLimit,\n  contentToBeScheduled,\n  shouldSuggestStickers,\n  shouldSuggestCustomEmoji,\n  baseEmojiKeywords,\n  emojiKeywords,\n  recentEmojis,\n  inlineBots,\n  isInlineBotLoading,\n  botCommands,\n  sendAsUser,\n  sendAsChat,\n  sendAsId,\n  editingDraft,\n  requestedDraft,\n  requestedDraftFiles,\n  botMenuButton,\n  attachBots,\n  attachMenuPeerType,\n  attachmentSettings,\n  theme,\n  slowMode,\n  shouldUpdateStickerSetOrder,\n  editableInputCssSelector,\n  editableInputId,\n  inputId,\n  className,\n  availableReactions,\n  topReactions,\n  canBuyPremium,\n  canPlayAnimatedEmojis,\n  shouldCollectDebugLogs,\n  sentStoryReaction,\n  stealthMode,\n  canSendOneTimeMedia,\n  quickReplyMessages,\n  quickReplies,\n  canSendQuickReplies,\n  webPagePreview,\n  noWebPage,\n  isContactRequirePremium,\n  paidMessagesStars,\n  effect,\n  effectReactions,\n  areEffectsSupported,\n  canPlayEffect,\n  shouldPlayEffect,\n  maxMessageLength,\n  isSilentPosting,\n  onDropHide,\n  onFocus,\n  onBlur,\n  onForward,\n  isPaymentMessageConfirmDialogOpen,\n  starsBalance,\n  isStarsBalanceModalOpen,\n  disallowedGifts,\n  isAccountFrozen,\n  isAppConfigLoaded,\n}) => {\n  const {\n    sendMessage,\n    clearDraft,\n    showDialog,\n    openPollModal,\n    closePollModal,\n    loadScheduledHistory,\n    openThread,\n    addRecentEmoji,\n    sendInlineBotResult,\n    loadSendAs,\n    resetOpenChatWithDraft,\n    callAttachBot,\n    addRecentCustomEmoji,\n    showNotification,\n    showAllowedMessageTypesNotification,\n    openStoryReactionPicker,\n    openGiftModal,\n    closeReactionPicker,\n    sendStoryReaction,\n    editMessage,\n    updateAttachmentSettings,\n    saveEffectInDraft,\n    setReactionEffect,\n    hideEffectInComposer,\n    updateChatSilentPosting,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const { getHtml, ctx: richInputCtx } = useRichEditable();\n\n  // eslint-disable-next-line no-null/no-null\n  const counterRef = useRef<HTMLSpanElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const storyReactionRef = useRef<HTMLButtonElement>(null);\n\n  const [isMounted, setIsMounted] = useState(false);\n  const lastMessageSendTimeSeconds = useRef<number>();\n  const prevDropAreaState = usePreviousDeprecated(dropAreaState);\n  const { width: windowWidth } = windowSize.get();\n\n  const isInMessageList = type === 'messageList';\n  const isInStoryViewer = type === 'story';\n  const sendAsPeerIds = isInMessageList ? chat?.sendAsPeerIds : undefined;\n  const canShowSendAs = sendAsPeerIds\n    && (sendAsPeerIds.length > 1 || !sendAsPeerIds.some((peer) => peer.id === currentUserId!));\n  // Prevent Symbol Menu from closing when calendar is open\n  const [isSymbolMenuForced, forceShowSymbolMenu, cancelForceShowSymbolMenu] = useFlag();\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n  const isInputHasFocus = false; // TODO: FIX\n  const [isAttachMenuOpen, onAttachMenuOpen, onAttachMenuClose] = useFlag();\n\n  const canMediaBeReplaced = editingMessage && canEditMedia(editingMessage);\n\n  const { emojiSet, members: groupChatMembers, botCommands: chatBotCommands } = chatFullInfo || {};\n  const chatEmojiSetId = emojiSet?.id;\n\n  const isSentStoryReactionHeart = sentStoryReaction && isSameReaction(sentStoryReaction, HEART_REACTION);\n\n  useEffect(processMessageInputForCustomEmoji, [richInputCtx.editable.htmlS]);\n\n  const customEmojiNotificationNumber = useRef(0);\n\n  const [requestCalendar, calendar] = useSchedule(\n    isInMessageList && canScheduleUntilOnline,\n    cancelForceShowSymbolMenu,\n  );\n\n  useTimeout(() => {\n    setIsMounted(true);\n  }, MOUNT_ANIMATION_DURATION);\n\n  useEffect(() => {\n    if (isInMessageList) return;\n\n    closeReactionPicker();\n  }, [isInMessageList, storyId]);\n\n  useEffect(() => {\n    lastMessageSendTimeSeconds.current = undefined;\n  }, [chatId]);\n\n  useEffect(() => {\n    if (isAppConfigLoaded && chatId && isReady && !isInStoryViewer) {\n      loadScheduledHistory({ chatId });\n    }\n  }, [isReady, chatId, threadId, isInStoryViewer, isAppConfigLoaded]);\n\n  useEffect(() => {\n    const isChannelWithProfiles = isChannel && chat?.areProfilesShown;\n    if (chatId && chat && !sendAsPeerIds && isReady && (isChatSuperGroup(chat) || isChannelWithProfiles)) {\n      loadSendAs({ chatId });\n    }\n  }, [chat, chatId, isChannel, isReady, loadSendAs, sendAsPeerIds]);\n\n  const shouldAnimateSendAsButtonRef = useRef(false);\n  useSyncEffect(([prevChatId, prevSendAsPeerIds]) => {\n    // We only animate send-as button if `sendAsPeerIds` was missing when opening the chat\n    shouldAnimateSendAsButtonRef.current = Boolean(chatId === prevChatId && sendAsPeerIds && !prevSendAsPeerIds);\n  }, [chatId, sendAsPeerIds]);\n\n  const [attachments, setAttachments] = useState<ApiAttachment[]>([]);\n  const hasAttachments = Boolean(attachments.length);\n  const [nextText, setNextText] = useState<ApiFormattedText | undefined>(undefined);\n\n  const {\n    canSendStickers, canSendGifs, canAttachMedia, canAttachPolls, canAttachEmbedLinks,\n    canSendVoices, canSendPlainText, canSendAudios, canSendVideos, canSendPhotos, canSendDocuments,\n  } = useMemo(\n    () => getAllowedAttachmentOptions(chat,\n      chatFullInfo,\n      isChatWithBot,\n      isInStoryViewer,\n      paidMessagesStars,\n      isInScheduledList),\n    [chat, chatFullInfo, isChatWithBot, isInStoryViewer, paidMessagesStars, isInScheduledList],\n  );\n\n  const isNeedPremium = isContactRequirePremium && isInStoryViewer;\n  const isSendTextBlocked = isNeedPremium || !canSendPlainText;\n\n  const messagesCount = useDerivedState(() => {\n    if (hasAttachments) return attachments.length;\n    const messagesInInput = (getHtml() || hasAttachments) ? 1 : 0;\n    if (!isForwarding || !forwardedMessagesCount) return messagesInInput || 1;\n    return forwardedMessagesCount + messagesInInput;\n  }, [getHtml, hasAttachments, attachments, isForwarding, forwardedMessagesCount]);\n  const starsForAllMessages = paidMessagesStars ? messagesCount * paidMessagesStars : 0;\n\n  const {\n    closeConfirmDialog: closeConfirmModalPayForMessage,\n    dialogHandler: paymentMessageConfirmDialogHandler,\n    shouldAutoApprove: shouldPaidMessageAutoApprove,\n    setAutoApprove: setShouldPaidMessageAutoApprove,\n    handleWithConfirmation: handleActionWithPaymentConfirmation,\n  } = usePaidMessageConfirmation(starsForAllMessages, isStarsBalanceModalOpen, starsBalance);\n\n  const hasWebPagePreview = !hasAttachments && canAttachEmbedLinks && !noWebPage && Boolean(webPagePreview);\n  const isComposerBlocked = isSendTextBlocked && !editingMessage;\n\n  useEffect(() => {\n    if (!hasWebPagePreview) {\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [hasWebPagePreview]);\n\n  const insertHtmlAndUpdateCursor = useLastCallback((newHtml: string, inInputId: string = editableInputId) => {\n    if (inInputId === editableInputId && isComposerBlocked) return;\n\n    richInputCtx.editable.execCommand('insertHtml', newHtml);\n  });\n\n  const insertTextAndUpdateCursor = useLastCallback((\n    text: string, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = renderText(text, ['escape_html', 'emoji_html', 'br_html'])\n      .join('')\n      .replace(/\\u200b+/g, '\\u200b');\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertFormattedTextAndUpdateCursor = useLastCallback((\n    text: ApiFormattedText, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = getTextWithEntitiesAsHtml(text);\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertCustomEmojiAndUpdateCursor = useLastCallback((emoji: ApiSticker, inInputId: string = editableInputId) => {\n    insertHtmlAndUpdateCursor(buildCustomEmojiHtml(emoji), inInputId);\n  });\n\n  const insertNextText = useLastCallback(() => {\n    if (!nextText) return;\n    insertFormattedTextAndUpdateCursor(nextText, editableInputId);\n    setNextText(undefined);\n  });\n\n  const {\n    shouldSuggestCompression,\n    shouldForceCompression,\n    shouldForceAsFile,\n    handleAppendFiles,\n    handleFileSelect,\n    handleClearAttachments,\n    handleSetAttachments,\n  } = useAttachmentModal({\n    attachments,\n    setAttachments,\n    fileSizeLimit,\n    chatId,\n    canSendAudios,\n    canSendVideos,\n    canSendPhotos,\n    canSendDocuments,\n    insertNextText,\n    editedMessage: editingMessage,\n  });\n\n  const [isBotKeyboardOpen, openBotKeyboard, closeBotKeyboard] = useFlag();\n  const [isBotCommandMenuOpen, openBotCommandMenu, closeBotCommandMenu] = useFlag();\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n  const [isSendAsMenuOpen, openSendAsMenu, closeSendAsMenu] = useFlag();\n  const [isHoverDisabled, disableHover, enableHover] = useFlag();\n\n  const {\n    startRecordingVoice,\n    stopRecordingVoice,\n    pauseRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef: mainButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  } = useVoiceRecording();\n\n  const shouldSendRecordingStatus = isForCurrentMessageList && !isInStoryViewer;\n  useInterval(() => {\n    sendMessageAction({ type: 'recordAudio' });\n  }, shouldSendRecordingStatus ? activeVoiceRecording && SEND_MESSAGE_ACTION_INTERVAL : undefined);\n\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (!activeVoiceRecording) {\n      sendMessageAction({ type: 'cancel' });\n    }\n  }, [activeVoiceRecording, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isEditingRef = useStateRef(Boolean(editingMessage));\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (richInputCtx.editable.htmlS() && !isEditingRef.current) {\n      sendMessageAction({ type: 'typing' });\n    }\n  }, [\n    richInputCtx.editable, richInputCtx.editable.htmlS, isEditingRef,\n    isForCurrentMessageList, isInStoryViewer, sendMessageAction,\n  ]);\n\n  const isAdmin = chat && isChatAdmin(chat);\n\n  const {\n    isEmojiTooltipOpen,\n    closeEmojiTooltip,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  } = useEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers && !hasAttachments),\n    richInputCtx,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    closeCustomEmojiTooltip,\n    insertCustomEmoji,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestCustomEmoji && !hasAttachments),\n    richInputCtx,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isStickerTooltipOpen,\n    closeStickerTooltip,\n  } = useStickerTooltip(\n    Boolean(isReady\n      && isOnActiveTab\n      && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers\n      && canSendStickers\n      && !hasAttachments),\n    richInputCtx,\n    stickersForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    richInputCtx,\n    groupChatMembers,\n    topInlineBotIds,\n    currentUserId,\n  );\n\n  const {\n    isOpen: isInlineBotTooltipOpen,\n    botId: inlineBotId,\n    isGallery: isInlineBotTooltipGallery,\n    switchPm: inlineBotSwitchPm,\n    switchWebview: inlineBotSwitchWebview,\n    results: inlineBotResults,\n    closeTooltip: closeInlineBotTooltip,\n    help: inlineBotHelp,\n    loadMore: loadMoreForInlineBot,\n  } = useInlineBotTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    chatId,\n    getHtml,\n    inlineBots,\n  );\n\n  const hasQuickReplies = Boolean(quickReplies && Object.keys(quickReplies).length);\n\n  const {\n    isOpen: isChatCommandTooltipOpen,\n    close: closeChatCommandTooltip,\n    filteredBotCommands: botTooltipCommands,\n    filteredQuickReplies: quickReplyCommands,\n  } = useChatCommandTooltip(\n    Boolean(isInMessageList\n      && isReady\n      && isForCurrentMessageList\n      && ((botCommands && botCommands?.length) || chatBotCommands?.length || (hasQuickReplies && canSendQuickReplies))),\n    getHtml,\n    botCommands,\n    chatBotCommands,\n    canSendQuickReplies ? quickReplies : undefined,\n  );\n\n  useDraft({\n    draft,\n    chatId,\n    threadId,\n    richInputCtx,\n    editedMessage: editingMessage,\n    isDisabled: isInStoryViewer || Boolean(requestedDraft),\n  });\n\n  const resetComposer = useLastCallback((shouldPreserveInput = false) => {\n    if (!shouldPreserveInput) {\n      richInputCtx.editable.clearInput();\n    }\n\n    setAttachments(MEMO_EMPTY_ARRAY);\n    setNextText(undefined);\n\n    closeEmojiTooltip();\n    closeCustomEmojiTooltip();\n    closeStickerTooltip();\n    closeMentionTooltip();\n\n    if (isMobile) {\n      // @optimization\n      setTimeout(() => closeSymbolMenu(), SENDING_ANIMATION_DURATION);\n    } else {\n      closeSymbolMenu();\n    }\n  });\n\n  const [handleEditComplete, handleEditCancel, shouldForceShowEditing] = useEditing(\n    richInputCtx,\n    editingMessage,\n    resetComposer,\n    chatId,\n    threadId,\n    messageListType,\n    draft,\n    editingDraft,\n  );\n\n  // Handle chat change (should be placed after `useDraft` and `useEditing`)\n  const resetComposerRef = useStateRef(resetComposer);\n  const stopRecordingVoiceRef = useStateRef(stopRecordingVoice);\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      stopRecordingVoiceRef.current();\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      resetComposerRef.current();\n    };\n  }, [chatId, threadId, resetComposerRef, stopRecordingVoiceRef]);\n\n  const areAllGiftsDisallowed = useMemo(() => {\n    if (!disallowedGifts) {\n      return undefined;\n    }\n    return Object.values(disallowedGifts).every(Boolean);\n  }, [disallowedGifts]);\n\n  const shouldShowGiftButton = Boolean(!isChatWithSelf && shouldDisplayGiftsButton && !areAllGiftsDisallowed);\n  const canAnimate = selectCanAnimateInterface(getGlobal());\n\n  const showCustomEmojiPremiumNotification = useLastCallback(() => {\n    const notificationNumber = customEmojiNotificationNumber.current;\n    if (!notificationNumber) {\n      showNotification({\n        message: oldLang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: oldLang('PremiumMore'),\n      });\n    } else {\n      showNotification({\n        message: oldLang('UnlockPremiumEmojiHint2'),\n        action: {\n          action: 'openChat',\n          payload: { id: currentUserId, shouldReplaceHistory: true },\n        },\n        actionText: oldLang('Open'),\n      });\n    }\n    customEmojiNotificationNumber.current = Number(!notificationNumber);\n  });\n\n  const mainButtonState = useDerivedState(() => {\n    if (!isInputHasFocus && onForward && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Forward;\n    }\n\n    if (editingMessage && shouldForceShowEditing) {\n      return MainButtonState.Edit;\n    }\n\n    if (IS_VOICE_RECORDING_SUPPORTED && !activeVoiceRecording && !isForwarding && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Record;\n    }\n\n    if (isInScheduledList) {\n      return MainButtonState.Schedule;\n    }\n\n    return MainButtonState.Send;\n  }, [\n    activeVoiceRecording, editingMessage, getHtml, hasAttachments, isForwarding, isInputHasFocus, onForward,\n    shouldForceShowEditing, isInScheduledList,\n  ]);\n  const canShowCustomSendMenu = !isInScheduledList;\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !(mainButtonState === MainButtonState.Send && canShowCustomSendMenu));\n\n  const {\n    contextMenuAnchor: storyReactionPickerAnchor,\n    handleContextMenu: handleStoryPickerContextMenu,\n    handleBeforeContextMenu: handleBeforeStoryPickerContextMenu,\n    handleContextMenuHide: handleStoryPickerContextMenuHide,\n  } = useContextMenuHandlers(storyReactionRef, !isInStoryViewer);\n\n  useEffect(() => {\n    if (isReactionPickerOpen) return;\n\n    if (storyReactionPickerAnchor) {\n      openStoryReactionPicker({\n        peerId: chatId,\n        storyId: storyId!,\n        position: storyReactionPickerAnchor,\n      });\n      handleStoryPickerContextMenuHide();\n    }\n  }, [chatId, handleStoryPickerContextMenuHide, isReactionPickerOpen, storyId, storyReactionPickerAnchor]);\n\n  useClipboardPaste(\n    isForCurrentMessageList || isInStoryViewer,\n    richInputCtx,\n    handleSetAttachments,\n    setNextText,\n    editingMessage,\n    !isCurrentUserPremium && !isChatWithSelf,\n    showCustomEmojiPremiumNotification,\n  );\n\n  const handleEmbeddedClear = useLastCallback(() => {\n    if (editingMessage) {\n      handleEditCancel();\n    }\n  });\n\n  const validateTextLength = useLastCallback((text: string, isAttachmentModal?: boolean) => {\n    const maxLength = isAttachmentModal ? captionLimit : maxMessageLength;\n    if (text?.length > maxLength) {\n      const extraLength = text.length - maxLength;\n      showDialog({\n        data: {\n          message: 'MESSAGE_TOO_LONG_PLEASE_REMOVE_CHARACTERS',\n          textParams: {\n            '{EXTRA_CHARS_COUNT}': extraLength.toString(),\n            '{PLURAL_S}': extraLength > 1 ? 's' : '',\n          },\n          hasErrorKey: true,\n        },\n      });\n\n      return false;\n    }\n    return true;\n  });\n\n  const checkSlowMode = useLastCallback(() => {\n    if (slowMode && !isAdmin) {\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const nowSeconds = getServerTime();\n      const secondsSinceLastMessage = lastMessageSendTimeSeconds.current\n        && Math.floor(nowSeconds - lastMessageSendTimeSeconds.current);\n      const nextSendDateNotReached = slowMode.nextSendDate && slowMode.nextSendDate > nowSeconds;\n\n      if (\n        (secondsSinceLastMessage && secondsSinceLastMessage < slowMode.seconds)\n        || nextSendDateNotReached\n      ) {\n        const secondsRemaining = nextSendDateNotReached\n          ? slowMode.nextSendDate! - nowSeconds\n          : slowMode.seconds - secondsSinceLastMessage!;\n        showDialog({\n          data: {\n            message: oldLang('SlowModeHint', formatMediaDuration(secondsRemaining)),\n            isSlowMode: true,\n            hasErrorKey: false,\n          },\n        });\n\n        messageInput?.blur();\n\n        return false;\n      }\n    }\n    return true;\n  });\n\n  const canSendAttachments = (attachmentsToSend: ApiAttachment[]): boolean => {\n    if (!currentMessageList && !storyId) {\n      return false;\n    }\n\n    const { text } = richInputCtx.editable.getFormattedText(true);\n    if (!text && !attachmentsToSend.length) {\n      return false;\n    }\n    if (!validateTextLength(text, true)) return false;\n    if (!checkSlowMode()) return false;\n\n    return true;\n  };\n\n  const sendAttachments = useLastCallback(({\n    attachments: attachmentsToSend,\n    sendCompressed = attachmentSettings.shouldCompress,\n    sendGrouped = attachmentSettings.shouldSendGrouped,\n    isSilent,\n    scheduledAt,\n    isInvertedMedia,\n  }: {\n    attachments: ApiAttachment[];\n    sendCompressed?: boolean;\n    sendGrouped?: boolean;\n    isSilent?: boolean;\n    scheduledAt?: number;\n    isInvertedMedia?: true;\n  }) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n    isSilent = isSilent || isSilentPosting;\n\n    const { text, entities } = richInputCtx.editable.getFormattedText(true);\n\n    isInvertedMedia = text && sendCompressed && sendGrouped ? isInvertedMedia : undefined;\n\n    if (editingMessage) {\n      editMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n        shouldGroupMessages: sendGrouped,\n        isInvertedMedia,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, isLocalOnly: true });\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleSendAttachmentsFromModal = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isInvertedMedia?: true,\n  ) => {\n    if (canSendAttachments(attachments)) {\n      if (editingMessage) {\n        sendAttachments({\n          attachments,\n          sendCompressed,\n          sendGrouped,\n          isInvertedMedia,\n        });\n        return;\n      }\n\n      handleActionWithPaymentConfirmation(sendAttachments, {\n        attachments,\n        sendCompressed,\n        sendGrouped,\n        isInvertedMedia,\n      });\n    }\n  });\n\n  const handleSendAttachments = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isSilent?: boolean,\n    scheduledAt?: number,\n    isInvertedMedia?: true,\n  ) => {\n    if (canSendAttachments(attachments)) {\n      sendAttachments({\n        attachments,\n        sendCompressed,\n        sendGrouped,\n        isSilent,\n        scheduledAt,\n        isInvertedMedia,\n      });\n    }\n  });\n\n  const handleSendCore = useLastCallback(\n    (currentAttachments: ApiAttachment[], isSilent = false, scheduledAt?: number) => {\n      const { text, entities } = richInputCtx.editable.getFormattedText(true);\n\n      if (currentAttachments.length) {\n        if (canSendAttachments(currentAttachments)) {\n          sendAttachments({\n            attachments: currentAttachments,\n            scheduledAt,\n            isSilent,\n          });\n        }\n        return;\n      }\n\n      if (!text && !isForwarding) {\n        return;\n      }\n\n      if (!validateTextLength(text)) return;\n\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const effectId = effect?.id;\n\n      if (text || isForwarding) {\n        if (!checkSlowMode()) return;\n\n        const isInvertedMedia = hasWebPagePreview ? attachmentSettings.isInvertedMedia : undefined;\n\n        if (areEffectsSupported) saveEffectInDraft({ chatId, threadId, effectId: undefined });\n\n        sendMessage({\n          messageList: currentMessageList,\n          text,\n          entities,\n          scheduledAt,\n          isSilent,\n          shouldUpdateStickerSetOrder,\n          isInvertedMedia,\n          effectId,\n          webPageMediaSize: attachmentSettings.webPageMediaSize,\n          webPageUrl: hasWebPagePreview ? webPagePreview!.url : undefined,\n          isForwarding,\n        });\n      }\n\n      lastMessageSendTimeSeconds.current = getServerTime();\n      clearDraft({\n        chatId, threadId, isLocalOnly: true, shouldKeepReply: isForwarding,\n      });\n\n      if (IS_IOS && messageInput && messageInput === document.activeElement) {\n        applyIosAutoCapitalizationFix(messageInput);\n      }\n\n      if (canAnimate) {\n        renderer?.nextState();\n      }\n\n      // Wait until message animation starts\n      requestMeasure(() => {\n        resetComposer();\n      });\n    },\n  );\n\n  const handleSend = useLastCallback(async (isSilent = false, scheduledAt?: number) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    isSilent = isSilent || isSilentPosting;\n\n    let currentAttachments = attachments;\n\n    if (activeVoiceRecording) {\n      const record = await stopRecordingVoice();\n      const ttlSeconds = isViewOnceEnabled ? ONE_TIME_MEDIA_TTL_SECONDS : undefined;\n      if (record) {\n        const { blob, duration, waveform } = record;\n        currentAttachments = [await buildAttachment(\n          VOICE_RECORDING_FILENAME,\n          blob,\n          { voice: { duration, waveform }, ttlSeconds },\n        )];\n      }\n    }\n\n    handleSendCore(currentAttachments, isSilent, scheduledAt);\n  });\n\n  const handleSendWithConfirmation = useLastCallback((isSilent = false, scheduledAt?: number) => {\n    handleActionWithPaymentConfirmation(handleSend, isSilent, scheduledAt);\n  });\n\n  const handleClickBotMenu = useLastCallback(() => {\n    if (botMenuButton?.type !== 'webApp') {\n      return;\n    }\n\n    const parsedLink = tryParseDeepLink(botMenuButton.url);\n\n    if (parsedLink?.type === 'publicUsernameOrBotLink' && parsedLink.appName) {\n      processDeepLink(botMenuButton.url);\n    } else {\n      callAttachBot({\n        chatId, url: botMenuButton.url, threadId,\n      });\n    }\n  });\n\n  const handleActivateBotCommandMenu = useLastCallback(() => {\n    closeSymbolMenu();\n    openBotCommandMenu();\n  });\n\n  const handleMessageSchedule = useLastCallback((\n    args: ScheduledMessageArgs, scheduledAt: number, messageList: MessageList, effectId?: string,\n  ) => {\n    if (args && 'queryId' in args) {\n      const { id, queryId, isSilent } = args;\n      sendInlineBotResult({\n        id,\n        chatId,\n        threadId,\n        queryId,\n        scheduledAt,\n        isSilent: isSilent || isSilentPosting,\n      });\n      return;\n    }\n\n    const { isSilent, ...restArgs } = args || {};\n\n    if (!args || Object.keys(restArgs).length === 0) {\n      void handleSend(Boolean(isSilent), scheduledAt);\n    } else if (args.sendCompressed !== undefined || args.sendGrouped !== undefined) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = args;\n      void handleSendAttachments(sendCompressed, sendGrouped, isSilent, scheduledAt, isInvertedMedia);\n    } else {\n      sendMessage({\n        ...args,\n        messageList,\n        scheduledAt,\n        effectId,\n      });\n    }\n  });\n\n  useEffectWithPrevDeps(([prevContentToBeScheduled]) => {\n    if (currentMessageList && contentToBeScheduled && contentToBeScheduled !== prevContentToBeScheduled) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule(contentToBeScheduled, scheduledAt, currentMessageList);\n      });\n    }\n  }, [contentToBeScheduled, currentMessageList, handleMessageSchedule, requestCalendar]);\n\n  useEffect(() => {\n    if (requestedDraft) {\n      insertFormattedTextAndUpdateCursor(requestedDraft);\n      resetOpenChatWithDraft();\n\n      requestNextMutation(() => {\n        const messageInput = document.getElementById(editableInputId)!;\n        focusEditableElement(messageInput, true);\n      });\n    }\n  }, [editableInputId, requestedDraft, resetOpenChatWithDraft, richInputCtx.editable]);\n\n  useEffect(() => {\n    if (requestedDraftFiles?.length) {\n      void handleFileSelect(requestedDraftFiles);\n      resetOpenChatWithDraft();\n    }\n  }, [handleFileSelect, requestedDraftFiles, resetOpenChatWithDraft]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker, inInputId?: string) => {\n    const emojiSetId = 'id' in emoji.stickerSetInfo && emoji.stickerSetInfo.id;\n    if (!emoji.isFree && !isCurrentUserPremium && !isChatWithSelf && emojiSetId !== chatEmojiSetId) {\n      showCustomEmojiPremiumNotification();\n      return;\n    }\n\n    insertCustomEmojiAndUpdateCursor(emoji, inInputId);\n  });\n\n  const handleCustomEmojiSelectAttachmentModal = useLastCallback((emoji: ApiSticker) => {\n    handleCustomEmojiSelect(emoji, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleGifSelect = useLastCallback((gif: ApiVideo, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    isSilent = isSilent || isSilentPosting;\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleActionWithPaymentConfirmation(handleMessageSchedule, { gif, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(true);\n        });\n      });\n    } else {\n      handleActionWithPaymentConfirmation(sendMessage, { messageList: currentMessageList, gif, isSilent });\n      requestMeasure(() => {\n        resetComposer(true);\n      });\n    }\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    isScheduleRequested?: boolean,\n    shouldPreserveInput = false,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    isSilent = isSilent || isSilentPosting;\n\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleActionWithPaymentConfirmation(\n          handleMessageSchedule, { sticker, isSilent }, scheduledAt, currentMessageList!,\n        );\n        requestMeasure(() => {\n          resetComposer(shouldPreserveInput);\n        });\n      });\n    } else {\n      handleActionWithPaymentConfirmation(\n        sendMessage,\n        {\n          messageList: currentMessageList,\n          sticker,\n          isSilent,\n          shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && canUpdateStickerSetsOrder,\n        },\n      );\n      clearDraft({ chatId, threadId, isLocalOnly: true });\n\n      requestMeasure(() => {\n        resetComposer(shouldPreserveInput);\n      });\n    }\n  });\n\n  const handleInlineBotSelect = useLastCallback((\n    inlineResult: ApiBotInlineResult | ApiBotInlineMediaResult, isSilent?: boolean, isScheduleRequested?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    isSilent = isSilent || isSilentPosting;\n\n    if (isInScheduledList || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        handleActionWithPaymentConfirmation(handleMessageSchedule,\n          {\n            id: inlineResult.id,\n            queryId: inlineResult.queryId,\n            isSilent,\n          },\n          scheduledAt,\n          currentMessageList!);\n      });\n    } else {\n      handleActionWithPaymentConfirmation(sendInlineBotResult,\n        {\n          id: inlineResult.id,\n          queryId: inlineResult.queryId,\n          threadId,\n          chatId,\n          isSilent,\n        });\n    }\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleBotCommandSelect = useLastCallback(() => {\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handlePollSend = useLastCallback((poll: ApiNewPoll) => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleActionWithPaymentConfirmation(\n          handleMessageSchedule,\n          { poll },\n          scheduledAt,\n          currentMessageList,\n        );\n      });\n      closePollModal();\n    } else {\n      handleActionWithPaymentConfirmation(\n        sendMessage,\n        { messageList: currentMessageList, poll, isSilent: isSilentPosting },\n      );\n      closePollModal();\n    }\n  });\n\n  const sendSilent = useLastCallback((additionalArgs?: ScheduledMessageArgs) => {\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ ...additionalArgs, isSilent: true }, scheduledAt, currentMessageList!);\n      });\n    } else if (additionalArgs && ('sendCompressed' in additionalArgs || 'sendGrouped' in additionalArgs)) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = additionalArgs;\n      void handleSendAttachments(sendCompressed, sendGrouped, true, undefined, isInvertedMedia);\n    } else {\n      void handleSend(true);\n    }\n  });\n\n  const handleSendAsMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  useEffect(() => {\n    if (!isComposerBlocked) return;\n\n    richInputCtx.editable.clearInput();\n  }, [isComposerBlocked, richInputCtx.editable, attachments]);\n\n  const insertTextAndUpdateCursorAttachmentModal = useLastCallback((text: string) => {\n    insertTextAndUpdateCursor(text, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const removeSymbol = useLastCallback(() => {\n    richInputCtx.editable.removeLastSymbol();\n  });\n\n  const removeSymbolAttachmentModal = useLastCallback(() => {\n    removeSymbol();\n  });\n\n  const handleAllScheduledClick = useLastCallback(() => {\n    openThread({\n      chatId, threadId, type: 'scheduled', noForumTopicPanel: true,\n    });\n  });\n\n  const handleGiftClick = useLastCallback(() => {\n    openGiftModal({ forUserId: chatId });\n  });\n\n  const handleToggleSilentPosting = useLastCallback(() => {\n    const newValue = !isSilentPosting;\n    updateChatSilentPosting({ chatId, isEnabled: newValue });\n\n    showNotification({\n      localId: 'silentPosting',\n      icon: newValue ? 'mute' : 'unmute',\n      message: lang(`ComposerSilentPosting${newValue ? 'Enabled' : 'Disabled'}Tootlip`),\n    });\n  });\n\n  useEffect(() => {\n    if (isRightColumnShown && isMobile) {\n      closeSymbolMenu();\n    }\n  }, [isRightColumnShown, closeSymbolMenu, isMobile]);\n\n  useEffect(() => {\n    if (!isReady) return;\n\n    if (isSelectModeActive) {\n      disableHover();\n    } else {\n      setTimeout(() => {\n        enableHover();\n      }, SELECT_MODE_TRANSITION_MS);\n    }\n  }, [isSelectModeActive, enableHover, disableHover, isReady]);\n\n  const hasText = useDerivedState(\n    () => !richInputCtx.editable.emptyS(),\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n    [richInputCtx.editable, richInputCtx.editable.emptyS],\n  );\n\n  const withBotMenuButton = isChatWithBot && botMenuButton?.type === 'webApp' && !editingMessage\n    && messageListType === 'thread';\n  const isBotMenuButtonOpen = withBotMenuButton && !hasText && !activeVoiceRecording;\n\n  const [timedPlaceholderLangKey, timedPlaceholderDate] = useMemo(() => {\n    if (slowMode?.nextSendDate) {\n      return ['SlowModeWait', slowMode.nextSendDate];\n    }\n\n    if (stealthMode?.activeUntil && isInStoryViewer) {\n      return ['StealthModeActiveHint', stealthMode.activeUntil];\n    }\n\n    return [];\n  }, [isInStoryViewer, slowMode?.nextSendDate, stealthMode?.activeUntil]);\n\n  const isComposerHasFocus = isBotKeyboardOpen || isSymbolMenuOpen || isEmojiTooltipOpen || isSendAsMenuOpen\n    || isMentionTooltipOpen || isInlineBotTooltipOpen || isBotCommandMenuOpen || isAttachMenuOpen\n    || isStickerTooltipOpen || isChatCommandTooltipOpen || isCustomEmojiTooltipOpen || isBotMenuButtonOpen\n  || isCustomSendMenuOpen || Boolean(activeVoiceRecording) || attachments.length > 0 || isInputHasFocus;\n  const isReactionSelectorOpen = isComposerHasFocus && !isReactionPickerOpen && isInStoryViewer && !isAttachMenuOpen\n    && !isSymbolMenuOpen;\n\n  const placeholder = useMemo(() => {\n    if (activeVoiceRecording && windowWidth <= SCREEN_WIDTH_TO_HIDE_PLACEHOLDER) {\n      return '';\n    }\n\n    if (!isComposerBlocked) {\n      if (botKeyboardPlaceholder) return botKeyboardPlaceholder;\n      if (inputPlaceholder) return inputPlaceholder;\n      if (paidMessagesStars) {\n        return lang('ComposerPlaceholderPaidMessage', {\n          amount: formatStarsAsIcon(lang, paidMessagesStars, { asFont: true, className: 'placeholder-star-icon' }),\n        }, {\n          withNodes: true,\n        });\n      }\n      if (chat?.isForum && chat?.isForumAsMessages && threadId === MAIN_THREAD_ID) {\n        return replyToTopic\n          ? lang('ComposerPlaceholderTopic', { topic: replyToTopic.title })\n          : lang('ComposerPlaceholderTopicGeneral');\n      }\n      if (isChannel) {\n        return lang(isSilentPosting ? 'ComposerPlaceholderBroadcastSilent' : 'ComposerPlaceholderBroadcast');\n      }\n      return lang('ComposerPlaceholder');\n    }\n\n    if (isInStoryViewer) return lang('ComposerStoryPlaceholderLocked');\n\n    return lang('ComposerPlaceholderNoText');\n  }, [\n    activeVoiceRecording, botKeyboardPlaceholder, chat, inputPlaceholder, isChannel, isComposerBlocked,\n    isInStoryViewer, isSilentPosting, lang, replyToTopic, threadId, windowWidth, paidMessagesStars,\n  ]);\n\n  useEffect(() => {\n    if (isComposerHasFocus) {\n      onFocus?.();\n    } else {\n      onBlur?.();\n    }\n  }, [isComposerHasFocus, onBlur, onFocus]);\n\n  const {\n    shouldRender: shouldRenderReactionSelector,\n    transitionClassNames: reactionSelectorTransitonClassNames,\n  } = useShowTransitionDeprecated(isReactionSelectorOpen);\n  const areVoiceMessagesNotAllowed = mainButtonState === MainButtonState.Record\n    && (!canAttachMedia || !canSendVoiceByPrivacy || !canSendVoices);\n\n  const mainButtonHandler = useLastCallback(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Forward:\n        onForward?.();\n        break;\n      case MainButtonState.Send:\n        handleSendWithConfirmation();\n        break;\n      case MainButtonState.Record: {\n        if (areVoiceMessagesNotAllowed) {\n          if (!canSendVoiceByPrivacy) {\n            showNotification({\n              message: oldLang('VoiceMessagesRestrictedByPrivacy', chat?.title),\n            });\n          } else if (!canSendVoices) {\n            showAllowedMessageTypesNotification({ chatId, messageListType });\n          }\n        } else {\n          setIsViewOnceEnabled(false);\n          void startRecordingVoice();\n        }\n        break;\n      }\n      case MainButtonState.Edit:\n        handleEditComplete();\n        break;\n      case MainButtonState.Schedule:\n        if (activeVoiceRecording) {\n          pauseRecordingVoice();\n        }\n        if (!currentMessageList) {\n          return;\n        }\n        requestCalendar((scheduledAt) => {\n          handleMessageSchedule({}, scheduledAt, currentMessageList, effect?.id);\n        });\n        break;\n      default:\n        break;\n    }\n  });\n\n  const scheduledDefaultDate = new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  let sendButtonAriaLabel = 'SendMessage';\n  switch (mainButtonState) {\n    case MainButtonState.Forward:\n      sendButtonAriaLabel = 'Forward';\n      break;\n    case MainButtonState.Edit:\n      sendButtonAriaLabel = 'Save edited message';\n      break;\n    case MainButtonState.Record:\n      sendButtonAriaLabel = !canAttachMedia\n        ? 'Conversation.DefaultRestrictedMedia'\n        : 'AccDescrVoiceMessage';\n  }\n\n  const fullClassName = buildClassName(\n    'Composer',\n    !isSelectModeActive && 'shown',\n    isHoverDisabled && 'hover-disabled',\n    isMounted && 'mounted',\n    className,\n  );\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if (reaction.type === 'emoji') {\n      text = reaction.emoticon;\n    }\n\n    if (reaction.type === 'custom') {\n      const sticker = getGlobal().customEmojis.byId[reaction.documentId];\n      if (!sticker) {\n        return;\n      }\n\n      if (!sticker.isFree && !isCurrentUserPremium && !isChatWithSelf) {\n        showCustomEmojiPremiumNotification();\n        return;\n      }\n      const customEmojiMessage = parseHtmlAsFormattedText(buildCustomEmojiHtml(sticker));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    handleActionWithPaymentConfirmation(sendMessage, { text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleToggleEffectReaction = useLastCallback((reaction: ApiReaction) => {\n    setReactionEffect({ chatId, threadId, reaction });\n\n    closeReactionPicker();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openStoryReactionPicker({\n      peerId: chatId,\n      storyId: storyId!,\n      position,\n      sendAsMessage: true,\n    });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentStoryReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId: chatId,\n      storyId: storyId!,\n      containerId: getStoryKey(chatId, storyId!),\n      reaction,\n    });\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    if (canAnimate) {\n      renderer?.nextState();\n    }\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({}, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    handleActionWithPaymentConfirmation(sendSilent);\n  });\n\n  const handleSendWhenOnline = useLastCallback(() => {\n    handleActionWithPaymentConfirmation(\n      handleMessageSchedule, {}, SCHEDULED_WHEN_ONLINE, currentMessageList!, effect?.id,\n    );\n  });\n\n  const handleSendScheduledAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      requestCalendar((scheduledAt) => {\n        handleActionWithPaymentConfirmation(handleMessageSchedule,\n          { sendCompressed, sendGrouped, isInvertedMedia },\n          scheduledAt,\n          currentMessageList!);\n      });\n    },\n  );\n\n  const handleSendSilentAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      handleActionWithPaymentConfirmation(sendSilent, { sendCompressed, sendGrouped, isInvertedMedia });\n    },\n  );\n\n  const handleRemoveEffect = useLastCallback(() => { saveEffectInDraft({ chatId, threadId, effectId: undefined }); });\n\n  const handleStopEffect = useLastCallback(() => { hideEffectInComposer({ }); });\n\n  const onSend = useMemo(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Edit:\n        return handleEditComplete;\n      case MainButtonState.Schedule:\n        return handleSendScheduled;\n      default:\n        return handleSendWithConfirmation;\n    }\n  }, [mainButtonState, handleEditComplete, handleSendWithConfirmation]);\n\n  const withBotCommands = isChatWithBot && botMenuButton?.type === 'commands' && !editingMessage\n    && botCommands !== false && !activeVoiceRecording;\n\n  const effectEmoji = areEffectsSupported && effect?.emoticon;\n\n  const shouldRenderPaidBadge = Boolean(paidMessagesStars && mainButtonState === MainButtonState.Send);\n\n  return (\n    <div className={fullClassName}>\n      {isInMessageList && canAttachMedia && isReady && (\n        <DropArea\n          isOpen={dropAreaState !== DropAreaState.None}\n          withQuick={dropAreaState === DropAreaState.QuickFile || prevDropAreaState === DropAreaState.QuickFile}\n          onHide={onDropHide!}\n          onFileSelect={handleFileSelect}\n          editingMessage={editingMessage}\n        />\n      )}\n      {shouldRenderReactionSelector && !isNeedPremium && (\n        <ReactionSelector\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleReaction}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleReactionPickerOpen}\n          className={reactionSelectorTransitonClassNames}\n        />\n      )}\n      <AttachmentModal\n        richInputCtx={richInputCtx}\n        chatId={chatId}\n        threadId={threadId}\n        canShowCustomSendMenu={canShowCustomSendMenu}\n        attachments={attachments}\n        getHtml={getHtml}\n        isReady={isReady}\n        shouldSuggestCompression={shouldSuggestCompression}\n        shouldForceCompression={shouldForceCompression}\n        shouldForceAsFile={shouldForceAsFile}\n        isForCurrentMessageList={isForCurrentMessageList}\n        isForMessage={isInMessageList}\n        shouldSchedule={!paidMessagesStars && isInScheduledList}\n        canSchedule={!paidMessagesStars}\n        forceDarkTheme={isInStoryViewer}\n        onSendSilent={handleSendSilentAttachments}\n        onSend={handleSendAttachmentsFromModal}\n        onSendScheduled={handleSendScheduledAttachments}\n        onFileAppend={handleAppendFiles}\n        onClear={handleClearAttachments}\n        onAttachmentsUpdate={handleSetAttachments}\n        onCustomEmojiSelect={handleCustomEmojiSelectAttachmentModal}\n        onRemoveSymbol={removeSymbolAttachmentModal}\n        onEmojiSelect={insertTextAndUpdateCursorAttachmentModal}\n        editingMessage={editingMessage}\n        onSendWhenOnline={handleSendWhenOnline}\n        canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n        paidMessagesStars={paidMessagesStars}\n      />\n      <PollModal\n        isOpen={pollModal.isOpen}\n        isQuiz={pollModal.isQuiz}\n        shouldBeAnonymous={isChannel}\n        onClear={closePollModal}\n        onSend={handlePollSend}\n      />\n      <SendAsMenu\n        isOpen={isSendAsMenuOpen}\n        onClose={closeSendAsMenu}\n        chatId={chatId}\n        selectedSendAsId={sendAsId}\n        sendAsPeerIds={sendAsPeerIds}\n        isCurrentUserPremium={isCurrentUserPremium}\n      />\n      <MentionTooltip\n        isOpen={isMentionTooltipOpen && !isChatCommandTooltipOpen && !isInlineBotTooltipOpen}\n        filteredUsers={mentionFilteredUsers}\n        onInsertUserName={insertMention}\n        onClose={closeMentionTooltip}\n      />\n      <ChatCommandTooltip\n        isOpen={isChatCommandTooltipOpen}\n        chatId={chatId}\n        withUsername={Boolean(chatBotCommands)}\n        botCommands={botTooltipCommands}\n        quickReplies={quickReplyCommands}\n        getHtml={getHtml}\n        self={currentUser!}\n        quickReplyMessages={quickReplyMessages}\n        onClick={handleBotCommandSelect}\n        onClose={closeChatCommandTooltip}\n      />\n      <div className={\n        buildClassName('composer-wrapper', isInStoryViewer && 'with-story-tweaks', isNeedPremium && 'is-need-premium')\n      }\n      >\n        {!isNeedPremium && (\n          <svg className=\"svg-appendix\" width=\"9\" height=\"20\">\n            <defs>\n              <filter\n                x=\"-50%\"\n                y=\"-14.7%\"\n                width=\"200%\"\n                height=\"141.2%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"composerAppendix\"\n              >\n                <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n                <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n                <feColorMatrix\n                  values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n                  in=\"shadowBlurOuter1\"\n                />\n              </filter>\n            </defs>\n            <g fill=\"none\" fill-rule=\"evenodd\">\n              <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#000\" filter=\"url(#composerAppendix)\" />\n              <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#FFF\" className=\"corner\" />\n            </g>\n          </svg>\n        )}\n        {isInMessageList && (\n          <>\n            <InlineBotTooltip\n              isOpen={isInlineBotTooltipOpen}\n              botId={inlineBotId}\n              isGallery={isInlineBotTooltipGallery}\n              inlineBotResults={inlineBotResults}\n              switchPm={inlineBotSwitchPm}\n              switchWebview={inlineBotSwitchWebview}\n              loadMore={loadMoreForInlineBot}\n              isSavedMessages={isChatWithSelf}\n              canSendGifs={canSendGifs}\n              isCurrentUserPremium={isCurrentUserPremium}\n              onSelectResult={handleInlineBotSelect}\n              onClose={closeInlineBotTooltip}\n            />\n            <ComposerEmbeddedMessage\n              onClear={handleEmbeddedClear}\n              shouldForceShowEditing={Boolean(shouldForceShowEditing && editingMessage)}\n              chatId={chatId}\n              threadId={threadId}\n              messageListType={messageListType}\n            />\n            <WebPagePreview\n              chatId={chatId}\n              threadId={threadId}\n              getHtml={getHtml}\n              isDisabled={!canAttachEmbedLinks || hasAttachments}\n              isEditing={Boolean(editingMessage)}\n            />\n          </>\n        )}\n        <div className={buildClassName('message-input-wrapper', getPeerColorClass(currentUser))}>\n          {isInMessageList && (\n            <>\n              {withBotMenuButton && (\n                <BotMenuButton\n                  isOpen={isBotMenuButtonOpen}\n                  text={botMenuButton.text}\n                  isDisabled={Boolean(activeVoiceRecording)}\n                  onClick={handleClickBotMenu}\n                />\n              )}\n              {withBotCommands && (\n                <ResponsiveHoverButton\n                  className={buildClassName(\n                    'bot-commands', 'composer-action-button',\n                  )}\n                  round\n                  disabled={botCommands === undefined}\n                  color=\"translucent\"\n                  onActivate={handleActivateBotCommandMenu}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <Icon name=\"bot-commands-filled\" />\n                </ResponsiveHoverButton>\n              )}\n              {canShowSendAs && (sendAsUser || sendAsChat) && (\n                <Button\n                  round\n                  color=\"translucent\"\n                  onClick={isSendAsMenuOpen ? closeSendAsMenu : handleSendAsMenuOpen}\n                  ariaLabel={oldLang('SendMessageAsTitle')}\n                  className={buildClassName(\n                    'send-as-button',\n                    'composer-action-button',\n                    shouldAnimateSendAsButtonRef.current && 'appear-animation',\n                  )}\n                >\n                  <Avatar\n                    peer={sendAsUser || sendAsChat}\n                    size=\"tiny\"\n                  />\n                </Button>\n              )}\n            </>\n          )}\n          {((!isComposerBlocked || canSendGifs || canSendStickers) && !isNeedPremium && !isAccountFrozen) && (\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              canSendStickers={canSendStickers}\n              canSendGifs={canSendGifs}\n              isMessageComposer={isInMessageList}\n              onGifSelect={handleGifSelect}\n              onStickerSelect={handleStickerSelect}\n              onCustomEmojiSelect={handleCustomEmojiSelect}\n              onRemoveSymbol={removeSymbol}\n              onEmojiSelect={insertTextAndUpdateCursor}\n              closeBotCommandMenu={closeBotCommandMenu}\n              closeSendAsMenu={closeSendAsMenu}\n              isSymbolMenuForced={isSymbolMenuForced}\n              canSendPlainText={!isComposerBlocked}\n              inputCssSelector={editableInputCssSelector}\n              idPrefix={type}\n              forceDarkTheme={isInStoryViewer}\n            />\n          )}\n          <MessageInput\n            richInputCtx={richInputCtx}\n            id={inputId}\n            editableInputId={editableInputId}\n            customEmojiPrefix={type}\n            isStoryInput={isInStoryViewer}\n            chatId={chatId}\n            canSendPlainText={!isComposerBlocked}\n            threadId={threadId}\n            isReady={isReady}\n            isActive={!hasAttachments}\n            placeholder={placeholder}\n            timedPlaceholderDate={timedPlaceholderDate}\n            timedPlaceholderLangKey={timedPlaceholderLangKey}\n            forcedPlaceholder={inlineBotHelp}\n            canAutoFocus={isReady && isForCurrentMessageList && !hasAttachments && isInMessageList}\n            noFocusInterception={hasAttachments}\n            shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n            shouldSuppressTextFormatter={isEmojiTooltipOpen || isMentionTooltipOpen || isInlineBotTooltipOpen}\n            onSend={onSend}\n            onSuppressedFocus={closeSymbolMenu}\n            isNeedPremium={isNeedPremium}\n            messageListType={messageListType}\n          />\n          {isInMessageList && (\n            <>\n              {isInlineBotLoading && Boolean(inlineBotId) && (\n                <Spinner color=\"gray\" />\n              )}\n              <Transition\n                className=\"composer-action-buttons-container\"\n                slideClassName=\"composer-action-buttons\"\n                activeKey={Number(hasText)}\n                direction=\"inverse\"\n                name=\"slideFadeAndroid\"\n              >\n                {!hasText && (\n                  <>\n                    {isChannel && (\n                      <Transition className=\"composer-action-button\" name=\"reveal\" activeKey={Number(isSilentPosting)}>\n                        <Button\n                          round\n                          faded\n                          className=\"composer-action-button\"\n                          color=\"translucent\"\n                          onClick={handleToggleSilentPosting}\n                          ariaLabel={lang(\n                            isSilentPosting ? 'AriaComposerSilentPostingDisable' : 'AriaComposerSilentPostingEnable',\n                          )}\n                        >\n                          <Icon name={isSilentPosting ? 'mute' : 'unmute'} />\n                        </Button>\n                      </Transition>\n                    )}\n                    {withScheduledButton && (\n                      <Button\n                        round\n                        faded\n                        className=\"composer-action-button scheduled-button\"\n                        color=\"translucent\"\n                        onClick={handleAllScheduledClick}\n                        ariaLabel={lang('AriaComposerOpenScheduled')}\n                      >\n                        <Icon name=\"schedule\" />\n                      </Button>\n                    )}\n                    {shouldShowGiftButton && (\n                      <Button\n                        round\n                        faded\n                        className=\"composer-action-button\"\n                        color=\"translucent\"\n                        onClick={handleGiftClick}\n                      >\n                        <Icon name=\"gift\" />\n                      </Button>\n                    )}\n                    {Boolean(botKeyboardMessageId) && !activeVoiceRecording && !editingMessage && (\n                      <ResponsiveHoverButton\n                        className={buildClassName('composer-action-button', isBotKeyboardOpen && 'activated')}\n                        round\n                        color=\"translucent\"\n                        onActivate={openBotKeyboard}\n                        ariaLabel={lang('AriaComposerBotKeyboard')}\n                      >\n                        <Icon name=\"bot-command\" />\n                      </ResponsiveHoverButton>\n                    )}\n                  </>\n                )}\n              </Transition>\n            </>\n          )}\n          {activeVoiceRecording && Boolean(currentRecordTime) && (\n            <span className=\"recording-state\">\n              {formatVoiceRecordDuration(currentRecordTime - startRecordTimeRef.current!)}\n            </span>\n          )}\n          {!isNeedPremium && (\n            <AttachMenu\n              chatId={chatId}\n              threadId={threadId}\n              editingMessage={editingMessage}\n              canEditMedia={canMediaBeReplaced}\n              isButtonVisible={!activeVoiceRecording}\n              canAttachMedia={canAttachMedia}\n              canAttachPolls={canAttachPolls}\n              canSendPhotos={canSendPhotos}\n              canSendVideos={canSendVideos}\n              canSendDocuments={canSendDocuments}\n              canSendAudios={canSendAudios}\n              onFileSelect={handleFileSelect}\n              onPollCreate={openPollModal}\n              isScheduled={isInScheduledList}\n              attachBots={isInMessageList ? attachBots : undefined}\n              peerType={attachMenuPeerType}\n              shouldCollectDebugLogs={shouldCollectDebugLogs}\n              theme={theme}\n              onMenuOpen={onAttachMenuOpen}\n              onMenuClose={onAttachMenuClose}\n              messageListType={messageListType}\n              paidMessagesStars={paidMessagesStars}\n            />\n          )}\n          {isInMessageList && Boolean(botKeyboardMessageId) && (\n            <BotKeyboardMenu\n              messageId={botKeyboardMessageId}\n              isOpen={isBotKeyboardOpen}\n              onClose={closeBotKeyboard}\n            />\n          )}\n          {isInMessageList && botCommands && (\n            <BotCommandMenu\n              isOpen={isBotCommandMenuOpen}\n              botCommands={botCommands}\n              onClose={closeBotCommandMenu}\n            />\n          )}\n          <CustomEmojiTooltip\n            key={`custom-emoji-tooltip-${editableInputId}`}\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            onCustomEmojiSelect={insertCustomEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <StickerTooltip\n            key={`sticker-tooltip-${editableInputId}`}\n            chatId={chatId}\n            threadId={threadId}\n            isOpen={isStickerTooltipOpen}\n            onStickerSelect={handleStickerSelect}\n            onClose={closeStickerTooltip}\n          />\n          <EmojiTooltip\n            key={`emoji-tooltip-${editableInputId}`}\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n        </div>\n      </div>\n      {canSendOneTimeMedia && activeVoiceRecording && (\n        <Button\n          className={buildClassName('view-once', isViewOnceEnabled && 'active')}\n          round\n          color=\"secondary\"\n          ariaLabel={oldLang('Chat.PlayOnceVoiceMessageTooltip')}\n          onClick={toogleViewOnceEnabled}\n        >\n          <Icon name=\"view-once\" />\n          <Icon name=\"one-filled\" />\n        </Button>\n      )}\n      {activeVoiceRecording && (\n        <Button\n          round\n          color=\"danger\"\n          className=\"cancel\"\n          onClick={stopRecordingVoice}\n          ariaLabel=\"Cancel voice recording\"\n        >\n          <Icon name=\"delete\" />\n        </Button>\n      )}\n      {isInStoryViewer && !activeVoiceRecording && (\n        <Button\n          round\n          className=\"story-reaction-button\"\n          color=\"secondary\"\n          onClick={handleLikeStory}\n          onContextMenu={handleStoryPickerContextMenu}\n          onMouseDown={handleBeforeStoryPickerContextMenu}\n          ariaLabel={oldLang('AccDescrLike')}\n          ref={storyReactionRef}\n        >\n          {sentStoryReaction && (\n            <ReactionAnimatedEmoji\n              key={getReactionKey(sentStoryReaction)}\n              containerId={getStoryKey(chatId, storyId!)}\n              reaction={sentStoryReaction}\n              withEffectOnly={isSentStoryReactionHeart}\n            />\n          )}\n          {(!sentStoryReaction || isSentStoryReactionHeart) && (\n            <Icon name=\"heart\" className={buildClassName(isSentStoryReactionHeart && 'story-reaction-heart')} />\n          )}\n        </Button>\n      )}\n      <Button\n        ref={mainButtonRef}\n        round\n        color=\"secondary\"\n        className={buildClassName(\n          mainButtonState,\n          'main-button',\n          !isReady && 'not-ready',\n          activeVoiceRecording && 'recording',\n        )}\n        disabled={areVoiceMessagesNotAllowed}\n        allowDisabledClick\n        noFastClick\n        ariaLabel={oldLang(sendButtonAriaLabel)}\n        onClick={mainButtonHandler}\n        onContextMenu={\n          mainButtonState === MainButtonState.Send && canShowCustomSendMenu ? handleContextMenu : undefined\n        }\n      >\n        <Icon name=\"send\" />\n        <Icon name=\"microphone-alt\" />\n        {onForward && <Icon name=\"forward\" />}\n        {isInMessageList && <Icon name=\"schedule\" />}\n        {isInMessageList && <Icon name=\"check\" />}\n        <Button\n          className={buildClassName('paidStarsBadge', shouldRenderPaidBadge && 'visible')}\n          nonInteractive\n          size=\"tiny\"\n          color=\"stars\"\n          pill\n          fluid\n        >\n          <div className=\"paidStarsBadgeText\">\n            <Icon name=\"star\" className={buildClassName('star-amount-icon', className)} />\n            <AnimatedCounter\n              ref={counterRef}\n              text={lang.number(starsForAllMessages)}\n            />\n          </div>\n        </Button>\n      </Button>\n      {effectEmoji && (\n        <span className=\"effect-icon\" onClick={handleRemoveEffect}>\n          {renderText(effectEmoji)}\n        </span>\n      )}\n      {effect && canPlayEffect && (\n        <MessageEffect\n          shouldPlay={shouldPlayEffect}\n          effect={effect}\n          onStop={handleStopEffect}\n        />\n      )}\n      {canShowCustomSendMenu && (\n        <CustomSendMenu\n          isOpen={isCustomSendMenuOpen}\n          canSchedule={!paidMessagesStars && isInMessageList && !isViewOnceEnabled}\n          canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n          onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n          onSendSchedule={!isInScheduledList ? handleSendScheduled : undefined}\n          onSendWhenOnline={handleSendWhenOnline}\n          onRemoveEffect={handleRemoveEffect}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          isSavedMessages={isChatWithSelf}\n          chatId={chatId}\n          withEffects={areEffectsSupported}\n          hasCurrentEffect={Boolean(effect)}\n          effectReactions={effectReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleEffectReaction}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        />\n      )}\n      {calendar}\n      <PaymentMessageConfirmDialog\n        isOpen={isPaymentMessageConfirmDialogOpen}\n        onClose={closeConfirmModalPayForMessage}\n        userName={chat ? getPeerTitle(lang, chat) : undefined}\n        messagePriceInStars={paidMessagesStars || 0}\n        messagesCount={messagesCount}\n        shouldAutoApprove={shouldPaidMessageAutoApprove}\n        setAutoApprove={setShouldPaidMessageAutoApprove}\n        confirmHandler={paymentMessageConfirmDialogHandler}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, storyId, messageListType, isMobile, type,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const chatBot = !isSystemBot(chatId) ? selectBot(global, chatId) : undefined;\n    const isChatWithBot = Boolean(chatBot);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isChatWithUser = isUserId(chatId);\n    const userFullInfo = isChatWithUser ? selectUserFullInfo(global, chatId) : undefined;\n    const paidMessagesStars = selectPeerPaidMessagesStars(global, chatId);\n\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const messageWithActualBotKeyboard = (isChatWithBot || !isChatWithUser)\n      && selectNewestMessageWithBotKeyboardButtons(global, chatId, threadId);\n    const {\n      shouldSuggestStickers, shouldSuggestCustomEmoji, shouldUpdateStickerSetOrder, shouldPaidMessageAutoApprove,\n    } = global.settings.byKey;\n    const { language, shouldCollectDebugLogs } = selectSharedSettings(global);\n    const {\n      forwardMessages: { messageIds: forwardMessageIds },\n    } = selectTabState(global);\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n    const botKeyboardMessageId = messageWithActualBotKeyboard ? messageWithActualBotKeyboard.id : undefined;\n    const keyboardMessage = botKeyboardMessageId ? selectChatMessage(global, chatId, botKeyboardMessageId) : undefined;\n    const { currentUserId } = global;\n    const currentUser = selectUser(global, currentUserId!)!;\n    const defaultSendAsId = chatFullInfo ? chatFullInfo?.sendAsId || currentUserId : undefined;\n    const sendAsId = chat?.sendAsPeerIds && defaultSendAsId && (\n      chat.sendAsPeerIds.some((peer) => peer.id === defaultSendAsId)\n        ? defaultSendAsId\n        : (chat?.adminRights?.anonymous ? chat?.id : undefined)\n    );\n    const sendAsUser = sendAsId ? selectUser(global, sendAsId) : undefined;\n    const sendAsChat = !sendAsUser && sendAsId ? selectChat(global, sendAsId) : undefined;\n    const requestedDraft = selectRequestedDraft(global, chatId);\n    const requestedDraftFiles = selectRequestedDraftFiles(global, chatId);\n\n    const tabState = selectTabState(global);\n    const isStoryViewerOpen = Boolean(tabState.storyViewer.storyId);\n\n    const currentMessageList = selectCurrentMessageList(global);\n    const isForCurrentMessageList = chatId === currentMessageList?.chatId\n      && threadId === currentMessageList?.threadId\n      && messageListType === currentMessageList?.type\n      && !isStoryViewerOpen;\n    const user = selectUser(global, chatId);\n    const canSendVoiceByPrivacy = (user && !userFullInfo?.noVoiceMessages) ?? true;\n    const slowMode = chatFullInfo?.slowMode;\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const editingDraft = messageListType === 'scheduled'\n      ? selectEditingScheduledDraft(global, chatId)\n      : selectEditingDraft(global, chatId, threadId);\n\n    const story = storyId && selectPeerStory(global, chatId, storyId);\n    const sentStoryReaction = story && 'sentReaction' in story ? story.sentReaction : undefined;\n    const draft = selectDraft(global, chatId, threadId);\n    const replyToMessage = draft?.replyInfo\n      ? selectChatMessage(global, chatId, draft.replyInfo.replyToMsgId)\n      : undefined;\n    const replyToTopic = chat?.isForum && chat.isForumAsMessages && threadId === MAIN_THREAD_ID && replyToMessage\n      ? selectTopicFromMessage(global, replyToMessage)\n      : undefined;\n    const isInScheduledList = messageListType === 'scheduled';\n\n    const canSendQuickReplies = isChatWithUser && !isChatWithBot && !isInScheduledList && !isChatWithSelf;\n\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    const isSilentPosting = chat && getChatNotifySettings(\n      chat,\n      selectNotifyDefaults(global),\n      selectNotifyException(global, chatId),\n    )?.isSilentPosting;\n\n    const areEffectsSupported = isChatWithUser && !isChatWithBot\n    && !isInScheduledList && !isChatWithSelf && type !== 'story' && chatId !== SERVICE_NOTIFICATIONS_USER_ID;\n    const canPlayEffect = selectPerformanceSettingsValue(global, 'stickerEffects');\n    const shouldPlayEffect = tabState.shouldPlayEffectInComposer;\n    const effectId = areEffectsSupported && draft?.effectId;\n    const effect = effectId ? global.availableEffectById[effectId] : undefined;\n    const effectReactions = global.reactions.effectReactions;\n\n    const maxMessageLength = global.config?.maxMessageLength || DEFAULT_MAX_MESSAGE_LENGTH;\n    const isForwarding = chatId === tabState.forwardMessages.toChatId;\n    const starsBalance = global.stars?.balance.amount || 0;\n    const isStarsBalanceModalOpen = Boolean(tabState.starsBalanceModal);\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n    const isAppConfigLoaded = global.isAppConfigLoaded;\n\n    return {\n      availableReactions: global.reactions.availableReactions,\n      topReactions: type === 'story' ? global.reactions.topReactions : undefined,\n      isOnActiveTab: !tabState.isBlurred,\n      editingMessage: selectEditingMessage(global, chatId, threadId, messageListType),\n      draft,\n      chat,\n      isChatWithBot,\n      isChatWithSelf,\n      isForCurrentMessageList,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, chatId),\n      isChannel: chat ? isChatChannel(chat) : undefined,\n      isRightColumnShown: selectIsRightColumnShown(global, isMobile),\n      isSelectModeActive: selectIsInSelectMode(global),\n      withScheduledButton: (\n        messageListType === 'thread'\n        && (userFullInfo || chatFullInfo)?.hasScheduledMessages\n      ),\n      isInScheduledList,\n      botKeyboardMessageId,\n      botKeyboardPlaceholder: keyboardMessage?.keyboardPlaceholder,\n      isForwarding,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      pollModal: tabState.pollModal,\n      stickersForEmoji: global.stickers.forEmoji.stickers,\n      customEmojiForEmoji: global.customEmojis.forEmoji.stickers,\n      chatFullInfo,\n      topInlineBotIds: global.topInlineBots?.userIds,\n      currentUserId,\n      currentUser,\n      contentToBeScheduled: tabState.contentToBeScheduled,\n      shouldSuggestStickers,\n      shouldSuggestCustomEmoji,\n      shouldUpdateStickerSetOrder,\n      recentEmojis: global.recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      inlineBots: tabState.inlineBots.byUsername,\n      isInlineBotLoading: tabState.inlineBots.isLoading,\n      botCommands: userFullInfo ? (userFullInfo.botInfo?.commands || false) : undefined,\n      botMenuButton: userFullInfo?.botInfo?.menuButton,\n      sendAsUser,\n      sendAsChat,\n      sendAsId,\n      editingDraft,\n      requestedDraft,\n      requestedDraftFiles,\n      attachBots: global.attachMenu.bots,\n      attachMenuPeerType: selectChatType(global, chatId),\n      theme: selectTheme(global),\n      fileSizeLimit: selectCurrentLimit(global, 'uploadMaxFileparts') * MAX_UPLOAD_FILEPART_SIZE,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      isCurrentUserPremium,\n      canSendVoiceByPrivacy,\n      attachmentSettings: global.attachmentSettings,\n      slowMode,\n      currentMessageList,\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      canSendOneTimeMedia: !isChatWithSelf && isChatWithUser && !isChatWithBot && !isInScheduledList,\n      shouldCollectDebugLogs,\n      sentStoryReaction,\n      stealthMode: global.stories.stealthMode,\n      replyToTopic,\n      quickReplyMessages: global.quickReplies.messagesById,\n      quickReplies: global.quickReplies.byId,\n      canSendQuickReplies,\n      noWebPage,\n      webPagePreview: selectTabState(global).webPagePreview,\n      isContactRequirePremium: userFullInfo?.isContactRequirePremium,\n      effect,\n      effectReactions,\n      areEffectsSupported,\n      canPlayEffect,\n      shouldPlayEffect,\n      maxMessageLength,\n      paidMessagesStars,\n      shouldPaidMessageAutoApprove,\n      isSilentPosting,\n      isPaymentMessageConfirmDialogOpen: tabState.isPaymentMessageConfirmDialogOpen,\n      starsBalance,\n      isStarsBalanceModalOpen,\n      shouldDisplayGiftsButton: userFullInfo?.shouldDisplayGiftsButton,\n      disallowedGifts: userFullInfo?.disallowedGifts,\n      isAccountFrozen,\n      isAppConfigLoaded,\n    };\n  },\n)(Composer));\n","import { useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiMessage } from '../../../../api/types';\n\nimport { canReplaceMessageMedia, getAttachmentMediaType } from '../../../../global/helpers';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport buildAttachment from '../helpers/buildAttachment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nexport default function useAttachmentModal({\n  attachments,\n  fileSizeLimit,\n  setAttachments,\n  chatId,\n  canSendAudios,\n  canSendVideos,\n  canSendPhotos,\n  canSendDocuments,\n  insertNextText,\n  editedMessage,\n}: {\n  attachments: ApiAttachment[];\n  fileSizeLimit: number;\n  setAttachments: (attachments: ApiAttachment[]) => void;\n  chatId: string;\n  canSendAudios?: boolean;\n  canSendVideos?: boolean;\n  canSendPhotos?: boolean;\n  canSendDocuments?: boolean;\n  insertNextText: VoidFunction;\n  editedMessage: ApiMessage | undefined;\n}) {\n  const lang = useOldLang();\n  const { openLimitReachedModal, showAllowedMessageTypesNotification, showNotification } = getActions();\n  const [shouldForceAsFile, setShouldForceAsFile] = useState<boolean>(false);\n  const [shouldForceCompression, setShouldForceCompression] = useState<boolean>(false);\n  const [shouldSuggestCompression, setShouldSuggestCompression] = useState<boolean | undefined>(undefined);\n\n  const handleClearAttachments = useLastCallback(() => {\n    setAttachments(MEMO_EMPTY_ARRAY);\n    insertNextText();\n  });\n\n  const handleSetAttachments = useLastCallback(\n    (newValue: ApiAttachment[] | ((current: ApiAttachment[]) => ApiAttachment[])) => {\n      const newAttachments = typeof newValue === 'function' ? newValue(attachments) : newValue;\n      if (!newAttachments.length) {\n        handleClearAttachments();\n        return;\n      }\n\n      if (newAttachments.some((attachment) => {\n        const type = getAttachmentMediaType(attachment);\n\n        return (type === 'audio' && !canSendAudios && !canSendDocuments)\n          || (type === 'video' && !canSendVideos && !canSendDocuments)\n          || (type === 'photo' && !canSendPhotos && !canSendDocuments)\n          || (type === 'file' && !canSendDocuments);\n      })) {\n        showAllowedMessageTypesNotification({ chatId });\n      } else if (newAttachments.some(({ size }) => size > fileSizeLimit)) {\n        openLimitReachedModal({\n          limit: 'uploadMaxFileparts',\n        });\n      } else {\n        setAttachments(newAttachments);\n        const shouldForce = newAttachments.some((attachment) => {\n          const type = getAttachmentMediaType(attachment);\n\n          return (type === 'audio' && !canSendAudios)\n            || (type === 'video' && !canSendVideos)\n            || (type === 'photo' && !canSendPhotos);\n        });\n\n        setShouldForceAsFile(Boolean(shouldForce && canSendDocuments));\n        setShouldForceCompression(!canSendDocuments);\n      }\n    },\n  );\n\n  const handleAppendFiles = useLastCallback(async (files: File[], isSpoiler?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => (\n        buildAttachment(file.name, file, { shouldSendAsSpoiler: isSpoiler || undefined })\n      )));\n      handleSetAttachments([...attachments, ...newAttachments]);\n    }\n  });\n\n  const handleFileSelect = useLastCallback(async (files: File[], suggestCompression?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => buildAttachment(file.name, file)));\n      handleSetAttachments(newAttachments);\n    }\n    setShouldSuggestCompression(suggestCompression);\n  });\n\n  return {\n    shouldSuggestCompression,\n    handleAppendFiles,\n    handleFileSelect,\n    handleClearAttachments,\n    handleSetAttachments,\n    shouldForceCompression,\n    shouldForceAsFile,\n  };\n}\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { IS_SAFARI, IS_VOICE_RECORDING_SUPPORTED } from '../../../../util/browser/windowEnvironment';\nimport captureEscKeyListener from '../../../../util/captureEscKeyListener';\nimport * as voiceRecording from '../../../../util/voiceRecording';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ntype ActiveVoiceRecording =\n  { stop: () => Promise<voiceRecording.Result>; pause: NoneToVoidFunction }\n  | undefined;\n\nconst useVoiceRecording = () => {\n  // eslint-disable-next-line no-null/no-null\n  const recordButtonRef = useRef<HTMLButtonElement>(null);\n  const [activeVoiceRecording, setActiveVoiceRecording] = useState<ActiveVoiceRecording>();\n  const startRecordTimeRef = useRef<number>();\n  const [currentRecordTime, setCurrentRecordTime] = useState<number | undefined>();\n  const [isViewOnceEnabled, setIsViewOnceEnabled] = useState(false);\n\n  useEffect(() => {\n    // Preloading worker fixes silent first record on iOS\n    if (IS_SAFARI && IS_VOICE_RECORDING_SUPPORTED) {\n      void voiceRecording.init();\n    }\n  }, []);\n\n  const startRecordingVoice = useLastCallback(async () => {\n    try {\n      const { stop, pause } = await voiceRecording.start((tickVolume: number) => {\n        if (recordButtonRef.current) {\n          if (startRecordTimeRef.current && Date.now() % 4 === 0) {\n            requestMutation(() => {\n              if (!recordButtonRef.current) return;\n              recordButtonRef.current.style.boxShadow = `0 0 0 ${(tickVolume || 0) * 50}px rgba(0,0,0,.15)`;\n            });\n          }\n          setCurrentRecordTime(Date.now());\n        }\n      });\n      startRecordTimeRef.current = Date.now();\n      setCurrentRecordTime(Date.now());\n\n      setActiveVoiceRecording({ stop, pause });\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  });\n\n  const pauseRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current!.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.pause();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  const stopRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    setActiveVoiceRecording(undefined);\n    startRecordTimeRef.current = undefined;\n    setCurrentRecordTime(undefined);\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.stop();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  useEffect(() => {\n    return activeVoiceRecording ? captureEscKeyListener(stopRecordingVoice) : undefined;\n  }, [activeVoiceRecording, stopRecordingVoice]);\n\n  const toogleViewOnceEnabled = useLastCallback(() => {\n    setIsViewOnceEnabled(!isViewOnceEnabled);\n  });\n\n  return {\n    startRecordingVoice,\n    pauseRecordingVoice,\n    stopRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  };\n};\n\nexport default useVoiceRecording;\n","import type { StateHookSetter } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiAttachment,\n  ApiFormattedText,\n  ApiMessage,\n} from '../../../../api/types';\nimport type { PasteCtx } from '../../../common/richinput/RichEditable';\nimport type { RichInputCtx } from '../../../common/richinput/useRichEditable';\n\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport {\n  canReplaceMessageMedia,\n  isUploadingFileSticker,\n} from '../../../../global/helpers';\nimport {\n  containsCustomEmoji,\n  stripCustomEmoji,\n} from '../../../../global/helpers/symbols';\nimport {\n  useRichEditablePasteHandler,\n} from '../../../common/richinput/useRichEditable';\nimport buildAttachment from '../helpers/buildAttachment';\nimport getFilesFromDataTransferItems from '../helpers/getFilesFromDataTransferItems';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nconst TYPE_HTML = 'text/html';\nconst DOCUMENT_TYPE_WORD = 'urn:schemas-microsoft-com:office:word';\nconst NAMESPACE_PREFIX_WORD = 'xmlns:w';\n\nconst useClipboardPaste = (\n  isActive: boolean,\n  richInputCtx: RichInputCtx,\n  setAttachments: StateHookSetter<ApiAttachment[]>,\n  setNextText: StateHookSetter<ApiFormattedText | undefined>,\n  editedMessage: ApiMessage | undefined,\n  shouldStripCustomEmoji?: boolean,\n  onCustomEmojiStripped?: VoidFunction,\n) => {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n\n  useRichEditablePasteHandler(\n    richInputCtx,\n    async (p: PasteCtx) => {\n      if (p.text && containsCustomEmoji(p.text) && shouldStripCustomEmoji) {\n        p.text = stripCustomEmoji(p.text);\n        onCustomEmojiStripped?.();\n      }\n\n      const items = p.items;\n      let files: File[] | undefined = [];\n\n      if (items.length > 0) {\n        files = await getFilesFromDataTransferItems(items);\n        if (editedMessage) {\n          files = files?.slice(0, 1);\n        }\n      }\n\n      if (!files?.length && !p.text.text) {\n        return;\n      }\n\n      let isWordDocument = false;\n      try {\n        const parser = new DOMParser();\n        const parsedDocument = parser.parseFromString(p.html, TYPE_HTML);\n        isWordDocument = parsedDocument.documentElement.getAttribute(NAMESPACE_PREFIX_WORD)\n          === DOCUMENT_TYPE_WORD;\n      } catch (err: any) {\n        // Ignore\n      }\n\n      const hasText = p.text.text;\n      let shouldSetAttachments = files?.length && !isWordDocument;\n\n      const newAttachments = files\n        ? await Promise.all(\n          files.map((file) => buildAttachment(file.name, file)),\n        )\n        : [];\n      const canReplace = (editedMessage\n          && newAttachments?.length\n          && canReplaceMessageMedia(editedMessage, newAttachments[0]))\n        || Boolean(hasText);\n      const isUploadingDocumentSticker = isUploadingFileSticker(\n        newAttachments[0],\n      );\n      const isInAlbum = editedMessage && editedMessage?.groupedId;\n\n      if (editedMessage && isUploadingDocumentSticker) {\n        showNotification({\n          message: lang(\n            isInAlbum\n              ? 'lng_edit_media_album_error'\n              : 'lng_edit_media_invalid_file',\n          ),\n        });\n        return;\n      }\n\n      if (isInAlbum) {\n        shouldSetAttachments = canReplace;\n        if (!shouldSetAttachments) {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n          return;\n        }\n      }\n\n      if (shouldSetAttachments) {\n        requestNextMutation(() => {\n          setAttachments(\n            editedMessage\n              ? newAttachments\n              : (attachments) => attachments.concat(newAttachments),\n          );\n        });\n      }\n    },\n    isActive,\n  );\n};\n\nexport default useClipboardPaste;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport {\n  getChatTitle,\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserBot,\n  isUserId,\n} from '../../global/helpers';\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  isSavedDialog?: boolean;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isSavedDialog,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteSavedHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockUser,\n  } = getActions();\n\n  const lang = useOldLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteForAll = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteAndStop = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockUser({ userId: chat.id });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteChat = useCallback(() => {\n    if (isSavedDialog) {\n      deleteSavedHistory({ chatId: chat.id });\n    } else if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  }, [\n    isPrivateChat,\n    isBasicGroup,\n    isChannel,\n    isSuperGroup,\n    currentUserId,\n    chat.isCreator,\n    chat.id,\n    isSavedDialog,\n    onClose,\n  ]);\n\n  const handleLeaveChat = useCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else {\n      handleDeleteChat();\n    }\n  }, [chat.id, handleDeleteChat, isChannel, isSuperGroup, leaveChannel, onClose]);\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          peer={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isSavedDialog) {\n      return isChatWithSelf ? 'ClearHistoryMyNotesTitle' : 'ClearHistoryTitleSingle2';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderContent() {\n    if (isSavedDialog) {\n      return (\n        <p>\n          {renderText(\n            isChatWithSelf ? lang('ClearHistoryMyNotesMessage') : lang('ClearHistoryMessageSingle', chatTitle),\n            ['simple_markdown', 'emoji'],\n          )}\n        </p>\n      );\n    }\n    if (isChannel && chat.isCreator) {\n      return (\n        <p>\n          {renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown', 'emoji'])}\n        </p>\n      );\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown', 'emoji'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown', 'emoji'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isSavedDialog) {\n      return 'Delete';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderContent()}\n      <div className=\"dialog-buttons-column\">\n        {isBot && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n            {lang('DeleteAndStop')}\n          </Button>\n        )}\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteForAll}>\n            {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n          </Button>\n        )}\n        {!isPrivateChat && chat.isCreator && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n            {lang('DeleteForAll')}\n          </Button>\n        )}\n        <Button\n          color=\"danger\"\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={(isPrivateChat || isSavedDialog) ? handleDeleteChat : handleLeaveChat}\n        >\n          {lang(renderActionText())}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat, isSavedDialog }): StateProps => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot && !isSavedDialog);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n    };\n  },\n)(DeleteChatModal));\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiDocument, ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getDocumentMediaHash,\n  getMediaFormat,\n  getMediaThumbUri,\n  getMediaTransferState,\n  isDocumentVideo,\n} from '../../global/helpers';\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport File from './File';\n\ntype OwnProps = {\n  document: ApiDocument;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading?: boolean;\n  shouldWarnAboutSvg?: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n} & ({\n  message: ApiMessage;\n  onDateClick: (arg: ApiMessage) => void;\n} | {\n  message?: ApiMessage;\n  onDateClick?: never;\n});\n\nconst BYTES_PER_MB = 1024 * 1024;\nconst SVG_EXTENSIONS = new Set(['svg', 'svgz']);\n\nconst Document = ({\n  document,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  shouldWarnAboutSvg,\n  isDownloading,\n  message,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n}: OwnProps) => {\n  const { cancelMediaDownload, downloadMedia, setSharedSettingOption } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const [isSvgDialogOpen, openSvgDialog, closeSvgDialog] = useFlag();\n  const [shouldNotWarnAboutSvg, setShouldNotWarnAboutSvg] = useState(false);\n\n  const { fileName, size, timestamp } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getDocumentMediaHash(document, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress(\n    documentHash, !shouldDownload, getMediaFormat(document, 'download'), undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    shouldDownload && !isLoaded,\n    uploadProgress !== undefined,\n  );\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMediaThumbUri(document) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getDocumentMediaHash(document, 'pictogram'), !isIntersecting);\n\n  const withMediaViewer = onMediaClick && document.innerMediaType;\n\n  const handleDownload = useLastCallback(() => {\n    downloadMedia({ media: document, originMessage: message });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: document });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick!();\n      return;\n    }\n\n    if (SVG_EXTENSIONS.has(extension) && shouldWarnAboutSvg) {\n      openSvgDialog();\n      return;\n    }\n\n    handleDownload();\n  });\n\n  const handleSvgConfirm = useLastCallback(() => {\n    setSharedSettingOption({ shouldWarnAboutSvg: !shouldNotWarnAboutSvg });\n    closeSvgDialog();\n    handleDownload();\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick?.(message);\n  });\n\n  return (\n    <>\n      <File\n        ref={ref}\n        name={fileName}\n        extension={extension}\n        size={size}\n        timestamp={withDate ? datetime || timestamp : undefined}\n        thumbnailDataUri={thumbDataUri}\n        previewData={localBlobUrl || previewData}\n        smaller={smaller}\n        isTransferring={isTransferring}\n        isUploading={isUploading}\n        transferProgress={transferProgress}\n        className={className}\n        sender={sender}\n        isSelectable={isSelectable}\n        isSelected={isSelected}\n        actionIcon={withMediaViewer ? (isDocumentVideo(document) ? 'play' : 'eye') : 'download'}\n        onClick={handleClick}\n        onDateClick={onDateClick ? handleDateClick : undefined}\n      />\n      <ConfirmDialog\n        isOpen={isSvgDialogOpen}\n        onClose={closeSvgDialog}\n        confirmHandler={handleSvgConfirm}\n      >\n        {lang('lng_launch_svg_warning')}\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldNotWarnAboutSvg}\n          label={lang('lng_launch_exe_dont_ask')}\n          onCheck={setShouldNotWarnAboutSvg}\n        />\n      </ConfirmDialog>\n    </>\n  );\n};\n\nexport default memo(Document);\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useOldLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {renderText(content)}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport Icon from './icons/Icon';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: React.RefObject<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: IconName;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  let elementRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [withThumb] = useState(!previewData);\n  const noThumb = Boolean(previewData);\n  const thumbRef = useCanvasBlur(thumbnailDataUri, noThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED);\n  const thumbClassNames = useMediaTransitionDeprecated(!noThumb);\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n  const subtitle = useMemo(() => {\n    if (!isTransferring || !transferProgress) return sizeString;\n    return `${getFileSizeString(size * transferProgress)} / ${sizeString}`;\n  }, [isTransferring, size, sizeString, transferProgress]);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control no-selection\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={previewData}\n              className=\"full-media\"\n              width={width}\n              height={height}\n              draggable={false}\n              alt=\"\"\n            />\n            {withThumb && (\n              <canvas\n                ref={thumbRef}\n                className={buildClassName('thumbnail', thumbClassNames)}\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <Icon\n            name={actionIcon || 'download'}\n            className={buildClassName('action-icon', shouldSpinnerRender && 'hidden')}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\" title={name}>{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {subtitle}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && Boolean(timestamp) && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && Boolean(timestamp) && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiThreadInfo, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin, type StoryViewerOrigin, type ThreadId } from '../../types';\n\nimport {\n  getChatTypeString,\n  getGroupStatus,\n  getMainUsername,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessages,\n  selectChatOnlineCount,\n  selectThreadInfo,\n  selectThreadMessagesCount,\n  selectTopic,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TopicIcon from './TopicIcon';\nimport TypingStatus from './TypingStatus';\n\nconst TOPIC_ICON_SIZE = 2.5 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  className?: string;\n  statusIcon?: IconName;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  noEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  noRtl?: boolean;\n  noAvatar?: boolean;\n  noStatusOrTyping?: boolean;\n  withStory?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  isSavedDialog?: boolean;\n  onClick?: VoidFunction;\n  onEmojiStatusClick?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    chat?: ApiChat;\n    threadInfo?: ApiThreadInfo;\n    topic?: ApiTopic;\n    onlineCount?: number;\n    areMessagesLoaded: boolean;\n    messagesCount?: number;\n    self?: ApiUser;\n  };\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  className,\n  statusIcon,\n  avatarSize = 'medium',\n  noAvatar,\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  threadInfo,\n  noRtl,\n  chat,\n  onlineCount,\n  areMessagesLoaded,\n  topic,\n  messagesCount,\n  noStatusOrTyping,\n  withStory,\n  storyViewerOrigin,\n  noEmojiStatus,\n  emojiStatusSize,\n  isSavedDialog,\n  self,\n  onClick,\n  onEmojiStatusClick,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const isTopic = Boolean(chat?.isForum && threadInfo && topic);\n  const { id: chatId, isMin, isRestricted } = chat || {};\n\n  useEffect(() => {\n    if (chatId && !isMin) {\n      if (withFullInfo) loadFullChat({ chatId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: chatId, isPreload: true });\n    }\n  }, [chatId, isMin, withFullInfo, isSuperGroup, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (chat && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: chat.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => chat && withUsername && getMainUsername(chat), [chat, withUsername]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isTopic) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <Transition\n            name=\"fade\"\n            shouldRestoreHeight\n            activeKey={messagesCount !== undefined ? 1 : 2}\n            className=\"message-count-transition\"\n          >\n            {messagesCount !== undefined && lang('messages', messagesCount, 'i')}\n          </Transition>\n        </span>\n      );\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{lang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const groupStatus = getGroupStatus(lang, chat);\n    const onlineStatus = onlineCount ? `, ${lang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {mainUsername && <span className=\"handle withStatus\">{mainUsername}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={\n        buildClassName('ChatInfo', className)\n      }\n      dir={!noRtl && lang.isRtl ? 'rtl' : undefined}\n      onClick={onClick}\n    >\n      {!noAvatar && !isTopic && (\n        <>\n          {isSavedDialog && self && (\n            <Avatar\n              key=\"saved-messages\"\n              size={avatarSize}\n              peer={self}\n              isSavedMessages\n              className=\"saved-dialog-avatar\"\n            />\n          )}\n          <Avatar\n            key={chat.id}\n            className={buildClassName(isSavedDialog && 'overlay-avatar')}\n            size={avatarSize}\n            peer={chat}\n            withStory={withStory}\n            storyViewerOrigin={storyViewerOrigin}\n            storyViewerMode=\"single-peer\"\n            isSavedDialog={isSavedDialog}\n            onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n          />\n        </>\n      )}\n      {isTopic && (\n        <TopicIcon\n          topic={topic!}\n          className=\"topic-header-icon\"\n          size={TOPIC_ICON_SIZE}\n        />\n      )}\n      <div className=\"info\">\n        {topic\n          ? <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          : (\n            <FullNameTitle\n              peer={chat}\n              emojiStatusSize={emojiStatusSize}\n              withEmojiStatus={!noEmojiStatus}\n              isSavedDialog={isSavedDialog}\n              onEmojiStatusClick={onEmojiStatusClick}\n            />\n          )}\n        {!noStatusOrTyping && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const threadInfo = threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n    const topic = threadId ? selectTopic(global, chatId, threadId) : undefined;\n    const messagesCount = topic && selectThreadMessagesCount(global, chatId, threadId!);\n    const self = selectUser(global, global.currentUserId!);\n\n    return {\n      chat,\n      threadInfo,\n      onlineCount,\n      topic,\n      areMessagesLoaded,\n      messagesCount,\n      self,\n    };\n  },\n)(GroupChatInfo));\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  className?: string;\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  draftDate?: number;\n};\n\nconst LastMessageMeta = ({\n  className, message, outgoingStatus, draftDate,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const shouldUseDraft = draftDate && draftDate > message.date;\n  return (\n    <div className={buildClassName('LastMessageMeta', className)}>\n      {outgoingStatus && !shouldUseDraft && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">\n        {formatPastTimeShort(lang, (shouldUseDraft ? draftDate : message.date) * 1000)}\n      </span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","// extracted by mini-css-extract-plugin\nexport default {\"primaryLink\":\"xNjJHI7j\",\"input\":\"Ag6k_p7b\",\"moreMenu\":\"p7t3macG\",\"copy\":\"obuPXobw\",\"title\":\"vCMpiQTJ\",\"share\":\"Sbagy_Tm\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport Icon from './icons/Icon';\n\nimport styles from './LinkField.module.scss';\n\ntype OwnProps = {\n  title?: string;\n  link: string;\n  isDisabled?: boolean;\n  className?: string;\n  withShare?: boolean;\n  onRevoke?: VoidFunction;\n};\n\nconst InviteLink: FC<OwnProps> = ({\n  title,\n  link,\n  isDisabled,\n  className,\n  withShare,\n  onRevoke,\n}) => {\n  const lang = useOldLang();\n  const { showNotification, openChatWithDraft } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const isOnlyCopy = !onRevoke;\n\n  const copyLink = useLastCallback(() => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: {\n        key: 'LinkCopied',\n      },\n    });\n  });\n\n  const handleCopyClick = useLastCallback(() => {\n    if (isDisabled) return;\n    copyLink();\n  });\n\n  const handleShare = useLastCallback(() => {\n    openChatWithDraft({ text: { text: link } });\n  });\n\n  const PrimaryLinkMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('AccDescrOpenMenu2')}\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile, lang]);\n\n  return (\n    <div className={className}>\n      <p className={styles.title}>\n        {lang(title || 'InviteLink.InviteLink')}\n      </p>\n      <div className={styles.primaryLink}>\n        <input\n          className={buildClassName('form-control', styles.input)}\n          value={link}\n          readOnly\n          onClick={handleCopyClick}\n        />\n        {isOnlyCopy ? (\n          <Button\n            color=\"translucent\"\n            className={styles.copy}\n            size=\"smaller\"\n            round\n            disabled={isDisabled}\n            onClick={handleCopyClick}\n          >\n            <Icon name=\"copy\" />\n          </Button>\n        ) : (\n          <DropdownMenu\n            className={styles.moreMenu}\n            trigger={PrimaryLinkMenuButton}\n            positionX=\"right\"\n          >\n            <MenuItem icon=\"copy\" onClick={handleCopyClick} disabled={isDisabled}>{lang('Copy')}</MenuItem>\n            {onRevoke && (\n              <MenuItem icon=\"delete\" onClick={onRevoke} destructive>{lang('RevokeButton')}</MenuItem>\n            )}\n          </DropdownMenu>\n        )}\n      </div>\n      {withShare && (\n        <Button\n          size=\"smaller\"\n          disabled={isDisabled}\n          onClick={handleShare}\n          className={styles.share}\n        >\n          {lang('FolderLinkScreen.LinkActionShare')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(InviteLink);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getMessageHtmlId,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\n\nimport MediaSpoiler from './MediaSpoiler';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media: FC<OwnProps> = ({\n  message,\n  idPrefix = 'shared-media',\n  isProtected,\n  observeIntersection,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const transitionClassNames = useMediaTransitionDeprecated(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n\n  const hasSpoiler = getMessageIsSpoiler(message);\n  const [isSpoilerShown, , hideSpoiler] = useFlag(hasSpoiler);\n\n  const handleClick = useLastCallback(() => {\n    hideSpoiler();\n    onClick!(message.id, message.chatId);\n  });\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${getMessageHtmlId(message.id)}`}\n      className=\"Media scroll-item\"\n      onClick={onClick ? handleClick : undefined}\n    >\n      <img\n        src={thumbDataUri}\n        className=\"media-miniature\"\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      <img\n        src={mediaBlobUrl}\n        className={buildClassName('full-media', 'media-miniature', transitionClassNames)}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {hasSpoiler && (\n        <MediaSpoiler\n          thumbDataUri={mediaBlobUrl || thumbDataUri}\n          isVisible={isSpoilerShown}\n          className=\"media-spoiler\"\n        />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\nimport Icon from './icons/Icon';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {status === 'failed' ? (\n          <div className=\"MessageOutgoingStatus--failed\">\n            <Icon name=\"message-failed\" />\n          </div>\n        ) : <Icon name={`message-${status}`} />}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description }) => {\n  const lang = useOldLang();\n  const { transitionClassNames } = useShowTransitionDeprecated(true);\n\n  return (\n    <div className={buildClassName('NothingFound', transitionClassNames, description && 'with-description')}>\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","// extracted by mini-css-extract-plugin\nexport default {\"checkBox\":\"eScpikxM\"};","import type { FC, StateHookSetter } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport { formatStarsAsText } from '../../util/localization/format';\n\nimport useLang from '../../hooks/useLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nimport styles from './PaymentMessageConfirmDialog.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n  userName?: string;\n  messagePriceInStars: number;\n  messagesCount: number;\n  shouldAutoApprove: boolean;\n  setAutoApprove: StateHookSetter<boolean>;\n  confirmHandler: NoneToVoidFunction;\n};\n\nconst PaymentMessageConfirmDialog: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  userName,\n  messagePriceInStars,\n  messagesCount,\n  shouldAutoApprove: shouldPaidMessageAutoApprove,\n  setAutoApprove: setShouldPaidMessageAutoApprove,\n  confirmHandler,\n}) => {\n  const lang = useLang();\n\n  const confirmPaymentMessage = lang('ConfirmationModalPaymentForMessage', {\n    user: userName,\n    amount: formatStarsAsText(lang, messagePriceInStars),\n    totalAmount: formatStarsAsText(lang, messagePriceInStars * messagesCount),\n    count: messagesCount,\n  }, {\n    withMarkdown: true,\n    withNodes: true,\n    pluralValue: messagesCount,\n  });\n\n  const confirmLabel = lang('PayForMessage', { count: messagesCount }, {\n    withNodes: true,\n    pluralValue: messagesCount,\n  });\n\n  return (\n    <ConfirmDialog\n      title={lang('TitleConfirmPayment')}\n      confirmLabel={confirmLabel}\n      isOpen={isOpen}\n      onClose={onClose}\n      confirmHandler={confirmHandler}\n    >\n      {confirmPaymentMessage}\n      <Checkbox\n        className={styles.checkBox}\n        label={lang('DoNotAskAgain')}\n        checked={shouldPaidMessageAutoApprove}\n        onCheck={setShouldPaidMessageAutoApprove}\n      />\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(PaymentMessageConfirmDialog);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChatMember, ApiTypingStatus, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { CustomPeer, StoryViewerOrigin } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getMainUsername, getUserStatus, isSystemBot, isUserOnline,\n} from '../../global/helpers';\nimport { selectChatMessages, selectUser, selectUserStatus } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useIntervalForceUpdate from '../../hooks/schedulers/useIntervalForceUpdate';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RippleEffect from '../ui/RippleEffect';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TypingStatus from './TypingStatus';\n\ntype OwnProps = {\n  userId?: string;\n  customPeer?: CustomPeer;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  statusIcon?: IconName;\n  ripple?: boolean;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withStory?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  noEmojiStatus?: boolean;\n  noFake?: boolean;\n  noVerified?: boolean;\n  emojiStatusSize?: number;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n  adminMember?: ApiChatMember;\n  isSavedDialog?: boolean;\n  className?: string;\n  onEmojiStatusClick?: NoneToVoidFunction;\n  iconElement?: React.ReactNode;\n  rightElement?: React.ReactNode;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    self?: ApiUser;\n    isSavedMessages?: boolean;\n    areMessagesLoaded: boolean;\n    isSynced?: boolean;\n  };\n\nconst UPDATE_INTERVAL = 1000 * 60; // 1 min\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  customPeer,\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  statusIcon,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withStory,\n  withFullInfo,\n  withUpdatingStatus,\n  emojiStatusSize,\n  noStatusOrTyping,\n  noEmojiStatus,\n  noFake,\n  noVerified,\n  noRtl,\n  user,\n  userStatus,\n  self,\n  isSavedMessages,\n  isSavedDialog,\n  areMessagesLoaded,\n  adminMember,\n  ripple,\n  className,\n  storyViewerOrigin,\n  isSynced,\n  onEmojiStatusClick,\n  iconElement,\n  rightElement,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const { id: userId } = user || {};\n\n  const hasAvatarMediaViewer = withMediaViewer && !isSavedMessages;\n\n  useEffect(() => {\n    if (userId) {\n      if (withFullInfo && isSynced) loadFullUser({ userId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: userId, isPreload: true });\n    }\n  }, [userId, withFullInfo, withMediaViewer, isSynced]);\n\n  useIntervalForceUpdate(UPDATE_INTERVAL);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (user && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: user.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => user && withUsername && getMainUsername(user), [user, withUsername]);\n\n  if (!user && !customPeer) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (customPeer?.subtitleKey) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <span className=\"user-status\" dir=\"auto\">{lang(customPeer.subtitleKey)}</span>\n        </span>\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isSystemBot(user.id)) {\n      return undefined;\n    }\n\n    const translatedStatus = getUserStatus(lang, user, userStatus);\n    const mainUserNameClassName = buildClassName('handle', translatedStatus && 'withStatus');\n    return (\n      <span className={buildClassName('status', isUserOnline(user, userStatus, true) && 'online')}>\n        {mainUsername && <span className={mainUserNameClassName}>{mainUsername}</span>}\n        {translatedStatus && <span className=\"user-status\" dir=\"auto\">{translatedStatus}</span>}\n      </span>\n    );\n  }\n\n  const customTitle = adminMember\n    ? adminMember.customTitle || lang(adminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin')\n    : undefined;\n\n  function renderNameTitle() {\n    if (customTitle) {\n      return (\n        <div className=\"info-name-title\">\n          <FullNameTitle\n            peer={user!}\n            withEmojiStatus={!noEmojiStatus}\n            emojiStatusSize={emojiStatusSize}\n            isSavedMessages={isSavedMessages}\n            isSavedDialog={isSavedDialog}\n            onEmojiStatusClick={onEmojiStatusClick}\n          />\n          {customTitle && <span className=\"custom-title\">{customTitle}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <FullNameTitle\n        peer={customPeer || user!}\n        noFake={noFake}\n        noVerified={noVerified}\n        withEmojiStatus={!noEmojiStatus}\n        emojiStatusSize={emojiStatusSize}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        onEmojiStatusClick={onEmojiStatusClick}\n        iconElement={iconElement}\n      />\n    );\n  }\n\n  return (\n    <div className={buildClassName('ChatInfo', className)} dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      {isSavedDialog && self && (\n        <Avatar\n          key=\"saved-messages\"\n          size={avatarSize}\n          peer={self}\n          isSavedMessages\n          className=\"saved-dialog-avatar\"\n        />\n      )}\n      <Avatar\n        key={user?.id}\n        size={avatarSize}\n        peer={customPeer || user}\n        className={buildClassName(isSavedDialog && 'overlay-avatar')}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        withStory={withStory}\n        storyViewerOrigin={storyViewerOrigin}\n        storyViewerMode=\"single-peer\"\n        onClick={hasAvatarMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {renderNameTitle()}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n      {ripple && <RippleEffect />}\n      {rightElement}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { isSynced } = global;\n    const user = userId ? selectUser(global, userId) : undefined;\n    const userStatus = userId ? selectUserStatus(global, userId) : undefined;\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const self = isSavedMessages ? user : selectUser(global, global.currentUserId!);\n    const areMessagesLoaded = Boolean(userId && selectChatMessages(global, userId));\n\n    return {\n      user,\n      userStatus,\n      isSavedMessages,\n      areMessagesLoaded,\n      self,\n      isSynced,\n    };\n  },\n)(PrivateChatInfo));\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../api/types';\n\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getPhotoMediaHash,\n  getProfilePhotoMediaHash,\n  getUserFullName,\n  getVideoProfilePhotoMediaHash,\n  isAnonymousForwardsChat,\n  isChatWithRepliesBot,\n  isDeletedUser,\n  isUserId,\n} from '../../global/helpers';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { getFirstLetters } from '../../util/textFormat';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useFlag from '../../hooks/useFlag';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\nimport Icon from './icons/Icon';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  isSavedDialog?: boolean;\n  photo?: ApiPhoto;\n  canPlayVideo: boolean;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isSavedMessages,\n  isSavedDialog,\n  canPlayVideo,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n  const isAnonymousForwards = chat && isAnonymousForwardsChat(chat.id);\n  const peer = (user || chat)!;\n  const canHaveMedia = peer && !isSavedMessages && !isDeleted && !isRepliesChat && !isAnonymousForwards;\n  const { isVideo } = photo || {};\n\n  const avatarHash = (!photo || photo.id === peer.avatarPhotoId) && getChatAvatarHash(peer, 'normal');\n\n  const previewHash = canHaveMedia && photo && !avatarHash && getPhotoMediaHash(photo, 'pictogram');\n  const previewBlobUrl = useMedia(previewHash || avatarHash);\n\n  const photoHash = canHaveMedia && photo && !isVideo && getProfilePhotoMediaHash(photo);\n  const photoBlobUrl = useMedia(photoHash);\n\n  const videoHash = canHaveMedia && photo && isVideo && getVideoProfilePhotoMediaHash(photo);\n  const videoBlobUrl = useMedia(videoHash);\n\n  const fullMediaData = videoBlobUrl || photoBlobUrl;\n  const [isVideoReady, markVideoReady] = useFlag();\n  const isFullMediaReady = Boolean(fullMediaData && (!isVideo || isVideoReady));\n  const transitionClassNames = useMediaTransitionDeprecated(isFullMediaReady);\n  const isBlurredThumb = canHaveMedia && !isFullMediaReady && !previewBlobUrl && photo?.thumbnail?.dataUri;\n  const blurredThumbCanvasRef = useCanvasBlur(\n    photo?.thumbnail?.dataUri, !isBlurredThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n  const hasMedia = photo || previewBlobUrl || isBlurredThumb;\n\n  useEffect(() => {\n    if (videoRef.current && !canPlayVideo) {\n      videoRef.current.currentTime = 0;\n    }\n  }, [canPlayVideo]);\n\n  const specialIcon = useMemo(() => {\n    if (isSavedMessages) {\n      return isSavedDialog ? 'my-notes' : 'avatar-saved-messages';\n    }\n\n    if (isDeleted) {\n      return 'avatar-deleted-account';\n    }\n\n    if (isRepliesChat) {\n      return 'reply-filled';\n    }\n\n    if (isAnonymousForwards) {\n      return 'author-hidden';\n    }\n\n    return undefined;\n  }, [isAnonymousForwards, isDeleted, isSavedDialog, isRepliesChat, isSavedMessages]);\n\n  let content: TeactNode | undefined;\n\n  if (specialIcon) {\n    content = <Icon name={specialIcon} role=\"img\" />;\n  } else if (hasMedia) {\n    content = (\n      <>\n        {isBlurredThumb ? (\n          <canvas ref={blurredThumbCanvasRef} className=\"thumb\" />\n        ) : (\n          <img src={previewBlobUrl} draggable={false} className=\"thumb\" alt=\"\" />\n        )}\n        {photo && (\n          isVideo ? (\n            <OptimizedVideo\n              canPlay={canPlayVideo}\n              ref={videoRef}\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              muted\n              disablePictureInPicture\n              loop\n              playsInline\n              onReady={markVideoReady}\n            />\n          ) : (\n            <img\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              alt=\"\"\n            />\n          )\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    getPeerColorClass(peer),\n    isSavedMessages && 'saved-messages',\n    isAnonymousForwards && 'anonymous-forwards',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !hasMedia) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={hasMedia ? onClick : undefined}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","// extracted by mini-css-extract-plugin\nexport default {\"fallbackPhoto\":\"Wm9Ygb23\",\"fallbackPhotoContents\":\"nflKKT3R\",\"fallbackPhotoVisible\":\"tFkRrvxe\",\"fallbackPhotoAvatar\":\"R7w3H5eC\",\"photoWrapper\":\"GBGLnrA7\",\"photoDashes\":\"uyvKpR3B\",\"photoDash\":\"wB4yjvei\",\"photoDash_current\":\"aZmp9FLh\",\"photoDashCurrent\":\"aZmp9FLh\",\"navigation\":\"ZZRcBh8v\",\"navigation_prev\":\"RQITz4WQ\",\"navigationPrev\":\"RQITz4WQ\",\"navigation_next\":\"_0F1Txru\",\"navigationNext\":\"_0F1Txru\",\"info\":\"UcyW7tVh\",\"status\":\"cpyXyZDl\",\"user-status\":\"_HDVUj4P\",\"userStatus\":\"_HDVUj4P\",\"get-status\":\"Qga38M20\",\"getStatus\":\"Qga38M20\",\"topicContainer\":\"yzg267rr\",\"topicTitle\":\"umOuiu3K\",\"topicIcon\":\"ZCxp0_t4\",\"topicIconTitle\":\"lkfZNWOm\",\"topicMessagesCounter\":\"tLTzQ2ks\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiPeerPhotos, ApiSticker, ApiTopic, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getUserStatus, isAnonymousForwardsChat, isChatChannel, isSystemBot, isUserOnline,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectCurrentMessageList,\n  selectPeerPhotos,\n  selectTabState,\n  selectThreadMessagesCount,\n  selectTopic,\n  selectUser,\n  selectUserStatus,\n} from '../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport renderText from './helpers/renderText';\n\nimport useIntervalForceUpdate from '../../hooks/schedulers/useIntervalForceUpdate';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport usePhotosPreload from './hooks/usePhotosPreload';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport ProfilePhoto from './ProfilePhoto';\nimport TopicIcon from './TopicIcon';\n\nimport './ProfileInfo.scss';\nimport styles from './ProfileInfo.module.scss';\n\ntype OwnProps = {\n  peerId: string;\n  forceShowSelf?: boolean;\n  canPlayVideo: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    chat?: ApiChat;\n    mediaIndex?: number;\n    avatarOwnerId?: string;\n    topic?: ApiTopic;\n    messagesCount?: number;\n    emojiStatusSticker?: ApiSticker;\n    emojiStatusSlug?: string;\n    profilePhotos?: ApiPeerPhotos;\n  };\n\nconst EMOJI_STATUS_SIZE = 24;\nconst EMOJI_TOPIC_SIZE = 120;\nconst LOAD_MORE_THRESHOLD = 3;\nconst MAX_PHOTO_DASH_COUNT = 30;\nconst STATUS_UPDATE_INTERVAL = 1000 * 60; // 1 min\n\nconst ProfileInfo: FC<OwnProps & StateProps> = ({\n  forceShowSelf,\n  canPlayVideo,\n  user,\n  userStatus,\n  chat,\n  mediaIndex,\n  avatarOwnerId,\n  topic,\n  messagesCount,\n  emojiStatusSticker,\n  emojiStatusSlug,\n  profilePhotos,\n  peerId,\n}) => {\n  const {\n    openMediaViewer,\n    openPremiumModal,\n    openStickerSet,\n    openPrivacySettingsNoticeModal,\n    loadMoreProfilePhotos,\n    openUniqueGiftBySlug,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  useIntervalForceUpdate(user ? STATUS_UPDATE_INTERVAL : undefined);\n\n  const photos = profilePhotos?.photos || MEMO_EMPTY_ARRAY;\n  const prevMediaIndex = usePreviousDeprecated(mediaIndex);\n  const prevAvatarOwnerId = usePreviousDeprecated(avatarOwnerId);\n  const [hasSlideAnimation, setHasSlideAnimation] = useState(true);\n  // slideOptimized doesn't work well when animation is dynamically disabled\n  const slideAnimation = hasSlideAnimation ? (lang.isRtl ? 'slideRtl' : 'slide') : 'none';\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  useEffect(() => {\n    if (photos.length - currentPhotoIndex <= LOAD_MORE_THRESHOLD) {\n      loadMoreProfilePhotos({ peerId });\n    }\n  }, [currentPhotoIndex, peerId, photos.length]);\n\n  // Set the current avatar photo to the last selected photo in Media Viewer after it is closed\n  useEffect(() => {\n    if (prevAvatarOwnerId && prevMediaIndex !== undefined && mediaIndex === undefined) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(prevMediaIndex);\n    }\n  }, [mediaIndex, prevMediaIndex, prevAvatarOwnerId]);\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  usePhotosPreload(photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useLastCallback(() => {\n    openMediaViewer({\n      isAvatarView: true,\n      chatId: peerId,\n      mediaIndex: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  });\n\n  const handleStatusClick = useLastCallback(() => {\n    if (emojiStatusSlug) {\n      openUniqueGiftBySlug({ slug: emojiStatusSlug });\n      return;\n    }\n    if (!peerId) {\n      openStickerSet({\n        stickerSetInfo: emojiStatusSticker!.stickerSetInfo,\n      });\n      return;\n    }\n\n    openPremiumModal({ fromUserId: peerId });\n  });\n\n  const selectPreviousMedia = useLastCallback(() => {\n    if (isFirst) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  });\n\n  const selectNextMedia = useLastCallback(() => {\n    if (isLast) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  });\n\n  const handleOpenGetReadDateModal = useLastCallback(() => {\n    openPrivacySettingsNoticeModal({ chatId: chat!.id, isReadDate: false });\n  });\n\n  function handleSelectFallbackPhoto() {\n    if (!isFirst) return;\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(photos.length - 1);\n  }\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>(`.${styles.photoWrapper}`);\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderTopic() {\n    return (\n      <div className={styles.topicContainer}>\n        <TopicIcon\n          topic={topic!}\n          size={EMOJI_TOPIC_SIZE}\n          className={styles.topicIcon}\n          letterClassName={styles.topicIconTitle}\n          noLoopLimit\n        />\n        <h3 className={styles.topicTitle} dir={lang.isRtl ? 'rtl' : undefined}>{renderText(topic!.title)}</h3>\n        <p className={styles.topicMessagesCounter}>\n          {messagesCount ? lang('Chat.Title.Topic', messagesCount, 'i') : lang('lng_forum_no_messages')}\n        </p>\n      </div>\n    );\n  }\n\n  function renderPhotoTabs() {\n    const totalPhotosLength = Math.max(photos.length, profilePhotos?.count || 0);\n    if (!photos || totalPhotosLength <= 1) {\n      return undefined;\n    }\n\n    const enumerator = Array.from({ length: Math.min(totalPhotosLength, MAX_PHOTO_DASH_COUNT) });\n    const activeDashIndex = currentPhotoIndex >= MAX_PHOTO_DASH_COUNT ? MAX_PHOTO_DASH_COUNT - 1 : currentPhotoIndex;\n\n    return (\n      <div className={styles.photoDashes}>\n        {enumerator.map((_, i) => (\n          <span className={buildClassName(styles.photoDash, i === activeDashIndex && styles.photoDash_current)} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto(isActive?: boolean) {\n    const photo = photos.length > 0\n      ? photos[currentPhotoIndex]\n      : undefined;\n\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={photo}\n        canPlayVideo={Boolean(isActive && canPlayVideo)}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderStatus() {\n    const isAnonymousForwards = isAnonymousForwardsChat(peerId);\n    const isSystemBotChat = isSystemBot(peerId);\n    if (isAnonymousForwards || isSystemBotChat) return undefined;\n\n    if (user) {\n      return (\n        <div\n          className={buildClassName(\n            styles.status,\n            'status',\n            isUserOnline(user, userStatus) && 'online',\n          )}\n        >\n          <span className={styles.userStatus} dir=\"auto\">\n            {getUserStatus(lang, user, userStatus)}\n          </span>\n          {userStatus?.isReadDateRestrictedByMe && (\n            <span className={styles.getStatus} onClick={handleOpenGetReadDateModal}>\n              <span>{lang('StatusHiddenShow')}</span>\n            </span>\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <span className={buildClassName(styles.status, 'status')} dir=\"auto\">{\n        isChatChannel(chat!)\n          ? lang('Subscribers', chat!.membersCount ?? 0, 'i')\n          : lang('Members', chat!.membersCount ?? 0, 'i')\n      }\n      </span>\n    );\n  }\n\n  if (topic) {\n    return renderTopic();\n  }\n\n  return (\n    <div\n      className={buildClassName('ProfileInfo')}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <div className={styles.photoWrapper}>\n        {renderPhotoTabs()}\n        {!forceShowSelf && profilePhotos?.personalPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            isFirst && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents}>\n              {lang(profilePhotos.personalPhoto.isVideo ? 'UserInfo.CustomVideo' : 'UserInfo.CustomPhoto')}\n            </div>\n          </div>\n        )}\n        {forceShowSelf && profilePhotos?.fallbackPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            (isFirst || isLast) && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents} onClick={handleSelectFallbackPhoto}>\n              {!isLast && (\n                <Avatar\n                  photo={profilePhotos.fallbackPhoto}\n                  className={styles.fallbackPhotoAvatar}\n                  size=\"mini\"\n                />\n              )}\n              {lang(profilePhotos.fallbackPhoto.isVideo ? 'UserInfo.PublicVideo' : 'UserInfo.PublicPhoto')}\n            </div>\n          </div>\n        )}\n        <Transition activeKey={currentPhotoIndex} name={slideAnimation}>\n          {renderPhoto}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_prev)}\n            aria-label={lang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_next)}\n            aria-label={lang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className={styles.info} dir={lang.isRtl ? 'rtl' : 'auto'}>\n        {(user || chat) && (\n          <FullNameTitle\n            peer={(user || chat)!}\n            withEmojiStatus\n            emojiStatusSize={EMOJI_STATUS_SIZE}\n            onEmojiStatusClick={handleStatusClick}\n            noLoopLimit\n            canCopyTitle\n          />\n        )}\n        {renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId }): StateProps => {\n    const user = selectUser(global, peerId);\n    const userStatus = selectUserStatus(global, peerId);\n    const chat = selectChat(global, peerId);\n    const profilePhotos = selectPeerPhotos(global, peerId);\n    const { mediaIndex, chatId: avatarOwnerId } = selectTabState(global).mediaViewer;\n    const isForum = chat?.isForum;\n    const { threadId: currentTopicId } = selectCurrentMessageList(global) || {};\n    const topic = isForum && currentTopicId ? selectTopic(global, peerId, currentTopicId) : undefined;\n\n    const emojiStatus = (user || chat)?.emojiStatus;\n    const emojiStatusSticker = emojiStatus ? global.customEmojis.byId[emojiStatus.documentId] : undefined;\n    const emojiStatusSlug = emojiStatus?.type === 'collectible' ? emojiStatus.slug : undefined;\n\n    return {\n      user,\n      userStatus,\n      chat,\n      mediaIndex,\n      avatarOwnerId,\n      emojiStatusSticker,\n      emojiStatusSlug,\n      profilePhotos,\n      ...(topic && {\n        topic,\n        messagesCount: selectThreadMessagesCount(global, peerId, currentTopicId!),\n      }),\n    };\n  },\n)(ProfileInfo));\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getProfilePhotoMediaHash } from '../../../global/helpers';\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaHash = getProfilePhotoMediaHash(photo);\n      const mediaData = mediaLoader.getFromMemory(mediaHash);\n      if (!mediaData) {\n        mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport CustomEmoji from './CustomEmoji';\nimport TopicDefaultIcon from './TopicDefaultIcon';\n\ntype OwnProps = {\n  topic: Pick<ApiTopic, 'iconEmojiId' | 'iconColor' | 'title' | 'id'>;\n  className?: string;\n  letterClassName?: string;\n  size?: number;\n  noLoopLimit?: true;\n  observeIntersection?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst LOOP_LIMIT = 2;\nconst DEFAULT_ICON_ID = '0';\n\nconst TopicIcon: FC<OwnProps> = ({\n  topic,\n  className,\n  letterClassName,\n  size,\n  noLoopLimit,\n  observeIntersection,\n  onClick,\n}) => {\n  if (topic.iconEmojiId && topic.iconEmojiId !== DEFAULT_ICON_ID) {\n    return (\n      <CustomEmoji\n        documentId={topic.iconEmojiId}\n        className={className}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n        loopLimit={!noLoopLimit ? LOOP_LIMIT : undefined}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <TopicDefaultIcon\n      iconColor={topic.iconColor}\n      title={topic.title}\n      topicId={topic.id}\n      className={className}\n      letterClassName={letterClassName}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(TopicIcon);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiTypingStatus, ApiUser } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useOldLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji || '').trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiWebPage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { TextPart } from '../../types';\n\nimport {\n  getFirstLinkInMessage, getMessageText,\n  getMessageWebPage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\nimport trimText from '../../util/trimText';\nimport { renderMessageSummary } from './helpers/renderMessageText';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Link from '../ui/Link';\nimport Media from './Media';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onMessageClick: (message: ApiMessage) => void;\n};\n\ntype ApiWebPageWithFormatted =\n  ApiWebPage\n  & { formattedDescription?: TextPart[] };\n\nconst WebLink: FC<OwnProps> = ({\n  message, senderTitle, isProtected, observeIntersection, onMessageClick,\n}) => {\n  const lang = useOldLang();\n\n  let linkData: ApiWebPageWithFormatted | undefined = getMessageWebPage(message);\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        formattedDescription: getMessageText(message)?.text !== url\n          ? renderMessageSummary(lang, message, undefined, undefined, MAX_TEXT_LENGTH)\n          : undefined,\n      } as ApiWebPageWithFormatted;\n    }\n  }\n\n  const handleMessageClick = useLastCallback(() => {\n    onMessageClick(message);\n  });\n\n  if (!linkData) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    formattedDescription,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && description && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  const safeLinkContent = url.replace('mailto:', '') || displayUrl;\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} isProtected={isProtected} observeIntersection={observeIntersection} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {(truncatedDescription || formattedDescription) && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {formattedDescription || (truncatedDescription && renderText(truncatedDescription))}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text={safeLinkContent}\n          isRtl={lang.isRtl}\n        />\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(lang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(WebLink);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type {\n  ApiChat,\n  ApiMessage, ApiPeer, ApiReplyInfo, MediaContainer,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatTranslatedMessages } from '../../../types';\nimport type { IconName } from '../../../types/icons';\n\nimport { CONTENT_NOT_SUPPORTED } from '../../../config';\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageRoundVideo,\n  isChatChannel,\n  isChatGroup,\n  isMessageTranslatable,\n  isUserId,\n} from '../../../global/helpers';\nimport { getMediaContentTypeDescription } from '../../../global/helpers/messageSummary';\nimport { getPeerTitle } from '../../../global/helpers/peers';\nimport buildClassName from '../../../util/buildClassName';\nimport freezeWhenClosed from '../../../util/hoc/freezeWhenClosed';\nimport { getPictogramDimensions } from '../helpers/mediaDimensions';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useThumbnail from '../../../hooks/useThumbnail';\nimport useMessageTranslation from '../../middle/message/hooks/useMessageTranslation';\n\nimport RippleEffect from '../../ui/RippleEffect';\nimport Icon from '../icons/Icon';\nimport MediaSpoiler from '../MediaSpoiler';\nimport MessageSummary from '../MessageSummary';\nimport PeerColorWrapper from '../PeerColorWrapper';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  className?: string;\n  replyInfo?: ApiReplyInfo;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  senderChat?: ApiChat;\n  forwardSender?: ApiPeer;\n  title?: string;\n  customText?: string;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  isInComposer?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  requestedChatTranslationLanguage?: string;\n  isOpen?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick: ((e: React.MouseEvent) => void);\n};\n\nconst NBSP = '\\u00A0';\nconst EMOJI_SIZE = 17;\n\nconst EmbeddedMessage: FC<OwnProps> = ({\n  className,\n  message,\n  replyInfo,\n  sender,\n  senderChat,\n  forwardSender,\n  title,\n  customText,\n  isProtected,\n  isInComposer,\n  noUserColors,\n  chatTranslations,\n  requestedChatTranslationLanguage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n\n  const containedMedia: MediaContainer | undefined = useMemo(() => {\n    const media = (replyInfo?.type === 'message' && replyInfo.replyMedia) || message?.content;\n    if (!media) {\n      return undefined;\n    }\n\n    return {\n      content: media,\n    };\n  }, [message, replyInfo]);\n\n  const gif = containedMedia?.content?.video?.isGif ? containedMedia.content.video : undefined;\n  const isVideoThumbnail = Boolean(gif && !gif.previewPhotoSizes?.length);\n\n  const mediaHash = containedMedia && getMessageMediaHash(containedMedia, isVideoThumbnail ? 'full' : 'pictogram');\n  const mediaBlobUrl = useMedia(mediaHash, !isIntersecting);\n  const mediaThumbnail = useThumbnail(containedMedia);\n\n  const isRoundVideo = Boolean(containedMedia && getMessageRoundVideo(containedMedia));\n  const isSpoiler = Boolean(containedMedia && getMessageIsSpoiler(containedMedia));\n  const isQuote = Boolean(replyInfo?.type === 'message' && replyInfo.isQuote);\n  const replyForwardInfo = replyInfo?.type === 'message' ? replyInfo.replyFrom : undefined;\n\n  const shouldTranslate = message && isMessageTranslatable(message);\n  const { translatedText } = useMessageTranslation(\n    chatTranslations, message?.chatId, shouldTranslate ? message?.id : undefined, requestedChatTranslationLanguage,\n  );\n\n  const lang = useOldLang();\n\n  const senderTitle = sender ? getPeerTitle(lang, sender)\n    : (replyForwardInfo?.hiddenUserName || message?.forwardInfo?.hiddenUserName);\n  const senderChatTitle = senderChat ? getPeerTitle(lang, senderChat) : undefined;\n  const forwardSenderTitle = forwardSender ? getPeerTitle(lang, forwardSender)\n    : message?.forwardInfo?.hiddenUserName;\n  const areSendersSame = sender && sender.id === forwardSender?.id;\n\n  const { handleClick, handleMouseDown } = useFastClick(onClick);\n\n  function renderTextContent() {\n    if (replyInfo?.type === 'message' && replyInfo.quoteText) {\n      return renderTextWithEntities({\n        text: replyInfo.quoteText.text,\n        entities: replyInfo.quoteText.entities,\n        asPreview: true,\n        emojiSize: EMOJI_SIZE,\n      });\n    }\n\n    if (!message) {\n      return customText || renderMediaContentType(containedMedia) || NBSP;\n    }\n\n    return (\n      <MessageSummary\n        message={message}\n        noEmoji={Boolean(mediaThumbnail)}\n        translatedText={translatedText}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        emojiSize={EMOJI_SIZE}\n      />\n    );\n  }\n\n  function renderMediaContentType(media?: MediaContainer) {\n    if (!media || media.content.text) return NBSP;\n    const description = getMediaContentTypeDescription(lang, media.content, {});\n    if (!description || description === CONTENT_NOT_SUPPORTED) return NBSP;\n    return (\n      <span>\n        {renderText(description)}\n      </span>\n    );\n  }\n\n  function checkShouldRenderSenderTitle() {\n    if (!senderChat) return true;\n    if (isUserId(senderChat?.id)) return true;\n    if (senderChat.id === sender?.id) return false;\n    return true;\n  }\n  function renderSender() {\n    if (title) {\n      return renderText(title);\n    }\n\n    if (!senderTitle) {\n      return NBSP;\n    }\n\n    let icon: IconName | undefined;\n    if (senderChat) {\n      if (isChatChannel(senderChat)) {\n        icon = 'channel-filled';\n      }\n\n      if (isChatGroup(senderChat)) {\n        icon = 'group-filled';\n      }\n    }\n\n    const isReplyToQuote = isInComposer && Boolean(replyInfo && 'quoteText' in replyInfo && replyInfo?.quoteText);\n\n    return (\n      <span className=\"embedded-sender-wrapper\">\n        {checkShouldRenderSenderTitle() && (\n          <span className=\"embedded-sender\">\n            {renderText(isReplyToQuote ? lang('ReplyToQuote', senderTitle) : senderTitle)}\n          </span>\n        )}\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {icon && senderChatTitle && (\n          <span className=\"embedded-sender-chat\">\n            {renderText(senderChatTitle)}\n          </span>\n        )}\n      </span>\n    );\n  }\n\n  function renderForwardSender() {\n    return forwardSenderTitle && !areSendersSame && (\n      <span className=\"embedded-forward-sender-wrapper\">\n        <Icon name={forwardSender ? 'share-filled' : 'forward'} className=\"embedded-origin-icon\" />\n        <span className=\"forward-sender-title\">\n          {renderText(forwardSenderTitle)}\n        </span>\n      </span>\n    );\n  }\n\n  return (\n    <PeerColorWrapper\n      peer={sender}\n      emojiIconClassName=\"EmbeddedMessage--background-icons\"\n      ref={ref}\n      shouldReset\n      noUserColors={noUserColors}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        isQuote && 'is-quote',\n        mediaThumbnail && 'with-thumb',\n        'no-selection',\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      <div className=\"hover-effect\" />\n      <RippleEffect />\n      {mediaThumbnail && renderPictogram(\n        mediaThumbnail, mediaBlobUrl, isVideoThumbnail, isRoundVideo, isProtected, isSpoiler,\n      )}\n      <div className=\"message-text\">\n        <p className={buildClassName('embedded-text-wrapper', isQuote && 'multiline')}>\n          {renderTextContent()}\n        </p>\n        <div className=\"message-title\">\n          {renderSender()}\n          {renderForwardSender()}\n        </div>\n      </div>\n    </PeerColorWrapper>\n  );\n};\n\nfunction renderPictogram(\n  thumbDataUri: string,\n  blobUrl?: string,\n  isFullVideo?: boolean,\n  isRoundVideo?: boolean,\n  isProtected?: boolean,\n  isSpoiler?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  const srcUrl = blobUrl || thumbDataUri;\n  const shouldRenderVideo = isFullVideo && blobUrl;\n\n  return (\n    <div className={buildClassName('embedded-thumb', isRoundVideo && 'round')}>\n      {!isSpoiler && !shouldRenderVideo && (\n        <img\n          src={srcUrl}\n          width={width}\n          height={height}\n          alt=\"\"\n          className=\"pictogram\"\n          draggable={false}\n        />\n      )}\n      {!isSpoiler && shouldRenderVideo && (\n        <video\n          src={blobUrl}\n          width={width}\n          height={height}\n          playsInline\n          disablePictureInPicture\n          className=\"pictogram\"\n        />\n      )}\n      <MediaSpoiler\n        thumbDataUri={shouldRenderVideo ? thumbDataUri : srcUrl}\n        isVisible={Boolean(isSpoiler)}\n        width={width}\n        height={height}\n      />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport const ClosableEmbeddedMessage = freezeWhenClosed(EmbeddedMessage);\n\nexport default EmbeddedMessage;\n","import type { ApiBoostsStatus } from '../../../api/types';\n\nexport function getBoostProgressInfo(boostInfo: ApiBoostsStatus, freezeOnLevelUp?: boolean) {\n  const {\n    level, boosts, currentLevelBoosts, nextLevelBoosts, hasMyBoost, prepaidGiveaways,\n  } = boostInfo;\n\n  const isJustUpgraded = freezeOnLevelUp && boosts === currentLevelBoosts && hasMyBoost;\n\n  const currentLevel = isJustUpgraded ? level - 1 : level;\n  const hasNextLevel = Boolean(nextLevelBoosts);\n\n  const levelProgress = (!nextLevelBoosts || isJustUpgraded) ? 1\n    : (boosts - currentLevelBoosts) / (nextLevelBoosts - currentLevelBoosts);\n  const remainingBoosts = nextLevelBoosts ? nextLevelBoosts - boosts : 0;\n\n  const isMaxLevel = nextLevelBoosts === undefined;\n\n  return {\n    currentLevel,\n    hasNextLevel,\n    boosts,\n    levelProgress,\n    remainingBoosts,\n    isMaxLevel,\n    prepaidGiveaways,\n  };\n}\n","import { TME_LINK_PREFIX } from '../../../config';\n\nexport default function formatUsername(username: string, asAbsoluteLink?: boolean) {\n  return asAbsoluteLink ? `${TME_LINK_PREFIX}${username}` : `@${username}`;\n}\n","import type { ApiBusinessTimetableSegment } from '../../api/types';\n\nconst DAY_MINUTES = 1440;\nconst WEEK_MINUTES = 10080;\n\n/**\n * @returns Monday 00:00 of the current week for the local timezone\n */\nexport function getWeekStart(): number {\n  const now = new Date();\n  now.setHours(0, 0, 0, 0);\n  const day = now.getDay();\n  const diff = now.getDate() - day + (day === 0 ? -6 : 1);\n  return new Date(now.setDate(diff)).getTime();\n}\n\n/**\n * @returns UTC offset in seconds\n */\nexport function getUtcOffset() {\n  return new Date().getTimezoneOffset() * -60;\n}\n\nexport function shiftTimeRanges(ranges: ApiBusinessTimetableSegment[], shift: number): ApiBusinessTimetableSegment[] {\n  if (shift === 0) return ranges;\n\n  const shiftedRanges: ApiBusinessTimetableSegment[] = [];\n\n  for (const range of ranges) {\n    let start = (range.startMinute + shift) % WEEK_MINUTES;\n    let end = (range.endMinute + shift) % WEEK_MINUTES;\n\n    if (start < 0) start += WEEK_MINUTES;\n    if (end <= 0) end += WEEK_MINUTES;\n\n    if (start > end) {\n      shiftedRanges.push({ startMinute: start, endMinute: WEEK_MINUTES - 1 });\n      shiftedRanges.push({ startMinute: 0, endMinute: end });\n    } else {\n      shiftedRanges.push({ startMinute: start, endMinute: end });\n    }\n  }\n\n  shiftedRanges.sort((a, b) => a.startMinute - b.startMinute);\n\n  // Combine overlapping ranges\n  return shiftedRanges.reduce<ApiBusinessTimetableSegment[]>((acc, range) => {\n    const last = acc[acc.length - 1];\n    if (last && last.endMinute >= range.startMinute) {\n      last.endMinute = Math.max(last.endMinute, range.endMinute);\n    } else {\n      acc.push(range);\n    }\n    return acc;\n  }, []);\n}\n\nexport function splitDays(ranges: ApiBusinessTimetableSegment[]): Record<number, ApiBusinessTimetableSegment[]> {\n  const days: Record<number, ApiBusinessTimetableSegment[]> = {};\n\n  for (const range of ranges) {\n    const start = range.startMinute;\n    const end = range.endMinute;\n\n    const dayStart = Math.floor(start / DAY_MINUTES);\n    const dayEnd = Math.floor((end - 1) / DAY_MINUTES); // 00:00 is counted as same day\n\n    for (let day = dayStart; day <= dayEnd; day++) {\n      if (!days[day]) {\n        days[day] = [];\n      }\n\n      days[day].push({\n        startMinute: Math.max(0, start - day * DAY_MINUTES),\n        endMinute: Math.min(DAY_MINUTES, end - day * DAY_MINUTES),\n      });\n    }\n  }\n\n  return days;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ef_0p5Qm\",\"top\":\"nHSmCUNs\",\"icon\":\"rlM4Mbnn\",\"left\":\"JTZ8UnnP\",\"bottom\":\"lp9VIV1o\",\"status\":\"JVL7ZnnJ\",\"status-open\":\"segAfYXs\",\"statusOpen\":\"segAfYXs\",\"arrow\":\"dYxw2cFn\",\"offset-trigger\":\"gVwflFhz\",\"offsetTrigger\":\"gVwflFhz\",\"transition\":\"WKgL_XiP\",\"timetable\":\"MPBKHdZL\",\"schedule\":\"Rs0VPgpq\",\"weekday\":\"cmxPqAof\",\"current-day\":\"YZVvP_56\",\"currentDay\":\"YZVvP_56\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { ApiBusinessWorkHours } from '../../../api/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatTime, formatWeekday } from '../../../util/dates/dateFormat';\nimport {\n  getUtcOffset, getWeekStart, shiftTimeRanges, splitDays,\n} from '../../../util/dates/workHours';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\nimport Icon from '../icons/Icon';\n\nimport styles from './BusinessHours.module.scss';\n\nconst DAYS = Array.from({ length: 7 }, (_, i) => i);\n\ntype OwnProps = {\n  businessHours: ApiBusinessWorkHours;\n};\n\nconst BusinessHours = ({\n  businessHours,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const transitionRef = useRef<HTMLDivElement>(null);\n  const [isExpanded, expand, collapse] = useFlag(false);\n  const [isMyTime, showInMyTime, showInLocalTime] = useFlag(false);\n  const lang = useOldLang();\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, 60 * 1000);\n\n  const timezoneSignal = useSelectorSignal((global) => global.timezones?.byId);\n  const timezones = useDerivedState(timezoneSignal, [timezoneSignal]);\n  const timezoneMinuteDifference = useMemo(() => {\n    if (!timezones) return 0;\n    const timezone = timezones[businessHours.timezoneId];\n    const myOffset = getUtcOffset();\n    return (myOffset - timezone.utcOffset) / 60;\n  }, [businessHours.timezoneId, timezones]);\n\n  const workHours = useMemo(() => {\n    const weekStart = getWeekStart();\n    const shiftedHours = shiftTimeRanges(businessHours.workHours, isMyTime ? timezoneMinuteDifference : 0);\n    const days = splitDays(shiftedHours);\n    const result: Record<number, string[]> = {};\n\n    DAYS.forEach((day) => {\n      const segments = days[day];\n      if (!segments) {\n        result[day] = [lang('BusinessHoursDayClosed')];\n        return;\n      }\n\n      result[day] = segments.map(({ startMinute, endMinute }) => {\n        if (endMinute - startMinute === 24 * 60) return lang('BusinessHoursDayFullOpened');\n        const start = formatTime(lang, weekStart + startMinute * 60 * 1000);\n        const end = formatTime(lang, weekStart + endMinute * 60 * 1000);\n        return `${start} – ${end}`;\n      });\n    });\n\n    return result;\n  }, [businessHours.workHours, isMyTime, lang, timezoneMinuteDifference]);\n\n  const isBusinessOpen = useMemo(() => {\n    const localTimeHours = shiftTimeRanges(businessHours.workHours, timezoneMinuteDifference);\n\n    const weekStart = getWeekStart();\n    const now = new Date().getTime();\n    const minutesSinceWeekStart = (now - weekStart) / 1000 / 60;\n\n    return localTimeHours.some(({ startMinute, endMinute }) => (\n      startMinute <= minutesSinceWeekStart && minutesSinceWeekStart <= endMinute\n    ));\n  }, [businessHours.workHours, timezoneMinuteDifference]);\n\n  const currentDay = useMemo(() => {\n    const now = new Date(Date.now() - (isMyTime ? 0 : timezoneMinuteDifference * 60 * 1000));\n    return (now.getDay() + 6) % 7;\n  }, [isMyTime, timezoneMinuteDifference]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpanded) {\n      collapse();\n    } else {\n      expand();\n    }\n  });\n\n  const handleTriggerOffset = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n\n    if (isMyTime) {\n      showInLocalTime();\n    } else {\n      showInMyTime();\n    }\n  });\n\n  useEffect(() => {\n    if (!isExpanded) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.timetable}`);\n    if (!slide) return;\n\n    const height = slide.offsetHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height}px`;\n    });\n  }, [isExpanded]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.timetable}`)!;\n\n    requestMeasure(() => {\n      const height = slide.offsetHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height}px`;\n      });\n    });\n  });\n\n  return (\n    <ListItem\n      icon=\"clock\"\n      iconClassName={styles.icon}\n      multiline\n      className={styles.root}\n      isStatic={isExpanded}\n      ripple\n      narrow\n      withColorTransition\n      onClick={handleClick}\n    >\n      <div className={styles.top}>\n        <div className={styles.left}>\n          <div>{lang('BusinessHoursProfile')}</div>\n          <div className={buildClassName(styles.status, isBusinessOpen && styles.statusOpen)}>\n            {isBusinessOpen ? lang('BusinessHoursProfileNowOpen') : lang('BusinessHoursProfileNowClosed')}\n          </div>\n        </div>\n        <Icon className={styles.arrow} name={isExpanded ? 'up' : 'down'} />\n      </div>\n      {isExpanded && (\n        <div className={styles.bottom}>\n          {Boolean(timezoneMinuteDifference) && (\n            <div\n              className={styles.offsetTrigger}\n              role=\"button\"\n              tabIndex={0}\n              onMouseDown={!IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n              onClick={IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n            >\n              {lang(isMyTime ? 'BusinessHoursProfileSwitchMy' : 'BusinessHoursProfileSwitchLocal')}\n            </div>\n          )}\n          <Transition\n            className={styles.transition}\n            ref={transitionRef}\n            name=\"fade\"\n            activeKey={Number(isMyTime)}\n            onStart={handleAnimationStart}\n          >\n            <dl className={styles.timetable}>\n              {DAYS.map((day) => (\n                <>\n                  <dt className={buildClassName(styles.weekday, day === currentDay && styles.currentDay)}>\n                    {formatWeekday(lang, day === 6 ? 0 : day + 1)}\n                  </dt>\n                  <dd className={styles.schedule}>\n                    {workHours[day].map((segment) => (\n                      <div>{segment}</div>\n                    ))}\n                  </dd>\n                </>\n              ))}\n            </dl>\n          </Transition>\n        </div>\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(BusinessHours);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wCp6TBYF\",\"number\":\"lQeU96Fj\",\"float\":\"nKt3QDc_\",\"show-up\":\"ZaSLCV2k\",\"showUp\":\"ZaSLCV2k\",\"dissapear\":\"jA50ot3v\",\"shiftOrigin\":\"e1ezfWJb\",\"effect\":\"cFEXGUih\",\"giftIcon\":\"c4HDQNGJ\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport {\n  type ApiBirthday, ApiMediaFormat, type ApiStickerSet, type ApiUser,\n} from '../../../api/types';\n\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport { selectIsPremiumPurchaseBlocked } from '../../../global/selectors';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateToString } from '../../../util/dates/dateFormat';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport renderText from '../helpers/renderText';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport StickerView from '../StickerView';\n\nimport styles from './UserBirthday.module.scss';\n\nconst NUMBER_EMOJI_SUFFIX = '\\uFE0F\\u20E3';\nconst NUMBER_STICKER_SIZE = 128;\nconst EFFECT_EMOJIS = ['🎉', '🎆', '🎈'];\nconst EFFECT_SIZE = 288;\nconst ANIMATION_DURATION = 3000;\n\ntype OwnProps = {\n  user: ApiUser;\n  birthday: ApiBirthday;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  isPremiumPurchaseBlocked?: boolean;\n  birthdayNumbers?: ApiStickerSet;\n  animatedEmojiEffects?: ApiStickerSet;\n};\n\nconst UserBirthday = ({\n  user,\n  birthday,\n  isPremiumPurchaseBlocked,\n  birthdayNumbers,\n  animatedEmojiEffects,\n  isInSettings,\n}: OwnProps & StateProps) => {\n  const { openGiftModal, requestConfetti } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const animationPlayedRef = useRef(false);\n  const [isPlayingAnimation, playAnimation, stopAnimation] = useFlag();\n\n  const lang = useOldLang();\n\n  const {\n    formattedDate,\n    isToday,\n    age,\n  } = useMemo(() => {\n    const today = new Date();\n    const date = new Date();\n    if (birthday.year) {\n      date.setFullYear(birthday.year);\n    }\n    date.setMonth(birthday.month - 1);\n    date.setDate(birthday.day);\n    date.setHours(0, 0, 0, 0);\n\n    const formatted = formatDateToString(date, lang.code, true, 'long');\n    const isBirthdayToday = date.getDate() === today.getDate() && date.getMonth() === today.getMonth();\n    return {\n      formattedDate: formatted,\n      isToday: isBirthdayToday,\n      age: birthday.year && getAge(date),\n    };\n  }, [birthday, lang]);\n\n  const numbersForAge = useMemo(() => {\n    if (!age || !isToday) return undefined;\n    const numbers = birthdayNumbers?.stickers?.filter(({ emoji }) => emoji?.endsWith(NUMBER_EMOJI_SUFFIX));\n    if (!numbers) return undefined;\n    const byEmoji = buildCollectionByKey(numbers, 'emoji');\n\n    const ageDigits = age.toString().split('');\n    return ageDigits.map((digit) => byEmoji[digit + NUMBER_EMOJI_SUFFIX]);\n  }, [age, birthdayNumbers?.stickers, isToday]);\n\n  const effectSticker = useMemo(() => {\n    if (!isToday) return undefined;\n    const randomEffect = EFFECT_EMOJIS[Math.floor(Math.random() * EFFECT_EMOJIS.length)];\n    return animatedEmojiEffects?.stickers?.find(({ emoji }) => emoji === randomEffect);\n  }, [animatedEmojiEffects?.stickers, isToday]);\n\n  // Preload stickers\n  useEffect(() => {\n    if (!isToday || !numbersForAge) return;\n\n    numbersForAge.forEach((sticker) => {\n      const hash = getStickerMediaHash(sticker, 'preview');\n      mediaLoader.fetch(hash, ApiMediaFormat.BlobUrl);\n    });\n\n    if (effectSticker) {\n      const effectHash = getStickerMediaHash(effectSticker, 'preview');\n      mediaLoader.fetch(effectHash, ApiMediaFormat.BlobUrl);\n    }\n  }, [effectSticker, isToday, numbersForAge]);\n\n  useTimeout(stopAnimation, isPlayingAnimation ? ANIMATION_DURATION : undefined);\n\n  useEffect(() => {\n    if (isPlayingAnimation) {\n      animationPlayedRef.current = true;\n\n      const column = document.getElementById(isInSettings ? 'LeftColumn' : 'RightColumn');\n      if (!column) return;\n\n      requestMeasure(() => {\n        const {\n          top, left, width, height,\n        } = column.getBoundingClientRect();\n\n        requestConfetti({\n          top,\n          left,\n          width,\n          height,\n          style: 'top-down',\n        });\n      });\n    }\n  }, [isInSettings, isPlayingAnimation]);\n\n  const valueKey = `ProfileBirthday${isToday ? 'Today' : ''}Value${age ? 'Year' : ''}`;\n\n  const canGiftPremium = isToday && !user.isPremium && !user.isSelf && !isPremiumPurchaseBlocked;\n\n  const handleOpenGiftModal = useLastCallback(() => {\n    openGiftModal({ forUserId: user.id });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (!isToday) return;\n\n    if (canGiftPremium && animationPlayedRef.current) {\n      handleOpenGiftModal();\n      return;\n    }\n\n    playAnimation();\n  });\n\n  const isStatic = !isToday && !canGiftPremium;\n\n  return (\n    <div className={styles.root}>\n      <ListItem\n        icon=\"calendar\"\n        secondaryIcon={canGiftPremium ? 'gift' : undefined}\n        secondaryIconClassName={styles.giftIcon}\n        multiline\n        narrow\n        ref={ref}\n        ripple={!isStatic}\n        onClick={handleClick}\n        isStatic={isStatic}\n        onSecondaryIconClick={handleOpenGiftModal}\n      >\n        <div className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {renderText(lang(valueKey, [formattedDate, age], undefined, age))}\n        </div>\n        <span className=\"subtitle\">{lang(isToday ? 'ProfileBirthdayToday' : 'ProfileBirthday')}</span>\n      </ListItem>\n      {isPlayingAnimation && IS_OFFSET_PATH_SUPPORTED && numbersForAge?.map((sticker, index) => (\n        <div\n          className={buildClassName(styles.number, index > 0 && styles.shiftOrigin)}\n          style={`--digit-offset: ${index}`}\n        >\n          <StickerView\n            containerRef={ref}\n            sticker={sticker}\n            size={NUMBER_STICKER_SIZE}\n            forceAlways\n          />\n        </div>\n      ))}\n      {isPlayingAnimation && effectSticker && (\n        <div className={styles.effect}>\n          <StickerView\n            containerRef={ref}\n            sticker={effectSticker}\n            size={EFFECT_SIZE}\n            shouldLoop\n            forceAlways\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { birthdayNumbers, animatedEmojiEffects } = global;\n    return {\n      birthdayNumbers,\n      animatedEmojiEffects,\n      isPremiumPurchaseBlocked: selectIsPremiumPurchaseBlocked(global),\n    };\n  },\n)(UserBirthday));\n\n// https://stackoverflow.com/a/7091965\nfunction getAge(birthdate: Date) {\n  const today = new Date();\n  let age = today.getFullYear() - birthdate.getFullYear();\n  const m = today.getMonth() - birthdate.getMonth();\n  if (m < 0 || (m === 0 && today.getDate() < birthdate.getDate())) {\n    age--;\n  }\n\n  return age;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"businessLocation\":\"UZbkeFDB\",\"personalChannel\":\"HP5EJx7s\",\"personalChannelTitle\":\"cHyTGri2\",\"botVerificationSection\":\"RWFu5ENh\",\"sectionInfo\":\"IrqRJFxm\",\"botVerificationIcon\":\"b32hsSPS\",\"personalChannelSubscribers\":\"kYd2GrmU\",\"personalChannelItem\":\"qOJwhXMC\",\"openAppButton\":\"x925YeS3\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiBotVerification,\n  ApiChat,\n  ApiCountryCode,\n  ApiUser,\n  ApiUserFullInfo,\n  ApiUsername,\n} from '../../../api/types';\nimport type { BotAppPermissions } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { FRAGMENT_PHONE_CODE, FRAGMENT_PHONE_LENGTH } from '../../../config';\nimport {\n  buildStaticMapHash,\n  getChatLink,\n  getHasAdminRight,\n  isChatChannel,\n  isUserRightBanned,\n} from '../../../global/helpers';\nimport { getIsChatMuted } from '../../../global/helpers/notifications';\nimport {\n  selectBotAppPermissions,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectTopicLink,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\nimport stopEvent from '../../../util/stopEvent';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\nimport { ChatAnimationTypes } from '../../left/main/hooks';\nimport formatUsername from '../helpers/formatUsername';\nimport renderText from '../helpers/renderText';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport Chat from '../../left/main/Chat';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport Switcher from '../../ui/Switcher';\nimport CustomEmoji from '../CustomEmoji';\nimport SafeLink from '../SafeLink';\nimport BusinessHours from './BusinessHours';\nimport UserBirthday from './UserBirthday';\n\nimport styles from './ChatExtra.module.scss';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  isSavedDialog?: boolean;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  chat?: ApiChat;\n  userFullInfo?: ApiUserFullInfo;\n  canInviteUsers?: boolean;\n  isMuted?: boolean;\n  phoneCodeList: ApiCountryCode[];\n  topicId?: number;\n  description?: string;\n  chatInviteLink?: string;\n  topicLink?: string;\n  hasSavedMessages?: boolean;\n  personalChannel?: ApiChat;\n  hasMainMiniApp?: boolean;\n  isBotCanManageEmojiStatus?: boolean;\n  botAppPermissions?: BotAppPermissions;\n  botVerification?: ApiBotVerification;\n};\n\nconst DEFAULT_MAP_CONFIG = {\n  width: 64,\n  height: 64,\n  zoom: 15,\n};\n\nconst BOT_VERIFICATION_ICON_SIZE = 16;\n\nconst ChatExtra: FC<OwnProps & StateProps> = ({\n  chatOrUserId,\n  user,\n  chat,\n  userFullInfo,\n  isInSettings,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  topicId,\n  description,\n  chatInviteLink,\n  topicLink,\n  hasSavedMessages,\n  personalChannel,\n  hasMainMiniApp,\n  isBotCanManageEmojiStatus,\n  botAppPermissions,\n  botVerification,\n}) => {\n  const {\n    showNotification,\n    updateChatMutedState,\n    updateTopicMutedState,\n    loadPeerStories,\n    openSavedDialog,\n    openMapModal,\n    requestCollectibleInfo,\n    requestMainWebView,\n    toggleUserEmojiStatusPermission,\n    toggleUserLocationPermission,\n  } = getActions();\n\n  const {\n    id: userId,\n    usernames,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId, usernames: chatUsernames } = chat || {};\n  const peerId = userId || chatId;\n  const {\n    businessLocation,\n    businessWorkHours,\n    personalChannelMessageId,\n    birthday,\n  } = userFullInfo || {};\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useEffectWithPrevDeps(([prevPeerId]) => {\n    if (!peerId || prevPeerId === peerId) return;\n    if (user || (chat && isChatChannel(chat))) {\n      loadPeerStories({ peerId });\n    }\n  }, [peerId, chat, user]);\n\n  const { width, height, zoom } = DEFAULT_MAP_CONFIG;\n  const dpr = useDevicePixelRatio();\n  const locationMediaHash = businessLocation?.geo\n    && buildStaticMapHash(businessLocation.geo, width, height, zoom, dpr);\n  const locationBlobUrl = useMedia(locationMediaHash);\n\n  const locationRightComponent = useMemo(() => {\n    if (!businessLocation?.geo) return undefined;\n    if (locationBlobUrl) {\n      return <img src={locationBlobUrl} alt=\"\" className={styles.businessLocation} />;\n    }\n\n    return <Skeleton className={styles.businessLocation} />;\n  }, [businessLocation, locationBlobUrl]);\n\n  const isTopicInfo = Boolean(topicId && topicId !== MAIN_THREAD_ID);\n  const shouldRenderAllLinks = (chat && isChatChannel(chat)) || user?.isPremium;\n\n  const activeUsernames = useMemo(() => {\n    const result = usernames?.filter((u) => u.isActive);\n\n    return result?.length ? result : undefined;\n  }, [usernames]);\n\n  const activeChatUsernames = useMemo(() => {\n    const result = !user ? chatUsernames?.filter((u) => u.isActive) : undefined;\n\n    return result?.length ? result : undefined;\n  }, [chatUsernames, user]);\n\n  const link = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return isTopicInfo ? topicLink! : getChatLink(chat) || chatInviteLink;\n  }, [chat, isTopicInfo, topicLink, chatInviteLink]);\n\n  const handleClickLocation = useLastCallback(() => {\n    const { address, geo } = businessLocation!;\n    if (!geo) {\n      copyTextToClipboard(address);\n      showNotification({ message: oldLang('BusinessLocationCopied') });\n      return;\n    }\n\n    openMapModal({ geoPoint: geo, zoom });\n  });\n\n  const handleNotificationChange = useLastCallback(() => {\n    if (isTopicInfo) {\n      updateTopicMutedState({\n        chatId: chatId!,\n        topicId: topicId!,\n        isMuted: !isMuted,\n      });\n    } else {\n      updateChatMutedState({ chatId: chatId!, isMuted: !isMuted });\n    }\n  });\n\n  const manageEmojiStatusChange = useLastCallback(() => {\n    if (!user) return;\n    toggleUserEmojiStatusPermission({ botId: user.id, isEnabled: !isBotCanManageEmojiStatus });\n  });\n\n  const handleLocationPermissionChange = useLastCallback(() => {\n    if (!user) return;\n    toggleUserLocationPermission({ botId: user.id, isAccessGranted: !botAppPermissions?.geolocation });\n  });\n\n  const handleOpenSavedDialog = useLastCallback(() => {\n    openSavedDialog({ chatId: chatOrUserId });\n  });\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n\n  const handlePhoneClick = useLastCallback(() => {\n    if (phoneNumber?.length === FRAGMENT_PHONE_LENGTH && phoneNumber.startsWith(FRAGMENT_PHONE_CODE)) {\n      requestCollectibleInfo({ collectible: phoneNumber, peerId: peerId!, type: 'phone' });\n      return;\n    }\n    copy(formattedNumber!, oldLang('Phone'));\n  });\n\n  const handleUsernameClick = useLastCallback((username: ApiUsername, isChat?: boolean) => {\n    if (!username.isEditable) {\n      requestCollectibleInfo({ collectible: username.username, peerId: peerId!, type: 'username' });\n      return;\n    }\n    copy(formatUsername(username.username, isChat), oldLang(isChat ? 'Link' : 'Username'));\n  });\n\n  const handleOpenApp = useLastCallback(() => {\n    const botId = user?.id;\n    if (!botId) {\n      return;\n    }\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId,\n      peerId: botId,\n      theme,\n      shouldMarkBotTrusted: true,\n    });\n  });\n\n  const appTermsInfo = lang('ProfileOpenAppAbout', {\n    terms: (\n      <SafeLink\n        text={lang('ProfileOpenAppTerms')}\n        url={lang('ProfileBotOpenAppInfoLink')}\n      />\n    ),\n  }, { withNodes: true });\n\n  if (chat?.isRestricted || (isSelf && !isInSettings)) {\n    return undefined;\n  }\n\n  function renderUsernames(usernameList: ApiUsername[], isChat?: boolean) {\n    const [mainUsername, ...otherUsernames] = usernameList;\n\n    const usernameLinks = otherUsernames.length\n      ? (oldLang('UsernameAlso', '%USERNAMES%') as string)\n        .split('%')\n        .map((s) => {\n          return (s === 'USERNAMES' ? (\n            <>\n              {otherUsernames.map((username, idx) => {\n                return (\n                  <>\n                    {idx > 0 ? ', ' : ''}\n                    <a\n                      key={username.username}\n                      href={formatUsername(username.username, true)}\n                      onMouseDown={stopEvent}\n                      onClick={(e) => {\n                        stopEvent(e);\n                        handleUsernameClick(username, isChat);\n                      }}\n                      className=\"text-entity-link username-link\"\n                    >\n                      {formatUsername(username.username)}\n                    </a>\n                  </>\n                );\n              })}\n            </>\n          ) : s);\n        })\n      : undefined;\n\n    return (\n      <ListItem\n        icon={isChat ? 'link' : 'mention'}\n        multiline\n        narrow\n        ripple\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => {\n          handleUsernameClick(mainUsername, isChat);\n        }}\n      >\n        <span className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {formatUsername(mainUsername.username, isChat)}\n        </span>\n        <span className=\"subtitle\">\n          {usernameLinks && <span className=\"other-usernames\">{usernameLinks}</span>}\n          {oldLang(isChat ? 'Link' : 'Username')}\n        </span>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"ChatExtra\">\n      {personalChannel && (\n        <div className={styles.personalChannel}>\n          <h3 className={styles.personalChannelTitle}>{oldLang('ProfileChannel')}</h3>\n          <span className={styles.personalChannelSubscribers}>\n            {oldLang('Subscribers', personalChannel.membersCount, 'i')}\n          </span>\n          <Chat\n            chatId={personalChannel.id}\n            orderDiff={0}\n            animationType={ChatAnimationTypes.None}\n            isPreview\n            previewMessageId={personalChannelMessageId}\n            className={styles.personalChannelItem}\n          />\n        </div>\n      )}\n      {Boolean(formattedNumber?.length) && (\n        // eslint-disable-next-line react/jsx-no-bind\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={handlePhoneClick}>\n          <span className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>{formattedNumber}</span>\n          <span className=\"subtitle\">{oldLang('Phone')}</span>\n        </ListItem>\n      )}\n      {activeUsernames && renderUsernames(activeUsernames)}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n          allowSelection\n        >\n          <span className=\"title word-break allow-selection\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {\n              renderText(description, [\n                'br',\n                shouldRenderAllLinks ? 'links' : 'tg_links',\n                'emoji',\n              ])\n            }\n          </span>\n          <span className=\"subtitle\">{oldLang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {activeChatUsernames && !isTopicInfo && renderUsernames(activeChatUsernames, true)}\n      {((!activeChatUsernames && canInviteUsers) || isTopicInfo) && link && (\n        <ListItem\n          icon=\"link\"\n          multiline\n          narrow\n          ripple\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => copy(link, oldLang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{oldLang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {birthday && (\n        <UserBirthday key={peerId} birthday={birthday} user={user!} isInSettings={isInSettings} />\n      )}\n      { hasMainMiniApp && (\n        <ListItem\n          multiline\n          isStatic\n          narrow\n        >\n          <Button\n            className={styles.openAppButton}\n            size=\"smaller\"\n            onClick={handleOpenApp}\n          >\n            {oldLang('ProfileBotOpenApp')}\n          </Button>\n          <div className={styles.sectionInfo}>\n            {appTermsInfo}\n          </div>\n        </ListItem>\n      )}\n      {!isInSettings && (\n        <ListItem icon=\"unmute\" narrow ripple onClick={handleNotificationChange}>\n          <span>{oldLang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'}\n            checked={!isMuted}\n            inactive\n          />\n        </ListItem>\n      )}\n      {businessWorkHours && (\n        <BusinessHours businessHours={businessWorkHours} />\n      )}\n      {businessLocation && (\n        <ListItem\n          icon=\"location\"\n          ripple\n          multiline\n          narrow\n          rightElement={locationRightComponent}\n          onClick={handleClickLocation}\n        >\n          <div className=\"title\">{businessLocation.address}</div>\n          <span className=\"subtitle\">{oldLang('BusinessProfileLocation')}</span>\n        </ListItem>\n      )}\n      {hasSavedMessages && !isInSettings && (\n        <ListItem icon=\"saved-messages\" narrow ripple onClick={handleOpenSavedDialog}>\n          <span>{oldLang('SavedMessagesTab')}</span>\n        </ListItem>\n      )}\n      {userFullInfo && 'isBotAccessEmojiGranted' in userFullInfo && (\n        <ListItem icon=\"user\" narrow ripple onClick={manageEmojiStatusChange}>\n          <span>{oldLang('BotProfilePermissionEmojiStatus')}</span>\n          <Switcher\n            label={oldLang('BotProfilePermissionEmojiStatus')}\n            checked={isBotCanManageEmojiStatus}\n            inactive\n          />\n        </ListItem>\n      )}\n      {botAppPermissions?.geolocation !== undefined && (\n        <ListItem icon=\"location\" narrow ripple onClick={handleLocationPermissionChange}>\n          <span>{oldLang('BotProfilePermissionLocation')}</span>\n          <Switcher\n            label={oldLang('BotProfilePermissionLocation')}\n            checked={botAppPermissions?.geolocation}\n            inactive\n          />\n        </ListItem>\n      )}\n      {botVerification && (\n        <div className={styles.botVerificationSection}>\n          <CustomEmoji\n            className={styles.botVerificationIcon}\n            documentId={botVerification.iconId}\n            size={BOT_VERIFICATION_ICON_SIZE}\n          />\n          {botVerification.description}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId, isSavedDialog }): StateProps => {\n    const { countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = chatOrUserId ? selectUser(global, chatOrUserId) : undefined;\n    const botAppPermissions = chatOrUserId ? selectBotAppPermissions(global, chatOrUserId) : undefined;\n    const isForum = chat?.isForum;\n    const isMuted = chat && getIsChatMuted(chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id));\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const topicId = isForum && threadId ? Number(threadId) : undefined;\n\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const userFullInfo = user && selectUserFullInfo(global, user.id);\n\n    const botVerification = userFullInfo?.botVerification || chatFullInfo?.botVerification;\n\n    const chatInviteLink = chatFullInfo?.inviteLink;\n    const description = userFullInfo?.bio || chatFullInfo?.about;\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    const topicLink = topicId ? selectTopicLink(global, chatOrUserId, topicId) : undefined;\n\n    const hasSavedMessages = !isSavedDialog && global.chats.listIds.saved?.includes(chatOrUserId);\n\n    const personalChannel = userFullInfo?.personalChannelId\n      ? selectChat(global, userFullInfo.personalChannelId)\n      : undefined;\n\n    const hasMainMiniApp = user?.hasMainMiniApp;\n\n    return {\n      phoneCodeList,\n      chat,\n      user,\n      userFullInfo,\n      canInviteUsers,\n      botAppPermissions,\n      isMuted,\n      topicId,\n      chatInviteLink,\n      description,\n      topicLink,\n      hasSavedMessages,\n      personalChannel,\n      hasMainMiniApp,\n      isBotCanManageEmojiStatus: userFullInfo?.isBotCanManageEmojiStatus,\n      botVerification,\n    };\n  },\n)(ChatExtra));\n","export enum RichInputKeyboardPriority {\n  Composer = 10,\n  Tool = 1,\n  Default = 0,\n}\n\nexport type RichInputKeyboardListener = {\n  priority: RichInputKeyboardPriority;\n  onKeydown: (event: KeyboardEvent) => boolean;\n};\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatFolderModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default ChatFolderModalAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './MuteChatModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst MuteChatModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MuteChatModal = useModuleLoader(Bundles.Extra, 'MuteChatModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MuteChatModal ? <MuteChatModal {...props} /> : undefined;\n};\n\nexport default MuteChatModalAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"byPckqUT\",\"indicator\":\"nl36F75B\",\"indicatorInner\":\"AA5s1Pu4\",\"selected\":\"qy2i51dM\",\"active\":\"IsUWP16T\",\"bar-animation-transform-2\":\"p_1Kbke9\",\"barAnimationTransform2\":\"p_1Kbke9\",\"bar-animation-transform-1\":\"gOCprMbJ\",\"barAnimationTransform1\":\"gOCprMbJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './ChatCallStatus.module.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n  isMobile?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n  isMobile,\n}) => {\n  return (\n    <div className={buildClassName(\n      styles.root,\n      isActive && styles.active,\n      isSelected && !isMobile && styles.selected,\n    )}\n    >\n      <div className={styles.indicator}>\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiDraft,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiTopic,\n  ApiTypeStory,\n  ApiTypingStatus,\n  ApiUser,\n  ApiUserStatus,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport {\n  groupStatefulContent,\n  isUserId,\n  isUserOnline,\n} from '../../../global/helpers';\nimport { getIsChatMuted } from '../../../global/helpers/notifications';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatLastMessage,\n  selectChatLastMessageId,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectIsCurrentUserFrozen,\n  selectIsForumPanelClosed,\n  selectIsForumPanelOpen,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectOutgoingStatus,\n  selectPeer,\n  selectPeerStory,\n  selectSender,\n  selectTabState,\n  selectThreadParam,\n  selectTopicFromMessage,\n  selectTopicsInfo,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useChatListEntry from './hooks/useChatListEntry';\n\nimport Avatar from '../../common/Avatar';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\nimport ChatCallStatus from './ChatCallStatus';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n  offsetTop?: number;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n  previewMessageId?: number;\n  className?: string;\n  observeIntersection?: ObserveFn;\n  onDragEnter?: (chatId: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  lastMessageStory?: ApiTypeStory;\n  listedTopicIds?: number[];\n  topics?: Record<number, ApiTopic>;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  lastMessageSender?: ApiPeer;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiDraft;\n  isSelected?: boolean;\n  isSelectedForum?: boolean;\n  isForumPanelOpen?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastMessageTopic?: ApiTopic;\n  typingStatus?: ApiTypingStatus;\n  withInterfaceAnimations?: boolean;\n  lastMessageId?: number;\n  lastMessage?: ApiMessage;\n  currentUserId: string;\n  isSynced?: boolean;\n  isAccountFrozen?: boolean;\n};\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  listedTopicIds,\n  topics,\n  observeIntersection,\n  chat,\n  lastMessageStory,\n  isMuted,\n  user,\n  userStatus,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  offsetTop,\n  draft,\n  withInterfaceAnimations,\n  isSelected,\n  isSelectedForum,\n  isForumPanelOpen,\n  canScrollDown,\n  canChangeFolder,\n  lastMessageTopic,\n  typingStatus,\n  lastMessageId,\n  lastMessage,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  previewMessageId,\n  className,\n  isSynced,\n  onDragEnter,\n  isAccountFrozen,\n}) => {\n  const {\n    openChat,\n    openSavedDialog,\n    toggleChatInfo,\n    focusLastMessage,\n    focusMessage,\n    loadTopics,\n    openForumPanel,\n    closeForumPanel,\n    setShouldCloseRightColumn,\n    reportMessages,\n    openFrozenAccountModal,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n\n  const { isForum, isForumAsMessages } = chat || {};\n\n  useEnsureMessage(isSavedDialog ? currentUserId : chatId, lastMessageId, lastMessage);\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    typingStatus,\n    draft,\n    statefulMediaContent: groupStatefulContent({ story: lastMessageStory }),\n    lastMessageTopic,\n    lastMessageSender,\n    observeIntersection,\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n    isSavedDialog,\n    isPreview,\n    topics,\n  });\n\n  const getIsForumPanelClosed = useSelectorSignal(selectIsForumPanelClosed);\n\n  const handleClick = useLastCallback(() => {\n    const noForumTopicPanel = isMobile && isForumAsMessages;\n\n    if (isMobile) {\n      setShouldCloseRightColumn({ value: true });\n    }\n\n    if (isPreview) {\n      focusMessage({\n        chatId,\n        messageId: previewMessageId!,\n      });\n      return;\n    }\n\n    if (isSavedDialog) {\n      openSavedDialog({ chatId, noForumTopicPanel: true }, { forceOnHeavyAnimation: true });\n\n      if (isMobile) {\n        toggleChatInfo({ force: false });\n      }\n      return;\n    }\n\n    if (isForum) {\n      if (isForumPanelOpen) {\n        closeForumPanel(undefined, { forceOnHeavyAnimation: true });\n\n        return;\n      } else {\n        if (!noForumTopicPanel) {\n          openForumPanel({ chatId }, { forceOnHeavyAnimation: true });\n        }\n\n        if (!isForumAsMessages) return;\n      }\n    }\n\n    openChat({ id: chatId, noForumTopicPanel, shouldReplaceHistory: true }, { forceOnHeavyAnimation: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const handleDragEnter = useLastCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.(chatId);\n  });\n\n  const handleDelete = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleMute = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const handleChatFolderChange = useLastCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  });\n\n  const handleReport = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    if (!chat) return;\n    reportMessages({ chatId: chat.id, messageIds: [] });\n  });\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleMute,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    isSavedDialog,\n    currentUserId,\n    isPreview,\n    topics,\n  });\n\n  const isIntersecting = useIsIntersecting(ref, chat ? observeIntersection : undefined);\n\n  // Load the forum topics to display unread count badge\n  useEffect(() => {\n    if (isIntersecting && isForum && isSynced && listedTopicIds === undefined) {\n      loadTopics({ chatId });\n    }\n  }, [chatId, listedTopicIds, isSynced, isForum, isIntersecting]);\n\n  const isOnline = user && userStatus && isUserOnline(user, userStatus);\n  const { hasShownClass: isAvatarOnlineShown } = useShowTransitionDeprecated(isOnline);\n\n  const href = useMemo(() => {\n    if (!IS_OPEN_IN_NEW_TAB_SUPPORTED) return undefined;\n\n    if (isSavedDialog) {\n      return `#${createLocationHash(currentUserId, 'thread', chatId)}`;\n    }\n\n    return `#${createLocationHash(chatId, 'thread', MAIN_THREAD_ID)}`;\n  }, [chatId, currentUserId, isSavedDialog]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = user || chat;\n\n  const chatClassName = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isForum && 'forum',\n    isSelected && 'selected',\n    isSelectedForum && 'selected-forum',\n    isPreview && 'standalone',\n    className,\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={chatClassName}\n      href={href}\n      style={`top: ${offsetTop}px`}\n      ripple={!isForum && !isMobile}\n      contextActions={contextActions}\n      onClick={handleClick}\n      onDragEnter={handleDragEnter}\n      withPortalForMenu\n    >\n      <div className={buildClassName('status', 'status-clickable')}>\n        <Avatar\n          peer={peer}\n          isSavedMessages={user?.isSelf}\n          isSavedDialog={isSavedDialog}\n          size={isPreview ? 'medium' : 'large'}\n          withStory={!user?.isSelf}\n          withStoryGap={isAvatarOnlineShown || Boolean(chat.subscriptionUntil)}\n          storyViewerOrigin={StoryViewerOrigin.ChatList}\n          storyViewerMode=\"single-peer\"\n        />\n        <div className=\"avatar-badge-wrapper\">\n          <div\n            className={buildClassName('avatar-online', 'avatar-badge', isAvatarOnlineShown && 'avatar-online-shown')}\n          />\n          {!isAvatarOnlineShown && Boolean(chat.subscriptionUntil) && (\n            <StarIcon type=\"gold\" className=\"avatar-badge avatar-subscription\" size=\"adaptive\" />\n          )}\n          <ChatBadge\n            chat={chat}\n            isMuted={isMuted}\n            shouldShowOnlyMostImportant\n            forceHidden={getIsForumPanelClosed}\n            topics={topics}\n            isSelected={isSelected}\n          />\n        </div>\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isMobile={isMobile} isSelected={isSelected} isActive={withInterfaceAnimations} />\n        )}\n      </div>\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === user?.id && user?.isSelf}\n            isSavedDialog={isSavedDialog}\n            observeIntersection={observeIntersection}\n          />\n          {isMuted && !isSavedDialog && <Icon name=\"muted\" />}\n          <div className=\"separator\" />\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={!isSavedDialog ? lastMessageOutgoingStatus : undefined}\n              draftDate={draft?.date}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          {!isPreview && (\n            <ChatBadge\n              chat={chat}\n              isPinned={isPinned}\n              isMuted={isMuted}\n              isSavedDialog={isSavedDialog}\n              hasMiniApp={user?.hasMainMiniApp}\n              topics={topics}\n              isSelected={isSelected}\n            />\n          )}\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n          isSavedDialog={isSavedDialog}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, isSavedDialog, isPreview, previewMessageId,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const user = selectUser(global, chatId);\n    if (!chat) {\n      return {\n        currentUserId: global.currentUserId!,\n      };\n    }\n\n    const lastMessageId = previewMessageId || selectChatLastMessageId(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const lastMessage = previewMessageId\n      ? selectChatMessage(global, chatId, previewMessageId)\n      : selectChatLastMessage(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const { isOutgoing, forwardInfo } = lastMessage || {};\n    const savedDialogSender = isSavedDialog && forwardInfo?.fromId ? selectPeer(global, forwardInfo.fromId) : undefined;\n    const messageSender = lastMessage ? selectSender(global, lastMessage) : undefined;\n    const lastMessageSender = savedDialogSender || messageSender;\n\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = !isPreview && chatId === currentChatId && (isSavedDialog\n      ? chatId === currentThreadId : currentThreadId === MAIN_THREAD_ID);\n    const isSelectedForum = (chat.isForum && chatId === currentChatId)\n      || chatId === selectTabState(global).forumPanelChatId;\n\n    const userStatus = selectUserStatus(global, chatId);\n    const lastMessageTopic = lastMessage && selectTopicFromMessage(global, lastMessage);\n\n    const typingStatus = selectThreadParam(global, chatId, MAIN_THREAD_ID, 'typingStatus');\n\n    const topicsInfo = selectTopicsInfo(global, chatId);\n\n    const storyData = lastMessage?.content.storyData;\n    const lastMessageStory = storyData && selectPeerStory(global, storyData.peerId, storyData.id);\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n    return {\n      chat,\n      isMuted: getIsChatMuted(chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id)),\n      lastMessageSender,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      isSelected,\n      isSelectedForum,\n      isForumPanelOpen: selectIsForumPanelOpen(global),\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: (global.chatFolders.orderedIds?.length || 0) > 1,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      user,\n      userStatus,\n      lastMessageTopic,\n      typingStatus,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      lastMessage,\n      lastMessageId,\n      currentUserId: global.currentUserId!,\n      listedTopicIds: topicsInfo?.listedTopicIds,\n      topics: topicsInfo?.topicsById,\n      isSynced: global.isSynced,\n      lastMessageStory,\n      isAccountFrozen,\n    };\n  },\n)(Chat));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { getServerTime } from '../../../util/serverTime';\nimport { isSignal } from '../../../util/signals';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\n\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ShowTransition from '../../ui/ShowTransition';\n\nimport './ChatBadge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topic?: ApiTopic;\n  wasTopicOpened?: boolean;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  isSavedDialog?: boolean;\n  shouldShowOnlyMostImportant?: boolean;\n  hasMiniApp?: boolean;\n  forceHidden?: boolean | Signal<boolean>;\n  topics?: Record<number, ApiTopic>;\n  isSelected?: boolean;\n};\n\nconst ChatBadge: FC<OwnProps> = ({\n  topic,\n  topics,\n  chat,\n  isPinned,\n  isMuted,\n  shouldShowOnlyMostImportant,\n  wasTopicOpened,\n  forceHidden,\n  isSavedDialog,\n  hasMiniApp,\n  isSelected,\n}) => {\n  const { requestMainWebView } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const {\n    unreadMentionsCount = 0, unreadReactionsCount = 0,\n  } = !chat.isForum ? chat : {}; // TODO[forums] Unread mentions and reactions temporarily disabled for forums\n\n  const isTopicUnopened = !isPinned && topic && !wasTopicOpened;\n  const isForum = chat.isForum && !topic;\n  const topicsWithUnread = useMemo(() => (\n    isForum && topics ? Object.values(topics).filter(({ unreadCount }) => unreadCount) : undefined\n  ), [topics, isForum]);\n\n  const unreadCount = useMemo(() => {\n    if (!isForum) {\n      return (topic || chat).unreadCount;\n    }\n\n    return topicsWithUnread?.length;\n  }, [chat, topic, topicsWithUnread, isForum]);\n\n  const shouldBeUnMuted = useMemo(() => {\n    if (!isForum) {\n      return !isMuted || topic?.notifySettings.mutedUntil === 0;\n    }\n\n    if (isMuted) {\n      return topicsWithUnread?.some((acc) => acc.notifySettings.mutedUntil === 0);\n    }\n\n    const isEveryUnreadMuted = topicsWithUnread?.every((acc) => (\n      acc.notifySettings.mutedUntil && acc.notifySettings.mutedUntil > getServerTime()\n    ));\n\n    return !isEveryUnreadMuted;\n  }, [isForum, isMuted, topicsWithUnread, topic?.notifySettings.mutedUntil]);\n\n  const hasUnreadMark = topic ? false : chat.hasUnreadMark;\n\n  const resolvedForceHidden = useDerivedState(\n    () => (isSignal(forceHidden) ? forceHidden() : forceHidden),\n    [forceHidden],\n  );\n  const isShown = !resolvedForceHidden && Boolean(\n    unreadCount || unreadMentionsCount || hasUnreadMark || isPinned || unreadReactionsCount\n    || isTopicUnopened || hasMiniApp,\n  );\n\n  const isUnread = Boolean((unreadCount || hasUnreadMark) && !isSavedDialog);\n  const className = buildClassName(\n    'ChatBadge',\n    !shouldBeUnMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  const handleOpenApp = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId: chat.id,\n      peerId: chat.id,\n      theme,\n    });\n  });\n\n  function renderContent() {\n    const unreadReactionsElement = unreadReactionsCount && (\n      <div className={buildClassName('ChatBadge reaction', !shouldBeUnMuted && 'muted')}>\n        <Icon name=\"heart\" />\n      </div>\n    );\n\n    const unreadMentionsElement = unreadMentionsCount && (\n      <div className=\"ChatBadge mention\">\n        <Icon name=\"mention\" />\n      </div>\n    );\n\n    const unopenedTopicElement = isTopicUnopened && (\n      <div className={buildClassName('ChatBadge unopened', !shouldBeUnMuted && 'muted')} />\n    );\n\n    const unreadCountElement = (hasUnreadMark || unreadCount) ? (\n      <div className={className}>\n        {!hasUnreadMark && <AnimatedCounter text={formatIntegerCompact(lang, unreadCount!)} />}\n      </div>\n    ) : undefined;\n\n    const pinnedElement = isPinned && (\n      <div className={className}>\n        <Icon name=\"pinned-chat\" />\n      </div>\n    );\n\n    const miniAppButton = hasMiniApp && (\n      <Button\n        color={isSelected ? 'secondary' : 'primary'}\n        className=\"ChatBadge miniapp\"\n        pill\n        size=\"tiny\"\n        onClick={handleOpenApp}\n      >\n        {oldLang('BotOpen')}\n      </Button>\n    );\n\n    const visiblePinnedElement = !unreadCountElement && !unreadMentionsElement && !unreadReactionsElement\n      && pinnedElement;\n\n    const elements = [\n      unopenedTopicElement, unreadReactionsElement, unreadMentionsElement, unreadCountElement, visiblePinnedElement,\n    ].filter(Boolean);\n\n    if (isSavedDialog) return pinnedElement;\n\n    // Show only if empty or have pinned icon\n    if (hasMiniApp && (elements.length === 0 || visiblePinnedElement)) return miniAppButton;\n\n    if (elements.length === 0) return undefined;\n\n    if (elements.length === 1) return elements[0];\n\n    if (shouldShowOnlyMostImportant) {\n      const importanceOrderedElements = [\n        unreadMentionsElement, unreadCountElement, unreadReactionsElement, pinnedElement,\n      ].filter(Boolean);\n      return importanceOrderedElements[0];\n    }\n\n    return (\n      <div className=\"ChatBadge-wrapper\">\n        {elements}\n      </div>\n    );\n  }\n\n  return (\n    <ShowTransition isCustom className=\"ChatBadge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(ChatBadge);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport {\n  getActions, getGlobal, setGlobal, withGlobal,\n} from '../../../global';\n\nimport type { CustomEmojiIconsFolder, GlobalState } from '../../../global/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport type { IconName } from '../../../types/icons';\nimport type { MenuItemContextAction } from '../../ui/ListItem';\nimport type { TabWithProperties } from '../../ui/TabList';\nimport {\n  type ApiChatFolder, type ApiChatlistExportedInvite, type ApiSession, type ApiSticker,\n} from '../../../api/types';\nimport { type LeftColumnContent, SettingsScreens } from '../../../types';\n\nimport { ALL_FOLDER_ID } from '../../../config';\nimport {\n  selectCanAnimateInterface, selectCanShareFolder, selectIsCurrentUserFrozen, selectTabState,\n} from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport {\n  useFolderManagerForUnreadChatsByFolder,\n  useFolderManagerForUnreadCounters,\n} from '../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport StickerView from '../../common/StickerView';\nimport StoryRibbon from '../../story/StoryRibbon';\nimport TabList from '../../ui/TabList';\nimport Transition from '../../ui/Transition';\nimport ChatList from './ChatList';\n\nexport const DEFAULT_FOLDER_ICON = '📁';\n\ntype OwnProps = {\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n  foldersDispatch: FolderEditDispatch;\n  onLeftColumnContentChange: (content: LeftColumnContent) => void;\n  shouldHideFolderTabs?: boolean;\n  isForumPanelOpen?: boolean;\n};\n\ntype StateProps = {\n  foldersVertical: boolean;\n  canAnimate: boolean;\n  customEmojisById: Record<number, ApiSticker>;\n  customEmojiIcons: CustomEmojiIconsFolder;\n  chatFoldersById: Record<number, ApiChatFolder>;\n  folderInvitesById: Record<number, ApiChatlistExportedInvite[]>;\n  orderedFolderIds?: number[];\n  activeChatFolder: number;\n  currentUserId?: string;\n  shouldSkipHistoryAnimations?: boolean;\n  maxFolders: number;\n  maxChatLists: number;\n  maxFolderInvites: number;\n  hasArchivedChats?: boolean;\n  hasArchivedStories?: boolean;\n  archiveSettings: GlobalState['archiveSettings'];\n  isStoryRibbonShown?: boolean;\n  sessions?: Record<string, ApiSession>;\n  isAccountFrozen?: boolean;\n};\n\nconst SAVED_MESSAGES_HOTKEY = '0';\nconst FIRST_FOLDER_INDEX = 0;\n\nexport const EMOTICON_TO_FOLDER_ICON: { [key: string]: IconName } = {\n  '💬': 'chats',\n  '✅': 'comments-sticker',\n  '👤': 'user-filled',\n  '👥': 'group-filled',\n  '⭐': 'star-small',\n  '📢': 'channel-filled',\n  '🤖': 'bot',\n  '📁': 'folder-badge',\n};\n\nexport const LOCSTOR_CUSTOM_EMOJI_KEY = 'CustomEmojisForFolders';\n\nexport function getLocalStorageFolderIcons():CustomEmojiIconsFolder {\n  let customEmojiIcons:CustomEmojiIconsFolder = {};\n\n  const storage = localStorage.getItem(LOCSTOR_CUSTOM_EMOJI_KEY);\n  if (storage) {\n    try {\n      customEmojiIcons = JSON.parse(storage);\n    } catch {\n      customEmojiIcons = {};\n      localStorage.setItem(LOCSTOR_CUSTOM_EMOJI_KEY, JSON.stringify({}));\n    }\n  }\n\n  return customEmojiIcons;\n}\n\nexport function getIconNameByFolder(folder: ApiChatFolder | Omit<ApiChatFolder, 'id' | 'description'>) {\n  if (folder.emoticon) {\n    return EMOTICON_TO_FOLDER_ICON[folder.emoticon];\n  } else if (folder.excludeRead) { // unread\n    return 'chats-badge';\n  } else if (folder.contacts === true && folder.nonContacts === true && folder.channels === false) { // personal\n    return 'user-filled';\n  } else if (folder.channels === false && folder.nonContacts === true) { // non-contacts\n    return 'user-filled';\n  } else if (folder.channels === false && folder.groups === true) { // groups\n    return 'group-filled';\n  } else if (folder.channels === false && folder.contacts === true) { // contacts\n    return 'user-filled';\n  } else if (folder.bots === true && folder.channels === false) { // bots\n    return 'bot';\n  }\n  return undefined;\n}\n\nconst ChatFolders: FC<OwnProps & StateProps> = ({\n  foldersDispatch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n  customEmojiIcons,\n  canAnimate,\n  foldersVertical,\n  chatFoldersById,\n  orderedFolderIds,\n  activeChatFolder,\n  currentUserId,\n  isForumPanelOpen,\n  shouldSkipHistoryAnimations,\n  maxFolders,\n  maxChatLists,\n  shouldHideFolderTabs,\n  folderInvitesById,\n  maxFolderInvites,\n  hasArchivedChats,\n  hasArchivedStories,\n  archiveSettings,\n  isStoryRibbonShown,\n  sessions,\n  isAccountFrozen,\n}) => {\n  const {\n    loadChatFolders,\n    setActiveChatFolder,\n    openChat,\n    openShareChatFolderModal,\n    openDeleteChatFolderModal,\n    openEditChatFolder,\n    openLimitReachedModal,\n    markChatMessagesRead,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  // eslint-disable-next-line no-null/no-null\n  const transitionRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  useEffect(() => {\n    loadChatFolders();\n  }, []);\n\n  const {\n    ref,\n    shouldRender: shouldRenderStoryRibbon,\n    getIsClosing: getIsStoryRibbonClosing,\n  } = useShowTransition({\n    isOpen: isStoryRibbonShown,\n    className: false,\n    withShouldRender: true,\n  });\n  const isStoryRibbonClosing = useDerivedState(getIsStoryRibbonClosing);\n\n  const scrollToTop = useLastCallback(() => {\n    const activeList = ref.current?.querySelector<HTMLElement>('.chat-list.Transition_slide-active');\n    activeList?.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  });\n\n  const allChatsFolder: ApiChatFolder = useMemo(() => {\n    return {\n      id: ALL_FOLDER_ID,\n      title: { text: orderedFolderIds?.[0] === ALL_FOLDER_ID ? lang('FilterAllChatsShort') : lang('FilterAllChats') },\n      includedChatIds: MEMO_EMPTY_ARRAY,\n      excludedChatIds: MEMO_EMPTY_ARRAY,\n      emoticon: DEFAULT_FOLDER_ICON,\n    } satisfies ApiChatFolder;\n  }, [orderedFolderIds, lang]);\n\n  const displayedFolders = useMemo(() => {\n    return orderedFolderIds\n      ? orderedFolderIds.map((id) => {\n        if (id === ALL_FOLDER_ID) {\n          return allChatsFolder;\n        }\n\n        return chatFoldersById[id] || {};\n      }).filter(Boolean)\n      : undefined;\n  }, [chatFoldersById, allChatsFolder, orderedFolderIds]);\n\n  const allChatsFolderIndex = displayedFolders?.findIndex((folder) => folder.id === ALL_FOLDER_ID);\n  const isInAllChatsFolder = allChatsFolderIndex === activeChatFolder;\n  const isInFirstFolder = FIRST_FOLDER_INDEX === activeChatFolder;\n\n  const folderUnreadChatsCountersById = useFolderManagerForUnreadChatsByFolder();\n  const handleReadAllChats = useLastCallback((folderId: number) => {\n    const unreadChatIds = folderUnreadChatsCountersById[folderId];\n    if (!unreadChatIds?.length) return;\n\n    unreadChatIds.forEach((chatId) => {\n      markChatMessagesRead({ id: chatId });\n    });\n  });\n\n  const folderCountersById = useFolderManagerForUnreadCounters();\n  const folderTabs = useMemo(() => {\n    if (!displayedFolders || !displayedFolders.length) {\n      return undefined;\n    }\n\n    return displayedFolders.map((folder, i) => {\n      const { id, title } = folder;\n      const isBlocked = id !== ALL_FOLDER_ID && i > maxFolders - 1;\n      const canShareFolder = selectCanShareFolder(getGlobal(), id);\n      const contextActions: MenuItemContextAction[] = [];\n\n      if (canShareFolder) {\n        contextActions.push({\n          title: lang('FilterShare'),\n          icon: 'link',\n          handler: () => {\n            const chatListCount = Object.values(chatFoldersById).reduce((acc, el) => acc + (el.isChatList ? 1 : 0), 0);\n            if (chatListCount >= maxChatLists && !folder.isChatList) {\n              openLimitReachedModal({\n                limit: 'chatlistJoined',\n              });\n              return;\n            }\n\n            // Greater amount can be after premium downgrade\n            if (folderInvitesById[id]?.length >= maxFolderInvites) {\n              openLimitReachedModal({\n                limit: 'chatlistInvites',\n              });\n              return;\n            }\n\n            openShareChatFolderModal({\n              folderId: id,\n            });\n          },\n        });\n      }\n\n      if (id === ALL_FOLDER_ID) {\n        contextActions.push({\n          title: lang('FilterEditFolders'),\n          icon: 'edit',\n          handler: () => {\n            onSettingsScreenSelect(SettingsScreens.Folders);\n          },\n        });\n\n        if (folderUnreadChatsCountersById[id]?.length) {\n          contextActions.push({\n            title: lang('ChatListMarkAllAsRead'),\n            icon: 'readchats',\n            handler: () => handleReadAllChats(folder.id),\n          });\n        }\n      } else {\n        contextActions.push({\n          title: lang('EditFolder'),\n          icon: 'edit',\n          handler: () => {\n            openEditChatFolder({ folderId: id });\n          },\n        });\n\n        if (folderUnreadChatsCountersById[id]?.length) {\n          contextActions.push({\n            title: lang('ChatListMarkAllAsRead'),\n            icon: 'readchats',\n            handler: () => handleReadAllChats(folder.id),\n          });\n        }\n\n        contextActions.push({\n          title: lang('FilterMenuDelete'),\n          icon: 'delete',\n          destructive: true,\n          handler: () => {\n            openDeleteChatFolderModal({ folderId: id });\n          },\n        });\n      }\n\n      const unicodeEmoji = typeof customEmojiIcons[id] === 'string' ? customEmojiIcons[id] : undefined;\n      if (unicodeEmoji) {\n        folder.emoticon = unicodeEmoji as string;\n      }\n\n      const iconStyle: IconName | undefined = getIconNameByFolder(folder);\n      const iconStyleOrDefault: string = `${iconStyle ? `icon icon-${iconStyle}` : 'icon icon-folder-badge'}`;\n\n      const tabText = renderTextWithEntities({\n        text: title.text,\n        entities: title.entities,\n        noCustomEmojiPlayback: folder.noTitleAnimations,\n      });\n\n      const customEmoji = typeof customEmojiIcons[id] !== 'string' ? customEmojiIcons[id]\n        : undefined;\n\n      return {\n        shouldUseTextColor: (customEmoji as ApiSticker | undefined)?.shouldUseTextColor ?? false,\n        id,\n        icon: (\n          <> {!isMobile && foldersVertical && (\n\n            customEmoji ? (\n              <div className=\"emoji-wrapper\">\n                <StickerView\n                  containerRef={ref}\n                  sticker={customEmoji as ApiSticker}\n                  size={30}\n                  shouldLoop\n                  widthLoadingCircle\n                  shouldPreloadPreview\n                  noLoad={!true}\n                  noPlay={!canAnimate}\n                  noVideoOnMobile\n                  withTranslucentThumb={false}\n                />\n              </div>\n            ) : (\n              (iconStyle || !folder.emoticon) ? (\n                <i className={iconStyleOrDefault} />\n              ) : (\n                <i className=\"icon as-emoji\">{folder.emoticon}</i>\n              )\n            )\n          )}\n          </>),\n        title: (\n          <div className=\"tab-name\">{tabText}</div>\n        ),\n        badgeCount: folderCountersById[id]?.chatsCount,\n        isBadgeActive: Boolean(folderCountersById[id]?.notificationsCount),\n        isBlocked,\n        contextActions: contextActions?.length ? contextActions : undefined,\n      } satisfies TabWithProperties;\n    });\n  }, [\n    displayedFolders, maxFolders, folderCountersById, lang, chatFoldersById, maxChatLists, folderInvitesById,\n    maxFolderInvites, folderUnreadChatsCountersById, onSettingsScreenSelect, customEmojiIcons,\n    canAnimate, isMobile, ref, foldersVertical,\n  ]);\n\n  const handleSwitchTab = useLastCallback((index: number) => {\n    setActiveChatFolder({ activeChatFolder: index }, { forceOnHeavyAnimation: true });\n    if (activeChatFolder === index) {\n      scrollToTop();\n    }\n  });\n\n  // Prevent `activeTab` pointing at non-existing folder after update\n  useEffect(() => {\n    if (!folderTabs?.length) {\n      return;\n    }\n\n    if (activeChatFolder >= folderTabs.length) {\n      setActiveChatFolder({ activeChatFolder: FIRST_FOLDER_INDEX });\n    }\n  }, [activeChatFolder, folderTabs, setActiveChatFolder]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV || !folderTabs?.length || isForumPanelOpen) {\n      return undefined;\n    }\n\n    return captureEvents(transitionRef.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: ((e, direction) => {\n        if (direction === SwipeDirection.Left) {\n          setActiveChatFolder(\n            { activeChatFolder: Math.min(activeChatFolder + 1, folderTabs.length - 1) },\n            { forceOnHeavyAnimation: true },\n          );\n          return true;\n        } else if (direction === SwipeDirection.Right) {\n          setActiveChatFolder({ activeChatFolder: Math.max(0, activeChatFolder - 1) }, { forceOnHeavyAnimation: true });\n          return true;\n        }\n\n        return false;\n      }),\n    });\n  }, [activeChatFolder, folderTabs, isForumPanelOpen, setActiveChatFolder]);\n\n  const isNotInFirstFolderRef = useRef();\n  isNotInFirstFolderRef.current = !isInFirstFolder;\n  useEffect(() => (isNotInFirstFolderRef.current ? captureEscKeyListener(() => {\n    if (isNotInFirstFolderRef.current) {\n      setActiveChatFolder({ activeChatFolder: FIRST_FOLDER_INDEX });\n    }\n  }) : undefined), [activeChatFolder, setActiveChatFolder]);\n\n  useHistoryBack({\n    isActive: !isInFirstFolder,\n    onBack: () => setActiveChatFolder({ activeChatFolder: FIRST_FOLDER_INDEX }, { forceOnHeavyAnimation: true }),\n  });\n\n  useEffect(() => {\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (e.ctrlKey && e.shiftKey && e.code.startsWith('Digit') && folderTabs) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit) return;\n\n        if (digit === SAVED_MESSAGES_HOTKEY) {\n          openChat({ id: currentUserId, shouldReplaceHistory: true });\n          return;\n        }\n\n        const folder = Number(digit) - 1;\n        if (folder > folderTabs.length - 1) return;\n\n        setActiveChatFolder({ activeChatFolder: folder }, { forceOnHeavyAnimation: true });\n        e.preventDefault();\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown, true);\n    };\n  }, [currentUserId, folderTabs, openChat, setActiveChatFolder]);\n\n  const {\n    ref: placeholderRef,\n    shouldRender: shouldRenderPlaceholder,\n  } = useShowTransition({\n    isOpen: !orderedFolderIds,\n    noMountTransition: true,\n    withShouldRender: true,\n  });\n\n  function renderCurrentTab(isActive: boolean) {\n    const activeFolder = Object.values(chatFoldersById)\n      .find(({ id }) => id === folderTabs![activeChatFolder].id);\n    const isFolder = activeFolder && !isInAllChatsFolder;\n\n    return (\n      <ChatList\n        folderType={isFolder ? 'folder' : 'all'}\n        folderId={isFolder ? activeFolder.id : undefined}\n        isActive={isActive}\n        isForumPanelOpen={isForumPanelOpen}\n        foldersDispatch={foldersDispatch}\n        onSettingsScreenSelect={onSettingsScreenSelect}\n        onLeftColumnContentChange={onLeftColumnContentChange}\n        canDisplayArchive={(hasArchivedChats || hasArchivedStories) && !archiveSettings.isHidden}\n        archiveSettings={archiveSettings}\n        sessions={sessions}\n        isAccountFrozen={isAccountFrozen}\n      />\n    );\n  }\n\n  const shouldRenderFolders = folderTabs && folderTabs.length > 1;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'ChatFolders',\n        shouldRenderFolders && shouldHideFolderTabs && 'ChatFolders--tabs-hidden',\n        shouldRenderStoryRibbon && 'with-story-ribbon',\n        !shouldRenderFolders && 'no-folders',\n        foldersVertical && 'folders-vertical',\n      )}\n    >\n      {shouldRenderStoryRibbon && <StoryRibbon isClosing={isStoryRibbonClosing} />}\n      {shouldRenderFolders ? (\n        <TabList\n          contextRootElementSelector=\"#LeftColumn\"\n          tabs={folderTabs}\n          activeTab={activeChatFolder}\n          onSwitchTab={handleSwitchTab}\n          className={buildClassName()}\n        />\n      ) : shouldRenderPlaceholder ? (\n        <div ref={placeholderRef} className=\"tabs-placeholder\" />\n      ) : undefined}\n      <Transition\n        ref={transitionRef}\n        name={shouldSkipHistoryAnimations ? 'none' : lang.isRtl ? 'slideOptimizedRtl' : 'slideOptimized'}\n        activeKey={activeChatFolder}\n        renderCount={shouldRenderFolders ? folderTabs.length : undefined}\n      >\n        {(isActive: boolean) => {\n          return (\n            <>\n              {renderCurrentTab(isActive)}\n            </>\n          );\n        }}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const customEmojisById = global.customEmojis.byId;\n\n    // we get custom emojis saved in locstor and add them to the global\n    // to make sure it won't get stuck eternally loading the said emoji\n    // on the main screen\n    const customEmojiIcons:CustomEmojiIconsFolder = getLocalStorageFolderIcons();\n\n    for (const iconsByFolder of Object.values(customEmojiIcons)) {\n      // this cuts off unicode emojis\n      if (typeof iconsByFolder !== 'string') {\n        // saving emojis to global\n        global.customEmojis.byId[iconsByFolder.id] = iconsByFolder;\n        customEmojisById[iconsByFolder.id] = iconsByFolder;\n      }\n    }\n    setGlobal(global);\n\n    const {\n      chatFolders: {\n        byId: chatFoldersById,\n        orderedIds: orderedFolderIds,\n        invites: folderInvitesById,\n      },\n      chats: {\n        listIds: {\n          archived,\n        },\n      },\n      stories: {\n        orderedPeerIds: {\n          archived: archivedStories,\n        },\n      },\n      activeSessions: {\n        byHash: sessions,\n      },\n      currentUserId,\n      archiveSettings,\n    } = global;\n    const { shouldSkipHistoryAnimations, activeChatFolder } = selectTabState(global);\n    const { storyViewer: { isRibbonShown: isStoryRibbonShown } } = selectTabState(global);\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n    const canAnimate = selectCanAnimateInterface(global);\n\n    const foldersView = global.settings.byKey.foldersView;\n\n    return {\n      foldersVertical: foldersView === 'side',\n      canAnimate,\n      customEmojisById,\n      customEmojiIcons,\n      chatFoldersById,\n      folderInvitesById,\n      orderedFolderIds,\n      activeChatFolder,\n      currentUserId,\n      shouldSkipHistoryAnimations,\n      hasArchivedChats: Boolean(archived?.length),\n      hasArchivedStories: Boolean(archivedStories?.length),\n      maxFolders: selectCurrentLimit(global, 'dialogFilters'),\n      maxFolderInvites: selectCurrentLimit(global, 'chatlistInvites'),\n      maxChatLists: selectCurrentLimit(global, 'chatlistJoined'),\n      archiveSettings,\n      isStoryRibbonShown,\n      sessions,\n      isAccountFrozen,\n    };\n  },\n)(ChatFolders));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sG8AAzvK\",\"minimized\":\"lTOui0dp\",\"button\":\"bNkLqJf1\",\"title\":\"rMTpNazX\",\"unread-count\":\"O7esHjyC\",\"unreadCount\":\"O7esHjyC\",\"info\":\"OS2LWzdu\",\"name\":\"bkCtPuPQ\",\"icon\":\"f4LUPgr4\",\"avatarWrapper\":\"RMY__Znz\",\"avatar\":\"qeb0Aox1\",\"chatsPreview\":\"_1817Hwgd\",\"unread\":\"SS39xuL3\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type { CustomPeer } from '../../../types';\n\nimport { ARCHIVED_FOLDER_ID } from '../../../config';\nimport { getChatTitle } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport { useFolderManagerForOrderedIds, useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\nimport useLang from '../../../hooks/useLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Badge from '../../ui/Badge';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\nimport styles from './Archive.module.scss';\n\ntype OwnProps = {\n  archiveSettings: GlobalState['archiveSettings'];\n  onDragEnter?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PREVIEW_SLICE = 5;\nconst ARCHIVE_CUSTOM_PEER: CustomPeer = {\n  isCustomPeer: true,\n  title: 'Archived Chats',\n  avatarIcon: 'archive-filled',\n  customPeerAvatarColor: '#9EAAB5',\n};\n\nconst Archive: FC<OwnProps> = ({\n  archiveSettings,\n  onDragEnter,\n  onClick,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useLang();\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const unreadCounters = useFolderManagerForUnreadCounters();\n  const archiveUnreadCount = unreadCounters[ARCHIVED_FOLDER_ID]?.chatsCount;\n\n  const previewItems = useMemo(() => {\n    if (!orderedChatIds?.length) return lang('Loading');\n\n    const chatsById = getGlobal().chats.byId;\n\n    return orderedChatIds.slice(0, PREVIEW_SLICE).map((chatId, i, arr) => {\n      const isLast = i === arr.length - 1;\n      const chat = chatsById[chatId];\n      if (!chat) {\n        return undefined;\n      }\n\n      const title = getChatTitle(lang, chat);\n\n      return (\n        <>\n          <span className={buildClassName(styles.chat, archiveUnreadCount && chat.unreadCount && styles.unread)}>\n            {renderText(title)}\n          </span>\n          {isLast ? '' : ', '}\n        </>\n      );\n    });\n  }, [orderedChatIds, lang, archiveUnreadCount]);\n\n  const contextActions = useMemo(() => {\n    const actionMinimize = !archiveSettings.isMinimized && {\n      title: lang('ContextArchiveCollapse'),\n      icon: 'collapse',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionExpand = archiveSettings.isMinimized && {\n      title: lang('ContextArchiveExpand'),\n      icon: 'expand',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: false });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionHide = {\n      title: lang('ContextArchiveToMenu'),\n      icon: 'archive-to-main',\n      handler: () => {\n        updateArchiveSettings({ isHidden: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    return compact([actionMinimize, actionExpand, actionHide]);\n  }, [archiveSettings.isMinimized, lang, updateArchiveSettings]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.();\n  }, [onDragEnter]);\n\n  function renderCollapsed() {\n    return (\n      <div className={buildClassName(styles.info, 'info')}>\n        <div className=\"info-row\">\n          <div className={buildClassName('title', styles.title)}>\n            <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>\n              <Icon name=\"archive-filled\" className={styles.icon} />\n              {lang('ArchivedChats')}\n            </h3>\n          </div>\n          <Badge\n            className={styles.unreadCount}\n            text={archiveUnreadCount ? formatIntegerCompact(lang, archiveUnreadCount) : undefined}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderRegular() {\n    return (\n      <>\n        <div className={buildClassName('status', styles.avatarWrapper)}>\n          <Avatar peer={ARCHIVE_CUSTOM_PEER} />\n        </div>\n        <div className={buildClassName(styles.info, 'info')}>\n          <div className=\"info-row\">\n            <div className={buildClassName('title', styles.title)}>\n              <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>{lang('ArchivedChats')}</h3>\n            </div>\n          </div>\n          <div className=\"subtitle\">\n            <div className={buildClassName('status', styles.chatsPreview)}>\n              {previewItems}\n            </div>\n            <Badge\n              className={styles.unreadCount}\n              text={archiveUnreadCount ? formatIntegerCompact(lang, archiveUnreadCount) : undefined}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <ListItem\n      onClick={onClick}\n      onDragEnter={handleDragEnter}\n      className={buildClassName(\n        styles.root,\n        archiveSettings.isMinimized && styles.minimized,\n        'chat-item-clickable',\n        'chat-item-archive',\n      )}\n      buttonClassName={styles.button}\n      contextActions={contextActions}\n      withPortalForMenu\n    >\n      {archiveSettings.isMinimized ? renderCollapsed() : renderRegular()}\n    </ListItem>\n  );\n};\n\nexport default memo(Archive);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"yftKUVDQ\",\"sticker\":\"UCBfMOiz\",\"title\":\"dB9cHelg\",\"description\":\"TJ_liZcJ\",\"is-ios\":\"z51XfrFn\",\"isIos\":\"z51XfrFn\",\"is-macos\":\"tiLqJXxs\",\"isMacos\":\"tiLqJXxs\",\"button-text\":\"aL7e0w4t\",\"buttonText\":\"aL7e0w4t\",\"centered\":\"NefQ8HbN\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyFolder.module.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst ICON_SIZE = 96;\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch, onSettingsScreenSelect,\n}) => {\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch({ type: 'editFolder', payload: chatFolder });\n    onSettingsScreenSelect(SettingsScreens.FoldersEditFolderFromChatList);\n  }, [chatFolder, foldersDispatch, onSettingsScreenSelect]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className={styles.description} dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <Icon name=\"settings\" />\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyChatListEditFilter')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): StateProps => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","import React, { memo } from '../../../lib/teact/teact';\n\nimport useLang from '../../../hooks/useLang';\n\nimport styles from './FrozenAccountNotification.module.scss';\n\ntype OwnProps = {\n  onClick: () => void;\n};\n\nconst FrozenAccountNotification = ({ onClick }: OwnProps) => {\n  const lang = useLang();\n\n  return (\n    <div\n      className={styles.root}\n      onClick={onClick}\n    >\n      <div className={styles.title}>{lang('TitleFrozenAccount')}</div>\n      <div className={styles.subtitle}>{lang('SubtitleFrozenAccount')}</div>\n    </div>\n  );\n};\n\nexport default memo(FrozenAccountNotification);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"fOmerTkM\",\"title\":\"URLYINJA\",\"subtitle\":\"mCFsx7Tv\"};","// extracted by mini-css-extract-plugin\nexport default {\"minimized\":\"lTOui0dp\",\"root\":\"yEkGgZVL\",\"title\":\"VhAJDrnz\",\"info\":\"WmyL1NJ8\",\"buttons\":\"_40UGD1Y\",\"button\":\"pedMJD_v\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Button from '../../ui/Button';\n\nimport styles from './UnconfirmedSession.module.scss';\n\ntype OwnProps = {\n  sessions: Record<string, ApiSession>;\n  onHeightChange: (height: number) => void;\n};\n\nconst UnconfirmedSession = ({ sessions, onHeightChange } : OwnProps) => {\n  const { changeSessionSettings, terminateAuthorization, showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  useResizeObserver(ref, (entry) => {\n    const height = entry.borderBoxSize?.[0]?.blockSize || entry.contentRect.height;\n    onHeightChange(height);\n  });\n\n  const firstUnconfirmed = useMemo(() => {\n    return Object.values(sessions).sort((a, b) => b.dateCreated - a.dateCreated)\n      .find((session) => session.isUnconfirmed)!;\n  }, [sessions]);\n\n  const locationString = useMemo(() => {\n    return [firstUnconfirmed.deviceModel, firstUnconfirmed.region, firstUnconfirmed.country].filter(Boolean).join(', ');\n  }, [firstUnconfirmed]);\n\n  const handleAccept = useLastCallback(() => {\n    changeSessionSettings({\n      hash: firstUnconfirmed.hash,\n      isConfirmed: true,\n    });\n  });\n\n  const handleReject = useLastCallback(() => {\n    terminateAuthorization({ hash: firstUnconfirmed.hash });\n    showNotification({\n      title: lang('UnconfirmedAuthDeniedTitle', 1),\n      message: lang('UnconfirmedAuthDeniedMessageSingle', locationString),\n    });\n  });\n\n  return (\n    <div className={styles.root} ref={ref}>\n      <h2 className={styles.title}>{lang('UnconfirmedAuthTitle')}</h2>\n      <p className={styles.info}>\n        {lang('UnconfirmedAuthSingle', locationString)}\n      </p>\n      <div className={styles.buttons}>\n        <Button fluid isText size=\"smaller\" className={styles.button} onClick={handleAccept}>\n          {lang('UnconfirmedAuthConfirm')}\n        </Button>\n        <Button fluid isText size=\"smaller\" color=\"danger\" onClick={handleReject} className={styles.button}>\n          {lang('UnconfirmedAuthDeny')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(UnconfirmedSession);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport type { SettingsScreens } from '../../../types';\nimport { LeftColumnContent } from '../../../types';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVE_MINIMIZED_HEIGHT,\n  ARCHIVED_FOLDER_ID,\n  CHAT_HEIGHT_PX,\n  CHAT_LIST_SLICE,\n  FRESH_AUTH_PERIOD,\n  SAVED_FOLDER_ID,\n} from '../../../config';\nimport { IS_APP, IS_MAC_OS } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderKey, getPinnedChatsCount } from '../../../util/folderManager';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useTopOverscroll from '../../../hooks/scroll/useTopOverscroll';\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Archive from './Archive';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\nimport FrozenAccountNotification from './FrozenAccountNotification';\nimport UnconfirmedSession from './UnconfirmedSession';\n\ntype OwnProps = {\n  className?: string;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  canDisplayArchive?: boolean;\n  archiveSettings?: GlobalState['archiveSettings'];\n  isForumPanelOpen?: boolean;\n  sessions?: Record<string, ApiSession>;\n  foldersDispatch?: FolderEditDispatch;\n  onSettingsScreenSelect?: (screen: SettingsScreens) => void;\n  onLeftColumnContentChange?: (content: LeftColumnContent) => void;\n  isAccountFrozen?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\nconst DRAG_ENTER_DEBOUNCE = 500;\nconst RESERVED_HOTKEYS = new Set(['9', '0']);\n\nconst ChatList: FC<OwnProps> = ({\n  className,\n  folderType,\n  folderId,\n  isActive,\n  isForumPanelOpen,\n  canDisplayArchive,\n  archiveSettings,\n  sessions,\n  foldersDispatch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n  isAccountFrozen,\n}) => {\n  const {\n    openChat,\n    openNextChat,\n    closeForumPanel,\n    toggleStoryRibbon,\n    openFrozenAccountModal,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const shouldIgnoreDragRef = useRef(false);\n  const [unconfirmedSessionHeight, setUnconfirmedSessionHeight] = useState(0);\n\n  const isArchived = folderType === 'archived';\n  const isAllFolder = folderType === 'all';\n  const isSaved = folderType === 'saved';\n  const resolvedFolderId = (\n    isAllFolder ? ALL_FOLDER_ID : isArchived ? ARCHIVED_FOLDER_ID : isSaved ? SAVED_FOLDER_ID : folderId!\n  );\n\n  const shouldDisplayArchive = isAllFolder && canDisplayArchive && archiveSettings;\n  const shouldShowFrozenAccountNotification = isAccountFrozen && isAllFolder;\n\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId);\n  usePeerStoriesPolling(orderedIds);\n\n  const chatsHeight = (orderedIds?.length || 0) * CHAT_HEIGHT_PX;\n  const archiveHeight = shouldDisplayArchive\n    ? archiveSettings?.isMinimized ? ARCHIVE_MINIMIZED_HEIGHT : CHAT_HEIGHT_PX : 0;\n  const frozenNotificationHeight = shouldShowFrozenAccountNotification ? 68 : 0;\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, orderedIds, undefined, CHAT_LIST_SLICE);\n\n  const shouldShowUnconfirmedSessions = useMemo(() => {\n    const sessionsArray = Object.values(sessions || {});\n    const current = sessionsArray.find((session) => session.isCurrent);\n    if (!current || getServerTime() - current.dateCreated < FRESH_AUTH_PERIOD) return false;\n\n    return !isAccountFrozen && isAllFolder && sessionsArray.some((session) => session.isUnconfirmed);\n  }, [isAllFolder, sessions, isAccountFrozen]);\n\n  useEffect(() => {\n    if (!shouldShowUnconfirmedSessions) setUnconfirmedSessionHeight(0);\n  }, [shouldShowUnconfirmedSessions]);\n\n  // Support <Alt>+<Up/Down> to navigate between chats\n  useHotkeys(useMemo(() => (isActive && orderedIds?.length ? {\n    'Alt+ArrowUp': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds });\n    },\n    'Alt+ArrowDown': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds });\n    },\n  } : undefined), [isActive, orderedIds]));\n\n  // Support <Cmd>+<Digit> to navigate between chats\n  useEffect(() => {\n    if (!isActive || isSaved || !orderedIds || !IS_APP) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit || RESERVED_HOTKEYS.has(digit)) return;\n\n        const isArchiveInList = shouldDisplayArchive && archiveSettings && !archiveSettings.isMinimized;\n\n        const shift = isArchiveInList ? -1 : 0;\n        const position = Number(digit) + shift - 1;\n\n        if (isArchiveInList && position === -1) {\n          onLeftColumnContentChange?.(LeftColumnContent.Archived);\n          return;\n        }\n\n        if (position > orderedIds!.length - 1) return;\n\n        openChat({ id: orderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [\n    archiveSettings, isSaved, isActive, onLeftColumnContentChange, openChat, openNextChat, orderedIds,\n    shouldDisplayArchive,\n  ]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleArchivedClick = useLastCallback(() => {\n    onLeftColumnContentChange!(LeftColumnContent.Archived);\n    closeForumPanel();\n  });\n\n  const handleFrozenAccountNotificationClick = useLastCallback(() => {\n    openFrozenAccountModal();\n  });\n\n  const handleArchivedDragEnter = useLastCallback(() => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    handleArchivedClick();\n  });\n\n  const handleDragEnter = useDebouncedCallback((chatId: string) => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    openChat({ id: chatId, shouldReplaceHistory: true });\n  }, [openChat], DRAG_ENTER_DEBOUNCE, true);\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (x < rect.width || y < rect.y) return;\n    shouldIgnoreDragRef.current = true;\n  });\n\n  const handleShowStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: true, isArchived });\n  });\n\n  const handleHideStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: false, isArchived });\n  });\n\n  const renderedOverflowTrigger = useTopOverscroll(containerRef, handleShowStoryRibbon, handleHideStoryRibbon, isSaved);\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n\n    return viewportIds!.map((id, i) => {\n      const isPinned = viewportOffset + i < pinnedCount;\n      const offsetTop = unconfirmedSessionHeight + archiveHeight + frozenNotificationHeight\n      + (viewportOffset + i) * CHAT_HEIGHT_PX;\n\n      return (\n        <Chat\n          key={id}\n          teactOrderKey={isPinned ? i : getOrderKey(id, isSaved)}\n          chatId={id}\n          isPinned={isPinned}\n          folderId={folderId}\n          isSavedDialog={isSaved}\n          animationType={getAnimationType(id)}\n          orderDiff={orderDiffById[id]}\n          offsetTop={offsetTop}\n          observeIntersection={observe}\n          onDragEnter={handleDragEnter}\n        />\n      );\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      className={buildClassName('chat-list custom-scroll', isForumPanelOpen && 'forum-panel-open', className)}\n      ref={containerRef}\n      items={viewportIds}\n      itemSelector=\".ListItem:not(.chat-item-archive)\"\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      beforeChildren={renderedOverflowTrigger}\n      maxHeight={chatsHeight + archiveHeight + frozenNotificationHeight + unconfirmedSessionHeight}\n      onLoadMore={getMore}\n      onDragLeave={handleDragLeave}\n    >\n      {shouldShowUnconfirmedSessions && (\n        <UnconfirmedSession\n          key=\"unconfirmed\"\n          sessions={sessions!}\n          onHeightChange={setUnconfirmedSessionHeight}\n        />\n      )}\n      {shouldShowFrozenAccountNotification && (\n        <FrozenAccountNotification\n          key=\"frozen\"\n          onClick={handleFrozenAccountNotificationClick}\n        />\n      )}\n      {shouldDisplayArchive && (\n        <Archive\n          key=\"archive\"\n          archiveSettings={archiveSettings}\n          onClick={handleArchivedClick}\n          onDragEnter={handleArchivedDragEnter}\n        />\n      )}\n      {viewportIds?.length ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length && !isSaved ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch!}\n            onSettingsScreenSelect={onSettingsScreenSelect!}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(ChatList);\n","import React, { useEffect, useRef } from '../../lib/teact/teact';\n\nimport { forceMutation, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { IS_IOS, IS_SAFARI } from '../../util/browser/windowEnvironment';\nimport { stopScrollInertia } from '../../util/resetScroll';\nimport useDebouncedCallback from '../useDebouncedCallback';\nimport useLastCallback from '../useLastCallback';\n\nconst MOUSE_WHEEL_DEBOUNCE = 250;\nconst TRIGGER_HEIGHT = 1;\nconst INERTIA_THRESHOLD = 100;\n\nexport default function useTopOverscroll(\n  containerRef: React.RefObject<HTMLDivElement>,\n  onOverscroll?: AnyToVoidFunction,\n  onReset?: AnyToVoidFunction,\n  isDisabled?: boolean,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const overscrollTriggerRef = useRef<HTMLDivElement>(null);\n\n  const isTriggerJustEnabled = useRef(false);\n  const lastScrollTopRef = useRef(0);\n  const isTriggerEnabledRef = useRef(false);\n  const lastIsOnTopRef = useRef(true);\n  const lastScrollAtRef = useRef(0);\n  const isReturningOverscrollRef = useRef(false);\n\n  const enableOverscrollTrigger = useLastCallback((noScrollInertiaStop = false) => {\n    if (isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current || !containerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'block';\n    containerRef.current.scrollTop = TRIGGER_HEIGHT;\n\n    if (!IS_SAFARI && !noScrollInertiaStop) {\n      stopScrollInertia(containerRef.current);\n    }\n\n    isTriggerJustEnabled.current = true;\n    lastScrollTopRef.current = TRIGGER_HEIGHT;\n    isTriggerEnabledRef.current = true;\n    lastIsOnTopRef.current = true;\n  });\n\n  const disableOverscrollTrigger = useLastCallback(() => {\n    if (!isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'none';\n\n    isTriggerEnabledRef.current = false;\n  });\n\n  const handleScroll = useLastCallback(() => {\n    if (!containerRef.current) return;\n\n    if (isTriggerJustEnabled.current) {\n      isTriggerJustEnabled.current = false;\n\n      return;\n    }\n\n    const newScrollTop = containerRef.current.scrollTop;\n    const isMovingDown = newScrollTop > lastScrollTopRef.current;\n    const isMovingUp = newScrollTop < lastScrollTopRef.current;\n    const isOnTop = newScrollTop === 0;\n    const lastEventDelay = Date.now() - lastScrollAtRef.current;\n\n    if (overscrollTriggerRef.current) {\n      if (isOnTop && !isTriggerEnabledRef.current) {\n        forceMutation(enableOverscrollTrigger, [containerRef.current, overscrollTriggerRef.current]);\n        return;\n      }\n\n      forceMutation(disableOverscrollTrigger, overscrollTriggerRef.current);\n    }\n\n    if (\n      isMovingUp && (\n        (lastIsOnTopRef.current && lastEventDelay > INERTIA_THRESHOLD)\n        || (newScrollTop < 0 && isReturningOverscrollRef.current) // Overscroll repeated by the user\n      )) {\n      onOverscroll?.();\n    } else if (isMovingDown && newScrollTop > 0) {\n      onReset?.();\n    }\n\n    lastScrollTopRef.current = newScrollTop;\n    lastIsOnTopRef.current = isOnTop;\n    lastScrollAtRef.current = Date.now();\n    isReturningOverscrollRef.current = isMovingDown && newScrollTop < 0;\n  });\n\n  // Handle non-scrollable container\n  const handleWheel = useDebouncedCallback((event: WheelEvent) => {\n    if (!containerRef.current) return;\n    const container = containerRef.current;\n\n    const isScrollable = container.scrollHeight > container.offsetHeight;\n    if (isScrollable || event.deltaY === 0) return;\n\n    if (event.deltaY < 0) {\n      onOverscroll?.();\n    } else {\n      onReset?.();\n    }\n  }, [containerRef, onOverscroll, onReset], MOUSE_WHEEL_DEBOUNCE);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return undefined;\n\n    if (container.scrollTop === 0) {\n      requestMutation(() => {\n        enableOverscrollTrigger(true);\n      });\n    }\n\n    container.addEventListener('scroll', handleScroll, { passive: true });\n    container.addEventListener('wheel', handleWheel, { passive: true });\n\n    return () => {\n      container.removeEventListener('scroll', handleScroll);\n      container.removeEventListener('wheel', handleWheel);\n    };\n  }, [containerRef, handleWheel]);\n\n  return !IS_IOS && !isDisabled ? (\n    <div ref={overscrollTriggerRef} className=\"overscroll-trigger\" key=\"overscroll-trigger\" />\n  ) : undefined;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ky16H_sV\",\"button-text\":\"W01t9CIf\",\"buttonText\":\"W01t9CIf\",\"sticker\":\"c8lE3XW5\",\"title\":\"wlwD1B1Q\",\"description\":\"V8OCFHmp\",\"is-ios\":\"IxW_z_r0\",\"isIos\":\"IxW_z_r0\",\"is-macos\":\"OFxKGCEJ\",\"isMacos\":\"OFxKGCEJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { getHasAdminRight } from '../../../global/helpers';\nimport { selectAnimatedEmoji, selectChat } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyForum.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  animatedEmoji?: ApiSticker;\n  canManageTopics?: boolean;\n};\n\nconst ICON_SIZE = 7 * REM;\n\nconst EmptyForum: FC<OwnProps & StateProps> = ({\n  chatId, animatedEmoji, canManageTopics,\n}) => {\n  const { openCreateTopicPanel } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleCreateTopic = useCallback(() => {\n    openCreateTopicPanel({ chatId });\n  }, [chatId, openCreateTopicPanel]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('ChatList.EmptyTopicsTitle')}</h3>\n      <p className={buildClassName(styles.description, styles.centered)} dir=\"auto\">\n        {lang('ChatList.EmptyTopicsDescription')}\n      </p>\n      {canManageTopics && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          onClick={handleCreateTopic}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyTopicsCreate')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId }): StateProps => {\n  const chat = selectChat(global, chatId);\n  const canManageTopics = chat && (chat.isCreator || getHasAdminRight(chat, 'manageTopics'));\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '🐣'),\n    canManageTopics,\n  };\n})(EmptyForum));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Fn34Vu_9\",\"closed-icon\":\"MB7Gomjn\",\"closedIcon\":\"MB7Gomjn\",\"topic-icon\":\"oXJl4tra\",\"topicIcon\":\"oXJl4tra\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiDraft, ApiMessage, ApiMessageOutgoingStatus,\n  ApiPeer, ApiTopic, ApiTypeStory, ApiTypingStatus,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { groupStatefulContent } from '../../../global/helpers';\nimport { getIsChatMuted } from '../../../global/helpers/notifications';\nimport {\n  selectCanAnimateInterface,\n  selectCanDeleteTopic,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectOutgoingStatus,\n  selectPeerStory,\n  selectSender,\n  selectThreadInfo,\n  selectThreadParam,\n  selectTopics,\n} from '../../../global/selectors';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport useTopicContextActions from './hooks/useTopicContextActions';\n\nimport Icon from '../../common/icons/Icon';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport TopicIcon from '../../common/TopicIcon';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\n\nimport styles from './Topic.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  topic: ApiTopic;\n  isSelected: boolean;\n  style: string;\n  observeIntersection?: ObserveFn;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  isChatMuted?: boolean;\n  canDelete?: boolean;\n  lastMessage?: ApiMessage;\n  lastMessageStory?: ApiTypeStory;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  lastMessageSender?: ApiPeer;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  canScrollDown?: boolean;\n  wasTopicOpened?: boolean;\n  withInterfaceAnimations?: boolean;\n  topics?: Record<number, ApiTopic>;\n};\n\nconst Topic: FC<OwnProps & StateProps> = ({\n  topic,\n  isSelected,\n  chatId,\n  chat,\n  isChatMuted,\n  style,\n  lastMessage,\n  lastMessageStory,\n  canScrollDown,\n  lastMessageOutgoingStatus,\n  observeIntersection,\n  canDelete,\n  lastMessageSender,\n  animationType,\n  withInterfaceAnimations,\n  orderDiff,\n  typingStatus,\n  draft,\n  wasTopicOpened,\n  topics,\n}) => {\n  const {\n    openThread,\n    deleteTopic,\n    focusLastMessage,\n    setViewForumAsMessages,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const {\n    isPinned, isClosed, notifySettings,\n  } = topic;\n  const isMuted = Boolean(notifySettings.mutedUntil || (notifySettings.mutedUntil === undefined && isChatMuted));\n\n  const handleOpenDeleteModal = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    deleteTopic({ chatId: chat.id, topicId: topic.id });\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    draft,\n    lastMessageSender,\n    lastMessageTopic: topic,\n    observeIntersection,\n    isTopic: true,\n    typingStatus,\n    topics,\n    statefulMediaContent: groupStatefulContent({ story: lastMessageStory }),\n\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const handleOpenTopic = useLastCallback(() => {\n    openThread({ chatId, threadId: topic.id, shouldReplaceHistory: true });\n    setViewForumAsMessages({ chatId, isEnabled: false });\n\n    if (canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const contextActions = useTopicContextActions({\n    topic,\n    chat,\n    isChatMuted,\n    wasOpened: wasTopicOpened,\n    canDelete,\n    handleDelete: handleOpenDeleteModal,\n    handleMute,\n  });\n\n  return (\n    <ListItem\n      className={buildClassName(\n        styles.root,\n        'Chat',\n        isSelected && 'selected',\n        'chat-item-clickable',\n      )}\n      onClick={handleOpenTopic}\n      style={style}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', topic.id)}` : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      ref={ref}\n    >\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className={buildClassName('title')}>\n            <TopicIcon topic={topic} className={styles.topicIcon} observeIntersection={observeIntersection} />\n            <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          </div>\n          {Boolean(notifySettings.mutedUntil) && <Icon name=\"muted\" />}\n          <div className=\"separator\" />\n          {isClosed && (\n            <Icon name=\"lock-badge\" className={styles.closedIcon} />\n          )}\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge\n            chat={chat}\n            isPinned={isPinned}\n            isMuted={isMuted}\n            topic={topic}\n            wasTopicOpened={wasTopicOpened}\n            topics={topics}\n          />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <ConfirmDialog\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          confirmIsDestructive\n          confirmHandler={handleDelete}\n          text={lang('lng_forum_topic_delete_sure')}\n          confirmLabel={lang('Delete')}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n          topicId={topic.id}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topic, isSelected }) => {\n    const chat = selectChat(global, chatId);\n\n    const lastMessage = selectChatMessage(global, chatId, topic.lastMessageId);\n    const { isOutgoing } = lastMessage || {};\n    const lastMessageSender = lastMessage && selectSender(global, lastMessage);\n    const typingStatus = selectThreadParam(global, chatId, topic.id, 'typingStatus');\n    const draft = selectDraft(global, chatId, topic.id);\n    const threadInfo = selectThreadInfo(global, chatId, topic.id);\n    const wasTopicOpened = Boolean(threadInfo?.lastReadInboxMessageId);\n    const topics = selectTopics(global, chatId);\n\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    const storyData = lastMessage?.content.storyData;\n    const lastMessageStory = storyData && selectPeerStory(global, storyData.peerId, storyData.id);\n\n    const isChatMuted = chat && getIsChatMuted(\n      chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id),\n    );\n\n    return {\n      chat,\n      lastMessage,\n      lastMessageSender,\n      typingStatus,\n      isChatMuted,\n      canDelete: selectCanDeleteTopic(global, chatId, topic.id),\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      draft,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      canScrollDown: isSelected && chat?.id === currentChatId && currentThreadId === topic.id,\n      wasTopicOpened,\n      topics,\n      lastMessageStory,\n    };\n  },\n)(Topic));\n","import { useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../../api/types';\nimport type { MenuItemContextAction } from '../../../ui/ListItem';\n\nimport { getCanManageTopic, getHasAdminRight } from '../../../../global/helpers';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../../util/browser/windowEnvironment';\nimport { compact } from '../../../../util/iteratees';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nexport default function useTopicContextActions({\n  topic,\n  chat,\n  isChatMuted,\n  wasOpened,\n  canDelete,\n  handleDelete,\n  handleMute,\n}: {\n  topic: ApiTopic;\n  chat: ApiChat;\n  isChatMuted?: boolean;\n  wasOpened?: boolean;\n  canDelete?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n}) {\n  const lang = useOldLang();\n\n  return useMemo(() => {\n    const {\n      isPinned, notifySettings, isClosed, id: topicId,\n    } = topic;\n\n    const chatId = chat.id;\n\n    const {\n      editTopic,\n      toggleTopicPinned,\n      markTopicRead,\n      updateTopicMutedState,\n      openChatInNewTab,\n    } = getActions();\n\n    const canToggleClosed = getCanManageTopic(chat, topic);\n    const canTogglePinned = chat.isCreator || getHasAdminRight(chat, 'manageTopics');\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id, threadId: topicId });\n      },\n    };\n\n    const actionUnreadMark = topic.unreadCount || !wasOpened\n      ? {\n        title: lang('MarkAsRead'),\n        icon: 'readchats',\n        handler: () => {\n          markTopicRead({ chatId, topicId });\n        },\n      }\n      : undefined;\n\n    const actionPin = canTogglePinned ? (isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: false }),\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: true }),\n      }) : undefined;\n\n    const actionMute = ((isChatMuted && notifySettings.mutedUntil === undefined) || notifySettings.mutedUntil)\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateTopicMutedState({ chatId, topicId, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    const actionCloseTopic = canToggleClosed ? (isClosed\n      ? {\n        title: lang('lng_forum_topic_reopen'),\n        icon: 'reopen-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: false }),\n      }\n      : {\n        title: lang('lng_forum_topic_close'),\n        icon: 'close-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: true }),\n      }) : undefined;\n\n    const actionDelete = canDelete ? {\n      title: lang('lng_forum_topic_delete'),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    } : undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionPin,\n      actionUnreadMark,\n      actionMute,\n      actionCloseTopic,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [topic, chat, isChatMuted, wasOpened, lang, canDelete, handleDelete, handleMute]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  beginHeavyAnimation,\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport type { TopicsInfo } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  GENERAL_TOPIC_ID, TOPIC_HEIGHT_PX, TOPIC_LIST_SENSITIVE_AREA, TOPICS_SLICE,\n} from '../../../config';\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getOrderedTopics } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectCurrentMessageList,\n  selectIsForumPanelOpen,\n  selectTabState,\n  selectTopicsInfo,\n} from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { waitForTransitionEnd } from '../../../util/cssAnimationEndListeners';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport GroupCallTopPane from '../../calls/group/GroupCallTopPane';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport Icon from '../../common/icons/Icon';\nimport HeaderActions from '../../middle/HeaderActions';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport EmptyForum from './EmptyForum';\nimport Topic from './Topic';\n\nimport styles from './ForumPanel.module.scss';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  isHidden?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n  onCloseAnimationEnd?: VoidFunction;\n  onOpenAnimationStart?: VoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  topicsInfo?: TopicsInfo;\n  currentTopicId?: number;\n  withInterfaceAnimations?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst ForumPanel: FC<OwnProps & StateProps> = ({\n  chat,\n  currentTopicId,\n  isOpen,\n  isHidden,\n  topicsInfo,\n  onTopicSearch,\n  onCloseAnimationEnd,\n  onOpenAnimationStart,\n  withInterfaceAnimations,\n}) => {\n  const {\n    closeForumPanel, openChatWithInfo, loadTopics,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollTopHandlerRef = useRef<HTMLDivElement>(null);\n  const { isMobile } = useAppLayout();\n  const chatId = chat?.id;\n\n  useEffect(() => {\n    if (chatId && !topicsInfo) {\n      loadTopics({ chatId });\n    }\n  }, [topicsInfo, chatId]);\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  const lang = useOldLang();\n\n  const handleClose = useLastCallback(() => {\n    closeForumPanel();\n  });\n\n  useEffect(() => {\n    if (!withInterfaceAnimations && !isOpen) {\n      onCloseAnimationEnd?.();\n    }\n  }, [withInterfaceAnimations, isOpen, onCloseAnimationEnd]);\n\n  const handleToggleChatInfo = useLastCallback(() => {\n    if (!chat) return;\n    openChatWithInfo({ id: chat.id, shouldReplaceHistory: true });\n  });\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useOnIntersect(scrollTopHandlerRef, observe, ({ isIntersecting }) => {\n    setIsScrolled(!isIntersecting);\n  });\n\n  const orderedIds = useMemo(() => {\n    return topicsInfo\n      ? getOrderedTopics(\n        Object.values(topicsInfo.topicsById),\n        topicsInfo.orderedPinnedTopicIds,\n      ).map(({ id }) => id)\n      : [];\n  }, [topicsInfo]);\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds, chat?.id);\n\n  const [viewportIds, getMore] = useInfiniteScroll(() => {\n    if (!chat) return;\n    loadTopics({ chatId: chat.id });\n  }, orderedIds, !topicsInfo?.totalCount || orderedIds.length >= topicsInfo.totalCount, TOPICS_SLICE);\n\n  const shouldRenderRef = useRef(false);\n  const isVisible = isOpen && !isHidden;\n  const prevIsVisible = usePreviousDeprecated(isVisible);\n\n  if (prevIsVisible !== isVisible) {\n    shouldRenderRef.current = false;\n  }\n\n  useHistoryBack({\n    isActive: isVisible,\n    onBack: handleClose,\n  });\n\n  useEffect(() => (isVisible ? captureEscKeyListener(handleClose) : undefined), [handleClose, isVisible]);\n\n  useEffect(() => {\n    if (prevIsVisible !== isVisible) {\n      // For performance reasons, we delay animation of the topic list panel to the next animation frame\n      requestNextMutation(() => {\n        if (!ref.current) return;\n\n        const endHeavyAnimation = beginHeavyAnimation();\n        waitForTransitionEnd(ref.current, endHeavyAnimation);\n\n        onOpenAnimationStart?.();\n\n        if (isVisible) {\n          shouldRenderRef.current = true;\n          ref.current!.style.transform = 'none';\n        } else {\n          shouldRenderRef.current = false;\n          ref.current!.style.transform = '';\n        }\n      });\n    }\n  }, [isVisible, onOpenAnimationStart, prevIsVisible]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureEvents(ref.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: ((e, direction) => {\n        const closeDirection = lang.isRtl ? SwipeDirection.Left : SwipeDirection.Right;\n\n        if (direction === closeDirection) {\n          closeForumPanel();\n          return true;\n        }\n\n        return false;\n      }),\n    });\n  }, [closeForumPanel, lang.isRtl]);\n\n  function renderTopics() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    return viewportIds?.map((id, i) => (\n      <Topic\n        key={id}\n        chatId={chat!.id}\n        topic={topicsInfo!.topicsById[id]}\n        style={`top: ${(viewportOffset + i) * TOPIC_HEIGHT_PX}px;`}\n        isSelected={currentTopicId === id}\n        observeIntersection={observe}\n        animationType={getAnimationType(id)}\n        orderDiff={orderDiffById[id]}\n      />\n    ));\n  }\n\n  const isLoading = topicsInfo === undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n        isScrolled && styles.scrolled,\n        lang.isRtl && styles.rtl,\n        !withInterfaceAnimations && styles.noAnimation,\n      )}\n      onTransitionEnd={!isOpen ? onCloseAnimationEnd : undefined}\n    >\n      <div id=\"TopicListHeader\" className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n\n        {chat && (\n          <GroupChatInfo\n            noAvatar\n            className={styles.info}\n            chatId={chat.id}\n            onClick={handleToggleChatInfo}\n          />\n        )}\n\n        {chat\n          && (\n            <HeaderActions\n              chatId={chat.id}\n              threadId={MAIN_THREAD_ID}\n              messageListType=\"thread\"\n              canExpandActions={false}\n              isForForum\n              isMobile={isMobile}\n              onTopicSearch={onTopicSearch}\n            />\n          )}\n      </div>\n\n      {chat && <GroupCallTopPane chatId={chat.id} />}\n\n      <div className={styles.notch} />\n\n      <InfiniteScroll\n        className=\"chat-list custom-scroll\"\n        ref={containerRef}\n        items={viewportIds}\n        preloadBackwards={TOPICS_SLICE}\n        withAbsolutePositioning\n        maxHeight={(orderedIds?.length || 0) * TOPIC_HEIGHT_PX}\n        onLoadMore={getMore}\n        sensitiveArea={TOPIC_LIST_SENSITIVE_AREA}\n        beforeChildren={<div ref={scrollTopHandlerRef} className={styles.scrollTopHandler} />}\n      >\n        {Boolean(viewportIds?.length) && (\n          renderTopics()\n        )}\n        {isLoading && !viewportIds?.length && (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n      {!isLoading && viewportIds?.length === 1 && viewportIds[0] === GENERAL_TOPIC_ID && (\n        <EmptyForum chatId={chatId!} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const chatId = selectTabState(global).forumPanelChatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n    } = selectCurrentMessageList(global) || {};\n    const topicsInfo = chatId ? selectTopicsInfo(global, chatId) : undefined;\n\n    return {\n      chat,\n      currentTopicId: chatId === currentChatId ? Number(currentThreadId) : undefined,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      topicsInfo,\n    };\n  },\n  (global) => selectIsForumPanelOpen(global),\n)(ForumPanel));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MlF2n1nb\",\"rtl\":\"Xs2y1fCE\",\"no-animation\":\"kmDMv6D8\",\"noAnimation\":\"kmDMv6D8\",\"notch\":\"hGeb3TQJ\",\"scrolled\":\"SZ24u3cn\",\"scroll-top-handler\":\"ERz3fcar\",\"scrollTopHandler\":\"ERz3fcar\",\"info\":\"Sf633zAP\"};","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType<T extends number | string>(orderDiffById: Record<T, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values(orderDiffById) as number[];\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: T): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ow6Ij9O5\",\"title-row\":\"CBda1UmC\",\"titleRow\":\"CBda1UmC\",\"loading\":\"L4Zk0yMN\",\"other-column\":\"d0hTIVJn\",\"otherColumn\":\"d0hTIVJn\",\"main-column\":\"lEbV6HrI\",\"mainColumn\":\"lEbV6HrI\",\"unread\":\"BhS75ocD\",\"last-message\":\"KJ16dBus\",\"lastMessage\":\"KJ16dBus\",\"after-wrapper\":\"uWo2dhui\",\"afterWrapper\":\"uWo2dhui\",\"after\":\"g3XnC73g\",\"title\":\"k3Ch25ZQ\",\"otherColumnIcon\":\"oknhG11L\",\"other-column-title\":\"ZUj3xAjs\",\"otherColumnTitle\":\"ZUj3xAjs\",\"other-columns\":\"IkuCBmvA\",\"otherColumns\":\"IkuCBmvA\",\"ellipsis\":\"_m_2xcPW\",\"reverse-corner\":\"U_yhhC0w\",\"reverseCorner\":\"U_yhhC0w\",\"overwritten-width\":\"HV0wCR4O\",\"overwrittenWidth\":\"HV0wCR4O\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChat, ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getOrderedTopics } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport TopicIcon from './TopicIcon';\n\nimport styles from './ChatForumLastMessage.module.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topics?: Record<number, ApiTopic>;\n  renderLastMessage: () => React.ReactNode;\n  observeIntersection?: ObserveFn;\n};\n\nconst NO_CORNER_THRESHOLD = Number(REM);\nconst MAX_TOPICS = 3;\n\nconst ChatForumLastMessage: FC<OwnProps> = ({\n  chat,\n  topics,\n  renderLastMessage,\n  observeIntersection,\n}) => {\n  const { openThread } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const lastMessageRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const mainColumnRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const [lastActiveTopic, ...otherTopics] = useMemo(() => {\n    if (!topics) {\n      return [];\n    }\n\n    return getOrderedTopics(Object.values(topics), undefined, true).slice(0, MAX_TOPICS);\n  }, [topics]);\n\n  const [isReversedCorner, setIsReversedCorner] = useState(false);\n  const [overwrittenWidth, setOverwrittenWidth] = useState<number | undefined>(undefined);\n\n  const {\n    handleClick: handleOpenTopicClick,\n    handleMouseDown: handleOpenTopicMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (lastActiveTopic.unreadCount === 0 || chat.isForumAsMessages) return;\n\n    e.stopPropagation();\n    e.preventDefault();\n\n    openThread({\n      chatId: chat.id,\n      threadId: lastActiveTopic.id,\n      shouldReplaceHistory: true,\n      noForumTopicPanel: getIsMobile(),\n    });\n  });\n\n  useEffect(() => {\n    const lastMessageElement = lastMessageRef.current;\n    const mainColumnElement = mainColumnRef.current;\n    if (!lastMessageElement || !mainColumnElement) return;\n\n    const lastMessageWidth = lastMessageElement.offsetWidth;\n    const mainColumnWidth = mainColumnElement.offsetWidth;\n\n    if (Math.abs(lastMessageWidth - mainColumnWidth) < NO_CORNER_THRESHOLD) {\n      setOverwrittenWidth(Math.max(lastMessageWidth, mainColumnWidth));\n    } else {\n      setOverwrittenWidth(undefined);\n    }\n    setIsReversedCorner(lastMessageWidth > mainColumnWidth);\n  }, [lastActiveTopic, renderLastMessage]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isReversedCorner && styles.reverseCorner,\n        overwrittenWidth && styles.overwrittenWidth,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={overwrittenWidth ? `--overwritten-width: ${overwrittenWidth}px` : undefined}\n    >\n      {lastActiveTopic && (\n        <div className={styles.titleRow}>\n          <div\n            className={buildClassName(\n              styles.mainColumn,\n              lastActiveTopic.unreadCount && styles.unread,\n            )}\n            ref={mainColumnRef}\n            onClick={handleOpenTopicClick}\n            onMouseDown={handleOpenTopicMouseDown}\n          >\n            <TopicIcon\n              topic={lastActiveTopic}\n              observeIntersection={observeIntersection}\n            />\n            <div className={styles.title}>{renderText(lastActiveTopic.title)}</div>\n            {!overwrittenWidth && isReversedCorner && (\n              <div className={styles.afterWrapper}>\n                <div className={styles.after} />\n              </div>\n            )}\n          </div>\n\n          <div className={styles.otherColumns}>\n            {otherTopics.map((topic) => (\n              <div\n                className={buildClassName(\n                  styles.otherColumn, topic.unreadCount && styles.unread,\n                )}\n                key={topic.id}\n              >\n                <TopicIcon\n                  topic={topic}\n                  className={styles.otherColumnIcon}\n                  observeIntersection={observeIntersection}\n                />\n                <span className={styles.otherColumnTitle}>{renderText(topic.title)}</span>\n              </div>\n            ))}\n          </div>\n\n          <div className={styles.ellipsis} />\n        </div>\n      )}\n      {!lastActiveTopic && <div className={buildClassName(styles.titleRow, styles.loading)}>{lang('Loading')}</div>}\n      <div\n        className={buildClassName(styles.lastMessage, lastActiveTopic?.unreadCount && styles.unread)}\n        ref={lastMessageRef}\n        onClick={handleOpenTopicClick}\n        onMouseDown={handleOpenTopicMouseDown}\n      >\n        {renderLastMessage()}\n        {!overwrittenWidth && !isReversedCorner && (\n          <div className={styles.afterWrapper}>\n            <div className={styles.after} />\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nexport default memo(ChatForumLastMessage);\n","import React, {\n  useCallback, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\n\nimport type {\n  ApiChat, ApiDraft, ApiMessage, ApiPeer, ApiTopic, ApiTypingStatus,\n  StatefulMediaContent,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { ANIMATION_END_DELAY, CHAT_HEIGHT_PX } from '../../../../config';\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSticker,\n  getMessageVideo,\n} from '../../../../global/helpers';\nimport { getMessageSenderName } from '../../../../global/helpers/peers';\nimport buildClassName from '../../../../util/buildClassName';\nimport renderText from '../../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\nimport { ChatAnimationTypes } from './useChatAnimationType';\n\nimport useEnsureStory from '../../../../hooks/useEnsureStory';\nimport useMedia from '../../../../hooks/useMedia';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ChatForumLastMessage from '../../../common/ChatForumLastMessage';\nimport Icon from '../../../common/icons/Icon';\nimport MessageSummary from '../../../common/MessageSummary';\nimport TypingStatus from '../../../common/TypingStatus';\n\nconst ANIMATION_DURATION = 200;\n\nexport default function useChatListEntry({\n  chat,\n  topics,\n  lastMessage,\n  statefulMediaContent,\n  chatId,\n  typingStatus,\n  draft,\n  lastMessageTopic,\n  lastMessageSender,\n  observeIntersection,\n  animationType,\n  orderDiff,\n  withInterfaceAnimations,\n  isTopic,\n  isSavedDialog,\n  isPreview,\n}: {\n  chat?: ApiChat;\n  topics?: Record<number, ApiTopic>;\n  lastMessage?: ApiMessage;\n  statefulMediaContent: StatefulMediaContent | undefined;\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  lastMessageTopic?: ApiTopic;\n  lastMessageSender?: ApiPeer;\n  observeIntersection?: ObserveFn;\n  isTopic?: boolean;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n\n  animationType: ChatAnimationTypes;\n  orderDiff: number;\n  withInterfaceAnimations?: boolean;\n}) {\n  const oldLang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const storyData = lastMessage?.content.storyData;\n  const shouldTryLoadingStory = statefulMediaContent && !statefulMediaContent.story;\n\n  useEnsureStory(shouldTryLoadingStory ? storyData?.peerId : undefined, storyData?.id, statefulMediaContent?.story);\n\n  const mediaContent = statefulMediaContent?.story || lastMessage;\n  const mediaHasPreview = mediaContent && !getMessageSticker(mediaContent);\n\n  const mediaThumbnail = mediaHasPreview ? getMessageMediaThumbDataUri(mediaContent) : undefined;\n  const mediaBlobUrl = useMedia(mediaHasPreview ? getMessageMediaHash(mediaContent, 'micro') : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const renderLastMessageOrTyping = useCallback(() => {\n    if (!isSavedDialog && !isPreview\n        && typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    const isDraftReplyToTopic = draft && draft.replyInfo?.replyToMsgId === lastMessageTopic?.id;\n    const isEmptyLocalReply = draft?.replyInfo && !draft.text && draft.isLocal;\n\n    const canDisplayDraft = !chat?.isForum && !isSavedDialog && !isPreview && draft && !isEmptyLocalReply\n      && (!isTopic || !isDraftReplyToTopic);\n\n    if (canDisplayDraft) {\n      return (\n        <p className=\"last-message\" dir={oldLang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{oldLang('Draft')}</span>\n          {renderTextWithEntities({\n            text: draft.text?.text || '',\n            entities: draft.text?.entities,\n            asPreview: true,\n            withTranslucentThumbs: true,\n          })}\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    const senderName = getMessageSenderName(oldLang, chatId, lastMessageSender);\n\n    return (\n      <p className=\"last-message shared-canvas-container\" dir={oldLang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {!isSavedDialog && lastMessage.forwardInfo && (<Icon name=\"share-filled\" className=\"chat-prefix-icon\" />)}\n        {lastMessage.replyInfo?.type === 'story' && (<Icon name=\"story-reply\" className=\"chat-prefix-icon\" />)}\n        {renderSummary(lastMessage, observeIntersection, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n      </p>\n    );\n  }, [\n    chat, chatId, draft, isRoundVideo, isTopic, oldLang, lastMessage, lastMessageSender, lastMessageTopic,\n    mediaBlobUrl, mediaThumbnail, observeIntersection, typingStatus, isSavedDialog, isPreview,\n  ]);\n\n  function renderSubtitle() {\n    if (chat?.isForum && !isTopic) {\n      return (\n        <ChatForumLastMessage\n          chat={chat}\n          renderLastMessage={renderLastMessageOrTyping}\n          observeIntersection={observeIntersection}\n          topics={topics}\n        />\n      );\n    }\n\n    return renderLastMessageOrTyping();\n  }\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (!withInterfaceAnimations || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      requestMutation(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * CHAT_HEIGHT_PX}px, 0)`;\n\n      requestMutation(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMutation(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [withInterfaceAnimations, orderDiff, animationType]);\n\n  return {\n    renderSubtitle,\n    ref,\n  };\n}\n\nfunction renderSummary(\n  message: ApiMessage, observeIntersection?: ObserveFn, blobUrl?: string, isRoundVideo?: boolean,\n) {\n  const messageSummary = (\n    <MessageSummary\n      message={message}\n      noEmoji={Boolean(blobUrl)}\n      observeIntersectionForLoading={observeIntersection}\n      inChatList\n    />\n  );\n\n  if (!blobUrl) {\n    return messageSummary;\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <Icon name=\"play\" />}\n      {messageSummary}\n    </span>\n  );\n}\n","import { useRef } from '../../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nexport default function useLeftHeaderButtonRtlForumTransition(shouldHideSearch?: boolean) {\n  const forceUpdate = useForceUpdate();\n  const shouldDisableDropdownMenuTransitionRef = useRef(shouldHideSearch);\n  const prevShouldHideSearch = usePreviousDeprecated(shouldHideSearch);\n\n  function handleDropdownMenuTransitionEnd() {\n    shouldDisableDropdownMenuTransitionRef.current = Boolean(shouldHideSearch);\n    forceUpdate();\n  }\n\n  if (shouldHideSearch === false && prevShouldHideSearch !== shouldHideSearch) {\n    shouldDisableDropdownMenuTransitionRef.current = false;\n  }\n\n  return { shouldDisableDropdownMenuTransitionRef, handleDropdownMenuTransitionEnd };\n}\n","import { useMemo } from '../../../../lib/teact/teact';\n\nimport { mapValues } from '../../../../util/iteratees';\nimport { useChatAnimationType } from './useChatAnimationType';\n\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nexport default function useOrderDiff(orderedIds: (string | number)[] | undefined, key?: string) {\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePreviousDeprecated(orderById);\n  const prevChatId = usePreviousDeprecated(key);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById || key !== prevChatId) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [key, orderById, prevChatId, prevOrderById]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  return {\n    orderDiffById,\n    getAnimationType,\n  };\n}\n","import type { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport type { OldLangFn } from '../../../../hooks/useOldLang';\n\nimport {\n  getChatTitle,\n  isChatGroup,\n  isUserId,\n} from '../../../../global/helpers';\nimport { getPeerTitle } from '../../../../global/helpers/peers';\n\nexport function getSenderName(\n  lang: OldLangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getPeerTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if ('isSelf' in sender && sender.isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AN8wkEiR\",\"ghost\":\"ANWk2pWP\",\"scale\":\"kMHxyoSt\",\"elementContainer\":\"UDCMfXxs\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { SNAP_EFFECT_CONTAINER_ID, SNAP_EFFECT_ID, SVG_NAMESPACE } from '../../../config';\nimport { selectCanAnimateSnapEffect } from '../../../global/selectors';\nimport jsxToHtml from '../../../util/element/jsxToHtml';\nimport generateUniqueId from '../../../util/generateUniqueId';\n\nimport styles from './SnapEffectContainer.module.scss';\n\nconst VISIBLITY_MARGIN = 50;\nconst DURATION = 1000;\n\nconst SnapEffectContainer = () => {\n  return (\n    <div className={styles.root} id={SNAP_EFFECT_CONTAINER_ID} />\n  );\n};\n\nexport default memo(SnapEffectContainer);\n\nexport function animateSnap(element: HTMLElement) {\n  const global = getGlobal();\n  const canPlayEffect = selectCanAnimateSnapEffect(global);\n  if (!canPlayEffect) return false;\n  // Get element current fixed position on screen\n  const rect = element.getBoundingClientRect();\n  const x = rect.left + window.scrollX;\n  const y = rect.top + window.scrollY;\n  const width = rect.width;\n  const height = rect.height;\n\n  // Check for visibility\n  if (x + width + VISIBLITY_MARGIN < 0 || x - VISIBLITY_MARGIN > window.innerWidth\n    || y + height + VISIBLITY_MARGIN < 0 || y - VISIBLITY_MARGIN > window.innerHeight) {\n    return false;\n  }\n\n  const seed = Math.floor(Date.now() / 1000);\n  const filterId = `${SNAP_EFFECT_ID}-${generateUniqueId()}`;\n\n  const component = (\n    <svg\n      className={styles.ghost}\n      width={width}\n      height={height}\n      style={`left: ${x}px; top: ${y}px;`}\n      viewBox={`0 0 ${width} ${height}`}\n    >\n      <defs>\n        {createFilter(filterId, Math.min(width, height), seed)}\n      </defs>\n      <g filter={`url(#${filterId})`}>\n        <foreignObject className={styles.elementContainer} width={width} height={height} />\n      </g>\n    </svg>\n  );\n\n  const svg = jsxToHtml(component)[0] as HTMLElement;\n  const foreignObject = svg.querySelector('foreignObject')!;\n\n  const computedStyle = window.getComputedStyle(element);\n  const clone = element.cloneNode(true) as HTMLElement;\n  Array.from(computedStyle).forEach((key) => (\n    clone.style.setProperty(key, computedStyle.getPropertyValue(key), 'important')\n  ));\n\n  foreignObject.appendChild(clone);\n\n  const snapContainer = document.getElementById(SNAP_EFFECT_CONTAINER_ID)!;\n  snapContainer.appendChild(svg);\n\n  svg.addEventListener('animationend', () => {\n    snapContainer.removeChild(svg);\n  }, {\n    once: true,\n  });\n\n  return true;\n}\n\nfunction createFilter(id: string, smallestSide: number, baseSeed: number = 42) {\n  return (\n    <filter\n      xmlns={SVG_NAMESPACE}\n      id={id}\n      x=\"-150%\"\n      y=\"-150%\"\n      width=\"400%\"\n      height=\"400%\"\n      color-interpolation-filters=\"sRGB\"\n    >\n      <feTurbulence type=\"fractalNoise\" baseFrequency=\"0.5\" numOctaves=\"1\" result=\"dustNoise\" seed={baseSeed} />\n      <feComponentTransfer in=\"dustNoise\" result=\"dustNoiseMask\">\n        <feFuncA type=\"linear\" slope=\"5\" intercept=\"0\">\n          <animate attributeName=\"slope\" values=\"5; 2; 1; 0\" dur={`${DURATION}ms`} fill=\"freeze\" />\n        </feFuncA>\n      </feComponentTransfer>\n      <feComposite in=\"SourceGraphic\" in2=\"dustNoiseMask\" operator=\"in\" result=\"dustySource\" />\n      <feTurbulence\n        type=\"fractalNoise\"\n        baseFrequency=\"0.015\"\n        numOctaves=\"1\"\n        result=\"displacementNoise1\"\n        seed={baseSeed + 1}\n      />\n      <feTurbulence\n        type=\"fractalNoise\"\n        baseFrequency=\"1\"\n        numOctaves=\"2\"\n        result=\"displacementNoise2\"\n        seed={baseSeed + 2}\n      />\n      <feMerge result=\"combinedNoise\">\n        <feMergeNode in=\"displacementNoise1\" />\n        <feMergeNode in=\"displacementNoise2\" />\n      </feMerge>\n      <feDisplacementMap in=\"dustySource\" in2=\"combinedNoise\" scale=\"0\" xChannelSelector=\"R\" yChannelSelector=\"G\">\n        <animate attributeName=\"scale\" values={`0; ${smallestSide * 3}`} dur={`${DURATION}ms`} fill=\"freeze\" />\n      </feDisplacementMap>\n    </filter>\n  );\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './HeaderMenuContainer';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst HeaderMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const HeaderMenuContainer = useModuleLoader(Bundles.Extra, 'HeaderMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return HeaderMenuContainer ? <HeaderMenuContainer {...props} /> : undefined;\n};\n\nexport default HeaderMenuContainerAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { IAnchorPosition, MessageListType, ThreadId } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { ManagementScreens } from '../../types';\n\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getHasAdminRight,\n  getIsSavedDialog,\n  isAnonymousForwardsChat,\n  isChatBasicGroup, isChatChannel, isChatSuperGroup, isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanAnimateInterface,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectIsChatBotNotStarted,\n  selectIsChatWithSelf,\n  selectIsCurrentUserFrozen,\n  selectIsInSelectMode,\n  selectIsRightColumnShown,\n  selectIsUserBlocked,\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectTranslationLanguage,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { ARE_CALLS_SUPPORTED, IS_APP } from '../../util/browser/windowEnvironment';\n\nimport { useHotkeys } from '../../hooks/useHotkeys';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport HeaderMenuContainer from './HeaderMenuContainer.async';\n\ninterface OwnProps {\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n  canExpandActions: boolean;\n  isForForum?: boolean;\n  isMobile?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  noMenu?: boolean;\n  isChannel?: boolean;\n  isRightColumnShown?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canUnblock?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewMonetization?: boolean;\n  canViewBoosts?: boolean;\n  canShowBoostModal?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  shouldJoinToSend?: boolean;\n  shouldSendJoinRequest?: boolean;\n  noAnimation?: boolean;\n  canTranslate?: boolean;\n  isTranslating?: boolean;\n  translationLanguage: string;\n  language: string;\n  detectedChatLanguage?: string;\n  doNotTranslate: string[];\n  isAccountFrozen?: boolean;\n}\n\n// Chrome breaks layout when focusing input during transition\nconst SEARCH_FOCUS_DELAY_MS = 320;\n\nconst HeaderActions: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  noMenu,\n  isMobile,\n  isChannel,\n  canStartBot,\n  canRestartBot,\n  canUnblock,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewMonetization,\n  canViewBoosts,\n  canShowBoostModal,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  pendingJoinRequests,\n  isRightColumnShown,\n  isForForum,\n  canExpandActions,\n  shouldJoinToSend,\n  shouldSendJoinRequest,\n  noAnimation,\n  canTranslate,\n  isTranslating,\n  translationLanguage,\n  language,\n  detectedChatLanguage,\n  doNotTranslate,\n  onTopicSearch,\n  isAccountFrozen,\n}) => {\n  const {\n    joinChannel,\n    sendBotCommand,\n    openMiddleSearch,\n    restartBot,\n    requestMasterAndRequestCall,\n    requestNextManagementScreen,\n    showNotification,\n    openChat,\n    requestChatTranslation,\n    togglePeerTranslations,\n    openChatLanguageModal,\n    setSettingOption,\n    unblockUser,\n    setViewForumAsMessages,\n    openFrozenAccountModal,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuButtonRef = useRef<HTMLButtonElement>(null);\n  const lang = useOldLang();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuAnchor, setMenuAnchor] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleHeaderMenuOpen = useLastCallback(() => {\n    setIsMenuOpen(true);\n    const rect = menuButtonRef.current!.getBoundingClientRect();\n    setMenuAnchor({ x: rect.right, y: rect.bottom });\n  });\n\n  const handleHeaderMenuClose = useLastCallback(() => {\n    setIsMenuOpen(false);\n  });\n\n  const handleHeaderMenuHide = useLastCallback(() => {\n    setMenuAnchor(undefined);\n  });\n\n  const handleSubscribeClick = useLastCallback(() => {\n    joinChannel({ chatId });\n    if (shouldSendJoinRequest) {\n      showNotification({\n        message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n      });\n    }\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n  });\n\n  const handleTranslateClick = useLastCallback(() => {\n    if (isTranslating) {\n      requestChatTranslation({ chatId, toLanguageCode: undefined });\n      return;\n    }\n\n    requestChatTranslation({ chatId, toLanguageCode: translationLanguage });\n  });\n\n  const handleJoinRequestsClick = useLastCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.JoinRequests });\n  });\n\n  const handleSearchClick = useLastCallback(() => {\n    if (isForForum) {\n      onTopicSearch?.();\n      return;\n    }\n\n    openMiddleSearch();\n\n    if (isMobile) {\n      // iOS requires synchronous focus on user event.\n      setFocusInSearchInput();\n    } else if (noAnimation) {\n      // The second RAF is necessary because Teact must update the state and render the async component\n      requestMeasure(() => {\n        requestNextMutation(setFocusInSearchInput);\n      });\n    } else {\n      setTimeout(setFocusInSearchInput, SEARCH_FOCUS_DELAY_MS);\n    }\n  });\n\n  const handleAsMessagesClick = useLastCallback(() => {\n    openChat({ id: chatId });\n    setViewForumAsMessages({ chatId, isEnabled: true });\n  });\n\n  const handleRequestCall = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n    requestMasterAndRequestCall({ userId: chatId });\n  });\n\n  const handleHotkeySearchClick = useLastCallback((e: KeyboardEvent) => {\n    if (!canSearch || !IS_APP || e.shiftKey) {\n      return;\n    }\n\n    e.preventDefault();\n    handleSearchClick();\n  });\n\n  const getTextWithLanguage = useLastCallback((langKey: string, langCode: string) => {\n    const simplified = langCode.split('-')[0];\n    const translationKey = `TranslateLanguage${simplified.toUpperCase()}`;\n    const name = lang(translationKey);\n    if (name !== translationKey) {\n      return lang(langKey, name);\n    }\n\n    const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n    return lang(`${langKey}Other`, translatedName);\n  });\n\n  const buttonText = useMemo(() => {\n    if (isTranslating) return lang('ShowOriginalButton');\n\n    return getTextWithLanguage('TranslateToButton', translationLanguage);\n  }, [translationLanguage, getTextWithLanguage, isTranslating, lang]);\n\n  const doNotTranslateText = useMemo(() => {\n    if (!detectedChatLanguage) return undefined;\n\n    return getTextWithLanguage('DoNotTranslateLanguage', detectedChatLanguage);\n  }, [getTextWithLanguage, detectedChatLanguage]);\n\n  const handleHide = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: false });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n  });\n\n  const handleChangeLanguage = useLastCallback(() => {\n    openChatLanguageModal({ chatId });\n  });\n\n  const handleDoNotTranslate = useLastCallback(() => {\n    if (!detectedChatLanguage) return;\n\n    setSettingOption({\n      doNotTranslate: [...doNotTranslate, detectedChatLanguage],\n    });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n\n    showNotification({ message: getTextWithLanguage('AddedToDoNotTranslate', detectedChatLanguage) });\n  });\n\n  useHotkeys(useMemo(() => ({\n    'Mod+F': handleHotkeySearchClick,\n  }), []));\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={isRightColumnShown}\n        color=\"translucent\"\n        size=\"smaller\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('TranslateMessage')}\n      >\n        <Icon name=\"language\" />\n      </Button>\n    );\n  }, [isRightColumnShown, lang]);\n\n  return (\n    <div className=\"HeaderActions\">\n      {!isForForum && canTranslate && (\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"language\" onClick={handleTranslateClick}>\n            {buttonText}\n          </MenuItem>\n          <MenuItem icon=\"replace\" onClick={handleChangeLanguage}>\n            {lang('Chat.Translate.Menu.To')}\n          </MenuItem>\n          <MenuSeparator />\n          {detectedChatLanguage\n            && <MenuItem icon=\"hand-stop\" onClick={handleDoNotTranslate}>{doNotTranslateText}</MenuItem>}\n          <MenuItem icon=\"close-circle\" onClick={handleHide}>{lang('Hide')}</MenuItem>\n        </DropdownMenu>\n      )}\n      {!isMobile && (\n        <>\n          {canExpandActions && !shouldSendJoinRequest && (canSubscribe || shouldJoinToSend) && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </Button>\n          )}\n          {canExpandActions && shouldSendJoinRequest && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang('ChannelJoinRequest')}\n            </Button>\n          )}\n          {canExpandActions && canStartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </Button>\n          )}\n          {canExpandActions && canRestartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </Button>\n          )}\n          {canExpandActions && canUnblock && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleUnblock}\n            >\n              {lang('Unblock')}\n            </Button>\n          )}\n          {canSearch && (\n            <Button\n              round\n              ripple={isRightColumnShown}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleSearchClick}\n              ariaLabel={lang('Conversation.SearchPlaceholder')}\n            >\n              <Icon name=\"search\" />\n            </Button>\n          )}\n          {canCall && (\n            <Button\n              round\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleRequestCall}\n              ariaLabel=\"Call\"\n            >\n              <Icon name=\"phone\" />\n            </Button>\n          )}\n        </>\n      )}\n      {!isForForum && Boolean(pendingJoinRequests) && (\n        <Button\n          round\n          className=\"badge-button\"\n          ripple={isRightColumnShown}\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleJoinRequestsClick}\n          ariaLabel={isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n        >\n          <Icon name=\"user\" />\n          <div className=\"badge\">{pendingJoinRequests}</div>\n        </Button>\n      )}\n      <Button\n        ref={menuButtonRef}\n        className={isMenuOpen ? 'active' : ''}\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        disabled={noMenu}\n        ariaLabel=\"More actions\"\n        onClick={handleHeaderMenuOpen}\n      >\n        <Icon name=\"more\" />\n      </Button>\n      {menuAnchor && (\n        <HeaderMenuContainer\n          chatId={chatId}\n          threadId={threadId}\n          isOpen={isMenuOpen}\n          anchor={menuAnchor}\n          withExtraActions={isMobile || !canExpandActions}\n          isChannel={isChannel}\n          canStartBot={canStartBot}\n          canSubscribe={canSubscribe}\n          canSearch={canSearch}\n          canCall={canCall}\n          canMute={canMute}\n          canViewStatistics={canViewStatistics}\n          canViewBoosts={canViewBoosts}\n          canViewMonetization={canViewMonetization}\n          canShowBoostModal={canShowBoostModal}\n          canLeave={canLeave}\n          canEnterVoiceChat={canEnterVoiceChat}\n          canCreateVoiceChat={canCreateVoiceChat}\n          pendingJoinRequests={pendingJoinRequests}\n          onJoinRequestsClick={handleJoinRequestsClick}\n          withForumActions={isForForum}\n          onSubscribeChannel={handleSubscribeClick}\n          onSearchClick={handleSearchClick}\n          onAsMessagesClick={handleAsMessagesClick}\n          onClose={handleHeaderMenuClose}\n          onCloseAnimationEnd={handleHeaderMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType, isMobile,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat && isChatChannel(chat));\n    const isSuperGroup = Boolean(chat && isChatSuperGroup(chat));\n    const language = selectLanguageCode(global);\n    const translationLanguage = selectTranslationLanguage(global);\n    const isPrivate = isUserId(chatId);\n    const { doNotTranslate } = global.settings.byKey;\n\n    if (!chat || chat.isRestricted || selectIsInSelectMode(global)) {\n      return {\n        noMenu: true,\n        language,\n        translationLanguage,\n        doNotTranslate,\n      };\n    }\n\n    const bot = selectBot(global, chatId);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const fullInfo = chatFullInfo || userFullInfo;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isMainThread = messageListType === 'thread' && threadId === MAIN_THREAD_ID;\n    const isDiscussionThread = messageListType === 'thread' && threadId !== MAIN_THREAD_ID;\n    const isRightColumnShown = selectIsRightColumnShown(global, isMobile);\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n\n    const isUserBlocked = isPrivate ? selectIsUserBlocked(global, chatId) : false;\n    const canRestartBot = Boolean(bot && isUserBlocked);\n    const canStartBot = !canRestartBot && Boolean(selectIsChatBotNotStarted(global, chatId));\n    const canUnblock = isUserBlocked && !bot;\n    const canSubscribe = Boolean(\n      (isMainThread || chat.isForum) && (isChannel || isSuperGroup) && chat.isNotJoined,\n    );\n    const canSearch = isMainThread || isDiscussionThread;\n    const canCall = ARE_CALLS_SUPPORTED && isUserId(chat.id) && !isChatWithSelf && !bot && !chat.isSupport\n      && !isAnonymousForwardsChat(chat.id);\n    const canMute = isMainThread && !isChatWithSelf && !canSubscribe;\n    const canLeave = isSavedDialog || (isMainThread && !canSubscribe);\n    const canEnterVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && chat.isCallActive;\n    const canCreateVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && !chat.isCallActive\n      && (chat.adminRights?.manageCall || (chat.isCreator && isChatBasicGroup(chat)));\n    const canViewStatistics = isMainThread && chatFullInfo?.canViewStatistics;\n    const canViewMonetization = isMainThread && chatFullInfo?.canViewMonetization;\n    const canViewBoosts = isMainThread\n      && (isSuperGroup || isChannel) && (canViewStatistics || getHasAdminRight(chat, 'postStories'));\n    const canShowBoostModal = !canViewBoosts && (isSuperGroup || isChannel);\n    const pendingJoinRequests = isMainThread ? chatFullInfo?.requestsPending : undefined;\n    const shouldJoinToSend = Boolean(chat?.isNotJoined && chat.isJoinToSend);\n    const shouldSendJoinRequest = Boolean(chat?.isNotJoined && chat.isJoinRequest);\n    const noAnimation = !selectCanAnimateInterface(global);\n\n    const isTranslating = Boolean(selectRequestedChatTranslationLanguage(global, chatId));\n    const canTranslate = selectCanTranslateChat(global, chatId) && !fullInfo?.isTranslationDisabled;\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n    return {\n      noMenu: false,\n      isChannel,\n      isRightColumnShown,\n      canStartBot,\n      canRestartBot,\n      canSubscribe,\n      canSearch,\n      canCall,\n      canMute,\n      canViewStatistics,\n      canViewMonetization,\n      canViewBoosts,\n      canShowBoostModal,\n      canLeave,\n      canEnterVoiceChat,\n      canCreateVoiceChat,\n      pendingJoinRequests,\n      shouldJoinToSend,\n      shouldSendJoinRequest,\n      noAnimation,\n      canTranslate,\n      isTranslating,\n      translationLanguage,\n      language,\n      doNotTranslate,\n      detectedChatLanguage: chat.detectedLanguage,\n      canUnblock,\n      isAccountFrozen,\n    };\n  },\n)(HeaderActions));\n\nfunction setFocusInSearchInput() {\n  const searchInput = document.querySelector<HTMLInputElement>('#MiddleSearch input');\n  searchInput?.focus();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mklnEg0s\",\"compact\":\"VGmPJoga\",\"image\":\"tT8KQwg0\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiDocument } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getDocumentMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useMedia from '../../../hooks/useMedia';\n\nimport styles from './AttachBotIcon.module.scss';\n\ntype OwnProps = {\n  icon: ApiDocument;\n  theme: ThemeKey;\n};\n\nconst ADDITIONAL_STROKE_WIDTH = '0.5px';\nconst DARK_THEME_COLOR = 'rgb(170, 170, 170)';\nconst LIGHT_THEME_COLOR = 'rgb(112, 117, 121)';\nconst COLOR_REPLACE_PATTERN = /#fff/gi;\n\nconst AttachBotIcon: FC<OwnProps> = ({\n  icon, theme,\n}) => {\n  const { isTouchScreen } = useAppLayout();\n  const mediaData = useMedia(getDocumentMediaHash(icon, 'full'), false, ApiMediaFormat.Text);\n\n  const iconSvg = useMemo(() => {\n    if (!mediaData) return '';\n    const color = theme === 'dark' ? DARK_THEME_COLOR : LIGHT_THEME_COLOR;\n\n    const mediaDataWithReplacedColors = mediaData.replace(COLOR_REPLACE_PATTERN, color);\n    const doc = new DOMParser().parseFromString(mediaDataWithReplacedColors, 'image/svg+xml');\n    doc.querySelectorAll('path').forEach((path) => {\n      path.style.stroke = color;\n      path.style.strokeWidth = ADDITIONAL_STROKE_WIDTH;\n    });\n\n    return `data:image/svg+xml;utf8,${doc.documentElement.outerHTML}`;\n  }, [mediaData, theme]);\n\n  return (\n    <i className={buildClassName(styles.root, 'icon', !isTouchScreen && styles.compact)}>\n      <img\n        src={iconSvg}\n        alt=\"\"\n        className={buildClassName(styles.image, !isTouchScreen && styles.compact)}\n        draggable={false}\n      />\n    </i>\n  );\n};\n\nexport default memo(AttachBotIcon);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachBot } from '../../../api/types';\nimport type { IAnchorPosition, ThemeKey, ThreadId } from '../../../types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport AttachBotIcon from './AttachBotIcon';\n\ntype OwnProps = {\n  bot: ApiAttachBot;\n  theme: ThemeKey;\n  isInSideMenu?: true;\n  chatId?: string;\n  threadId?: ThreadId;\n  canShowNew?: boolean;\n  onMenuOpened: VoidFunction;\n  onMenuClosed: VoidFunction;\n};\n\nconst AttachBotItem: FC<OwnProps> = ({\n  bot,\n  theme,\n  chatId,\n  threadId,\n  isInSideMenu,\n  canShowNew,\n  onMenuOpened,\n  onMenuClosed,\n}) => {\n  const { callAttachBot, toggleAttachBot } = getActions();\n\n  const lang = useOldLang();\n\n  const icon = useMemo(() => {\n    return bot.icons.find(({ name }) => name === 'default_static')?.document;\n  }, [bot.icons]);\n\n  const [isMenuOpen, openMenu, closeMenu] = useFlag();\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleContextMenu = useLastCallback((e: React.UIEvent) => {\n    e.preventDefault();\n    const rect = e.currentTarget.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n    onMenuOpened();\n    openMenu();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isInSideMenu) {\n      callAttachBot({\n        bot,\n        isFromSideMenu: true,\n      });\n    } else {\n      callAttachBot({\n        bot,\n        chatId: chatId!,\n        threadId,\n      });\n    }\n  });\n\n  const handleCloseMenu = useLastCallback(() => {\n    closeMenu();\n    onMenuClosed();\n  });\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleRemoveBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot.id,\n      isEnabled: false,\n    });\n  });\n\n  return (\n    <MenuItem\n      key={bot.id}\n      customIcon={icon && <AttachBotIcon icon={icon} theme={theme} />}\n      icon={!icon ? 'bots' : undefined}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {bot.shortName}\n      {canShowNew && bot.isDisclaimerNeeded && <span className=\"menu-item-badge\">{lang('New')}</span>}\n      {menuPosition && (\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${menuPosition.x}px;top: ${menuPosition.y}px;`}\n          className=\"bot-attach-context-menu\"\n          autoClose\n          withPortal\n          onClose={handleCloseMenu}\n          onCloseAnimationEnd={handleCloseAnimationEnd}\n        >\n          <MenuItem icon=\"stop\" destructive onClick={handleRemoveBot}>{lang('WebApp.RemoveBot')}</MenuItem>\n        </Menu>\n      )}\n\n    </MenuItem>\n  );\n};\n\nexport default memo(AttachBotItem);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomEmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomEmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomEmojiTooltip = useModuleLoader(Bundles.Extra, 'CustomEmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomEmojiTooltip ? <CustomEmojiTooltip {...props} /> : undefined;\n};\n\nexport default CustomEmojiTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomSendMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomSendMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomSend = useModuleLoader(Bundles.Extra, 'CustomSendMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomSend ? <CustomSend {...props} /> : undefined;\n};\n\nexport default CustomSendMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useEffectOnce from '../../../hooks/useEffectOnce';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Icon from '../../common/icons/Icon';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  isGeneric?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, isGeneric, onFileSelect }) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const svgRef = useRef<SVGSVGElement>(null);\n\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  });\n\n  const handleResize = useLastCallback(() => {\n    const svg = svgRef.current;\n    if (!svg) {\n      return;\n    }\n\n    const { width, height } = svg.getBoundingClientRect();\n    svg.viewBox.baseVal.width = width;\n    svg.viewBox.baseVal.height = height;\n  });\n\n  // Can't listen for SVG resize\n  useResizeObserver(ref, handleResize);\n\n  useEffectOnce(handleResize);\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      ref={ref}\n      onDrop={onFileSelect}\n      onDragEnter={markHovered}\n      onDragLeave={handleDragLeave}\n      data-dropzone\n    >\n      <svg className=\"target-outline-container\">\n        <rect className=\"target-outline\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" rx=\"8\" />\n      </svg>\n      <div className=\"target-content\">\n        <Icon name={isQuick ? 'photo' : 'document'} />\n        <div className=\"title\">Drop files here to send them</div>\n        {!isGeneric && <div className=\"description\">{isQuick ? 'in a quick way' : 'without compression'}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { canReplaceMessageMedia } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport buildAttachment from './helpers/buildAttachment';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[], suggestCompression?: boolean) => void;\n  editingMessage?: ApiMessage | undefined;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea: FC<OwnProps> = ({\n  isOpen, withQuick, onHide, onFileSelect, editingMessage,\n}) => {\n  const lang = useOldLang();\n  const { showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const hideTimeoutRef = useRef<number>(null);\n  const prevWithQuick = usePreviousDeprecated(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen);\n  const isInAlbum = editingMessage && editingMessage?.groupedId;\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      const newAttachment = folderFiles && await buildAttachment(folderFiles[0].name, folderFiles[0]);\n      const canReplace = editingMessage && newAttachment && canReplaceMessageMedia(editingMessage, newAttachment);\n\n      if (canReplace) {\n        showNotification({ message: lang(isInAlbum ? 'lng_edit_media_album_error' : 'lng_edit_media_invalid_file') });\n        return;\n      }\n      if (folderFiles?.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    onHide();\n    onFileSelect(files, withQuick ? false : undefined);\n  });\n\n  const handleQuickFilesDrop = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), true);\n    }\n  });\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if (\n      (fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && (\n        !toTarget || !(toTarget as HTMLDivElement)!.matches('.DropTarget, .DropArea')\n      )\n    ) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  });\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const shouldRenderQuick = withQuick || prevWithQuick;\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerSelector=\"#middle-column-portals\">\n      <div\n        className={className}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={onHide}\n        onClick={onHide}\n      >\n        <DropTarget onFileSelect={handleFilesDrop} isGeneric={!shouldRenderQuick} />\n        {shouldRenderQuick && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './EmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default EmojiTooltipAsync;\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport React, {\n  getIsHeavyAnimating,\n  memo, useEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiInputMessageReplyInfo } from '../../../api/types';\nimport type {\n  MessageListType, SharedSettings, ThreadId,\n} from '../../../types';\nimport type { RichInputCtx } from '../../common/richinput/useRichEditable';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectCanPlayAnimatedEmojis, selectDraft, selectIsInSelectMode } from '../../../global/selectors';\nimport { selectSharedSettings } from '../../../global/selectors/sharedState';\nimport { IS_ANDROID, IS_IOS, IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport { getIsDirectTextInputDisabled } from '../../../util/directInputManager';\nimport parseEmojiOnlyString from '../../../util/emoji/parseEmojiOnlyString';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport { debounce } from '../../../util/schedulers';\nimport renderText from '../../common/helpers/renderText';\nimport { useRichEditableKeyboardListener } from '../../common/richinput/useRichEditable';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport { RichInputKeyboardPriority } from '../../common/richinput/Keyboard';\nimport RichEditableAttachment from '../../common/richinput/RichEditableAttachment';\nimport TextFormatter from '../../common/richinput/TextFormatter.async';\nimport Button from '../../ui/Button';\nimport TextTimer from '../../ui/TextTimer';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\n\nconst SCROLLER_CLASS = 'input-scroller';\nconst INPUT_WRAPPER_CLASS = 'message-input-wrapper';\n\ntype OwnProps = {\n  richInputCtx: RichInputCtx;\n  id: string;\n  chatId: string;\n  threadId: ThreadId;\n  isAttachmentModalInput?: boolean;\n  isStoryInput?: boolean;\n  customEmojiPrefix: string;\n  editableInputId?: string;\n  isReady: boolean;\n  isActive: boolean;\n  placeholder: TeactNode | string;\n  timedPlaceholderLangKey?: string;\n  timedPlaceholderDate?: number;\n  forcedPlaceholder?: string;\n  noFocusInterception?: boolean;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  canSendPlainText?: boolean;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n  onScroll?: (event: React.UIEvent<HTMLElement>) => void;\n  captionLimit?: number;\n  isNeedPremium?: boolean;\n  messageListType?: MessageListType;\n};\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  isSelectModeActive?: boolean;\n  messageSendKeyCombo?: SharedSettings['messageSendKeyCombo'];\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\n// Heuristics allowing the user to make a triple click\nconst SELECTION_RECALCULATE_DELAY_MS = 260;\n\nconst IGNORE_KEYS = [\n  'Esc', 'Escape', 'Enter', 'PageUp', 'PageDown', 'Meta', 'Alt', 'Ctrl', 'ArrowDown', 'ArrowUp', 'Control', 'Shift',\n];\n\nconst MessageInput: FC<OwnProps & StateProps> = ({\n  richInputCtx,\n  id,\n  chatId,\n  captionLimit,\n  isAttachmentModalInput,\n  isStoryInput,\n  editableInputId,\n  isActive,\n  placeholder,\n  timedPlaceholderLangKey,\n  timedPlaceholderDate,\n  forcedPlaceholder,\n  canSendPlainText,\n  canAutoFocus,\n  noFocusInterception,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyInfo,\n  isSelectModeActive,\n  messageSendKeyCombo,\n  onSuppressedFocus,\n  onSend,\n  onScroll,\n  isNeedPremium,\n  messageListType,\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n    showAllowedMessageTypesNotification,\n    openPremiumModal,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  // let inputRef = richInputCtx.inputRef;\n\n  // eslint-disable-next-line no-null/no-null\n  const selectionTimeoutRef = useRef<number>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const absoluteContainerRef = useRef<HTMLDivElement>(null);\n\n  const oldLang = useOldLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [isTextFormatterDisabled, setIsTextFormatterDisabled] = useState<boolean>(false);\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const [shouldDisplayTimer, setShouldDisplayTimer] = useState(false);\n\n  useEffect(() => {\n    setShouldDisplayTimer(Boolean(timedPlaceholderLangKey && timedPlaceholderDate));\n  }, [timedPlaceholderDate, timedPlaceholderLangKey]);\n\n  const handleTimerEnd = useLastCallback(() => {\n    setShouldDisplayTimer(false);\n  });\n\n  const chatIdRef = useRef(chatId);\n  chatIdRef.current = chatId;\n\n  const focusInput = useLastCallback(() => {\n    if (isNeedPremium) {\n      return;\n    }\n\n    if (getIsHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    richInputCtx.editable.root.focus();\n  });\n\n  const handleCloseTextFormatter = useLastCallback(() => {\n    closeTextFormatter();\n    const sel = window.getSelection();\n    if (sel && sel.rangeCount > 0) {\n      sel.collapseToEnd();\n    }\n  });\n\n  const checkSelection = useLastCallback(() => {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    if (!isActive) return false;\n\n    const selection = richInputCtx.editable.selectionS();\n    if (!selection) {\n      closeTextFormatter();\n      if (IS_ANDROID) {\n        setIsTextFormatterDisabled(false);\n      }\n      return false;\n    }\n\n    const selectionRange = selection.range;\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  });\n\n  const processSelection = useLastCallback(() => {\n    if (!checkSelection()) {\n      return;\n    }\n\n    if (isTextFormatterDisabled) {\n      return;\n    }\n\n    // const selectionRange = window.getSelection()!.getRangeAt(0);\n    // const selectionRect = selectionRange.getBoundingClientRect();\n    // const scrollerRect = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!.getBoundingClientRect();\n\n    // let x = (selectionRect.left + selectionRect.width / 2) - scrollerRect.left;\n\n    // if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n    //   x = TEXT_FORMATTER_SAFE_AREA_PX;\n    // } else if (x > scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n    //   x = scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    // }\n\n    // setTextFormatterAnchorPosition({\n    //   x,\n    //   y: selectionRect.top - scrollerRect.top,\n    // });\n\n    // setSelectedRange(selectionRange);\n    openTextFormatter();\n  });\n\n  useEffect(() => {\n    processSelection();\n  }, [processSelection, richInputCtx.editable.selectionS]);\n\n  function processSelectionWithTimeout() {\n    if (selectionTimeoutRef.current) {\n      window.clearTimeout(selectionTimeoutRef.current);\n    }\n    // Small delay to allow browser properly recalculate selection\n    selectionTimeoutRef.current = window.setTimeout(processSelection, SELECTION_RECALCULATE_DELAY_MS);\n  }\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (e.button !== 2) {\n      const listenerEl = e.currentTarget.closest(`.${INPUT_WRAPPER_CLASS}`) || e.target;\n\n      listenerEl.addEventListener('mouseup', processSelectionWithTimeout, { once: true });\n      return;\n    }\n\n    if (isContextMenuOpenRef.current) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function handleCloseContextMenu(e2: KeyboardEvent | MouseEvent) {\n      if (e2 instanceof KeyboardEvent && e2.key !== 'Esc' && e2.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', handleCloseContextMenu);\n      window.removeEventListener('mousedown', handleCloseContextMenu);\n    }\n\n    document.addEventListener('mousedown', handleCloseContextMenu);\n    document.addEventListener('keydown', handleCloseContextMenu);\n  }\n\n  function handleKeyDown(e: KeyboardEvent) {\n    // https://levelup.gitconnected.com/javascript-events-handlers-keyboard-and-load-events-1b3e46a6b0c3#1960\n    const { isComposing } = e;\n\n    const empty = richInputCtx.editable.emptyS();\n    if (!isComposing && empty && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return true;\n      }\n    }\n\n    if (!isComposing && e.key === 'Enter') {\n      if (\n        !isMobileDevice\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n        return true;\n      }\n    } else if (!isComposing && e.key === 'ArrowUp' && empty && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n      return true;\n    } else {\n      e.target?.addEventListener('keyup', processSelectionWithTimeout, { once: true });\n    }\n    return false;\n  }\n\n  useRichEditableKeyboardListener(richInputCtx, {\n    priority: RichInputKeyboardPriority.Composer,\n    onKeydown: handleKeyDown,\n  });\n\n  function handleAndroidContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    setIsTextFormatterDisabled(!isTextFormatterDisabled);\n\n    if (!isTextFormatterDisabled) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      processSelection();\n    } else {\n      closeTextFormatter();\n    }\n  }\n\n  function handleClick() {\n    if (isAttachmentModalInput || canSendPlainText || (isStoryInput && isNeedPremium)) {\n      richInputCtx.editable.focus();\n      return;\n    }\n    showAllowedMessageTypesNotification({ chatId, messageListType });\n  }\n\n  const handleOpenPremiumModal = useLastCallback(() => openPremiumModal());\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyInfo, canAutoFocus]);\n\n  useEffect(() => {\n    if (\n      !chatId\n      || editableInputId !== EDITABLE_INPUT_ID\n      || noFocusInterception\n      || isMobileDevice\n      || isSelectModeActive\n    ) {\n      return undefined;\n    }\n\n    const handleDocumentKeyDown = (e: KeyboardEvent) => {\n      if (getIsDirectTextInputDisabled()) {\n        return;\n      }\n\n      const { key } = e;\n      const target = e.target as HTMLElement | undefined;\n\n      if (!target || IGNORE_KEYS.includes(key)) {\n        return;\n      }\n\n      const input = richInputCtx.editable.root;\n      const isSelectionCollapsed = document.getSelection()?.isCollapsed;\n\n      if (\n        ((key.startsWith('Arrow') || (e.shiftKey && key === 'Shift')) && !isSelectionCollapsed)\n        || (e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT')\n      ) {\n        return;\n      }\n\n      if (\n        input\n        && target !== input\n        && target.tagName !== 'INPUT'\n        && target.tagName !== 'TEXTAREA'\n        && !target.isContentEditable\n      ) {\n        focusEditableElement(input, true, true);\n\n        const newEvent = new KeyboardEvent(e.type, e as any);\n        input.dispatchEvent(newEvent);\n      }\n    };\n\n    document.addEventListener('keydown', handleDocumentKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDown, true);\n    };\n  }, [richInputCtx.editable, chatId, editableInputId, isMobileDevice, isSelectModeActive, noFocusInterception]);\n\n  useEffect(() => {\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab' && !getIsDirectTextInputDisabled()) {\n        e.preventDefault();\n        requestMutation(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput]);\n\n  useEffect(() => {\n    const input = richInputCtx.editable.root;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [richInputCtx.editable, shouldSuppressFocus]);\n\n  const isTouched = useDerivedState(\n    () => Boolean(isActive && !richInputCtx.editable.emptyS()),\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n    [isActive, richInputCtx.editable.emptyS, richInputCtx.editable],\n  );\n\n  const className = buildClassName(\n    'allow-selection',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  const inputScrollerContentClass = buildClassName(\n    'form-control input-scroller-content', isNeedPremium && 'is-need-premium',\n  );\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={oldLang.isRtl ? 'rtl' : undefined}>\n      <div\n        className={buildClassName('custom-scroll', SCROLLER_CLASS, isNeedPremium && 'is-need-premium')}\n        onScroll={onScroll}\n        onClick={handleClick}\n      >\n        <div\n          className={inputScrollerContentClass}\n          onMouseDown={handleMouseDown}\n          onContextMenu={IS_ANDROID ? handleAndroidContextMenu : undefined}\n          onTouchCancel={IS_ANDROID ? processSelectionWithTimeout : undefined}\n        >\n          <RichEditableAttachment\n            richInputCtx={richInputCtx}\n            className={className}\n            detached={!isActive}\n            tabIndex={0}\n            placeholder={typeof placeholder === 'string' ? placeholder : ''}\n            disableEdit={!isAttachmentModalInput && !canSendPlainText}\n          />\n          {!forcedPlaceholder && (\n            <span\n              className={buildClassName(\n                'placeholder-text',\n                !isAttachmentModalInput && !canSendPlainText && 'with-icon',\n                isTouched && 'touched',\n                isNeedPremium && 'is-need-premium',\n              )}\n              dir=\"auto\"\n            >\n              {!isAttachmentModalInput && !canSendPlainText\n                && <Icon name=\"lock-badge\" className=\"placeholder-icon\" />}\n              {shouldDisplayTimer ? (\n                <TextTimer langKey={timedPlaceholderLangKey!} endsAt={timedPlaceholderDate!} onEnd={handleTimerEnd} />\n              ) : placeholder}\n              {isStoryInput && isNeedPremium && (\n                <Button className=\"unlock-button\" size=\"tiny\" color=\"adaptive\" onClick={handleOpenPremiumModal}>\n                  {oldLang('StoryRepliesLockedButton')}\n                </Button>\n              )}\n            </span>\n          )}\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          <div ref={absoluteContainerRef} className=\"absolute-video-container\" />\n        </div>\n      </div>\n      {captionLimit !== undefined && (\n        <div className=\"max-length-indicator\" dir=\"auto\">\n          {captionLimit}\n        </div>\n      )}\n      <TextFormatter\n        richInputCtx={richInputCtx}\n        isOpen={isTextFormatterOpen}\n        isActive={isActive}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder!)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }: OwnProps): StateProps => {\n    const { messageSendKeyCombo } = selectSharedSettings(global);\n\n    return {\n      messageSendKeyCombo,\n      replyInfo: chatId && threadId ? selectDraft(global, chatId, threadId)?.replyInfo : undefined,\n      isSelectModeActive: selectIsInSelectMode(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(MessageInput));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SymbolMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SymbolMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SymbolMenu = useModuleLoader(Bundles.Extra, 'SymbolMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SymbolMenu ? <SymbolMenu {...props} /> : undefined;\n};\n\nexport default SymbolMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { IAnchorPosition, ThreadId } from '../../../types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_MODAL_CSS_SELECTOR } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport Spinner from '../../ui/Spinner';\nimport SymbolMenu from './SymbolMenu.async';\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isMobile?: boolean;\n  isReady?: boolean;\n  isSymbolMenuOpen?: boolean;\n  canSendGifs?: boolean;\n  canSendStickers?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  forceDarkTheme?: boolean;\n  openSymbolMenu: VoidFunction;\n  closeSymbolMenu: VoidFunction;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  closeBotCommandMenu?: VoidFunction;\n  closeSendAsMenu?: VoidFunction;\n  isSymbolMenuForced?: boolean;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  className?: string;\n  inputCssSelector?: string;\n};\n\nconst SymbolMenuButton: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isMobile,\n  canSendGifs,\n  canSendStickers,\n  isMessageComposer,\n  isReady,\n  isSymbolMenuOpen,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  isSymbolMenuForced,\n  className,\n  forceDarkTheme,\n  inputCssSelector = EDITABLE_INPUT_CSS_SELECTOR,\n  openSymbolMenu,\n  closeSymbolMenu,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n  closeBotCommandMenu,\n  closeSendAsMenu,\n}) => {\n  const {\n    setStickerSearchQuery,\n    setGifSearchQuery,\n    addRecentEmoji,\n    addRecentCustomEmoji,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const triggerRef = useRef<HTMLDivElement>(null);\n\n  const [isSymbolMenuLoaded, onSymbolMenuLoadingComplete] = useFlag();\n  const [contextMenuAnchor, setContextMenuAnchor] = useState<IAnchorPosition | undefined>(undefined);\n\n  const symbolMenuButtonClassName = buildClassName(\n    'composer-action-button mobile-symbol-menu-button',\n    !isReady && 'not-ready',\n    isSymbolMenuLoaded\n      ? (isSymbolMenuOpen && 'menu-opened')\n      : (isSymbolMenuOpen && 'is-loading'),\n  );\n\n  const handleActivateSymbolMenu = useLastCallback(() => {\n    closeBotCommandMenu?.();\n    closeSendAsMenu?.();\n    openSymbolMenu();\n    const triggerEl = triggerRef.current;\n    if (!triggerEl) return;\n    const { x, y } = triggerEl.getBoundingClientRect();\n    setContextMenuAnchor({ x, y });\n  });\n\n  const handleSearchOpen = useLastCallback((type: 'stickers' | 'gifs') => {\n    if (type === 'stickers') {\n      setStickerSearchQuery({ query: '' });\n      setGifSearchQuery({ query: undefined });\n    } else {\n      setGifSearchQuery({ query: '' });\n      setStickerSearchQuery({ query: undefined });\n    }\n  });\n\n  const handleSymbolMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(\n      isAttachmentModal ? EDITABLE_INPUT_MODAL_CSS_SELECTOR : inputCssSelector,\n    );\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      openSymbolMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu?.();\n      openSymbolMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getRootElement = useLastCallback(() => triggerRef.current?.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => document.querySelector('#portals .SymbolMenu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  return (\n    <>\n      {isMobile ? (\n        <Button\n          className={symbolMenuButtonClassName}\n          round\n          color=\"translucent\"\n          onClick={isSymbolMenuOpen ? closeSymbolMenu : handleSymbolMenuOpen}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <Icon name=\"smile\" />\n          <Icon name=\"keyboard\" />\n          {isSymbolMenuOpen && !isSymbolMenuLoaded && <Spinner color=\"gray\" />}\n        </Button>\n      ) : (\n        <ResponsiveHoverButton\n          className={buildClassName('composer-action-button symbol-menu-button', isSymbolMenuOpen && 'activated')}\n          round\n          color=\"translucent\"\n          onActivate={handleActivateSymbolMenu}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <div ref={triggerRef} className=\"symbol-menu-trigger\" />\n          <Icon name=\"smile\" />\n        </ResponsiveHoverButton>\n      )}\n\n      <SymbolMenu\n        chatId={chatId}\n        threadId={threadId}\n        isOpen={isSymbolMenuOpen || Boolean(isSymbolMenuForced)}\n        canSendGifs={canSendGifs}\n        canSendStickers={canSendStickers}\n        isMessageComposer={isMessageComposer}\n        idPrefix={idPrefix}\n        onLoad={onSymbolMenuLoadingComplete}\n        onClose={closeSymbolMenu}\n        onEmojiSelect={onEmojiSelect}\n        onStickerSelect={onStickerSelect}\n        onCustomEmojiSelect={onCustomEmojiSelect}\n        onGifSelect={onGifSelect}\n        onRemoveSymbol={onRemoveSymbol}\n        onSearchOpen={handleSearchOpen}\n        addRecentEmoji={addRecentEmoji}\n        addRecentCustomEmoji={addRecentCustomEmoji}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n        className={buildClassName(className, forceDarkTheme && 'component-theme-dark')}\n        anchor={isAttachmentModal ? contextMenuAnchor : undefined}\n        getTriggerElement={isAttachmentModal ? getTriggerElement : undefined}\n        getRootElement={isAttachmentModal ? getRootElement : undefined}\n        getMenuElement={isAttachmentModal ? getMenuElement : undefined}\n        getLayout={isAttachmentModal ? getLayout : undefined}\n      />\n    </>\n  );\n};\n\nexport default memo(SymbolMenuButton);\n","import type { ApiAttachment } from '../../../../api/types';\n\nimport {\n  GIF_MIME_TYPE,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../../config';\nimport { parseAudioMetadata } from '../../../../util/audio';\nimport {\n  createPosterForVideo,\n  preloadImage,\n  preloadVideo,\n} from '../../../../util/files';\nimport { scaleImage } from '../../../../util/imageResize';\n\nconst MAX_QUICK_IMG_SIZE = 1280; // px\nconst MAX_THUMB_IMG_SIZE = 40; // px\nconst MAX_ASPECT_RATIO = 20;\nconst FILE_EXT_REGEX = /\\.[^/.]+$/;\n\nexport default async function buildAttachment(\n  filename: string, blob: Blob, options?: Partial<ApiAttachment>,\n): Promise<ApiAttachment> {\n  const blobUrl = URL.createObjectURL(blob);\n  const { type: mimeType, size } = blob;\n  let quick;\n  let audio;\n  let previewBlobUrl;\n  let shouldSendAsFile;\n\n  if (SUPPORTED_PHOTO_CONTENT_TYPES.has(mimeType)) {\n    const img = await preloadImage(blobUrl);\n    const { width, height } = img;\n    shouldSendAsFile = !validateAspectRatio(width, height);\n\n    const shouldShrink = Math.max(width, height) > MAX_QUICK_IMG_SIZE;\n    const isGif = mimeType === GIF_MIME_TYPE;\n\n    if (!shouldSendAsFile) {\n      if (!options?.compressedBlobUrl && !isGif && (shouldShrink || mimeType !== 'image/jpeg')) {\n        const resizedUrl = await scaleImage(\n          blobUrl, shouldShrink ? MAX_QUICK_IMG_SIZE / Math.max(width, height) : 1, 'image/jpeg',\n        );\n        URL.revokeObjectURL(blobUrl);\n        return buildAttachment(filename, blob, {\n          compressedBlobUrl: resizedUrl,\n        });\n      }\n\n      if (mimeType === 'image/jpeg') {\n        filename = filename.replace(FILE_EXT_REGEX, '.jpg');\n      }\n\n      quick = { width, height };\n    }\n\n    const shouldShrinkPreview = Math.max(width, height) > MAX_THUMB_IMG_SIZE;\n    if (shouldShrinkPreview) {\n      previewBlobUrl = await scaleImage(\n        blobUrl, MAX_THUMB_IMG_SIZE / Math.max(width, height), 'image/jpeg',\n      );\n    } else {\n      previewBlobUrl = blobUrl;\n    }\n  } else if (SUPPORTED_VIDEO_CONTENT_TYPES.has(mimeType)) {\n    try {\n      const { videoWidth: width, videoHeight: height, duration } = await preloadVideo(blobUrl);\n      shouldSendAsFile = !validateAspectRatio(width, height);\n      if (!shouldSendAsFile) {\n        quick = { width: width!, height: height!, duration: duration! };\n      }\n    } catch (err) {\n      shouldSendAsFile = true;\n    }\n\n    previewBlobUrl = await createPosterForVideo(blobUrl);\n  } else if (SUPPORTED_AUDIO_CONTENT_TYPES.has(mimeType)) {\n    const {\n      duration, title, performer, coverUrl,\n    } = await parseAudioMetadata(blobUrl);\n    audio = {\n      duration: duration || 0,\n      title,\n      performer,\n    };\n    previewBlobUrl = coverUrl;\n  }\n\n  return {\n    blobUrl,\n    filename,\n    mimeType,\n    size,\n    quick,\n    audio,\n    previewBlobUrl,\n    shouldSendAsFile: shouldSendAsFile || undefined,\n    uniqueId: `${Date.now()}-${Math.random()}`,\n    ...options,\n  };\n}\n\nexport function prepareAttachmentsToSend(\n  attachments: ApiAttachment[], shouldSendCompressed?: boolean,\n): ApiAttachment[] {\n  return attachments.map((attach) => {\n    if (shouldSendCompressed) {\n      if (attach.compressedBlobUrl) {\n        return {\n          ...attach,\n          blobUrl: attach.compressedBlobUrl,\n        };\n      }\n      return attach;\n    }\n\n    return {\n      ...attach,\n      shouldSendAsFile: !(attach.voice || attach.audio) || undefined,\n      shouldSendAsSpoiler: undefined,\n    };\n  });\n}\n\nfunction validateAspectRatio(width: number, height: number) {\n  const maxAspectRatio = Math.max(width, height) / Math.min(width, height);\n  return maxAspectRatio <= MAX_ASPECT_RATIO;\n}\n","type AudioMetadata = {\n  title?: string;\n  performer?: string;\n  duration?: number;\n  coverUrl?: string;\n};\n\nexport async function parseAudioMetadata(url: string): Promise<AudioMetadata> {\n  const { fetchFromUrl, selectCover } = await import('../lib/music-metadata-browser');\n  const metadata = await fetchFromUrl(url);\n  const { common: { title, artist, picture }, format: { duration } } = metadata;\n\n  const cover = selectCover(picture);\n  const coverBlob = cover ? new Blob([cover.data], { type: cover.format }) : undefined;\n  const coverUrl = coverBlob ? URL.createObjectURL(coverBlob) : undefined;\n\n  return {\n    title,\n    performer: artist,\n    duration,\n    coverUrl,\n  };\n}\n","import { validateFiles } from '../../../../util/files';\n\nexport default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return validateFiles(files);\n}\n","import React, { type TeactNode } from '../../../../lib/teact/teact';\n\nimport type { ApiKeyboardButton } from '../../../../api/types';\nimport type { LangFn } from '../../../../util/localization';\n\nimport { STARS_ICON_PLACEHOLDER } from '../../../../config';\nimport { replaceWithTeact } from '../../../../util/replaceWithTeact';\nimport renderText from '../../../common/helpers/renderText';\n\nimport { type OldLangFn } from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\n\nexport default function renderKeyboardButtonText(lang: OldLangFn | LangFn, button: ApiKeyboardButton): TeactNode {\n  if (button.type === 'receipt') {\n    return lang('PaymentReceipt');\n  }\n\n  if (button.type === 'buy') {\n    return replaceWithTeact(button.text, STARS_ICON_PLACEHOLDER, <Icon className=\"star-currency-icon\" name=\"star\" />);\n  }\n\n  return renderText(button.text);\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { RichInputCtx } from '../../../common/richinput/useRichEditable';\n\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport { buildCustomEmojiHtml } from '../../../common/richinput/customEmoji';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\nconst RE_ENDS_ON_EMOJI = new RegExp(`(${twemojiRegex.source})$`, 'g');\n\nexport default function useCustomEmojiTooltip(\n  isEnabled: boolean,\n  richInputCtx: RichInputCtx,\n  customEmojis?: ApiSticker[],\n) {\n  const { loadCustomEmojiForEmoji, clearCustomEmojiForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractLastEmojiThrottled = useThrottledResolver(() => {\n    const matchable = richInputCtx.editable.matchableS();\n\n    if (!isEnabled || !matchable || !richInputCtx.editable.selectionS()?.collapsed) return undefined;\n\n    const emojiMatch = matchable.match(RE_ENDS_ON_EMOJI);\n    if (!emojiMatch || emojiMatch.length === 0) return undefined;\n\n    return emojiMatch[emojiMatch.length - 1];\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [richInputCtx.editable.matchableS, isEnabled], THROTTLE);\n\n  const getLastEmoji = useDerivedSignal(\n    extractLastEmojiThrottled, [extractLastEmojiThrottled, richInputCtx.editable.matchableS], true,\n  );\n\n  const isActive = useDerivedState(() => Boolean(getLastEmoji()), [getLastEmoji]);\n  const hasCustomEmojis = Boolean(customEmojis?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const lastEmoji = getLastEmoji();\n    if (lastEmoji) {\n      if (!hasCustomEmojis) {\n        loadCustomEmojiForEmoji({\n          emoji: lastEmoji,\n        });\n      }\n    } else {\n      clearCustomEmojiForEmoji();\n    }\n  }, [isEnabled, isActive, getLastEmoji, hasCustomEmojis, clearCustomEmojiForEmoji, loadCustomEmojiForEmoji]);\n\n  const insertCustomEmoji = useLastCallback((emoji: ApiSticker) => {\n    const lastEmoji = getLastEmoji();\n    if (!isEnabled || !lastEmoji) return;\n\n    const html = buildCustomEmojiHtml(emoji);\n    requestNextMutation(() => {\n      richInputCtx.editable.insertMatchableHtml(html, (c) => lastEmoji.indexOf(c) === -1);\n    });\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, richInputCtx.editable.matchableS]);\n\n  return {\n    isCustomEmojiTooltipOpen: Boolean(isActive && hasCustomEmojis && !isManuallyClosed),\n    closeCustomEmojiTooltip: markManuallyClosed,\n    insertCustomEmoji,\n  };\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { EmojiData, EmojiModule, EmojiRawData } from '../../../../util/emoji/emoji';\nimport type { RichInputCtx } from '../../../common/richinput/useRichEditable';\n\nimport { selectCustomEmojiForEmojis } from '../../../../global/selectors';\nimport { uncompressEmoji } from '../../../../util/emoji/emoji';\nimport {\n  buildCollectionByKey, mapValues, pickTruthy, unique, uniqueByField,\n} from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport memoized from '../../../../util/memoized';\nimport renderText from '../../../common/helpers/renderText';\nimport { buildCustomEmojiHtml } from '../../../common/richinput/customEmoji';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n  maxKeyLength: number;\n}\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nlet RE_LOWERCASE_TEST: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst THROTTLE = 300;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\p{L}\\p{N}]*$/gui;\n  RE_LOWERCASE_TEST = /\\p{Ll}/u;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\d\\wа-яёґєії]*$/gi;\n  RE_LOWERCASE_TEST = /[a-zяёґєії]/;\n}\n\nexport default function useEmojiTooltip(\n  isEnabled: boolean,\n  richInputCtx: RichInputCtx,\n  recentEmojiIds: string[],\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n) {\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n  const [filteredCustomEmojis, setFilteredCustomEmojis] = useState<ApiSticker[]>(MEMO_EMPTY_ARRAY);\n\n  // Initialize data on first render\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    function exec() {\n      setById(emojiData.emojis);\n    }\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData().then(exec);\n    }\n  }, [isEnabled]);\n\n  const detectEmojiCodeThrottled = useThrottledResolver(() => {\n    if (!isEnabled) return undefined;\n    const matchable = richInputCtx.editable.matchableS();\n    if (!matchable || !matchable.includes(':')) return undefined;\n\n    const matches = matchable.match(RE_EMOJI_SEARCH);\n    if (!matches || matches.length === 0) return undefined;\n\n    return matches[matches.length - 1].trim();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [richInputCtx.editable.matchableS, isEnabled], THROTTLE);\n\n  const getEmojiCode = useDerivedSignal(\n    detectEmojiCodeThrottled, [detectEmojiCodeThrottled, richInputCtx.editable.matchableS], true,\n  );\n\n  const updateFiltered = useLastCallback((emojis: Emoji[]) => {\n    setFilteredEmojis(emojis);\n\n    if (emojis === MEMO_EMPTY_ARRAY) {\n      setFilteredCustomEmojis(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const nativeEmojis = emojis.map((emoji) => emoji.native);\n    const customEmojis = uniqueByField(\n      selectCustomEmojiForEmojis(getGlobal(), nativeEmojis),\n      'id',\n    );\n    setFilteredCustomEmojis(customEmojis);\n  });\n\n  const insertEmoji = useLastCallback((emoji: string | ApiSticker) => {\n    const emojiHtml = typeof emoji === 'string' ? renderText(emoji, ['emoji_html']) : buildCustomEmojiHtml(emoji);\n    richInputCtx.editable.insertMatchableHtml(`${emojiHtml}`, (c) => c === ':');\n    updateFiltered(MEMO_EMPTY_ARRAY);\n  });\n\n  useEffect(() => {\n    const emojiCode = getEmojiCode();\n    if (!emojiCode || !byId) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const filter = emojiCode.substring(1, undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if ((filter.length === 1 && RE_LOWERCASE_TEST.test(filter)) || filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter.toLowerCase(), EMOJIS_LIMIT);\n    }\n\n    if (!matched.length) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    updateFiltered(matched);\n  }, [\n    baseEmojiKeywords, byId, getEmojiCode, emojiKeywords, insertEmoji, recentEmojiIds, updateFiltered,\n  ]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, richInputCtx.editable.matchableS]);\n\n  return {\n    isEmojiTooltipOpen: Boolean(filteredEmojis.length || filteredCustomEmojis.length) && !isManuallyClosed,\n    closeEmojiTooltip: markManuallyClosed,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  };\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n  const maxKeyLength = keywords.reduce((max, keyword) => Math.max(max, keyword.length), 0);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n    maxKeyLength,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names, maxKeyLength,\n  } = library;\n\n  let matched: Emoji[] = [];\n\n  if (filter.length > maxKeyLength) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(Object.values(pickTruthy(byKeyword!, matchedKeywords)).flat());\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(Object.values(pickTruthy(byName, matchedNames)).flat());\n\n  matched = unique(matched);\n\n  if (!matched.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return matched.slice(0, limit);\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiChatMember, ApiUser } from '../../../../api/types';\nimport type { RichInputCtx } from '../../../common/richinput/useRichEditable';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { getMainUsername, getUserFirstOrLastName } from '../../../../global/helpers';\nimport { filterPeersByQuery } from '../../../../global/helpers/peers';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\n\nlet RE_USERNAME_SEARCH: RegExp;\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of Firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яёґєії]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  isEnabled: boolean,\n  richInputCtx: RichInputCtx,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const [filteredUsers, setFilteredUsers] = useState<ApiUser[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractUsernameTagThrottled = useThrottledResolver(() => {\n    const text = richInputCtx.editable.matchableS();\n    if (!isEnabled || !richInputCtx.editable.selectionS()?.collapsed) return undefined;\n    if (!text || !text.includes('@')) return undefined;\n\n    const matches = text.match(RE_USERNAME_SEARCH);\n    if (!matches || matches.length === 0) return undefined;\n    return matches[matches.length - 1].trim();\n\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [isEnabled, richInputCtx.editable, richInputCtx.editable.matchableS], THROTTLE);\n\n  const getUsernameTag = useDerivedSignal(\n    extractUsernameTagThrottled, [extractUsernameTagThrottled, richInputCtx.editable.matchableS], true,\n  );\n\n  const getWithInlineBots = useDerivedSignal(() => {\n    return isEnabled && richInputCtx.editable.htmlS().startsWith('@');\n\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [richInputCtx.editable, richInputCtx.editable.htmlS, isEnabled]);\n\n  useEffect(() => {\n    const usernameTag = getUsernameTag();\n\n    if (!usernameTag || !(groupChatMembers || topInlineBotIds)) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!usersById) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n      if (member.userId !== currentUserId) {\n        acc.push(member.userId);\n      }\n\n      return acc;\n    }, []);\n\n    const filter = usernameTag.substring(1);\n    const filteredIds = filterPeersByQuery({\n      ids: unique([\n        ...((getWithInlineBots() && topInlineBotIds) || []),\n        ...(memberIds || []),\n      ]),\n      query: filter,\n      type: 'user',\n    });\n\n    setFilteredUsers(Object.values(pickTruthy(usersById, filteredIds)));\n  }, [currentUserId, groupChatMembers, topInlineBotIds, getUsernameTag, getWithInlineBots]);\n\n  const insertMention = useLastCallback((user: ApiUser) => {\n    if (!user.usernames && !getUserFirstOrLastName(user)) {\n      return;\n    }\n\n    const mainUsername = getMainUsername(user);\n    const userFirstOrLastName = getUserFirstOrLastName(user) || '';\n    const htmlToInsert = mainUsername\n      ? `@${mainUsername} `\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${user.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${userFirstOrLastName}</a> `;\n\n    richInputCtx.editable.insertMatchableHtml(htmlToInsert, (c) => c === '@');\n\n    setFilteredUsers(undefined);\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, richInputCtx.editable.htmlS]);\n\n  return {\n    isMentionTooltipOpen: Boolean(filteredUsers?.length && !isManuallyClosed),\n    closeMentionTooltip: markManuallyClosed,\n    insertMention,\n    mentionFilteredUsers: filteredUsers,\n  };\n}\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../../global';\n\nimport { PAID_MESSAGES_PURPOSE } from '../../../../config';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function usePaidMessageConfirmation(\n  starsForAllMessages: number,\n  isStarsBalanceModeOpen: boolean,\n  starsBalance: number,\n) {\n  const {\n    shouldPaidMessageAutoApprove,\n  } = getGlobal().settings.byKey;\n\n  const [shouldAutoApprove,\n    setAutoApprove] = useState(Boolean(shouldPaidMessageAutoApprove));\n  const [isWaitingStarsTopup, setIsWaitingStarsTopup] = useState(false);\n  const confirmPaymentHandlerRef = useRef<NoneToVoidFunction | undefined>(undefined);\n\n  const closeConfirmDialog = useLastCallback(() => {\n    getActions().closePaymentMessageConfirmDialogOpen();\n  });\n\n  useEffect(() => {\n    if (isWaitingStarsTopup && !isStarsBalanceModeOpen) {\n      setIsWaitingStarsTopup(false);\n\n      if (starsBalance > starsForAllMessages) {\n        confirmPaymentHandlerRef?.current?.();\n      }\n    }\n  }, [isWaitingStarsTopup, isStarsBalanceModeOpen, starsBalance, starsForAllMessages]);\n\n  const handleStarsTopup = useLastCallback(() => {\n    getActions().openStarsBalanceModal({\n      topup: {\n        balanceNeeded: starsForAllMessages,\n        purpose: PAID_MESSAGES_PURPOSE,\n      },\n    });\n    setIsWaitingStarsTopup(true);\n  });\n\n  const dialogHandler = useLastCallback(() => {\n    if (starsForAllMessages > starsBalance) {\n      handleStarsTopup();\n    } else {\n      confirmPaymentHandlerRef?.current?.();\n    }\n    getActions().closePaymentMessageConfirmDialogOpen();\n    if (shouldAutoApprove) getActions().setPaidMessageAutoApprove();\n  });\n\n  const handleWithConfirmation = <T extends (...args: any[]) => void>(\n    handler: T,\n    ...args: Parameters<T>\n  ) => {\n    if (starsForAllMessages) {\n      confirmPaymentHandlerRef.current = () => handler(...args);\n      if (!shouldPaidMessageAutoApprove) {\n        getActions().openPaymentMessageConfirmDialogOpen();\n        return;\n      }\n\n      if (starsForAllMessages > starsBalance) {\n        handleStarsTopup();\n        return;\n      }\n    }\n\n    handler(...args);\n  };\n\n  return {\n    closeConfirmDialog,\n    handleWithConfirmation,\n    dialogHandler,\n    shouldAutoApprove,\n    setAutoApprove,\n  };\n}\n","import {\n  type RefObject,\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n  useUnmountCleanup,\n} from '../../../lib/teact/teact';\nimport { setExtraStyles } from '../../../lib/teact/teact-dom';\n\nimport { requestForcedReflow, requestNextMutation } from '../../../lib/fasterdom/fasterdom';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../hooks/useThrottledCallback';\n\nexport interface PaneState {\n  element?: HTMLElement;\n  height: number;\n  isOpen?: boolean;\n}\n\n// Max slide transition duration\nconst CLOSE_DURATION = 450;\nconst RESIZE_THROTTLE = 100;\n\nexport default function useHeaderPane<RefType extends HTMLElement = HTMLDivElement>({\n  ref: providedRef,\n  isOpen,\n  isDisabled,\n  withResizeObserver,\n  onStateChange,\n} : {\n  ref?: RefObject<RefType | null>;\n  isOpen?: boolean;\n  isDisabled?: boolean;\n  withResizeObserver?: boolean;\n  onStateChange?: (state: PaneState) => void;\n}) {\n  const [shouldRender, setShouldRender] = useState(isOpen);\n  // eslint-disable-next-line no-null/no-null\n  const localRef = useRef<RefType>(null);\n  const ref = providedRef || localRef;\n\n  const lastHeightRef = useRef(0);\n\n  const reset = useLastCallback(() => {\n    setShouldRender(true);\n    onStateChange?.({\n      element: undefined,\n      height: 0,\n      isOpen: false,\n    });\n  });\n\n  useEffect(() => {\n    if (isDisabled) {\n      reset();\n    }\n  }, [isDisabled]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setShouldRender(true);\n    }\n  }, [isOpen]);\n\n  useUnmountCleanup(reset);\n\n  useTimeout(() => {\n    setShouldRender(false);\n    onStateChange?.({\n      height: 0,\n      isOpen: false,\n    });\n  }, !isOpen ? CLOSE_DURATION : undefined);\n\n  // Should be `useCallback` to trigger effect on deps change\n  const handleUpdate = useCallback(() => {\n    const element = ref.current;\n    if (isDisabled || !element || !shouldRender) return;\n\n    if (!isOpen) {\n      onStateChange?.({\n        element,\n        height: 0,\n        isOpen: false,\n      });\n      return;\n    }\n\n    requestForcedReflow(() => {\n      const currentHeight = element.offsetHeight;\n      lastHeightRef.current = currentHeight;\n      return () => {\n        onStateChange?.({\n          element,\n          height: currentHeight,\n          isOpen,\n        });\n      };\n    });\n  }, [isOpen, shouldRender, isDisabled, ref, onStateChange]);\n\n  const handleResize = useThrottledCallback(() => {\n    const element = ref.current;\n    if (!element) return;\n\n    const newHeight = element.offsetHeight;\n    if (newHeight === lastHeightRef.current) {\n      return;\n    }\n\n    handleUpdate();\n  }, [handleUpdate, ref], RESIZE_THROTTLE, true);\n\n  useLayoutEffect(handleUpdate, [handleUpdate]);\n\n  useResizeObserver(ref, handleResize, !withResizeObserver || !shouldRender);\n\n  return {\n    shouldRender,\n    ref,\n  };\n}\n\nexport function applyAnimationState(list: PaneState[], noTransition = false) {\n  let cumulativeHeight = 0;\n  for (let i = 0; i < list.length; i++) {\n    const state = list[i];\n    const element = state.element;\n    if (!element) {\n      continue;\n    }\n\n    const shiftPx = `${cumulativeHeight}px`;\n\n    const apply = () => {\n      setExtraStyles(element, {\n        transform: `translateY(${state.isOpen ? shiftPx : `calc(${shiftPx} - 100%)`})`,\n        zIndex: String(-i),\n        transition: noTransition ? 'none' : '',\n      });\n    };\n\n    if (!element.dataset.isPanelOpen && state.isOpen && !noTransition) {\n      // Start animation right above its final position\n      setExtraStyles(element, {\n        transform: `translateY(calc(${shiftPx} - 100%))`,\n        zIndex: String(-i),\n        transition: 'none',\n      });\n      element.dataset.isPanelOpen = 'true';\n      requestNextMutation(apply);\n    } else {\n      apply();\n    }\n\n    cumulativeHeight += state.height;\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"EVLTkrt1\",\"preview\":\"V3HabdKr\",\"linkPreview\":\"ClGe8yij\",\"media\":\"WAItYc5d\",\"nonInteractive\":\"AQWPv0bP\",\"expired\":\"tprkr7qf\",\"expiredIcon\":\"nLA7VEhv\"};","import React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessageStoryData, ApiTypeStory } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaAreaOverlay from '../../story/mediaArea/MediaAreaOverlay';\n\nimport styles from './BaseStory.module.scss';\n\ninterface OwnProps {\n  story?: ApiTypeStory | ApiMessageStoryData;\n  isPreview?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n}\n\nfunction BaseStory({\n  story, isPreview, isProtected, isConnected,\n}: OwnProps) {\n  const { openStoryViewer, loadPeerStoriesByIds, showNotification } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n  const isExpired = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbnail = isLoaded ? (video ? video.thumbnail?.dataUri : story.content.photo?.thumbnail?.dataUri) : undefined;\n  const mediaUrl = useCurrentOrPrev(imgBlobUrl, true);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(Boolean(mediaUrl));\n  const blurredBackgroundRef = useCanvasBlur(\n    thumbnail,\n    isExpired && !isPreview,\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n\n  const fullClassName = buildClassName(\n    styles.root,\n    'media-inner',\n    (!isConnected || isExpired) && styles.nonInteractive,\n    isExpired && styles.expired,\n    isPreview && styles.preview,\n  );\n\n  useEffect(() => {\n    if (story && !(isLoaded || isExpired)) {\n      loadPeerStoriesByIds({ peerId: story.peerId, storyIds: [story.id] });\n    }\n  }, [story, isExpired, isLoaded]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpired) {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n      return;\n    }\n\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={isConnected ? handleClick : undefined}\n    >\n      {!isExpired && isPreview && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {shouldRender && (\n        <>\n          <img\n            src={mediaUrl}\n            alt=\"\"\n            className={buildClassName(styles.media, isPreview && styles.linkPreview, transitionClassNames)}\n            draggable={false}\n          />\n          {isLoaded && <MediaAreaOverlay story={story} className={transitionClassNames} />}\n        </>\n      )}\n      {isExpired && (\n        <span>\n          <Icon name=\"story-expired\" className={styles.expiredIcon} />\n          {lang('StoryExpiredSubtitle')}\n        </span>\n      )}\n      {Boolean(video?.duration) && (\n        <div className=\"message-media-duration\">\n          {formatMediaDuration(video!.duration)}\n        </div>\n      )}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default memo(BaseStory);\n","import type { ApiPaidMedia } from '../../../../api/types';\n\nexport default function getSingularPaidMedia(media?: ApiPaidMedia) {\n  if (!media || media.extendedMedia.length !== 1) {\n    return {\n      photo: undefined,\n      video: undefined,\n    };\n  }\n\n  const singularMedia = media.extendedMedia[0];\n  const isPreview = 'mediaType' in singularMedia;\n  const photo = isPreview ? (!singularMedia.duration ? singularMedia : undefined) : singularMedia.photo;\n  const video = isPreview ? (singularMedia.duration ? singularMedia : undefined) : singularMedia.video;\n\n  return { photo, video };\n}\n","/* eslint-disable no-bitwise */\n// Based on\n// https://github.com/telegramdesktop/tdesktop/blob/dev/Telegram/SourceFiles/ui/grouped_layout.cpp\n// https://github.com/overtake/TelegramSwift/blob/master/Telegram-Mac/GroupedLayout.swift#L83\n\nimport type { ApiDimensions, ApiMessage } from '../../../../api/types';\nimport type { IAlbum } from '../../../../types';\n\nimport { getMessageContent } from '../../../../global/helpers';\nimport { clamp } from '../../../../util/math';\nimport { getAvailableWidth } from '../../../common/helpers/mediaDimensions';\nimport { calculateMediaDimensions } from './mediaDimensions';\n\nexport const AlbumRectPart = {\n  None: 0,\n  Top: 1,\n  Right: 2,\n  Bottom: 4,\n  Left: 8,\n};\n\ntype IAttempt = {\n  lineCounts: number[];\n  heights: number[];\n};\nexport type IMediaDimensions = {\n  width: number;\n  height: number;\n  x: number;\n  y: number;\n};\ntype IMediaLayout = {\n  dimensions: IMediaDimensions;\n  sides: number;\n};\ntype ILayoutParams = {\n  ratios: number[];\n  proportions: string;\n  averageRatio: number;\n  maxWidth: number;\n  minWidth: number;\n  maxHeight: number;\n  spacing: number;\n};\nexport type IAlbumLayout = {\n  layout: IMediaLayout[];\n  containerStyle: ApiDimensions;\n};\n\nfunction getRatios(messages: ApiMessage[], isSingleMessage?: boolean, isMobile?: boolean) {\n  const isOutgoing = messages[0].isOutgoing;\n  const allMedia = (isSingleMessage\n    ? messages[0].content.paidMedia!.extendedMedia.map((media) => (\n      'mediaType' in media ? media : (media.photo || media.video)\n    ))\n    : messages.map((message) => (\n      getMessageContent(message).photo || getMessageContent(message).video\n    ))\n  ).filter(Boolean);\n  return allMedia.map(\n    (media) => {\n      const dimensions = calculateMediaDimensions({\n        media,\n        isOwn: isOutgoing,\n        isMobile,\n      }) as ApiDimensions;\n\n      return dimensions.width / dimensions.height;\n    },\n  );\n}\n\nfunction getProportions(ratios: number[]) {\n  return ratios.map((ratio) => (ratio > 1.2 ? 'w' : (ratio < 0.8 ? 'n' : 'q'))).join('');\n}\n\nfunction getAverageRatio(ratios: number[]) {\n  return ratios.reduce((result, ratio) => ratio + result, 1) / ratios.length;\n}\n\nfunction accumulate(list: number[], initValue: number) {\n  return list.reduce((accumulator, item) => accumulator + item, initValue);\n}\n\nfunction cropRatios(ratios: number[], averageRatio: number) {\n  return ratios.map((ratio) => {\n    return (averageRatio > 1.1 ? clamp(ratio, 1, 2.75) : clamp(ratio, 0.6667, 1));\n  });\n}\n\nfunction calculateContainerSize(layout: IMediaLayout[]) {\n  const styles: ApiDimensions = { width: 0, height: 0 };\n  layout.forEach(({\n    dimensions,\n    sides,\n  }) => {\n    if (sides & AlbumRectPart.Right) {\n      styles.width = dimensions.width + dimensions.x;\n    }\n    if (sides & AlbumRectPart.Bottom) {\n      styles.height = dimensions.height + dimensions.y;\n    }\n  });\n\n  return styles;\n}\n\nexport function calculateAlbumLayout(\n  isOwn: boolean,\n  noAvatars: boolean,\n  album: IAlbum,\n  isMobile?: boolean,\n): IAlbumLayout {\n  const spacing = 2;\n  const ratios = getRatios(album.messages, album.isPaidMedia, isMobile);\n  const proportions = getProportions(ratios);\n  const averageRatio = getAverageRatio(ratios);\n  const albumCount = ratios.length;\n  const forceCalc = ratios.some((ratio) => ratio > 2);\n  const maxWidth = getAvailableWidth(isOwn, false, noAvatars, isMobile);\n  const maxHeight = maxWidth;\n\n  let layout;\n\n  const params = {\n    ratios,\n    proportions,\n    averageRatio,\n    maxWidth,\n    minWidth: 100,\n    maxHeight,\n    spacing,\n  };\n\n  if (albumCount >= 5 || forceCalc) {\n    layout = layoutWithComplexLayouter(params);\n  } else if (albumCount === 2) {\n    layout = layoutTwo(params);\n  } else if (albumCount === 3) {\n    layout = layoutThree(params);\n  } else {\n    layout = layoutFour(params);\n  }\n\n  return {\n    layout,\n    containerStyle: calculateContainerSize(layout),\n  };\n}\n\nfunction layoutWithComplexLayouter({\n  ratios: originalRatios,\n  averageRatio,\n  maxWidth,\n  minWidth,\n  spacing,\n  maxHeight = (4 * maxWidth) / 3,\n}: ILayoutParams) {\n  const ratios = cropRatios(originalRatios, averageRatio);\n  const count = originalRatios.length;\n  const result = new Array(count);\n  const attempts: IAttempt[] = [];\n\n  const multiHeight = (offset: number, attemptCount: number) => {\n    const attemptRatios = ratios.slice(offset, offset + attemptCount);\n    const sum = accumulate(attemptRatios, 0);\n\n    return (maxWidth - (attemptCount - 1) * spacing) / sum;\n  };\n\n  const pushAttempt = (lineCounts: number[]) => {\n    const heights: number[] = [];\n    let offset = 0;\n    lineCounts.forEach((currentCount) => {\n      heights.push(multiHeight(offset, currentCount));\n      offset += currentCount;\n    });\n\n    attempts.push({\n      lineCounts,\n      heights,\n    });\n  };\n\n  for (let first = 1; first !== count; ++first) {\n    const second = count - first;\n    if (first <= 3 && second <= 3) {\n      pushAttempt([first, second]);\n    }\n  }\n\n  for (let first = 1; first !== count - 1; ++first) {\n    for (let second = 1; second !== count - first; ++second) {\n      const third = count - first - second;\n      if (first <= 3 && second <= (averageRatio < 0.85 ? 4 : 3) && third <= 3) {\n        pushAttempt([first, second, third]);\n      }\n    }\n  }\n\n  for (let first = 1; first !== count - 1; ++first) {\n    for (let second = 1; second !== count - first; ++second) {\n      for (let third = 1; third !== count - first - second; ++third) {\n        const fourth = count - first - second - third;\n        if (first <= 3 && second <= 3 && third <= 3 && fourth <= 4) {\n          pushAttempt([first, second, third, fourth]);\n        }\n      }\n    }\n  }\n\n  let optimalAttempt: IAttempt | undefined;\n  let optimalDiff = 0;\n  for (let i = 0; i < attempts.length; i++) {\n    const {\n      heights,\n      lineCounts,\n    } = attempts[i];\n    const lineCount = lineCounts.length;\n    const totalHeight = accumulate(heights, 0) + spacing * (lineCount - 1);\n    const minLineHeight = Math.min(...heights);\n    const bad1 = minLineHeight < minWidth ? 1.5 : 1;\n    const bad2 = (() => {\n      for (let line = 1; line !== lineCount; ++line) {\n        if (lineCounts[line - 1] > lineCounts[line]) {\n          return 1.5;\n        }\n      }\n\n      return 1;\n    })();\n    const diff = Math.abs(totalHeight - maxHeight) * bad1 * bad2;\n\n    if (!optimalAttempt || diff < optimalDiff) {\n      optimalAttempt = attempts[i];\n      optimalDiff = diff;\n    }\n  }\n\n  const optimalCounts = optimalAttempt!.lineCounts;\n  const optimalHeights = optimalAttempt!.heights;\n  const rowCount = optimalCounts.length;\n  let index = 0;\n  let y = 0;\n  for (let row = 0; row !== rowCount; ++row) {\n    const colCount = optimalCounts[row];\n    const lineHeight = optimalHeights[row];\n    const height = Math.round(lineHeight);\n    let x = 0;\n\n    for (let col = 0; col !== colCount; ++col) {\n      const sides = AlbumRectPart.None\n        | (row === 0 ? AlbumRectPart.Top : AlbumRectPart.None)\n        | (row === rowCount - 1 ? AlbumRectPart.Bottom : AlbumRectPart.None)\n        | (col === 0 ? AlbumRectPart.Left : AlbumRectPart.None)\n        | (col === colCount - 1 ? AlbumRectPart.Right : AlbumRectPart.None);\n      const ratio = ratios[index];\n      const width = col === colCount - 1 ? maxWidth - x : Math.round(ratio * lineHeight);\n      result[index] = {\n        dimensions: {\n          x,\n          y,\n          width,\n          height,\n        },\n        sides,\n      };\n      x += width + spacing;\n      ++index;\n    }\n    y += height + spacing;\n  }\n\n  return result;\n}\n\nfunction layoutTwo(params: ILayoutParams) {\n  const {\n    ratios,\n    proportions,\n    averageRatio,\n  } = params;\n  return proportions === 'ww' && averageRatio > 1.4 && ratios[1] - ratios[0] < 0.2\n    ? layoutTwoTopBottom(params)\n    : proportions === 'ww' || proportions === 'qq'\n      ? layoutTwoLeftRightEqual(params)\n      : layoutTwoLeftRight(params);\n}\n\nfunction layoutTwoTopBottom(params: ILayoutParams) {\n  const {\n    ratios,\n    maxWidth,\n    spacing,\n    maxHeight,\n  } = params;\n  const height = Math.round(Math.min(maxWidth / ratios[0], Math.min(maxWidth / ratios[1], (maxHeight - spacing) / 2)));\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: maxWidth,\n      height,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: 0,\n      y: height + spacing,\n      width: maxWidth,\n      height,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n\nfunction layoutTwoLeftRightEqual(params: ILayoutParams) {\n  const {\n    ratios,\n    maxWidth,\n    spacing,\n    maxHeight,\n  } = params;\n  const width = (maxWidth - spacing) / 2;\n  const height = Math.round(Math.min(width / ratios[0], Math.min(width / ratios[1], maxHeight)));\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: width + spacing,\n      y: 0,\n      width,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right | AlbumRectPart.Bottom,\n  }];\n}\n\nfunction layoutTwoLeftRight(params: ILayoutParams) {\n  const {\n    ratios,\n    minWidth,\n    maxWidth,\n    spacing,\n    maxHeight,\n  } = params;\n  const minimalWidth = Math.round(1.5 * minWidth);\n  const secondWidth = Math.min(\n    Math.round(\n      Math.max(\n        0.4 * (maxWidth - spacing),\n        (maxWidth - spacing) / ratios[0] / (1 / ratios[0] + 1 / ratios[1]),\n      ),\n    ),\n    maxWidth - spacing - minimalWidth,\n  );\n  const firstWidth = maxWidth - secondWidth - spacing;\n  const height = Math.min(maxHeight, Math.round(Math.min(firstWidth / ratios[0], secondWidth / ratios[1])));\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: firstWidth,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: firstWidth + spacing,\n      y: 0,\n      width: secondWidth,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right | AlbumRectPart.Bottom,\n  }];\n}\n\nfunction layoutThree(params: ILayoutParams) {\n  const { proportions } = params;\n\n  return proportions[0] === 'n'\n    ? layoutThreeLeftAndOther(params)\n    : layoutThreeTopAndOther(params);\n}\n\nfunction layoutThreeLeftAndOther(params: ILayoutParams) {\n  const {\n    maxHeight,\n    spacing,\n    ratios,\n    maxWidth,\n    minWidth,\n  } = params;\n  const firstHeight = maxHeight;\n  const thirdHeight = Math.round(\n    Math.min(\n      (maxHeight - spacing) / 2,\n      (ratios[1] * (maxWidth - spacing)) / (ratios[2] + ratios[1]),\n    ),\n  );\n  const secondHeight = firstHeight - thirdHeight - spacing;\n  const rightWidth = Math.max(\n    minWidth,\n    Math.round(\n      Math.min(\n        (maxWidth - spacing) / 2,\n        Math.min(\n          thirdHeight * ratios[2],\n          secondHeight * ratios[1],\n        ),\n      ),\n    ),\n  );\n  const leftWidth = Math.min(Math.round(firstHeight * ratios[0]), maxWidth - spacing - rightWidth);\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: leftWidth,\n      height: firstHeight,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: leftWidth + spacing,\n      y: 0,\n      width: rightWidth,\n      height: secondHeight,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: leftWidth + spacing,\n      y: secondHeight + spacing,\n      width: rightWidth,\n      height: thirdHeight,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n\nfunction layoutThreeTopAndOther(params: ILayoutParams) {\n  const {\n    maxWidth,\n    ratios,\n    maxHeight,\n    spacing,\n  } = params;\n  const firstWidth = maxWidth;\n  const firstHeight = Math.round(Math.min(firstWidth / ratios[0], 0.66 * (maxHeight - spacing)));\n  const secondWidth = (maxWidth - spacing) / 2;\n  const secondHeight = Math.min(\n    maxHeight - firstHeight - spacing,\n    Math.round(Math.min(\n      secondWidth / ratios[1],\n      secondWidth / ratios[2],\n    )),\n  );\n  const thirdWidth = firstWidth - secondWidth - spacing;\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: firstWidth,\n      height: firstHeight,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: 0,\n      y: firstHeight + spacing,\n      width: secondWidth,\n      height: secondHeight,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Left,\n  }, {\n    dimensions: {\n      x: secondWidth + spacing,\n      y: firstHeight + spacing,\n      width: thirdWidth,\n      height: secondHeight,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n\nfunction layoutFour(params: ILayoutParams) {\n  const { proportions } = params;\n\n  return proportions[0] === 'w'\n    ? layoutFourTopAndOther(params)\n    : layoutFourLeftAndOther(params);\n}\n\nfunction layoutFourTopAndOther({\n  maxWidth,\n  ratios,\n  spacing,\n  maxHeight,\n  minWidth,\n}: ILayoutParams) {\n  const w = maxWidth;\n  const h0 = Math.round(Math.min(w / ratios[0], 0.66 * (maxHeight - spacing)));\n  const h = Math.round((maxWidth - 2 * spacing) / (ratios[1] + ratios[2] + ratios[3]));\n  const w0 = Math.max(minWidth, Math.round(Math.min(0.4 * (maxWidth - 2 * spacing), h * ratios[1])));\n  const w2 = Math.round(Math.max(Math.max(minWidth, 0.33 * (maxWidth - 2 * spacing)), h * ratios[3]));\n  const w1 = w - w0 - w2 - 2 * spacing;\n  const h1 = Math.min(maxHeight - h0 - spacing, h);\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: w,\n      height: h0,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: 0,\n      y: h0 + spacing,\n      width: w0,\n      height: h1,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Left,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: h0 + spacing,\n      width: w1,\n      height: h1,\n    },\n    sides: AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: w0 + spacing + w1 + spacing,\n      y: h0 + spacing,\n      width: w2,\n      height: h1,\n    },\n    sides: AlbumRectPart.Right | AlbumRectPart.Bottom,\n  }];\n}\n\nfunction layoutFourLeftAndOther({\n  maxHeight,\n  ratios,\n  maxWidth,\n  spacing,\n  minWidth,\n}: ILayoutParams) {\n  const h = maxHeight;\n  const w0 = Math.round(Math.min(h * ratios[0], 0.6 * (maxWidth - spacing)));\n  const w = Math.round((maxHeight - 2 * spacing) / (1 / ratios[1] + 1 / ratios[2] + 1 / ratios[3]));\n  const h0 = Math.round(w / ratios[1]);\n  const h1 = Math.round(w / ratios[2]);\n  const h2 = h - h0 - h1 - 2 * spacing;\n  const w1 = Math.max(minWidth, Math.min(maxWidth - w0 - spacing, w));\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: w0,\n      height: h,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: 0,\n      width: w1,\n      height: h0,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: h0 + spacing,\n      width: w1,\n      height: h1,\n    },\n    sides: AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: h0 + h1 + 2 * spacing,\n      width: w1,\n      height: h2,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n","import type { FastTextApi } from '../lib/fasttextweb/fasttext.worker';\nimport type { Connector } from './PostMessageConnector';\n\nimport { IS_TRANSLATION_SUPPORTED } from './browser/windowEnvironment';\n\nimport Deferred from './Deferred';\nimport { createConnector } from './PostMessageConnector';\n\nconst WORKER_INIT_DELAY = 4000;\n\nconst DEFAULT_THRESHOLD = 0.2;\nconst DEFAULT_LABELS_COUNT = 5;\n\nlet worker: Connector<FastTextApi> | undefined;\nconst initializationDeferred = new Deferred();\n\nif (IS_TRANSLATION_SUPPORTED) {\n  setTimeout(initWorker, WORKER_INIT_DELAY);\n}\n\nfunction initWorker() {\n  if (!worker) {\n    worker = createConnector<FastTextApi>(\n      new Worker(new URL('../lib/fasttextweb/fasttext.worker.ts', import.meta.url)),\n    );\n    initializationDeferred.resolve();\n  }\n}\n\nexport async function detectLanguage(text: string, threshold = DEFAULT_THRESHOLD) {\n  if (!worker) await initializationDeferred.promise;\n  const result = await worker!.request({ name: 'detectLanguage', args: [text, threshold] });\n  return result;\n}\n\nexport async function detectLanguageProbability(\n  text: string, labelsCount = DEFAULT_LABELS_COUNT, threshold = DEFAULT_THRESHOLD,\n) {\n  if (!worker) await initializationDeferred.promise;\n  const result = await worker!.request({ name: 'detectLanguageProbability', args: [text, labelsCount, threshold] });\n  return result;\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiMessage } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport LimitedMap from '../../../../util/primitives/LimitedMap';\nimport { throttle } from '../../../../util/schedulers';\n\n// https://github.com/DrKLO/Telegram/blob/dfd74f809e97d1ecad9672fc7388cb0223a95dfc/TMessagesProj/src/main/java/org/telegram/messenger/TranslateController.java#L35\nconst MIN_MESSAGES_CHECKED = 8;\nconst MIN_TRANSLATABLE_RATIO = 0.3;\nconst MIN_DETECTABLE_RATIO = 0.6;\n\nconst THROTTLE_DELAY = 1000;\nconst MESSAGES_LIMIT = 150;\n\ntype MessageMetadata = {\n  id: number;\n  isTranslatable: boolean;\n  detectedLanguage: string | undefined;\n};\n\nconst CHAT_STATS = new Map<string, LimitedMap<number, MessageMetadata>>();\n\nexport default function useDetectChatLanguage(\n  message: ApiMessage, detectedLanguage?: string, isDisabled?: boolean, getIsReady?: Signal<boolean>,\n) {\n  useEffect(() => {\n    if (isDisabled || (getIsReady && !getIsReady())) return;\n\n    const isTranslatable = Boolean(message.content.text?.text.length);\n    processMessageMetadata(message.chatId, message.id, isTranslatable, detectedLanguage);\n  }, [message, detectedLanguage, isDisabled, getIsReady]);\n}\n\nconst throttledMakeChatDecision = throttle(makeChatDecision, THROTTLE_DELAY);\n\nfunction processMessageMetadata(chatId: string, id: number, isTranslatable: boolean, detectedLanguage?: string) {\n  const chatStats = CHAT_STATS.get(chatId) || new LimitedMap<number, MessageMetadata>(MESSAGES_LIMIT);\n\n  const previousMetadata = chatStats.get(id);\n  if (previousMetadata && previousMetadata.detectedLanguage === detectedLanguage\n    && previousMetadata.isTranslatable === isTranslatable\n  ) {\n    return;\n  }\n\n  chatStats.set(id, {\n    id,\n    isTranslatable,\n    detectedLanguage,\n  });\n\n  CHAT_STATS.set(chatId, chatStats);\n\n  throttledMakeChatDecision(chatId);\n}\n\nfunction makeChatDecision(chatId: string) {\n  const { updateChatDetectedLanguage } = getActions();\n  const chatStats = CHAT_STATS.get(chatId);\n  if (!chatStats) {\n    return;\n  }\n\n  const messagesChecked = chatStats.size;\n  if (messagesChecked < MIN_MESSAGES_CHECKED) {\n    return;\n  }\n\n  let translatableCount = 0;\n  let detectableCount = 0;\n  const languageOccurrences = new Map<string, number>();\n\n  for (const metadata of chatStats.values()) {\n    if (metadata.isTranslatable) {\n      translatableCount++;\n    }\n\n    if (metadata.detectedLanguage) {\n      detectableCount++;\n    }\n\n    const language = metadata.detectedLanguage;\n    if (language) {\n      const occurrences = languageOccurrences.get(language) || 0;\n      languageOccurrences.set(language, occurrences + 1);\n    }\n  }\n\n  const translatableRatio = translatableCount / messagesChecked;\n  const detectableRatio = detectableCount / messagesChecked;\n\n  if (translatableRatio < MIN_TRANSLATABLE_RATIO || detectableRatio < MIN_DETECTABLE_RATIO) {\n    return;\n  }\n\n  const mostFrequentLanguage = Array.from(languageOccurrences.entries())\n    .sort(([, a], [, b]) => b - a)[0][0];\n\n  updateChatDetectedLanguage({\n    chatId,\n    detectedLanguage: mostFrequentLanguage,\n  });\n}\n","import type { RefObject } from 'react';\nimport type React from '../../../../lib/teact/teact';\nimport { useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { IS_ANDROID, IS_TOUCH_ENV } from '../../../../util/browser/windowEnvironment';\nimport { captureEvents, SwipeDirection } from '../../../../util/captureEvents';\nimport stopEvent from '../../../../util/stopEvent';\nimport windowSize from '../../../../util/windowSize';\nimport { REM } from '../../../common/helpers/mediaDimensions';\nimport { preventMessageInputBlur } from '../../helpers/preventMessageInputBlur';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\n\nconst ANDROID_KEYBOARD_HIDE_DELAY_MS = 350;\nconst SWIPE_ANIMATION_DURATION = 150;\nconst QUICK_REACTION_DOUBLE_TAP_DELAY = 200;\nconst QUICK_REACTION_AREA_WIDTH = 3 * REM;\nconst QUICK_REACTION_AREA_HEIGHT = Number(REM);\nconst GROUP_MESSAGE_HOVER_ATTRIBUTE = 'data-is-document-group-hover';\n\nexport default function useOuterHandlers(\n  selectMessage: (e?: React.MouseEvent<HTMLDivElement, MouseEvent>, groupedId?: string) => void,\n  containerRef: RefObject<HTMLDivElement>,\n  messageId: number,\n  isInSelectMode: boolean,\n  canReply: boolean,\n  isProtected: boolean,\n  onContextMenu: (e: React.MouseEvent) => void,\n  handleBeforeContextMenu: (e: React.MouseEvent) => void,\n  chatId: string,\n  isContextMenuShown: boolean,\n  quickReactionRef: RefObject<HTMLDivElement>,\n  shouldHandleMouseLeave: boolean,\n  getIsMessageListReady?: Signal<boolean>,\n) {\n  const { updateDraftReplyInfo, sendDefaultReaction } = getActions();\n\n  const [isQuickReactionVisible, markQuickReactionVisible, unmarkQuickReactionVisible] = useFlag();\n  const [isSwiped, markSwiped, unmarkSwiped] = useFlag();\n  const doubleTapTimeoutRef = useRef<NodeJS.Timeout>();\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    preventMessageInputBlur(e);\n    handleBeforeContextMenu(e);\n  }\n\n  const handleMouseMove = useThrottledCallback((e: React.MouseEvent) => {\n    const quickReactionContainer = quickReactionRef.current;\n    if (!quickReactionContainer) return;\n\n    const { clientX, clientY } = e;\n    const {\n      x: quickReactionX, width: quickReactionWidth, y: quickReactionY, height: quickReactionHeight,\n    } = quickReactionContainer.getBoundingClientRect();\n    const x = quickReactionX + quickReactionWidth / 2;\n    const y = quickReactionY + quickReactionHeight / 2;\n\n    const isVisibleX = Math.abs(x - clientX) < QUICK_REACTION_AREA_WIDTH;\n    const isVisibleY = Math.abs(y - clientY) < QUICK_REACTION_AREA_HEIGHT;\n    if (isVisibleX && isVisibleY) {\n      markQuickReactionVisible();\n    } else {\n      unmarkQuickReactionVisible();\n    }\n  }, [quickReactionRef], requestMeasure);\n\n  function handleSendQuickReaction(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    e.stopPropagation();\n    sendDefaultReaction({\n      chatId,\n      messageId,\n    });\n  }\n\n  function handleTap(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (IS_ANDROID) {\n      const target = e.target as HTMLDivElement;\n      if (!target.classList.contains('text-content') && !target.classList.contains('Message')) {\n        return;\n      }\n\n      if (windowSize.getIsKeyboardVisible()) {\n        setTimeout(() => {\n          onContextMenu(e);\n        }, ANDROID_KEYBOARD_HIDE_DELAY_MS);\n      } else {\n        onContextMenu(e);\n      }\n    }\n  }\n\n  function handleDoubleTap() {\n    sendDefaultReaction({\n      chatId,\n      messageId,\n    });\n  }\n\n  function handleClick(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (isInSelectMode) {\n      selectMessage(e);\n      return;\n    }\n\n    if (!IS_TOUCH_ENV) return;\n\n    if (doubleTapTimeoutRef.current) {\n      clearInterval(doubleTapTimeoutRef.current);\n      doubleTapTimeoutRef.current = undefined;\n      handleDoubleTap();\n      return;\n    }\n\n    doubleTapTimeoutRef.current = setTimeout(() => {\n      doubleTapTimeoutRef.current = undefined;\n      handleTap(e);\n    }, QUICK_REACTION_DOUBLE_TAP_DELAY);\n  }\n\n  function handleContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (IS_ANDROID) {\n      if ((e.target as HTMLElement).matches('a[href]') || isContextMenuShown) {\n        return;\n      }\n\n      e.preventDefault();\n      selectMessage();\n    } else {\n      onContextMenu(e);\n    }\n  }\n\n  function handleContainerDoubleClick() {\n    if (IS_TOUCH_ENV || !canReply) return;\n\n    updateDraftReplyInfo({\n      replyToMsgId: messageId, replyToPeerId: undefined, quoteText: undefined, quoteOffset: undefined,\n    });\n  }\n\n  function stopPropagation(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    e.stopPropagation();\n  }\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV || isInSelectMode || !canReply || isContextMenuShown || !getIsMessageListReady?.()) {\n      return undefined;\n    }\n\n    let startedAt: number | undefined;\n    return captureEvents(containerRef.current!, {\n      selectorToPreventScroll: '.MessageList',\n      excludedClosestSelector: '.no-word-wrap',\n      onSwipe: ((e, direction) => {\n        if (direction === SwipeDirection.Left) {\n          if (!startedAt) {\n            startedAt = Date.now();\n          }\n\n          markSwiped();\n\n          return true;\n        }\n\n        return false;\n      }),\n      onRelease: () => {\n        if (!startedAt || !canReply) {\n          return;\n        }\n\n        updateDraftReplyInfo({ replyToMsgId: messageId });\n\n        setTimeout(unmarkSwiped, Math.max(0, SWIPE_ANIMATION_DURATION - (Date.now() - startedAt)));\n        startedAt = undefined;\n      },\n    });\n  }, [\n    containerRef, isInSelectMode, messageId, markSwiped, unmarkSwiped, canReply, isContextMenuShown,\n    getIsMessageListReady,\n  ]);\n\n  function handleMouseLeave(e: React.MouseEvent<HTMLDivElement>) {\n    // Because `mousemove` event is throttled, we need to also throttle `mouseleave` event,\n    // so the order of events is preserved\n    requestMeasure(unmarkQuickReactionVisible);\n    if (shouldHandleMouseLeave) handleDocumentGroupMouseLeave(e);\n  }\n\n  return {\n    handleMouseDown: !isInSelectMode ? handleMouseDown : undefined,\n    handleClick,\n    handleContextMenu: !isInSelectMode ? handleContextMenu : (isProtected ? stopEvent : undefined),\n    handleDoubleClick: !isInSelectMode ? handleContainerDoubleClick : undefined,\n    handleContentDoubleClick: !IS_TOUCH_ENV ? stopPropagation : undefined,\n    handleMouseMove,\n    handleSendQuickReaction,\n    handleMouseLeave,\n    isSwiped,\n    isQuickReactionVisible,\n    handleDocumentGroupMouseEnter,\n  };\n}\n\nfunction handleDocumentGroupMouseEnter(e: React.MouseEvent<HTMLDivElement>) {\n  const lastGroupElement = getLastElementInDocumentGroup(e.currentTarget);\n  if (lastGroupElement) {\n    lastGroupElement.setAttribute(GROUP_MESSAGE_HOVER_ATTRIBUTE, '');\n  }\n}\n\nfunction handleDocumentGroupMouseLeave(e: React.MouseEvent<HTMLDivElement>) {\n  const lastGroupElement = getLastElementInDocumentGroup(e.currentTarget);\n  if (lastGroupElement) {\n    lastGroupElement.removeAttribute(GROUP_MESSAGE_HOVER_ATTRIBUTE);\n  }\n}\n\nfunction getLastElementInDocumentGroup(element: Element) {\n  let current: Element | null = element;\n\n  do {\n    current = current.nextElementSibling;\n  } while (current && !current.classList.contains('last-in-document-group'));\n\n  return current;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPeer, ApiTypeStory } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport {\n  getStoryMediaHash,\n} from '../../../global/helpers';\nimport { getPeerTitle } from '../../../global/helpers/peers';\nimport buildClassName from '../../../util/buildClassName';\nimport { getPictogramDimensions } from '../helpers/mediaDimensions';\nimport renderText from '../helpers/renderText';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../icons/Icon';\nimport PeerColorWrapper from '../PeerColorWrapper';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  story?: ApiTypeStory;\n  sender?: ApiPeer;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  onClick: NoneToVoidFunction;\n};\n\nconst NBSP = '\\u00A0';\n\nconst EmbeddedStory: FC<OwnProps> = ({\n  story,\n  sender,\n  noUserColors,\n  isProtected,\n  observeIntersectionForLoading,\n  onClick,\n}) => {\n  const { showNotification } = getActions();\n\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isFullStory = story && 'content' in story;\n  const isExpiredStory = story && 'isDeleted' in story;\n  const isVideoStory = isFullStory && Boolean(story.content.video);\n  const title = isFullStory ? 'Story' : (isExpiredStory ? 'ExpiredStory' : 'Loading');\n\n  const mediaBlobUrl = useMedia(isFullStory && getStoryMediaHash(story, 'pictogram'), !isIntersecting);\n  const mediaThumbnail = isVideoStory ? story.content.video!.thumbnail?.dataUri : undefined;\n  const pictogramUrl = mediaBlobUrl || mediaThumbnail;\n\n  const senderTitle = sender ? getPeerTitle(lang, sender) : undefined;\n  const handleFastClick = useLastCallback(() => {\n    if (story && !isExpiredStory) {\n      onClick();\n    } else {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n    }\n  });\n\n  const { handleClick, handleMouseDown } = useFastClick(handleFastClick);\n\n  return (\n    <PeerColorWrapper\n      ref={ref}\n      peerColor={sender?.color}\n      noUserColors={noUserColors}\n      shouldReset\n      className={buildClassName(\n        'EmbeddedMessage',\n        pictogramUrl && 'with-thumb',\n      )}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      {pictogramUrl && renderPictogram(pictogramUrl, isProtected)}\n      <div className=\"message-text with-message-color\">\n        <p className=\"embedded-text-wrapper\">\n          {isExpiredStory && (\n            <Icon name=\"story-expired\" className=\"embedded-origin-icon\" />\n          )}\n          {isFullStory && (\n            <Icon name=\"story-reply\" className=\"embedded-origin-icon\" />\n          )}\n          {lang(title)}\n        </p>\n        <div className=\"message-title\">{renderText(senderTitle || NBSP)}</div>\n      </div>\n    </PeerColorWrapper>\n  );\n};\n\nfunction renderPictogram(\n  srcUrl: string,\n  isProtected?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  return (\n    <div className=\"embedded-thumb\">\n      <img\n        src={srcUrl}\n        width={width}\n        height={height}\n        alt=\"\"\n        className=\"pictogram\"\n        draggable={false}\n      />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default EmbeddedStory;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { getTopicColorCssVariable } from '../../util/forumColors';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from './icons/Icon';\nimport TopicIcon from './TopicIcon';\n\nimport styles from './TopicChip.module.scss';\n\nimport blankSrc from '../../assets/blank.png';\n\ntype OwnProps = {\n  topic?: ApiTopic;\n  className?: string;\n  onClick?: NoneToVoidFunction;\n};\n\nconst TOPIC_ICON_SIZE = 1.125 * REM;\n\nconst TopicChip: FC<OwnProps> = ({\n  topic,\n  className,\n  onClick,\n}) => {\n  const lang = useOldLang();\n  return (\n    <div\n      className={buildClassName(styles.root, className)}\n      style={`--topic-button-accent-color: var(${getTopicColorCssVariable(topic?.iconColor)})`}\n      onClick={onClick}\n    >\n      {topic\n        ? <TopicIcon topic={topic} size={TOPIC_ICON_SIZE} />\n        : <img src={blankSrc} alt=\"\" draggable={false} />}\n      {topic?.title ? renderText(topic.title) : lang('Loading')}\n      {topic?.isClosed && <Icon name=\"lock\" />}\n      <Icon name=\"next\" />\n    </div>\n  );\n};\n\nexport default memo(TopicChip);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"JldIqqof\"};","import type { MouseEvent as ReactMouseEvent } from 'react';\nimport type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { OwnProps as PhotoProps } from '../Photo';\nimport type { OwnProps as VideoProps } from '../Video';\n\nimport {\n  selectIsInSelectMode,\n  selectIsMessageSelected,\n} from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport Icon from '../../../common/icons/Icon';\n\ntype OwnProps<T> =\n  (PhotoProps<T> | VideoProps<T>) & {\n    clickArg: number;\n    noSelectControls?: boolean;\n  };\n\ntype StateProps = {\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n};\n\nexport default function withSelectControl(WrappedComponent: FC) {\n  // eslint-disable-next-line @typescript-eslint/comma-dangle\n  const ComponentWithSelectControl = <T,>(props: OwnProps<T> & StateProps) => {\n    const {\n      isInSelectMode,\n      isSelected,\n      dimensions,\n      clickArg,\n    } = props;\n    const { toggleMessageSelection } = getActions();\n\n    const handleMessageSelect = useLastCallback((e: ReactMouseEvent<HTMLDivElement, MouseEvent>) => {\n      e.stopPropagation();\n      toggleMessageSelection({ messageId: clickArg, withShift: e?.shiftKey });\n    });\n\n    const newProps = useMemo(() => {\n      const { dimensions: dims, onClick } = props;\n      return {\n        ...props,\n        isInSelectMode,\n        isSelected,\n        dimensions: {\n          ...dims,\n          x: 0,\n          y: 0,\n        },\n        onClick: isInSelectMode ? undefined : onClick,\n      };\n    }, [props, isInSelectMode, isSelected]);\n\n    return (\n      <div\n        className={buildClassName('album-item-select-wrapper', isSelected && 'is-selected')}\n        style={dimensions ? `left: ${dimensions.x}px; top: ${dimensions.y}px;` : ''}\n        onClick={isInSelectMode ? handleMessageSelect : undefined}\n      >\n        {isInSelectMode && (\n          <div className=\"message-select-control\">\n            {isSelected && (\n              <Icon name=\"select\" />\n            )}\n          </div>\n        )}\n        {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n        <WrappedComponent {...newProps} />\n      </div>\n    );\n  };\n\n  return memo(withGlobal<OwnProps<unknown>>(\n    (global, ownProps) => {\n      const { clickArg, noSelectControls } = ownProps;\n      return {\n        isInSelectMode: !noSelectControls && selectIsInSelectMode(global),\n        isSelected: !noSelectControls && selectIsMessageSelected(global, clickArg),\n      };\n    },\n  )(ComponentWithSelectControl)) as typeof ComponentWithSelectControl;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { GlobalState, TabState } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IAlbum, ThemeKey } from '../../../types';\nimport type { IAlbumLayout } from './helpers/calculateAlbumLayout';\n\nimport {\n  getIsDownloading, getMessageContent, getMessageHtmlId, getMessagePhoto,\n} from '../../../global/helpers';\nimport {\n  selectActiveDownloads,\n  selectCanAutoLoadMedia,\n  selectCanAutoPlayMedia,\n  selectTheme,\n} from '../../../global/selectors';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport { AlbumRectPart } from './helpers/calculateAlbumLayout';\nimport withSelectControl from './hocs/withSelectControl';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Photo from './Photo';\nimport Video from './Video';\n\nimport './Album.scss';\n\nconst PhotoWithSelect = withSelectControl(Photo);\nconst VideoWithSelect = withSelectControl(Video);\n\ntype OwnProps = {\n  album: IAlbum;\n  observeIntersection: ObserveFn;\n  hasCustomAppendix?: boolean;\n  isOwn: boolean;\n  isProtected?: boolean;\n  albumLayout: IAlbumLayout;\n  onMediaClick: (messageId: number, index?: number) => void;\n};\n\ntype StateProps = {\n  theme: ThemeKey;\n  uploadsByKey: GlobalState['fileUploads']['byMessageKey'];\n  activeDownloads: TabState['activeDownloads'];\n};\n\nconst Album: FC<OwnProps & StateProps> = ({\n  album,\n  observeIntersection,\n  hasCustomAppendix,\n  isOwn,\n  isProtected,\n  albumLayout,\n  onMediaClick,\n  uploadsByKey,\n  activeDownloads,\n  theme,\n}) => {\n  const { cancelUploadMedia } = getActions();\n\n  const { content: { paidMedia } } = album.mainMessage;\n\n  const mediaCount = album.isPaidMedia ? paidMedia!.extendedMedia.length : album.messages.length;\n\n  const handlePaidMediaClick = useLastCallback((index: number) => {\n    onMediaClick(album.mainMessage.id, index);\n  });\n\n  const handleAlbumMessageClick = useLastCallback((messageId: number) => {\n    onMediaClick(messageId);\n  });\n\n  const handleCancelUpload = useLastCallback((messageId: number) => {\n    cancelUploadMedia({ chatId: album.mainMessage.chatId, messageId });\n  });\n\n  const messages = useMemo(() => {\n    if (album.isPaidMedia) {\n      return album.mainMessage.content.paidMedia!.extendedMedia.map(() => album.mainMessage);\n    }\n\n    return album.messages;\n  }, [album]);\n\n  function renderAlbumMessage(message: ApiMessage, index: number) {\n    const renderingPaidMedia = album.isPaidMedia ? message.content.paidMedia?.extendedMedia[index] : undefined;\n    const paidPhotoOrPreview = renderingPaidMedia && 'mediaType' in renderingPaidMedia\n      ? renderingPaidMedia : renderingPaidMedia?.photo;\n    const paidVideoOrPreview = renderingPaidMedia && 'mediaType' in renderingPaidMedia\n      ? renderingPaidMedia : renderingPaidMedia?.video;\n    const photo = paidPhotoOrPreview || getMessagePhoto(message);\n    const video = paidVideoOrPreview || getMessageContent(message).video;\n\n    const fileUpload = uploadsByKey[getMessageKey(message)];\n    const uploadProgress = fileUpload?.progress;\n    const { dimensions, sides } = albumLayout.layout[index];\n\n    // Ignoring global updates is a known drawback here\n    const canAutoLoad = selectCanAutoLoadMedia(getGlobal(), message);\n    const canAutoPlay = selectCanAutoPlayMedia(getGlobal(), message);\n\n    if (photo) {\n      const shouldAffectAppendix = hasCustomAppendix && (\n        // eslint-disable-next-line no-bitwise\n        (isOwn ? index === mediaCount - 1 : Boolean(sides & AlbumRectPart.Left && sides & AlbumRectPart.Bottom))\n      );\n\n      return (\n        <PhotoWithSelect\n          id={`album-media-${getMessageHtmlId(message.id, album.isPaidMedia ? index : undefined)}`}\n          photo={photo}\n          isOwn={isOwn}\n          observeIntersectionForLoading={observeIntersection}\n          canAutoLoad={canAutoLoad}\n          shouldAffectAppendix={shouldAffectAppendix}\n          uploadProgress={uploadProgress}\n          dimensions={dimensions}\n          isProtected={isProtected}\n          clickArg={album.isPaidMedia ? index : message.id}\n          onClick={album.isPaidMedia ? handlePaidMediaClick : handleAlbumMessageClick}\n          onCancelUpload={handleCancelUpload}\n          isDownloading={photo.mediaType !== 'extendedMediaPreview' && getIsDownloading(activeDownloads, photo)}\n          theme={theme}\n          noSelectControls={album.isPaidMedia}\n        />\n      );\n    } else if (video) {\n      return (\n        <VideoWithSelect\n          id={`album-media-${getMessageHtmlId(message.id)}`}\n          video={video}\n          observeIntersectionForLoading={observeIntersection}\n          canAutoLoad={canAutoLoad}\n          canAutoPlay={canAutoPlay}\n          uploadProgress={uploadProgress}\n          dimensions={dimensions}\n          isProtected={isProtected}\n          clickArg={album.isPaidMedia ? index : message.id}\n          onClick={album.isPaidMedia ? handlePaidMediaClick : handleAlbumMessageClick}\n          onCancelUpload={handleCancelUpload}\n          isDownloading={video.mediaType !== 'extendedMediaPreview' && getIsDownloading(activeDownloads, video)}\n          theme={theme}\n          noSelectControls={album.isPaidMedia}\n        />\n      );\n    }\n\n    return undefined;\n  }\n\n  const { width: containerWidth, height: containerHeight } = albumLayout.containerStyle;\n\n  return (\n    <div\n      className=\"Album\"\n      style={`width: ${containerWidth}px; height: ${containerHeight}px;`}\n    >\n      {messages.map(renderAlbumMessage)}\n    </div>\n  );\n};\n\nexport default withGlobal<OwnProps>(\n  (global): StateProps => {\n    const theme = selectTheme(global);\n    const activeDownloads = selectActiveDownloads(global);\n\n    return {\n      theme,\n      uploadsByKey: global.fileUploads.byMessageKey,\n      activeDownloads,\n    };\n  },\n)(Album);\n","import { useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ActiveEmojiInteraction } from '../../../types';\n\nimport { IS_ELECTRON } from '../../../util/browser/windowEnvironment';\nimport buildStyle from '../../../util/buildStyle';\nimport safePlay from '../../../util/safePlay';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\n\nconst SIZE = 7 * REM;\nconst INTERACTION_BUNCH_TIME = 1000;\nconst MS_DIVIDER = 1000;\nconst TIME_DEFAULT = 0;\n\nexport default function useAnimatedEmoji(\n  chatId?: string,\n  messageId?: number,\n  soundId?: string,\n  activeEmojiInteractions?: ActiveEmojiInteraction[],\n  isOwn?: boolean,\n  emoji?: string,\n  preferredSize?: number,\n) {\n  const {\n    interactWithAnimatedEmoji, sendEmojiInteraction, sendWatchingEmojiInteraction,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const audioRef = useRef<HTMLAudioElement | undefined>(null);\n\n  const soundMediaData = useMedia(soundId ? `document${soundId}` : undefined, !soundId);\n\n  const size = preferredSize || SIZE;\n  const style = buildStyle(`width: ${size}px`, `height: ${size}px`, emoji && !IS_ELECTRON && 'cursor: pointer');\n\n  const interactions = useRef<number[] | undefined>(undefined);\n  const startedInteractions = useRef<number | undefined>(undefined);\n  const sendInteractionBunch = useLastCallback(() => {\n    const container = ref.current;\n\n    if (!container) return;\n\n    sendEmojiInteraction({\n      chatId: chatId!,\n      messageId: messageId!,\n      emoji: emoji!,\n      interactions: interactions.current!,\n    });\n    startedInteractions.current = undefined;\n    interactions.current = undefined;\n  });\n\n  const play = useLastCallback(() => {\n    const audio = audioRef.current;\n    if (soundMediaData) {\n      if (audio) {\n        audio.pause();\n        audio.remove();\n      }\n      audioRef.current = new Audio();\n      audioRef.current.src = soundMediaData;\n      safePlay(audioRef.current);\n      audioRef.current.addEventListener('ended', () => {\n        audioRef.current = undefined;\n      }, { once: true });\n    }\n  });\n\n  const handleClick = useLastCallback(() => {\n    play();\n\n    const container = ref.current;\n\n    if (!emoji || !container || !messageId || !chatId) {\n      return;\n    }\n\n    const { x, y } = container.getBoundingClientRect();\n\n    interactWithAnimatedEmoji({\n      emoji: emoji!,\n      x,\n      y,\n      startSize: size,\n      isReversed: !isOwn,\n    });\n\n    if (!interactions.current) {\n      interactions.current = [];\n      startedInteractions.current = performance.now();\n      setTimeout(sendInteractionBunch, INTERACTION_BUNCH_TIME);\n    }\n\n    interactions.current.push(startedInteractions.current\n      ? (performance.now() - startedInteractions.current) / MS_DIVIDER\n      : TIME_DEFAULT);\n  });\n\n  // Set an end anchor for remote activated interaction\n  useEffect(() => {\n    const container = ref.current;\n\n    if (!container || !activeEmojiInteractions) return;\n\n    activeEmojiInteractions.forEach(({\n      id,\n      startSize,\n      messageId: interactionMessageId,\n    }) => {\n      if (startSize || messageId !== interactionMessageId) {\n        return;\n      }\n\n      const { x, y } = container.getBoundingClientRect();\n\n      sendWatchingEmojiInteraction({\n        id,\n        chatId: chatId!,\n        emoticon: emoji!,\n        startSize: size,\n        x,\n        y,\n        isReversed: !isOwn,\n      });\n      play();\n    });\n  }, [activeEmojiInteractions, chatId, emoji, isOwn, messageId, play, sendWatchingEmojiInteraction, size]);\n\n  return {\n    ref,\n    size,\n    style,\n    handleClick,\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ActiveEmojiInteraction } from '../../../types';\n\nimport {\n  selectAnimatedEmojiEffect,\n  selectAnimatedEmojiSound,\n  selectCanPlayAnimatedEmojis,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { LIKE_STICKER_ID } from '../../common/helpers/mediaDimensions';\nimport { getCustomEmojiSize } from '../../common/richinput/customEmoji';\n\nimport useAnimatedEmoji from '../../common/hooks/useAnimatedEmoji';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport './AnimatedEmoji.scss';\n\ntype OwnProps = {\n  customEmojiId: string;\n  withEffects?: boolean;\n  isOwn?: boolean;\n  forceLoadPreview?: boolean;\n  messageId?: number;\n  chatId?: string;\n  activeEmojiInteractions?: ActiveEmojiInteraction[];\n  observeIntersection?: ObserveFn;\n};\n\ninterface StateProps {\n  sticker?: ApiSticker;\n  effect?: ApiSticker;\n  soundId?: string;\n  noPlay?: boolean;\n}\n\nconst AnimatedCustomEmoji: FC<OwnProps & StateProps> = ({\n  isOwn,\n  customEmojiId,\n  messageId,\n  chatId,\n  activeEmojiInteractions,\n  sticker,\n  effect,\n  soundId,\n  noPlay,\n  observeIntersection,\n}) => {\n  const {\n    ref,\n    size,\n    style,\n    handleClick,\n  } = useAnimatedEmoji(\n    chatId, messageId, soundId, activeEmojiInteractions, isOwn, effect?.emoji, getCustomEmojiSize(1),\n  );\n\n  return (\n    <CustomEmoji\n      ref={ref}\n      documentId={customEmojiId}\n      className={buildClassName('AnimatedEmoji media-inner', sticker?.id === LIKE_STICKER_ID && 'like-sticker-thumb')}\n      style={style}\n      size={size}\n      isBig\n      noPlay={noPlay}\n      withSharedAnimation\n      forceOnHeavyAnimation={Boolean(effect && activeEmojiInteractions?.length)}\n      observeIntersectionForLoading={observeIntersection}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { customEmojiId, withEffects }) => {\n  const sticker = global.customEmojis.byId[customEmojiId];\n\n  return {\n    sticker,\n    effect: sticker?.emoji && withEffects ? selectAnimatedEmojiEffect(global, sticker.emoji) : undefined,\n    soundId: sticker?.emoji && selectAnimatedEmojiSound(global, sticker.emoji),\n    noPlay: !selectCanPlayAnimatedEmojis(global),\n  };\n})(AnimatedCustomEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ActiveEmojiInteraction } from '../../../types';\n\nimport {\n  selectAnimatedEmoji,\n  selectAnimatedEmojiEffect,\n  selectAnimatedEmojiSound,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { LIKE_STICKER_ID } from '../../common/helpers/mediaDimensions';\n\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useAnimatedEmoji from '../../common/hooks/useAnimatedEmoji';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\n\nimport './AnimatedEmoji.scss';\n\ntype OwnProps = {\n  emoji: string;\n  withEffects?: boolean;\n  isOwn?: boolean;\n  observeIntersection?: ObserveFn;\n  forceLoadPreview?: boolean;\n  messageId?: number;\n  chatId?: string;\n  activeEmojiInteractions?: ActiveEmojiInteraction[];\n};\n\ninterface StateProps {\n  sticker?: ApiSticker;\n  effect?: ApiSticker;\n  soundId?: string;\n}\n\nconst QUALITY = 1;\n\nconst AnimatedEmoji: FC<OwnProps & StateProps> = ({\n  isOwn,\n  observeIntersection,\n  forceLoadPreview,\n  messageId,\n  chatId,\n  activeEmojiInteractions,\n  sticker,\n  effect,\n  soundId,\n}) => {\n  const {\n    ref,\n    size,\n    style,\n    handleClick,\n  } = useAnimatedEmoji(chatId, messageId, soundId, activeEmojiInteractions, isOwn, effect?.emoji);\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  return (\n    <AnimatedIconFromSticker\n      sticker={sticker}\n      size={size}\n      quality={QUALITY}\n      noLoad={!isIntersecting}\n      forcePreview={forceLoadPreview}\n      play={isIntersecting}\n      forceAlways\n      ref={ref}\n      className={buildClassName('AnimatedEmoji media-inner', sticker?.id === LIKE_STICKER_ID && 'like-sticker-thumb')}\n      style={style}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { emoji, withEffects }) => {\n  return {\n    sticker: selectAnimatedEmoji(global, emoji),\n    effect: withEffects ? selectAnimatedEmojiEffect(global, emoji) : undefined,\n    soundId: selectAnimatedEmojiSound(global, emoji),\n  };\n})(AnimatedEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiCommentsInfo } from '../../../api/types';\n\nimport { selectIsCurrentUserFrozen, selectPeer } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Spinner from '../../ui/Spinner';\n\nimport './CommentButton.scss';\n\ntype OwnProps = {\n  threadInfo: ApiCommentsInfo;\n  disabled?: boolean;\n  isLoading?: boolean;\n  isCustomShape?: boolean;\n  asActionButton?: boolean;\n};\n\nconst SHOW_LOADER_DELAY = 450;\n\nconst CommentButton: FC<OwnProps> = ({\n  isCustomShape,\n  threadInfo,\n  disabled,\n  isLoading,\n  asActionButton,\n}) => {\n  const { openThread, openFrozenAccountModal } = getActions();\n\n  const shouldRenderLoading = useAsyncRendering([isLoading], SHOW_LOADER_DELAY);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const {\n    originMessageId, chatId, messagesCount, lastMessageId, lastReadInboxMessageId, recentReplierIds, originChannelId,\n  } = threadInfo;\n\n  const handleClick = useLastCallback(() => {\n    const global = getGlobal();\n    if (selectIsCurrentUserFrozen(global)) {\n      openFrozenAccountModal();\n      return;\n    }\n    openThread({\n      isComments: true, chatId, originMessageId, originChannelId,\n    });\n  });\n\n  const recentRepliers = useMemo(() => {\n    if (!recentReplierIds?.length) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on chats and users, so we avoid them\n    const global = getGlobal();\n\n    return recentReplierIds.map((peerId) => {\n      return selectPeer(global, peerId);\n    }).filter(Boolean);\n  }, [recentReplierIds]);\n\n  if (messagesCount === undefined) {\n    return undefined;\n  }\n\n  function renderRecentRepliers() {\n    return (\n      Boolean(recentRepliers?.length) && (\n        <div className=\"recent-repliers\" dir={oldLang.isRtl ? 'rtl' : 'ltr'}>\n          {recentRepliers!.map((peer) => (\n            <Avatar\n              key={peer.id}\n              size=\"small\"\n              peer={peer}\n            />\n          ))}\n        </div>\n      )\n    );\n  }\n\n  const hasUnread = Boolean(lastReadInboxMessageId && lastMessageId && lastReadInboxMessageId < lastMessageId);\n\n  const commentsText = messagesCount ? (oldLang('CommentsCount', '%COMMENTS_COUNT%', undefined, messagesCount))\n    .split('%')\n    .map((s) => {\n      return (s === 'COMMENTS_COUNT' ? <AnimatedCounter text={formatIntegerCompact(lang, messagesCount)} /> : s);\n    })\n    : undefined;\n\n  return (\n    <div\n      data-cnt={formatIntegerCompact(lang, messagesCount)}\n      className={buildClassName(\n        'CommentButton',\n        hasUnread && 'has-unread',\n        disabled && 'disabled',\n        isCustomShape && 'CommentButton-custom-shape',\n        isLoading && 'loading',\n        asActionButton && 'as-action-button',\n      )}\n      dir={oldLang.isRtl ? 'rtl' : 'ltr'}\n      onClick={handleClick}\n      role=\"button\"\n      tabIndex={0}\n    >\n      <Icon\n        name=\"comments-sticker\"\n        className={buildClassName(\n          'CommentButton_icon-comments',\n          isLoading && shouldRenderLoading && 'CommentButton_hidden',\n        )}\n      />\n      {!recentRepliers?.length && <Icon name=\"comments\" />}\n      {renderRecentRepliers()}\n      <div className=\"label\" dir=\"auto\">\n        {messagesCount ? commentsText : oldLang('LeaveAComment')}\n      </div>\n      <div className=\"CommentButton_right\">\n        {isLoading && (\n          <Spinner\n            className={buildClassName(\n              'CommentButton_loading',\n              !shouldRenderLoading && 'CommentButton_hidden',\n            )}\n            color={isCustomShape ? 'white' : 'blue'}\n          />\n        ) }\n        <Icon\n          name=\"next\"\n          className={buildClassName(\n            'CommentButton_icon-open',\n            isLoading && shouldRenderLoading && 'CommentButton_hidden',\n          )}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(CommentButton);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AAHWWWvU\",\"info-container\":\"tpDpg82n\",\"infoContainer\":\"tpDpg82n\",\"info\":\"fpYynE5s\",\"name\":\"_PNTJc_V\",\"phone\":\"JP_3wes8\",\"divider\":\"_OSJcuqH\",\"buttons\":\"Blui4M4G\",\"button\":\"ReDHhQHm\",\"disabled\":\"XAeKpuIZ\",\"emoji-icon-background\":\"SjZYi3sJ\",\"emojiIconBackground\":\"SjZYi3sJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiContact, ApiCountryCode, ApiUser } from '../../../api/types';\n\nimport { getCanAddContact, getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport Button from '../../ui/Button';\n\nimport styles from './Contact.module.scss';\n\ntype OwnProps = {\n  contact: ApiContact;\n  noUserColors?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst UNREGISTERED_CONTACT_ID = '0';\n\nconst Contact: FC<OwnProps & StateProps> = ({\n  contact, user, phoneCodeList, noUserColors,\n}) => {\n  const lang = useOldLang();\n  const {\n    openChat, openAddContactDialog, showNotification, openChatWithInfo,\n  } = getActions();\n\n  const { phoneNumber, userId } = contact;\n  const isRegistered = userId !== UNREGISTERED_CONTACT_ID;\n  const canAddContact = isRegistered && user && getCanAddContact(user);\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: userId });\n  });\n\n  const handleAddContact = useLastCallback(() => {\n    openAddContactDialog({ userId: user?.id });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (user) {\n      openChatWithInfo({ id: userId });\n    } else {\n      copyTextToClipboard(phoneNumber);\n      showNotification({ message: lang('PhoneCopied') });\n    }\n  });\n\n  return (\n    <PeerColorWrapper\n      noUserColors={noUserColors}\n      peer={user}\n      emojiIconClassName={styles.emojiIconBackground}\n      className={styles.root}\n    >\n      <div className={styles.infoContainer} onClick={handleClick}>\n        <Avatar size=\"medium\" peer={user} text={getContactName(contact)} />\n        <div className={styles.info}>\n          <div className={styles.name}>\n            {user ? getUserFullName(user) : getContactName(contact)}\n          </div>\n          <div className={styles.phone}>\n            {formatPhoneNumberWithCode(phoneCodeList, phoneNumber)}\n          </div>\n        </div>\n      </div>\n      {isRegistered && (\n        <>\n          <div className={styles.divider} />\n          <div className={styles.buttons}>\n            <Button\n              isText\n              color=\"translucent\"\n              ripple\n              size=\"tiny\"\n              onClick={handleOpenChat}\n              className={styles.button}\n            >\n              {lang('SharedContactMessage')}\n            </Button>\n            {canAddContact && (\n              <Button\n                isText\n                color=\"translucent\"\n                ripple\n                size=\"tiny\"\n                onClick={handleAddContact}\n                className={styles.button}\n              >\n                {lang('SharedContactAdd')}\n              </Button>\n            )}\n          </div>\n        </>\n      )}\n    </PeerColorWrapper>\n  );\n};\n\nfunction getContactName(contact: ApiContact) {\n  if (contact.firstName && contact.lastName) {\n    return `${contact.firstName} ${contact.lastName}`;\n  }\n\n  if (contact.firstName) {\n    return contact.firstName;\n  }\n\n  if (contact.lastName) {\n    return contact.lastName;\n  }\n\n  return '';\n}\n\nexport default withGlobal<OwnProps>((global, { contact }): StateProps => {\n  const {\n    countryList: { phoneCodes: phoneCodeList },\n  } = global;\n  const user = selectUser(global, contact.userId);\n\n  return {\n    user,\n    phoneCodeList,\n  };\n})(Contact);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ContextMenuContainer';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ContextMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ContextMenuContainer = useModuleLoader(Bundles.Extra, 'ContextMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ContextMenuContainer ? <ContextMenuContainer {...props} /> : undefined;\n};\n\nexport default ContextMenuContainerAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"HMB5LgeX\",\"title\":\"vZnCPl3t\",\"content\":\"k_dGolcu\",\"separator\":\"qRaSs5iA\",\"footnote\":\"EDmr0wJG\",\"collapsed\":\"hYzpXwTM\",\"cutoutWrapper\":\"nfCzKu78\",\"collapseIcon\":\"mxPizZpR\",\"clickable\":\"Cj2cLczd\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiFactCheck } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useCollapsibleLines from '../../../hooks/element/useCollapsibleLines';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport Separator from '../../ui/Separator';\n\nimport styles from './FactCheck.module.scss';\n\ntype OwnProps = {\n  factCheck: ApiFactCheck;\n  isToggleDisabled?: boolean;\n};\n\nconst COLOR = {\n  color: 0,\n};\nconst MAX_LINES = 4;\n\nconst FactCheck = ({ factCheck, isToggleDisabled }: OwnProps) => {\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cutoutRef = useRef<HTMLDivElement>(null);\n  const {\n    isCollapsed, isCollapsible, setIsCollapsed,\n  } = useCollapsibleLines(ref, MAX_LINES, cutoutRef);\n\n  const countryLocalized = useMemo(() => {\n    if (!factCheck.countryCode || !lang.code) return undefined;\n\n    const displayNames = new Intl.DisplayNames([lang.code], { type: 'region' });\n    return displayNames.of(factCheck.countryCode);\n  }, [factCheck.countryCode, lang.code]);\n\n  const canExpand = !isToggleDisabled && isCollapsed;\n\n  const handleExpand = useLastCallback(() => {\n    setIsCollapsed(false);\n  });\n\n  const handleToggle = useLastCallback(() => {\n    setIsCollapsed((prev) => !prev);\n  });\n\n  if (!factCheck.text) {\n    return undefined;\n  }\n\n  return (\n    <PeerColorWrapper peerColor={COLOR} className={styles.root} onClick={canExpand ? handleExpand : undefined}>\n      <div\n        ref={cutoutRef}\n        className={buildClassName(styles.cutoutWrapper, isCollapsed && styles.collapsed)}\n      >\n        <div className={styles.title}>{lang('FactCheck')}</div>\n        <div ref={ref} className={styles.content}>\n          {renderTextWithEntities({\n            text: factCheck.text.text,\n            entities: factCheck.text.entities,\n          })}\n        </div>\n        <Separator className={styles.separator} />\n        <div className={styles.footnote}>{lang('FactCheckFooter', countryLocalized)}</div>\n      </div>\n      {isCollapsible && (\n        <div\n          className={buildClassName(styles.collapseIcon, !isToggleDisabled && styles.clickable)}\n          onClick={!isToggleDisabled ? handleToggle : undefined}\n          aria-hidden\n        >\n          <Icon name={isCollapsed ? 'down' : 'up'} />\n        </div>\n      )}\n    </PeerColorWrapper>\n  );\n};\n\nexport default memo(FactCheck);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { getGamePreviewPhotoHash, getGamePreviewVideoHash, getMessageText } from '../../../global/helpers';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport './Game.scss';\n\nconst DEFAULT_PREVIEW_DIMENSIONS = {\n  width: 480,\n  height: 270,\n};\n\ntype OwnProps = {\n  message: ApiMessage;\n  canAutoLoadMedia?: boolean;\n};\n\nconst Game: FC<OwnProps> = ({\n  message,\n  canAutoLoadMedia,\n}) => {\n  const { clickBotInlineButton } = getActions();\n  const game = message.content.game!;\n  const {\n    title, description,\n  } = game;\n\n  const photoHash = getGamePreviewPhotoHash(game);\n  const videoHash = getGamePreviewVideoHash(game);\n  const photoBlobUrl = useMedia(photoHash, !canAutoLoadMedia);\n  const videoBlobUrl = useMedia(videoHash, !canAutoLoadMedia);\n\n  const handleGameClick = () => {\n    clickBotInlineButton({\n      chatId: message.chatId,\n      messageId: message.id,\n      button: message.inlineButtons![0][0],\n    });\n  };\n\n  return (\n    <div className=\"Game\">\n      <div\n        className=\"preview\"\n        style={`width: ${DEFAULT_PREVIEW_DIMENSIONS.width}px; height: ${DEFAULT_PREVIEW_DIMENSIONS.height}px`}\n        onClick={handleGameClick}\n      >\n        {!photoBlobUrl && !videoBlobUrl && (\n          <Skeleton className=\"skeleton preview-content\" />\n        )}\n        {photoBlobUrl && (\n          <img\n            className=\"preview-content\"\n            src={photoBlobUrl}\n            alt={title}\n            draggable={false}\n          />\n        )}\n        {videoBlobUrl && (\n          <video\n            className=\"preview-content\"\n            playsInline\n            muted\n            disablePictureInPicture\n            autoPlay\n            loop\n            src={videoBlobUrl}\n          />\n        )}\n      </div>\n      <div className=\"title\">{title}</div>\n      {!getMessageText(message) && <div className=\"description\">{description}</div>}\n    </div>\n  );\n};\n\nexport default memo(Game);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CbpKtOey\",\"title\":\"ogvcv3mr\",\"sticker\":\"hjjKhvVv\",\"resultSticker\":\"JEiR48jJ\",\"count\":\"n_QCMv_A\",\"section\":\"MSFa9BPf\",\"description\":\"HfZ6SuLI\",\"peers\":\"rPyyNYxK\",\"peer\":\"FV70u896\",\"button\":\"jMBw7STU\",\"result\":\"ZQ4aVVkI\",\"separator\":\"ao0x1YnS\"};","import React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiGiveaway, ApiGiveawayInfo, ApiGiveawayResults, ApiMessage, ApiPeer, ApiSticker,\n} from '../../../api/types';\n\nimport {\n  getChatTitle, getUserFullName, isOwnMessage,\n} from '../../../global/helpers';\nimport { isApiPeerChat } from '../../../global/helpers/peers';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChat,\n  selectForwardedSender,\n  selectGiftStickerForDuration,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateAtTime, formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport { isoToEmoji } from '../../../util/emoji/emoji';\nimport { getServerTime } from '../../../util/serverTime';\nimport { callApi } from '../../../api/gramjs';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Separator from '../../ui/Separator';\n\nimport styles from './Giveaway.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  sender?: ApiPeer;\n  giftSticker?: ApiSticker;\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst NBSP = '\\u00A0';\nconst GIFT_STICKER_SIZE = 175;\nconst RESULT_STICKER_SIZE = 150;\n\nconst Giveaway = ({\n  chat,\n  sender,\n  message,\n  canPlayAnimatedEmojis,\n  giftSticker,\n}: OwnProps & StateProps) => {\n  const { openChat } = getActions();\n\n  const isLoadingInfo = useRef(false);\n  const [giveawayInfo, setGiveawayInfo] = useState<ApiGiveawayInfo | undefined>();\n\n  const lang = useOldLang();\n  const { giveaway, giveawayResults } = message.content;\n  const isResults = Boolean(giveawayResults);\n  const {\n    months, untilDate, prizeDescription, stars,\n  } = (giveaway || giveawayResults)!;\n\n  const isOwn = isOwnMessage(message);\n\n  const quantity = isResults ? giveawayResults.winnersCount : giveaway!.quantity;\n\n  const hasEnded = getServerTime() > untilDate;\n\n  const countryList = useMemo(() => {\n    if (isResults) return undefined;\n    const translatedNames = new Intl.DisplayNames([lang.code!, 'en'].filter(Boolean), { type: 'region' });\n    return giveaway?.countries?.map((countryCode) => (\n      `${isoToEmoji(countryCode)}${NBSP}${translatedNames.of(countryCode)}`\n    )).join(', ');\n  }, [giveaway, isResults, lang.code]);\n\n  const handlePeerClick = useLastCallback((channelId: string) => {\n    openChat({ id: channelId });\n  });\n\n  const handleShowInfoClick = useLastCallback(async () => {\n    if (isLoadingInfo.current) return;\n\n    isLoadingInfo.current = true;\n    const result = await callApi('fetchGiveawayInfo', {\n      peer: chat,\n      messageId: message.id,\n    });\n    setGiveawayInfo(result);\n    isLoadingInfo.current = false;\n  });\n\n  const handleCloseInfo = useLastCallback(() => {\n    setGiveawayInfo(undefined);\n  });\n\n  const giveawayInfoTitle = useMemo(() => {\n    if (!giveawayInfo) return undefined;\n    return lang(giveawayInfo.type === 'results' ? 'BoostingGiveawayEnd' : 'BoostingGiveAwayAbout');\n  }, [giveawayInfo, lang]);\n\n  function renderGiveawayDescription(media: ApiGiveaway) {\n    const channelIds = media.channelIds;\n    return (\n      <>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingGiveawayPrizes'), ['simple_markdown'])}\n          </strong>\n          {prizeDescription && (\n            <>\n              <p className={styles.description}>\n                {renderText(\n                  lang('BoostingGiveawayMsgPrizes', [quantity, prizeDescription], undefined, quantity),\n                  ['simple_markdown'],\n                )}\n              </p>\n              <Separator>{lang('BoostingGiveawayMsgWithDivider')}</Separator>\n            </>\n          )}\n          <p className={styles.description}>\n            {message?.content?.giveaway?.stars ? (\n              <>\n                {renderText(\n                  lang('Chat.Giveaway.Message.Stars.PrizeText', lang('Stars', message?.content?.giveaway?.stars)),\n                  ['simple_markdown'],\n                )}\n                <br />\n                {renderText(lang('AmongWinners', quantity), ['simple_markdown'])}\n              </>\n            ) : (\n              <>\n                {renderText(lang('Chat.Giveaway.Info.Subscriptions', quantity), ['simple_markdown'])}\n                <br />\n                {renderText(lang(\n                  'ActionGiftPremiumSubtitle',\n                  lang('Chat.Giveaway.Info.Months', months),\n                ), ['simple_markdown'])}\n              </>\n            )}\n          </p>\n        </div>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingGiveawayMsgParticipants'), ['simple_markdown'])}\n          </strong>\n          <p className={styles.description}>\n            {renderText(lang('BoostingGiveawayMsgAllSubsPlural', channelIds.length), ['simple_markdown'])}\n          </p>\n          <div className={styles.peers}>\n            {channelIds.map((peerId) => (\n              <PeerChip\n                peerId={peerId}\n                forceShowSelf\n                withPeerColors={!isOwn}\n                className={styles.peer}\n                clickArg={peerId}\n                onClick={handlePeerClick}\n              />\n            ))}\n          </div>\n          {countryList && (\n            <span>{renderText(lang('Chat.Giveaway.Message.CountriesFrom', countryList))}</span>\n          )}\n        </div>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingWinnersDate'), ['simple_markdown'])}\n          </strong>\n          <p className={styles.description}>\n            {formatDateTimeToString(untilDate * 1000, lang.code, true)}\n          </p>\n        </div>\n      </>\n    );\n  }\n\n  function renderGiveawayResultsDescription(media: ApiGiveawayResults) {\n    const winnerIds = media.winnerIds;\n    return (\n      <>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingGiveawayResultsMsgWinnersSelected'), ['simple_markdown'])}\n          </strong>\n          <p className={styles.description}>\n            {renderText(lang('BoostingGiveawayResultsMsgWinnersTitle', winnerIds.length), ['simple_markdown'])}\n          </p>\n          <strong className={styles.title}>\n            {lang('lng_prizes_results_winners')}\n          </strong>\n          <div className={styles.peers}>\n            {winnerIds.map((peerId) => (\n              <PeerChip\n                peerId={peerId}\n                forceShowSelf\n                withPeerColors={!isOwn}\n                className={styles.peer}\n                clickArg={peerId}\n                onClick={handlePeerClick}\n              />\n            ))}\n          </div>\n        </div>\n        <div className={styles.section}>\n          <p className={styles.description}>\n            {lang('BoostingGiveawayResultsMsgAllWinnersReceivedLinks')}\n          </p>\n        </div>\n      </>\n    );\n  }\n\n  function renderGiveawayInfo() {\n    if (!sender || !giveawayInfo) return undefined;\n    const isResultsInfo = giveawayInfo.type === 'results';\n\n    const chatTitle = isApiPeerChat(sender) ? getChatTitle(lang, sender) : getUserFullName(sender);\n    const endDate = formatDateAtTime(lang, untilDate * 1000);\n    const otherChannelsCount = giveaway?.channelIds ? giveaway.channelIds.length - 1 : 0;\n    const otherChannelsString = lang('Chat.Giveaway.Info.OtherChannels', otherChannelsCount);\n    const isSeveral = otherChannelsCount > 0;\n\n    const firstKey = isResultsInfo ? 'BoostingGiveawayHowItWorksTextEnd' : 'BoostingGiveawayHowItWorksText';\n    const giveawayDuration = isResultsInfo ? lang('Chat.Giveaway.Info.Months', months) : lang('Stars', stars, 'i');\n    const firstParagraph = lang(firstKey, [chatTitle, quantity, giveawayDuration], undefined, quantity);\n\n    const additionalPrizes = prizeDescription\n      ? lang('BoostingGiveawayHowItWorksIncludeText', [chatTitle, quantity, prizeDescription], undefined, quantity)\n      : undefined;\n\n    let secondKey = '';\n    if (isResultsInfo) {\n      secondKey = isSeveral ? 'BoostingGiveawayHowItWorksSubTextSeveralEnd' : 'BoostingGiveawayHowItWorksSubTextEnd';\n    } else {\n      secondKey = isSeveral ? 'BoostingGiveawayHowItWorksSubTextSeveral' : 'BoostingGiveawayHowItWorksSubText';\n    }\n    let secondParagraph = lang(secondKey, [endDate, quantity, chatTitle, otherChannelsCount], undefined, quantity);\n    if (isResultsInfo && giveawayInfo.activatedCount) {\n      secondParagraph += ` ${lang('BoostingGiveawayUsedLinksPlural', giveawayInfo.activatedCount)}`;\n    }\n\n    let result = '';\n\n    if (isResultsInfo) {\n      if (giveawayInfo.isRefunded) {\n        result = lang('BoostingGiveawayCanceledByPayment');\n      } else {\n        result = lang(giveawayInfo.isWinner ? 'BoostingGiveawayYouWon' : 'BoostingGiveawayYouNotWon');\n      }\n    }\n\n    let lastParagraph = '';\n    if (isResultsInfo) {\n      // Nothing\n    } else if (giveawayInfo.disallowedCountry) {\n      lastParagraph = lang('BoostingGiveawayNotEligibleCountry');\n    } else if (giveawayInfo.adminDisallowedChatId) {\n      // Since rerenders are not expected, we can use the global state directly\n      const chatsById = getGlobal().chats.byId;\n      const disallowedChat = chatsById[giveawayInfo.adminDisallowedChatId];\n      const disallowedChatTitle = disallowedChat && getChatTitle(lang, disallowedChat);\n      lastParagraph = lang('BoostingGiveawayNotEligibleAdmin', disallowedChatTitle);\n    } else if (giveawayInfo.joinedTooEarlyDate) {\n      const joinedTooEarlyDate = formatDateAtTime(lang, giveawayInfo.joinedTooEarlyDate * 1000);\n      lastParagraph = lang('BoostingGiveawayNotEligible', joinedTooEarlyDate);\n    } else if (giveawayInfo.isParticipating) {\n      lastParagraph = isSeveral\n        ? lang('Chat.Giveaway.Info.ParticipatingMany', [chatTitle, otherChannelsCount])\n        : lang('Chat.Giveaway.Info.Participating', chatTitle);\n    } else {\n      lastParagraph = isSeveral\n        ? lang('Chat.Giveaway.Info.NotQualifiedMany', [chatTitle, otherChannelsString, endDate])\n        : lang('Chat.Giveaway.Info.NotQualified', [chatTitle, endDate]);\n    }\n\n    return (\n      <>\n        {result && (\n          <p className={styles.result}>\n            {renderText(result, ['simple_markdown'])}\n          </p>\n        )}\n        <p>\n          {renderText(firstParagraph, ['simple_markdown'])}\n        </p>\n        {additionalPrizes && (\n          <p>\n            {renderText(additionalPrizes, ['simple_markdown'])}\n          </p>\n        )}\n        <p>\n          {renderText(secondParagraph, ['simple_markdown'])}\n        </p>\n        {lastParagraph && (\n          <p>\n            {renderText(lastParagraph, ['simple_markdown'])}\n          </p>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.sticker, isResults && styles.resultSticker)}>\n        {isResults ? (\n          <AnimatedIconWithPreview\n            size={RESULT_STICKER_SIZE}\n            tgsUrl={LOCAL_TGS_URLS.PartyPopper}\n            nonInteractive\n            noLoop\n          />\n        ) : (\n          <AnimatedIconFromSticker\n            sticker={giftSticker}\n            play={canPlayAnimatedEmojis && hasEnded}\n            noLoop\n            nonInteractive\n            size={GIFT_STICKER_SIZE}\n          />\n        )}\n        <span className={styles.count}>\n          {`x${quantity}`}\n        </span>\n      </div>\n      {isResults ? renderGiveawayResultsDescription(giveawayResults) : renderGiveawayDescription(giveaway!)}\n      <Button\n        className={styles.button}\n        color=\"adaptive\"\n        size=\"smaller\"\n        onClick={handleShowInfoClick}\n      >\n        {lang('BoostingHowItWork')}\n      </Button>\n      <ConfirmDialog\n        isOpen={Boolean(giveawayInfo)}\n        isOnlyConfirm\n        title={giveawayInfoTitle}\n        confirmHandler={handleCloseInfo}\n        onClose={handleCloseInfo}\n      >\n        {renderGiveawayInfo()}\n      </ConfirmDialog>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message }): StateProps => {\n    const { giveaway } = message.content;\n    const chat = selectChat(global, message.chatId)!;\n    const sender = selectChat(global, giveaway?.channelIds[0]!)\n      || selectForwardedSender(global, message) || chat;\n\n    const sticker = giveaway && selectGiftStickerForDuration(global, giveaway.months);\n\n    return {\n      chat,\n      sender,\n      giftSticker: sticker,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(Giveaway));\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiKeyboardButton, ApiMessage } from '../../../api/types';\nimport type { ActionPayloads } from '../../../global/types';\n\nimport { RE_TME_LINK } from '../../../config';\nimport renderKeyboardButtonText from '../composer/helpers/renderKeyboardButtonText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport './InlineButtons.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  onClick: (payload: ActionPayloads['clickBotInlineButton']) => void;\n};\n\nconst InlineButtons: FC<OwnProps> = ({ message, onClick }) => {\n  const lang = useOldLang();\n\n  const renderIcon = (button: ApiKeyboardButton) => {\n    const { type } = button;\n    switch (type) {\n      case 'url': {\n        if (!RE_TME_LINK.test(button.url)) {\n          return <Icon className=\"corner-icon\" name=\"arrow-right\" />;\n        }\n        break;\n      }\n      case 'urlAuth':\n        return <Icon className=\"corner-icon\" name=\"arrow-right\" />;\n      case 'buy':\n      case 'receipt':\n        return <Icon className=\"corner-icon\" name=\"card\" />;\n      case 'switchBotInline':\n        return <Icon className=\"corner-icon\" name=\"share-filled\" />;\n      case 'webView':\n      case 'simpleWebView':\n        return <Icon className=\"corner-icon\" name=\"webapp\" />;\n      case 'copy':\n        return <Icon className=\"corner-icon\" name=\"copy\" />;\n    }\n    return undefined;\n  };\n\n  const buttonTexts = useMemo(() => {\n    const texts: TeactNode[][] = [];\n    message.inlineButtons!.forEach((row) => {\n      texts.push(row.map((button) => renderKeyboardButtonText(lang, button)));\n    });\n    return texts;\n  }, [lang, message.inlineButtons]);\n\n  return (\n    <div className=\"InlineButtons\">\n      {message.inlineButtons!.map((row, i) => (\n        <div className=\"row\">\n          {row.map((button, j) => (\n            <Button\n              size=\"tiny\"\n              ripple\n              disabled={button.type === 'unsupported'}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => onClick({ chatId: message.chatId, messageId: message.id, button })}\n            >\n              <span className=\"inline-button-text\">\n                {buttonTexts[i][j]}\n              </span>\n              {renderIcon(button)}\n            </Button>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(InlineButtons);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getMessageInvoice, getWebDocumentHash } from '../../../global/helpers';\nimport buildStyle from '../../../util/buildStyle';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport renderText from '../../common/helpers/renderText';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\n\nimport useLang from '../../../hooks/useLang';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport './Invoice.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  shouldAffectAppendix?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  theme: ThemeKey;\n  forcedWidth?: number;\n};\n\nconst Invoice: FC<OwnProps> = ({\n  message,\n  shouldAffectAppendix,\n  isInSelectMode,\n  isSelected,\n  theme,\n  forcedWidth,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const invoice = getMessageInvoice(message);\n\n  const {\n    title,\n    description,\n    amount,\n    currency,\n    isTest,\n    photo,\n  } = invoice!;\n\n  const photoUrl = useMedia(getWebDocumentHash(photo));\n  const withBlurredBackground = Boolean(forcedWidth);\n  const blurredBackgroundRef = useBlurredMediaThumbRef(photoUrl, !withBlurredBackground);\n  const messageId = message.id;\n\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    if (photoUrl) {\n      const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n      getCustomAppendixBg(photoUrl, false, messageId, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    }\n  }, [shouldAffectAppendix, photoUrl, isInSelectMode, isSelected, theme, messageId]);\n\n  const width = forcedWidth || photo?.dimensions?.width;\n\n  const style = buildStyle(\n    photo?.dimensions && `width: ${width}px`,\n    photo?.dimensions && `aspect-ratio: ${photo.dimensions.width} / ${photo.dimensions.height}`,\n    Boolean(!photo?.dimensions && forcedWidth) && `width: ${forcedWidth}px`,\n  );\n\n  return (\n    <div\n      ref={ref}\n      className=\"Invoice\"\n    >\n      {title && (\n        <p className=\"title\">{renderText(title)}</p>\n      )}\n      {description && (\n        <div className=\"info\">{renderText(description, ['emoji', 'br'])}</div>\n      )}\n      <div className={`description ${photo ? 'has-image' : ''}`}>\n        {Boolean(photo) && (\n          <div className=\"invoice-image-container\">\n            {withBlurredBackground && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n            {photoUrl && (\n              <img\n                className=\"invoice-image\"\n                src={photoUrl}\n                alt=\"\"\n                style={style}\n                crossOrigin=\"anonymous\"\n                draggable={false}\n              />\n            )}\n            {!photoUrl && photo && (\n              <Skeleton\n                width={width}\n                height={photo.dimensions?.height}\n                forceAspectRatio\n              />\n            )}\n          </div>\n        )}\n        <p className=\"description-text\">\n          {formatCurrency(lang, amount, currency, { iconClassName: 'invoice-currency-icon' })}\n          {isTest && <span className=\"test-invoice\">{oldLang('PaymentTestInvoice')}</span>}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Invoice);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"dCK8GQ_8\",\"duration\":\"CWT8ZMwV\",\"buy\":\"C38zhCDM\",\"spoiler\":\"CG55VZP1\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { getMessageInvoice } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { formatCurrencyAsString } from '../../../util/formatCurrency';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\n\nimport styles from './InvoiceMediaPreview.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  isConnected: boolean;\n};\n\nconst POLLING_INTERVAL = 30000;\n\nconst InvoiceMediaPreview: FC<OwnProps> = ({\n  message,\n  isConnected,\n}) => {\n  const { openInvoice, loadExtendedMedia } = getActions();\n  const lang = useOldLang();\n  const invoice = getMessageInvoice(message);\n\n  const { chatId, id } = message;\n\n  const refreshExtendedMedia = useLastCallback(() => {\n    loadExtendedMedia({ chatId, ids: [id] });\n  });\n\n  useInterval(refreshExtendedMedia, isConnected ? POLLING_INTERVAL : undefined);\n\n  const {\n    amount,\n    currency,\n    extendedMedia,\n  } = invoice!;\n\n  const {\n    width, height, thumbnail, duration,\n  } = extendedMedia!;\n\n  const handleClick = useLastCallback(() => {\n    openInvoice({\n      type: 'message',\n      chatId,\n      messageId: id,\n      isExtendedMedia: true,\n    });\n  });\n\n  return (\n    <div\n      className={buildClassName(styles.root, 'media-inner')}\n      onClick={handleClick}\n    >\n      <MediaSpoiler\n        thumbDataUri={thumbnail?.dataUri}\n        width={width}\n        height={height}\n        isVisible\n        className={styles.spoiler}\n      />\n      {Boolean(duration) && <div className={styles.duration}>{formatMediaDuration(duration)}</div>}\n      <div className={styles.buy}>\n        <Icon name=\"lock\" className={styles.lock} />\n        {lang('Checkout.PayPrice', formatCurrencyAsString(amount, currency))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(InvoiceMediaPreview);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, ApiPeer } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  buildStaticMapHash,\n  getMessageLocation,\n  isGeoLiveExpired,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCountdownShort, formatLocationLastUpdate } from '../../../util/dates/dateFormat';\nimport {\n  getMetersPerPixel, getVenueColor, getVenueIconUrl,\n} from '../../../util/map';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport Avatar from '../../common/Avatar';\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport './Location.scss';\n\nimport mapPin from '../../../assets/map-pin.svg';\n\nconst TIMER_RADIUS = 12;\nconst TIMER_CIRCUMFERENCE = TIMER_RADIUS * 2 * Math.PI;\nconst MOVE_THRESHOLD = 0.0001; // ~11m\nconst DEFAULT_MAP_CONFIG = {\n  width: 400,\n  height: 300,\n  zoom: 16,\n};\n\ntype OwnProps = {\n  message: ApiMessage;\n  peer?: ApiPeer;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  theme: ThemeKey;\n};\n\nconst Location: FC<OwnProps> = ({\n  message,\n  peer,\n}) => {\n  const { openMapModal } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const countdownRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const forceUpdate = useForceUpdate();\n\n  const location = getMessageLocation(message)!;\n  const { mediaType, geo } = location;\n\n  const serverTime = getServerTime();\n  const isExpired = isGeoLiveExpired(message);\n  const secondsBeforeEnd = (mediaType === 'geoLive' && !isExpired) ? message.date + location.period - serverTime\n    : undefined;\n\n  const [point, setPoint] = useState(geo);\n\n  const shouldRenderText = mediaType === 'venue' || (mediaType === 'geoLive' && !isExpired);\n  const { width, height, zoom } = DEFAULT_MAP_CONFIG;\n  const dpr = useDevicePixelRatio();\n\n  const mediaHash = buildStaticMapHash(point, width, height, zoom, dpr);\n  const mediaBlobUrl = useMedia(mediaHash);\n  const prevMediaBlobUrl = usePreviousDeprecated(mediaBlobUrl, true);\n  const mapBlobUrl = mediaBlobUrl || prevMediaBlobUrl;\n\n  const accuracyRadiusPx = useMemo(() => {\n    if (mediaType !== 'geoLive' || !point.accuracyRadius) {\n      return 0;\n    }\n\n    const { lat, accuracyRadius } = point;\n    return accuracyRadius / getMetersPerPixel(lat, zoom);\n  }, [mediaType, point, zoom]);\n\n  const handleClick = () => {\n    openMapModal({ geoPoint: point, zoom });\n  };\n\n  const updateCountdown = useLastCallback((countdownEl: HTMLDivElement) => {\n    if (mediaType !== 'geoLive') return;\n    const svgEl = countdownEl.lastElementChild!;\n    const timerEl = countdownEl.firstElementChild!;\n\n    const timeLeft = message.date + location.period - getServerTime();\n    const strokeDashOffset = (1 - timeLeft / location.period) * TIMER_CIRCUMFERENCE;\n    const text = formatCountdownShort(lang, timeLeft * 1000);\n    timerEl.textContent = text;\n    svgEl.firstElementChild!.setAttribute('stroke-dashoffset', `-${strokeDashOffset}`);\n  });\n\n  useLayoutEffect(() => {\n    if (countdownRef.current) {\n      updateCountdown(countdownRef.current);\n    }\n  }, [updateCountdown]);\n\n  useEffect(() => {\n    // Prevent map refetching for slight location changes\n    if (Math.abs(geo.lat - point.lat) < MOVE_THRESHOLD && Math.abs(geo.long - point.long) < MOVE_THRESHOLD) {\n      if (point.accuracyRadius !== geo.accuracyRadius) {\n        setPoint({\n          ...point,\n          accuracyRadius: geo.accuracyRadius,\n        });\n      }\n      return;\n    }\n    setPoint(geo);\n  }, [geo, point]);\n\n  useTimeout(() => {\n    forceUpdate();\n  }, !isExpired ? (secondsBeforeEnd || 0) * 1000 : undefined);\n\n  useInterval(() => {\n    requestMutation(() => {\n      const countdownEl = countdownRef.current;\n      if (countdownEl) {\n        updateCountdown(countdownEl);\n      }\n    });\n  }, secondsBeforeEnd ? 1000 : undefined);\n\n  function renderInfo() {\n    if (!shouldRenderText) return undefined;\n    if (mediaType === 'venue') {\n      return (\n        <div className=\"location-info\">\n          <div className=\"location-info-title\">\n            {location.title}\n          </div>\n          <div className=\"location-info-subtitle\">\n            {location.address}\n          </div>\n        </div>\n      );\n    }\n    if (mediaType === 'geoLive') {\n      return (\n        <div className=\"location-info\">\n          <div className=\"location-info-title\">{lang('AttachLiveLocation')}</div>\n          <div className=\"location-info-subtitle\">\n            {formatLocationLastUpdate(lang, serverTime, message.editDate)}\n          </div>\n          {!isExpired && (\n            <div className=\"geo-countdown\" ref={countdownRef}>\n              <span className=\"geo-countdown-text\" />\n              <svg width=\"32px\" height=\"32px\">\n                <circle\n                  cx=\"16\"\n                  cy=\"16\"\n                  r={TIMER_RADIUS}\n                  className=\"geo-countdown-progress\"\n                  transform=\"rotate(-90, 16, 16)\"\n                  stroke-dasharray={TIMER_CIRCUMFERENCE}\n                  stroke-dashoffset=\"0\"\n                />\n              </svg>\n            </div>\n          )}\n        </div>\n      );\n    }\n    return undefined;\n  }\n\n  function renderMap() {\n    if (!mapBlobUrl) return <Skeleton width={width} height={height} />;\n    return (\n      <img\n        className=\"full-media map\"\n        src={mapBlobUrl}\n        alt=\"Location on a map\"\n        draggable={false}\n        style={`width: ${DEFAULT_MAP_CONFIG.width}px; height: ${DEFAULT_MAP_CONFIG.height}px;`}\n      />\n    );\n  }\n\n  function renderPin() {\n    const pinClassName = buildClassName(\n      'pin',\n      mediaType,\n      isExpired && 'expired',\n    );\n    if (mediaType === 'geoLive') {\n      return (\n        <div className={pinClassName}>\n          <PinSvg />\n          <Avatar peer={peer} className=\"location-avatar\" />\n          {location.heading !== undefined && (\n            <div className=\"direction\" style={`--direction: ${location.heading}deg`} />\n          )}\n        </div>\n      );\n    }\n\n    if (mediaType === 'venue') {\n      const color = getVenueColor(location.venueType);\n      const iconSrc = getVenueIconUrl(location.venueType);\n      if (iconSrc) {\n        return (\n          <div className={pinClassName} style={`--pin-color: ${color}`}>\n            <PinSvg />\n            <img src={iconSrc} draggable={false} className=\"venue-icon\" alt=\"\" />\n          </div>\n        );\n      }\n    }\n\n    return (\n      <img className={pinClassName} draggable={false} src={mapPin} alt=\"\" />\n    );\n  }\n\n  function renderOverlay() {\n    if (!mapBlobUrl) return undefined;\n\n    return (\n      <>\n        {Boolean(accuracyRadiusPx) && !isExpired && (\n          <div\n            className=\"location-accuracy\"\n            style={`width: ${accuracyRadiusPx * 2}px; height: ${accuracyRadiusPx * 2}px`}\n          />\n        )}\n        {renderPin()}\n      </>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className=\"Location media-inner interactive\"\n      onClick={handleClick}\n    >\n      <div className=\"map-wrapper\">\n        {renderMap()}\n        {renderOverlay()}\n      </div>\n      {renderInfo()}\n    </div>\n  );\n};\n\nfunction PinSvg() {\n  return (\n    <svg className=\"round-pin\" style=\"enable-background:new 0 0 64 64\" viewBox=\"0 0 64 64\">\n      <circle cx=\"32\" cy=\"32\" r=\"24.5\" />\n      <path d=\"M32 8c13.23 0 24 10.77 24 24S45.23 56 32 56 8 45.23 8 32 18.77 8 32 8m0-1C18.19 7 7 18.19 7 32s11.19 25 25 25 25-11.19 25-25S45.81 7 32 7z\" />\n      <path d=\"m29.38 57.67-1.98-1.59 3.02-1.66L32 51.54l1.58 2.88 3.02 1.66-1.91 1.53L32 60.73z\" />\n      <path d=\"m32 52.58 1.07 1.95.14.26.26.14 2.24 1.22-1.33 1.06-.07.06-.06.07L32 59.96l-2.24-2.61-.06-.07-.07-.06-1.33-1.06 2.24-1.22.26-.14.14-.26L32 52.58m0-2.08-1.94 3.56L26.5 56l2.5 2 3 3.5 3-3.5 2.5-2-3.56-1.94L32 50.5z\" />\n    </svg>\n  );\n}\n\nexport default memo(Location);\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiMessage, ApiMessageOutgoingStatus, ApiThreadInfo,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString, formatPastTimeShort, formatTime } from '../../../util/dates/dateFormat';\nimport { formatStarsAsIcon } from '../../../util/localization/format';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Icon from '../../common/icons/Icon';\nimport MessageOutgoingStatus from '../../common/MessageOutgoingStatus';\n\nimport './MessageMeta.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  withReactionOffset?: boolean;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  signature?: string;\n  availableReactions?: ApiAvailableReaction[];\n  noReplies?: boolean;\n  repliesThreadInfo?: ApiThreadInfo;\n  isTranslated?: boolean;\n  isPinned?: boolean;\n  withFullDate?: boolean;\n  effectEmoji?: string;\n  onClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onTranslationClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onEffectClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  renderQuickReactionButton?: () => TeactNode | undefined;\n  onOpenThread: NoneToVoidFunction;\n  paidMessageStars?: number;\n};\n\nconst MessageMeta: FC<OwnProps> = ({\n  message,\n  outgoingStatus,\n  signature,\n  withReactionOffset,\n  repliesThreadInfo,\n  renderQuickReactionButton,\n  noReplies,\n  isTranslated,\n  isPinned,\n  withFullDate,\n  effectEmoji,\n  onClick,\n  onTranslationClick,\n  onEffectClick,\n  onOpenThread,\n  paidMessageStars,\n}) => {\n  const { showNotification } = getActions();\n\n  const [isActivated, markActivated] = useFlag();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  function handleImportedClick(e: React.MouseEvent) {\n    e.stopPropagation();\n\n    showNotification({\n      message: {\n        key: 'ImportedInfo',\n      },\n    });\n  }\n\n  function handleOpenThread(e: React.MouseEvent) {\n    e.stopPropagation();\n    onOpenThread();\n  }\n\n  const dateTitle = useMemo(() => {\n    if (!isActivated) return undefined;\n    const createDateTime = formatDateTimeToString(message.date * 1000, oldLang.code, undefined, oldLang.timeFormat);\n    const editDateTime = message.isEdited\n      && formatDateTimeToString(message.editDate! * 1000, oldLang.code, undefined, oldLang.timeFormat);\n    const forwardedDateTime = message.forwardInfo\n      && formatDateTimeToString(\n        (message.forwardInfo.savedDate || message.forwardInfo.date) * 1000,\n        oldLang.code,\n        undefined,\n        oldLang.timeFormat,\n      );\n\n    let text = createDateTime;\n    if (editDateTime) {\n      text += '\\n';\n      text += lang('MessageTooltipEditedDate', { date: editDateTime });\n    }\n    if (forwardedDateTime) {\n      text += '\\n';\n      text += lang('MessageTooltipForwardedDate', { date: forwardedDateTime });\n    }\n\n    return text;\n    // We need to listen to timeformat change\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [isActivated, oldLang, message, oldLang.timeFormat]);\n\n  const viewsTitle = useMemo(() => {\n    if (!message.viewsCount) return undefined;\n    let text = lang('MessageTooltipViews', {\n      count: lang.number(message.viewsCount),\n    }, { pluralValue: message.viewsCount });\n    if (message.forwardsCount) {\n      text += '\\n';\n      text += lang('MessageTooltipForwards', {\n        count: lang.number(message.forwardsCount),\n      }, { pluralValue: message.forwardsCount });\n    }\n\n    return text;\n  }, [lang, message.forwardsCount, message.viewsCount]);\n\n  const repliesTitle = useMemo(() => {\n    const count = repliesThreadInfo?.messagesCount;\n    if (!count) return undefined;\n    return lang('MessageTooltipReplies', { count }, { pluralValue: count });\n  }, [lang, repliesThreadInfo]);\n\n  const date = useMemo(() => {\n    const time = formatTime(oldLang, message.date * 1000);\n    if (!withFullDate) {\n      return time;\n    }\n\n    return formatPastTimeShort(oldLang, (message.forwardInfo?.date || message.date) * 1000, true);\n  }, [oldLang, message.date, message.forwardInfo?.date, withFullDate]);\n\n  const fullClassName = buildClassName(\n    'MessageMeta',\n    withReactionOffset && 'reactions-offset',\n    message.forwardInfo?.isImported && 'is-imported',\n  );\n\n  return (\n    <span\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n      onClick={onClick}\n      data-ignore-on-paste\n    >\n      {effectEmoji && (\n        <span className=\"message-effect-icon\" onClick={onEffectClick}>\n          {renderText(effectEmoji)}\n        </span>\n      )}\n      {isTranslated && (\n        <Icon name=\"language\" className=\"message-translated\" onClick={onTranslationClick} />\n      )}\n      {Boolean(message.viewsCount) && (\n        <>\n          <span className=\"message-views\" title={viewsTitle}>\n            {formatIntegerCompact(lang, message.viewsCount!)}\n          </span>\n          <Icon name=\"channelviews\" />\n        </>\n      )}\n      {!noReplies && Boolean(repliesThreadInfo?.messagesCount) && (\n        <span onClick={handleOpenThread} className=\"message-replies-wrapper\" title={repliesTitle}>\n          <span className=\"message-replies\">\n            <AnimatedCounter text={formatIntegerCompact(lang, repliesThreadInfo!.messagesCount!)} />\n          </span>\n          <Icon name=\"reply-filled\" />\n        </span>\n      )}\n      {isPinned && (\n        <Icon name=\"pinned-message\" className=\"message-pinned\" />\n      )}\n      {signature && (\n        <span className=\"message-signature\">{renderText(signature)}</span>\n      )}\n      {paidMessageStars && (\n        <span className=\"message-price\">{\n          formatStarsAsIcon(lang, paidMessageStars, {\n            asFont: true,\n            className: 'message-price-star-icon',\n            containerClassName: 'message-price-stars-container',\n          })\n        }\n        </span>\n      )}\n      <span className=\"message-time\" title={dateTitle} onMouseEnter={markActivated}>\n        {message.forwardInfo?.isImported && (\n          <>\n            <span className=\"message-imported\" onClick={handleImportedClick}>\n              {formatDateTimeToString(message.forwardInfo.date * 1000, lang.code, true)}\n            </span>\n            <span className=\"message-imported\" onClick={handleImportedClick}>{lang('MessageMetaImported')}</span>\n          </>\n        )}\n        {message.isEdited && `${lang('MessageMetaEdited')} `}\n        {message.isVideoProcessingPending && `${lang('MessageMetaApproximate')} `}\n        {date}\n      </span>\n      {outgoingStatus && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      {renderQuickReactionButton && renderQuickReactionButton()}\n    </span>\n  );\n};\n\nexport default memo(MessageMeta);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wqsZyy8u\",\"button\":\"NGmo4ADz\",\"info\":\"iFn6m6hd\",\"reason\":\"l8QfocIQ\",\"arrow\":\"ONmpzmUS\",\"incoming\":\"BfgDXljM\",\"missed\":\"Alra_BWu\",\"canceled\":\"J7xsuCAm\",\"meta\":\"rF5tkx92\",\"duration\":\"kKPKwFzu\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ApiMessageActionPhoneCall } from '../../../api/types/messageActions';\n\nimport { ARE_CALLS_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatTime, formatTimeDuration } from '../../../util/dates/dateFormat';\nimport { getCallMessageKey } from './helpers/messageActions';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport styles from './MessagePhoneCall.module.scss';\n\ntype OwnProps = {\n  phoneCall: ApiMessageActionPhoneCall;\n  message: ApiMessage;\n  chatId: string;\n};\n\nconst MessagePhoneCall: FC<OwnProps> = ({\n  phoneCall,\n  message,\n  chatId,\n}) => {\n  const { requestMasterAndRequestCall } = getActions();\n\n  const lang = useOldLang();\n  const {\n    isVideo, reason, duration,\n  } = phoneCall;\n  const isOutgoing = message.isOutgoing;\n  const isMissed = reason === 'missed';\n  const isCancelled = reason === 'busy' || duration === undefined;\n\n  const handleCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ isVideo, userId: chatId });\n  });\n\n  const formattedDuration = useMemo(() => {\n    return phoneCall.duration ? formatTimeDuration(lang, phoneCall.duration) : undefined;\n  }, [lang, phoneCall.duration]);\n\n  const timeFormatted = formatTime(lang, message.date * 1000);\n  return (\n    <div className={styles.root}>\n      <Button\n        size=\"smaller\"\n        color=\"translucent\"\n        round\n        ripple\n        onClick={handleCall}\n        className={styles.button}\n        disabled={!ARE_CALLS_SUPPORTED}\n        ariaLabel={lang(isOutgoing ? 'CallAgain' : 'CallBack')}\n      >\n        <Icon name={isVideo ? 'video-outlined' : 'phone'} />\n      </Button>\n      <div className={styles.info}>\n        <div className={styles.reason}>{lang(getCallMessageKey(phoneCall, message.isOutgoing))}</div>\n        <div className={styles.meta}>\n          <Icon\n            name=\"arrow-right\"\n            className={buildClassName(\n              styles.arrow,\n              isMissed && styles.missed,\n              isCancelled && styles.canceled,\n              !isOutgoing && styles.incoming,\n            )}\n          />\n          <span className={styles.duration}>\n            {formattedDuration ? lang('CallMessageWithDuration', [timeFormatted, formattedDuration]) : timeFormatted}\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(MessagePhoneCall);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mVaSjZRJ\",\"buyButton\":\"GnKGu6D9\",\"boughtStatus\":\"IGXW5hWr\",\"star\":\"ywiOugiH\",\"buttonText\":\"gLaaVQXr\"};","import React, { memo, type TeactNode, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPaidMedia } from '../../../api/types';\n\nimport { STARS_ICON_PLACEHOLDER } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatStarsAsIcon } from '../../../util/localization/format';\nimport { replaceWithTeact } from '../../../util/replaceWithTeact';\nimport stopEvent from '../../../util/stopEvent';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport Button from '../../ui/Button';\n\nimport styles from './PaidMediaOverlay.module.scss';\n\ntype OwnProps = {\n  paidMedia: ApiPaidMedia;\n  chatId: string;\n  messageId: number;\n  isOutgoing?: boolean;\n  children?: TeactNode;\n};\n\nconst PaidMediaOverlay = ({\n  paidMedia,\n  chatId,\n  messageId,\n  isOutgoing,\n  children,\n}: OwnProps) => {\n  const { openInvoice } = getActions();\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const isClickable = !paidMedia.isBought;\n\n  const buttonText = useMemo(() => {\n    const value = oldLang('UnlockPaidContent', paidMedia.starsAmount);\n\n    return replaceWithTeact(\n      value, STARS_ICON_PLACEHOLDER, <StarIcon className={styles.star} type=\"gold\" size=\"adaptive\" />,\n    );\n  }, [oldLang, paidMedia]);\n\n  const handleClick = useLastCallback((e: React.MouseEvent) => {\n    openInvoice({\n      type: 'message',\n      chatId,\n      messageId,\n    });\n    stopEvent(e);\n  });\n\n  return (\n    <div\n      className={styles.root}\n      onClick={isClickable ? handleClick : undefined}\n    >\n      {children}\n      {isClickable && (\n        <Button\n          className={styles.buyButton}\n          color=\"dark\"\n          size=\"tiny\"\n          fluid\n          pill\n        >\n          <span className={styles.buttonText}>{buttonText}</span>\n        </Button>\n      )}\n      {paidMedia.isBought && (\n        <div className={buildClassName('message-paid-media-status', styles.boughtStatus)}>\n          {isOutgoing\n            ? formatStarsAsIcon(lang, paidMedia.starsAmount)\n            : oldLang('Chat.PaidMedia.Purchased')}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(PaidMediaOverlay);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useEffect,\n  useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiPollAnswer, ApiPollResult } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLang from '../../../hooks/useLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport './PollOption.scss';\n\ntype OwnProps = {\n  answer: ApiPollAnswer;\n  voteResults?: ApiPollResult[];\n  totalVoters?: number;\n  maxVotersCount?: number;\n  correctResults: string[];\n  shouldAnimate: boolean;\n};\n\nconst PollOption: FC<OwnProps> = ({\n  answer,\n  voteResults,\n  totalVoters,\n  maxVotersCount,\n  correctResults,\n  shouldAnimate,\n}) => {\n  const lang = useLang();\n  const result = voteResults && voteResults.find((r) => r.option === answer.option);\n  const correctAnswer = correctResults.length === 0 || correctResults.indexOf(answer.option) !== -1;\n  const showIcon = (correctResults.length > 0 && correctAnswer) || (result?.isChosen);\n  const answerPercent = result ? getPercentage(result.votersCount, totalVoters || 0) : 0;\n  const [finalPercent, setFinalPercent] = useState(shouldAnimate ? 0 : answerPercent);\n  const lineWidth = result ? getPercentage(result.votersCount, maxVotersCount || 0) : 0;\n  const isAnimationDoesNotStart = finalPercent !== answerPercent;\n\n  useEffect(() => {\n    if (shouldAnimate) {\n      setFinalPercent(answerPercent);\n    }\n  }, [shouldAnimate, answerPercent]);\n\n  if (!voteResults || !result) {\n    return undefined;\n  }\n\n  const lineStyle = `width: ${lineWidth}%; transform:scaleX(${isAnimationDoesNotStart ? 0 : 1})`;\n\n  return (\n    <div className=\"PollOption\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <div className={`poll-option-share ${answerPercent === '100' ? 'limit-width' : ''}`}>\n        {answerPercent}%\n        {showIcon && (\n          <span className={buildClassName(\n            'poll-option-chosen',\n            !correctAnswer && 'wrong',\n            shouldAnimate && 'animate',\n          )}\n          >\n            <Icon name={correctAnswer ? 'check' : 'close'} className=\"poll-option-icon\" />\n          </span>\n        )}\n      </div>\n      <div className=\"poll-option-right\">\n        <div className=\"poll-option-text\" dir=\"auto\">\n          {renderTextWithEntities({\n            text: answer.text.text,\n            entities: answer.text.entities,\n          })}\n        </div>\n        <div className={buildClassName('poll-option-answer', showIcon && !correctAnswer && 'wrong')}>\n          {shouldAnimate && (\n            <svg\n              className=\"poll-line\"\n              style={!isAnimationDoesNotStart ? 'stroke-dasharray: 100% 200%; stroke-dashoffset: -44' : ''}\n            >\n              <path d=\"M4.47 5.33v13.6a9 9 0 009 9h13\" />\n            </svg>\n          )}\n          <div\n            className=\"poll-option-line\"\n            style={lineStyle}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction getPercentage(value: number, total: number) {\n  return total > 0 ? ((value / total) * 100).toFixed() : 0;\n}\n\nexport default PollOption;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type {\n  ApiMessage, ApiPeer, ApiPoll, ApiPollAnswer,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\n\nimport { selectPeer } from '../../../global/selectors';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport { getServerTime } from '../../../util/serverTime';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport CheckboxGroup from '../../ui/CheckboxGroup';\nimport RadioGroup from '../../ui/RadioGroup';\nimport PollOption from './PollOption';\n\nimport './Poll.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  poll: ApiPoll;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onSendVote: (options: string[]) => void;\n};\n\nconst SOLUTION_CONTAINER_ID = '#middle-column-portals';\nconst SOLUTION_DURATION = 5000;\nconst TIMER_RADIUS = 6;\nconst TIMER_CIRCUMFERENCE = TIMER_RADIUS * 2 * Math.PI;\nconst TIMER_UPDATE_INTERVAL = 1000;\nconst NBSP = '\\u00A0';\n\nconst Poll: FC<OwnProps> = ({\n  message,\n  poll,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onSendVote,\n}) => {\n  const {\n    loadMessage, openPollResults, requestConfetti, showNotification,\n  } = getActions();\n\n  const { id: messageId, chatId } = message;\n  const { summary, results } = poll;\n  const [isSubmitting, setIsSubmitting] = useState<boolean>(false);\n  const [chosenOptions, setChosenOptions] = useState<string[]>([]);\n  const [wasSubmitted, setWasSubmitted] = useState<boolean>(false);\n  const [closePeriod, setClosePeriod] = useState<number>(\n    !summary.closed && summary.closeDate && summary.closeDate > 0\n      ? Math.min(summary.closeDate - getServerTime(), summary.closePeriod!)\n      : 0,\n  );\n  // eslint-disable-next-line no-null/no-null\n  const countdownRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const timerCircleRef = useRef<SVGCircleElement>(null);\n  const { results: voteResults, totalVoters } = results;\n  const hasVoted = voteResults && voteResults.some((r) => r.isChosen);\n  const canVote = !summary.closed && !hasVoted;\n  const canViewResult = !canVote && summary.isPublic && Number(results.totalVoters) > 0;\n  const isMultiple = canVote && summary.multipleChoice;\n  const recentVoterIds = results.recentVoterIds;\n  const maxVotersCount = voteResults ? Math.max(...voteResults.map((r) => r.votersCount)) : totalVoters;\n  const correctResults = useMemo(() => {\n    return voteResults?.filter((r) => r.isCorrect).map((r) => r.option) || [];\n  }, [voteResults]);\n  const answers = useMemo(() => summary.answers.map((a) => ({\n    label: renderTextWithEntities({\n      text: a.text.text,\n      entities: a.text.entities,\n      observeIntersectionForLoading,\n      observeIntersectionForPlaying,\n    }),\n    value: a.option,\n    hidden: Boolean(summary.quiz && summary.closePeriod && closePeriod <= 0),\n  })), [\n    closePeriod, observeIntersectionForLoading, observeIntersectionForPlaying,\n    summary.answers, summary.closePeriod, summary.quiz,\n  ]);\n\n  useEffect(() => {\n    const chosen = poll.results.results?.find((result) => result.isChosen);\n    if (isSubmitting && chosen) {\n      if (chosen.isCorrect) {\n        requestConfetti({});\n      }\n      setIsSubmitting(false);\n    }\n  }, [isSubmitting, poll.results.results, requestConfetti]);\n\n  useLayoutEffect(() => {\n    if (closePeriod > 0) {\n      setTimeout(() => setClosePeriod(closePeriod - 1), TIMER_UPDATE_INTERVAL);\n    }\n    if (!timerCircleRef.current) return;\n\n    if (closePeriod <= 5) {\n      countdownRef.current!.classList.add('hurry-up');\n    }\n\n    const strokeDashOffset = ((summary.closePeriod! - closePeriod) / summary.closePeriod!) * TIMER_CIRCUMFERENCE;\n    timerCircleRef.current.setAttribute('stroke-dashoffset', `-${strokeDashOffset}`);\n  }, [closePeriod, summary.closePeriod]);\n\n  useEffect(() => {\n    if (summary.quiz && (closePeriod <= 0 || (hasVoted && !summary.closed))) {\n      loadMessage({ chatId, messageId });\n    }\n  }, [chatId, closePeriod, hasVoted, loadMessage, messageId, summary.closed, summary.quiz]);\n\n  // If the client time is not synchronized, the poll must be updated after the closePeriod time has expired.\n  useEffect(() => {\n    let timer: number | undefined;\n\n    if (summary.quiz && !summary.closed && summary.closePeriod && summary.closePeriod > 0) {\n      timer = window.setTimeout(() => {\n        loadMessage({ chatId, messageId });\n      }, summary.closePeriod * 1000);\n    }\n\n    return () => {\n      if (timer) {\n        window.clearTimeout(timer);\n      }\n    };\n  }, [canVote, chatId, loadMessage, messageId, summary.closePeriod, summary.closed, summary.quiz]);\n\n  const recentVoters = useMemo(() => {\n    // No need for expensive global updates on chats or users, so we avoid them\n    const global = getGlobal();\n    return recentVoterIds ? recentVoterIds.reduce((result: ApiPeer[], id) => {\n      const peer = selectPeer(global, id);\n      if (peer) {\n        result.push(peer);\n      }\n\n      return result;\n    }, []) : [];\n  }, [recentVoterIds]);\n\n  const handleRadioChange = useLastCallback((option: string) => {\n    setChosenOptions([option]);\n    setIsSubmitting(true);\n    setWasSubmitted(true);\n    onSendVote([option]);\n  });\n\n  const handleCheckboxChange = useLastCallback((options: string[]) => {\n    setChosenOptions(options);\n  });\n\n  const handleVoteClick = useLastCallback(() => {\n    setIsSubmitting(true);\n    setWasSubmitted(true);\n    onSendVote(chosenOptions);\n  });\n\n  const handleViewResultsClick = useLastCallback(() => {\n    openPollResults({ chatId, messageId });\n  });\n\n  const showSolution = useLastCallback(() => {\n    showNotification({\n      localId: getMessageKey(message),\n      message: renderTextWithEntities({ text: poll.results.solution!, entities: poll.results.solutionEntities }),\n      duration: SOLUTION_DURATION,\n      containerSelector: SOLUTION_CONTAINER_ID,\n    });\n  });\n\n  // Show the solution to quiz if the answer was incorrect\n  useEffect(() => {\n    if (wasSubmitted && hasVoted && summary.quiz && results.results && poll.results.solution) {\n      const correctResult = results.results.find((r) => r.isChosen && r.isCorrect);\n      if (!correctResult) {\n        showSolution();\n      }\n    }\n  }, [hasVoted, wasSubmitted, results.results, summary.quiz, poll.results.solution]);\n\n  const lang = useOldLang();\n\n  function renderResultOption(answer: ApiPollAnswer) {\n    return (\n      <PollOption\n        key={answer.option}\n        shouldAnimate={wasSubmitted || !canVote}\n        answer={answer}\n        voteResults={voteResults}\n        totalVoters={totalVoters}\n        maxVotersCount={maxVotersCount}\n        correctResults={correctResults}\n      />\n    );\n  }\n\n  function renderRecentVoters() {\n    return (\n      recentVoters.length > 0 && (\n        <div className=\"poll-recent-voters\">\n          <AvatarList\n            size=\"micro\"\n            peers={recentVoters}\n          />\n        </div>\n      )\n    );\n  }\n\n  return (\n    <div className=\"Poll\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n      <div className=\"poll-question\">\n        {renderTextWithEntities({\n          text: summary.question.text,\n          entities: summary.question.entities,\n          observeIntersectionForLoading,\n          observeIntersectionForPlaying,\n        })}\n      </div>\n      <div className=\"poll-type\">\n        {lang(getPollTypeString(summary))}\n        {renderRecentVoters()}\n        {closePeriod > 0 && canVote && (\n          <div ref={countdownRef} className=\"poll-countdown\">\n            <span>{formatMediaDuration(closePeriod)}</span>\n            <svg width=\"16px\" height=\"16px\">\n              <circle\n                ref={timerCircleRef}\n                cx=\"8\"\n                cy=\"8\"\n                r={TIMER_RADIUS}\n                className=\"poll-countdown-progress\"\n                transform=\"rotate(-90, 8, 8)\"\n                stroke-dasharray={TIMER_CIRCUMFERENCE}\n                stroke-dashoffset=\"0\"\n              />\n            </svg>\n          </div>\n        )}\n        {summary.quiz && poll.results.solution && !canVote && (\n          <Button\n            round\n            size=\"tiny\"\n            color=\"translucent\"\n            className=\"poll-quiz-help\"\n            onClick={showSolution}\n            ariaLabel=\"Show Solution\"\n          >\n            <Icon name=\"lamp\" />\n          </Button>\n        )}\n      </div>\n      {canVote && (\n        <div\n          className=\"poll-answers\"\n          onClick={stopPropagation}\n        >\n          {isMultiple\n            ? (\n              <CheckboxGroup\n                options={answers}\n                onChange={handleCheckboxChange}\n                disabled={message.isScheduled || isSubmitting}\n                loadingOptions={isSubmitting ? chosenOptions : undefined}\n                isRound\n              />\n            )\n            : (\n              <RadioGroup\n                name={`poll-${messageId}`}\n                options={answers}\n                onChange={handleRadioChange}\n                disabled={message.isScheduled || isSubmitting}\n                loadingOption={isSubmitting ? chosenOptions[0] : undefined}\n              />\n            )}\n        </div>\n      )}\n      {!canVote && (\n        <div className=\"poll-results\">\n          {summary.answers.map(renderResultOption)}\n        </div>\n      )}\n      {!canViewResult && !isMultiple && (\n        <div className=\"poll-voters-count\">{getReadableVotersCount(lang, summary.quiz, results.totalVoters)}</div>\n      )}\n      {isMultiple && (\n        <Button\n          isText\n          disabled={chosenOptions.length === 0}\n          size=\"tiny\"\n          onClick={handleVoteClick}\n        >\n          {lang('PollSubmitVotes')}\n        </Button>\n      )}\n      {canViewResult && (\n        <Button\n          isText\n          size=\"tiny\"\n          onClick={handleViewResultsClick}\n        >\n          {lang('PollViewResults')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nfunction getPollTypeString(summary: ApiPoll['summary']) {\n  // When we just created the poll, some properties don't exist.\n  if (typeof summary.isPublic === 'undefined') {\n    return NBSP;\n  }\n\n  if (summary.closed) {\n    return 'FinalResults';\n  }\n\n  if (summary.quiz) {\n    return summary.isPublic ? 'QuizPoll' : 'AnonymousQuizPoll';\n  }\n\n  return summary.isPublic ? 'PublicPoll' : 'AnonymousPoll';\n}\n\nfunction getReadableVotersCount(lang: OldLangFn, isQuiz: true | undefined, count?: number) {\n  if (!count) {\n    return lang(isQuiz ? 'Chat.Quiz.TotalVotesEmpty' : 'Chat.Poll.TotalVotesResultEmpty');\n  }\n\n  return lang(isQuiz ? 'Answer' : 'Vote', count, 'i');\n}\n\nfunction stopPropagation(e: React.MouseEvent<HTMLDivElement>) {\n  e.stopPropagation();\n}\n\nexport default memo(Poll);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"FPceNkgD\",\"inactive\":\"hruUWBuj\",\"mirrored\":\"GydRBA08\",\"effect\":\"WMMaWlOL\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport { IS_WEBM_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { getStickerDimensions } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useOverlayPosition from './hooks/useOverlayPosition';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport StickerView from '../../common/StickerView';\nimport Portal from '../../ui/Portal';\n\nimport styles from './Sticker.module.scss';\n\n// https://github.com/telegramdesktop/tdesktop/blob/master/Telegram/SourceFiles/history/view/media/history_view_sticker.cpp#L42\nconst EFFECT_SIZE_MULTIPLIER = 1 + 0.245 * 2;\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersection: ObserveFn;\n  observeIntersectionForPlaying: ObserveFn;\n  shouldLoop?: boolean;\n  shouldPlayEffect?: boolean;\n  withEffect?: boolean;\n  onStopEffect?: VoidFunction;\n};\n\nconst Sticker: FC<OwnProps> = ({\n  message, observeIntersection, observeIntersectionForPlaying, shouldLoop,\n  shouldPlayEffect, withEffect, onStopEffect,\n}) => {\n  const { showNotification, openStickerSet } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const effectRef = useRef<HTMLDivElement>(null);\n\n  const sticker = message.content.sticker!;\n  const { stickerSetInfo, isVideo, hasEffect } = sticker;\n  const isMirrored = !message.isOutgoing;\n\n  const mediaHash = sticker.isPreloadedGlobally ? undefined : (\n    getStickerMediaHash(sticker, isVideo && !IS_WEBM_SUPPORTED ? 'pictogram' : 'inline')!\n  );\n\n  const canLoad = useIsIntersecting(ref, observeIntersection);\n  const canPlay = useIsIntersecting(ref, observeIntersectionForPlaying);\n  const mediaHashEffect = `sticker${sticker.id}?size=f`;\n  const effectBlobUrl = useMedia(\n    mediaHashEffect,\n    !canLoad || !hasEffect || !withEffect,\n    ApiMediaFormat.BlobUrl,\n  );\n  const [isPlayingEffect, startPlayingEffect, stopPlayingEffect] = useFlag();\n\n  const handleEffectEnded = useLastCallback(() => {\n    stopPlayingEffect();\n    onStopEffect?.();\n  });\n\n  useEffect(() => {\n    if (hasEffect && withEffect && canPlay && shouldPlayEffect) {\n      startPlayingEffect();\n    }\n  }, [hasEffect, canPlay, shouldPlayEffect, startPlayingEffect, withEffect]);\n\n  const shouldRenderEffect = hasEffect && withEffect && effectBlobUrl && isPlayingEffect;\n  useOverlayPosition({\n    anchorRef: ref,\n    overlayRef: effectRef,\n    isMirrored,\n    isDisabled: !shouldRenderEffect,\n  });\n\n  const openModal = useLastCallback(() => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (hasEffect) {\n      if (isPlayingEffect || !withEffect) {\n        showNotification({\n          message: lang('PremiumStickerTooltip'),\n          action: {\n            action: 'openStickerSet',\n            payload: {\n              stickerSetInfo: sticker.stickerSetInfo,\n            },\n          },\n          actionText: lang('ViewAction'),\n        });\n        return;\n      } else if (withEffect) {\n        startPlayingEffect();\n        return;\n      }\n    }\n    openModal();\n  });\n\n  const isMemojiSticker = 'isMissing' in stickerSetInfo;\n  const { width, height } = getStickerDimensions(sticker, isMobile);\n  const className = buildClassName(\n    'media-inner',\n    styles.root,\n    isMemojiSticker && styles.inactive,\n    hasEffect && isMirrored && styles.mirrored,\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={className}\n      style={`width: ${width}px; height: ${height}px;`}\n      onClick={!isMemojiSticker ? handleClick : undefined}\n    >\n      <StickerView\n        containerRef={ref}\n        sticker={sticker}\n        fullMediaHash={mediaHash}\n        fullMediaClassName=\"full-media\"\n        size={width}\n        shouldLoop={shouldLoop}\n        noLoad={!canLoad}\n        noPlay={!canPlay}\n        withSharedAnimation\n      />\n      {shouldRenderEffect && (\n        <Portal>\n          <AnimatedSticker\n            ref={effectRef}\n            key={mediaHashEffect}\n            className={buildClassName(styles.effect, isMirrored && styles.mirrored)}\n            tgsUrl={effectBlobUrl}\n            size={width * EFFECT_SIZE_MULTIPLIER}\n            play\n            isLowPriority\n            noLoop\n            onEnded={handleEffectEnded}\n          />\n        </Portal>\n      )}\n    </div>\n  );\n};\n\nexport default Sticker;\n","import React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type {\n  ApiMessage, ApiTypeStory,\n} from '../../../api/types';\n\nimport { selectPeerStory } from '../../../global/selectors';\n\nimport BaseStory from './BaseStory';\n\ninterface OwnProps {\n  message: ApiMessage;\n  isProtected?: boolean;\n}\n\ninterface StateProps {\n  story?: ApiTypeStory;\n  isConnected?: boolean;\n}\n\nfunction Story({\n  message, story, isProtected, isConnected,\n}: OwnProps & StateProps) {\n  const { storyData } = message.content;\n\n  return (\n    <BaseStory\n      story={story || storyData}\n      isProtected={isProtected}\n      isConnected={isConnected}\n    />\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { message }): StateProps => {\n  const { id, peerId } = message.content.storyData!;\n\n  return {\n    story: selectPeerStory(global, peerId, id),\n    isConnected: global.connectionState === 'connectionStateReady',\n  };\n})(Story));\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiMessage, ApiPeer, ApiTypeStory, ApiUser,\n} from '../../../api/types';\n\nimport { getStoryMediaHash, getUserFirstOrLastName } from '../../../global/helpers';\nimport { getPeerTitle } from '../../../global/helpers/peers';\nimport {\n  selectPeer,\n  selectPeerStories,\n  selectPeerStory,\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\ninterface OwnProps {\n  message: ApiMessage;\n}\n\ninterface StateProps {\n  story?: ApiTypeStory;\n  peer?: ApiPeer;\n  targetUser?: ApiUser;\n  isUnread?: boolean;\n}\n\nfunction StoryMention({\n  message, story, peer, isUnread, targetUser,\n}: OwnProps & StateProps) {\n  const { openStoryViewer } = getActions();\n\n  const lang = useOldLang();\n\n  const { storyData } = message.content;\n\n  const handleClick = useLastCallback(() => {\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  const isDeleted = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded\n    ? getStoryMediaHash(story, 'pictogram')\n    : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbUrl = imgBlobUrl || video?.thumbnail?.dataUri;\n\n  useEnsureStory(storyData!.peerId, storyData!.id, story);\n\n  function getTitle() {\n    if (peer && 'isSelf' in peer && peer.isSelf) {\n      return isDeleted\n        ? lang('ExpiredStoryMentioned', getUserFirstOrLastName(targetUser))\n        : lang('StoryYouMentionedTitle', getUserFirstOrLastName(targetUser));\n    }\n\n    return isDeleted\n      ? lang('ExpiredStoryMention')\n      : lang('StoryMentionedTitle', getPeerTitle(lang, peer!));\n  }\n\n  return (\n    <div\n      className={buildClassName('action-message-story-mention', isUnread && 'is-unread', isLoaded && 'with-preview')}\n      tabIndex={0}\n      role=\"button\"\n      onClick={isLoaded ? handleClick : undefined}\n    >\n      {isLoaded && (\n        <span className=\"story-media-wrapper\">\n          {thumbUrl && (\n            <img src={thumbUrl} alt=\"\" className=\"story-media\" />\n          )}\n        </span>\n      )}\n\n      <span className=\"story-title\">{renderText(getTitle(), ['emoji', 'simple_markdown'])}</span>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { message }): StateProps => {\n  const { id, peerId } = message.content.storyData!;\n  const lastReadId = selectPeerStories(global, peerId)?.lastReadId;\n\n  return {\n    story: selectPeerStory(global, peerId, id),\n    peer: selectPeer(global, peerId),\n    targetUser: selectUser(global, message.chatId),\n    isUnread: Boolean(lastReadId && lastReadId < id),\n  };\n})(StoryMention));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  useUnmountCleanup,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableEffect,\n  ApiAvailableReaction,\n  ApiChat,\n  ApiChatMember,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiPoll,\n  ApiReaction,\n  ApiReactionKey,\n  ApiSavedReactionTag,\n  ApiThreadInfo,\n  ApiTopic,\n  ApiTypeStory,\n  ApiUser,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type {\n  ActiveEmojiInteraction,\n  ChatTranslatedMessages,\n  FocusDirection,\n  IAlbum,\n  MessageListType,\n  ScrollTargetPosition,\n  ThemeKey,\n  ThreadId,\n} from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport type { OnIntersectPinnedMessage } from '../hooks/usePinnedMessage';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { AudioOrigin } from '../../../types';\n\nimport { EMOJI_STATUS_LOOP_LIMIT, MESSAGE_APPEARANCE_DELAY } from '../../../config';\nimport {\n  areReactionsEmpty,\n  getIsDownloading,\n  getMessageContent,\n  getMessageCustomShape,\n  getMessageDownloadableMedia,\n  getMessageHtmlId,\n  getMessageSingleCustomEmoji,\n  getMessageSingleRegularEmoji,\n  hasMessageText,\n  hasMessageTtl,\n  isAnonymousForwardsChat,\n  isAnonymousOwnMessage,\n  isChatChannel,\n  isChatGroup,\n  isChatPublic,\n  isGeoLiveExpired,\n  isMessageLocal,\n  isMessageTranslatable,\n  isOwnMessage,\n  isReplyToMessage,\n  isSystemBot,\n  isUserId,\n} from '../../../global/helpers';\nimport { getPeerFullTitle } from '../../../global/helpers/peers';\nimport { getMessageReplyInfo, getStoryReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectActiveDownloads,\n  selectAnimatedEmoji,\n  selectCanAutoLoadMedia,\n  selectCanAutoPlayMedia,\n  selectCanReplyToMessage,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatTranslations,\n  selectCurrentMiddleSearch,\n  selectDefaultReaction,\n  selectForwardedSender,\n  selectIsChatProtected,\n  selectIsChatWithSelf,\n  selectIsCurrentUserFrozen,\n  selectIsCurrentUserPremium,\n  selectIsDocumentGroupSelected,\n  selectIsInSelectMode,\n  selectIsMessageFocused,\n  selectIsMessageProtected,\n  selectIsMessageSelected,\n  selectMessageIdsByGroupId,\n  selectMessageLastPlaybackTimestamp,\n  selectMessageTimestampableDuration,\n  selectOutgoingStatus,\n  selectPeer,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectPollFromMessage,\n  selectReplyMessage,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectSender,\n  selectSenderFromHeader,\n  selectShouldDetectChatLanguage,\n  selectShouldLoopStickers,\n  selectTabState,\n  selectTheme,\n  selectThreadInfo,\n  selectTopicFromMessage,\n  selectUploadProgress,\n  selectUser,\n} from '../../../global/selectors';\nimport { selectSharedSettings } from '../../../global/selectors/sharedState';\nimport { IS_ANDROID, IS_ELECTRON, IS_TRANSLATION_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport stopEvent from '../../../util/stopEvent';\nimport { isElementInViewport } from '../../../util/visibility/isElementInViewport';\nimport { calculateDimensionsForMessageMedia, getStickerDimensions, REM } from '../../common/helpers/mediaDimensions';\nimport { getPeerColorClass } from '../../common/helpers/peerColor';\nimport renderText from '../../common/helpers/renderText';\nimport { getCustomEmojiSize } from '../../common/richinput/customEmoji';\nimport { buildContentClassName } from './helpers/buildContentClassName';\nimport { calculateAlbumLayout } from './helpers/calculateAlbumLayout';\nimport getSingularPaidMedia from './helpers/getSingularPaidMedia';\nimport { calculateMediaDimensions, getMinMediaWidth, MIN_MEDIA_WIDTH_WITH_TEXT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useFlag from '../../../hooks/useFlag';\nimport { useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useMessageResizeObserver from '../../../hooks/useResizeMessageObserver';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useTextLanguage from '../../../hooks/useTextLanguage';\nimport useDetectChatLanguage from './hooks/useDetectChatLanguage';\nimport useFocusMessage from './hooks/useFocusMessage';\nimport useInnerHandlers from './hooks/useInnerHandlers';\nimport useMessageTranslation from './hooks/useMessageTranslation';\nimport useOuterHandlers from './hooks/useOuterHandlers';\n\nimport Audio from '../../common/Audio';\nimport Avatar from '../../common/Avatar';\nimport CustomEmoji from '../../common/CustomEmoji';\nimport Document from '../../common/Document';\nimport DotAnimation from '../../common/DotAnimation';\nimport EmbeddedMessage from '../../common/embedded/EmbeddedMessage';\nimport EmbeddedStory from '../../common/embedded/EmbeddedStory';\nimport FakeIcon from '../../common/FakeIcon';\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport MessageText from '../../common/MessageText';\nimport ReactionStaticEmoji from '../../common/reactions/ReactionStaticEmoji';\nimport TopicChip from '../../common/TopicChip';\nimport { animateSnap } from '../../main/visualEffects/SnapEffectContainer';\nimport Button from '../../ui/Button';\nimport Album from './Album';\nimport AnimatedCustomEmoji from './AnimatedCustomEmoji';\nimport AnimatedEmoji from './AnimatedEmoji';\nimport CommentButton from './CommentButton';\nimport Contact from './Contact';\nimport ContextMenuContainer from './ContextMenuContainer.async';\nimport FactCheck from './FactCheck';\nimport Game from './Game';\nimport Giveaway from './Giveaway';\nimport InlineButtons from './InlineButtons';\nimport Invoice from './Invoice';\nimport InvoiceMediaPreview from './InvoiceMediaPreview';\nimport Location from './Location';\nimport MessageAppendix from './MessageAppendix';\nimport MessageEffect from './MessageEffect';\nimport MessageMeta from './MessageMeta';\nimport MessagePhoneCall from './MessagePhoneCall';\nimport PaidMediaOverlay from './PaidMediaOverlay';\nimport Photo from './Photo';\nimport Poll from './Poll';\nimport Reactions from './reactions/Reactions';\nimport RoundVideo from './RoundVideo';\nimport Sticker from './Sticker';\nimport Story from './Story';\nimport StoryMention from './StoryMention';\nimport Video from './Video';\nimport WebPage from './WebPage';\n\nimport './Message.scss';\n\ntype MessagePositionProperties = {\n  isFirstInGroup: boolean;\n  isLastInGroup: boolean;\n  isFirstInDocumentGroup: boolean;\n  isLastInDocumentGroup: boolean;\n  isLastInList: boolean;\n};\n\ntype OwnProps =\n  {\n    message: ApiMessage;\n    observeIntersectionForBottom?: ObserveFn;\n    observeIntersectionForLoading?: ObserveFn;\n    observeIntersectionForPlaying?: ObserveFn;\n    album?: IAlbum;\n    noAvatars?: boolean;\n    withAvatar?: boolean;\n    withSenderName?: boolean;\n    threadId: ThreadId;\n    messageListType: MessageListType;\n    noComments: boolean;\n    noReplies: boolean;\n    appearanceOrder: number;\n    isJustAdded: boolean;\n    memoFirstUnreadIdRef?: { current: number | undefined };\n    getIsMessageListReady?: Signal<boolean>;\n    onIntersectPinnedMessage?: OnIntersectPinnedMessage;\n  }\n  & MessagePositionProperties;\n\ntype StateProps = {\n  theme: ThemeKey;\n  forceSenderName?: boolean;\n  sender?: ApiPeer;\n  canShowSender: boolean;\n  originSender?: ApiPeer;\n  botSender?: ApiUser;\n  isThreadTop?: boolean;\n  shouldHideReply?: boolean;\n  replyMessage?: ApiMessage;\n  replyMessageSender?: ApiPeer;\n  replyMessageForwardSender?: ApiPeer;\n  replyMessageChat?: ApiChat;\n  isReplyPrivate?: boolean;\n  replyStory?: ApiTypeStory;\n  storySender?: ApiPeer;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  uploadProgress?: number;\n  isInDocumentGroup: boolean;\n  isProtected?: boolean;\n  isChatProtected?: boolean;\n  isFocused?: boolean;\n  focusDirection?: FocusDirection;\n  focusedQuote?: string;\n  focusedQuoteOffset?: number;\n  noFocusHighlight?: boolean;\n  scrollTargetPosition?: ScrollTargetPosition;\n  isResizingContainer?: boolean;\n  isForwarding?: boolean;\n  isChatWithSelf?: boolean;\n  isRepliesChat?: boolean;\n  isAnonymousForwards?: boolean;\n  isChannel?: boolean;\n  isGroup?: boolean;\n  canReply?: boolean;\n  highlight?: string;\n  animatedEmoji?: string;\n  animatedCustomEmoji?: string;\n  hasActiveReactions?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  isGroupSelected?: boolean;\n  isDownloading?: boolean;\n  threadId?: ThreadId;\n  isPinnedList?: boolean;\n  isPinned?: boolean;\n  canAutoLoadMedia?: boolean;\n  canAutoPlayMedia?: boolean;\n  hasLinkedChat?: boolean;\n  shouldLoopStickers?: boolean;\n  autoLoadFileMaxSizeMb: number;\n  repliesThreadInfo?: ApiThreadInfo;\n  reactionMessage?: ApiMessage;\n  availableReactions?: ApiAvailableReaction[];\n  defaultReaction?: ApiReaction;\n  activeEmojiInteractions?: ActiveEmojiInteraction[];\n  hasUnreadReaction?: boolean;\n  isTranscribing?: boolean;\n  transcribedText?: string;\n  isTranscriptionError?: boolean;\n  isPremium: boolean;\n  senderAdminMember?: ApiChatMember;\n  messageTopic?: ApiTopic;\n  hasTopicChip?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  areTranslationsEnabled?: boolean;\n  shouldDetectChatLanguage?: boolean;\n  requestedTranslationLanguage?: string;\n  requestedChatTranslationLanguage?: string;\n  withAnimatedEffects?: boolean;\n  webPageStory?: ApiTypeStory;\n  isConnected: boolean;\n  isLoadingComments?: boolean;\n  shouldWarnAboutSvg?: boolean;\n  senderBoosts?: number;\n  tags?: Record<ApiReactionKey, ApiSavedReactionTag>;\n  canTranscribeVoice?: boolean;\n  viaBusinessBot?: ApiUser;\n  effect?: ApiAvailableEffect;\n  poll?: ApiPoll;\n  maxTimestamp?: number;\n  lastPlaybackTimestamp?: number;\n  paidMessageStars?: number;\n  isChatWithUser?: boolean;\n  isAccountFrozen?: boolean;\n};\n\ntype MetaPosition =\n  'in-text'\n  | 'standalone'\n  | 'none';\ntype ReactionsPosition =\n  'inside'\n  | 'outside'\n  | 'none';\ntype QuickReactionPosition =\n  'in-content'\n  | 'in-meta';\n\nconst NBSP = '\\u00A0';\nconst NO_MEDIA_CORNERS_THRESHOLD = 18;\nconst QUICK_REACTION_SIZE = 1.75 * REM;\nconst EXTRA_SPACE_FOR_REACTIONS = 2.25 * REM;\n\nconst Message: FC<OwnProps & StateProps> = ({\n  message,\n  observeIntersectionForBottom,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  album,\n  noAvatars,\n  withAvatar,\n  withSenderName,\n  noComments,\n  noReplies,\n  appearanceOrder,\n  isJustAdded,\n  isFirstInGroup,\n  isPremium,\n  isLastInGroup,\n  isFirstInDocumentGroup,\n  isLastInDocumentGroup,\n  isTranscribing,\n  transcribedText,\n  isLastInList,\n  theme,\n  forceSenderName,\n  sender,\n  canShowSender,\n  originSender,\n  botSender,\n  isThreadTop,\n  shouldHideReply,\n  replyMessage,\n  replyMessageSender,\n  replyMessageForwardSender,\n  replyMessageChat,\n  replyStory,\n  isReplyPrivate,\n  storySender,\n  outgoingStatus,\n  uploadProgress,\n  isInDocumentGroup,\n  isLoadingComments,\n  isProtected,\n  isChatProtected,\n  isFocused,\n  focusDirection,\n  focusedQuote,\n  focusedQuoteOffset,\n  noFocusHighlight,\n  scrollTargetPosition,\n  isResizingContainer,\n  isForwarding,\n  isChatWithSelf,\n  isRepliesChat,\n  isAnonymousForwards,\n  isChannel,\n  isGroup,\n  canReply,\n  highlight,\n  animatedEmoji,\n  animatedCustomEmoji,\n  hasActiveReactions,\n  hasLinkedChat,\n  isInSelectMode,\n  isSelected,\n  isGroupSelected,\n  threadId,\n  reactionMessage,\n  availableReactions,\n  defaultReaction,\n  activeEmojiInteractions,\n  messageListType,\n  isPinnedList,\n  isPinned,\n  isDownloading,\n  canAutoLoadMedia,\n  canAutoPlayMedia,\n  shouldLoopStickers,\n  autoLoadFileMaxSizeMb,\n  repliesThreadInfo,\n  hasUnreadReaction,\n  memoFirstUnreadIdRef,\n  senderAdminMember,\n  messageTopic,\n  hasTopicChip,\n  chatTranslations,\n  areTranslationsEnabled,\n  shouldDetectChatLanguage,\n  requestedTranslationLanguage,\n  requestedChatTranslationLanguage,\n  withAnimatedEffects,\n  webPageStory,\n  isConnected,\n  getIsMessageListReady,\n  shouldWarnAboutSvg,\n  senderBoosts,\n  tags,\n  canTranscribeVoice,\n  viaBusinessBot,\n  effect,\n  poll,\n  maxTimestamp,\n  lastPlaybackTimestamp,\n  onIntersectPinnedMessage,\n  paidMessageStars,\n  isChatWithUser,\n  isAccountFrozen,\n}) => {\n  const {\n    toggleMessageSelection,\n    clickBotInlineButton,\n    disableContextMenuHint,\n    animateUnreadReaction,\n    focusLastMessage,\n    markMentionsRead,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const bottomMarkerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const quickReactionRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const [isTranscriptionHidden, setTranscriptionHidden] = useState(false);\n  const [isPlayingSnapAnimation, setIsPlayingSnapAnimation] = useState(false);\n  const [isPlayingDeleteAnimation, setIsPlayingDeleteAnimation] = useState(false);\n  const [shouldPlayEffect, requestEffect, hideEffect] = useFlag();\n  const { isMobile, isTouchScreen } = useAppLayout();\n\n  useOnIntersect(bottomMarkerRef, observeIntersectionForBottom);\n\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    contextMenuTarget,\n    handleBeforeContextMenu,\n    handleContextMenu: onContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(\n    ref,\n    (isTouchScreen && isInSelectMode) || isAccountFrozen,\n    !IS_ELECTRON,\n    IS_ANDROID,\n    getIsMessageListReady,\n  );\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      disableContextMenuHint();\n    }\n  }, [isContextMenuOpen, disableContextMenuHint]);\n\n  const noAppearanceAnimation = appearanceOrder <= 0;\n  const [isShown, markShown] = useFlag(noAppearanceAnimation);\n  useEffect(() => {\n    if (noAppearanceAnimation) {\n      return;\n    }\n\n    setTimeout(markShown, appearanceOrder * MESSAGE_APPEARANCE_DELAY);\n  }, [appearanceOrder, markShown, noAppearanceAnimation]);\n\n  useShowTransition({\n    ref,\n    isOpen: isShown || isJustAdded,\n    noMountTransition: noAppearanceAnimation && !isJustAdded,\n    className: false,\n  });\n\n  const {\n    id: messageId, chatId, forwardInfo, viaBotId, isTranscriptionError, factCheck,\n  } = message;\n\n  useUnmountCleanup(() => {\n    if (message.isPinned) {\n      const id = album ? album.mainMessage.id : messageId;\n      onIntersectPinnedMessage?.({ viewportPinnedIdsToRemove: [id] });\n    }\n  });\n\n  const isLocal = isMessageLocal(message);\n  const isOwn = isOwnMessage(message);\n  const isScheduled = messageListType === 'scheduled' || message.isScheduled;\n  const hasMessageReply = isReplyToMessage(message) && !shouldHideReply;\n\n  const { paidMedia } = getMessageContent(message);\n  const { photo: paidMediaPhoto, video: paidMediaVideo } = getSingularPaidMedia(paidMedia);\n\n  const {\n    photo = paidMediaPhoto, video = paidMediaVideo, audio,\n    voice, document, sticker, contact,\n    webPage, invoice, location,\n    action, game, storyData, giveaway,\n    giveawayResults,\n  } = getMessageContent(message);\n\n  const messageReplyInfo = getMessageReplyInfo(message);\n  const storyReplyInfo = getStoryReplyInfo(message);\n\n  const withVoiceTranscription = Boolean(!isTranscriptionHidden && (isTranscriptionError || transcribedText));\n\n  const hasStoryReply = Boolean(storyReplyInfo);\n  const hasThread = Boolean(repliesThreadInfo) && messageListType === 'thread';\n  const isCustomShape = !withVoiceTranscription && getMessageCustomShape(message);\n  const hasAnimatedEmoji = isCustomShape && (animatedEmoji || animatedCustomEmoji);\n  const hasReactions = reactionMessage?.reactions && !areReactionsEmpty(reactionMessage.reactions);\n  const asForwarded = (\n    forwardInfo\n    && (!isChatWithSelf || isScheduled)\n    && !isRepliesChat\n    && !forwardInfo.isLinkedChannelPost\n    && !isAnonymousForwards\n    && !botSender\n  ) || Boolean(storyData && !storyData.isMention);\n  const canShowSenderBoosts = Boolean(senderBoosts) && !asForwarded && isFirstInGroup;\n  const isStoryMention = storyData?.isMention;\n  const isRoundVideo = video?.mediaType === 'video' && video.isRound;\n  const isAlbum = Boolean(album)\n    && (\n      (album.isPaidMedia && paidMedia!.extendedMedia.length > 1)\n      || album.messages.length > 1\n    ) && !album.messages.some((msg) => Object.keys(msg.content).length === 0);\n  const isInDocumentGroupNotFirst = isInDocumentGroup && !isFirstInDocumentGroup;\n  const isInDocumentGroupNotLast = isInDocumentGroup && !isLastInDocumentGroup;\n  const isContextMenuShown = contextMenuAnchor !== undefined;\n  const canShowActionButton = (\n    !(isContextMenuShown || isInSelectMode || isForwarding)\n    && !isInDocumentGroupNotLast\n    && !isStoryMention\n    && !((sticker || hasAnimatedEmoji) && asForwarded)\n  );\n  const canForward = isChannel && !isScheduled && message.isForwardingAllowed\n  && !isChatProtected;\n  const canFocus = Boolean(isPinnedList\n    || (forwardInfo\n      && (forwardInfo.isChannelPost || isChatWithSelf || isRepliesChat || isAnonymousForwards)\n      && forwardInfo.fromMessageId\n    ));\n\n  const hasFactCheck = Boolean(factCheck?.text);\n\n  const hasForwardedCustomShape = asForwarded && isCustomShape;\n  const hasSubheader = hasTopicChip || hasMessageReply || hasStoryReply || hasForwardedCustomShape;\n\n  const selectMessage = useLastCallback((e?: React.MouseEvent<HTMLDivElement, MouseEvent>, groupedId?: string) => {\n    if (isAccountFrozen) return;\n    toggleMessageSelection({\n      messageId,\n      groupedId,\n      ...(e?.shiftKey && { withShift: true }),\n      ...(isAlbum && { childMessageIds: album!.messages.map(({ id }) => id) }),\n    });\n  });\n\n  const messageSender = canShowSender ? sender : undefined;\n\n  const shouldPreferOriginSender = forwardInfo\n    && (isChatWithSelf || isRepliesChat || isAnonymousForwards || !messageSender);\n  const avatarPeer = shouldPreferOriginSender ? originSender : messageSender;\n\n  const messageColorPeer = asForwarded ? originSender : sender;\n  const noUserColors = isOwn && !isCustomShape;\n\n  const senderPeer = (forwardInfo || storyData) ? originSender : messageSender;\n  const hasTtl = hasMessageTtl(message);\n\n  const {\n    handleMouseDown,\n    handleClick,\n    handleContextMenu,\n    handleDoubleClick,\n    handleContentDoubleClick,\n    handleMouseMove,\n    handleSendQuickReaction,\n    handleMouseLeave,\n    isSwiped,\n    isQuickReactionVisible,\n    handleDocumentGroupMouseEnter,\n  } = useOuterHandlers(\n    selectMessage,\n    ref,\n    messageId,\n    Boolean(isInSelectMode),\n    Boolean(canReply),\n    Boolean(isProtected),\n    onContextMenu,\n    handleBeforeContextMenu,\n    chatId,\n    isContextMenuShown,\n    quickReactionRef,\n    isInDocumentGroupNotLast,\n    getIsMessageListReady,\n  );\n\n  const {\n    handleSenderClick,\n    handleViaBotClick,\n    handleReplyClick,\n    handleMediaClick,\n    handleDocumentClick,\n    handleAudioPlay,\n    handleAlbumMediaClick,\n    handlePhotoMediaClick,\n    handleVideoMediaClick,\n    handleMetaClick,\n    handleTranslationClick,\n    handleOpenThread,\n    handleReadMedia,\n    handleCancelUpload,\n    handleVoteSend,\n    handleGroupForward,\n    handleForward,\n    handleFocus,\n    handleFocusForwarded,\n    handleDocumentGroupSelectAll,\n    handleTopicChipClick,\n    handleStoryClick,\n  } = useInnerHandlers({\n    lang,\n    selectMessage,\n    message,\n    chatId,\n    threadId,\n    isInDocumentGroup,\n    asForwarded,\n    isScheduled,\n    album,\n    avatarPeer,\n    senderPeer,\n    botSender,\n    messageTopic,\n    isTranslatingChat: Boolean(requestedChatTranslationLanguage),\n    story: replyStory && 'content' in replyStory ? replyStory : undefined,\n    isReplyPrivate,\n    isRepliesChat,\n    isSavedMessages: isChatWithSelf,\n    lastPlaybackTimestamp,\n  });\n\n  const handleEffectClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    requestEffect();\n  });\n\n  useEffect(() => {\n    if (!isLastInList) {\n      return;\n    }\n\n    if (withVoiceTranscription && transcribedText) {\n      focusLastMessage();\n    }\n  }, [focusLastMessage, isLastInList, transcribedText, withVoiceTranscription]);\n\n  useEffect(() => {\n    const element = ref.current;\n    const isPartialAlbumDelete = message.isInAlbum && album?.messages.some((msg) => !msg.isDeleting);\n    if (message.isDeleting && element && !isPartialAlbumDelete) {\n      if (animateSnap(element)) {\n        setIsPlayingSnapAnimation(true);\n      } else {\n        setIsPlayingDeleteAnimation(true);\n      }\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- Only start animation on `isDeleting` change\n  }, [message.isDeleting]);\n\n  const textMessage = album?.hasMultipleCaptions ? undefined : (album?.captionMessage || message);\n  const hasTextContent = textMessage && hasMessageText(textMessage);\n  const hasText = hasTextContent || hasFactCheck;\n\n  const containerClassName = buildClassName(\n    'Message message-list-item',\n    isFirstInGroup && 'first-in-group',\n    isProtected && 'hide-on-print',\n    isProtected && !hasTextContent ? 'is-protected' : 'allow-selection',\n    isLastInGroup && 'last-in-group',\n    isFirstInDocumentGroup && 'first-in-document-group',\n    isLastInDocumentGroup && 'last-in-document-group',\n    isLastInList && 'last-in-list',\n    isOwn && 'own',\n    Boolean(message.viewsCount) && 'has-views',\n    message.isEdited && 'was-edited',\n    hasMessageReply && 'has-reply',\n    isContextMenuOpen && 'has-menu-open',\n    isFocused && !noFocusHighlight && 'focused',\n    isForwarding && 'is-forwarding',\n    isPlayingDeleteAnimation && 'is-deleting',\n    isPlayingSnapAnimation && 'is-dissolving',\n    isInDocumentGroup && 'is-in-document-group',\n    isAlbum && 'is-album',\n    message.hasUnreadMention && 'has-unread-mention',\n    isSelected && 'is-selected',\n    isInSelectMode && 'is-in-selection-mode',\n    isThreadTop && !withAvatar && 'is-thread-top',\n    Boolean(message.inlineButtons) && 'has-inline-buttons',\n    isSwiped && 'is-swiped',\n    isJustAdded && 'is-just-added',\n    (hasActiveReactions || shouldPlayEffect) && 'has-active-effect',\n    isStoryMention && 'is-story-mention',\n    !canShowActionButton && 'no-action-button',\n  );\n\n  const text = textMessage && getMessageContent(textMessage).text;\n  const isInvertedMedia = Boolean(message.isInvertedMedia);\n\n  const { replyToMsgId, replyToPeerId, isQuote } = messageReplyInfo || {};\n  const { peerId: storyReplyPeerId, storyId: storyReplyId } = storyReplyInfo || {};\n\n  useEffect(() => {\n    if ((sticker?.hasEffect || effect) && ((\n      memoFirstUnreadIdRef?.current && messageId >= memoFirstUnreadIdRef.current\n    ) || isLocal)) {\n      requestEffect();\n    }\n  }, [effect, isLocal, memoFirstUnreadIdRef, messageId, sticker?.hasEffect]);\n\n  const detectedLanguage = useTextLanguage(\n    text?.text,\n    !(areTranslationsEnabled || shouldDetectChatLanguage),\n    getIsMessageListReady,\n  );\n  useDetectChatLanguage(message, detectedLanguage, !shouldDetectChatLanguage, getIsMessageListReady);\n\n  const shouldTranslate = isMessageTranslatable(message, !requestedChatTranslationLanguage);\n  const { isPending: isTranslationPending, translatedText } = useMessageTranslation(\n    chatTranslations, chatId, shouldTranslate ? messageId : undefined, requestedTranslationLanguage,\n  );\n  // Used to display previous result while new one is loading\n  const previousTranslatedText = usePreviousDeprecated(translatedText, Boolean(shouldTranslate));\n\n  const currentTranslatedText = translatedText || previousTranslatedText;\n\n  const phoneCall = action?.type === 'phoneCall' ? action : undefined;\n\n  const isMediaWithCommentButton = (repliesThreadInfo || (hasLinkedChat && isChannel && isLocal))\n    && !isInDocumentGroupNotLast\n    && messageListType === 'thread'\n    && !noComments;\n  const withCommentButton = repliesThreadInfo?.isCommentsInfo\n    && !isInDocumentGroupNotLast && messageListType === 'thread'\n    && !noComments;\n  const withQuickReactionButton = !isTouchScreen && !phoneCall && !isInSelectMode && defaultReaction\n    && !isInDocumentGroupNotLast && !isStoryMention && !hasTtl && !isAccountFrozen;\n\n  const hasOutsideReactions = !withVoiceTranscription && hasReactions\n    && (isCustomShape || ((photo || video || storyData || (location?.mediaType === 'geo')) && !hasText));\n\n  const contentClassName = buildContentClassName(message, album, {\n    poll,\n    hasSubheader,\n    isCustomShape,\n    isLastInGroup,\n    asForwarded,\n    hasThread: hasThread && !noComments,\n    forceSenderName,\n    hasCommentCounter: hasThread && repliesThreadInfo.messagesCount > 0,\n    hasCommentButton: withCommentButton,\n    hasActionButton: canForward || canFocus,\n    hasReactions,\n    isGeoLiveActive: location?.mediaType === 'geoLive' && !isGeoLiveExpired(message),\n    withVoiceTranscription,\n    peerColorClass: getPeerColorClass(messageColorPeer, noUserColors, true),\n    hasOutsideReactions,\n  });\n\n  const withAppendix = contentClassName.includes('has-appendix');\n  const emojiSize = getCustomEmojiSize(message.emojiOnlyCount);\n\n  const paidMessageStarsInMeta = !isChatWithUser\n    ? (isAlbum && paidMessageStars ? album.messages.length * paidMessageStars : paidMessageStars)\n    : undefined;\n\n  let metaPosition!: MetaPosition;\n  if (phoneCall) {\n    metaPosition = 'none';\n  } else if (isInDocumentGroupNotLast) {\n    metaPosition = 'none';\n  } else if (hasText && !webPage && !emojiSize && !isInvertedMedia) {\n    metaPosition = 'in-text';\n  } else if (isInvertedMedia && !emojiSize && (hasFactCheck || webPage)) {\n    metaPosition = 'in-text';\n  } else {\n    metaPosition = 'standalone';\n  }\n\n  let reactionsPosition!: ReactionsPosition;\n  if (hasReactions) {\n    if (hasOutsideReactions) {\n      reactionsPosition = 'outside';\n    } else if (asForwarded) {\n      metaPosition = 'standalone';\n      reactionsPosition = 'inside';\n    } else {\n      reactionsPosition = 'inside';\n    }\n  } else {\n    reactionsPosition = 'none';\n  }\n\n  const quickReactionPosition: QuickReactionPosition = isCustomShape ? 'in-meta' : 'in-content';\n\n  useEnsureMessage(\n    replyToPeerId || chatId,\n    replyToMsgId,\n    replyMessage,\n    message.id,\n    shouldHideReply || isQuote || isReplyPrivate,\n  );\n\n  useEnsureStory(\n    storyReplyPeerId || chatId,\n    storyReplyId,\n    replyStory,\n  );\n\n  useFocusMessage({\n    elementRef: ref,\n    chatId,\n    isFocused,\n    focusDirection,\n    noFocusHighlight,\n    isResizingContainer,\n    isJustAdded,\n    isQuote: Boolean(focusedQuote),\n    scrollTargetPosition,\n  });\n\n  const viaBusinessBotTitle = viaBusinessBot ? getPeerFullTitle(lang, viaBusinessBot) : undefined;\n\n  const canShowPostAuthor = !message.senderId;\n  const signature = viaBusinessBotTitle || (canShowPostAuthor && message.postAuthorTitle)\n    || ((asForwarded || isChatWithSelf) && forwardInfo?.postAuthorTitle)\n    || undefined;\n\n  useMessageResizeObserver(ref, isLastInList);\n\n  useEffect(() => {\n    const bottomMarker = bottomMarkerRef.current;\n    if (!bottomMarker || !isElementInViewport(bottomMarker)) return;\n\n    if (hasUnreadReaction) {\n      animateUnreadReaction({ messageIds: [messageId] });\n    }\n\n    let unreadMentionIds: number[] = [];\n    if (message.hasUnreadMention) {\n      unreadMentionIds = [messageId];\n    }\n\n    if (album) {\n      unreadMentionIds = album.messages.filter((msg) => msg.hasUnreadMention).map((msg) => msg.id);\n    }\n\n    if (unreadMentionIds.length) {\n      markMentionsRead({ chatId, messageIds: unreadMentionIds });\n    }\n  }, [hasUnreadReaction, album, chatId, messageId, animateUnreadReaction, message.hasUnreadMention]);\n\n  const albumLayout = useMemo(() => {\n    return isAlbum\n      ? calculateAlbumLayout(isOwn, Boolean(noAvatars), album!, isMobile)\n      : undefined;\n  }, [isAlbum, isOwn, noAvatars, album, isMobile]);\n\n  const extraPadding = asForwarded && !isCustomShape ? 28 : 0;\n\n  const sizeCalculations = useMemo(() => {\n    let calculatedWidth;\n    let contentWidth: number | undefined;\n    let noMediaCorners = false;\n    let style = '';\n    let reactionsMaxWidth;\n\n    if (!isAlbum && (photo || video || invoice?.extendedMedia)) {\n      let width: number | undefined;\n      if (photo || video) {\n        const media = (photo || video);\n        if (media && !isRoundVideo) {\n          width = calculateMediaDimensions({\n            media,\n            isOwn,\n            asForwarded,\n            noAvatars,\n            isMobile,\n          }).width;\n        }\n      } else if (invoice?.extendedMedia && (\n        invoice.extendedMedia.width && invoice.extendedMedia.height\n      )) {\n        const { width: previewWidth, height: previewHeight } = invoice.extendedMedia;\n        width = calculateDimensionsForMessageMedia({\n          width: previewWidth,\n          height: previewHeight,\n          fromOwnMessage: isOwn,\n          asForwarded,\n          noAvatars,\n          isMobile,\n        }).width;\n      }\n\n      if (width) {\n        if (width < MIN_MEDIA_WIDTH_WITH_TEXT) {\n          contentWidth = width;\n        }\n        calculatedWidth = Math.max(getMinMediaWidth(text?.text, isMediaWithCommentButton), width);\n        if (!asForwarded && invoice?.extendedMedia && calculatedWidth - width > NO_MEDIA_CORNERS_THRESHOLD) {\n          noMediaCorners = true;\n        }\n      }\n    } else if (albumLayout) {\n      calculatedWidth = Math.max(\n        getMinMediaWidth(text?.text, isMediaWithCommentButton), albumLayout.containerStyle.width,\n      );\n      if (calculatedWidth - albumLayout.containerStyle.width > NO_MEDIA_CORNERS_THRESHOLD) {\n        noMediaCorners = true;\n      }\n    }\n\n    if (calculatedWidth) {\n      style = `width: ${calculatedWidth}px`;\n      reactionsMaxWidth = calculatedWidth + EXTRA_SPACE_FOR_REACTIONS;\n    } else if (sticker && !hasSubheader) {\n      const { width } = getStickerDimensions(sticker, isMobile);\n      style = `width: ${width + extraPadding}px`;\n      reactionsMaxWidth = width + EXTRA_SPACE_FOR_REACTIONS;\n    }\n\n    return {\n      contentWidth, noMediaCorners, style, reactionsMaxWidth,\n    };\n  }, [\n    albumLayout, asForwarded, extraPadding, hasSubheader, invoice?.extendedMedia, isAlbum, isMediaWithCommentButton,\n    isMobile, isOwn, noAvatars, photo, sticker, text?.text, video, isRoundVideo,\n  ]);\n\n  const {\n    contentWidth, noMediaCorners, style, reactionsMaxWidth,\n  } = sizeCalculations;\n\n  function renderMessageText(isForAnimation?: boolean) {\n    if (!textMessage) return undefined;\n    return (\n      <MessageText\n        messageOrStory={textMessage}\n        translatedText={requestedTranslationLanguage ? currentTranslatedText : undefined}\n        isForAnimation={isForAnimation}\n        focusedQuote={focusedQuote}\n        focusedQuoteOffset={focusedQuoteOffset}\n        emojiSize={emojiSize}\n        highlight={highlight}\n        isProtected={isProtected}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        withTranslucentThumbs={isCustomShape}\n        isInSelectMode={isInSelectMode}\n        canBeEmpty={hasFactCheck}\n        maxTimestamp={maxTimestamp}\n        threadId={threadId}\n      />\n    );\n  }\n\n  const renderQuickReactionButton = useCallback(() => {\n    if (!defaultReaction) return undefined;\n\n    return (\n      <div\n        className={buildClassName('quick-reaction', isQuickReactionVisible && !hasActiveReactions && 'visible')}\n        onClick={handleSendQuickReaction}\n        ref={quickReactionRef}\n      >\n        <ReactionStaticEmoji\n          reaction={defaultReaction}\n          size={QUICK_REACTION_SIZE}\n          availableReactions={availableReactions}\n          observeIntersection={observeIntersectionForPlaying}\n        />\n      </div>\n    );\n  }, [\n    hasActiveReactions, availableReactions, defaultReaction, handleSendQuickReaction, isQuickReactionVisible,\n    observeIntersectionForPlaying,\n  ]);\n\n  function renderReactionsAndMeta() {\n    const meta = (\n      <MessageMeta\n        message={message}\n        isPinned={isPinned}\n        withFullDate={isChatWithSelf && !isOwn}\n        noReplies={noReplies}\n        repliesThreadInfo={repliesThreadInfo}\n        outgoingStatus={outgoingStatus}\n        signature={signature}\n        withReactionOffset={reactionsPosition === 'inside'}\n        renderQuickReactionButton={\n          withQuickReactionButton && quickReactionPosition === 'in-meta' ? renderQuickReactionButton : undefined\n        }\n        availableReactions={availableReactions}\n        isTranslated={Boolean(requestedTranslationLanguage ? currentTranslatedText : undefined)}\n        effectEmoji={effect?.emoticon}\n        onClick={handleMetaClick}\n        onEffectClick={handleEffectClick}\n        onTranslationClick={handleTranslationClick}\n        onOpenThread={handleOpenThread}\n        paidMessageStars={paidMessageStarsInMeta}\n      />\n    );\n\n    if (reactionsPosition !== 'inside') {\n      return meta;\n    }\n\n    return (\n      <Reactions\n        message={reactionMessage!}\n        threadId={threadId}\n        metaChildren={meta}\n        observeIntersection={observeIntersectionForPlaying}\n        noRecentReactors={isChannel}\n        tags={tags}\n        isCurrentUserPremium={isPremium}\n        isAccountFrozen={isAccountFrozen}\n      />\n    );\n  }\n\n  function renderContent() {\n    const className = buildClassName(\n      'content-inner',\n      asForwarded && 'forwarded-message',\n      hasForwardedCustomShape && 'forwarded-custom-shape',\n      hasSubheader && 'with-subheader',\n      noMediaCorners && 'no-media-corners',\n    );\n    const hasCustomAppendix = isLastInGroup\n      && (!hasText || (isInvertedMedia && !hasFactCheck && !hasReactions)) && !withCommentButton;\n    const textContentClass = buildClassName(\n      'text-content',\n      'clearfix',\n      metaPosition === 'in-text' && 'with-meta',\n      outgoingStatus && 'with-outgoing-icon',\n    );\n    const shouldReadMedia = !hasTtl || !isOwn || isChatWithSelf;\n\n    return (\n      <div className={className} onDoubleClick={handleContentDoubleClick} dir=\"auto\">\n        {!asForwarded && shouldRenderSenderName() && renderSenderName()}\n        {hasSubheader && (\n          <div className=\"message-subheader\">\n            {hasTopicChip && (\n              <TopicChip\n                topic={messageTopic}\n                onClick={handleTopicChipClick}\n                className=\"message-topic\"\n              />\n            )}\n            {hasForwardedCustomShape && (\n              <div className=\"forward-custom-shape-subheader\">\n                <div className=\"message-title\">\n                  {renderForwardTitle()}\n                </div>\n                {renderSenderName(true, true)}\n              </div>\n            )}\n            {hasMessageReply && (\n              <EmbeddedMessage\n                message={replyMessage}\n                replyInfo={messageReplyInfo}\n                noUserColors={noUserColors}\n                isProtected={isProtected}\n                sender={replyMessageSender}\n                senderChat={replyMessageChat}\n                forwardSender={replyMessageForwardSender}\n                chatTranslations={chatTranslations}\n                requestedChatTranslationLanguage={requestedChatTranslationLanguage}\n                observeIntersectionForLoading={observeIntersectionForLoading}\n                observeIntersectionForPlaying={observeIntersectionForPlaying}\n                onClick={handleReplyClick}\n              />\n            )}\n            {hasStoryReply && (\n              <EmbeddedStory\n                story={replyStory}\n                sender={storySender}\n                noUserColors={noUserColors}\n                isProtected={isProtected}\n                observeIntersectionForLoading={observeIntersectionForLoading}\n                onClick={handleStoryClick}\n              />\n            )}\n          </div>\n        )}\n        {sticker && observeIntersectionForLoading && observeIntersectionForPlaying && (\n          <Sticker\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            shouldLoop={shouldLoopStickers}\n            shouldPlayEffect={shouldPlayEffect}\n            withEffect={withAnimatedEffects}\n            onStopEffect={hideEffect}\n          />\n        )}\n        {hasAnimatedEmoji && animatedCustomEmoji && (\n          <AnimatedCustomEmoji\n            customEmojiId={animatedCustomEmoji}\n            withEffects={withAnimatedEffects && isChatWithUser && !effect}\n            isOwn={isOwn}\n            observeIntersection={observeIntersectionForLoading}\n            forceLoadPreview={isLocal}\n            messageId={messageId}\n            chatId={chatId}\n            activeEmojiInteractions={activeEmojiInteractions}\n          />\n        )}\n        {hasAnimatedEmoji && animatedEmoji && (\n          <AnimatedEmoji\n            emoji={animatedEmoji}\n            withEffects={withAnimatedEffects && isChatWithUser && !effect}\n            isOwn={isOwn}\n            observeIntersection={observeIntersectionForLoading}\n            forceLoadPreview={isLocal}\n            messageId={messageId}\n            chatId={chatId}\n            activeEmojiInteractions={activeEmojiInteractions}\n          />\n        )}\n        {withAnimatedEffects && effect && !isLocal && (\n          <MessageEffect\n            shouldPlay={shouldPlayEffect}\n            messageId={message.id}\n            isMirrored={!message.isOutgoing}\n            effect={effect}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            onStop={hideEffect}\n          />\n        )}\n        {phoneCall && (\n          <MessagePhoneCall\n            message={message}\n            phoneCall={phoneCall}\n            chatId={chatId}\n          />\n        )}\n        {!isAlbum && isRoundVideo && !withVoiceTranscription && (\n          <RoundVideo\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            canAutoLoad={canAutoLoadMedia}\n            isDownloading={isDownloading}\n            onReadMedia={shouldReadMedia ? handleReadMedia : undefined}\n            onHideTranscription={setTranscriptionHidden}\n            isTranscriptionError={isTranscriptionError}\n            isTranscribed={Boolean(transcribedText)}\n            canTranscribe={canTranscribeVoice && !hasTtl}\n            isTranscriptionHidden={isTranscriptionHidden}\n            isTranscribing={isTranscribing}\n          />\n        )}\n        {(audio || voice || withVoiceTranscription) && (\n          <Audio\n            theme={theme}\n            message={message}\n            origin={AudioOrigin.Inline}\n            uploadProgress={uploadProgress}\n            isSelectable={isInDocumentGroup}\n            isSelected={isSelected}\n            noAvatars={noAvatars}\n            onPlay={handleAudioPlay}\n            onReadMedia={voice && shouldReadMedia ? handleReadMedia : undefined}\n            onCancelUpload={handleCancelUpload}\n            isDownloading={isDownloading}\n            isTranscribing={isTranscribing}\n            isTranscriptionHidden={isTranscriptionHidden}\n            isTranscribed={Boolean(transcribedText)}\n            isTranscriptionError={isTranscriptionError}\n            canDownload={!isProtected}\n            onHideTranscription={setTranscriptionHidden}\n            canTranscribe={canTranscribeVoice && !hasTtl}\n          />\n        )}\n        {document && (\n          <Document\n            document={document}\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            canAutoLoad={canAutoLoadMedia}\n            autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n            uploadProgress={uploadProgress}\n            isSelectable={isInDocumentGroup}\n            isSelected={isSelected}\n            onMediaClick={handleDocumentClick}\n            onCancelUpload={handleCancelUpload}\n            isDownloading={isDownloading}\n            shouldWarnAboutSvg={shouldWarnAboutSvg}\n          />\n        )}\n        {storyData && !isStoryMention && (\n          <Story\n            message={message}\n            isProtected={isProtected}\n          />\n        )}\n        {isStoryMention && <StoryMention message={message} />}\n        {contact && (\n          <Contact contact={contact} noUserColors={isOwn} />\n        )}\n        {poll && (\n          <Poll message={message} poll={poll} onSendVote={handleVoteSend} />\n        )}\n        {(giveaway || giveawayResults) && (\n          <Giveaway message={message} />\n        )}\n        {game && (\n          <Game\n            message={message}\n            canAutoLoadMedia={canAutoLoadMedia}\n          />\n        )}\n        {invoice?.extendedMedia && (\n          <InvoiceMediaPreview\n            message={message}\n            isConnected={isConnected}\n          />\n        )}\n\n        {withVoiceTranscription && (\n          <p\n            className={buildClassName(\n              'transcription',\n              !isTranscriptionHidden && isTranscriptionError && 'transcription-error',\n            )}\n            dir=\"auto\"\n          >\n            {(isTranscriptionError ? lang('NoWordsRecognized') : (\n              isTranscribing && transcribedText ? <DotAnimation content={transcribedText} /> : transcribedText\n            ))}\n          </p>\n        )}\n\n        {isInvertedMedia && renderInvertedMediaContent(hasCustomAppendix)}\n\n        {!isInvertedMedia && (\n          <>\n            {renderInvertibleMediaContent(hasCustomAppendix)}\n            {hasText && !hasAnimatedEmoji && (\n              <div className={textContentClass} dir=\"auto\">\n                {renderMessageText()}\n                {isTranslationPending && (\n                  <div className=\"translation-animation\">\n                    <div className=\"text-loading\">\n                      {renderMessageText(true)}\n                    </div>\n                  </div>\n                )}\n                {hasFactCheck && (\n                  <FactCheck factCheck={factCheck} isToggleDisabled={isInSelectMode} />\n                )}\n                {metaPosition === 'in-text' && renderReactionsAndMeta()}\n              </div>\n            )}\n            {renderWebPage()}\n          </>\n        )}\n\n        {invoice && !invoice.extendedMedia && (\n          <Invoice\n            message={message}\n            shouldAffectAppendix={hasCustomAppendix && !hasReactions}\n            isInSelectMode={isInSelectMode}\n            isSelected={isSelected}\n            theme={theme}\n            forcedWidth={contentWidth}\n          />\n        )}\n        {location && (\n          <Location\n            message={message}\n            isInSelectMode={isInSelectMode}\n            isSelected={isSelected}\n            theme={theme}\n            peer={sender}\n          />\n        )}\n      </div>\n    );\n  }\n\n  function renderInvertedMediaContent(hasCustomAppendix: boolean) {\n    const textContentClass = buildClassName(\n      'text-content',\n      'clearfix',\n    );\n    const footerClass = buildClassName(\n      'text-content',\n      'clearfix',\n      metaPosition === 'in-text' && 'with-meta',\n      outgoingStatus && 'with-outgoing-icon',\n    );\n\n    const hasMediaAfterText = isAlbum || (!isAlbum && photo) || (!isAlbum && video && !isRoundVideo);\n    const hasContentAfterText = hasMediaAfterText || (!hasAnimatedEmoji && hasFactCheck);\n    const isMetaInText = metaPosition === 'in-text';\n\n    return (\n      <>\n        {renderWebPage()}\n        {hasText && !hasAnimatedEmoji && (\n          <div className={textContentClass} dir=\"auto\">\n            {renderMessageText()}\n            {isTranslationPending && (\n              <div className=\"translation-animation\">\n                <div className=\"text-loading\">\n                  {renderMessageText(true)}\n                </div>\n              </div>\n            )}\n            {!hasContentAfterText && isMetaInText && renderReactionsAndMeta()}\n          </div>\n        )}\n\n        {hasContentAfterText && (\n          <>\n            {renderInvertibleMediaContent(hasCustomAppendix)}\n            {!hasAnimatedEmoji && (\n              <div className={footerClass} dir=\"auto\">\n                {hasFactCheck && (\n                  <FactCheck factCheck={factCheck} isToggleDisabled={isInSelectMode} />\n                )}\n                {isMetaInText && renderReactionsAndMeta()}\n              </div>\n            )}\n          </>\n        )}\n\n      </>\n    );\n  }\n\n  function renderWebPage() {\n    return webPage && (\n      <WebPage\n        message={message}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        noAvatars={noAvatars}\n        canAutoLoad={canAutoLoadMedia}\n        canAutoPlay={canAutoPlayMedia}\n        asForwarded={asForwarded}\n        isDownloading={isDownloading}\n        isProtected={isProtected}\n        theme={theme}\n        story={webPageStory}\n        isConnected={isConnected}\n        lastPlaybackTimestamp={lastPlaybackTimestamp}\n        backgroundEmojiId={messageColorPeer?.color?.backgroundEmojiId}\n        shouldWarnAboutSvg={shouldWarnAboutSvg}\n        autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n        onAudioPlay={handleAudioPlay}\n        onMediaClick={handleMediaClick}\n        onDocumentClick={handleDocumentClick}\n        onCancelMediaTransfer={handleCancelUpload}\n      />\n    );\n  }\n\n  function renderInvertibleMediaContent(hasCustomAppendix: boolean) {\n    const content = (\n      <>\n        {isAlbum && observeIntersectionForLoading && (\n          <Album\n            album={album!}\n            albumLayout={albumLayout!}\n            observeIntersection={observeIntersectionForLoading}\n            isOwn={isOwn}\n            isProtected={isProtected}\n            hasCustomAppendix={hasCustomAppendix}\n            onMediaClick={handleAlbumMediaClick}\n          />\n        )}\n        {!isAlbum && photo && (\n          <Photo\n            messageText={text?.text}\n            photo={photo}\n            isOwn={isOwn}\n            observeIntersection={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoadMedia}\n            uploadProgress={uploadProgress}\n            shouldAffectAppendix={hasCustomAppendix}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            asForwarded={asForwarded}\n            theme={theme}\n            forcedWidth={contentWidth}\n            onClick={handlePhotoMediaClick}\n            onCancelUpload={handleCancelUpload}\n          />\n        )}\n        {!isAlbum && video && !isRoundVideo && (\n          <Video\n            video={video}\n            isOwn={isOwn}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            forcedWidth={contentWidth}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoadMedia}\n            canAutoPlay={canAutoPlayMedia}\n            uploadProgress={uploadProgress}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            asForwarded={asForwarded}\n            lastPlaybackTimestamp={lastPlaybackTimestamp}\n            onClick={handleVideoMediaClick}\n            onCancelUpload={handleCancelUpload}\n          />\n        )}\n      </>\n    );\n\n    if (paidMedia) {\n      return (\n        <PaidMediaOverlay chatId={chatId} messageId={messageId} paidMedia={paidMedia} isOutgoing={isOwn}>\n          {content}\n        </PaidMediaOverlay>\n      );\n    }\n\n    return content;\n  }\n\n  function shouldRenderSenderName() {\n    const media = photo || video || location || paidMedia;\n    return !(isCustomShape && !viaBotId) && (\n      (withSenderName && (!media || hasTopicChip)) || asForwarded || viaBotId || forceSenderName\n    ) && !isInDocumentGroupNotFirst && !(hasMessageReply && isCustomShape);\n  }\n\n  function renderForwardTitle() {\n    return (\n      <span className=\"forward-title-container\">\n        {asForwarded && (\n          <Icon name={forwardInfo?.hiddenUserName ? 'forward' : 'share-filled'} />\n        )}\n        {asForwarded && (\n          <span className=\"forward-title\">\n            {lang('ForwardedFrom')}\n          </span>\n        )}\n      </span>\n    );\n  }\n\n  function renderSenderName(shouldSkipRenderForwardTitle:boolean = false, shouldSkipRenderAdminTitle: boolean = false) {\n    let senderTitle;\n    let senderColor;\n    if (senderPeer && !(isCustomShape && viaBotId)) {\n      senderTitle = getPeerFullTitle(lang, senderPeer);\n    } else if (forwardInfo?.hiddenUserName) {\n      senderTitle = forwardInfo.hiddenUserName;\n    } else if (storyData && originSender) {\n      senderTitle = getPeerFullTitle(lang, originSender!);\n    }\n    const senderEmojiStatus = senderPeer && 'emojiStatus' in senderPeer && senderPeer.emojiStatus;\n    const senderIsPremium = senderPeer && 'isPremium' in senderPeer && senderPeer.isPremium;\n\n    const shouldRenderForwardAvatar = asForwarded && senderPeer;\n    const hasBotSenderUsername = botSender?.usernames?.length;\n    return (\n      <div className=\"message-title\" dir=\"ltr\">\n        {(senderTitle || asForwarded) ? (\n          <span\n            className={buildClassName(\n              'message-title-name-container',\n              forwardInfo?.hiddenUserName ? 'sender-hidden' : 'interactive',\n              senderColor,\n            )}\n            dir=\"ltr\"\n          >\n            {!shouldSkipRenderForwardTitle && renderForwardTitle()}\n            <span className=\"message-title-name\">\n              {storyData && <Icon name=\"play-story\" />}\n              {shouldRenderForwardAvatar && (\n                <Avatar\n                  className=\"forward-avatar\"\n                  peer={senderPeer}\n                  size=\"micro\"\n                />\n              )}\n              <span\n                className=\"sender-title\"\n                onClick={handleSenderClick}\n              >\n                {senderTitle ? renderText(senderTitle) : (asForwarded ? NBSP : undefined)}\n              </span>\n              {!asForwarded && senderEmojiStatus && (\n                <CustomEmoji\n                  documentId={senderEmojiStatus.documentId}\n                  className=\"no-selection\"\n                  loopLimit={EMOJI_STATUS_LOOP_LIMIT}\n                  observeIntersectionForLoading={observeIntersectionForLoading}\n                  observeIntersectionForPlaying={observeIntersectionForPlaying}\n                />\n              )}\n              {!asForwarded && !senderEmojiStatus && senderIsPremium && <StarIcon />}\n              {senderPeer?.fakeType && <FakeIcon fakeType={senderPeer.fakeType} />}\n            </span>\n          </span>\n        ) : !botSender ? (\n          NBSP\n        ) : undefined}\n        {botSender?.usernames?.length && (\n          <span className=\"interactive\">\n            <span className=\"via\">{lang('ViaBot')}</span>\n            <span\n              className=\"sender-title\"\n              onClick={handleViaBotClick}\n            >\n              {renderText(`@${botSender.usernames[0].username}`)}\n            </span>\n          </span>\n        )}\n        <div className=\"title-spacer\" />\n        {!shouldSkipRenderAdminTitle && !hasBotSenderUsername ? (forwardInfo?.isLinkedChannelPost ? (\n          <span className=\"admin-title\" dir=\"auto\">{lang('DiscussChannel')}</span>\n        ) : message.postAuthorTitle && isGroup && !asForwarded ? (\n          <span className=\"admin-title\" dir=\"auto\">{message.postAuthorTitle}</span>\n        ) : senderAdminMember && !asForwarded && !viaBotId ? (\n          <span className=\"admin-title\" dir=\"auto\">\n            {senderAdminMember.customTitle || lang(\n              senderAdminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin',\n            )}\n          </span>\n        ) : undefined) : undefined}\n        {canShowSenderBoosts && (\n          <span className=\"sender-boosts\" aria-hidden>\n            <Icon name={senderBoosts > 1 ? 'boosts' : 'boost'} />\n            {senderBoosts > 1 ? senderBoosts : undefined}\n          </span>\n        )}\n      </div>\n    );\n  }\n\n  const forwardAuthor = isGroup && asForwarded ? message.postAuthorTitle : undefined;\n\n  return (\n    <div\n      ref={ref}\n      id={getMessageHtmlId(message.id)}\n      className={containerClassName}\n      data-message-id={messageId}\n      onCopy={isProtected ? stopEvent : undefined}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n      onDoubleClick={handleDoubleClick}\n      onMouseEnter={isInDocumentGroupNotLast ? handleDocumentGroupMouseEnter : undefined}\n      onMouseMove={withQuickReactionButton ? handleMouseMove : undefined}\n      onMouseLeave={(withQuickReactionButton || isInDocumentGroupNotLast) ? handleMouseLeave : undefined}\n    >\n      <div\n        ref={bottomMarkerRef}\n        className=\"bottom-marker\"\n        data-message-id={messageId}\n        data-last-message-id={album ? album.messages[album.messages.length - 1].id : undefined}\n        data-album-main-id={album ? album.mainMessage.id : undefined}\n        data-has-unread-mention={message.hasUnreadMention || undefined}\n        data-has-unread-reaction={hasUnreadReaction || undefined}\n        data-is-pinned={isPinned || undefined}\n        data-should-update-views={message.viewsCount !== undefined}\n      />\n      {!isInDocumentGroup && (\n        <div className=\"message-select-control no-selection\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      {isLastInDocumentGroup && (\n        <div\n          className={buildClassName(\n            'message-select-control group-select no-selection', isGroupSelected && 'is-selected',\n          )}\n          onClick={handleDocumentGroupSelectAll}\n        >\n          {isGroupSelected && (\n            <Icon name=\"select\" />\n          )}\n        </div>\n      )}\n      <div\n        className={buildClassName('message-content-wrapper',\n          contentClassName.includes('text') && 'can-select-text',\n          contentClassName.includes('giveaway') && 'giveaway-result-content')}\n      >\n        <div\n          className={contentClassName}\n          style={style}\n          dir=\"auto\"\n        >\n          {asForwarded && !isInDocumentGroupNotFirst && (\n            <>\n              {shouldRenderSenderName() && renderSenderName()}\n              {forwardAuthor && <span className=\"admin-title\" dir=\"auto\">{forwardAuthor}</span>}\n            </>\n          )}\n          {renderContent()}\n          {!isInDocumentGroupNotLast && metaPosition === 'standalone' && !isStoryMention && renderReactionsAndMeta()}\n          {canShowActionButton && (\n            <div className={buildClassName(\n              'message-action-buttons',\n              isLoadingComments && 'message-action-buttons-shown',\n            )}\n            >\n              {withCommentButton && isCustomShape && (\n                <CommentButton\n                  threadInfo={repliesThreadInfo}\n                  disabled={noComments}\n                  isLoading={isLoadingComments}\n                  isCustomShape\n                  asActionButton\n                />\n              )}\n              {canForward && (\n                <Button\n                  className=\"message-action-button\"\n                  color=\"translucent-white\"\n                  round\n                  size=\"tiny\"\n                  ariaLabel={lang('lng_context_forward_msg')}\n                  onClick={isLastInDocumentGroup ? handleGroupForward : handleForward}\n                >\n                  <Icon name=\"share-filled\" />\n                </Button>\n              )}\n              {canFocus && (\n                <Button\n                  className=\"message-action-button\"\n                  color=\"translucent-white\"\n                  round\n                  size=\"tiny\"\n                  ariaLabel=\"Focus message\"\n                  onClick={isPinnedList ? handleFocus : handleFocusForwarded}\n                >\n                  <Icon name=\"arrow-right\" />\n                </Button>\n              )}\n            </div>\n          )}\n          {withCommentButton && !(canShowActionButton && isCustomShape) && (\n            <CommentButton\n              threadInfo={repliesThreadInfo}\n              disabled={noComments}\n              isLoading={isLoadingComments}\n            />\n          )}\n          {withAppendix && <MessageAppendix isOwn={isOwn} />}\n          {withQuickReactionButton && quickReactionPosition === 'in-content' && renderQuickReactionButton()}\n        </div>\n        {message.inlineButtons && (\n          <InlineButtons message={message} onClick={clickBotInlineButton} />\n        )}\n        {reactionsPosition === 'outside' && !isStoryMention && (\n          <Reactions\n            message={reactionMessage!}\n            threadId={threadId}\n            isOutside\n            isCurrentUserPremium={isPremium}\n            maxWidth={reactionsMaxWidth}\n            observeIntersection={observeIntersectionForPlaying}\n            noRecentReactors={isChannel}\n            tags={tags}\n            isAccountFrozen={isAccountFrozen}\n          />\n        )}\n      </div>\n      {contextMenuAnchor && (\n        <ContextMenuContainer\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          targetHref={contextMenuTarget?.matches('a[href]') ? (contextMenuTarget as HTMLAnchorElement).href : undefined}\n          message={message}\n          album={album}\n          messageListType={messageListType}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          repliesThreadInfo={repliesThreadInfo}\n          noReplies={noReplies}\n          detectedLanguage={detectedLanguage}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, ownProps): StateProps => {\n    const {\n      focusedMessage, forwardMessages, activeReactions, activeEmojiInteractions,\n      loadingThread,\n    } = selectTabState(global);\n    const {\n      message, album, withSenderName, withAvatar, threadId, messageListType, isLastInDocumentGroup, isFirstInGroup,\n    } = ownProps;\n    const {\n      id, chatId, viaBotId, isOutgoing, forwardInfo, transcriptionId, isPinned, viaBusinessBotId, effectId,\n      paidMessageStars,\n    } = message;\n\n    const { shouldWarnAboutSvg } = selectSharedSettings(global);\n    const isChatWithUser = isUserId(chatId);\n\n    const chat = selectChat(global, chatId);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isSystemBotChat = isSystemBot(chatId);\n    const isAnonymousForwards = isAnonymousForwardsChat(chatId);\n    const isChannel = chat && isChatChannel(chat);\n    const isGroup = chat && isChatGroup(chat);\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const webPageStoryData = message.content.webPage?.story;\n    const webPageStory = webPageStoryData\n      ? selectPeerStory(global, webPageStoryData.peerId, webPageStoryData.id)\n      : undefined;\n\n    const isForwarding = forwardMessages.messageIds && forwardMessages.messageIds.includes(id);\n    const forceSenderName = !isChatWithSelf && isAnonymousOwnMessage(message);\n    const canShowSender = withSenderName || withAvatar || forceSenderName;\n    const sender = selectSender(global, message);\n    const originSender = selectForwardedSender(global, message);\n    const botSender = viaBotId ? selectUser(global, viaBotId) : undefined;\n    const senderAdminMember = sender?.id && isGroup\n      ? chatFullInfo?.adminMembersById?.[sender?.id]\n      : undefined;\n\n    const isThreadTop = message.id === threadId;\n\n    const { replyToMsgId, replyToPeerId, replyFrom } = getMessageReplyInfo(message) || {};\n    const { peerId: storyReplyPeerId, storyId: storyReplyId } = getStoryReplyInfo(message) || {};\n\n    const shouldHideReply = replyToMsgId && replyToMsgId === threadId;\n    const replyMessage = selectReplyMessage(global, message);\n    const forwardHeader = forwardInfo || replyFrom;\n    const replyMessageSender = replyMessage ? selectSender(global, replyMessage)\n      : forwardHeader && !isSystemBotChat && !isAnonymousForwards\n        ? selectSenderFromHeader(global, forwardHeader) : undefined;\n    const replyMessageForwardSender = replyMessage && selectForwardedSender(global, replyMessage);\n    const replyMessageChat = replyToPeerId ? selectChat(global, replyToPeerId) : undefined;\n    const isReplyPrivate = !isSystemBotChat && !isAnonymousForwards && replyMessageChat\n      && !isChatPublic(replyMessageChat)\n      && (replyMessageChat.isNotJoined || replyMessageChat.isRestricted);\n    const isReplyToTopicStart = replyMessage?.content.action?.type === 'topicCreate';\n    const replyStory = storyReplyId && storyReplyPeerId\n      ? selectPeerStory(global, storyReplyPeerId, storyReplyId)\n      : undefined;\n    const storySender = storyReplyPeerId ? selectPeer(global, storyReplyPeerId) : undefined;\n\n    const uploadProgress = selectUploadProgress(global, message);\n    const isFocused = messageListType === 'thread' && (\n      album\n        ? album.messages.some((m) => selectIsMessageFocused(global, m, threadId))\n        : selectIsMessageFocused(global, message, threadId)\n    );\n\n    const {\n      direction: focusDirection, noHighlight: noFocusHighlight, isResizingContainer,\n      quote: focusedQuote, quoteOffset: focusedQuoteOffset, scrollTargetPosition,\n    } = (isFocused && focusedMessage) || {};\n\n    const middleSearch = selectCurrentMiddleSearch(global);\n    const highlight = middleSearch?.results?.query\n      && `${middleSearch.isHashtag ? '#' : ''}${middleSearch.results.query}`;\n\n    const singleEmoji = getMessageSingleRegularEmoji(message);\n    const animatedEmoji = singleEmoji && selectAnimatedEmoji(global, singleEmoji) ? singleEmoji : undefined;\n    const animatedCustomEmoji = getMessageSingleCustomEmoji(message);\n\n    let isSelected: boolean;\n    if (album?.messages) {\n      isSelected = album.messages.every(({ id: messageId }) => selectIsMessageSelected(global, messageId));\n    } else {\n      isSelected = selectIsMessageSelected(global, id);\n    }\n\n    const canReply = messageListType === 'thread' && selectCanReplyToMessage(global, message, threadId);\n    const activeDownloads = selectActiveDownloads(global);\n    const downloadableMedia = getMessageDownloadableMedia(message);\n    const isDownloading = downloadableMedia && getIsDownloading(activeDownloads, downloadableMedia);\n\n    const repliesThreadInfo = selectThreadInfo(global, chatId, album?.commentsMessage?.id || id);\n\n    const isInDocumentGroup = Boolean(message.groupedId) && !message.isInAlbum;\n    const documentGroupFirstMessageId = isInDocumentGroup\n      ? selectMessageIdsByGroupId(global, chatId, message.groupedId!)![0]\n      : undefined;\n    const reactionMessage = isInDocumentGroup ? (\n      isLastInDocumentGroup ? selectChatMessage(global, chatId, documentGroupFirstMessageId!) : undefined\n    ) : message;\n\n    const hasUnreadReaction = chat?.unreadReactions?.includes(message.id);\n\n    const hasTopicChip = threadId === MAIN_THREAD_ID && chat?.isForum && isFirstInGroup;\n    const messageTopic = hasTopicChip ? selectTopicFromMessage(global, message) : undefined;\n\n    const chatTranslations = selectChatTranslations(global, chatId);\n\n    const requestedTranslationLanguage = selectRequestedMessageTranslationLanguage(global, chatId, message.id);\n    const requestedChatTranslationLanguage = selectRequestedChatTranslationLanguage(global, chatId);\n\n    const areTranslationsEnabled = IS_TRANSLATION_SUPPORTED && global.settings.byKey.canTranslate\n      && !requestedChatTranslationLanguage; // Stop separate language detection if chat translation is requested\n\n    const isConnected = global.connectionState === 'connectionStateReady';\n\n    const hasActiveReactions = Boolean(reactionMessage && activeReactions[getMessageKey(reactionMessage)]?.length);\n\n    const isPremium = selectIsCurrentUserPremium(global);\n    const senderBoosts = sender && selectIsChatWithSelf(global, sender.id)\n      ? (chatFullInfo?.boostsApplied ?? message.senderBoosts) : message.senderBoosts;\n\n    const chatLevel = chat?.boostLevel || 0;\n    const transcribeMinLevel = global.appConfig?.groupTranscribeLevelMin;\n    const canTranscribeVoice = isPremium || Boolean(transcribeMinLevel && chatLevel >= transcribeMinLevel);\n\n    const viaBusinessBot = viaBusinessBotId ? selectUser(global, viaBusinessBotId) : undefined;\n\n    const effect = effectId ? global.availableEffectById[effectId] : undefined;\n\n    const poll = selectPollFromMessage(global, message);\n\n    const maxTimestamp = selectMessageTimestampableDuration(global, message);\n\n    const lastPlaybackTimestamp = selectMessageLastPlaybackTimestamp(global, chatId, message.id);\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n    return {\n      theme: selectTheme(global),\n      forceSenderName,\n      sender,\n      canShowSender,\n      originSender,\n      botSender,\n      shouldHideReply: shouldHideReply || isReplyToTopicStart,\n      isThreadTop,\n      replyMessage,\n      replyMessageSender,\n      replyMessageForwardSender,\n      replyMessageChat,\n      replyStory,\n      isReplyPrivate,\n      storySender,\n      isInDocumentGroup,\n      isProtected: selectIsMessageProtected(global, message),\n      isChatProtected: selectIsChatProtected(global, chatId),\n      isFocused,\n      isForwarding,\n      reactionMessage,\n      isChatWithSelf,\n      isRepliesChat: isSystemBotChat,\n      isAnonymousForwards,\n      isChannel,\n      isGroup,\n      canReply,\n      highlight,\n      animatedEmoji,\n      animatedCustomEmoji,\n      isInSelectMode: selectIsInSelectMode(global),\n      isSelected,\n      isGroupSelected: (\n        Boolean(message.groupedId)\n        && !message.isInAlbum\n        && selectIsDocumentGroupSelected(global, chatId, message.groupedId)\n      ),\n      threadId,\n      isDownloading,\n      isPinnedList: messageListType === 'pinned',\n      isPinned,\n      canAutoLoadMedia: selectCanAutoLoadMedia(global, message),\n      canAutoPlayMedia: selectCanAutoPlayMedia(global, message),\n      autoLoadFileMaxSizeMb: global.settings.byKey.autoLoadFileMaxSizeMb,\n      shouldLoopStickers: selectShouldLoopStickers(global),\n      repliesThreadInfo,\n      availableReactions: global.reactions.availableReactions,\n      defaultReaction: isMessageLocal(message) || messageListType === 'scheduled'\n        ? undefined : selectDefaultReaction(global, chatId),\n      hasActiveReactions,\n      activeEmojiInteractions,\n      hasUnreadReaction,\n      isTranscribing: transcriptionId !== undefined && global.transcriptions[transcriptionId]?.isPending,\n      transcribedText: transcriptionId !== undefined ? global.transcriptions[transcriptionId]?.text : undefined,\n      isPremium,\n      senderAdminMember,\n      messageTopic,\n      hasTopicChip,\n      chatTranslations,\n      areTranslationsEnabled,\n      shouldDetectChatLanguage: selectShouldDetectChatLanguage(global, chatId),\n      requestedTranslationLanguage,\n      requestedChatTranslationLanguage,\n      hasLinkedChat: Boolean(chatFullInfo?.linkedChatId),\n      withAnimatedEffects: selectPerformanceSettingsValue(global, 'stickerEffects'),\n      webPageStory,\n      isConnected,\n      isLoadingComments: repliesThreadInfo?.isCommentsInfo\n        && loadingThread?.loadingChatId === repliesThreadInfo?.originChannelId\n        && loadingThread?.loadingMessageId === repliesThreadInfo?.originMessageId,\n      shouldWarnAboutSvg,\n      ...(isOutgoing && { outgoingStatus: selectOutgoingStatus(global, message, messageListType === 'scheduled') }),\n      ...(typeof uploadProgress === 'number' && { uploadProgress }),\n      ...(isFocused && {\n        focusDirection,\n        noFocusHighlight,\n        isResizingContainer,\n        focusedQuote,\n        focusedQuoteOffset,\n        scrollTargetPosition,\n      }),\n      senderBoosts,\n      tags: global.savedReactionTags?.byKey,\n      canTranscribeVoice,\n      viaBusinessBot,\n      effect,\n      poll,\n      maxTimestamp,\n      lastPlaybackTimestamp,\n      paidMessageStars,\n      isChatWithUser,\n      isAccountFrozen,\n    };\n  },\n)(Message));\n","import { getActions } from '../../../../global';\n\nimport type {\n  ApiMessage, ApiPeer, ApiStory, ApiTopic, ApiUser,\n} from '../../../../api/types';\nimport type { OldLangFn } from '../../../../hooks/useOldLang';\nimport type { IAlbum, ThreadId } from '../../../../types';\nimport { MAIN_THREAD_ID } from '../../../../api/types';\nimport { MediaViewerOrigin } from '../../../../types';\n\nimport { getMessagePhoto, getMessageWebPagePhoto } from '../../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../../global/helpers/replies';\nimport { tryParseDeepLink } from '../../../../util/deepLinkParser';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function useInnerHandlers({\n  lang,\n  selectMessage,\n  message,\n  chatId,\n  threadId,\n  isInDocumentGroup,\n  asForwarded,\n  isScheduled,\n  album,\n  senderPeer,\n  botSender,\n  messageTopic,\n  isTranslatingChat,\n  story,\n  isReplyPrivate,\n  isRepliesChat,\n  isSavedMessages,\n  lastPlaybackTimestamp,\n}: {\n  lang: OldLangFn;\n  selectMessage: (e: React.MouseEvent<HTMLDivElement, MouseEvent>, groupedId?: string) => void;\n  message: ApiMessage;\n  chatId: string;\n  threadId: ThreadId;\n  isInDocumentGroup: boolean;\n  asForwarded?: boolean;\n  isScheduled?: boolean;\n  album?: IAlbum;\n  avatarPeer?: ApiPeer;\n  senderPeer?: ApiPeer;\n  botSender?: ApiUser;\n  messageTopic?: ApiTopic;\n  isTranslatingChat?: boolean;\n  story?: ApiStory;\n  isReplyPrivate?: boolean;\n  isRepliesChat?: boolean;\n  isSavedMessages?: boolean;\n  lastPlaybackTimestamp?: number;\n}) {\n  const {\n    openChat, showNotification, focusMessage, openMediaViewer, openAudioPlayer,\n    markMessagesRead, cancelUploadMedia, sendPollVote, openForwardMenu,\n    openChatLanguageModal, openThread, openStoryViewer, searchChatMediaMessages,\n  } = getActions();\n\n  const {\n    id: messageId, forwardInfo, groupedId, content: { paidMedia, video, webPage },\n  } = message;\n\n  const {\n    replyToMsgId, replyToPeerId, replyToTopId, isQuote, quoteText, quoteOffset,\n  } = getMessageReplyInfo(message) || {};\n\n  const handleSenderClick = useLastCallback(() => {\n    if (!senderPeer) {\n      showNotification({ message: lang('HidAccount') });\n\n      return;\n    }\n\n    if (asForwarded && forwardInfo?.channelPostId) {\n      focusMessage({ chatId: senderPeer.id, messageId: forwardInfo.channelPostId });\n    } else {\n      openChat({ id: senderPeer.id });\n    }\n  });\n\n  const handleViaBotClick = useLastCallback(() => {\n    if (!botSender) {\n      return;\n    }\n\n    openChat({ id: botSender.id });\n  });\n\n  const handleReplyClick = useLastCallback((): void => {\n    if (!replyToMsgId || isReplyPrivate) {\n      showNotification({\n        message: isQuote ? lang('QuotePrivate') : lang('ReplyPrivate'),\n      });\n      return;\n    }\n\n    if (isRepliesChat && replyToPeerId && replyToTopId) {\n      openThread({\n        isComments: true,\n        originChannelId: replyToPeerId,\n        originMessageId: replyToTopId,\n        focusMessageId: replyToMsgId,\n      });\n      return;\n    }\n\n    focusMessage({\n      chatId: replyToPeerId || chatId,\n      threadId: isRepliesChat ? replyToTopId : threadId, // Open comments from Replies bot, otherwise, keep current thread\n      messageId: replyToMsgId,\n      replyMessageId: replyToPeerId ? undefined : messageId,\n      noForumTopicPanel: !replyToPeerId, // Open topic panel for cross-chat replies\n      ...(isQuote && { quote: quoteText?.text, quoteOffset }),\n    });\n  });\n\n  const handleDocumentClick = useLastCallback((): void => {\n    openMediaViewer({\n      chatId,\n      threadId,\n      messageId,\n      origin: isScheduled ? MediaViewerOrigin.ScheduledInline : MediaViewerOrigin.Inline,\n    });\n  });\n\n  const openMediaViewerWithPhotoOrVideo = useLastCallback((withDynamicLoading: boolean): void => {\n    if (paidMedia && !paidMedia.isBought) return;\n    if (withDynamicLoading) {\n      searchChatMediaMessages({ chatId, threadId, currentMediaMessageId: messageId });\n    }\n\n    const parsedLink = webPage?.url && tryParseDeepLink(webPage.url);\n\n    const videoContent = video || webPage?.video;\n    const webpageTimestamp = parsedLink && 'timestamp' in parsedLink ? parsedLink.timestamp : undefined;\n\n    openMediaViewer({\n      chatId,\n      threadId,\n      messageId,\n      origin: isScheduled ? MediaViewerOrigin.ScheduledInline : MediaViewerOrigin.Inline,\n      timestamp: lastPlaybackTimestamp || videoContent?.timestamp || webpageTimestamp,\n      withDynamicLoading,\n    });\n  });\n  const handlePhotoMediaClick = useLastCallback((): void => {\n    const withDynamicLoading = !isScheduled && !paidMedia;\n    openMediaViewerWithPhotoOrVideo(withDynamicLoading);\n  });\n  const handleVideoMediaClick = useLastCallback(() => {\n    const isGif = message.content?.video?.isGif;\n    const withDynamicLoading = !isGif && !isScheduled && !paidMedia;\n    openMediaViewerWithPhotoOrVideo(withDynamicLoading);\n  });\n\n  const handleMediaClick = useLastCallback((): void => {\n    const photo = getMessagePhoto(message) || getMessageWebPagePhoto(message);\n    if (photo) {\n      handlePhotoMediaClick();\n    }\n\n    handleVideoMediaClick();\n  });\n\n  const handleAudioPlay = useLastCallback((): void => {\n    openAudioPlayer({ chatId, messageId });\n  });\n\n  const handleAlbumMediaClick = useLastCallback((albumMessageId: number, albumIndex?: number): void => {\n    if (paidMedia && !paidMedia.isBought) return;\n\n    searchChatMediaMessages({ chatId, threadId, currentMediaMessageId: messageId });\n    openMediaViewer({\n      chatId,\n      threadId,\n      messageId: albumMessageId,\n      mediaIndex: albumIndex,\n      origin: isScheduled ? MediaViewerOrigin.ScheduledAlbum : MediaViewerOrigin.Album,\n      withDynamicLoading: !paidMedia,\n    });\n  });\n\n  const handleReadMedia = useLastCallback((): void => {\n    markMessagesRead({ messageIds: [messageId] });\n  });\n\n  const handleCancelUpload = useLastCallback(() => {\n    cancelUploadMedia({ chatId, messageId });\n  });\n\n  const handleVoteSend = useLastCallback((options: string[]) => {\n    sendPollVote({ chatId, messageId, options });\n  });\n\n  const handleGroupForward = useLastCallback(() => {\n    openForwardMenu({ fromChatId: chatId, groupedId });\n  });\n\n  const handleForward = useLastCallback(() => {\n    if (album && album.messages) {\n      const messageIds = album.messages.map(({ id }) => id);\n      openForwardMenu({ fromChatId: chatId, messageIds });\n    } else {\n      openForwardMenu({ fromChatId: chatId, messageIds: [messageId] });\n    }\n  });\n\n  const handleFocus = useLastCallback(() => {\n    focusMessage({\n      chatId, threadId: MAIN_THREAD_ID, messageId,\n    });\n  });\n\n  const handleFocusForwarded = useLastCallback(() => {\n    const originalChatId = (isSavedMessages && forwardInfo!.savedFromPeerId) || forwardInfo!.fromChatId!;\n\n    if (isInDocumentGroup) {\n      focusMessage({\n        chatId: originalChatId, groupedId, groupedChatId: chatId, messageId: forwardInfo!.fromMessageId!,\n      });\n      return;\n    }\n\n    if (replyToPeerId && replyToTopId) {\n      if (isRepliesChat) {\n        openThread({\n          isComments: true,\n          originChannelId: replyToPeerId,\n          originMessageId: replyToTopId,\n          focusMessageId: forwardInfo!.fromMessageId!,\n        });\n      } else {\n        focusMessage({\n          chatId: replyToPeerId,\n          threadId: replyToTopId,\n          messageId: forwardInfo!.fromMessageId!,\n        });\n      }\n    } else {\n      focusMessage({\n        chatId: originalChatId, messageId: forwardInfo!.fromMessageId!,\n      });\n    }\n  });\n\n  const selectWithGroupedId = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    selectMessage(e, groupedId);\n  });\n\n  const handleTranslationClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    openChatLanguageModal({ chatId, messageId: !isTranslatingChat ? messageId : undefined });\n  });\n\n  const handleOpenThread = useLastCallback(() => {\n    openThread({\n      chatId: message.chatId,\n      threadId: message.id,\n    });\n  });\n\n  const handleTopicChipClick = useLastCallback(() => {\n    if (!messageTopic) return;\n    focusMessage({\n      chatId: replyToPeerId || chatId,\n      threadId: messageTopic.id,\n      messageId,\n    });\n  });\n\n  const handleStoryClick = useLastCallback(() => {\n    if (!story) return;\n    openStoryViewer({\n      peerId: story.peerId,\n      storyId: story.id,\n      isSingleStory: true,\n    });\n  });\n\n  return {\n    handleSenderClick,\n    handleViaBotClick,\n    handleReplyClick,\n    handleDocumentClick,\n    handleMediaClick,\n    handleAudioPlay,\n    handleAlbumMediaClick,\n    handlePhotoMediaClick,\n    handleVideoMediaClick,\n    handleMetaClick: selectWithGroupedId,\n    handleTranslationClick,\n    handleOpenThread,\n    handleReadMedia,\n    handleCancelUpload,\n    handleVoteSend,\n    handleGroupForward,\n    handleForward,\n    handleFocus,\n    handleFocusForwarded,\n    handleDocumentGroupSelectAll: selectWithGroupedId,\n    handleTopicChipClick,\n    handleStoryClick,\n  };\n}\n","import { useEffect, useState } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport { detectLanguage } from '../util/languageDetection';\n\nexport default function useTextLanguage(text?: string, isDisabled?: boolean, getIsReady?: Signal<boolean>) {\n  const [language, setLanguage] = useState<string | undefined>();\n\n  useEffect(() => {\n    if (isDisabled || (getIsReady && !getIsReady())) return;\n\n    if (text) {\n      detectLanguage(text).then(setLanguage);\n    } else {\n      setLanguage(undefined);\n    }\n  }, [isDisabled, text, getIsReady]);\n\n  return language;\n}\n","import type { ApiMessage, ApiPoll } from '../../../../api/types';\nimport type { IAlbum } from '../../../../types';\n\nimport { EMOJI_SIZES, MESSAGE_CONTENT_CLASS_NAME } from '../../../../config';\nimport { getMessageContent } from '../../../../global/helpers';\nimport getSingularPaidMedia from './getSingularPaidMedia';\n\nexport function buildContentClassName(\n  message: ApiMessage,\n  album?: IAlbum,\n  {\n    poll,\n    hasSubheader,\n    isCustomShape,\n    isLastInGroup,\n    asForwarded,\n    hasThread,\n    forceSenderName,\n    hasCommentCounter,\n    hasCommentButton,\n    hasActionButton,\n    hasReactions,\n    isGeoLiveActive,\n    withVoiceTranscription,\n    peerColorClass,\n    hasOutsideReactions,\n  }: {\n    poll?: ApiPoll;\n    hasSubheader?: boolean;\n    isCustomShape?: boolean | number;\n    isLastInGroup?: boolean;\n    asForwarded?: boolean;\n    hasThread?: boolean;\n    forceSenderName?: boolean;\n    hasCommentCounter?: boolean;\n    hasCommentButton?: boolean;\n    hasActionButton?: boolean;\n    hasReactions?: boolean;\n    isGeoLiveActive?: boolean;\n    withVoiceTranscription?: boolean;\n    peerColorClass?: string;\n    hasOutsideReactions?: boolean;\n  } = {},\n) {\n  const { paidMedia } = getMessageContent(message);\n  const { photo: paidMediaPhoto, video: paidMediaVideo } = getSingularPaidMedia(paidMedia);\n\n  const content = getMessageContent(message);\n  const {\n    photo = paidMediaPhoto, video = paidMediaVideo,\n    audio, voice, document, webPage, contact, location, invoice, storyData,\n    giveaway, giveawayResults,\n  } = content;\n  const text = album?.hasMultipleCaptions ? undefined : getMessageContent(album?.captionMessage || message).text;\n  const hasFactCheck = Boolean(message.factCheck?.text);\n\n  const isRoundVideo = video?.mediaType === 'video' && video.isRound;\n  const isInvertedMedia = message.isInvertedMedia;\n  const isInvertibleMedia = photo || (video && !isRoundVideo) || album || webPage;\n\n  const classNames = [MESSAGE_CONTENT_CLASS_NAME];\n  const isMedia = storyData || photo || video || location || invoice?.extendedMedia || paidMedia;\n  const hasText = text || location?.mediaType === 'venue' || isGeoLiveActive || hasFactCheck;\n  const isMediaWithNoText = isMedia && !hasText;\n  const hasInlineKeyboard = Boolean(message.inlineButtons);\n  const isViaBot = Boolean(message.viaBotId);\n\n  const hasFooter = (() => {\n    if (isInvertedMedia && isInvertibleMedia) {\n      if (hasReactions && !hasOutsideReactions) return true;\n      if (hasFactCheck) return true;\n      if (webPage && hasText) return true;\n      return false;\n    }\n    return hasText;\n  })();\n\n  if (peerColorClass) {\n    classNames.push(peerColorClass);\n  }\n\n  if (!isMedia && message.emojiOnlyCount) {\n    classNames.push('emoji-only');\n    if (message.emojiOnlyCount <= EMOJI_SIZES) {\n      classNames.push(`emoji-only-${message.emojiOnlyCount}`);\n    }\n  } else if (hasText) {\n    classNames.push('text');\n  } else {\n    classNames.push('no-text');\n  }\n\n  if (!Object.keys(content).length) {\n    classNames.push('unsupported');\n  }\n\n  if (hasActionButton) {\n    classNames.push('has-action-button');\n  }\n\n  if (isCustomShape) {\n    classNames.push('custom-shape');\n\n    if (isRoundVideo) {\n      classNames.push('round');\n    }\n\n    if (hasCommentCounter) {\n      classNames.push('has-comment-counter');\n    }\n  }\n  if (isMedia && !withVoiceTranscription) {\n    classNames.push('media');\n  } else if (video) {\n    classNames.push('video');\n  } else if (audio) {\n    classNames.push('audio');\n  } else if (voice) {\n    classNames.push('voice');\n    if (withVoiceTranscription) {\n      classNames.push('with-voice-transcription');\n    }\n  } else if (document) {\n    classNames.push('document');\n  } else if (contact) {\n    classNames.push('contact');\n  } else if (poll) {\n    classNames.push('poll');\n  } else if (giveaway || giveawayResults) {\n    classNames.push('giveaway');\n  } else if (webPage) {\n    classNames.push('web-page');\n\n    if (webPage.photo || webPage.video) {\n      classNames.push('media');\n    }\n\n    if (webPage.document) {\n      classNames.push('document');\n    }\n\n    if (webPage.gift) {\n      classNames.push('gift');\n    }\n  }\n\n  if (invoice && !invoice.extendedMedia) {\n    classNames.push('invoice');\n  }\n\n  if (invoice && invoice.photo) {\n    classNames.push('has-photo');\n  }\n\n  if (storyData) {\n    classNames.push('story');\n  }\n\n  if (asForwarded) {\n    classNames.push('is-forwarded');\n  }\n\n  if (hasSubheader) {\n    classNames.push('has-subheader');\n  }\n\n  if (hasThread) {\n    classNames.push('has-replies');\n  }\n\n  if (hasReactions) {\n    classNames.push('has-reactions');\n  }\n\n  if (hasOutsideReactions) {\n    classNames.push('has-outside-reactions');\n  }\n\n  if (isViaBot) {\n    classNames.push('is-via-bot');\n  }\n\n  if (forceSenderName) {\n    classNames.push('force-sender-name');\n  }\n\n  if (!isCustomShape) {\n    classNames.push('has-shadow');\n\n    if (isMedia && hasThread) {\n      classNames.push('has-background');\n    }\n\n    if (hasSubheader || asForwarded || isViaBot || !isMediaWithNoText\n      || forceSenderName || hasFactCheck || withVoiceTranscription) {\n      classNames.push('has-solid-background');\n    }\n\n    if (hasFactCheck) {\n      classNames.push('has-fact-check');\n    }\n\n    if (isLastInGroup && !hasInlineKeyboard && (photo || !isMediaWithNoText || hasCommentButton)) {\n      classNames.push('has-appendix');\n    }\n  }\n\n  if (isInvertibleMedia && isInvertedMedia) {\n    classNames.push('is-inverted-media');\n  }\n\n  if (hasFooter) {\n    classNames.push('has-footer');\n  } else {\n    classNames.push('no-footer');\n  }\n\n  return classNames.join(' ');\n}\n","import React from '../../../lib/teact/teact';\n\ninterface OwnProps {\n  isOwn?: boolean;\n}\n\nfunction MessageAppendix({ isOwn } : OwnProps) {\n  const path = isOwn\n    ? 'M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z'\n    : 'M3 17h6V0c-.193 2.84-.876 5.767-2.05 8.782-.904 2.325-2.446 4.485-4.625 6.48A1 1 0 003 17z';\n  return (\n    <svg width=\"9\" height=\"20\" className=\"svg-appendix\">\n      <defs>\n        <filter x=\"-50%\" y=\"-14.7%\" width=\"200%\" height=\"141.2%\" filterUnits=\"objectBoundingBox\" id=\"messageAppendix\">\n          <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n          <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n          <feColorMatrix\n            values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n            in=\"shadowBlurOuter1\"\n          />\n        </filter>\n      </defs>\n      <g fill=\"none\" fill-rule=\"evenodd\">\n        <path d={path} fill=\"#000\" filter=\"url(#messageAppendix)\" />\n        <path d={path} fill={isOwn ? '#EEFFDE' : 'FFF'} className=\"corner\" />\n      </g>\n    </svg>\n  );\n}\n\nexport default MessageAppendix;\n","// extracted by mini-css-extract-plugin\nexport default {\"anchor\":\"IYu2f7FM\",\"mirrorAnchor\":\"GsTZawTE\",\"root\":\"McmbiWZE\",\"mirror\":\"wNvU2uqi\"};","import React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableEffect } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { type ObserveFn, useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOverlayPosition from './hooks/useOverlayPosition';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport Portal from '../../ui/Portal';\n\nimport styles from './MessageEffect.module.scss';\n\ntype OwnProps = {\n  messageId?: number;\n  isMirrored?: boolean;\n  effect: ApiAvailableEffect;\n  shouldPlay?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onStop?: VoidFunction;\n};\n\nconst EFFECT_SIZE = 256;\n\nconst MessageEffect = ({\n  messageId,\n  isMirrored,\n  effect,\n  shouldPlay,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onStop,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const anchorRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const canLoad = useIsIntersecting(anchorRef, observeIntersectionForLoading);\n  const canPlay = useIsIntersecting(anchorRef, observeIntersectionForPlaying);\n\n  const [isPlaying, startPlaying, stopPlaying] = useFlag();\n  const [isPositionUpdateRequired, requirePositionUpdate, resetPositionUpdate] = useFlag();\n\n  const effectHash = getEffectHash(effect);\n  const effectBlob = useMedia(effectHash, !canLoad);\n\n  const handleEnded = useLastCallback(() => {\n    stopPlaying();\n    onStop?.();\n  });\n\n  const updatePosition = useOverlayPosition({\n    anchorRef,\n    overlayRef: ref,\n    isMirrored,\n    isDisabled: !isPlaying,\n    isForMessageEffect: true,\n    id: effect.id,\n  });\n\n  useEffect(() => {\n    if (isPositionUpdateRequired) updatePosition();\n    resetPositionUpdate();\n  }, [updatePosition, resetPositionUpdate, isPositionUpdateRequired]);\n\n  useEffect(() => {\n    if (canPlay && shouldPlay && effectBlob) {\n      startPlaying();\n      requirePositionUpdate();\n    }\n  }, [canPlay, effectBlob, shouldPlay, updatePosition]);\n\n  const effectClassName = buildClassName(\n    styles.root,\n    isMirrored && styles.mirror,\n  );\n\n  return (\n    <div className={buildClassName(styles.anchor, isMirrored && styles.mirrorAnchor)} ref={anchorRef}>\n      {isPlaying && (\n        <Portal>\n          <AnimatedSticker\n            ref={ref}\n            key={`effect-${messageId ?? effect.id}`}\n            className={effectClassName}\n            tgsUrl={effectBlob}\n            size={EFFECT_SIZE}\n            play\n            isLowPriority\n            noLoop\n            forceAlways\n            onEnded={handleEnded}\n          />\n        </Portal>\n      )}\n    </div>\n  );\n};\n\nfunction getEffectHash(effect: ApiAvailableEffect) {\n  if (effect.effectAnimationId) {\n    return `sticker${effect.effectAnimationId}`;\n  }\n\n  return `sticker${effect.effectStickerId}?size=f`;\n}\n\nexport default memo(MessageEffect);\n","import React, { useEffect, useRef, useState } from '../../../lib/teact/teact';\n\nimport type { ApiMediaExtendedPreview, ApiPhoto } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ThemeKey } from '../../../types';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  getMediaFormat, getMediaThumbUri, getMediaTransferState, getPhotoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\nimport { calculateMediaDimensions, MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  photo: ApiPhoto | ApiMediaExtendedPreview;\n  isInWebPage?: boolean;\n  messageText?: string;\n  isOwn?: boolean;\n  observeIntersection?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  size?: 'inline' | 'pictogram';\n  shouldAffectAppendix?: boolean;\n  dimensions?: IMediaDimensions & { isSmall?: boolean };\n  asForwarded?: boolean;\n  nonInteractive?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  theme: ThemeKey;\n  className?: string;\n  clickArg?: T;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst Photo = <T,>({\n  id,\n  photo,\n  messageText,\n  isOwn,\n  observeIntersection,\n  noAvatars,\n  canAutoLoad,\n  isInSelectMode,\n  isSelected,\n  uploadProgress,\n  forcedWidth,\n  size = 'inline',\n  dimensions,\n  asForwarded,\n  nonInteractive,\n  shouldAffectAppendix,\n  isDownloading,\n  isProtected,\n  theme,\n  isInWebPage,\n  clickArg,\n  className,\n  onClick,\n  onCancelUpload,\n}: OwnProps<T>) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isPaidPreview = photo.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? photo.blobUrl : undefined;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = isLoadAllowed && isIntersecting && !isPaidPreview;\n  const {\n    mediaData, loadProgress,\n  } = useMediaWithLoadProgress(!isPaidPreview ? getPhotoMediaHash(photo, size) : undefined, !shouldLoad);\n  const fullMediaData = localBlobUrl || mediaData;\n\n  const withBlurredBackground = Boolean(forcedWidth);\n  const [withThumb] = useState(!fullMediaData);\n  const noThumb = Boolean(fullMediaData);\n  const thumbRef = useBlurredMediaThumbRef(photo, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const blurredBackgroundRef = useBlurredMediaThumbRef(photo, !withBlurredBackground);\n  const thumbDataUri = getMediaThumbUri(photo);\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(isPaidPreview || photo.isSpoiler);\n\n  useEffect(() => {\n    if (isPaidPreview || photo.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [isPaidPreview, photo]);\n\n  const {\n    loadProgress: downloadProgress,\n  } = useMediaWithLoadProgress(\n    !isPaidPreview ? getPhotoMediaHash(photo, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(photo, 'download') : undefined,\n  );\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    shouldLoad && !fullMediaData,\n    uploadProgress !== undefined,\n  );\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring,\n    noMountTransition: wasLoadDisabled,\n    className: 'slow',\n    withShouldRender: true,\n  });\n  const {\n    ref: downloadButtonRef,\n    shouldRender: shouldRenderDownloadButton,\n  } = useShowTransition({\n    isOpen: !fullMediaData && !isLoadAllowed,\n    withShouldRender: true,\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n    if (fullMediaData) {\n      const messageId = Number(contentEl.closest<HTMLDivElement>('.Message')!.dataset.messageId);\n      getCustomAppendixBg(fullMediaData, Boolean(isOwn), messageId, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    } else {\n      contentEl.classList.add('has-appendix-thumb');\n    }\n  }, [shouldAffectAppendix, fullMediaData, isOwn, isInSelectMode, isSelected, theme]);\n\n  const { width, height, isSmall } = dimensions || calculateMediaDimensions({\n    media: photo,\n    isOwn,\n    asForwarded,\n    noAvatars,\n    isMobile,\n    messageText,\n    isInWebPage,\n  });\n\n  const componentClassName = buildClassName(\n    'media-inner',\n    !isUploading && !nonInteractive && 'interactive',\n    isSmall && 'small-image',\n    (width === height || size === 'pictogram') && 'square-image',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = size === 'inline' ? `height: ${height}px;${dimensionsStyle}` : undefined;\n\n  return (\n    <div\n      id={id}\n      ref={ref}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {fullMediaData && (\n        <img\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          alt=\"\"\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n          draggable={!isProtected}\n        />\n      )}\n      {withThumb && (\n        <canvas ref={thumbRef} className=\"thumbnail\" />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      {shouldRenderSpinner && !shouldRenderDownloadButton && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner progress={transferProgress} onClick={isUploading ? handleClick : undefined} />\n        </div>\n      )}\n      {shouldRenderDownloadButton && <Icon ref={downloadButtonRef} name=\"download\" />}\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {isTransferring && (\n        <span className=\"message-transfer-progress\">{Math.round(transferProgress * 100)}%</span>\n      )}\n    </div>\n  );\n};\n\nexport default Photo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useEffect, useLayoutEffect,\n  useRef, useSignal, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport {\n  getMediaFormat,\n  getMessageMediaThumbDataUri,\n  getVideoMediaHash,\n  hasMessageTtl,\n} from '../../../global/helpers';\nimport { stopCurrentAudio } from '../../../util/audioPlayer';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport safePlay from '../../../util/safePlay';\nimport { ROUND_VIDEO_DIMENSIONS_PX } from '../../common/helpers/mediaDimensions';\n\nimport { useThrottledSignal } from '../../../hooks/useAsyncResolvers';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport Button from '../../ui/Button';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './RoundVideo.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  className?: string;\n  canAutoLoad?: boolean;\n  isDownloading?: boolean;\n  origin?: 'oneTimeModal';\n  observeIntersection?: ObserveFn;\n  onStop?: NoneToVoidFunction;\n  onReadMedia?: NoneToVoidFunction;\n  onHideTranscription?: (isHidden: boolean) => void;\n  isTranscriptionError?: boolean;\n  canTranscribe?: boolean;\n  isTranscribed?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscribing?: boolean;\n};\n\nconst PROGRESS_CENTER = ROUND_VIDEO_DIMENSIONS_PX / 2;\nconst PROGRESS_MARGIN = 6;\nconst PROGRESS_CIRCUMFERENCE = (PROGRESS_CENTER - PROGRESS_MARGIN) * 2 * Math.PI;\nconst PROGRESS_THROTTLE = 16; // Min period needed for `playerEl.currentTime` to update\n\nlet stopPrevious: NoneToVoidFunction;\n\nconst RoundVideo: FC<OwnProps> = ({\n  message,\n  className,\n  canAutoLoad,\n  isDownloading,\n  origin,\n  observeIntersection,\n  onStop,\n  onReadMedia,\n  isTranscriptionError,\n  isTranscribed,\n  canTranscribe,\n  onHideTranscription,\n  isTranscriptionHidden,\n  isTranscribing,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const playerRef = useRef<HTMLVideoElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const circleRef = useRef<SVGCircleElement>(null);\n\n  const { cancelMediaDownload, openOneTimeMediaModal, transcribeAudio } = getActions();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const video = message.content.video!;\n  const isMediaUnread = message.isMediaUnread;\n\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersecting);\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'inline'),\n    !shouldLoad,\n    getMediaFormat(video, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'download'),\n    !isDownloading,\n    ApiMediaFormat.BlobUrl,\n  );\n\n  const [isPlayerReady, markPlayerReady] = useFlag();\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === 'oneTimeModal';\n  const shouldRenderSpoiler = hasTtl && !isInOneTimeModal;\n  const hasThumb = Boolean(getMessageMediaThumbDataUri(message));\n  const noThumb = !hasThumb || isPlayerReady || shouldRenderSpoiler;\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const isTransferring = (isLoadAllowed && !isPlayerReady) || isDownloading;\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring,\n    noMountTransition: wasLoadDisabled,\n    withShouldRender: true,\n  });\n\n  const [isActivated, setIsActivated] = useState(false);\n\n  const [getProgress, setProgress] = useSignal(0);\n  const getThrottledProgress = useThrottledSignal(getProgress, PROGRESS_THROTTLE);\n\n  useEffect(() => {\n    if (!isActivated) {\n      return;\n    }\n\n    const playerEl = playerRef.current!;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  }, [setProgress, isActivated, getThrottledProgress]);\n\n  useLayoutEffect(() => {\n    if (!isActivated || !circleRef.current) {\n      return;\n    }\n\n    const strokeDashOffset = PROGRESS_CIRCUMFERENCE - getThrottledProgress() * PROGRESS_CIRCUMFERENCE;\n    circleRef.current.setAttribute('stroke-dashoffset', strokeDashOffset.toString());\n  }, [isActivated, getThrottledProgress]);\n\n  const shouldPlay = Boolean(mediaData && isIntersecting);\n\n  const stopPlaying = useLastCallback(() => {\n    if (!playerRef.current) {\n      return;\n    }\n\n    setIsActivated(false);\n    setProgress(0);\n    safePlay(playerRef.current);\n  });\n\n  const capturePlaying = useLastCallback(() => {\n    stopPrevious?.();\n    stopPrevious = stopPlaying;\n  });\n\n  const togglePlaying = useLastCallback(() => {\n    const playerEl = playerRef.current!;\n    if (isActivated) {\n      if (playerEl.paused) {\n        safePlay(playerEl);\n        stopCurrentAudio();\n      } else {\n        playerEl.pause();\n      }\n    } else {\n      capturePlaying();\n      // Pause is a workaround for iOS Safari – otherwise it stops video after several frames\n      playerEl.pause();\n      playerEl.currentTime = 0;\n      safePlay(playerEl);\n      stopCurrentAudio();\n      setIsActivated(true);\n    }\n  });\n\n  useEffect(() => {\n    if (!isInOneTimeModal) {\n      return;\n    }\n    togglePlaying();\n  }, [isInOneTimeModal]);\n\n  const handleClick = useLastCallback((event) => {\n    if (event.target.closest('.transcribe-button')) {\n      return;\n    }\n\n    if (!mediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (hasTtl && !isInOneTimeModal) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    togglePlaying();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && isActivated) {\n      onReadMedia();\n    }\n  }, [isActivated, isMediaUnread, onReadMedia]);\n\n  const handleTimeUpdate = useLastCallback((e: React.UIEvent<HTMLVideoElement>) => {\n    const playerEl = e.currentTarget;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  function renderPlayWrapper() {\n    return (\n      <div className=\"play-wrapper\">\n        <Button\n          color=\"dark\"\n          round\n          size=\"smaller\"\n          className=\"play\"\n          nonInteractive\n        >\n          <Icon name=\"play\" />\n        </Button>\n        <Icon name=\"view-once\" />\n      </div>\n    );\n  }\n\n  const handleButtonClick = useLastCallback(() => {\n    if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n      onHideTranscription(!isTranscriptionHidden);\n    } else if (!isTranscribing) {\n      handleTranscribe();\n    }\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName('RoundVideo', 'media-inner', isInOneTimeModal && 'non-interactive', className)}\n      onClick={handleClick}\n    >\n      {mediaData && (\n        <div className=\"video-wrapper\">\n          {shouldRenderSpoiler && (\n            <MediaSpoiler\n              isVisible\n              thumbDataUri={thumbDataUri}\n              width={ROUND_VIDEO_DIMENSIONS_PX}\n              height={ROUND_VIDEO_DIMENSIONS_PX}\n              className=\"media-spoiler\"\n            />\n          )}\n          <OptimizedVideo\n            canPlay={shouldPlay}\n            ref={playerRef}\n            src={mediaData}\n            className=\"full-media\"\n            width={ROUND_VIDEO_DIMENSIONS_PX}\n            height={ROUND_VIDEO_DIMENSIONS_PX}\n            autoPlay={!shouldRenderSpoiler}\n            disablePictureInPicture\n            muted={!isActivated}\n            defaultMuted\n            loop={!isActivated}\n            playsInline\n            isPriority\n            onEnded={isActivated ? onStop ?? stopPlaying : undefined}\n            onTimeUpdate={isActivated ? handleTimeUpdate : undefined}\n            onReady={markPlayerReady}\n          />\n        </div>\n      )}\n      {!shouldRenderSpoiler && (\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n          style={`width: ${ROUND_VIDEO_DIMENSIONS_PX}px; height: ${ROUND_VIDEO_DIMENSIONS_PX}px`}\n        />\n      )}\n      <div className=\"progress\">\n        {isActivated && (\n          <svg width={ROUND_VIDEO_DIMENSIONS_PX} height={ROUND_VIDEO_DIMENSIONS_PX}>\n            <circle\n              ref={circleRef}\n              cx={PROGRESS_CENTER}\n              cy={PROGRESS_CENTER}\n              r={PROGRESS_CENTER - PROGRESS_MARGIN}\n              className=\"progress-circle\"\n              transform={`rotate(-90, ${PROGRESS_CENTER}, ${PROGRESS_CENTER})`}\n              stroke-dasharray={PROGRESS_CIRCUMFERENCE}\n              stroke-dashoffset={PROGRESS_CIRCUMFERENCE}\n            />\n          </svg>\n        )}\n      </div>\n      {shouldRenderSpinner && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner progress={isDownloading ? downloadProgress : loadProgress} />\n        </div>\n      )}\n      {shouldRenderSpoiler && !shouldRenderSpinner && renderPlayWrapper()}\n      {!mediaData && !isLoadAllowed && (\n        <Icon name=\"download\" />\n      )}\n      {!isInOneTimeModal && (\n        <div\n          className={buildClassName(\n            'message-media-duration', isMediaUnread && 'unread',\n          )}\n        >\n          {isActivated ? formatMediaDuration(playerRef.current!.currentTime) : formatMediaDuration(video.duration)}\n          {(!isActivated || playerRef.current!.paused) && <Icon name=\"muted\" />}\n        </div>\n      )}\n      {canTranscribe && (\n        <Button\n          onClick={handleButtonClick}\n          className=\"transcribe-button\"\n        >\n          {isTranscribed || isTranscriptionError ? <Icon name=\"down\" /> : <Icon name=\"transcribe\" />}\n          {isTranscribing && (\n            <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n              <rect\n                className=\"loading-rect\"\n                fill=\"transparent\"\n                width=\"32\"\n                height=\"24\"\n                stroke-width=\"3\"\n                stroke-linejoin=\"round\"\n                rx=\"6\"\n                ry=\"6\"\n                stroke=\"white\"\n                stroke-dashoffset=\"1\"\n                stroke-dasharray=\"32,68\"\n              />\n            </svg>\n          )}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default RoundVideo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { IAnchorPosition } from '../../../types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './MessageContextMenu.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  anchor: IAnchorPosition;\n  sponsorInfo?: string;\n  canReport?: boolean;\n  triggerRef: React.RefObject<HTMLElement>;\n  shouldSkipAbout?: boolean;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  onAboutAdsClick: NoneToVoidFunction;\n  onSponsoredHide: NoneToVoidFunction;\n  onSponsorInfo?: NoneToVoidFunction;\n  onSponsoredReport?: NoneToVoidFunction;\n};\n\nconst SponsoredContextMenu: FC<OwnProps> = ({\n  isOpen,\n  sponsorInfo,\n  canReport,\n  anchor,\n  triggerRef,\n  shouldSkipAbout,\n  onClose,\n  onCloseAnimationEnd,\n  onAboutAdsClick,\n  onSponsoredHide,\n  onSponsorInfo,\n  onSponsoredReport,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getRootElement = useLastCallback(() => document.body);\n\n  const isSeparatorNeeded = sponsorInfo || !shouldSkipAbout || canReport;\n\n  return (\n    <Menu\n      ref={menuRef}\n      isOpen={isOpen}\n      anchor={anchor}\n      withPortal\n      className=\"with-menu-transitions\"\n      getLayout={getLayout}\n      getTriggerElement={getTriggerElement}\n      getMenuElement={getMenuElement}\n      getRootElement={getRootElement}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {sponsorInfo && onSponsorInfo && (\n        <MenuItem icon=\"channel\" onClick={onSponsorInfo}>{lang('SponsoredMessageSponsor')}</MenuItem>\n      )}\n      {!shouldSkipAbout && (\n        <MenuItem icon=\"info\" onClick={onAboutAdsClick}>\n          {lang(canReport ? 'AboutRevenueSharingAds' : 'SponsoredMessageInfo')}\n        </MenuItem>\n      )}\n      {canReport && onSponsoredReport && (\n        <MenuItem icon=\"hand-stop\" onClick={onSponsoredReport}>\n          {lang('ReportAd')}\n        </MenuItem>\n      )}\n      {isSeparatorNeeded && <MenuSeparator />}\n      <MenuItem icon=\"close-circle\" onClick={onSponsoredHide}>\n        {lang('HideAd')}\n      </MenuItem>\n    </Menu>\n  );\n};\n\nexport default memo(SponsoredContextMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { IAnchorPosition } from '../../../types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport SponsoredContextMenu from './SponsoredContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  randomId: string;\n  sponsorInfo?: string;\n  additionalInfo?: string;\n  canReport?: boolean;\n  anchor: IAnchorPosition;\n  triggerRef: React.RefObject<HTMLElement>;\n  shouldSkipAbout?: boolean;\n  onItemClick?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\nconst SponsoredMessageContextMenuContainer: FC<OwnProps> = ({\n  isOpen,\n  randomId,\n  sponsorInfo,\n  additionalInfo,\n  canReport,\n  anchor,\n  triggerRef,\n  shouldSkipAbout,\n  onItemClick,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    openAboutAdsModal,\n    showDialog,\n    reportSponsored,\n    hideSponsored,\n  } = getActions();\n\n  const { ref } = useShowTransition({\n    isOpen,\n    onCloseAnimationEnd,\n  });\n\n  const handleItemClick = useLastCallback(() => {\n    onItemClick?.();\n    onClose();\n  });\n\n  const handleAboutAdsOpen = useLastCallback(() => {\n    openAboutAdsModal({\n      randomId,\n      additionalInfo,\n      canReport,\n      sponsorInfo,\n    });\n    handleItemClick();\n  });\n\n  const handleSponsoredHide = useLastCallback(() => {\n    hideSponsored();\n    handleItemClick();\n  });\n\n  const handleSponsorInfo = useLastCallback(() => {\n    showDialog({\n      data: {\n        message: [sponsorInfo, additionalInfo].filter(Boolean).join('\\n'),\n      },\n    });\n    handleItemClick();\n  });\n\n  const handleReportSponsoredMessage = useLastCallback(() => {\n    reportSponsored({ randomId });\n    handleItemClick();\n  });\n\n  if (!anchor) {\n    return undefined;\n  }\n\n  return (\n    <div ref={ref} className=\"ContextMenuContainer\">\n      <SponsoredContextMenu\n        isOpen={isOpen}\n        anchor={anchor}\n        triggerRef={triggerRef}\n        canReport={canReport}\n        sponsorInfo={sponsorInfo}\n        shouldSkipAbout={shouldSkipAbout}\n        onClose={onClose}\n        onCloseAnimationEnd={onClose}\n        onAboutAdsClick={handleAboutAdsOpen}\n        onSponsoredHide={handleSponsoredHide}\n        onSponsorInfo={handleSponsorInfo}\n        onSponsoredReport={handleReportSponsoredMessage}\n      />\n    </div>\n  );\n};\n\nexport default memo(SponsoredMessageContextMenuContainer);\n","import React, { useEffect, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaExtendedPreview, ApiVideo } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport {\n  getMediaFormat, getMediaThumbUri, getMediaTransferState, getVideoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { calculateExtendedPreviewDimensions, calculateVideoDimensions } from '../../common/helpers/mediaDimensions';\nimport { MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useUnsupportedMedia from '../../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  video: ApiVideo | ApiMediaExtendedPreview;\n  lastPlaybackTimestamp?: number;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  dimensions?: IMediaDimensions;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  className?: string;\n  clickArg?: T;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst Video = <T,>({\n  id,\n  video,\n  isOwn,\n  isInWebPage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  uploadProgress,\n  forcedWidth,\n  dimensions,\n  asForwarded,\n  isDownloading,\n  isProtected,\n  className,\n  lastPlaybackTimestamp,\n  clickArg,\n  onClick,\n  onCancelUpload,\n}: OwnProps<T>) => {\n  const { cancelMediaDownload } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const isPaidPreview = video.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? video.blobUrl : undefined;\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(isPaidPreview || video.isSpoiler);\n\n  useEffect(() => {\n    if (isPaidPreview || video.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [isPaidPreview, video]);\n\n  const isIntersectingForLoading = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isIntersectingForPlaying = (\n    useIsIntersecting(ref, observeIntersectionForPlaying)\n    && isIntersectingForLoading\n  );\n  const wasIntersectedRef = useRef(isIntersectingForLoading);\n  if (isIntersectingForPlaying && !wasIntersectedRef.current) {\n    wasIntersectedRef.current = true;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersectingForLoading && !isPaidPreview);\n  const [isPlayAllowed, setIsPlayAllowed] = useState(Boolean(canAutoPlay && !isSpoilerShown));\n\n  const fullMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'inline') : undefined;\n  const [isFullMediaPreloaded] = useState(Boolean(fullMediaHash && mediaLoader.getFromMemory(fullMediaHash)));\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    fullMediaHash,\n    !shouldLoad,\n    !isPaidPreview ? getMediaFormat(video, 'inline') : undefined,\n  );\n  const fullMediaData = localBlobUrl || mediaData;\n  const [isPlayerReady, markPlayerReady] = useFlag();\n\n  const thumbDataUri = getMediaThumbUri(video);\n  const hasThumb = Boolean(thumbDataUri);\n  const withBlurredBackground = Boolean(forcedWidth);\n\n  const isInline = fullMediaData && wasIntersectedRef.current;\n\n  const isUnsupported = useUnsupportedMedia(videoRef, true, !isInline);\n\n  const previewMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'preview') : undefined;\n  const [isPreviewPreloaded] = useState(Boolean(previewMediaHash && mediaLoader.getFromMemory(previewMediaHash)));\n  const canLoadPreview = isIntersectingForLoading;\n  const previewBlobUrl = useMedia(previewMediaHash, !canLoadPreview);\n  const shouldHidePreview = isPlayerReady && !isUnsupported;\n  const previewRef = useMediaTransition<HTMLImageElement>((hasThumb || previewBlobUrl) && !shouldHidePreview);\n\n  const noThumb = Boolean(!hasThumb || previewBlobUrl || isPlayerReady);\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const blurredBackgroundRef = useBlurredMediaThumbRef(video, !withBlurredBackground);\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    !isPaidPreview ? getVideoMediaHash(video, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(video, 'download') : undefined,\n  );\n\n  const { isUploading, isTransferring, transferProgress } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    (shouldLoad && !isPlayerReady && !isFullMediaPreloaded) || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring && !isUnsupported,\n    noMountTransition: wasLoadDisabled,\n    withShouldRender: true,\n  });\n  const {\n    ref: playButtonRef,\n  } = useShowTransition({\n    isOpen: Boolean((isLoadAllowed || fullMediaData) && !isPlayAllowed && !shouldRenderSpinner),\n  });\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    setPlayProgress(Math.max(0, e.currentTarget.currentTime - 1));\n  });\n\n  const duration = (Number.isFinite(videoRef.current?.duration) && !isUnsupported\n    ? videoRef.current?.duration : video.duration) || 0;\n\n  const {\n    width, height,\n  } = dimensions || (\n    isPaidPreview\n      ? calculateExtendedPreviewDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n      : calculateVideoDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n  );\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>, isFromSpinner?: boolean) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!isPaidPreview && isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (fullMediaData && !isPlayAllowed) {\n      setIsPlayAllowed(true);\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    if (isFromSpinner && shouldLoad && !isPlayerReady && !isFullMediaPreloaded) {\n      setIsLoadAllowed(false);\n      e.stopPropagation();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  const handleClickOnSpinner = useLastCallback(\n    (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n      handleClick(e, true);\n    },\n  );\n\n  const componentClassName = buildClassName(\n    'media-inner dark',\n    !isUploading && 'interactive',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = `height: ${height}px;${dimensionsStyle}`;\n\n  return (\n    <div\n      ref={ref}\n      id={id}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : (e) => handleClick(e)}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {isInline && (\n        <OptimizedVideo\n          ref={videoRef}\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          canPlay={isPlayAllowed && isIntersectingForPlaying && !isUnsupported}\n          defaultMuted\n          muted\n          loop\n          playsInline\n          disablePictureInPicture\n          draggable={!isProtected}\n          onTimeUpdate={handleTimeUpdate}\n          onReady={markPlayerReady}\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        />\n      )}\n      <img\n        ref={previewRef}\n        src={previewBlobUrl}\n        className={buildClassName('thumbnail', withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px;` : undefined}\n        draggable={!isProtected}\n      />\n      {hasThumb && !isPreviewPreloaded && (\n        <canvas ref={thumbRef} className=\"thumbnail\" />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      <Icon ref={playButtonRef} name=\"large-play\" />\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {shouldRenderSpinner && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner\n            progress={transferProgress}\n            onClick={handleClickOnSpinner}\n          />\n        </div>\n      )}\n      {!isLoadAllowed && !fullMediaData && (\n        <Icon name=\"download\" />\n      )}\n      {isTransferring && (!isUnsupported || isDownloading) ? (\n        <span className=\"message-transfer-progress\">\n          {(isUploading || isDownloading) ? `${Math.round(transferProgress * 100)}%` : '...'}\n        </span>\n      ) : (\n        <div className=\"message-media-duration\">\n          {!isPaidPreview && video.isGif ? 'GIF' : formatMediaDuration(Math.max(duration - playProgress, 0))}\n          {isUnsupported && <Icon name=\"message-failed\" className=\"playback-failed\" />}\n        </div>\n      )}\n      {Boolean(lastPlaybackTimestamp) && (\n        <div\n          className=\"message-media-last-progress\"\n          style={`--_progress: ${Math.floor((lastPlaybackTimestamp / duration) * 100)}%`}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Video;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"LaOdPURl\",\"backgroundWrapper\":\"zDnMa37m\",\"background\":\"EdXfeKWY\",\"stickerWrapper\":\"o_DYZEMV\"};","import React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiStarGiftUnique } from '../../../api/types';\n\nimport { getGiftAttributes } from '../../common/helpers/gifts';\n\nimport { type ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport RadialPatternBackground from '../../common/profile/RadialPatternBackground';\nimport StickerView from '../../common/StickerView';\n\nimport styles from './WebPageUniqueGift.module.scss';\n\ntype OwnProps = {\n  gift: ApiStarGiftUnique;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst STAR_GIFT_STICKER_SIZE = 120;\n\nconst WebPageUniqueGift = ({\n  gift,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const stickerRef = useRef<HTMLDivElement>(null);\n  const {\n    backdrop, model, pattern,\n  } = getGiftAttributes(gift)!;\n\n  const backgroundColors = [backdrop!.centerColor, backdrop!.edgeColor];\n\n  return (\n    <div\n      className={styles.root}\n      onClick={onClick}\n    >\n      <div className={styles.backgroundWrapper}>\n        <RadialPatternBackground\n          className={styles.background}\n          backgroundColors={backgroundColors}\n          patternColor={backdrop!.patternColor}\n          patternIcon={pattern!.sticker}\n        />\n      </div>\n      <div ref={stickerRef} className={styles.stickerWrapper}>\n        <StickerView\n          containerRef={stickerRef}\n          sticker={model!.sticker}\n          size={STAR_GIFT_STICKER_SIZE}\n          observeIntersectionForPlaying={observeIntersectionForPlaying}\n          observeIntersectionForLoading={observeIntersectionForLoading}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(WebPageUniqueGift);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage, ApiTypeStory } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { AudioOrigin, type ThemeKey } from '../../../types';\n\nimport { getMessageWebPage } from '../../../global/helpers';\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { tryParseDeepLink } from '../../../util/deepLinkParser';\nimport trimText from '../../../util/trimText';\nimport renderText from '../../common/helpers/renderText';\nimport { calculateMediaDimensions } from './helpers/mediaDimensions';\nimport { getWebpageButtonLangKey } from './helpers/webpageType';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Audio from '../../common/Audio';\nimport Document from '../../common/Document';\nimport EmojiIconBackground from '../../common/embedded/EmojiIconBackground';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport SafeLink from '../../common/SafeLink';\nimport StickerView from '../../common/StickerView';\nimport Button from '../../ui/Button';\nimport BaseStory from './BaseStory';\nimport Photo from './Photo';\nimport Video from './Video';\nimport WebPageUniqueGift from './WebPageUniqueGift';\n\nimport './WebPage.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\nconst WEBPAGE_STORY_TYPE = 'telegram_story';\nconst WEBPAGE_GIFT_TYPE = 'telegram_nft';\nconst STICKER_SIZE = 80;\nconst EMOJI_SIZE = 38;\n\ntype OwnProps = {\n  message: ApiMessage;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  inPreview?: boolean;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n  backgroundEmojiId?: string;\n  theme: ThemeKey;\n  story?: ApiTypeStory;\n  shouldWarnAboutSvg?: boolean;\n  autoLoadFileMaxSizeMb?: number;\n  lastPlaybackTimestamp?: number;\n  isEditing?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onAudioPlay?: NoneToVoidFunction;\n  onMediaClick?: NoneToVoidFunction;\n  onDocumentClick?: NoneToVoidFunction;\n  onCancelMediaTransfer?: NoneToVoidFunction;\n  onContainerClick?: ((e: React.MouseEvent) => void);\n};\ntype StateProps = {\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst WebPage: FC<OwnProps & StateProps> = ({\n  message,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  inPreview,\n  asForwarded,\n  isDownloading = false,\n  isProtected,\n  isConnected,\n  story,\n  theme,\n  backgroundEmojiId,\n  shouldWarnAboutSvg,\n  autoLoadFileMaxSizeMb,\n  lastPlaybackTimestamp,\n  isEditing,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onMediaClick,\n  onDocumentClick,\n  onContainerClick,\n  onAudioPlay,\n  onCancelMediaTransfer,\n}) => {\n  const { openUrl, openTelegramLink } = getActions();\n  const webPage = getMessageWebPage(message);\n  const { isMobile } = useAppLayout();\n  // eslint-disable-next-line no-null/no-null\n  const stickersRef = useRef<HTMLDivElement>(null);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const handleMediaClick = useLastCallback(() => {\n    onMediaClick!();\n  });\n\n  const handleContainerClick = useLastCallback((e: React.MouseEvent) => {\n    onContainerClick?.(e);\n  });\n\n  const handleOpenTelegramLink = useLastCallback(() => {\n    if (!webPage) return;\n\n    openTelegramLink({\n      url: webPage.url,\n    });\n  });\n\n  const { story: storyData, stickers } = webPage || {};\n\n  useEnsureStory(storyData?.peerId, storyData?.id, story);\n\n  const hasCustomColor = stickers?.isWithTextColor || stickers?.documents?.[0]?.shouldUseTextColor;\n  const customColor = useDynamicColorListener(stickersRef, undefined, !hasCustomColor);\n\n  const linkTimestamp = useMemo(() => {\n    const parsedLink = webPage?.url && tryParseDeepLink(webPage?.url);\n    if (!parsedLink || !('timestamp' in parsedLink)) return undefined;\n    return parsedLink.timestamp;\n  }, [webPage?.url]);\n\n  if (!webPage) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    photo,\n    video,\n    audio,\n    type,\n    document,\n    mediaSize,\n  } = webPage;\n  const isStory = type === WEBPAGE_STORY_TYPE;\n  const isGift = type === WEBPAGE_GIFT_TYPE;\n  const isExpiredStory = story && 'isDeleted' in story;\n\n  const resultType = stickers?.isEmoji ? 'telegram_emojiset' : type;\n  const quickButtonLangKey = !inPreview && !isExpiredStory ? getWebpageButtonLangKey(resultType) : undefined;\n  const quickButtonTitle = quickButtonLangKey && lang(quickButtonLangKey);\n\n  const truncatedDescription = trimText(description, MAX_TEXT_LENGTH);\n  const isArticle = Boolean(truncatedDescription || title || siteName);\n  let isSquarePhoto = Boolean(stickers);\n  if (isArticle && webPage?.photo && !webPage.video && !webPage.document) {\n    const { width, height } = calculateMediaDimensions({\n      media: webPage.photo,\n      isOwn: message.isOutgoing,\n      isInWebPage: true,\n      asForwarded,\n      noAvatars,\n      isMobile,\n    });\n    isSquarePhoto = (width === height || mediaSize === 'small') && mediaSize !== 'large';\n  }\n  const isMediaInteractive = (photo || video) && onMediaClick && !isSquarePhoto;\n\n  const className = buildClassName(\n    'WebPage',\n    inPreview && 'in-preview',\n    !isEditing && inPreview && 'interactive',\n    isSquarePhoto && 'with-square-photo',\n    !photo && !video && !inPreview && 'without-media',\n    video && 'with-video',\n    !isArticle && 'no-article',\n    document && 'with-document',\n    quickButtonTitle && 'with-quick-button',\n    isGift && 'with-gift',\n  );\n\n  function renderQuickButton(caption: string) {\n    return (\n      <Button\n        className=\"WebPage--quick-button\"\n        size=\"tiny\"\n        color=\"translucent\"\n        isRectangular\n        noForcedUpperCase\n        onClick={handleOpenTelegramLink}\n      >\n        {caption}\n      </Button>\n    );\n  }\n\n  return (\n    <PeerColorWrapper\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={oldLang.isRtl ? 'rtl' : 'auto'}\n      onClick={handleContainerClick}\n    >\n      <div className={buildClassName(\n        'WebPage--content',\n        isStory && 'is-story',\n        isGift && 'is-gift',\n      )}\n      >\n        {backgroundEmojiId && (\n          <EmojiIconBackground\n            emojiDocumentId={backgroundEmojiId}\n            className=\"WebPage--background-icons\"\n          />\n        )}\n        {isStory && (\n          <BaseStory story={story} isProtected={isProtected} isConnected={isConnected} isPreview />\n        )}\n        {isGift && !inPreview && (\n          <WebPageUniqueGift\n            gift={webPage.gift!}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            onClick={handleOpenTelegramLink}\n          />\n        )}\n        {isArticle && (\n          <div\n            className={buildClassName('WebPage-text', !inPreview && 'WebPage-text_interactive')}\n            onClick={!inPreview ? () => openUrl({ url, shouldSkipModal: true }) : undefined}\n          >\n            <SafeLink className=\"site-name\" url={url} text={siteName || displayUrl} />\n            {(!inPreview || isGift) && title && (\n              <p className=\"site-title\">{renderText(title)}</p>\n            )}\n            {truncatedDescription && !isGift && (\n              <p className=\"site-description\">{renderText(truncatedDescription, ['emoji', 'br'])}</p>\n            )}\n          </div>\n        )}\n        {photo && !isGift && !video && !document && (\n          <Photo\n            photo={photo}\n            isOwn={message.isOutgoing}\n            isInWebPage\n            observeIntersection={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            size={isSquarePhoto ? 'pictogram' : 'inline'}\n            asForwarded={asForwarded}\n            nonInteractive={!isMediaInteractive}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            theme={theme}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && video && (\n          <Video\n            video={video}\n            isOwn={message.isOutgoing}\n            isInWebPage\n            observeIntersectionForLoading={observeIntersectionForLoading!}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            canAutoPlay={canAutoPlay}\n            asForwarded={asForwarded}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            lastPlaybackTimestamp={lastPlaybackTimestamp || linkTimestamp}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && audio && (\n          <Audio\n            theme={theme}\n            message={message}\n            origin={AudioOrigin.Inline}\n            noAvatars={noAvatars}\n            isDownloading={isDownloading}\n            onPlay={onAudioPlay}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && document && (\n          <Document\n            document={document}\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n            onMediaClick={onDocumentClick}\n            onCancelUpload={onCancelMediaTransfer}\n            isDownloading={isDownloading}\n            shouldWarnAboutSvg={shouldWarnAboutSvg}\n          />\n        )}\n        {!inPreview && stickers && (\n          <div\n            ref={stickersRef}\n            className={buildClassName(\n              'media-inner', 'square-image', stickers.isEmoji && 'WebPage--emoji-grid', 'WebPage--stickers',\n            )}\n          >\n            {stickers.documents.map((sticker) => (\n              <div key={sticker.id} className=\"WebPage--sticker\">\n                <StickerView\n                  containerRef={stickersRef}\n                  sticker={sticker}\n                  shouldLoop\n                  size={stickers.isEmoji ? EMOJI_SIZE : STICKER_SIZE}\n                  customColor={customColor}\n                  observeIntersectionForPlaying={observeIntersectionForPlaying}\n                  observeIntersectionForLoading={observeIntersectionForLoading}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n        {inPreview && displayUrl && !isArticle && (\n          <div className=\"WebPage-text\">\n            <p className=\"site-name\">{displayUrl}</p>\n            <p className=\"site-description\">{oldLang('Chat.Empty.LinkPreview')}</p>\n          </div>\n        )}\n      </div>\n      {quickButtonTitle && renderQuickButton(quickButtonTitle)}\n    </PeerColorWrapper>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(WebPage));\n","import type { RegularLangKey } from '../../../../types/language';\n\n// https://github.com/telegramdesktop/tdesktop/blob/3da787791f6d227f69b32bf4003bc6071d05e2ac/Telegram/SourceFiles/history/view/history_view_view_button.cpp#L51\nexport function getWebpageButtonLangKey(type?: string): RegularLangKey | undefined {\n  switch (type) {\n    case 'telegram_channel_request':\n    case 'telegram_megagroup_request':\n    case 'telegram_chat_request':\n      return 'ViewButtonRequestJoin';\n    case 'telegram_message':\n      return 'ViewButtonMessage';\n    case 'telegram_bot':\n      return 'ViewButtonBot';\n    case 'telegram_voicechat':\n      return 'ViewButtonVoiceChat';\n    case 'telegram_livestream':\n      return 'ViewButtonVoiceChatChannel';\n    case 'telegram_megagroup':\n    case 'telegram_chat':\n      return 'ViewButtonGroup';\n    case 'telegram_channel':\n      return 'ViewButtonChannel';\n    case 'telegram_user':\n      return 'ViewButtonUser';\n    case 'telegram_botapp':\n      return 'ViewButtonBotApp';\n    case 'telegram_chatlist':\n      return 'ViewChatList';\n    case 'telegram_story':\n      return 'ViewButtonStory';\n    case 'telegram_channel_boost':\n    case 'telegram_group_boost':\n      return 'ViewButtonBoost';\n    case 'telegram_stickerset':\n      return 'ViewButtonStickerset';\n    case 'telegram_emojiset':\n      return 'ViewButtonEmojiset';\n    case 'telegram_nft':\n      return 'ViewButtonGiftUnique';\n    default:\n      return undefined;\n  }\n}\n","import type { ThemeKey } from '../../../../types';\n\nimport { MAX_WORKERS, requestMediaWorker } from '../../../../util/launchMediaWorkers';\n\nconst SELECTED_APPENDIX_COLORS = {\n  dark: {\n    outgoing: 'rgb(135,116,225)',\n    incoming: 'rgb(33,33,33)',\n  },\n  light: {\n    outgoing: 'rgb(238,255,222)',\n    incoming: 'rgb(255,255,255)',\n  },\n};\n\nexport default function getCustomAppendixBg(\n  src: string, isOwn: boolean, id: number, isSelected?: boolean, theme?: ThemeKey,\n) {\n  if (isSelected) {\n    return Promise.resolve(SELECTED_APPENDIX_COLORS[theme || 'light'][isOwn ? 'outgoing' : 'incoming']);\n  }\n\n  return requestMediaWorker({\n    name: 'offscreen-canvas:getAppendixColorFromImage',\n    args: [src, isOwn],\n  }, Math.round(id) % MAX_WORKERS);\n}\n","import type { ApiMediaExtendedPreview, ApiPhoto, ApiVideo } from '../../../../api/types';\n\nimport {\n  calculateExtendedPreviewDimensions,\n  calculateInlineImageDimensions,\n  calculateVideoDimensions,\n  REM,\n} from '../../../common/helpers/mediaDimensions';\n\nconst SMALL_IMAGE_THRESHOLD = 12;\nconst MIN_MESSAGE_LENGTH_FOR_BLUR = 40;\nexport const MIN_MEDIA_WIDTH_WITH_TEXT = 20 * REM;\nconst MIN_MEDIA_WIDTH = SMALL_IMAGE_THRESHOLD * REM;\nexport const MIN_MEDIA_HEIGHT = 5 * REM;\n\nexport function getMinMediaWidth(text?: string, hasCommentButton?: boolean) {\n  return (text?.length ?? 0) > MIN_MESSAGE_LENGTH_FOR_BLUR || hasCommentButton\n    ? MIN_MEDIA_WIDTH_WITH_TEXT\n    : MIN_MEDIA_WIDTH;\n}\n\nexport function calculateMediaDimensions({\n  media,\n  messageText,\n  isOwn,\n  isInWebPage,\n  asForwarded,\n  noAvatars,\n  isMobile,\n} : {\n  media: ApiPhoto | ApiVideo | ApiMediaExtendedPreview;\n  messageText?: string;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  asForwarded?: boolean;\n  noAvatars?: boolean;\n  isMobile?: boolean;\n}) {\n  const isPhoto = media.mediaType === 'photo';\n  const isVideo = media.mediaType === 'video';\n  const isWebPagePhoto = isPhoto && isInWebPage;\n  const isWebPageVideo = isVideo && isInWebPage;\n  const { width, height } = isPhoto\n    ? calculateInlineImageDimensions(media, isOwn, asForwarded, isWebPagePhoto, noAvatars, isMobile)\n    : isVideo ? calculateVideoDimensions(media, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile)\n      : calculateExtendedPreviewDimensions(media, isOwn, asForwarded, isInWebPage, noAvatars, isMobile);\n\n  const minMediaWidth = getMinMediaWidth(messageText);\n\n  let stretchFactor = 1;\n  if (width < minMediaWidth && minMediaWidth - width < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = minMediaWidth / width;\n  }\n  if (height * stretchFactor < MIN_MEDIA_HEIGHT && MIN_MEDIA_HEIGHT - height * stretchFactor < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = MIN_MEDIA_HEIGHT / height;\n  }\n\n  const finalWidth = Math.round(width * stretchFactor);\n  const finalHeight = Math.round(height * stretchFactor);\n\n  return {\n    width: finalWidth,\n    height: finalHeight,\n    isSmall: finalWidth < minMediaWidth || finalHeight < MIN_MEDIA_HEIGHT,\n  };\n}\n","import { useLayoutEffect, useMemo, useRef } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport cycleRestrict from '../util/cycleRestrict';\nimport { preloadImage } from '../util/files';\nimport { MAX_WORKERS, requestMediaWorker } from '../util/launchMediaWorkers';\nimport useLastCallback from './useLastCallback';\n\nconst RADIUS_RATIO = 0.1; // Use 10% of the smallest dimension as the blur radius\n\nlet lastWorkerIndex = -1;\n\nexport default function useOffscreenCanvasBlur(\n  thumbData?: string, // data URI or blob URL\n  isDisabled = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const workerIndex = useMemo(() => cycleRestrict(MAX_WORKERS, ++lastWorkerIndex), []);\n  const offscreenRef = useRef<OffscreenCanvas>();\n\n  const blurThumb = useLastCallback(async (canvas: HTMLCanvasElement, uri: string) => {\n    const image = await preloadImage(uri);\n    if (!image) {\n      return;\n    }\n\n    requestMutation(() => {\n      canvas.width = image.width;\n      canvas.height = image.height;\n\n      offscreenRef.current = canvas.transferControlToOffscreen();\n\n      const radius = Math.ceil(Math.min(image.width, image.height) * RADIUS_RATIO);\n\n      requestMediaWorker({\n        name: 'offscreen-canvas:blurThumb',\n        args: [offscreenRef.current, uri, radius],\n        transferables: [offscreenRef.current],\n      }, workerIndex);\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!thumbData || isDisabled || offscreenRef.current) return;\n\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    blurThumb(canvas, thumbData);\n  }, [blurThumb, isDisabled, thumbData]);\n\n  return canvasRef;\n}\n","import { getMediaThumbUri, type MediaWithThumbs } from '../../../../global/helpers';\n\nimport useOffscreenCanvasBlur from '../../../../hooks/useOffscreenCanvasBlur';\n\ntype CanvasBlurReturnType = ReturnType<typeof useOffscreenCanvasBlur>;\n\nexport default function useBlurredMediaThumbRef(\n  forcedUri: string | undefined, isDisabled: boolean,\n): CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(media: MediaWithThumbs, isDisabled?: boolean) : CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(\n  media: MediaWithThumbs | string | undefined,\n  isDisabled?: boolean,\n) {\n  const dataUri = media ? typeof media === 'string' ? media : getMediaThumbUri(media) : undefined;\n\n  return useOffscreenCanvasBlur(dataUri, isDisabled);\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ChatTranslatedMessages } from '../../../../types';\n\nimport { throttle } from '../../../../util/schedulers';\n\nconst MESSAGE_LIMIT_PER_REQUEST = 20;\nconst THROTTLE_DELAY = 500;\nconst PENDING_TRANSLATIONS = new Map<string, Map<string, number[]>>();\n\nexport default function useMessageTranslation(\n  chatTranslations: ChatTranslatedMessages | undefined,\n  chatId?: string,\n  messageId?: number,\n  requestedLanguageCode?: string,\n) {\n  const messageTranslation = requestedLanguageCode && messageId\n    ? chatTranslations?.byLangCode[requestedLanguageCode]?.[messageId] : undefined;\n\n  const { isPending, text } = messageTranslation || {};\n\n  useEffect(() => {\n    if (!chatId || !messageId) return;\n\n    if (!text && isPending === undefined && requestedLanguageCode) {\n      addPendingTranslation(chatId, messageId, requestedLanguageCode);\n    }\n  }, [chatId, text, isPending, messageId, requestedLanguageCode]);\n\n  if (!chatId || !messageId) {\n    return {\n      isPending: false,\n      translatedText: undefined,\n    };\n  }\n\n  return {\n    isPending,\n    translatedText: text,\n  };\n}\n\nconst throttledProcessPending = throttle(processPending, THROTTLE_DELAY);\n\nfunction processPending() {\n  const { translateMessages } = getActions();\n  let hasUnprocessed = false;\n  PENDING_TRANSLATIONS.forEach((chats, toLanguageCode) => {\n    chats.forEach((messageIds, chatId) => {\n      const messageIdsToTranslate = messageIds.slice(0, MESSAGE_LIMIT_PER_REQUEST);\n\n      if (messageIdsToTranslate.length < messageIds.length) {\n        hasUnprocessed = true;\n      }\n\n      translateMessages({ chatId, messageIds: messageIdsToTranslate, toLanguageCode });\n\n      removePendingTranslations(chatId, messageIdsToTranslate, toLanguageCode);\n    });\n  });\n\n  if (hasUnprocessed) {\n    throttledProcessPending();\n  }\n}\n\nfunction addPendingTranslation(\n  chatId: string,\n  messageId: number,\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode) || new Map<string, number[]>();\n  const messageIds = languageTranslations.get(chatId) || [];\n\n  if (messageIds.includes(messageId)) {\n    throttledProcessPending();\n    return;\n  }\n\n  messageIds.push(messageId);\n  languageTranslations.set(chatId, messageIds);\n  PENDING_TRANSLATIONS.set(toLanguageCode, languageTranslations);\n\n  getActions().markMessagesTranslationPending({ chatId, messageIds, toLanguageCode });\n\n  throttledProcessPending();\n}\n\nfunction removePendingTranslations(\n  chatId: string,\n  messageIds: number[],\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode);\n  if (!languageTranslations?.size) {\n    PENDING_TRANSLATIONS.delete(toLanguageCode);\n    return;\n  }\n\n  const oldMessageIds = languageTranslations.get(chatId);\n  if (!oldMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    return;\n  }\n\n  const newMessageIds = oldMessageIds.filter((id) => !messageIds.includes(id));\n\n  if (!newMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    if (!languageTranslations.size) {\n      PENDING_TRANSLATIONS.delete(toLanguageCode);\n    }\n    return;\n  }\n\n  languageTranslations.set(chatId, newMessageIds);\n}\n","import { type RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst OFFSET_X = REM;\n\nexport default function useOverlayPosition({\n  anchorRef,\n  overlayRef,\n  isMirrored,\n  isForMessageEffect,\n  isDisabled,\n  id,\n} : {\n  anchorRef: RefObject<HTMLDivElement>;\n  overlayRef: RefObject<HTMLDivElement>;\n  isMirrored?: boolean;\n  isForMessageEffect?: boolean;\n  isDisabled?: boolean;\n  id?: string;\n}) {\n  const updatePosition = useLastCallback(() => {\n    const element = overlayRef.current;\n    const anchor = anchorRef.current;\n    if (!element || !anchor) {\n      return;\n    }\n\n    const anchorRect = anchor.getBoundingClientRect();\n    const elementRect = element.getBoundingClientRect();\n    const windowWidth = window.innerWidth;\n\n    requestMutation(() => {\n      const anchorCenterY = anchorRect.top + anchorRect.height / 2;\n      const anchorBottomY = anchorRect.bottom;\n      const y = isForMessageEffect ? anchorBottomY : anchorCenterY;\n      element.style.top = `${y - elementRect.height / 2}px`;\n\n      if (isMirrored) {\n        element.style.left = `${anchorRect.left - OFFSET_X}px`;\n      } else {\n        element.style.right = `${windowWidth - anchorRect.right - OFFSET_X}px`;\n      }\n    });\n  });\n\n  useEffect(() => {\n    if (isDisabled) return;\n    updatePosition();\n  }, [isDisabled, id]);\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const messagesContainer = anchorRef.current!.closest<HTMLDivElement>('.MessageList')!;\n    if (!messagesContainer) return undefined;\n\n    messagesContainer.addEventListener('scroll', updatePosition, { passive: true });\n\n    return () => {\n      messagesContainer.removeEventListener('scroll', updatePosition);\n    };\n  }, [isDisabled, anchorRef]);\n\n  return updatePosition;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectCurrentChat, selectUser } from '../../global/selectors';\nimport renderText from '../common/helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  userId?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  contactName?: string;\n};\n\nconst DeleteMemberModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  userId,\n  contactName,\n  onClose,\n}) => {\n  const { deleteChatMember } = getActions();\n\n  const lang = useOldLang();\n\n  const handleDeleteChatMember = useCallback(() => {\n    deleteChatMember({ chatId: chat!.id, userId: userId! });\n    onClose();\n  }, [chat, deleteChatMember, onClose, userId]);\n\n  if (!chat || !userId) {\n    return undefined;\n  }\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('GroupRemoved.Remove')}\n      textParts={renderText(lang('PeerInfo.Confirm.RemovePeer', contactName))}\n      confirmLabel={lang('lng_box_remove')}\n      confirmHandler={handleDeleteChatMember}\n      confirmIsDestructive\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const chat = selectCurrentChat(global);\n    const user = userId && selectUser(global, userId);\n    const contactName = user ? getUserFirstOrLastName(user) : undefined;\n\n    return {\n      chat,\n      contactName,\n    };\n  },\n)(DeleteMemberModal));\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay! > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Gi8Nokbl\",\"header\":\"H01lE7mv\",\"title\":\"VQbs04hT\",\"caption\":\"X7bBlGdi\",\"table\":\"s5beXqqL\",\"tableCell\":\"gvrp3KoR\",\"tableHeading\":\"IHb3ZATQ\",\"tableValue\":\"zAPFdKbZ\",\"tableSecondaryValue\":\"_mYEmh_u\",\"value\":\"idLrmbhS\",\"negative\":\"SLfwGHQC\",\"decimalPart\":\"ZAfXkuWL\",\"decimalUsdPart\":\"HRXb_S2M\",\"toncoin\":\"it39BC_c\"};","import type { ReactNode } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type {\n  ApiBoostStatistics, ApiChannelMonetizationStatistics,\n  ApiChannelStatistics, ApiGroupStatistics, ApiPostStatistics, StatisticsOverviewItem,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatFullDate } from '../../../util/dates/dateFormat';\nimport { formatInteger, formatIntegerCompact } from '../../../util/textFormat';\n\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './StatisticsOverview.module.scss';\n\ntype OverviewCell = {\n  name: string;\n  title: string;\n  isPercentage?: boolean;\n  withAbsoluteValue?: boolean;\n  isPlain?: boolean;\n  isApproximate?: boolean;\n};\n\nconst CHANNEL_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'followers', title: 'ChannelStats.Overview.Followers' },\n    { name: 'enabledNotifications', title: 'ChannelStats.Overview.EnabledNotifications', isPercentage: true },\n  ],\n  [\n    { name: 'viewsPerPost', title: 'ChannelStats.Overview.ViewsPerPost' },\n    { name: 'viewsPerStory', title: 'ChannelStats.Overview.ViewsPerStory' },\n  ],\n  [\n    { name: 'sharesPerPost', title: 'ChannelStats.Overview.SharesPerPost' },\n    { name: 'sharesPerStory', title: 'ChannelStats.Overview.SharesPerStory' },\n  ],\n  [\n    { name: 'reactionsPerPost', title: 'ChannelStats.Overview.ReactionsPerPost' },\n    { name: 'reactionsPerStory', title: 'ChannelStats.Overview.ReactionsPerStory' },\n  ],\n];\n\nconst GROUP_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'members', title: 'Stats.GroupMembers' },\n    { name: 'messages', title: 'Stats.GroupMessages' },\n  ],\n  [\n    { name: 'viewers', title: 'Stats.GroupViewers' },\n    { name: 'posters', title: 'Stats.GroupPosters' },\n  ],\n];\n\nconst MESSAGE_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Stats.Message.Views', isPlain: true },\n    { name: 'publicForwards', title: 'Stats.Message.PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    {\n      name: 'forwardsCount', title: 'Stats.Message.PrivateShares', isPlain: true, isApproximate: true,\n    },\n  ],\n];\n\nconst STORY_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Channel.Stats.Overview.Views', isPlain: true },\n    { name: 'publicForwards', title: 'PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    { name: 'forwardsCount', title: 'PrivateShares', isPlain: true },\n  ],\n];\n\nconst BOOST_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'level', title: 'Stats.Boosts.Level', isPlain: true },\n    {\n      name: 'premiumSubscribers',\n      title: 'Stats.Boosts.PremiumSubscribers',\n      isPercentage: true,\n      isApproximate: true,\n      withAbsoluteValue: true,\n    },\n  ],\n  [\n    { name: 'boosts', title: 'Stats.Boosts.ExistingBoosts', isPlain: true },\n    { name: 'remainingBoosts', title: 'Stats.Boosts.BoostsToLevelUp', isPlain: true },\n  ],\n];\n\ntype StatisticsType = 'channel' | 'group' | 'message' | 'boost' | 'story' | 'monetization';\n\nexport type OwnProps = {\n  type: StatisticsType;\n  title?: string;\n  className?: string;\n  isToncoin?: boolean;\n  statistics:\n  ApiChannelStatistics |\n  ApiGroupStatistics |\n  ApiPostStatistics |\n  ApiBoostStatistics |\n  ApiChannelMonetizationStatistics;\n  subtitle?: ReactNode;\n};\n\nconst StatisticsOverview: FC<OwnProps> = ({\n  title,\n  type,\n  statistics,\n  isToncoin,\n  className,\n  subtitle,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const renderOverviewItemValue = ({ change, percentage }: StatisticsOverviewItem) => {\n    if (!change) {\n      return undefined;\n    }\n\n    const isChangeNegative = Number(change) < 0;\n\n    return (\n      <span className={buildClassName(styles.value, isChangeNegative && styles.negative)}>\n        {isChangeNegative\n          ? `-${formatIntegerCompact(lang, Math.abs(change))}`\n          : `+${formatIntegerCompact(lang, change)}`}\n        {percentage && (\n          <>\n            {' '}\n            ({percentage}%)\n          </>\n        )}\n      </span>\n    );\n  };\n\n  const renderBalanceCell = (balance: number, usdRate: number, text: string) => {\n    const [integerTonPart, decimalTonPart] = balance.toFixed(4).split('.');\n    const [integerUsdPart, decimalUsdPart] = (balance * usdRate).toFixed(2).split('.');\n    return (\n      <div>\n        <Icon className={styles.toncoin} name=\"toncoin\" />\n        <b className={styles.tableValue}>\n          {integerTonPart}<span className={styles.decimalPart}>.{decimalTonPart}</span>\n        </b>\n        {' '}\n        <span className={styles.tableHeading}>\n          ≈ ${integerUsdPart}<span className={styles.decimalUsdPart}>.{decimalUsdPart}</span>\n        </span>\n        <h3 className={styles.tableHeading}>{oldLang(text)}</h3>\n      </div>\n    );\n  };\n\n  const { period } = (statistics as ApiGroupStatistics);\n  const { balances, usdRate } = (statistics as ApiChannelMonetizationStatistics);\n\n  const schema = getSchemaByType(type);\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      <div className={styles.header}>\n        {title && (\n          <div className={styles.title}>\n            {title}\n          </div>\n        )}\n\n        {period && (\n          <div className={styles.caption}>\n            {formatFullDate(oldLang, period.minDate * 1000)} — {formatFullDate(oldLang, period.maxDate * 1000)}\n          </div>\n        )}\n      </div>\n\n      <table className={styles.table}>\n        {isToncoin ? (\n          <tr>\n            <td className={styles.tableCell}>\n              {renderBalanceCell(balances?.availableBalance || 0, usdRate || 0, 'lng_channel_earn_available')}\n              {renderBalanceCell(balances?.currentBalance || 0, usdRate || 0, 'lng_channel_earn_reward')}\n              {renderBalanceCell(balances?.overallRevenue || 0, usdRate || 0, 'lng_channel_earn_total')}\n            </td>\n          </tr>\n        ) : schema.map((row) => (\n          <tr>\n            {row.map((cell: OverviewCell) => {\n              const field = (statistics as any)[cell.name];\n\n              if (cell.isPlain) {\n                return (\n                  <td className={styles.tableCell}>\n                    <b className={styles.tableValue}>\n                      {`${cell.isApproximate ? '≈' : ''}${formatInteger(field)}`}\n                    </b>\n                    <h3 className={styles.tableHeading}>{oldLang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              if (cell.isPercentage) {\n                return (\n                  <td className={styles.tableCell}>\n                    {cell.withAbsoluteValue && (\n                      <span className={styles.tableValue}>\n                        {`${cell.isApproximate ? '≈' : ''}${formatInteger(field.part)}`}\n                      </span>\n                    )}\n                    <span className={cell.withAbsoluteValue ? styles.tableSecondaryValue : styles.tableValue}>\n                      {field.percentage}%\n                    </span>\n                    <h3 className={styles.tableHeading}>{oldLang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              return (\n                <td className={styles.tableCell}>\n                  <b className={styles.tableValue}>\n                    {formatIntegerCompact(lang, field.current)}\n                  </b>\n                  {' '}\n                  {renderOverviewItemValue(field)}\n                  <h3 className={styles.tableHeading}>{oldLang(cell.title)}</h3>\n                </td>\n              );\n            })}\n          </tr>\n        ))}\n      </table>\n\n      {subtitle}\n    </div>\n  );\n};\n\nfunction getSchemaByType(type: StatisticsType) {\n  switch (type) {\n    case 'group':\n      return GROUP_OVERVIEW;\n    case 'message':\n      return MESSAGE_OVERVIEW;\n    case 'boost':\n      return BOOST_OVERVIEW;\n    case 'story':\n      return STORY_OVERVIEW;\n    case 'channel':\n    default:\n      return CHANNEL_OVERVIEW;\n  }\n}\n\nexport default memo(StatisticsOverview);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport { StoryViewerOrigin } from '../../types';\n\nimport { isUserId } from '../../global/helpers';\nimport { getPeerTitle } from '../../global/helpers/peers';\nimport buildClassName from '../../util/buildClassName';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  peer: ApiPeer;\n  isArchived?: boolean;\n}\n\nfunction StoryRibbonButton({ peer, isArchived }: OwnProps) {\n  const {\n    openChat,\n    openChatWithInfo,\n    openStoryViewer,\n    toggleStoriesHidden,\n  } = getActions();\n\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isSelf = 'isSelf' in peer && peer.isSelf;\n  const isChannel = !isUserId(peer.id);\n\n  useStoryPreloader(peer.id);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.story-peer-context-menu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true, isDense: true }));\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen) return;\n\n    openStoryViewer({ peerId: peer.id, origin: StoryViewerOrigin.StoryRibbon });\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  const handleSavedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'stories' });\n  });\n\n  const handleArchivedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'storiesArchive' });\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleOpenProfile = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleArchivePeer = useLastCallback(() => {\n    toggleStoriesHidden({ peerId: peer.id, isHidden: !isArchived });\n  });\n\n  return (\n    <div\n      ref={ref}\n      role=\"button\"\n      data-peer-id={peer.id}\n      tabIndex={0}\n      className={styles.peer}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      <Avatar\n        peer={peer}\n        withStory\n        storyViewerOrigin={StoryViewerOrigin.StoryRibbon}\n        storyViewerMode=\"full\"\n      />\n      <div className={buildClassName(styles.name, peer.hasUnreadStories && styles.name_hasUnreadStory)}>\n        {isSelf ? lang('MyStory') : getPeerTitle(lang, peer)}\n      </div>\n      {contextMenuAnchor !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          className={buildClassName('story-peer-context-menu', styles.contextMenu)}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {isSelf ? (\n            <>\n              <MenuItem onClick={handleSavedStories} icon=\"play-story\">\n                {lang('StoryList.Context.SavedStories')}\n              </MenuItem>\n              <MenuItem onClick={handleArchivedStories} icon=\"archive\">\n                {lang('StoryList.Context.ArchivedStories')}\n              </MenuItem>\n            </>\n          ) : (\n            <>\n              {!isChannel && (\n                <MenuItem onClick={handleOpenChat} icon=\"message\">\n                  {lang('SendMessageTitle')}\n                </MenuItem>\n              )}\n              {isChannel ? (\n                <MenuItem onClick={handleOpenProfile} icon=\"channel\">\n                  {lang('ChatList.ContextOpenChannel')}\n                </MenuItem>\n              ) : (\n                <MenuItem onClick={handleOpenProfile} icon=\"user\">\n                  {lang('StoryList.Context.ViewProfile')}\n                </MenuItem>\n              )}\n              <MenuItem\n                onClick={handleArchivePeer}\n                icon={isArchived ? 'unarchive' : 'archive'}\n              >\n                {lang(isArchived ? 'StoryList.Context.Unarchive' : 'StoryList.Context.Archive')}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryRibbonButton);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StoryRibbonButton from './StoryRibbonButton';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  className?: string;\n  isClosing?: boolean;\n}\n\ninterface StateProps {\n  orderedPeerIds: string[];\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n}\n\nfunction StoryRibbon({\n  isArchived,\n  className,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  isClosing,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  const fullClassName = buildClassName(\n    styles.root,\n    !orderedPeerIds.length && styles.hidden,\n    isClosing && styles.closing,\n    className,\n    'no-scrollbar',\n  );\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useHorizontalScroll(ref, getIsMobile());\n\n  return (\n    <div\n      ref={ref}\n      id=\"StoryRibbon\"\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {orderedPeerIds.map((peerId) => {\n        const peer = usersById[peerId] || chatsById[peerId];\n\n        if (!peer) {\n          return undefined;\n        }\n\n        return (\n          <StoryRibbonButton\n            key={peerId}\n            peer={peer}\n            isArchived={isArchived}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isArchived }): StateProps => {\n    const { orderedPeerIds: { active, archived } } = global.stories;\n    const usersById = global.users.byId;\n    const chatsById = global.chats.byId;\n\n    return {\n      orderedPeerIds: isArchived ? archived : active,\n      usersById,\n      chatsById,\n    };\n  },\n)(StoryRibbon));\n","import React, {\n  beginHeavyAnimation, memo, useEffect, useMemo,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { GlobalState } from '../../global/types';\n\nimport { ANIMATION_END_DELAY, PREVIEW_AVATAR_COUNT } from '../../config';\nimport { selectIsForumPanelOpen, selectPerformanceSettingsValue, selectTabState } from '../../global/selectors';\nimport { animateClosing, animateOpening, ANIMATION_DURATION } from './helpers/ribbonAnimation';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\n\nimport styles from './StoryToggler.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  canShow?: boolean;\n}\n\ninterface StateProps {\n  currentUserId: string;\n  orderedPeerIds: string[];\n  isShown: boolean;\n  isForumPanelOpen?: boolean;\n  withAnimation?: boolean;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n  peerStories: GlobalState['stories']['byPeerId'];\n}\n\nconst PRELOAD_PEERS = 5;\n\nfunction StoryToggler({\n  currentUserId,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  canShow,\n  isShown,\n  isForumPanelOpen,\n  isArchived,\n  withAnimation,\n  peerStories,\n}: OwnProps & StateProps) {\n  const { toggleStoryRibbon } = getActions();\n\n  const lang = useOldLang();\n\n  const peers = useMemo(() => {\n    if (orderedPeerIds.length === 1) {\n      return [usersById[orderedPeerIds[0]] || chatsById[orderedPeerIds[0]]];\n    }\n\n    return orderedPeerIds\n      .map((id) => usersById[id] || chatsById[id])\n      .filter((peer) => peer && peer.id !== currentUserId)\n      .slice(0, PREVIEW_AVATAR_COUNT)\n      .reverse();\n  }, [currentUserId, orderedPeerIds, usersById, chatsById]);\n\n  const closeFriends = useMemo(() => {\n    if (!peers?.length) return {};\n    return peers.reduce((acc, peer) => {\n      const stories = peerStories[peer.id];\n      if (!stories) return acc;\n\n      const isCloseFriend = stories.orderedIds.some((id) => {\n        const story = stories.byId[id];\n        if (!story || !('isForCloseFriends' in story)) return false;\n        const isRead = stories.lastReadId && story.id <= stories.lastReadId;\n        return story.isForCloseFriends && !isRead;\n      });\n\n      acc[peer.id] = isCloseFriend;\n      return acc;\n    }, {} as Record<string, boolean>);\n  }, [peerStories, peers]);\n\n  const preloadPeerIds = useMemo(() => {\n    return orderedPeerIds.slice(0, PRELOAD_PEERS);\n  }, [orderedPeerIds]);\n\n  useStoryPreloader(preloadPeerIds);\n\n  const isVisible = canShow && isShown;\n  // For some reason, setting 'slow' here also fixes scroll freezes on iOS when collapsing Story Ribbon\n  const { ref, shouldRender } = useShowTransition<HTMLButtonElement>({\n    isOpen: isVisible,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  useEffect(() => {\n    if (!withAnimation || isForumPanelOpen) return;\n    if (isVisible) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(isArchived);\n    } else {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(isArchived);\n    }\n  }, [isArchived, isVisible, withAnimation, isForumPanelOpen]);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <button\n      ref={ref}\n      type=\"button\"\n      id=\"StoryToggler\"\n      className={styles.root}\n      aria-label={lang('Chat.Context.Peer.OpenStory')}\n      onClick={() => toggleStoryRibbon({ isShown: true, isArchived })}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {peers.map((peer) => (\n        <Avatar\n          key={peer.id}\n          peer={peer}\n          size=\"tiny\"\n          className={styles.avatar}\n          withStorySolid\n          forceFriendStorySolid={closeFriends[peer.id]}\n        />\n      ))}\n    </button>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { isArchived }): StateProps => {\n  const { orderedPeerIds: { archived, active }, byPeerId } = global.stories;\n  const { storyViewer: { isRibbonShown, isArchivedRibbonShown } } = selectTabState(global);\n  const isForumPanelOpen = selectIsForumPanelOpen(global);\n  const withAnimation = selectPerformanceSettingsValue(global, 'storyRibbonAnimations');\n\n  return {\n    currentUserId: global.currentUserId!,\n    orderedPeerIds: isArchived ? archived : active,\n    isShown: isArchived ? !isArchivedRibbonShown : !isRibbonShown,\n    isForumPanelOpen,\n    withAnimation,\n    usersById: global.users.byId,\n    chatsById: global.chats.byId,\n    peerStories: byPeerId,\n  };\n})(StoryToggler));\n","import { ANIMATION_END_DELAY } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport ribbonStyles from '../StoryRibbon.module.scss';\nimport togglerStyles from '../StoryToggler.module.scss';\n\nexport const ANIMATION_DURATION = 250;\nconst RIBBON_OFFSET = 0.25 * REM;\nconst RIBBON_Z_INDEX = 11;\nconst STROKE_OFFSET = 0.1875 * REM;\nconst CANVAS_OFFSET = 0.125 * REM;\n\nconst callbacks: Set<NoneToVoidFunction> = new Set();\n\nexport function animateOpening(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container, toggler, leftMainHeader, ribbonPeers, toggleAvatars,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n\n  const { bottom: headerBottom, right: headerRight } = leftMainHeader.getBoundingClientRect();\n  const toTop = headerBottom + RIBBON_OFFSET;\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    let {\n      // eslint-disable-next-line prefer-const\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = toggleAvatar.getBoundingClientRect();\n\n    const {\n      left: toLeft,\n      width: toWidth,\n    } = peer.getBoundingClientRect();\n\n    if (toLeft > headerRight) {\n      return;\n    }\n\n    fromLeft -= STROKE_OFFSET;\n    fromWidth += 2 * STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft;\n    const fromTranslateY = fromTop - toTop;\n    const fromScale = fromWidth / toWidth;\n\n    fromTop -= STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft + 2 * STROKE_OFFSET;\n    const toTranslateY = toTop - fromTop + STROKE_OFFSET;\n    const toScale = toWidth / (fromWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      if (!toggleAvatar) return;\n      const ghost = createGhost(peer);\n\n      let ghost2: HTMLElement | undefined;\n\n      // If this is a toogle avatar we create a second ghost and do crossfade animation\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        // Else we animate only name\n        ghost.classList.add(togglerStyles.ghostAnimateName);\n      }\n\n      applyStyles(ghost, {\n        top: `${toTop}px`,\n        left: `${toLeft}px`,\n        zIndex: `${zIndex}`,\n        opacity: ghost2 ? '0' : '',\n        transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${fromTop}px`,\n          left: `${fromLeft}px`,\n          zIndex: `${zIndex}`,\n        });\n      }\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n      toggleAvatar.classList.add('animating');\n      peer.classList.add('animating');\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: '',\n          transform: '',\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2, {\n            opacity: '0',\n            transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n          });\n        } else {\n          ghost.classList.add(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            toggleAvatar?.classList.remove('animating');\n            peer.classList.remove('animating');\n\n            callbacks.delete(cb);\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nexport function animateClosing(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container,\n    toggler,\n    toggleAvatars,\n    ribbonPeers,\n    leftMainHeader,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n  const { right: headerRight } = leftMainHeader.getBoundingClientRect();\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    const {\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = peer.getBoundingClientRect();\n\n    let {\n      left: toLeft,\n      width: toWidth,\n      top: toTop,\n    } = toggleAvatar.getBoundingClientRect();\n\n    if (fromLeft > headerRight) {\n      return;\n    }\n\n    toLeft -= STROKE_OFFSET;\n    toWidth += 2 * STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft;\n    const toTranslateY = toTop - fromTop - CANVAS_OFFSET;\n    const toScale = toWidth / fromWidth;\n\n    toTop -= STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft + 2 * STROKE_OFFSET;\n    const fromTranslateY = fromTop - toTop + STROKE_OFFSET;\n    const fromScale = fromWidth / (toWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      const ghost = createGhost(peer);\n      let ghost2: HTMLElement | undefined;\n\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        ghost.classList.add(togglerStyles.ghostAnimateName, togglerStyles.ghostRevealName);\n      }\n\n      applyStyles(ghost, {\n        top: `${fromTop}px`,\n        left: `${fromLeft}px`,\n        width: `${fromWidth}px`,\n        zIndex: `${zIndex}`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${toTop}px`,\n          left: `${toLeft}px`,\n          zIndex: `${zIndex}`,\n          opacity: '0',\n          transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n        });\n      }\n\n      peer.classList.add('animating');\n      toggleAvatar!.classList.add('animating');\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: ghost2 ? '0' : '',\n          transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2!, {\n            opacity: '',\n            transform: '',\n          });\n        } else {\n          ghost.classList.remove(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            peer.classList.remove('animating');\n            toggleAvatar!.classList.remove('animating');\n          });\n\n          callbacks.delete(cb);\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nfunction getHTMLElements(isArchived?: boolean) {\n  let container = document.getElementById('LeftColumn');\n  if (container && isArchived) {\n    container = container.querySelector<HTMLElement>('.ArchivedChats');\n  }\n  if (!container) return {};\n  const toggler = container.querySelector<HTMLElement>('#StoryToggler');\n  const ribbon = container.querySelector<HTMLElement>('#StoryRibbon');\n  const leftMainHeader = container.querySelector<HTMLElement>('.left-header');\n  const ribbonPeers = ribbon?.querySelectorAll<HTMLElement>(`.${ribbonStyles.peer}`);\n  const toggleAvatars = toggler?.querySelectorAll<HTMLElement>('.Avatar');\n\n  return {\n    container,\n    toggler,\n    leftMainHeader,\n    ribbonPeers,\n    toggleAvatars,\n  };\n}\n\nfunction createGhost(sourceEl: HTMLElement) {\n  const ghost = sourceEl.cloneNode(true) as HTMLElement;\n  ghost.classList.add(togglerStyles.ghost);\n\n  // Avoid source animating class being copied to the ghost\n  ghost.classList.remove('animating');\n\n  ghost.draggable = false;\n  ghost.oncontextmenu = stopEvent;\n\n  const sourceCanvas = sourceEl.querySelector('canvas');\n  if (sourceCanvas) {\n    const canvas = ghost.querySelector('canvas');\n    canvas?.getContext('2d')?.drawImage(sourceCanvas, 0, 0);\n  }\n\n  return ghost;\n}\n\nfunction getPeerId(el: HTMLElement) {\n  return el?.getAttribute('data-peer-id');\n}\n\nfunction selectByPeerId(el: HTMLElement, id: string) {\n  return el?.querySelector<HTMLElement>(`[data-peer-id=\"${id}\"]`);\n}\n\nfunction createDelayedCallback(callback: NoneToVoidFunction, ms: number) {\n  const timeout = setTimeout(callback, ms);\n\n  return () => {\n    clearTimeout(timeout);\n    callback();\n  };\n}\n\nfunction cancelDelayedCallbacks() {\n  callbacks.forEach((cb) => cb());\n  callbacks.clear();\n}\n","export const PRIMARY_VIDEO_MIME = 'video/mp4; codecs=hvc1.1.6.L63.00';\nexport const SECONDARY_VIDEO_MIME = 'video/mp4; codecs=avc1.64001E';\n","import { useEffect } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport { selectPeerStories } from '../../../global/selectors';\nimport unloadVideo from '../../../util/browser/unloadVideo';\nimport { preloadImage } from '../../../util/files';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { getProgressiveUrl } from '../../../util/mediaLoader';\nimport { makeProgressiveLoader } from '../../../util/progressiveLoader';\nimport { pause } from '../../../util/schedulers';\nimport { PRIMARY_VIDEO_MIME } from '../helpers/videoFormats';\n\nimport { checkIfStreamingSupported } from '../../../hooks/useStreaming';\n\nconst preloadedStories: Record<string, Set<number>> = {};\nconst PEER_STORIES_FOR_PRELOAD = 5;\nconst PROGRESSIVE_PRELOAD_DURATION = 1000;\nconst STREAM_PRELOAD_SIZE = 1024 * 1024 * 2; // 2 MB\n\nconst FIRST_PRELOAD_DELAY = 1000;\nconst canPreload = pause(FIRST_PRELOAD_DELAY);\n\ntype MediaHash = { hash: string; format: ApiMediaFormat; isStream?: boolean };\n\nfunction useStoryPreloader(peerIds: string[]): void;\nfunction useStoryPreloader(peerId?: string, aroundStoryId?: number): void;\nfunction useStoryPreloader(peerId?: string | string[], aroundStoryId?: number) {\n  useEffect(() => {\n    if (peerId === undefined) return;\n\n    const preloadHashes = async (mediaHashes: Array<MediaHash>) => {\n      await canPreload;\n      mediaHashes.forEach(({ hash, format, isStream }) => {\n        if (isStream) {\n          preloadStream(hash);\n          return;\n        }\n        mediaLoader.fetch(\n          hash,\n          format,\n        )\n          .then((result) => {\n            if (!result) return;\n\n            if (format === ApiMediaFormat.Progressive) {\n              preloadProgressive(result);\n            }\n            if (format === ApiMediaFormat.BlobUrl) {\n              preloadImage(result);\n            }\n          });\n      });\n    };\n\n    const peerIds = Array.isArray(peerId) ? peerId : [peerId];\n\n    peerIds.forEach((id) => {\n      const storyId = aroundStoryId || getGlobal().stories.byPeerId[id]?.orderedIds?.[0];\n      if (!storyId) return;\n      preloadHashes(getPreloadMediaHashes(id, storyId));\n    });\n  }, [aroundStoryId, peerId]);\n}\n\nfunction findIdsAroundCurrentId<T>(ids: T[], currentId: T, aroundAmount: number): T[] {\n  const currentIndex = ids.indexOf(currentId);\n  const start = Math.max(currentIndex - aroundAmount, 0);\n  const end = Math.min(currentIndex + aroundAmount, ids.length);\n  return ids.slice(start, end);\n}\n\nfunction getPreloadMediaHashes(peerId: string, storyId: number) {\n  const peerStories = selectPeerStories(getGlobal(), peerId);\n  if (!peerStories || !peerStories.orderedIds?.length) {\n    return [];\n  }\n\n  const preloadIds = findIdsAroundCurrentId(peerStories.orderedIds, storyId, PEER_STORIES_FOR_PRELOAD);\n\n  const mediaHashes: Array<MediaHash> = [];\n  preloadIds.forEach((currentStoryId) => {\n    if (preloadedStories[peerId]?.has(currentStoryId)) {\n      return;\n    }\n\n    const story = peerStories.byId[currentStoryId];\n    if (!story || !('content' in story)) {\n      return;\n    }\n\n    const isVideo = Boolean(story.content.video);\n\n    // Media\n    mediaHashes.push({\n      hash: getStoryMediaHash(story, 'full'),\n      format: isVideo ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl,\n      isStream: isVideo && checkIfStreamingSupported(PRIMARY_VIDEO_MIME),\n    });\n    // Thumbnail\n    mediaHashes.push({ hash: getStoryMediaHash(story), format: ApiMediaFormat.BlobUrl });\n    if (story.content.altVideos) {\n      mediaHashes.push({\n        hash: getStoryMediaHash(story, 'full', true)!,\n        format: ApiMediaFormat.Progressive,\n      });\n    }\n\n    preloadedStories[peerId] = (preloadedStories[peerId] || new Set()).add(currentStoryId);\n  });\n\n  return mediaHashes;\n}\n\nfunction preloadProgressive(url: string) {\n  const head = document.head;\n  const video = document.createElement('video');\n  video.preload = 'auto';\n  video.src = url;\n  video.muted = true;\n  video.autoplay = true;\n  video.disableRemotePlayback = true;\n  video.style.display = 'none';\n  head.appendChild(video);\n  video.load();\n  setTimeout(() => {\n    unloadVideo(video);\n    head.removeChild(video);\n  }, PROGRESSIVE_PRELOAD_DURATION);\n}\n\n// eslint-disable-next-line no-async-without-await/no-async-without-await\nasync function preloadStream(hash: string) {\n  const loader = makeProgressiveLoader(getProgressiveUrl(hash));\n  let cachedSize = 0;\n  for await (const chunk of loader) {\n    cachedSize += chunk.byteLength;\n    if (cachedSize >= STREAM_PRELOAD_SIZE) {\n      break;\n    }\n  }\n}\n\nexport default useStoryPreloader;\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"RXAMu4VD\",\"mediaArea\":\"pruw1nLm\",\"preview\":\"_5HkplWee\",\"shiny\":\"xFjJpeOA\",\"wave\":\"Ux0tlNbE\",\"light\":\"_7esBA3m\",\"dark\":\"eic2vQ8c\",\"reactionBackground\":\"c3ajA3hg\",\"flipped\":\"furSXGdL\",\"reaction\":\"Et3MvYmN\",\"withCount\":\"mFTLUHm2\",\"reactionCount\":\"Tr8mYyDk\",\"weather\":\"KBjMtRUS\",\"weatherInner\":\"IFChB3tD\",\"temperature\":\"_ke1UBIl\"};","import React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaAreaSuggestedReaction, ApiStory } from '../../../api/types';\n\nimport { getStoryKey, isSameReaction, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport ReactionAnimatedEmoji from '../../common/reactions/ReactionAnimatedEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  mediaArea: ApiMediaAreaSuggestedReaction;\n  index: number;\n  isPreview?: boolean;\n  className?: string;\n  style?: string;\n};\n\nconst REACTION_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 4;\n\nconst MediaAreaSuggestedReaction = ({\n  story,\n  mediaArea,\n  index,\n  className,\n  style,\n  isPreview,\n}: OwnProps) => {\n  const { sendStoryReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [customEmojiSize, setCustomEmojiSize] = useState(1.5 * REM);\n\n  const { peerId, id, views } = story;\n  const { reactions } = views || {};\n  const { reaction, isDark, isFlipped } = mediaArea;\n\n  const isChannel = !isUserId(peerId);\n  const containerId = `${getStoryKey(peerId, id)}-${index}-${isPreview ? 'preview' : 'viewer'}`;\n\n  const reactionCount = useMemo(() => (\n    reactions?.find((r) => isSameReaction(r.reaction, reaction))?.count\n  ), [reaction, reactions]);\n  const shouldDisplayCount = !isPreview && Boolean(reactionCount) && isChannel;\n\n  const updateCustomEmojiSize = useLastCallback(() => {\n    if (!ref.current) return;\n    const height = ref.current.clientHeight;\n    setCustomEmojiSize(Math.round(height * REACTION_SIZE_MULTIPLIER));\n  });\n\n  useEffectWithPrevDeps(([prevReactionCount]) => {\n    if (Boolean(reactionCount) !== Boolean(prevReactionCount)) {\n      updateCustomEmojiSize();\n    }\n  }, [reactionCount]);\n\n  useResizeObserver(ref, updateCustomEmojiSize);\n\n  const handleClick = useLastCallback(() => {\n    sendStoryReaction({\n      peerId,\n      storyId: id,\n      containerId,\n      reaction,\n    });\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(isDark ? styles.dark : styles.light, className)}\n      style={buildStyle(style, `--custom-emoji-size: ${customEmojiSize}px`)}\n      onClick={handleClick}\n    >\n      <div\n        className={buildClassName(styles.reactionBackground, isFlipped && styles.flipped)}\n      />\n      {Boolean(customEmojiSize) && (\n        <ReactionAnimatedEmoji\n          className={buildClassName(styles.reaction, shouldDisplayCount && styles.withCount)}\n          reaction={reaction}\n          containerId={containerId}\n          size={customEmojiSize}\n          effectSize={customEmojiSize * EFFECT_SIZE_MULTIPLIER}\n          shouldPause={isPreview}\n          shouldLoop={!isPreview}\n        />\n      )}\n      {shouldDisplayCount && (\n        <span className={styles.reactionCount}>{reactionCount}</span>\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaAreaSuggestedReaction);\n","import React, {\n  type FC, memo,\n  useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { setExtraStyles } from '../../../lib/teact/teact-dom';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiMediaAreaWeather, ApiSticker } from '../../../api/types';\n\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectRestrictedEmoji } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { convertToRGBA, getTextColor } from '../../../util/colors';\nimport { formatTemperature } from '../../../util/formatTemperature';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  mediaArea: ApiMediaAreaWeather;\n  className?: string;\n  style?: string;\n  isPreview?: boolean;\n};\n\ntype StateProps = {\n  restrictedEmoji?: ApiSticker;\n};\n\nconst EMOJI_SIZE_MULTIPLIER = 0.7;\nconst TEMPERATURE_SIZE = 32;\n\nconst MediaAreaWeather: FC<OwnProps & StateProps> = ({\n  mediaArea,\n  className,\n  style,\n  restrictedEmoji,\n  isPreview,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [customEmojiSize, setCustomEmojiSize] = useState(0);\n\n  const { temperatureC, color } = mediaArea;\n\n  const backgroundColor = convertToRGBA(color);\n  const textColor = getTextColor(color);\n\n  const updateCustomSize = useLastCallback((isImmediate?: boolean) => {\n    if (!ref.current) return undefined;\n    const el = ref.current;\n\n    const height = el.clientHeight;\n    const customEmojiHeight = Math.round(height * EMOJI_SIZE_MULTIPLIER);\n    setCustomEmojiSize(customEmojiHeight);\n    const applyFn = () => {\n      setExtraStyles(el, {\n        '--custom-emoji-size': `${customEmojiHeight}px`,\n        'font-size': `${height / TEMPERATURE_SIZE}rem`,\n      });\n    };\n\n    if (isImmediate) return applyFn;\n\n    requestMutation(applyFn);\n\n    return undefined;\n  });\n\n  useLayoutEffect(() => {\n    requestForcedReflow(() => updateCustomSize(true));\n  }, []);\n\n  useResizeObserver(ref, () => updateCustomSize());\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(styles.weather, className)}\n      style={buildStyle(\n        style,\n        `--custom-background-color: ${backgroundColor}`,\n        `color: ${textColor}`,\n      )}\n    >\n      <div className={styles.weatherInner}>\n        {restrictedEmoji && (\n          <CustomEmoji\n            key={restrictedEmoji.id}\n            documentId={restrictedEmoji.id}\n            size={customEmojiSize}\n            noPlay={isPreview}\n            withTranslucentThumb\n            forceAlways\n          />\n        )}\n        <p className={styles.temperature}>\n          {formatTemperature(temperatureC)}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, ownProps): StateProps => {\n  const { mediaArea } = ownProps;\n  const restrictedEmoji = selectRestrictedEmoji(global, mediaArea.emoji);\n  return { restrictedEmoji };\n})(MediaAreaWeather));\n","export const formatTemperature = (temperatureC: number) => {\n  const isFahrenheit = Boolean(navigator.language === 'en-US');\n  return isFahrenheit ? `${Math.round((temperatureC * 9) / 5 + 32)}°F` : `${Math.round(temperatureC)}°C`;\n};\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaArea, ApiStory } from '../../../api/types';\n\nimport { MOBILE_SCREEN_MAX_WIDTH } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nimport MediaAreaSuggestedReaction from './MediaAreaSuggestedReaction';\nimport MediaAreaWeather from './MediaAreaWeather';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  isActive?: boolean;\n  isStoryPlaying?: boolean;\n  className?: string;\n};\n\nconst STORY_ASPECT_RATIO = 9 / 16;\nconst PERCENTAGE_BASE = 100;\n\nconst NO_SHINY_TYPES = new Set<ApiMediaArea['type']>(['channelPost', 'uniqueGift']);\n\nconst MediaAreaOverlay = ({\n  story, isActive, className, isStoryPlaying,\n}: OwnProps) => {\n  const {\n    openMapModal, openUniqueGiftBySlug, focusMessage, closeStoryViewer, openUrl,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [mediaWidth, setMediaWidth] = useState(0);\n\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current) return;\n    const element = ref.current;\n    setMediaWidth(element!.clientWidth!);\n\n    if (windowSize.width > MOBILE_SCREEN_MAX_WIDTH) {\n      requestMutation(() => {\n        element.style.removeProperty('--media-width');\n        element.style.removeProperty('--media-height');\n      });\n      return;\n    }\n\n    const screenAspectRatio = windowSize.width / windowSize.height;\n\n    const width = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight * STORY_ASPECT_RATIO : element.clientWidth;\n    const height = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight : element.clientWidth / STORY_ASPECT_RATIO;\n\n    requestMutation(() => {\n      element.style.setProperty('--media-width', `${width}px`);\n      element.style.setProperty('--media-height', `${height}px`);\n    });\n  }, [isActive, windowSize]);\n\n  const handleMediaAreaClick = (mediaArea: ApiMediaArea) => {\n    switch (mediaArea.type) {\n      case 'geoPoint':\n      case 'venue': {\n        openMapModal({ geoPoint: mediaArea.geo });\n        break;\n      }\n      case 'channelPost': {\n        focusMessage({\n          chatId: mediaArea.channelId,\n          messageId: mediaArea.messageId,\n        });\n        closeStoryViewer();\n        break;\n      }\n      case 'url': {\n        openUrl({ url: mediaArea.url });\n        break;\n      }\n      case 'uniqueGift': {\n        openUniqueGiftBySlug({ slug: mediaArea.slug });\n        break;\n      }\n    }\n  };\n\n  const mediaAreas = story.mediaAreas;\n\n  return (\n    <div\n      className={buildClassName(styles.overlay, !isActive && styles.preview, className)}\n      ref={ref}\n    >\n      {mediaAreas?.map((mediaArea, i) => {\n        switch (mediaArea.type) {\n          case 'geoPoint':\n          case 'venue':\n          case 'channelPost':\n          case 'url':\n          case 'uniqueGift': {\n            const isShiny = isActive && !NO_SHINY_TYPES.has(mediaArea.type);\n            return (\n              <div\n                className={buildClassName(styles.mediaArea, isShiny && styles.shiny)}\n                style={prepareStyle(mediaArea)}\n                onClick={() => handleMediaAreaClick(mediaArea)}\n              />\n            );\n          }\n          case 'suggestedReaction':\n            return (\n              <MediaAreaSuggestedReaction\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${mediaArea.type}-${i}`}\n                story={story}\n                mediaArea={mediaArea}\n                index={i}\n                isPreview={!isActive}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea)}\n              />\n            );\n          case 'weather': {\n            return (\n              <MediaAreaWeather\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${mediaArea.type}-${i}`}\n                mediaArea={mediaArea}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea, mediaWidth)}\n                isPreview={!isActive || isStoryPlaying}\n              />\n            );\n          }\n          default:\n            return undefined;\n        }\n      })}\n    </div>\n  );\n};\n\nfunction prepareStyle(mediaArea: ApiMediaArea, mediaWidth?: number) {\n  const {\n    x, y, width, height, rotation, radius,\n  } = mediaArea.coordinates;\n\n  let pixelRadius = '';\n\n  if (mediaWidth && radius && mediaWidth > 0) {\n    const pixelWidth = (mediaWidth * (width / PERCENTAGE_BASE));\n    const pixelHeight = (mediaWidth * (height / PERCENTAGE_BASE));\n    pixelRadius = `${Math.min(pixelWidth, pixelHeight) * (radius / PERCENTAGE_BASE)}px`;\n  }\n\n  return buildStyle(\n    `left: ${x}%`,\n    `top: ${y}%`,\n    `width: ${width}%`,\n    `height: ${height}%`,\n    `transform: rotate(${rotation}deg) translate(-50%, -50%)`,\n    pixelRadius && `border-radius: ${pixelRadius}`,\n  );\n}\n\nexport default memo(MediaAreaOverlay);\n","import type { GlobalState } from '../types';\n\nimport { getMainUsername, isChatBasicGroup } from '../helpers';\nimport { selectChat, selectChatFullInfo } from './chats';\nimport { selectUser } from './users';\n\nexport function selectChatGroupCall<T extends GlobalState>(global: T, chatId: string) {\n  const fullInfo = selectChatFullInfo(global, chatId);\n  if (!fullInfo || !fullInfo.groupCallId) return undefined;\n\n  return selectGroupCall(global, fullInfo.groupCallId);\n}\n\nexport function selectGroupCall<T extends GlobalState>(global: T, groupCallId: string) {\n  return global.groupCalls.byId[groupCallId];\n}\n\nexport function selectGroupCallParticipant<T extends GlobalState>(\n  global: T, groupCallId: string, participantId: string,\n) {\n  return selectGroupCall(global, groupCallId)?.participants[participantId];\n}\n\nexport function selectIsAdminInActiveGroupCall<T extends GlobalState>(global: T): boolean {\n  const chatId = selectActiveGroupCall(global)?.chatId;\n\n  if (!chatId) return false;\n\n  const chat = selectChat(global, chatId);\n  if (!chat) return false;\n\n  return (isChatBasicGroup(chat) && chat.isCreator) || Boolean(chat.adminRights?.manageCall);\n}\n\nexport function selectActiveGroupCall<T extends GlobalState>(global: T) {\n  const { groupCalls: { activeGroupCallId } } = global;\n  if (!activeGroupCallId) {\n    return undefined;\n  }\n\n  return selectGroupCall(global, activeGroupCallId);\n}\n\nexport function selectPhoneCallUser<T extends GlobalState>(global: T) {\n  const { phoneCall, currentUserId } = global;\n  if (!phoneCall || !phoneCall.participantId || !phoneCall.adminId) {\n    return undefined;\n  }\n\n  const id = phoneCall.adminId === currentUserId ? phoneCall.participantId : phoneCall.adminId;\n  return selectUser(global, id);\n}\n\nexport function selectCanInviteToActiveGroupCall<T extends GlobalState>(global: T) {\n  const groupCall = selectActiveGroupCall(global);\n\n  if (!groupCall || !groupCall.chatId) {\n    return false;\n  }\n\n  const chat = selectChat(global, groupCall.chatId);\n  if (!chat) {\n    return false;\n  }\n\n  const hasPublicUsername = Boolean(getMainUsername(chat));\n  if (hasPublicUsername) {\n    return true;\n  }\n\n  const inviteLink = selectChatFullInfo(global, chat.id)?.inviteLink;\n  return Boolean(inviteLink);\n}\n","import type { ApiLimitType } from '../../api/types';\nimport type { GlobalState } from '../types';\n\nimport { DEFAULT_LIMITS } from '../../config';\nimport { selectIsCurrentUserPremium } from './users';\n\nexport function selectCurrentLimit<T extends GlobalState>(global: T, limit: ApiLimitType) {\n  const { appConfig } = global;\n  if (!appConfig) {\n    return DEFAULT_LIMITS[limit][0];\n  }\n\n  const isPremium = selectIsCurrentUserPremium(global);\n  const { limits } = appConfig;\n\n  // When there are new limits when updating a layer, until we get a new configuration, we must use the default values\n  const value = limits[limit]?.[isPremium ? 1 : 0] ?? DEFAULT_LIMITS[limit][isPremium ? 1 : 0];\n  if (limit === 'dialogFilters') return value + 1; // Server does not count \"All\" as folder, but we need to\n  return value;\n}\n\nexport function selectPremiumLimit<T extends GlobalState>(global: T, limit: ApiLimitType) {\n  const { appConfig } = global;\n  if (!appConfig) return DEFAULT_LIMITS[limit][1];\n\n  const { limits } = appConfig;\n\n  return limits[limit][1];\n}\n","import { useEffect, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { IS_MOBILE } from '../../util/browser/windowEnvironment';\nimport useLastCallback from '../useLastCallback';\nimport useOldLang from '../useOldLang';\n\nconst NOTIFICATION_DURATION = 8000;\n\nexport default function useUnsupportedMedia(\n  ref: React.RefObject<HTMLVideoElement>, shouldDisableNotification?: boolean, isDisabled?: boolean,\n) {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n  const [isUnsupported, setIsUnsupported] = useState(false);\n\n  const handleUnsupported = useLastCallback(() => {\n    setIsUnsupported(true);\n    if (shouldDisableNotification) return;\n\n    showNotification({\n      message: IS_MOBILE ? lang('Video.Unsupported.Mobile') : lang('Video.Unsupported.Desktop'),\n      duration: NOTIFICATION_DURATION,\n    });\n  });\n\n  const onError = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n    const { error } = target;\n    if (!error) return;\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaError/code\n    if (error.code === 3 || error.code === 4) {\n      handleUnsupported();\n    }\n  });\n\n  const onCanPlay = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n\n    if (!target.videoHeight || !target.videoWidth) {\n      handleUnsupported();\n    }\n  });\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const { current } = ref;\n    if (!current) {\n      return undefined;\n    }\n\n    current.addEventListener('error', onError);\n    current.addEventListener('canplay', onCanPlay);\n\n    return () => {\n      current.removeEventListener('error', onError);\n      current.removeEventListener('canplay', onCanPlay);\n    };\n  }, [isDisabled, ref]);\n\n  return isUnsupported;\n}\n","import { useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { isChatChannel, isUserBot, isUserId } from '../../global/helpers';\nimport { selectPeer, selectUserStatus } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nconst POLLING_INTERVAL = 60 * 60 * 1000;\nconst PEER_LAST_POLLING_TIME = new Map<string, number>();\nlet PEER_ID_QUEUE = new Set<string>();\nconst LIMIT_PER_REQUEST = 100;\nconst REQUEST_THROTTLE = 500;\n\nconst loadFromQueue = throttle(() => {\n  const queue = Array.from(PEER_ID_QUEUE);\n  const queueToLoad = queue.slice(0, LIMIT_PER_REQUEST);\n  const otherQueue = queue.slice(LIMIT_PER_REQUEST + 1);\n\n  getActions().loadStoriesMaxIds({\n    peerIds: queueToLoad,\n  });\n\n  queueToLoad.forEach((id) => PEER_LAST_POLLING_TIME.set(id, Date.now()));\n\n  PEER_ID_QUEUE = new Set(otherQueue);\n\n  // Schedule next load\n  if (PEER_ID_QUEUE.size) {\n    loadFromQueue();\n  }\n}, REQUEST_THROTTLE);\n\nexport default function usePeerStoriesPolling(ids?: string[]) {\n  const peers = useMemo(() => {\n    const global = getGlobal();\n    return ids?.map((id) => selectPeer(global, id)).filter(Boolean);\n  }, [ids]);\n\n  const pollablePeerIds = useMemo(() => {\n    const global = getGlobal();\n    return peers?.filter((peer) => {\n      const lastPollingTime = PEER_LAST_POLLING_TIME.get(peer.id) || 0;\n      if (Date.now() - lastPollingTime < POLLING_INTERVAL) {\n        return false;\n      }\n\n      if (isUserId(peer.id)) {\n        const user = peer as ApiUser;\n        const status = selectUserStatus(global, user.id);\n        const isStatusAvailable = status && status.type !== 'userStatusEmpty';\n        return !user.isContact && !user.isSelf && !isUserBot(user) && !peer.isSupport && isStatusAvailable;\n      } else {\n        const chat = peer as ApiChat;\n        return isChatChannel(chat) && !chat.isRestricted;\n      }\n    }).map((user) => user.id);\n  }, [peers]);\n\n  useEffect(() => {\n    if (pollablePeerIds?.length) {\n      pollablePeerIds.forEach((id) => PEER_ID_QUEUE.add(id));\n      loadFromQueue();\n    }\n  }, [pollablePeerIds]);\n}\n","import { getGlobal } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport type { Dispatch, StateReducer } from '../useReducer';\n\nimport { selectChat } from '../../global/selectors';\nimport { omit, pick } from '../../util/iteratees';\nimport useReducer from '../useReducer';\n\nexport type FolderChatType = {\n  icon: IconName;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  const global = getGlobal();\n  const existingSelectedChatIds = selectedChatIds.filter((id) => selectChat(global, id));\n\n  return {\n    selectedChatIds: existingSelectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setEmoticon' | 'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters' | 'setIsTouched' |\n  'setFolderId' | 'setIsChatlist'\n  );\nexport type FolderEditDispatch = Dispatch<FoldersState, FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: { text: '' },\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n): FoldersState => {\n  switch (action.type) {\n    case 'setEmoticon':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          emoticon: action.payload,\n        },\n        isTouched: true,\n      };\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: { text: action.payload },\n        },\n        isTouched: true,\n      };\n    case 'setFolderId':\n      return {\n        ...state,\n        folderId: action.payload,\n        mode: 'edit',\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : { text: getSuggestedFolderName(state.includeFilters) },\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, description, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsTouched': {\n      return {\n        ...state,\n        isTouched: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    }\n    case 'setIsChatlist':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          isChatList: action.payload,\n        },\n      };\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","import useForceUpdate from '../useForceUpdate';\nimport useInterval from './useInterval';\n\nexport default function useIntervalForceUpdate(interval?: number) {\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, interval, true);\n}\n","import type { Scheduler } from '../util/schedulers';\nimport type { Signal } from '../util/signals';\n\nimport useDebouncedCallback from './useDebouncedCallback';\nimport useDerivedSignal from './useDerivedSignal';\nimport useThrottledCallback from './useThrottledCallback';\n\nexport function useThrottledResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  msOrSchedulerFn: number | Scheduler,\n  noFirst = false,\n) {\n  return useThrottledCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, msOrSchedulerFn, noFirst);\n}\n\nexport function useThrottledSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n): Signal<T> {\n  const throttledResolver = useThrottledResolver(() => getValue(), [getValue], ms, noFirst);\n\n  return useDerivedSignal(\n    throttledResolver, [throttledResolver, getValue], true,\n  );\n}\n\nexport function useDebouncedResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  ms: number,\n  noFirst = false,\n  noLast = false,\n) {\n  return useDebouncedCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n\nexport function useDebouncedSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n  noLast = false,\n): Signal<T> {\n  const debouncedResolver = useDebouncedResolver(() => getValue(), [getValue], ms, noFirst, noLast);\n\n  return useDerivedSignal(\n    debouncedResolver, [debouncedResolver, getValue], true,\n  );\n}\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\nimport { getActions, getGlobal } from '../global';\n\nimport type { Track, TrackId } from '../util/audioPlayer';\nimport type { MediaSessionHandlers } from '../util/mediaSession';\n\nimport { PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION } from '../config';\nimport { selectTabState } from '../global/selectors';\nimport { register } from '../util/audioPlayer';\nimport {\n  registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nconst useAudioPlayer = (\n  trackId: TrackId | undefined,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n  onPause?: NoneToVoidFunction,\n  noReset = false,\n  noHandleEvents = false,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const controllerRef = useRef<ReturnType<typeof register>>(null);\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  });\n\n  useSyncEffect(() => {\n    if (!trackId) {\n      return;\n    }\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      if (noHandleEvents) {\n        return;\n      }\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n          if (trackType !== 'oneTimeVoice') {\n            registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          }\n          setPlaybackState('playing');\n          const { audioPlayer } = selectTabState(getGlobal());\n          setVolume(audioPlayer.volume);\n          toggleMuted(Boolean(audioPlayer.isMuted));\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (trackType === 'voice' || duration > PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION) {\n            setPlaybackRate(audioPlayer.playbackRate);\n          }\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          onPause?.();\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          if (noReset && proxy.currentTime === 0) {\n            break;\n          }\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current!;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      // `isPlayingSync` is only needed to help `setIsPlaying` because it is asynchronous\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      isPlayingSync = true;\n    }\n\n    if (onInit && !noHandleEvents) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current ?? {};\n\n  const duration = useMemo(() => {\n    return proxy?.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n  }, [proxy?.duration, originalDuration]);\n\n  // RAF progress\n  useEffect(() => {\n    if (!proxy) {\n      return;\n    }\n    if (noReset && proxy.currentTime === 0) {\n      return;\n    }\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates, noReset]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy?.(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy?.src && proxy?.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play?.(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy?.src, proxy?.paused, trackType]);\n\n  const playIfPresent = useLastCallback(() => {\n    if (src) {\n      play?.(src);\n    }\n  });\n\n  const playPause = useLastCallback(() => {\n    if (isPlaying) {\n      pause?.();\n    } else {\n      playIfPresent();\n    }\n  });\n\n  const setTime = useLastCallback((time: number) => {\n    setCurrentTime?.(time);\n    if (duration && proxy) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  });\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: React.RefObject<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getActions().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n\nexport default useAudioPlayer;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiChat, ApiTopic, ApiUser } from '../api/types';\nimport type { MenuItemContextAction } from '../components/ui/ListItem';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport {\n  getCanDeleteChat, isChatArchived, isChatChannel, isChatGroup,\n  isUserId,\n} from '../global/helpers';\nimport { IS_ELECTRON, IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../util/browser/windowEnvironment';\nimport { compact } from '../util/iteratees';\nimport useLang from './useLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  topics,\n  handleDelete,\n  handleMute,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  isSavedDialog?: boolean;\n  currentUserId?: string;\n  isPreview?: boolean;\n  topics?: Record<number, ApiTopic>;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n  handleChatFolderChange: NoneToVoidFunction;\n  handleReport?: NoneToVoidFunction;\n}, isInSearch = false) => {\n  const lang = useLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n\n  const deleteTitle = useMemo(() => {\n    if (!chat) return undefined;\n\n    if (isSavedDialog) {\n      return lang('Delete');\n    }\n\n    if (isUserId(chat.id)) {\n      return lang('DeleteChat');\n    }\n\n    if (getCanDeleteChat(chat)) {\n      return lang('DeleteChat');\n    }\n\n    if (isChatChannel(chat)) {\n      return lang('ChannelLeave');\n    }\n\n    return lang('GroupLeaveGroup');\n  }, [chat, isSavedDialog, lang]);\n\n  return useMemo(() => {\n    if (!chat || isPreview) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      toggleSavedDialogPinned,\n      updateChatMutedState,\n      toggleChatArchived,\n      markChatMessagesRead,\n      markChatUnread,\n      openChatInNewTab,\n    } = getActions();\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: IS_ELECTRON ? lang('ChatListOpenInNewWindow') : lang('ChatListOpenInNewTab'),\n      icon: 'open-in-new-tab',\n      handler: () => {\n        if (isSavedDialog) {\n          openChatInNewTab({ chatId: currentUserId!, threadId: chat.id });\n        } else {\n          openChatInNewTab({ chatId: chat.id });\n        }\n      },\n    };\n\n    const togglePinned = () => {\n      if (isSavedDialog) {\n        toggleSavedDialogPinned({ id: chat.id });\n      } else {\n        toggleChatPinned({ id: chat.id, folderId: folderId! });\n      }\n    };\n\n    const actionPin = isPinned\n      ? {\n        title: lang('ChatListUnpinFromTop'),\n        icon: 'unpin',\n        handler: togglePinned,\n      }\n      : {\n        title: lang('ChatListPinToTop'),\n        icon: 'pin',\n        handler: togglePinned,\n      };\n\n    const actionDelete = {\n      title: deleteTitle,\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    if (isSavedDialog) {\n      return compact([actionOpenInNewTab, actionPin, actionDelete]) as MenuItemContextAction[];\n    }\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('ChatListContextAddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatsUnmute'),\n        icon: 'unmute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatsMute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    if (isInSearch) {\n      return compact([actionOpenInNewTab, actionPin, actionAddToFolder, actionMute]) as MenuItemContextAction[];\n    }\n\n    const actionMaskAsRead = (\n      chat.unreadCount || chat.hasUnreadMark || Object.values(topics || {}).some(({ unreadCount }) => unreadCount)\n    ) ? {\n        title: lang('ChatListContextMaskAsRead'),\n        icon: 'readchats',\n        handler: () => markChatMessagesRead({ id: chat.id }),\n      } : undefined;\n    const actionMarkAsUnread = !(chat.unreadCount || chat.hasUnreadMark) && !chat.isForum\n      ? { title: lang('ChatListContextMaskAsUnread'), icon: 'unread', handler: () => markChatUnread({ id: chat.id }) }\n      : undefined;\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && !user && (isChatChannel(chat) || isChatGroup(chat));\n    const actionReport = canReport\n      ? { title: lang('ReportPeerReport'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionAddToFolder,\n      actionMaskAsRead,\n      actionMarkAsUnread,\n      actionPin,\n      !isSelf && actionMute,\n      !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      actionReport,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted, currentUserId,\n    handleDelete, handleMute, handleReport, folderId, isSelf, isServiceNotifications, isSavedDialog, deleteTitle,\n    isPreview, topics,\n  ]);\n};\n\nexport default useChatContextActions;\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiTypeStory } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nconst THROTTLE_THRESHOLD_MS = 200;\n\nfunction useEnsureStory(\n  peerId?: string,\n  storyId?: number,\n  story?: ApiTypeStory,\n) {\n  const { loadPeerStoriesByIds } = getActions();\n\n  const loadStoryThrottled = useMemo(() => {\n    const throttled = throttle(loadPeerStoriesByIds, THROTTLE_THRESHOLD_MS, true);\n    return () => {\n      throttled({ peerId: peerId!, storyIds: [storyId!] });\n    };\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    const shouldLoadStory = !story || !('content' in story || 'isDeleted' in story);\n    if (peerId && storyId && shouldLoadStory) {\n      loadStoryThrottled();\n    }\n  }, [loadStoryThrottled, story, storyId, peerId]);\n}\n\nexport default useEnsureStory;\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useForumPanelRender(isForumPanelOpen = false) {\n  const shouldRenderForumPanelRef = useRef(isForumPanelOpen);\n  const isAnimationStartedRef = useRef(false);\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isForumPanelOpen) {\n      shouldRenderForumPanelRef.current = true;\n    }\n  }, [isForumPanelOpen]);\n\n  const handleForumPanelAnimationEnd = useLastCallback(() => {\n    shouldRenderForumPanelRef.current = false;\n    isAnimationStartedRef.current = false;\n    forceUpdate();\n  });\n\n  const handleForumPanelAnimationStart = useLastCallback(() => {\n    isAnimationStartedRef.current = true;\n    forceUpdate();\n  });\n\n  return {\n    shouldRenderForumPanel: shouldRenderForumPanelRef.current,\n    isAnimationStarted: isAnimationStartedRef.current,\n    handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart,\n  };\n}\n","import { useEffect } from '../lib/teact/teact';\n\nimport { createCallbackManager } from '../util/callbacks';\nimport { getHotkeyMatcher } from '../util/parseHotkey';\n\nconst IGNORE_TAGS = new Set(['INPUT', 'TEXTAREA', 'SELECT']);\n\nconst handlers = createCallbackManager();\ndocument.documentElement.addEventListener('keydown', handlers.runCallbacks);\n\nexport function useHotkeys(hotkeys?: Record<string, (e: KeyboardEvent) => void>) {\n  useEffect(() => {\n    if (!hotkeys) {\n      return undefined;\n    }\n\n    const entries = Object.entries(hotkeys);\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (!shouldFireEvent(e)) {\n        return;\n      }\n\n      entries.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(e)) {\n          handler(e);\n        }\n      });\n    }\n\n    return handlers.addCallback(handleKeyDown);\n  }, [hotkeys]);\n}\n\nfunction shouldFireEvent(e: KeyboardEvent) {\n  if (e.target instanceof HTMLElement) {\n    return !IGNORE_TAGS.has(e.target.tagName);\n  }\n\n  return true;\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport useAppLayout from './useAppLayout';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\nconst MODAL_HIDE_DELAY_MS = 300;\n\nexport default function useInputFocusOnOpen(\n  inputRef: RefObject<HTMLInputElement | HTMLTextAreaElement>,\n  isOpen?: boolean,\n  onClose?: NoneToVoidFunction,\n) {\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (isOpen) {\n      if (!isMobile) {\n        setTimeout(() => {\n          requestMutation(() => {\n            if (inputRef.current?.isConnected) {\n              inputRef.current.focus();\n            }\n          });\n        }, FOCUS_DELAY_MS);\n      }\n    } else {\n      if (inputRef.current?.isConnected) {\n        inputRef.current.blur();\n      }\n\n      if (onClose) {\n        setTimeout(onClose, MODAL_HIDE_DELAY_MS);\n      }\n    }\n  }, [inputRef, isMobile, isOpen, onClose]);\n}\n","import { useCallback, useRef, useUnmountCleanup } from '../lib/teact/teact';\n\nconst DEFAULT_THRESHOLD = 250;\n\nfunction useLongPress({\n  onClick, onStart, onEnd, threshold = DEFAULT_THRESHOLD,\n}: {\n  onStart?: NoneToVoidFunction;\n  onClick?: (event: React.MouseEvent | React.TouchEvent) => void;\n  onEnd?: NoneToVoidFunction;\n  threshold?: number;\n}) {\n  const isLongPressActive = useRef(false);\n  const isPressed = useRef(false);\n  const timerId = useRef<number | undefined>(undefined);\n\n  const start = useCallback((e: React.MouseEvent | React.TouchEvent) => {\n    const canProcessEvent = ('button' in e && e.button === 0) || ('touches' in e && e.touches.length > 0);\n    if (isPressed.current || !canProcessEvent) {\n      return;\n    }\n\n    isPressed.current = true;\n    timerId.current = window.setTimeout(() => {\n      onStart?.();\n      isLongPressActive.current = true;\n    }, threshold);\n  }, [onStart, threshold]);\n\n  const cancel = useCallback((e: React.MouseEvent | React.TouchEvent) => {\n    if (!isPressed.current) return;\n\n    if (isLongPressActive.current) {\n      onEnd?.();\n    } else {\n      onClick?.(e);\n    }\n\n    isLongPressActive.current = false;\n    isPressed.current = false;\n    window.clearTimeout(timerId.current);\n  }, [onEnd, onClick]);\n\n  useUnmountCleanup(() => {\n    window.clearTimeout(timerId.current);\n  });\n\n  return {\n    onMouseDown: start,\n    onMouseUp: cancel,\n    onMouseLeave: cancel,\n    onTouchStart: start,\n    onTouchEnd: cancel,\n  };\n}\n\nexport default useLongPress;\n","import type { RefObject } from '../../lib/teact/teact';\nimport { useEffect } from '../../lib/teact/teact';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { throttle } from '../../util/schedulers';\n\nconst THROTTLE_DELAY = 100;\n\nconst useMarkScrolled = ({\n  containerRef, selector,\n}: {\n  containerRef: RefObject<HTMLDivElement | null>;\n  selector: string;\n}, deps: unknown[]) => {\n  useEffect(() => {\n    const elements = containerRef?.current?.querySelectorAll(selector);\n    if (!elements?.length) return undefined;\n\n    const handleScroll = throttle((event: Event) => {\n      const target = event.target as HTMLElement;\n      const isScrolled = target.scrollTop > 0;\n      requestMutation(() => {\n        target.classList.toggle('scrolled', isScrolled);\n      });\n    }, THROTTLE_DELAY);\n\n    elements.forEach((el) => el.addEventListener('scroll', handleScroll, { passive: true }));\n    // Trigger the scroll handler immediately to apply the current state\n    elements.forEach((el) => el.dispatchEvent(new Event('scroll', { bubbles: false })));\n\n    return () => {\n      elements.forEach((el) => el.removeEventListener('scroll', handleScroll));\n    };\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [containerRef, selector, ...deps]);\n};\n\nexport default useMarkScrolled;\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { ApiMediaFormat } from '../api/types';\n\nimport { selectIsSynced } from '../global/selectors';\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/browser/windowEnvironment';\nimport * as mediaLoader from '../util/mediaLoader';\nimport { throttle } from '../util/schedulers';\nimport useSelector from './data/useSelector';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory(mediaHash) : undefined;\n  const isStreaming = IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive;\n  const forceUpdate = useForceUpdate();\n  const isSynced = useSelector(selectIsSynced);\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, isStreaming, delay, handleProgress, isHtmlAllowed, id, isSynced,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/browser/windowEnvironment';\nimport useLastCallback from './useLastCallback';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  const markMouseInside = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  });\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport usePreviousDeprecated from './usePreviousDeprecated';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function usePrevDuringAnimation<T>(current: T, duration?: number): T {\n  const prev = usePreviousDeprecated(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useSyncEffect(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [duration, forceUpdate, isCurrentPresent, isPrevPresent]);\n\n  return (!timeoutRef.current || !duration || isCurrentPresent ? current : prev)!;\n}\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<State, Actions> = (action: ReducerAction<Actions>) => State;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const forceUpdate = useForceUpdate();\n  const reducerRef = useRef(reducer);\n  const state = useRef(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    state.current = reducerRef.current(state.current, action);\n    forceUpdate();\n    return state.current;\n  }, []);\n\n  return [\n    state.current,\n    dispatch,\n  ] as [State, Dispatch<State, Actions>];\n}\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiSendMessageAction } from '../api/types';\nimport type { ThreadId } from '../types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: ThreadId) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      if (!chatId || !threadId) return;\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { DEBUG } from '../config';\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../util/animation';\nimport unloadVideo from '../util/browser/unloadVideo';\nimport { IS_SAFARI } from '../util/browser/windowEnvironment';\nimport { makeProgressiveLoader } from '../util/progressiveLoader';\n\nconst VIDEO_REVEAL_DELAY = 100;\n\nexport function useStreaming(videoRef: RefObject<HTMLVideoElement>, url?: string, mimeType?: string) {\n  useEffect(() => {\n    if (!url || !videoRef.current) return undefined;\n    const MediaSourceClass = getMediaSource();\n    const video = videoRef.current;\n\n    if (!IS_SAFARI || !mimeType || !MediaSourceClass?.isTypeSupported(mimeType)) {\n      return undefined;\n    }\n    const mediaSource = new MediaSourceClass();\n\n    function revealVideo() {\n      requestMutation(() => {\n        video.style.display = 'block';\n        setTimeout(() => {\n          requestMutation(() => {\n            applyStyles(video, { opacity: '1' });\n          });\n        }, VIDEO_REVEAL_DELAY);\n      });\n    }\n\n    function onSourceOpen() {\n      if (!url || !mimeType) return;\n\n      const sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n      const loader = makeProgressiveLoader(url);\n\n      function onUpdateEnded() {\n        loader.next()\n          .then(({\n            value,\n            done,\n          }) => {\n            if (mediaSource.readyState !== 'open') return;\n            if (done) {\n              endOfStream(mediaSource);\n              return;\n            }\n            appendBuffer(sourceBuffer, value);\n          });\n      }\n\n      sourceBuffer.addEventListener('updateend', onUpdateEnded);\n\n      loader.next()\n        .then(({\n          value,\n          done,\n        }) => {\n          if (done || mediaSource.readyState !== 'open') return;\n          revealVideo();\n          appendBuffer(sourceBuffer, value);\n        });\n    }\n\n    mediaSource.addEventListener('sourceopen', onSourceOpen, { once: true });\n\n    requestMutation(() => {\n      applyStyles(video, {\n        display: 'none',\n        opacity: '0',\n      });\n      video.src = URL.createObjectURL(mediaSource);\n    });\n\n    return () => {\n      requestMutation(() => {\n        const src = video.src;\n        unloadVideo(video);\n        mediaSource.removeEventListener('sourceopen', onSourceOpen);\n        if (mediaSource.readyState === 'open') {\n          endOfStream(mediaSource);\n        }\n        URL.revokeObjectURL(src);\n      });\n    };\n  }, [mimeType, url, videoRef]);\n\n  return checkIfStreamingSupported(mimeType);\n}\n\nexport function checkIfStreamingSupported(mimeType?: string) {\n  if (!IS_SAFARI || !mimeType) return false;\n  return Boolean(getMediaSource()?.isTypeSupported(mimeType));\n}\n\nfunction appendBuffer(sourceBuffer: SourceBuffer, buffer: ArrayBuffer) {\n  try {\n    sourceBuffer.appendBuffer(buffer);\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to append buffer', error);\n    }\n  }\n}\n\nfunction endOfStream(mediaSource: MediaSource) {\n  try {\n    mediaSource.endOfStream();\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to end stream', error);\n    }\n  }\n}\n\nfunction getMediaSource(): typeof MediaSource | undefined {\n  if ('ManagedMediaSource' in window) {\n    // @ts-ignore\n    return ManagedMediaSource;\n  }\n  if ('MediaSource' in window) {\n    return MediaSource;\n  }\n  return undefined;\n}\n","import { useEffect } from '../../lib/teact/teact';\n\nimport { onBeforeUnload } from '../../util/schedulers';\nimport useLastCallback from '../useLastCallback';\n\nexport default function useBeforeUnload(callback: AnyToVoidFunction) {\n  const lastCallback = useLastCallback(callback);\n\n  useEffect(() => onBeforeUnload(lastCallback), [lastCallback]);\n}\n","import { useEffect, useLayoutEffect, useState } from '../../lib/teact/teact';\n\nimport { ElectronEvent } from '../../types/electron';\n\nimport { IS_IOS } from '../../util/browser/windowEnvironment';\n\ntype ElementType = HTMLElement;\ntype RefType = {\n  current: ElementType | null;\n};\n\ntype ReturnType = [boolean, () => void, () => void] | [false];\ntype CallbackType = (isPlayed: boolean) => void;\n\nconst prop = getBrowserFullscreenElementProp();\n\nexport default function useFullscreen(elRef: RefType, exitCallback?: CallbackType,\n  enterCallback?: CallbackType): ReturnType {\n  const [isFullscreen, setIsFullscreen] = useState(Boolean(prop && document[prop]));\n\n  const setFullscreen = () => {\n    if (!elRef.current || !(prop || IS_IOS) || isFullscreen) {\n      return;\n    }\n    safeRequestFullscreen(elRef.current);\n    setIsFullscreen(true);\n  };\n\n  const exitFullscreen = () => {\n    if (!elRef.current) {\n      return;\n    }\n    safeExitFullscreen();\n    setIsFullscreen(false);\n  };\n\n  useLayoutEffect(() => {\n    const element = elRef.current;\n    const listener = () => {\n      const isEnabled = Boolean(prop && document[prop]);\n      setIsFullscreen(isEnabled);\n      if (isEnabled) {\n        enterCallback?.(false);\n      } else {\n        exitCallback?.(false);\n      }\n      // In Firefox fullscreen video controls are not visible by default, so we force them manually\n      if (element instanceof HTMLVideoElement) element.controls = isEnabled;\n    };\n\n    const listenerEnter = () => {\n      setIsFullscreen(true);\n      if (enterCallback) enterCallback(true);\n    };\n\n    const listenerExit = () => {\n      setIsFullscreen(false);\n      if (exitCallback) exitCallback(false);\n    };\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    if (element) {\n      element.addEventListener('webkitbeginfullscreen', listenerEnter, false);\n      element.addEventListener('webkitendfullscreen', listenerExit, false);\n    }\n\n    return () => {\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n      if (element) {\n        element.removeEventListener('webkitbeginfullscreen', listenerEnter, false);\n        element.removeEventListener('webkitendfullscreen', listenerExit, false);\n      }\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  if (!prop && !IS_IOS) {\n    return [false];\n  }\n\n  return [isFullscreen, setFullscreen, exitFullscreen];\n}\n\nexport const useFullscreenStatus = () => {\n  const [isFullscreen, setIsFullscreen] = useState(false);\n\n  useEffect(() => {\n    const listener = () => {\n      setIsFullscreen(checkIfFullscreen());\n    };\n\n    const removeElectronListener = window.electron?.on(ElectronEvent.FULLSCREEN_CHANGE, setIsFullscreen);\n    window.electron?.isFullscreen().then(setIsFullscreen);\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    return () => {\n      removeElectronListener?.();\n\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n    };\n  }, []);\n\n  return isFullscreen;\n};\n\nfunction getBrowserFullscreenElementProp() {\n  if (typeof document.fullscreenElement !== 'undefined') {\n    return 'fullscreenElement';\n  } else if (typeof document.mozFullScreenElement !== 'undefined') {\n    return 'mozFullScreenElement';\n  } else if (typeof document.webkitFullscreenElement !== 'undefined') {\n    return 'webkitFullscreenElement';\n  }\n  return '';\n}\n\nexport function checkIfFullscreen() {\n  const fullscreenProp = getBrowserFullscreenElementProp();\n  return Boolean(fullscreenProp && document[fullscreenProp]);\n}\n\nexport function safeRequestFullscreen(element: ElementType) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  } else if (element.webkitEnterFullscreen) {\n    element.webkitEnterFullscreen();\n  } else if (element.mozRequestFullScreen) {\n    element.mozRequestFullScreen();\n  }\n}\n\nexport function safeExitFullscreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.webkitCancelFullScreen) {\n    document.webkitCancelFullScreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  }\n}\n","export enum ElectronEvent {\n  FULLSCREEN_CHANGE = 'fullscreen-change',\n  UPDATE_ERROR = 'update-error',\n  UPDATE_AVAILABLE = 'update-available',\n  DEEPLINK = 'deeplink',\n}\n\nexport enum ElectronAction {\n  GET_IS_FULLSCREEN = 'get-is-fullscreen',\n  INSTALL_UPDATE = 'install-update',\n  HANDLE_DOUBLE_CLICK = 'handle-double-click',\n  OPEN_NEW_WINDOW = 'open-new-window',\n  SET_WINDOW_TITLE = 'set-window-title',\n  SET_TRAFFIC_LIGHT_POSITION = 'set-traffic-light-position',\n  SET_IS_AUTO_UPDATE_ENABLED = 'set-is-auto-update-enabled',\n  GET_IS_AUTO_UPDATE_ENABLED = 'get-is-auto-update-enabled',\n  SET_IS_TRAY_ICON_ENABLED = 'set-is-tray-icon-enabled',\n  GET_IS_TRAY_ICON_ENABLED = 'get-is-tray-icon-enabled',\n  RESTORE_LOCAL_STORAGE = 'restore-local-storage',\n}\n\nexport type TrafficLightPosition = 'standard' | 'lowered';\n\nexport interface ElectronApi {\n  isFullscreen: () => Promise<boolean>;\n  installUpdate: () => Promise<void>;\n  handleDoubleClick: () => Promise<void>;\n  openNewWindow: (url: string, title?: string) => Promise<void>;\n  setWindowTitle: (title?: string) => Promise<void>;\n  setTrafficLightPosition: (position: TrafficLightPosition) => Promise<void>;\n  setIsAutoUpdateEnabled: (value: boolean) => Promise<void>;\n  getIsAutoUpdateEnabled: () => Promise<boolean>;\n  setIsTrayIconEnabled: (value: boolean) => Promise<void>;\n  getIsTrayIconEnabled: () => Promise<boolean>;\n  restoreLocalStorage: () => Promise<void>;\n  on: (eventName: ElectronEvent, callback: any) => VoidFunction;\n}\n\ndeclare global {\n  interface Window {\n    electron?: ElectronApi;\n  }\n}\n","import generateUniqueId from './generateUniqueId';\nimport { throttleWithTickEnd } from './schedulers';\n\nexport interface CancellableCallback {\n  (\n    ...args: any[]\n  ): void;\n\n  isCanceled?: boolean;\n}\n\ntype InitPayload = {\n  type: 'init';\n  messageId?: string;\n  args: any;\n};\n\ntype CallMethodPayload = {\n  type: 'callMethod';\n  messageId?: string;\n  name: string;\n  args: any;\n  withCallback?: boolean;\n};\n\ntype CancelProgressPayload = {\n  type: 'cancelProgress';\n  messageId: string;\n};\n\nexport type OriginPayload =\n  InitPayload\n  | CallMethodPayload\n  | CancelProgressPayload;\n\nexport type OriginMessageData = {\n  channel?: string;\n  payloads: OriginPayload[];\n};\n\nexport interface OriginMessageEvent {\n  data: OriginMessageData;\n}\n\nexport type ApiUpdate =\n  { type: string }\n  & any;\n\nexport type WorkerPayload =\n  {\n    channel?: string;\n    type: 'update';\n    update: ApiUpdate;\n  }\n  |\n  {\n    channel?: string;\n    type: 'methodResponse';\n    messageId: string;\n    response?: any;\n    error?: { message: string };\n  }\n  |\n  {\n    channel?: string;\n    type: 'methodCallback';\n    messageId: string;\n    callbackArgs: any[];\n  }\n  |\n  {\n    channel?: string;\n    type: 'unhandledError';\n    error?: { message: string };\n  };\n\nexport type WorkerMessageData = {\n  channel?: string;\n  payloads: WorkerPayload[];\n};\n\nexport interface WorkerMessageEvent {\n  data: WorkerMessageData;\n}\n\ninterface RequestState {\n  messageId: string;\n  resolve: Function;\n  reject: Function;\n  callback: AnyToVoidFunction;\n}\n\ntype InputRequestTypes = Record<string, AnyFunction>;\n\ntype Values<T> = T[keyof T];\nexport type RequestTypes<T extends InputRequestTypes> = Values<{\n  [Name in keyof (T)]: {\n    name: Name & string;\n    args: Parameters<T[Name]>;\n    transferables?: Transferable[];\n  }\n}>;\n\nclass ConnectorClass<T extends InputRequestTypes> {\n  private requestStates = new Map<string, RequestState>();\n\n  private requestStatesByCallback = new Map<AnyToVoidFunction, RequestState>();\n\n  private pendingPayloads: OriginPayload[] = [];\n\n  private pendingTransferables: Transferable[] = [];\n\n  constructor(\n    public target: Worker,\n    private onUpdate?: (update: ApiUpdate) => void,\n    private channel?: string,\n  ) {\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  public destroy() {\n  }\n\n  init(...args: any[]) {\n    this.postMessageOnTickEnd({\n      type: 'init',\n      args,\n    });\n  }\n\n  request(messageData: RequestTypes<T>) {\n    const { requestStates, requestStatesByCallback } = this;\n    const { transferables, ...restMessageData } = messageData;\n\n    const messageId = generateUniqueId();\n    const payload: CallMethodPayload = {\n      type: 'callMethod',\n      messageId,\n      ...restMessageData,\n    };\n\n    const requestState = { messageId } as RequestState;\n\n    // Re-wrap type because of `postMessage`\n    const promise: Promise<any> = new Promise((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    });\n\n    if (typeof payload.args[payload.args.length - 1] === 'function') {\n      payload.withCallback = true;\n\n      const callback = payload.args.pop() as AnyToVoidFunction;\n      requestState.callback = callback;\n      requestStatesByCallback.set(callback, requestState);\n    }\n\n    requestStates.set(messageId, requestState);\n    promise\n      .catch(() => undefined)\n      .finally(() => {\n        requestStates.delete(messageId);\n\n        if (requestState.callback) {\n          requestStatesByCallback.delete(requestState.callback);\n        }\n      });\n\n    this.postMessageOnTickEnd(payload, transferables);\n\n    return promise;\n  }\n\n  cancelCallback(progressCallback: CancellableCallback) {\n    progressCallback.isCanceled = true;\n\n    const { messageId } = this.requestStatesByCallback.get(progressCallback) || {};\n    if (!messageId) {\n      return;\n    }\n\n    this.postMessageOnTickEnd({\n      type: 'cancelProgress',\n      messageId,\n    });\n  }\n\n  onMessage(data: WorkerMessageData) {\n    const { requestStates, channel } = this;\n    if (data.channel !== channel) {\n      return;\n    }\n\n    data.payloads.forEach((payload) => {\n      if (payload.type === 'update' && this.onUpdate) {\n        this.onUpdate(payload.update);\n      }\n      if (payload.type === 'methodResponse') {\n        const requestState = requestStates.get(payload.messageId);\n        if (requestState) {\n          if (payload.error) {\n            requestState.reject(payload.error);\n          } else {\n            requestState.resolve(payload.response);\n          }\n        }\n      } else if (payload.type === 'methodCallback') {\n        const requestState = requestStates.get(payload.messageId);\n        requestState?.callback?.(...payload.callbackArgs);\n      } else if (payload.type === 'unhandledError') {\n        throw new Error(payload.error?.message);\n      }\n    });\n  }\n\n  private postMessageOnTickEnd(payload: OriginPayload, transferables?: Transferable[]) {\n    this.pendingPayloads.push(payload);\n\n    if (transferables) {\n      this.pendingTransferables.push(...transferables);\n    }\n\n    this.postMessagesOnTickEnd();\n  }\n\n  private postMessagesOnTickEnd = throttleWithTickEnd(() => {\n    const { channel } = this;\n    const payloads = this.pendingPayloads;\n    const transferables = this.pendingTransferables;\n\n    this.pendingPayloads = [];\n    this.pendingTransferables = [];\n\n    this.target.postMessage({ channel, payloads }, transferables);\n  });\n}\n\nexport function createConnector<T extends InputRequestTypes>(\n  worker: Worker,\n  onUpdate?: (update: ApiUpdate) => void,\n  channel?: string,\n) {\n  const connector = new ConnectorClass<T>(worker, onUpdate, channel);\n\n  function handleMessage({ data }: WorkerMessageEvent) {\n    connector.onMessage(data);\n  }\n\n  worker.addEventListener('message', handleMessage);\n\n  connector.destroy = () => {\n    worker.removeEventListener('message', handleMessage);\n  };\n\n  return connector;\n}\n\nexport type Connector<T extends InputRequestTypes = InputRequestTypes> = ReturnType<typeof createConnector<T>>;\n","import { getActions, getGlobal } from '../global';\n\nimport type { ApiMessage } from '../api/types';\nimport type { MessageKey } from './keys/messageKey';\nimport { AudioOrigin, GlobalSearchContent } from '../types';\n\nimport { requestNextMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCurrentMessageList, selectTabState } from '../global/selectors';\nimport { IS_SAFARI } from './browser/windowEnvironment';\nimport { getMessageServerKey, parseMessageKey } from './keys/messageKey';\nimport { isSafariPatchInProgress, patchSafariProgressiveAudio } from './patchSafariProgressiveAudio';\nimport safePlay from './safePlay';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio' | 'oneTimeVoice';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\n\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = selectTabState(getGlobal()).audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset `src` to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // `onPause` not called otherwise, but required to sync UI\n        requestNextMutation(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (selectTabState(getGlobal()).globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId | undefined {\n  const key = getMessageServerKey(message);\n  if (!key) {\n    return undefined;\n  }\n  return `${key}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import { pause } from './schedulers';\n\ntype PendingDownload = {\n  url: string;\n  filename: string;\n};\n\n// Chrome prevents more than 10 downloads per second\nconst LIMIT_PER_BATCH = 10;\nconst BATCH_INTERVAL = 1000;\n\nlet pendingDownloads: PendingDownload[] = [];\nlet planned = false;\n\nexport default function download(url: string, filename: string) {\n  pendingDownloads.push({ url, filename });\n  if (!planned) {\n    planned = true;\n    setTimeout(async () => {\n      await processQueue();\n      planned = false;\n    }, BATCH_INTERVAL);\n  }\n}\n\nasync function processQueue() {\n  let count = 0;\n  for (const pendingDownload of pendingDownloads) {\n    downloadOne(pendingDownload);\n    count++;\n    if (count === LIMIT_PER_BATCH) {\n      await pause(BATCH_INTERVAL);\n      count = 0;\n    }\n  }\n  pendingDownloads = [];\n}\n\nfunction downloadOne({ url, filename }: PendingDownload) {\n  const link = document.createElement('a');\n  link.href = url;\n  link.target = '_blank';\n  link.rel = 'noopener noreferrer';\n  link.download = filename;\n  try {\n    link.click();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err); // Suppress redundant \"Blob loading failed\" error popup on IOS\n  }\n}\n","import type { MediaWorkerApi } from '../lib/mediaWorker/index.worker';\nimport type { Connector } from './PostMessageConnector';\n\nimport { IS_TEST } from '../config';\n\nimport { createConnector } from './PostMessageConnector';\n\nexport const MAX_WORKERS = Math.min(navigator.hardwareConcurrency || 4, 4);\n\nlet instances: {\n  worker: Worker;\n  connector: Connector<MediaWorkerApi>;\n}[] | undefined;\n\nexport default function launchMediaWorkers() {\n  if (IS_TEST) return [];\n  if (!instances) {\n    instances = new Array(MAX_WORKERS).fill(undefined).map(\n      () => {\n        const worker = new Worker(new URL('../lib/mediaWorker/index.worker.ts', import.meta.url));\n        const connector = createConnector<MediaWorkerApi>(worker, undefined, 'media');\n        return { worker, connector };\n      },\n    );\n  }\n\n  return instances;\n}\n\nexport function requestMediaWorker(payload: Parameters<Connector<MediaWorkerApi>['request']>[0], index: number) {\n  return launchMediaWorkers()[index].connector.request(payload);\n}\n","import type { ApiGeoPoint } from '../api/types';\n\nconst PROVIDERS = {\n  google: 'https://maps.google.com/maps',\n  bing: 'https://bing.com/maps/default.aspx',\n  osm: 'https://www.openstreetmap.org',\n  apple: 'https://maps.apple.com',\n};\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L82\nconst VENUE_COLORS = new Map(Object.entries({\n  'building/medical': '#43b3f4',\n  'building/gym': '#43b3f4',\n  'education/cafeteria': '#f7943f',\n  'travel/bedandbreakfast': '#9987ff',\n  'travel/hotel': '#9987ff',\n  'travel/hostel': '#9987ff',\n  'travel/resort': '#9987ff',\n  'travel/hotel_bar': '#e56dd6',\n  arts_entertainment: '#e56dd6',\n  building: '#6e81b2',\n  education: '#a57348',\n  event: '#959595',\n  food: '#f7943f',\n  home: '#00aeef',\n  nightlife: '#e56dd6',\n  parks_outdoors: '#6cc039',\n  shops: '#ffb300',\n  travel: '#1c9fff',\n  work: '#ad7854',\n}));\n\nconst RANDOM_COLORS = [\n  '#e56cd5', '#f89440', '#9986ff', '#44b3f5', '#6dc139', '#ff5d5a', '#f87aad', '#6e82b3', '#f5ba21',\n];\n\nexport function prepareMapUrl(provider: keyof typeof PROVIDERS, point: Omit<ApiGeoPoint, 'accessHash'>, zoom = 15) {\n  const { lat, long } = point;\n  const providerUrl = PROVIDERS[provider];\n  switch (provider) {\n    case 'google':\n      return `${providerUrl}/place/${lat}+${long}/@${lat},${long},${zoom}z`;\n    case 'bing':\n      return `${providerUrl}?cp=${lat}~${long}&lvl=${zoom}&sp=point.${lat}_${long}`;\n    case 'apple':\n      return `${providerUrl}?q=${lat},${long}`;\n    case 'osm':\n    default:\n      return `${providerUrl}/?mlat=${lat}&mlon=${long}&zoom=${zoom}`;\n  }\n}\n\nexport function getMetersPerPixel(lat: number, zoom: number) {\n  // https://groups.google.com/g/google-maps-js-api-v3/c/hDRO4oHVSeM/m/osOYQYXg2oUJ\n  return (156543.03392 * Math.cos(lat * (Math.PI / 180))) / 2 ** zoom;\n}\n\nexport function getVenueIconUrl(type?: string) {\n  if (!type) return '';\n  return `https://ss3.4sqi.net/img/categories_v2/${type}_88.png`;\n}\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L104\nexport function getVenueColor(type?: string) {\n  if (!type) return '#008df2';\n  return VENUE_COLORS.get(type)\n    || VENUE_COLORS.get(type.split('/')[0])\n    || RANDOM_COLORS[stringToNumber(type) % RANDOM_COLORS.length];\n}\n\nfunction stringToNumber(str: string) {\n  return str.split('').reduce((prevHash, currVal) => (\n    // eslint-disable-next-line no-bitwise\n    (((prevHash << 5) - prevHash) + currVal.charCodeAt(0)) | 0), 0);\n}\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","import { ApiMediaFormat } from '../api/types';\n\nimport { callApi } from '../api/gramjs';\n\nconst MB = 1024 * 1024;\nconst DEFAULT_PART_SIZE = 0.25 * MB;\nconst MAX_END_TO_CACHE = 5 * MB - 1; // We only cache the first 2 MB of each file\n\nconst bufferCache = new Map<string, ArrayBuffer>();\nconst sizeCache = new Map<string, number>();\nconst pendingRequests = new Map<string, Promise<{ arrayBuffer?: ArrayBuffer; fullSize?: number } | undefined>>();\n\nexport async function* makeProgressiveLoader(\n  url: string,\n  start = 0,\n  chunkSize = DEFAULT_PART_SIZE,\n): AsyncGenerator<ArrayBuffer, void, undefined> {\n  const match = url.match(/fileSize=(\\d+)/);\n  let fileSize;\n  if (match) {\n    fileSize = match && Number(match[1]);\n  } else {\n    fileSize = sizeCache.get(url);\n  }\n\n  while (true) {\n    if (fileSize && start >= fileSize) return;\n\n    let end = start + chunkSize - 1;\n    if (fileSize && end > fileSize) {\n      end = fileSize - 1;\n    }\n\n    // Check if we have the chunk in memory\n    const cacheKey = `${url}:${start}-${end}`;\n    let arrayBuffer = bufferCache.get(cacheKey);\n\n    if (!arrayBuffer) {\n      let request = pendingRequests.get(cacheKey);\n      if (!request) {\n        request = callApi('downloadMedia', {\n          mediaFormat: ApiMediaFormat.Progressive,\n          url,\n          start,\n          end,\n        });\n\n        pendingRequests.set(cacheKey, request);\n      }\n\n      const result = await request.finally(() => {\n        pendingRequests.delete(cacheKey);\n      });\n\n      if (!result?.arrayBuffer) return;\n\n      // If fileSize is not yet defined, retrieve it from the first chunk's response\n      if (result.fullSize && !fileSize) {\n        fileSize = result.fullSize;\n        sizeCache.set(url, result.fullSize);\n      }\n\n      // Store the chunk in memory\n      arrayBuffer = result.arrayBuffer;\n\n      // Cache the first 2 MB of each file\n      if (end <= MAX_END_TO_CACHE) {\n        bufferCache.set(cacheKey, result.arrayBuffer);\n      }\n    }\n\n    // Yield the chunk data\n    yield arrayBuffer;\n\n    start = end + 1;\n  }\n}\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CdTfL4f7\",\"fadeIn\":\"MyeHARy0\",\"closing\":\"EZbKn_M3\",\"peer\":\"kW0xpExG\",\"name\":\"BDZrSTO_\",\"name_hasUnreadStory\":\"OoUm5AUZ\",\"nameHasUnreadStory\":\"OoUm5AUZ\",\"hidden\":\"lnVtxMZI\",\"contextMenu\":\"N1sagA0s\"};","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"BDZrSTO_\",\"root\":\"QOz6fQFU\",\"avatar\":\"dXSy0i2c\",\"avatarHidden\":\"n0vJEdNW\",\"ghost\":\"E1IeDpeb\",\"ghostAnimateName\":\"HMp3KTKQ\",\"ghostRevealName\":\"unYkDic1\",\"ghostLast\":\"dZJGfaXC\"};"],"names":["memo","withGlobal","global","chatId","chat","selectChat","groupCall","selectChatGroupCall","isActive","selectTabState","isMasterTab","groupCalls","activeGroupCallId","undefined","id","Boolean","participantsCount","isLoaded","isCallNotEmpty","isCallActive","GroupCallTopPane","className","onPaneStateChange","requestMasterAndJoinGroupCall","subscribeToGroupCallUpdates","getActions","lang","useOldLang","handleJoinGroupCall","useCallback","participants","fetchedParticipants","useMemo","usersById","getGlobal","users","byId","chatsById","chats","Object","values","slice","map","filter","useEffect","subscribed","renderingParticipantCount","useCurrentOrPrev","renderingFetchedParticipants","isRendering","ref","shouldRender","useHeaderPane","isOpen","onStateChange","React","createElement","buildClassName","onClick","length","AvatarList","size","peers","Button","round","TINY_SCREEN_WIDTH_MQL","window","matchMedia","WITH_AVATAR_TINY_SCREEN_WIDTH_MQL","renderSeekline","playProgress","bufferedRanges","seekerRef","start","end","style","Audio","theme","message","senderTitle","uploadProgress","origin","date","noAvatars","isSelectable","isSelected","isDownloading","isTranscribing","isTranscriptionHidden","isTranscribed","isTranscriptionError","canDownload","canTranscribe","autoPlay","onHideTranscription","onPlay","onPause","onReadMedia","onCancelUpload","onDateClick","cancelMediaDownload","downloadMedia","transcribeAudio","openOneTimeMediaModal","content","audio","contentAudio","voice","video","isMediaUnread","getMessageWebPageAudio","media","mediaSource","isVoice","isSeeking","useRef","isRtl","isMobile","useAppLayout","isActivated","setIsActivated","useState","shouldLoad","coverHash","getMediaHash","coverBlobUrl","useMedia","ApiMediaFormat","BlobUrl","hasTtl","hasMessageTtl","isInOneTimeModal","AudioOrigin","OneTimeModal","trackType","mediaData","getMediaFormat","loadProgress","downloadProgress","useMediaWithLoadProgress","handleForcePlay","useLastCallback","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","noReset","isPlaying","playPause","setCurrentTime","duration","useAudioPlayer","makeTrackId","getMediaDuration","isMessageLocal","reversePlayProgress","isOwn","isOwnMessage","isReverse","waveformCanvasRef","withAvatar","canvasRef","data","spikes","peak","waveform","Array","Math","min","fill","MIN_SPIKES","MAX_SPIKES","matches","getSeeklineSpikeAmounts","durationFactor","spikesCount","fitCount","newData","springFactor","leftFiller","rightFiller","i","idx","floor","val","interpolateArray","encoded5bit","bitsCount","valuesCount","result","bitsData","l","byteIndex","bitShift","value","lastByteIndex","lastBitShift","lastValue","decodeWaveform","Uint8Array","useLayoutEffect","canvas","current","progress","fillStyle","progressFillStyle","width","height","ctx","getContext","scale","forEach","item","globalAlpha","spikeHeight","max","x","y","radius","SPIKE_WIDTH","beginPath","moveTo","arcTo","closePath","roundedRectangle","renderWaveform","useWaveformCanvas","withSeekline","isLoadingForPlaying","isUploading","isTransferring","transferProgress","getMediaTransferState","shouldRenderSpinner","transitionClassNames","spinnerClassNames","useShowTransitionDeprecated","shouldRenderCross","handleButtonClick","setAudioPlayerOrigin","handleDownloadClick","originMessage","handleSeek","e","left","getBoundingClientRect","clientX","MouseEvent","targetTouches","stopPropagation","handleStartSeek","button","handleStopSeek","handleDateClick","handleTranscribe","messageId","renderFirstLine","title","fileName","captureEvents","onCapture","onRelease","onDrag","fullClassName","Inline","Search","SharedMedia","buttonClassNames","push","contentClassName","renderWithTitle","dir","renderText","Link","formatPastTimeShort","formatMediaDuration","performer","renderSecondLine","Icon","name","ripple","color","ariaLabel","backgroundImage","nonInteractive","AnimatedIcon","tgsUrl","LOCAL_TGS_URLS","Flame","noLoop","ProgressSpinner","transparent","withColor","noCross","rotationOffset","showProgress","showSeekline","getFileSizeString","Fragment","formatMediaDateTime","renderAudio","onClickTranscribe","draggable","viewBox","rx","ry","stroke","renderVoice","resetInput","applyIosAutoCapitalizationFix","inputEl","focus","IS_IOS","document","classList","add","body","appendChild","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","prepareForRegExp","html","replace","RE_COMMAND","isFrozen","URL_ENTITIES","Set","ApiMessageEntityTypes","TextUrl","Url","INLINE_BOT_QUERY_REGEXP","HAS_NEW_LINE","MEMO_NO_RESULT","username","query","canShowHelp","usernameLowered","tempEl","buildQueryStateMemo","memoized","toLowerCase","STARTS_ENDS_ON_EMOJI_IMG_REGEX","RegExp","EMOJI_IMG_REGEX","source","POLYFILL_OPTIONS","encoderPath","URL","href","reuseWorker","BLOB_PARAMS","type","opusRecorderPromise","OpusRecorder","mediaRecorder","async","init","default","analyzerCallback","startMediaRecorder","startedAt","Date","now","pausedAt","chunks","ondataavailable","typedArray","releaseAnalyzer","recorder","cb","sourceNode","analyser","context","createAnalyser","fftSize","connect","dataLength","frequencyBinCount","dataArray","isDestroyed","tick","getByteFrequencyData","volume","reduce","acc","requestMeasure","subscribeToAnalyzer","stop","Promise","resolve","reject","onstop","blob","Blob","onerror","delayStop","setTimeout","pause","props","attachments","AttachmentModal","useModuleLoader","Bundles","Extra","AttachMenu","threadId","isButtonVisible","canAttachMedia","canAttachPolls","canSendPhotos","canSendVideos","canSendDocuments","canSendAudios","attachBots","peerType","isScheduled","shouldCollectDebugLogs","onFileSelect","onMenuOpen","onMenuClose","onPollCreate","canEditMedia","editingMessage","messageListType","paidMessagesStars","isAttachMenuOpen","openAttachMenu","closeAttachMenu","useFlag","handleMouseEnter","handleMouseLeave","markMouseInside","useMouseInside","canSendVideoAndPhoto","canSendVideoOrPhoto","isAttachmentBotMenuOpen","markAttachmentBotMenuOpen","unmarkAttachmentBotMenuOpen","isMenuOpen","isPhotoOrVideo","groupedId","getMessagePhoto","getMessageWebPagePhoto","getMessageVideo","getMessageWebPageVideo","isFile","getMessageAudio","getMessageVoice","getMessageDocument","handleToggleAttachMenu","handleFileSelect","shouldSuggestCompression","files","target","validatedFiles","validateFiles","handleQuickSelect","openSystemFilesDialog","from","CONTENT_TYPES_WITH_PREVIEW","SUPPORTED_PHOTO_CONTENT_TYPES","SUPPORTED_VIDEO_CONTENT_TYPES","join","handleDocumentSelect","SUPPORTED_AUDIO_CONTENT_TYPES","handleSendLogs","file","File","getDebugLogs","DEBUG_LOG_FILENAME","bots","bot","isForAttachMenu","attachMenuPeerTypes","includes","oldLang","useLang","ResponsiveHoverButton","onActivate","ariaControls","hasPopup","disabled","Menu","autoClose","positionX","positionY","onClose","onCloseAnimationEnd","onMouseEnter","IS_TOUCH_ENV","onMouseLeave","noCloseOnBackdrop","ariaLabelledBy","MenuItem","icon","AttachBotItem","onMenuOpened","onMenuClosed","BotCommandMenu","selectCurrentMessageList","selectChatMessage","BotKeyboardMenu","clickBotInlineButton","isKeyboardSingleUse","buttonTexts","texts","keyboardButtons","row","renderKeyboardButtonText","noCompact","j","BotMenuButton","text","isDisabled","textRef","textEl","scrollWidth","closest","setProperty","composerEl","removeProperty","ChatCommandTooltip","shouldForceShowEditing","forwardMessages","fromChatId","toChatId","messageIds","forwardMessageIds","noAuthors","noCaptions","isShareMessageModalShown","isModalShown","shouldPreventComposerAnimation","editingId","selectEditingScheduledId","selectEditingId","shouldAnimate","selectCanAnimateInterface","isForwarding","forwardedMessages","draft","selectDraft","replyInfo","replyToPeerId","senderChat","sender","selectEditingMessage","replyToMsgId","selectSender","selectForwardedSender","selectPeer","forwardInfo","isChatWithSelf","selectIsChatWithSelf","isChannelPost","hiddenUserName","quoteText","isSenderChannel","isChatChannel","forwardsHaveCaptions","some","forward","keys","isContextMenuDisabled","storyData","isReplyToDiscussion","forwardedMessagesCount","isCurrentUserPremium","selectIsCurrentUserPremium","isInChangingRecipientMode","currentUserId","ComposerEmbeddedMessage","onClear","resetDraftReplyInfo","updateDraftReplyInfo","setEditingId","focusMessage","changeRecipient","openChatOrTopicWithReplyInDraft","setForwardNoAuthors","setForwardNoCaptions","exitForwardMode","setShouldPreventComposerAnimation","isReplyToTopicStart","action","isShowingReply","isReplyWithQuote","isShown","clearEmbedded","captureEscKeyListener","isContextMenuOpen","contextMenuAnchor","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","handleMessageClick","handleClearClick","buildAutoCloseMenuItemHandler","handleForwardToAnotherChatClick","handleShowMessageClick","focusMessageFromDraft","noForumTopicPanel","handleRemoveQuoteClick","handleChangeReplyRecipientClick","handleReplyInSenderChat","handleDoNotReplyClick","getTriggerElement","getRootElement","getMenuElement","querySelector","renderingSender","innerClassName","getPeerColorClass","leftIcon","customText","strippedMessage","strippedText","stripCustomEmoji","renderingLeftIcon","canReplyInSenderChat","onContextMenu","ClosableEmbeddedMessage","isInComposer","faded","anchor","customIcon","MenuSeparator","DropArea","InlineBotTooltip","MentionTooltip","PollModal","SendAsMenu","StickerTooltip","RE_LINK","RE_LINK_TEMPLATE","noWebPage","selectNoWebPage","attachmentSettings","selectTheme","webPagePreview","WebPagePreview","getHtml","isEditing","loadWebPagePreview","clearWebPagePreview","toggleMessageWebPage","updateAttachmentSettings","formattedTextWithLinkRef","isInvertedMedia","isSmallerMedia","webPageMediaSize","detectLinkDebounced","useDebouncedResolver","formattedText","parseHtmlAsFormattedText","linkEntity","entities","find","entity","url","match","getLink","useDerivedSignal","link","useSyncEffect","useDerivedState","hasMediaSizeOptions","hasLargeMedia","renderingWebPage","handleClearWebpagePreview","handlePreviewClick","updateIsInvertedMedia","updateIsLargerMedia","photo","webPageWithoutPhoto","messageStub","webPage","WebPage","inPreview","onContainerClick","MainButtonState","storyId","chatBot","isSystemBot","selectBot","isChatWithBot","isChatWithUser","isUserId","userFullInfo","selectUserFullInfo","selectPeerPaidMessagesStars","chatFullInfo","selectChatFullInfo","messageWithActualBotKeyboard","selectNewestMessageWithBotKeyboardButtons","shouldSuggestStickers","shouldSuggestCustomEmoji","shouldUpdateStickerSetOrder","shouldPaidMessageAutoApprove","settings","byKey","language","selectSharedSettings","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","botKeyboardMessageId","keyboardMessage","currentUser","selectUser","defaultSendAsId","sendAsId","sendAsPeerIds","peer","adminRights","anonymous","sendAsUser","sendAsChat","requestedDraft","selectRequestedDraft","requestedDraftFiles","selectRequestedDraftFiles","tabState","isStoryViewerOpen","storyViewer","currentMessageList","isForCurrentMessageList","canSendVoiceByPrivacy","noVoiceMessages","slowMode","editingDraft","selectEditingScheduledDraft","selectEditingDraft","story","selectPeerStory","sentStoryReaction","sentReaction","replyToMessage","replyToTopic","isForum","isForumAsMessages","MAIN_THREAD_ID","selectTopicFromMessage","isInScheduledList","canSendQuickReplies","isSilentPosting","getChatNotifySettings","selectNotifyDefaults","selectNotifyException","areEffectsSupported","SERVICE_NOTIFICATIONS_USER_ID","canPlayEffect","selectPerformanceSettingsValue","shouldPlayEffect","shouldPlayEffectInComposer","effectId","effect","availableEffectById","effectReactions","reactions","maxMessageLength","config","DEFAULT_MAX_MESSAGE_LENGTH","starsBalance","stars","balance","amount","isStarsBalanceModalOpen","starsBalanceModal","isAccountFrozen","selectIsCurrentUserFrozen","isAppConfigLoaded","availableReactions","topReactions","isOnActiveTab","isBlurred","canScheduleUntilOnline","selectCanScheduleUntilOnline","isChannel","isRightColumnShown","selectIsRightColumnShown","isSelectModeActive","selectIsInSelectMode","withScheduledButton","hasScheduledMessages","botKeyboardPlaceholder","keyboardPlaceholder","pollModal","stickersForEmoji","stickers","forEmoji","customEmojiForEmoji","customEmojis","topInlineBotIds","topInlineBots","userIds","contentToBeScheduled","recentEmojis","keywords","inlineBots","byUsername","isInlineBotLoading","isLoading","botCommands","botInfo","commands","botMenuButton","menuButton","attachMenu","attachMenuPeerType","selectChatType","fileSizeLimit","selectCurrentLimit","MAX_UPLOAD_FILEPART_SIZE","captionLimit","isReactionPickerOpen","selectIsReactionPickerOpen","canBuyPremium","selectIsPremiumPurchaseBlocked","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","canSendOneTimeMedia","stealthMode","stories","quickReplyMessages","quickReplies","messagesById","isContactRequirePremium","isPaymentMessageConfirmDialogOpen","shouldDisplayGiftsButton","disallowedGifts","Composer","renderer","dropAreaState","isReady","inputPlaceholder","editableInputCssSelector","editableInputId","inputId","onDropHide","onFocus","onBlur","onForward","sendMessage","clearDraft","showDialog","openPollModal","closePollModal","loadScheduledHistory","openThread","addRecentEmoji","sendInlineBotResult","loadSendAs","resetOpenChatWithDraft","callAttachBot","addRecentCustomEmoji","showNotification","showAllowedMessageTypesNotification","openStoryReactionPicker","openGiftModal","closeReactionPicker","sendStoryReaction","editMessage","saveEffectInDraft","setReactionEffect","hideEffectInComposer","updateChatSilentPosting","richInputCtx","useRichEditable","counterRef","storyReactionRef","isMounted","setIsMounted","lastMessageSendTimeSeconds","prevDropAreaState","usePreviousDeprecated","windowWidth","windowSize","get","isInMessageList","isInStoryViewer","canShowSendAs","isSymbolMenuForced","forceShowSymbolMenu","cancelForceShowSymbolMenu","sendMessageAction","useSendMessageAction","isInputHasFocus","onAttachMenuOpen","onAttachMenuClose","canMediaBeReplaced","emojiSet","members","groupChatMembers","chatBotCommands","chatEmojiSetId","isSentStoryReactionHeart","isSameReaction","HEART_REACTION","processMessageInputForCustomEmoji","editable","htmlS","customEmojiNotificationNumber","requestCalendar","calendar","useSchedule","useTimeout","isChannelWithProfiles","areProfilesShown","isChatSuperGroup","shouldAnimateSendAsButtonRef","prevChatId","prevSendAsPeerIds","setAttachments","hasAttachments","nextText","setNextText","canSendStickers","canSendGifs","canAttachEmbedLinks","canSendVoices","canSendPlainText","getAllowedAttachmentOptions","isNeedPremium","isSendTextBlocked","messagesCount","messagesInInput","starsForAllMessages","closeConfirmDialog","closeConfirmModalPayForMessage","dialogHandler","paymentMessageConfirmDialogHandler","shouldAutoApprove","setAutoApprove","setShouldPaidMessageAutoApprove","handleWithConfirmation","handleActionWithPaymentConfirmation","usePaidMessageConfirmation","hasWebPagePreview","isComposerBlocked","insertHtmlAndUpdateCursor","newHtml","inInputId","execCommand","insertTextAndUpdateCursor","insertFormattedTextAndUpdateCursor","getTextWithEntitiesAsHtml","insertCustomEmojiAndUpdateCursor","emoji","buildCustomEmojiHtml","insertNextText","shouldForceCompression","shouldForceAsFile","handleAppendFiles","handleClearAttachments","handleSetAttachments","editedMessage","openLimitReachedModal","setShouldForceAsFile","setShouldForceCompression","setShouldSuggestCompression","MEMO_EMPTY_ARRAY","newValue","newAttachments","attachment","getAttachmentMediaType","limit","shouldForce","isSpoiler","newAttachment","buildAttachment","canReplace","canReplaceMessageMedia","all","shouldSendAsSpoiler","suggestCompression","useAttachmentModal","isBotKeyboardOpen","openBotKeyboard","closeBotKeyboard","isBotCommandMenuOpen","openBotCommandMenu","closeBotCommandMenu","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","isSendAsMenuOpen","openSendAsMenu","closeSendAsMenu","isHoverDisabled","disableHover","enableHover","startRecordingVoice","stopRecordingVoice","pauseRecordingVoice","activeVoiceRecording","currentRecordTime","recordButtonRef","mainButtonRef","startRecordTimeRef","isViewOnceEnabled","setIsViewOnceEnabled","toogleViewOnceEnabled","useVoiceRecording","setActiveVoiceRecording","setCurrentRecordTime","IS_SAFARI","IS_VOICE_RECORDING_SUPPORTED","voiceRecording","tickVolume","requestMutation","boxShadow","err","console","error","shouldSendRecordingStatus","useInterval","SEND_MESSAGE_ACTION_INTERVAL","isEditingRef","useStateRef","isAdmin","isChatAdmin","isEmojiTooltipOpen","closeEmojiTooltip","filteredEmojis","filteredCustomEmojis","insertEmoji","useEmojiTooltip","isCustomEmojiTooltipOpen","closeCustomEmojiTooltip","insertCustomEmoji","useCustomEmojiTooltip","isStickerTooltipOpen","closeStickerTooltip","isEnabled","loadStickersForEmoji","clearStickersForEmoji","isManuallyClosed","markManuallyClosed","unmarkManuallyClosed","getSingleEmoji","IS_EMOJI_SUPPORTED","twemojiRegex","cleanHtml","parseEmojiOnlyString","hasStickers","singleEmoji","useStickerTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","isInlineBotTooltipOpen","botId","inlineBotId","isGallery","isInlineBotTooltipGallery","switchPm","inlineBotSwitchPm","switchWebview","inlineBotSwitchWebview","results","inlineBotResults","closeTooltip","closeInlineBotTooltip","help","inlineBotHelp","loadMore","loadMoreForInlineBot","queryInlineBot","resetInlineBot","resetAllInlineBots","extractBotQueryThrottled","useThrottledResolver","startsWith","innerHTML","querySelectorAll","el","innerText","getAttribute","getPlainText","parseBotQuery","prevUsername","offset","useInlineBotTooltip","hasQuickReplies","isChatCommandTooltipOpen","close","closeChatCommandTooltip","filteredBotCommands","botTooltipCommands","filteredQuickReplies","quickReplyCommands","setFilteredBotCommands","setFilteredQuickReplies","detectCommandThrottled","trim","getCommand","command","substring","nextFilteredBotCommands","c","newFilteredQuickReplies","quickReply","shortcut","useChatCommandTooltip","useDraft","saveDraft","loadCustomEmojis","isTouchedRef","isLocalDraft","isLocal","updateDraft","prevState","contents","getFormattedText","shouldKeepReply","runDebouncedForSaveDraft","useRunDebounced","DRAFT_DEBOUNCE","useLayoutEffectWithPrevDeps","prevThreadId","prevDraft","isTouched","clearInput","setFormattedText","customEmojiIds","CustomEmoji","documentId","ids","chatIdRef","threadIdRef","emptyS","scopedСhatId","scopedThreadId","useBackgroundMode","useBeforeUnload","resetComposer","shouldPreserveInput","handleEditComplete","handleEditCancel","useEditing","setEditingDraft","openDeleteMessageModal","setShouldForceShowEditing","replyingToId","useEffectWithPrevDeps","prevEditedMessage","prevReplyingToId","requestNextMutation","messageInput","EDITABLE_INPUT_CSS_SELECTOR","focusEditableElement","shouldSetNoWebPage","has","edited","update","getShouldResetNoWebPageDebounced","restoreNewDraftAfterEditing","hasMessageMedia","messageList","isSchedule","handleBlur","resetComposerRef","stopRecordingVoiceRef","areAllGiftsDisallowed","every","shouldShowGiftButton","canAnimate","showCustomEmojiPremiumNotification","notificationNumber","payload","shouldReplaceHistory","actionText","initialSection","Number","mainButtonState","Edit","Schedule","Send","Record","Forward","canShowCustomSendMenu","isCustomSendMenuOpen","storyReactionPickerAnchor","handleStoryPickerContextMenu","handleBeforeContextMenu","handleBeforeStoryPickerContextMenu","handleStoryPickerContextMenuHide","peerId","position","useClipboardPaste","shouldStripCustomEmoji","onCustomEmojiStripped","useRichEditablePasteHandler","p","containsCustomEmoji","items","getFilesFromDataTransferItems","isWordDocument","DOMParser","parseFromString","documentElement","hasText","shouldSetAttachments","isUploadingDocumentSticker","isUploadingFileSticker","isInAlbum","concat","handleEmbeddedClear","validateTextLength","isAttachmentModal","maxLength","extraLength","textParams","toString","hasErrorKey","checkSlowMode","nowSeconds","getServerTime","secondsSinceLastMessage","nextSendDateNotReached","nextSendDate","seconds","secondsRemaining","isSlowMode","blur","canSendAttachments","attachmentsToSend","sendAttachments","sendCompressed","shouldCompress","sendGrouped","shouldSendGrouped","isSilent","scheduledAt","prepareAttachmentsToSend","shouldGroupMessages","isLocalOnly","handleSendAttachmentsFromModal","handleSendAttachments","handleSendCore","currentAttachments","webPageUrl","activeElement","nextState","handleSend","record","ttlSeconds","ONE_TIME_MEDIA_TTL_SECONDS","handleSendWithConfirmation","handleClickBotMenu","parsedLink","tryParseDeepLink","appName","processDeepLink","handleActivateBotCommandMenu","handleMessageSchedule","args","queryId","restArgs","prevContentToBeScheduled","getElementById","handleCustomEmojiSelect","emojiSetId","stickerSetInfo","isFree","handleCustomEmojiSelectAttachmentModal","EDITABLE_INPUT_MODAL_ID","handleGifSelect","gif","isScheduleRequested","handleStickerSelect","sticker","canUpdateStickerSetsOrder","isPreloadedGlobally","handleInlineBotSelect","inlineResult","handleBotCommandSelect","handlePollSend","poll","sendSilent","additionalArgs","handleSendAsMenuOpen","insertTextAndUpdateCursorAttachmentModal","removeSymbol","removeLastSymbol","removeSymbolAttachmentModal","handleAllScheduledClick","handleGiftClick","forUserId","handleToggleSilentPosting","localId","withBotMenuButton","isBotMenuButtonOpen","timedPlaceholderLangKey","timedPlaceholderDate","activeUntil","isComposerHasFocus","isReactionSelectorOpen","placeholder","formatStarsAsIcon","asFont","withNodes","topic","shouldRenderReactionSelector","reactionSelectorTransitonClassNames","areVoiceMessagesNotAllowed","mainButtonHandler","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","sendButtonAriaLabel","handleToggleReaction","reaction","emoticon","customEmojiMessage","isReaction","handleToggleEffectReaction","handleReactionPickerOpen","sendAsMessage","handleLikeStory","containerId","getStoryKey","handleSendScheduled","handleSendSilent","handleSendWhenOnline","SCHEDULED_WHEN_ONLINE","handleSendScheduledAttachments","handleSendSilentAttachments","handleRemoveEffect","handleStopEffect","onSend","withBotCommands","effectEmoji","shouldRenderPaidBadge","DropAreaState","None","withQuick","QuickFile","onHide","ReactionSelector","allAvailableReactions","onToggleReaction","isPrivate","isInSavedMessages","onShowMore","isForMessage","shouldSchedule","canSchedule","forceDarkTheme","onSendSilent","onSendScheduled","onFileAppend","onAttachmentsUpdate","onCustomEmojiSelect","onRemoveSymbol","onEmojiSelect","onSendWhenOnline","isQuiz","shouldBeAnonymous","selectedSendAsId","filteredUsers","onInsertUserName","withUsername","self","filterUnits","dy","in","stdDeviation","d","isSavedMessages","onSelectResult","Avatar","SymbolMenuButton","isMessageComposer","onGifSelect","onStickerSelect","inputCssSelector","idPrefix","MessageInput","customEmojiPrefix","isStoryInput","forcedPlaceholder","canAutoFocus","noFocusInterception","shouldSuppressFocus","shouldSuppressTextFormatter","onSuppressedFocus","Spinner","Transition","slideClassName","activeKey","direction","formatVoiceRecordDuration","CustomEmojiTooltip","key","EmojiTooltip","emojis","onMouseDown","ReactionAnimatedEmoji","getReactionKey","withEffectOnly","allowDisabledClick","noFastClick","pill","fluid","AnimatedCounter","number","MessageEffect","shouldPlay","onStop","CustomSendMenu","onSendSchedule","onRemoveEffect","withEffects","hasCurrentEffect","PaymentMessageConfirmDialog","userName","getPeerTitle","messagePriceInStars","confirmHandler","isSavedDialog","isPrivateChat","user","getPrivateChatUserId","isBot","isUserBot","isSupport","canDeleteForAll","contactName","getUserFirstOrLastName","isBasicGroup","isChatBasicGroup","isSuperGroup","DeleteChatModal","leaveChannel","deleteHistory","deleteSavedHistory","deleteChannel","deleteChatUser","blockUser","chatTitle","getChatTitle","handleDeleteForAll","shouldDeleteForAll","handleDeleteAndStop","userId","handleDeleteChat","isCreator","handleLeaveChat","Modal","header","isText","SVG_EXTENSIONS","Document","observeIntersection","smaller","canAutoLoad","autoLoadFileMaxSizeMb","withDate","datetime","shouldWarnAboutSvg","onMediaClick","setSharedSettingOption","isSvgDialogOpen","openSvgDialog","closeSvgDialog","shouldNotWarnAboutSvg","setShouldNotWarnAboutSvg","timestamp","extension","getDocumentExtension","isIntersecting","useIsIntersecting","wasIntersected","markIntersected","isLoadAllowed","setIsLoadAllowed","shouldDownload","documentHash","getDocumentMediaHash","hasPreview","getDocumentHasPreview","thumbDataUri","getMediaThumbUri","localBlobUrl","previewBlobUrl","previewData","withMediaViewer","innerMediaType","handleDownload","handleClick","handleSvgConfirm","thumbnailDataUri","actionIcon","isDocumentVideo","ConfirmDialog","Checkbox","checked","label","onCheck","DotAnimation","elementRef","withThumb","noThumb","thumbRef","useCanvasBlur","IS_CANVAS_FILTER_SUPPORTED","thumbClassNames","useMediaTransitionDeprecated","shouldSpinnerRender","getColorFromExtension","sizeString","subtitle","getDocumentThumbnailDimensions","src","alt","TOPIC_ICON_SIZE","REM","threadInfo","selectThreadInfo","onlineCount","selectChatOnlineCount","areMessagesLoaded","selectChatMessages","selectTopic","selectThreadMessagesCount","GroupChatInfo","typingStatus","statusIcon","avatarSize","noAvatar","status","withDots","withFullInfo","withUpdatingStatus","withChatType","noRtl","noStatusOrTyping","withStory","storyViewerOrigin","noEmojiStatus","emojiStatusSize","onEmojiStatusClick","loadFullChat","openMediaViewer","loadMoreProfilePhotos","isTopic","isMin","isRestricted","isPreload","handleAvatarViewerOpen","hasMedia","isAvatarView","mediaIndex","MediaViewerOrigin","ProfileAvatar","MiddleHeaderAvatar","mainUsername","getMainUsername","storyViewerMode","TopicIcon","FullNameTitle","withEmojiStatus","TypingStatus","shouldRestoreHeight","getChatTypeString","groupStatus","getGroupStatus","onlineStatus","renderStatusOrTyping","LastMessageMeta","outgoingStatus","draftDate","shouldUseDraft","MessageOutgoingStatus","InviteLink","withShare","onRevoke","openChatWithDraft","isOnlyCopy","copyLink","copyTextToClipboard","handleCopyClick","handleShare","PrimaryLinkMenuButton","onTrigger","readOnly","DropdownMenu","trigger","destructive","Media","isProtected","getMessageMediaThumbDataUri","mediaBlobUrl","getMessageMediaHash","hasSpoiler","getMessageIsSpoiler","isSpoilerShown","hideSpoiler","getMessageHtmlId","decoding","stopEvent","MediaSpoiler","isVisible","isGif","Keys","NothingFound","description","confirmPaymentMessage","formatStarsAsText","totalAmount","count","withMarkdown","pluralValue","confirmLabel","forceShowSelf","isSynced","userStatus","selectUserStatus","isSelf","PrivateChatInfo","customPeer","noFake","noVerified","adminMember","iconElement","rightElement","loadFullUser","hasAvatarMediaViewer","useIntervalForceUpdate","customTitle","isOwner","subtitleKey","translatedStatus","getUserStatus","mainUserNameClassName","isUserOnline","RippleEffect","ProfilePhoto","canPlayVideo","videoRef","isDeleted","isDeletedUser","isRepliesChat","isChatWithRepliesBot","isAnonymousForwards","isAnonymousForwardsChat","canHaveMedia","isVideo","avatarHash","avatarPhotoId","getChatAvatarHash","previewHash","getPhotoMediaHash","photoHash","getProfilePhotoMediaHash","photoBlobUrl","videoHash","getVideoProfilePhotoMediaHash","fullMediaData","isVideoReady","markVideoReady","isFullMediaReady","isBlurredThumb","thumbnail","dataUri","blurredThumbCanvasRef","currentTime","specialIcon","role","OptimizedVideo","canPlay","muted","disablePictureInPicture","loop","playsInline","onReady","userFullName","getUserFullName","getFirstLetters","profilePhotos","selectPeerPhotos","avatarOwnerId","mediaViewer","currentTopicId","emojiStatus","emojiStatusSticker","emojiStatusSlug","slug","ProfileInfo","openPremiumModal","openStickerSet","openPrivacySettingsNoticeModal","openUniqueGiftBySlug","photos","prevMediaIndex","prevAvatarOwnerId","hasSlideAnimation","setHasSlideAnimation","slideAnimation","currentPhotoIndex","setCurrentPhotoIndex","isFirst","isLast","currentIndex","mediaHash","mediaLoader","usePhotosPreload","handleProfilePhotoClick","SettingsAvatar","handleStatusClick","fromUserId","selectPreviousMedia","selectNextMedia","handleOpenGetReadDateModal","isReadDate","element","styles","selectorToPreventScroll","onSwipe","SwipeDirection","Right","Left","letterClassName","noLoopLimit","totalPhotosLength","enumerator","activeDashIndex","MAX_PHOTO_DASH_COUNT","_","renderPhotoTabs","personalPhoto","fallbackPhoto","renderPhoto","canCopyTitle","isSystemBotChat","isReadDateRestrictedByMe","membersCount","renderStatus","iconEmojiId","observeIntersectionForPlaying","loopLimit","TopicDefaultIcon","iconColor","topicId","typingUser","typingUserName","WebLink","onMessageClick","linkData","getMessageWebPage","getFirstLinkInMessage","domain","siteName","formattedDescription","getMessageText","renderMessageSummary","displayUrl","truncatedDescription","trimText","safeLinkContent","SafeLink","NBSP","EmbeddedMessage","forwardSender","noUserColors","chatTranslations","requestedChatTranslationLanguage","observeIntersectionForLoading","containedMedia","replyMedia","isVideoThumbnail","previewPhotoSizes","mediaThumbnail","useThumbnail","isRoundVideo","getMessageRoundVideo","isQuote","replyForwardInfo","replyFrom","shouldTranslate","isMessageTranslatable","translatedText","useMessageTranslation","senderChatTitle","forwardSenderTitle","areSendersSame","handleMouseDown","useFastClick","PeerColorWrapper","emojiIconClassName","shouldReset","blobUrl","isFullVideo","getPictogramDimensions","srcUrl","shouldRenderVideo","renderPictogram","renderTextWithEntities","asPreview","emojiSize","MessageSummary","noEmoji","getMediaContentTypeDescription","CONTENT_NOT_SUPPORTED","renderMediaContentType","isChatGroup","isReplyToQuote","renderSender","freezeWhenClosed","getBoostProgressInfo","boostInfo","freezeOnLevelUp","level","boosts","currentLevelBoosts","nextLevelBoosts","hasMyBoost","prepaidGiveaways","isJustUpgraded","currentLevel","hasNextLevel","levelProgress","remainingBoosts","isMaxLevel","formatUsername","asAbsoluteLink","TME_LINK_PREFIX","DAY_MINUTES","WEEK_MINUTES","getWeekStart","setHours","day","getDay","diff","getDate","setDate","getTime","shiftTimeRanges","ranges","shift","shiftedRanges","range","startMinute","endMinute","sort","a","b","last","DAYS","BusinessHours","businessHours","transitionRef","isExpanded","expand","collapse","isMyTime","showInMyTime","showInLocalTime","forceUpdate","useForceUpdate","timezoneSignal","useSelectorSignal","timezones","timezoneMinuteDifference","timezone","timezoneId","getTimezoneOffset","utcOffset","workHours","weekStart","days","dayStart","dayEnd","splitDays","segments","formatTime","isBusinessOpen","localTimeHours","minutesSinceWeekStart","currentDay","handleTriggerOffset","slide","ACTIVE_SLIDE_CLASS_NAME","offsetHeight","handleAnimationStart","TO_SLIDE_CLASS_NAME","ListItem","iconClassName","multiline","isStatic","narrow","withColorTransition","tabIndex","onStart","formatWeekday","segment","EFFECT_EMOJIS","birthdayNumbers","animatedEmojiEffects","isPremiumPurchaseBlocked","UserBirthday","birthday","isInSettings","requestConfetti","animationPlayedRef","isPlayingAnimation","playAnimation","stopAnimation","formattedDate","isToday","age","today","year","setMonth","month","formatDateToString","code","getMonth","getAge","numbersForAge","numbers","endsWith","byEmoji","buildCollectionByKey","split","digit","effectSticker","randomEffect","random","hash","getStickerMediaHash","effectHash","column","top","valueKey","canGiftPremium","isPremium","handleOpenGiftModal","secondaryIcon","secondaryIconClassName","onSecondaryIconClick","IS_OFFSET_PATH_SUPPORTED","index","StickerView","containerRef","forceAlways","shouldLoop","birthdate","m","DEFAULT_MAP_CONFIG","zoom","chatOrUserId","countryList","phoneCodes","phoneCodeList","botAppPermissions","selectBotAppPermissions","isMuted","getIsChatMuted","botVerification","chatInviteLink","inviteLink","bio","about","canInviteUsers","isUserRightBanned","getHasAdminRight","topicLink","selectTopicLink","hasSavedMessages","listIds","saved","personalChannel","personalChannelId","hasMainMiniApp","isBotCanManageEmojiStatus","ChatExtra","updateChatMutedState","updateTopicMutedState","loadPeerStories","openSavedDialog","openMapModal","requestCollectibleInfo","requestMainWebView","toggleUserEmojiStatusPermission","toggleUserLocationPermission","usernames","phoneNumber","chatUsernames","businessLocation","businessWorkHours","personalChannelMessageId","prevPeerId","dpr","useDevicePixelRatio","locationMediaHash","geo","buildStaticMapHash","locationBlobUrl","locationRightComponent","Skeleton","isTopicInfo","shouldRenderAllLinks","activeUsernames","u","activeChatUsernames","getChatLink","handleClickLocation","address","geoPoint","handleNotificationChange","manageEmojiStatusChange","handleLocationPermissionChange","isAccessGranted","geolocation","handleOpenSavedDialog","copy","formattedNumber","formatPhoneNumberWithCode","handlePhoneClick","FRAGMENT_PHONE_LENGTH","FRAGMENT_PHONE_CODE","collectible","handleUsernameClick","isChat","isEditable","handleOpenApp","extractCurrentThemeParams","shouldMarkBotTrusted","appTermsInfo","terms","Chat","orderDiff","animationType","ChatAnimationTypes","isPreview","previewMessageId","renderUsernames","allowSelection","Switcher","inactive","iconId","usernameList","otherUsernames","usernameLinks","s","RichInputKeyboardPriority","ChatFolderModal","MuteChatModal","ChatCallStatus","lastMessageId","selectChatLastMessageId","lastMessage","selectChatLastMessage","isOutgoing","savedDialogSender","fromId","messageSender","lastMessageSender","currentChatId","currentThreadId","isSelectedForum","forumPanelChatId","lastMessageTopic","selectThreadParam","topicsInfo","selectTopicsInfo","lastMessageStory","isForumPanelOpen","selectIsForumPanelOpen","canScrollDown","canChangeFolder","chatFolders","orderedIds","lastMessageOutgoingStatus","selectOutgoingStatus","withInterfaceAnimations","listedTopicIds","topics","topicsById","folderId","isPinned","offsetTop","onDragEnter","openChat","toggleChatInfo","focusLastMessage","loadTopics","openForumPanel","closeForumPanel","setShouldCloseRightColumn","reportMessages","openFrozenAccountModal","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","useEnsureMessage","renderSubtitle","useChatListEntry","statefulMediaContent","groupStatefulContent","getIsForumPanelClosed","selectIsForumPanelClosed","forceOnHeavyAnimation","force","handleDragEnter","preventDefault","handleDelete","handleMute","handleChatFolderChange","handleReport","contextActions","useChatContextActions","isOnline","hasShownClass","isAvatarOnlineShown","IS_OPEN_IN_NEW_TAB_SUPPORTED","createLocationHash","chatClassName","withPortalForMenu","withStoryGap","subscriptionUntil","StoryViewerOrigin","ChatList","StarIcon","ChatBadge","shouldShowOnlyMostImportant","forceHidden","hasMiniApp","wasTopicOpened","unreadMentionsCount","unreadReactionsCount","isTopicUnopened","topicsWithUnread","unreadCount","shouldBeUnMuted","notifySettings","mutedUntil","isEveryUnreadMuted","hasUnreadMark","isSignal","isUnread","ShowTransition","isCustom","unreadReactionsElement","unreadMentionsElement","unopenedTopicElement","unreadCountElement","formatIntegerCompact","pinnedElement","miniAppButton","visiblePinnedElement","elements","renderContent","DEFAULT_FOLDER_ICON","EMOTICON_TO_FOLDER_ICON","LOCSTOR_CUSTOM_EMOJI_KEY","getLocalStorageFolderIcons","customEmojiIcons","storage","localStorage","getItem","JSON","parse","setItem","stringify","getIconNameByFolder","folder","excludeRead","contacts","nonContacts","channels","groups","customEmojisById","iconsByFolder","setGlobal","chatFoldersById","orderedFolderIds","invites","folderInvitesById","archived","orderedPeerIds","archivedStories","activeSessions","byHash","sessions","archiveSettings","shouldSkipHistoryAnimations","activeChatFolder","isRibbonShown","isStoryRibbonShown","foldersVertical","foldersView","hasArchivedChats","hasArchivedStories","maxFolders","maxFolderInvites","maxChatLists","ChatFolders","foldersDispatch","onSettingsScreenSelect","onLeftColumnContentChange","shouldHideFolderTabs","loadChatFolders","setActiveChatFolder","openShareChatFolderModal","openDeleteChatFolderModal","openEditChatFolder","markChatMessagesRead","shouldRenderStoryRibbon","getIsClosing","getIsStoryRibbonClosing","useShowTransition","withShouldRender","isStoryRibbonClosing","scrollToTop","activeList","scrollTo","behavior","allChatsFolder","ALL_FOLDER_ID","includedChatIds","excludedChatIds","displayedFolders","allChatsFolderIndex","findIndex","isInAllChatsFolder","isInFirstFolder","folderUnreadChatsCountersById","useFolderManagerForUnreadChatsByFolder","handleReadAllChats","unreadChatIds","folderCountersById","useFolderManagerForUnreadCounters","folderTabs","isBlocked","selectCanShareFolder","handler","isChatList","SettingsScreens","Folders","unicodeEmoji","iconStyle","iconStyleOrDefault","tabText","noCustomEmojiPlayback","noTitleAnimations","customEmoji","shouldUseTextColor","widthLoadingCircle","shouldPreloadPreview","noLoad","noPlay","noVideoOnMobile","withTranslucentThumb","badgeCount","chatsCount","isBadgeActive","notificationsCount","handleSwitchTab","isNotInFirstFolderRef","useHistoryBack","onBack","handleKeyDown","ctrlKey","shiftKey","addEventListener","removeEventListener","placeholderRef","shouldRenderPlaceholder","noMountTransition","shouldRenderFolders","StoryRibbon","isClosing","TabList","contextRootElementSelector","tabs","activeTab","onSwitchTab","renderCount","activeFolder","isFolder","folderType","canDisplayArchive","isHidden","renderCurrentTab","ARCHIVE_CUSTOM_PEER","isCustomPeer","avatarIcon","customPeerAvatarColor","Archive","updateArchiveSettings","orderedChatIds","useFolderManagerForOrderedIds","ARCHIVED_FOLDER_ID","unreadCounters","archiveUnreadCount","previewItems","arr","unread","actionMinimize","isMinimized","actionExpand","actionHide","compact","root","minimized","buttonClassName","info","Badge","avatarWrapper","chatsPreview","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","EmptyFolder","handleEditFolder","FoldersEditFolderFromChatList","AnimatedIconFromSticker","FrozenAccountNotification","UnconfirmedSession","onHeightChange","changeSessionSettings","terminateAuthorization","useResizeObserver","entry","borderBoxSize","blockSize","contentRect","firstUnconfirmed","dateCreated","session","isUnconfirmed","locationString","deviceModel","region","country","handleAccept","isConfirmed","handleReject","RESERVED_HOTKEYS","openNextChat","toggleStoryRibbon","shouldIgnoreDragRef","unconfirmedSessionHeight","setUnconfirmedSessionHeight","isArchived","isAllFolder","isSaved","resolvedFolderId","SAVED_FOLDER_ID","shouldDisplayArchive","shouldShowFrozenAccountNotification","usePeerStoriesPolling","chatsHeight","CHAT_HEIGHT_PX","archiveHeight","ARCHIVE_MINIMIZED_HEIGHT","frozenNotificationHeight","orderDiffById","getAnimationType","useOrderDiff","viewportIds","getMore","useInfiniteScroll","CHAT_LIST_SLICE","shouldShowUnconfirmedSessions","sessionsArray","isCurrent","FRESH_AUTH_PERIOD","useHotkeys","targetIndexDelta","IS_APP","IS_MAC_OS","metaKey","isArchiveInList","LeftColumnContent","Archived","observe","useIntersectionObserver","rootRef","throttleMs","handleArchivedClick","handleFrozenAccountNotificationClick","handleArchivedDragEnter","useDebouncedCallback","handleDragLeave","rect","currentTarget","clientY","renderedOverflowTrigger","onOverscroll","onReset","overscrollTriggerRef","isTriggerJustEnabled","lastScrollTopRef","isTriggerEnabledRef","lastIsOnTopRef","lastScrollAtRef","isReturningOverscrollRef","enableOverscrollTrigger","noScrollInertiaStop","display","scrollTop","stopScrollInertia","disableOverscrollTrigger","handleScroll","newScrollTop","isMovingDown","isMovingUp","isOnTop","lastEventDelay","forceMutation","handleWheel","event","container","scrollHeight","deltaY","passive","useTopOverscroll","InfiniteScroll","itemSelector","preloadBackwards","withAbsolutePositioning","beforeChildren","maxHeight","onLoadMore","onDragLeave","viewportOffset","indexOf","pinnedCount","getPinnedChatsCount","teactOrderKey","getOrderKey","renderChats","Loading","ICON_SIZE","canManageTopics","EmptyForum","openCreateTopicPanel","handleCreateTopic","centered","buttonText","lastReadInboxMessageId","selectTopics","isChatMuted","canDelete","selectCanDeleteTopic","Topic","deleteTopic","setViewForumAsMessages","isClosed","handleOpenDeleteModal","handleOpenTopic","wasOpened","editTopic","toggleTopicPinned","markTopicRead","openChatInNewTab","canToggleClosed","getCanManageTopic","canTogglePinned","actionOpenInNewTab","actionUnreadMark","actionPin","actionMute","actionCloseTopic","actionDelete","useTopicContextActions","confirmIsDestructive","ForumPanel","onTopicSearch","onOpenAnimationStart","openChatWithInfo","scrollTopHandlerRef","isScrolled","setIsScrolled","handleClose","handleToggleChatInfo","useOnIntersect","getOrderedTopics","orderedPinnedTopicIds","totalCount","TOPICS_SLICE","shouldRenderRef","prevIsVisible","endHeavyAnimation","beginHeavyAnimation","waitForTransitionEnd","transform","onTransitionEnd","HeaderActions","canExpandActions","isForForum","TOPIC_HEIGHT_PX","sensitiveArea","TOPIC_LIST_SENSITIVE_AREA","renderTopics","GENERAL_TOPIC_ID","useChatAnimationType","orderDiffs","numberOfUp","numberOfDown","Infinity","Opacity","Move","NO_CORNER_THRESHOLD","ChatForumLastMessage","renderLastMessage","lastMessageRef","mainColumnRef","lastActiveTopic","otherTopics","isReversedCorner","setIsReversedCorner","overwrittenWidth","setOverwrittenWidth","handleOpenTopicClick","handleOpenTopicMouseDown","getIsMobile","lastMessageElement","mainColumnElement","lastMessageWidth","offsetWidth","mainColumnWidth","abs","ANIMATION_DURATION","shouldTryLoadingStory","useEnsureStory","mediaContent","mediaHasPreview","getMessageSticker","renderLastMessageOrTyping","isDraftReplyToTopic","isEmptyLocalReply","withTranslucentThumbs","senderName","getMessageSenderName","messageSummary","inChatList","renderSummary","opacity","remove","ANIMATION_END_DELAY","useLeftHeaderButtonRtlForumTransition","shouldHideSearch","shouldDisableDropdownMenuTransitionRef","prevShouldHideSearch","handleDropdownMenuTransitionEnd","orderById","prevOrderById","mapValues","order","getSenderName","senderId","VISIBLITY_MARGIN","DURATION","SnapEffectContainer","SNAP_EFFECT_CONTAINER_ID","animateSnap","selectCanAnimateSnapEffect","scrollX","scrollY","innerWidth","innerHeight","seed","filterId","SNAP_EFFECT_ID","generateUniqueId","component","ghost","smallestSide","baseSeed","xmlns","SVG_NAMESPACE","baseFrequency","numOctaves","slope","intercept","attributeName","dur","in2","operator","xChannelSelector","yChannelSelector","createFilter","elementContainer","svg","jsxToHtml","foreignObject","computedStyle","getComputedStyle","clone","cloneNode","getPropertyValue","snapContainer","removeChild","once","HeaderMenuContainer","selectLanguageCode","translationLanguage","selectTranslationLanguage","doNotTranslate","noMenu","fullInfo","isMainThread","isDiscussionThread","getIsSavedDialog","isUserBlocked","selectIsUserBlocked","canRestartBot","canStartBot","selectIsChatBotNotStarted","canUnblock","canSubscribe","isNotJoined","canSearch","canCall","ARE_CALLS_SUPPORTED","canMute","canLeave","canEnterVoiceChat","canCreateVoiceChat","manageCall","canViewStatistics","canViewMonetization","canViewBoosts","canShowBoostModal","pendingJoinRequests","requestsPending","shouldJoinToSend","isJoinToSend","shouldSendJoinRequest","isJoinRequest","noAnimation","isTranslating","selectRequestedChatTranslationLanguage","canTranslate","selectCanTranslateChat","isTranslationDisabled","detectedChatLanguage","detectedLanguage","joinChannel","sendBotCommand","openMiddleSearch","restartBot","requestMasterAndRequestCall","requestNextManagementScreen","requestChatTranslation","togglePeerTranslations","openChatLanguageModal","setSettingOption","unblockUser","menuButtonRef","setIsMenuOpen","menuAnchor","setMenuAnchor","handleHeaderMenuOpen","right","bottom","handleHeaderMenuClose","handleHeaderMenuHide","handleSubscribeClick","handleStartBot","handleRestartBot","handleUnblock","handleTranslateClick","toLanguageCode","handleJoinRequestsClick","screen","ManagementScreens","JoinRequests","handleSearchClick","setFocusInSearchInput","handleAsMessagesClick","handleRequestCall","handleHotkeySearchClick","getTextWithLanguage","langKey","langCode","translationKey","toUpperCase","translatedName","Intl","DisplayNames","of","doNotTranslateText","handleHide","handleChangeLanguage","handleDoNotTranslate","MoreMenuButton","withExtraActions","onJoinRequestsClick","withForumActions","onSubscribeChannel","onSearchClick","onAsMessagesClick","searchInput","COLOR_REPLACE_PATTERN","AttachBotIcon","isTouchScreen","Text","iconSvg","mediaDataWithReplacedColors","doc","path","strokeWidth","outerHTML","isInSideMenu","canShowNew","toggleAttachBot","icons","openMenu","closeMenu","menuPosition","setMenuPosition","isFromSideMenu","handleCloseMenu","handleCloseAnimationEnd","handleRemoveBot","shortName","isDisclaimerNeeded","withPortal","CustomSend","DropTarget","isQuick","isGeneric","svgRef","isHovered","markHovered","unmarkHovered","relatedTarget","toTarget","handleResize","baseVal","useEffectOnce","onDrop","hideTimeoutRef","prevWithQuick","handleFilesDrop","dataTransfer","dt","folderFiles","handleQuickFilesDrop","fromTarget","shouldRenderQuick","Portal","containerSelector","onDragOver","handleDragOver","clearTimeout","IGNORE_KEYS","messageSendKeyCombo","isAttachmentModalInput","onScroll","editLastMessage","replyToNextMessage","selectionTimeoutRef","sharedCanvasRef","sharedCanvasHqRef","absoluteContainerRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","isTextFormatterDisabled","setIsTextFormatterDisabled","isMobileDevice","IS_ANDROID","shouldDisplayTimer","setShouldDisplayTimer","handleTimerEnd","focusInput","getIsHeavyAnimating","handleCloseTextFormatter","sel","getSelection","rangeCount","collapseToEnd","checkSelection","selection","selectionS","selectedText","processSelection","processSelectionWithTimeout","useRichEditableKeyboardListener","priority","onKeydown","isComposing","empty","altKey","handleOpenPremiumModal","EDITABLE_INPUT_ID","handleDocumentKeyDown","getIsDirectTextInputDisabled","input","isSelectionCollapsed","isCollapsed","tagName","isContentEditable","newEvent","KeyboardEvent","dispatchEvent","captureFirstTab","debounce","captureKeyboardListeners","onTab","suppressFocus","inputScrollerContentClass","handleCloseContextMenu","e2","onTouchCancel","RichEditableAttachment","detached","disableEdit","TextTimer","endsAt","onEnd","TextFormatter","SymbolMenu","setStickerSearchQuery","setGifSearchQuery","triggerRef","isSymbolMenuLoaded","onSymbolMenuLoadingComplete","setContextMenuAnchor","symbolMenuButtonClassName","handleActivateSymbolMenu","triggerEl","handleSearchOpen","handleSymbolMenuOpen","EDITABLE_INPUT_MODAL_CSS_SELECTOR","getLayout","onLoad","onSearchOpen","MAX_QUICK_IMG_SIZE","MAX_THUMB_IMG_SIZE","MAX_ASPECT_RATIO","FILE_EXT_REGEX","filename","options","createObjectURL","mimeType","quick","shouldSendAsFile","img","preloadImage","validateAspectRatio","shouldShrink","GIF_MIME_TYPE","compressedBlobUrl","resizedUrl","scaleImage","revokeObjectURL","videoWidth","videoHeight","preloadVideo","createPosterForVideo","coverUrl","fetchFromUrl","selectCover","metadata","common","artist","picture","format","cover","coverBlob","parseAudioMetadata","uniqueId","shouldSendCompressed","attach","dataTransferItems","traverseFileTreePromise","itemFile","getAsFile","isDirectory","createReader","readEntries","entries","entriesPromises","kind","webkitGetAsEntry","replaceWithTeact","STARS_ICON_PLACEHOLDER","THROTTLE","RE_ENDS_ON_EMOJI","loadCustomEmojiForEmoji","clearCustomEmojiForEmoji","extractLastEmojiThrottled","matchable","matchableS","collapsed","emojiMatch","getLastEmoji","hasCustomEmojis","lastEmoji","insertMatchableHtml","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RE_LOWERCASE_TEST","EMOJIS_LIMIT","FILTER_MIN_LENGTH","prepareRecentEmojisMemo","recentEmojiIds","pickTruthy","prepareLibraryMemo","byNative","baseEmojisByKeyword","natives","emojisByKeyword","byKeyword","byName","names","maxKeyLength","keyword","searchInLibraryMemo","library","matched","matchedKeywords","flat","matchedNames","unique","setById","setFilteredEmojis","setFilteredCustomEmojis","exec","uncompressEmoji","ensureEmojiData","then","detectEmojiCodeThrottled","getEmojiCode","updateFiltered","nativeEmojis","native","uniqueByField","selectCustomEmojiForEmojis","emojiHtml","emojiCode","test","RE_USERNAME_SEARCH","setFilteredUsers","extractUsernameTagThrottled","getUsernameTag","getWithInlineBots","usernameTag","memberIds","member","filteredIds","filterPeersByQuery","userFirstOrLastName","htmlToInsert","MentionName","isStarsBalanceModeOpen","isWaitingStarsTopup","setIsWaitingStarsTopup","confirmPaymentHandlerRef","closePaymentMessageConfirmDialogOpen","handleStarsTopup","openStarsBalanceModal","topup","balanceNeeded","purpose","PAID_MESSAGES_PURPOSE","openPaymentMessageConfirmDialogOpen","setPaidMessageAutoApprove","CLOSE_DURATION","RESIZE_THROTTLE","providedRef","withResizeObserver","setShouldRender","localRef","lastHeightRef","reset","useUnmountCleanup","handleUpdate","requestForcedReflow","currentHeight","useThrottledCallback","applyAnimationState","list","noTransition","cumulativeHeight","state","shiftPx","apply","setExtraStyles","zIndex","String","transition","dataset","isPanelOpen","isConnected","openStoryViewer","loadPeerStoriesByIds","isExpired","imageHash","getStoryMediaHash","imgBlobUrl","mediaUrl","blurredBackgroundRef","storyIds","isSinglePeer","isSingleStory","MediaAreaOverlay","getSingularPaidMedia","extendedMedia","singularMedia","AlbumRectPart","Top","Bottom","accumulate","initValue","accumulator","calculateContainerSize","layout","dimensions","sides","calculateAlbumLayout","album","ratios","messages","isSingleMessage","paidMedia","getMessageContent","calculateMediaDimensions","getRatios","isPaidMedia","proportions","ratio","getProportions","averageRatio","getAverageRatio","albumCount","forceCalc","maxWidth","getAvailableWidth","params","minWidth","spacing","originalRatios","clamp","cropRatios","attempts","pushAttempt","lineCounts","heights","currentCount","multiHeight","attemptCount","sum","first","second","third","fourth","optimalAttempt","optimalDiff","lineCount","totalHeight","bad1","bad2","line","optimalCounts","optimalHeights","rowCount","colCount","lineHeight","col","layoutWithComplexLayouter","layoutTwoTopBottom","layoutTwoLeftRightEqual","minimalWidth","secondWidth","firstWidth","layoutTwoLeftRight","layoutTwo","firstHeight","thirdHeight","secondHeight","rightWidth","leftWidth","layoutThreeLeftAndOther","thirdWidth","layoutThreeTopAndOther","layoutThree","w","h0","h","w0","w2","w1","h1","layoutFourTopAndOther","h2","layoutFourLeftAndOther","layoutFour","containerStyle","worker","initializationDeferred","Deferred","IS_TRANSLATION_SUPPORTED","createConnector","Worker","CHAT_STATS","Map","throttledMakeChatDecision","throttle","updateChatDetectedLanguage","chatStats","messagesChecked","translatableCount","detectableCount","languageOccurrences","isTranslatable","occurrences","set","QUICK_REACTION_AREA_WIDTH","QUICK_REACTION_AREA_HEIGHT","GROUP_MESSAGE_HOVER_ATTRIBUTE","useOuterHandlers","selectMessage","isInSelectMode","canReply","isContextMenuShown","quickReactionRef","shouldHandleMouseLeave","getIsMessageListReady","sendDefaultReaction","isQuickReactionVisible","markQuickReactionVisible","unmarkQuickReactionVisible","isSwiped","markSwiped","unmarkSwiped","doubleTapTimeoutRef","handleMouseMove","quickReactionContainer","quickReactionX","quickReactionWidth","quickReactionY","quickReactionHeight","isVisibleX","isVisibleY","excludedClosestSelector","preventMessageInputBlur","clearInterval","contains","getIsKeyboardVisible","handleTap","handleDoubleClick","quoteOffset","handleContentDoubleClick","handleSendQuickReaction","lastGroupElement","getLastElementInDocumentGroup","removeAttribute","handleDocumentGroupMouseLeave","handleDocumentGroupMouseEnter","setAttribute","nextElementSibling","EmbeddedStory","isFullStory","isExpiredStory","isVideoStory","pictogramUrl","handleFastClick","peerColor","TopicChip","getTopicColorCssVariable","blankSrc","withSelectControl","WrappedComponent","ownProps","clickArg","noSelectControls","selectIsMessageSelected","toggleMessageSelection","handleMessageSelect","withShift","newProps","dims","PhotoWithSelect","Photo","VideoWithSelect","Video","activeDownloads","selectActiveDownloads","uploadsByKey","fileUploads","byMessageKey","Album","hasCustomAppendix","albumLayout","cancelUploadMedia","mainMessage","mediaCount","handlePaidMediaClick","handleAlbumMessageClick","handleCancelUpload","containerWidth","containerHeight","renderingPaidMedia","paidPhotoOrPreview","paidVideoOrPreview","fileUpload","getMessageKey","selectCanAutoLoadMedia","canAutoPlay","selectCanAutoPlayMedia","shouldAffectAppendix","mediaType","getIsDownloading","SIZE","useAnimatedEmoji","soundId","activeEmojiInteractions","preferredSize","interactWithAnimatedEmoji","sendEmojiInteraction","sendWatchingEmojiInteraction","audioRef","soundMediaData","buildStyle","IS_ELECTRON","interactions","startedInteractions","sendInteractionBunch","play","safePlay","startSize","isReversed","performance","interactionMessageId","customEmojiId","selectAnimatedEmojiEffect","selectAnimatedEmojiSound","AnimatedCustomEmoji","getCustomEmojiSize","LIKE_STICKER_ID","isBig","withSharedAnimation","AnimatedEmoji","forceLoadPreview","quality","forcePreview","CommentButton","isCustomShape","asActionButton","shouldRenderLoading","useAsyncRendering","originMessageId","recentReplierIds","originChannelId","isComments","recentRepliers","hasUnread","commentsText","getContactName","contact","firstName","lastName","Contact","openAddContactDialog","isRegistered","canAddContact","getCanAddContact","handleOpenChat","handleAddContact","ContextMenuContainer","COLOR","FactCheck","factCheck","isToggleDisabled","cutoutRef","isCollapsible","setIsCollapsed","useCollapsibleLines","countryLocalized","countryCode","canExpand","handleExpand","handleToggle","prev","Separator","Game","canAutoLoadMedia","game","getGamePreviewPhotoHash","getGamePreviewVideoHash","videoBlobUrl","handleGameClick","inlineButtons","giveaway","channelIds","giftSticker","selectGiftStickerForDuration","months","Giveaway","isLoadingInfo","giveawayInfo","setGiveawayInfo","giveawayResults","isResults","untilDate","prizeDescription","quantity","winnersCount","hasEnded","translatedNames","countries","isoToEmoji","handlePeerClick","channelId","handleShowInfoClick","callApi","handleCloseInfo","giveawayInfoTitle","AnimatedIconWithPreview","PartyPopper","winnerIds","PeerChip","withPeerColors","renderGiveawayResultsDescription","formatDateTimeToString","renderGiveawayDescription","isOnlyConfirm","isResultsInfo","isApiPeerChat","endDate","formatDateAtTime","otherChannelsCount","otherChannelsString","isSeveral","firstKey","giveawayDuration","firstParagraph","additionalPrizes","secondKey","secondParagraph","activatedCount","isRefunded","isWinner","lastParagraph","disallowedCountry","adminDisallowedChatId","disallowedChat","disallowedChatTitle","joinedTooEarlyDate","isParticipating","renderGiveawayInfo","InlineButtons","RE_TME_LINK","renderIcon","Invoice","forcedWidth","invoice","getMessageInvoice","currency","isTest","photoUrl","getWebDocumentHash","withBlurredBackground","useBlurredMediaThumbRef","prevShouldAffectAppendix","contentEl","MESSAGE_CONTENT_SELECTOR","getCustomAppendixBg","appendixBg","CUSTOM_APPENDIX_ATTRIBUTE","crossOrigin","forceAspectRatio","formatCurrency","InvoiceMediaPreview","openInvoice","loadExtendedMedia","refreshExtendedMedia","isExtendedMedia","spoiler","buy","lock","formatCurrencyAsString","TIMER_CIRCUMFERENCE","TIMER_RADIUS","PI","MOVE_THRESHOLD","PinSvg","cx","cy","r","Location","countdownRef","location","getMessageLocation","serverTime","isGeoLiveExpired","secondsBeforeEnd","period","point","setPoint","shouldRenderText","prevMediaBlobUrl","mapBlobUrl","accuracyRadiusPx","accuracyRadius","lat","getMetersPerPixel","updateCountdown","countdownEl","svgEl","lastElementChild","timerEl","firstElementChild","timeLeft","strokeDashOffset","formatCountdownShort","textContent","long","pinClassName","heading","getVenueColor","venueType","iconSrc","getVenueIconUrl","mapPin","renderPin","renderOverlay","formatLocationLastUpdate","editDate","renderInfo","MessageMeta","signature","withReactionOffset","repliesThreadInfo","renderQuickReactionButton","noReplies","isTranslated","withFullDate","onTranslationClick","onEffectClick","onOpenThread","paidMessageStars","markActivated","handleImportedClick","dateTitle","createDateTime","timeFormat","editDateTime","isEdited","forwardedDateTime","savedDate","viewsTitle","viewsCount","forwardsCount","repliesTitle","time","isImported","containerClassName","isVideoProcessingPending","MessagePhoneCall","phoneCall","reason","isMissed","isCancelled","handleCall","formattedDuration","formatTimeDuration","timeFormatted","getCallMessageKey","PaidMediaOverlay","children","isClickable","isBought","starsAmount","getPercentage","total","toFixed","PollOption","answer","voteResults","totalVoters","maxVotersCount","correctResults","option","correctAnswer","showIcon","isChosen","answerPercent","votersCount","finalPercent","setFinalPercent","lineWidth","isAnimationDoesNotStart","lineStyle","Poll","onSendVote","loadMessage","openPollResults","summary","isSubmitting","setIsSubmitting","chosenOptions","setChosenOptions","wasSubmitted","setWasSubmitted","closePeriod","setClosePeriod","closed","closeDate","timerCircleRef","hasVoted","canVote","canViewResult","isPublic","isMultiple","multipleChoice","recentVoterIds","isCorrect","answers","hidden","quiz","chosen","timer","recentVoters","handleRadioChange","handleCheckboxChange","handleVoteClick","handleViewResultsClick","showSolution","solution","solutionEntities","question","getPollTypeString","CheckboxGroup","onChange","loadingOptions","isRound","RadioGroup","loadingOption","getReadableVotersCount","Sticker","withEffect","onStopEffect","effectRef","hasEffect","isMirrored","IS_WEBM_SUPPORTED","canLoad","mediaHashEffect","effectBlobUrl","isPlayingEffect","startPlayingEffect","stopPlayingEffect","handleEffectEnded","shouldRenderEffect","useOverlayPosition","anchorRef","overlayRef","openModal","isMemojiSticker","getStickerDimensions","fullMediaHash","fullMediaClassName","AnimatedSticker","isLowPriority","onEnded","connectionState","BaseStory","lastReadId","selectPeerStories","targetUser","thumbUrl","QUICK_REACTION_SIZE","EXTRA_SPACE_FOR_REACTIONS","focusedMessage","activeReactions","loadingThread","withSenderName","isLastInDocumentGroup","isFirstInGroup","viaBotId","transcriptionId","viaBusinessBotId","isGroup","webPageStoryData","webPageStory","forceSenderName","isAnonymousOwnMessage","canShowSender","originSender","botSender","senderAdminMember","adminMembersById","isThreadTop","getMessageReplyInfo","storyReplyPeerId","storyReplyId","getStoryReplyInfo","shouldHideReply","replyMessage","selectReplyMessage","forwardHeader","replyMessageSender","selectSenderFromHeader","replyMessageForwardSender","replyMessageChat","isReplyPrivate","isChatPublic","replyStory","storySender","selectUploadProgress","isFocused","selectIsMessageFocused","focusDirection","noHighlight","noFocusHighlight","isResizingContainer","quote","focusedQuote","focusedQuoteOffset","scrollTargetPosition","middleSearch","selectCurrentMiddleSearch","highlight","isHashtag","getMessageSingleRegularEmoji","animatedCustomEmoji","getMessageSingleCustomEmoji","selectCanReplyToMessage","downloadableMedia","getMessageDownloadableMedia","commentsMessage","isInDocumentGroup","documentGroupFirstMessageId","selectMessageIdsByGroupId","reactionMessage","hasUnreadReaction","unreadReactions","hasTopicChip","messageTopic","selectChatTranslations","requestedTranslationLanguage","selectRequestedMessageTranslationLanguage","areTranslationsEnabled","hasActiveReactions","senderBoosts","boostsApplied","chatLevel","boostLevel","transcribeMinLevel","appConfig","groupTranscribeLevelMin","canTranscribeVoice","viaBusinessBot","selectPollFromMessage","maxTimestamp","selectMessageTimestampableDuration","lastPlaybackTimestamp","selectMessageLastPlaybackTimestamp","selectIsMessageProtected","isChatProtected","selectIsChatProtected","isGroupSelected","selectIsDocumentGroupSelected","isPinnedList","canAutoPlayMedia","shouldLoopStickers","selectShouldLoopStickers","defaultReaction","selectDefaultReaction","transcriptions","isPending","transcribedText","shouldDetectChatLanguage","selectShouldDetectChatLanguage","hasLinkedChat","linkedChatId","withAnimatedEffects","isLoadingComments","isCommentsInfo","loadingChatId","loadingMessageId","tags","savedReactionTags","Message","observeIntersectionForBottom","noComments","appearanceOrder","isJustAdded","isLastInGroup","isFirstInDocumentGroup","isLastInList","memoFirstUnreadIdRef","onIntersectPinnedMessage","disableContextMenuHint","animateUnreadReaction","markMentionsRead","bottomMarkerRef","setTranscriptionHidden","isPlayingSnapAnimation","setIsPlayingSnapAnimation","isPlayingDeleteAnimation","setIsPlayingDeleteAnimation","requestEffect","hideEffect","contextMenuTarget","noAppearanceAnimation","markShown","MESSAGE_APPEARANCE_DELAY","viewportPinnedIdsToRemove","hasMessageReply","isReplyToMessage","paidMediaPhoto","paidMediaVideo","messageReplyInfo","storyReplyInfo","withVoiceTranscription","hasStoryReply","hasThread","getMessageCustomShape","hasAnimatedEmoji","hasReactions","areReactionsEmpty","asForwarded","isLinkedChannelPost","isMention","canShowSenderBoosts","isStoryMention","isAlbum","msg","isInDocumentGroupNotFirst","isInDocumentGroupNotLast","canShowActionButton","canForward","isForwardingAllowed","canFocus","fromMessageId","hasFactCheck","hasForwardedCustomShape","hasSubheader","childMessageIds","avatarPeer","messageColorPeer","senderPeer","handleSenderClick","handleViaBotClick","handleReplyClick","handleMediaClick","handleDocumentClick","handleAudioPlay","handleAlbumMediaClick","handlePhotoMediaClick","handleVideoMediaClick","handleMetaClick","handleTranslationClick","handleOpenThread","handleReadMedia","handleVoteSend","handleGroupForward","handleForward","handleFocus","handleFocusForwarded","handleDocumentGroupSelectAll","handleTopicChipClick","handleStoryClick","isTranslatingChat","openAudioPlayer","markMessagesRead","sendPollVote","openForwardMenu","searchChatMediaMessages","replyToTopId","channelPostId","focusMessageId","replyMessageId","ScheduledInline","openMediaViewerWithPhotoOrVideo","withDynamicLoading","currentMediaMessageId","videoContent","webpageTimestamp","albumMessageId","albumIndex","ScheduledAlbum","originalChatId","savedFromPeerId","groupedChatId","selectWithGroupedId","useInnerHandlers","handleEffectClick","isPartialAlbumDelete","isDeleting","textMessage","hasMultipleCaptions","captionMessage","hasTextContent","hasMessageText","hasUnreadMention","getIsReady","setLanguage","threshold","promise","request","detectLanguage","useTextLanguage","LimitedMap","previousMetadata","processMessageMetadata","useDetectChatLanguage","isTranslationPending","previousTranslatedText","currentTranslatedText","isMediaWithCommentButton","withCommentButton","withQuickReactionButton","hasOutsideReactions","hasCommentCounter","hasCommentButton","hasActionButton","isGeoLiveActive","peerColorClass","isInvertibleMedia","classNames","MESSAGE_CONTENT_CLASS_NAME","isMedia","isMediaWithNoText","hasInlineKeyboard","isViaBot","hasFooter","emojiOnlyCount","EMOJI_SIZES","gift","buildContentClassName","withAppendix","paidMessageStarsInMeta","metaPosition","reactionsPosition","quickReactionPosition","useFocusMessage","viaBusinessBotTitle","getPeerFullTitle","canShowPostAuthor","postAuthorTitle","useMessageResizeObserver","bottomMarker","isElementInViewport","unreadMentionIds","extraPadding","sizeCalculations","calculatedWidth","contentWidth","reactionsMaxWidth","noMediaCorners","previewWidth","previewHeight","calculateDimensionsForMessageMedia","fromOwnMessage","MIN_MEDIA_WIDTH_WITH_TEXT","getMinMediaWidth","renderMessageText","isForAnimation","MessageText","messageOrStory","canBeEmpty","ReactionStaticEmoji","renderReactionsAndMeta","meta","Reactions","metaChildren","noRecentReactors","renderWebPage","backgroundEmojiId","onAudioPlay","onDocumentClick","onCancelMediaTransfer","renderInvertibleMediaContent","messageText","shouldRenderSenderName","renderForwardTitle","renderSenderName","shouldSkipRenderForwardTitle","shouldSkipRenderAdminTitle","senderEmojiStatus","senderIsPremium","shouldRenderForwardAvatar","hasBotSenderUsername","senderColor","EMOJI_STATUS_LOOP_LIMIT","fakeType","FakeIcon","forwardAuthor","onCopy","onDoubleClick","onMouseMove","textContentClass","shouldReadMedia","RoundVideo","Story","StoryMention","footerClass","hasContentAfterText","isMetaInText","renderInvertedMediaContent","MessageAppendix","isOutside","targetHref","startPlaying","stopPlaying","isPositionUpdateRequired","requirePositionUpdate","resetPositionUpdate","effectAnimationId","effectStickerId","getEffectHash","effectBlob","handleEnded","updatePosition","isForMessageEffect","effectClassName","isInWebPage","isPaidPreview","useMediaTransition","showSpoiler","wasLoadDisabled","spinnerRef","downloadButtonRef","shouldRenderDownloadButton","isAllowed","isSmall","componentClassName","MIN_MEDIA_HEIGHT","dimensionsStyle","withAnimation","PROGRESS_CENTER","ROUND_VIDEO_DIMENSIONS_PX","PROGRESS_CIRCUMFERENCE","stopPrevious","playerRef","circleRef","getVideoMediaHash","isPlayerReady","markPlayerReady","shouldRenderSpoiler","getProgress","setProgress","useSignal","getThrottledProgress","useThrottledSignal","playerEl","capturePlaying","togglePlaying","paused","stopCurrentAudio","handleTimeUpdate","defaultMuted","isPriority","onTimeUpdate","SponsoredContextMenu","sponsorInfo","canReport","shouldSkipAbout","onAboutAdsClick","onSponsoredHide","onSponsorInfo","onSponsoredReport","menuRef","isSeparatorNeeded","SponsoredMessageContextMenuContainer","randomId","additionalInfo","onItemClick","openAboutAdsModal","reportSponsored","hideSponsored","handleItemClick","handleAboutAdsOpen","handleSponsoredHide","handleSponsorInfo","handleReportSponsoredMessage","isIntersectingForLoading","isIntersectingForPlaying","wasIntersectedRef","isPlayAllowed","setIsPlayAllowed","isFullMediaPreloaded","hasThumb","isInline","isUnsupported","useUnsupportedMedia","previewMediaHash","isPreviewPreloaded","canLoadPreview","shouldHidePreview","previewRef","playButtonRef","setPlayProgress","isFinite","calculateExtendedPreviewDimensions","calculateVideoDimensions","isFromSpinner","handleClickOnSpinner","WebPageUniqueGift","stickerRef","backdrop","model","pattern","getGiftAttributes","backgroundColors","centerColor","edgeColor","RadialPatternBackground","patternColor","patternIcon","openUrl","openTelegramLink","stickersRef","handleContainerClick","handleOpenTelegramLink","hasCustomColor","isWithTextColor","documents","customColor","useDynamicColorListener","linkTimestamp","mediaSize","isStory","isGift","quickButtonLangKey","getWebpageButtonLangKey","isEmoji","quickButtonTitle","isArticle","isSquarePhoto","isMediaInteractive","EmojiIconBackground","emojiDocumentId","shouldSkipModal","caption","isRectangular","noForcedUpperCase","SELECTED_APPENDIX_COLORS","dark","outgoing","incoming","light","requestMediaWorker","MAX_WORKERS","SMALL_IMAGE_THRESHOLD","MIN_MESSAGE_LENGTH_FOR_BLUR","MIN_MEDIA_WIDTH","isPhoto","isWebPagePhoto","isWebPageVideo","calculateInlineImageDimensions","minMediaWidth","stretchFactor","finalWidth","finalHeight","RADIUS_RATIO","lastWorkerIndex","thumbData","workerIndex","cycleRestrict","offscreenRef","blurThumb","uri","image","transferControlToOffscreen","ceil","transferables","useOffscreenCanvasBlur","PENDING_TRANSLATIONS","requestedLanguageCode","messageTranslation","byLangCode","languageTranslations","markMessagesTranslationPending","throttledProcessPending","addPendingTranslation","translateMessages","hasUnprocessed","messageIdsToTranslate","delete","oldMessageIds","newMessageIds","removePendingTranslations","OFFSET_X","anchorRect","elementRect","anchorCenterY","anchorBottomY","messagesContainer","selectCurrentChat","DeleteMemberModal","deleteChatMember","handleDeleteChatMember","textParts","dependencies","delay","timeoutRef","CHANNEL_OVERVIEW","isPercentage","GROUP_OVERVIEW","MESSAGE_OVERVIEW","isPlain","isApproximate","STORY_OVERVIEW","BOOST_OVERVIEW","withAbsoluteValue","StatisticsOverview","statistics","isToncoin","renderBalanceCell","usdRate","integerTonPart","decimalTonPart","integerUsdPart","decimalUsdPart","balances","schema","getSchemaByType","formatFullDate","minDate","maxDate","availableBalance","currentBalance","overallRevenue","cell","field","formatInteger","part","percentage","renderOverviewItemValue","change","isChangeNegative","toggleStoriesHidden","useStoryPreloader","isDense","preventMessageInputBlurWithBubbling","handleSavedStories","profileTab","handleArchivedStories","handleOpenProfile","handleArchivePeer","hasUnreadStories","name_hasUnreadStory","contextMenu","active","closing","useHorizontalScroll","StoryRibbonButton","byPeerId","isArchivedRibbonShown","peerStories","canShow","PREVIEW_AVATAR_COUNT","reverse","closeFriends","isCloseFriend","isRead","isForCloseFriends","preloadPeerIds","animateClosing","animateOpening","avatar","withStorySolid","forceFriendStorySolid","RIBBON_OFFSET","RIBBON_Z_INDEX","STROKE_OFFSET","CANVAS_OFFSET","callbacks","cancelDelayedCallbacks","toggler","leftMainHeader","ribbonPeers","toggleAvatars","getHTMLElements","headerBottom","headerRight","toTop","lastToggleAvatar","firstToggleAvatar","lastId","getPeerId","toggleAvatar","selectByPeerId","fromTop","fromLeft","fromWidth","toLeft","toWidth","fromTranslateX","fromTranslateY","fromScale","toTranslateX","toTranslateY","toScale","createGhost","ghost2","togglerStyles","ghostLast","ghostAnimateName","applyStyles","ghostRevealName","createDelayedCallback","ribbon","ribbonStyles","sourceEl","oncontextmenu","sourceCanvas","drawImage","callback","ms","timeout","clear","PRIMARY_VIDEO_MIME","SECONDARY_VIDEO_MIME","preloadedStories","canPreload","aroundStoryId","isArray","mediaHashes","isStream","loader","makeProgressiveLoader","getProgressiveUrl","cachedSize","chunk","byteLength","preloadStream","Progressive","head","preload","autoplay","disableRemotePlayback","load","unloadVideo","preloadProgressive","preloadHashes","preloadIds","currentId","aroundAmount","PEER_STORIES_FOR_PRELOAD","findIdsAroundCurrentId","currentStoryId","checkIfStreamingSupported","altVideos","getPreloadMediaHashes","MediaAreaSuggestedReaction","mediaArea","customEmojiSize","setCustomEmojiSize","views","isDark","isFlipped","reactionCount","shouldDisplayCount","updateCustomEmojiSize","clientHeight","prevReactionCount","effectSize","shouldPause","restrictedEmoji","selectRestrictedEmoji","MediaAreaWeather","temperatureC","backgroundColor","convertToRGBA","textColor","getTextColor","updateCustomSize","isImmediate","customEmojiHeight","applyFn","navigator","formatTemperature","STORY_ASPECT_RATIO","NO_SHINY_TYPES","prepareStyle","mediaWidth","rotation","coordinates","pixelRadius","pixelWidth","pixelHeight","isStoryPlaying","closeStoryViewer","setMediaWidth","useWindowSize","clientWidth","MOBILE_SCREEN_MAX_WIDTH","screenAspectRatio","mediaAreas","isShiny","handleMediaAreaClick","groupCallId","selectGroupCall","selectGroupCallParticipant","participantId","selectIsAdminInActiveGroupCall","selectActiveGroupCall","selectPhoneCallUser","adminId","selectCanInviteToActiveGroupCall","DEFAULT_LIMITS","limits","selectPremiumLimit","NOTIFICATION_DURATION","shouldDisableNotification","setIsUnsupported","handleUnsupported","IS_MOBILE","onError","onCanPlay","POLLING_INTERVAL","PEER_LAST_POLLING_TIME","PEER_ID_QUEUE","loadFromQueue","queue","queueToLoad","otherQueue","LIMIT_PER_REQUEST","loadStoriesMaxIds","peerIds","pollablePeerIds","lastPollingTime","isStatusAvailable","isContact","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","mode","selectTemp","selectedChatIds","selectedChatTypes","includeFilters","pick","excludeFilters","getSuggestedFolderName","filters","INITIAL_STATE","chatFilter","foldersReducer","omit","useFoldersReducer","useReducer","interval","resolver","deps","msOrSchedulerFn","noFirst","setValue","getValue","throttledResolver","noLast","useDebouncedSignal","debouncedResolver","trackId","originalDuration","handlers","onInit","onForcePlay","onTrackChange","noPlaylist","noProgressUpdates","noHandleEvents","controllerRef","setIsPlaying","isPlayingSync","register","eventName","setVolume","setPlaybackRate","toggleMuted","proxy","registerMediaSession","mediaHandlers","requestNextTrack","requestPreviousTrack","closeAudioPlayer","seekbackward","skipTime","seekOffset","seekforward","seekTo","seekTime","nexttrack","previoustrack","makeMediaHandlers","setPlaybackState","audioPlayer","PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION","playbackRate","setPositionState","updateMetadata","destroy","isSafariPatchInProgress","prevShouldPlay","prevSrc","playIfPresent","setTime","audioProxy","isInSearch","isServiceNotifications","deleteTitle","getCanDeleteChat","toggleChatPinned","toggleSavedDialogPinned","toggleChatArchived","markChatUnread","togglePinned","actionAddToFolder","actionMaskAsRead","actionMarkAsUnread","actionArchive","isChatArchived","actionReport","isInFolder","loadStoryThrottled","throttled","useForumPanelRender","shouldRenderForumPanelRef","isAnimationStartedRef","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","shouldRenderForumPanel","isAnimationStarted","IGNORE_TAGS","createCallbackManager","hotkeys","addCallback","HTMLElement","shouldFireEvent","hotkey","ctrl","mod","pressedKey","isExactHotkey","modifiers","reservedKeys","parseHotkey","getHotkeyMatcher","runCallbacks","FOCUS_DELAY_MS","MODAL_HIDE_DELAY_MS","useInputFocusOnOpen","inputRef","isLongPressActive","isPressed","timerId","canProcessEvent","touches","cancel","onMouseUp","onTouchStart","onTouchEnd","useMarkScrolled","selector","toggle","Event","bubbles","STREAMING_PROGRESS","STREAMING_TIMEOUT","PROGRESS_THROTTLE","mediaFormat","isHtmlAllowed","isStreaming","IS_PROGRESSIVE_SUPPORTED","useSelector","selectIsSynced","useUniqueId","setLoadProgress","startedAtRef","handleProgress","spentTime","MENU_CLOSE_TIMEOUT","closeTimeout","menuCloseTimeout","isMouseInside","usePrevDuringAnimation","isCurrentPresent","isPrevPresent","reducer","initialState","reducerRef","dispatch","VIDEO_REVEAL_DELAY","useStreaming","MediaSourceClass","getMediaSource","isTypeSupported","onSourceOpen","sourceBuffer","addSourceBuffer","next","done","readyState","endOfStream","appendBuffer","buffer","DEBUG","warn","ManagedMediaSource","MediaSource","lastCallback","onBeforeUnload","prop","getBrowserFullscreenElementProp","useFullscreen","elRef","exitCallback","enterCallback","isFullscreen","setIsFullscreen","listener","HTMLVideoElement","controls","listenerEnter","listenerExit","setFullscreen","requestFullscreen","webkitRequestFullscreen","webkitEnterFullscreen","mozRequestFullScreen","exitFullscreen","mozCancelFullScreen","webkitCancelFullScreen","webkitExitFullscreen","useFullscreenStatus","checkIfFullscreen","removeElectronListener","electron","on","ElectronEvent","FULLSCREEN_CHANGE","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","fullscreenProp","ConnectorClass","constructor","onUpdate","channel","_defineProperty","throttleWithTickEnd","this","payloads","pendingPayloads","pendingTransferables","postMessage","postMessageOnTickEnd","messageData","requestStates","requestStatesByCallback","restMessageData","requestState","assign","withCallback","pop","catch","finally","cancelCallback","progressCallback","isCanceled","onMessage","response","callbackArgs","Error","postMessagesOnTickEnd","connector","handleMessage","tracks","currentTrackId","voiceQueue","musicQueue","playNext","isReverseOrder","currentTrack","nextTrackId","findNextInQueue","parseMessageKey","splitTrackId","messageKey","nextTrack","track","handleEvent","Proxy","createAudio","trackIdComparator","addTrackToQueue","preventPlayAfterPatch","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","Music","openedChatId","queueFilter","cleanUpQueue","fastSeek","rate","shouldRemoveFromQueue","trackIdFilter","removeFromQueue","getTrackQueue","chatAudio","getMessageServerKey","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","LIMIT_PER_BATCH","BATCH_INTERVAL","pendingDownloads","planned","download","pendingDownload","downloadOne","processQueue","rel","click","hardwareConcurrency","instances","launchMediaWorkers","IS_TEST","PROVIDERS","google","bing","osm","apple","VENUE_COLORS","arts_entertainment","building","education","food","home","nightlife","parks_outdoors","shops","travel","work","RANDOM_COLORS","prepareMapUrl","provider","providerUrl","cos","str","prevHash","currVal","charCodeAt","DEFAULT_HANDLERS","mediaSession","setMediaSessionHandlers","setActionHandler","clearMediaSession","playbackState","buildMediaMetadata","artwork","MediaMetadata","cache","WeakMap","fn","cached","areSortedArraysEqual","lastArgs","lastResult","DEFAULT_PART_SIZE","MAX_END_TO_CACHE","bufferCache","sizeCache","pendingRequests","chunkSize","fileSize","cacheKey","arrayBuffer","fullSize","fileSelector","accept","noMultiple","onchange"],"sourceRoot":""}