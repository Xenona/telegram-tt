{"version":3,"file":"3454.02024b5bf0682f4c22ff.js","mappings":"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","sources":["webpack://telegram-t/./src/components/common/AnimatedCounter.tsx","webpack://telegram-t/./src/components/common/AnimatedCounter.module.scss?3640","webpack://telegram-t/./src/components/common/AnimatedIconFromSticker.tsx","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.module.scss?eca8","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.tsx","webpack://telegram-t/./src/components/common/AvatarList.module.scss?00d4","webpack://telegram-t/./src/components/common/AvatarList.tsx","webpack://telegram-t/./src/components/common/MediaSpoiler.module.scss?4929","webpack://telegram-t/./src/components/common/MediaSpoiler.tsx","webpack://telegram-t/./src/components/common/PasswordForm.tsx","webpack://telegram-t/./src/components/common/PeerChip.module.scss?346e","webpack://telegram-t/./src/components/common/PeerChip.tsx","webpack://telegram-t/./src/components/common/PremiumProgress.module.scss?8969","webpack://telegram-t/./src/components/common/PremiumProgress.tsx","webpack://telegram-t/./src/components/common/gift/GiftRibbon.module.scss?54c5","webpack://telegram-t/./src/components/common/gift/GiftRibbon.tsx","webpack://telegram-t/./src/components/common/helpers/gifts.ts","webpack://telegram-t/./src/components/common/helpers/sortChatIds.ts","webpack://telegram-t/./src/components/common/pickers/PeerPicker.tsx","webpack://telegram-t/./src/components/common/pickers/PickerItem.module.scss?49ce","webpack://telegram-t/./src/components/common/pickers/PickerItem.tsx","webpack://telegram-t/./src/components/common/profile/RadialPatternBackground.module.scss?0cfb","webpack://telegram-t/./src/components/common/profile/RadialPatternBackground.tsx","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.module.scss?b4fe","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionStaticEmoji.tsx","webpack://telegram-t/./src/components/common/richinput/Keyboard.ts","webpack://telegram-t/./src/components/common/richinput/RichEditableAttachment.tsx","webpack://telegram-t/./src/components/common/richinput/TextFormatter.async.tsx","webpack://telegram-t/./src/util/execCommand.ts","webpack://telegram-t/./src/lib/cleanDocsHtml.ts","webpack://telegram-t/./src/components/middle/composer/helpers/cleanHtml.ts","webpack://telegram-t/./src/util/AbsoluteVideo.ts","webpack://telegram-t/./src/components/common/richinput/EditableEmojiRender.ts","webpack://telegram-t/./src/components/common/richinput/RichEditable.ts","webpack://telegram-t/./src/components/common/richinput/blockquoteEnter.ts","webpack://telegram-t/./src/components/common/richinput/useRichEditable.tsx","webpack://telegram-t/./src/components/middle/ActionMessageSuggestedAvatar.tsx","webpack://telegram-t/./src/components/middle/ActionMessageUpdatedAvatar.tsx","webpack://telegram-t/./src/components/middle/message/SimilarChannels.module.scss?86cb","webpack://telegram-t/./src/components/middle/message/SimilarChannels.tsx","webpack://telegram-t/./src/hooks/useAverageColor.ts","webpack://telegram-t/./src/components/middle/ActionMessage.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/message/hooks/useFocusMessage.ts","webpack://telegram-t/./src/components/common/reactions/PaidReactionEmoji.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionButton.tsx","webpack://telegram-t/./src/components/middle/message/reactions/Reactions.tsx","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.module.scss?c2fd","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.tsx","webpack://telegram-t/./src/components/middle/message/reactions/SavedTagButton.tsx","webpack://telegram-t/./src/global/helpers/payments.ts","webpack://telegram-t/./src/global/helpers/peers.ts","webpack://telegram-t/./src/hooks/schedulers/useTimeout.ts","webpack://telegram-t/./src/hooks/useCanvasBlur.ts","webpack://telegram-t/./src/hooks/useEnsureMessage.ts","webpack://telegram-t/./src/hooks/useFolderManager.ts","webpack://telegram-t/./src/hooks/useHorizontalScroll.ts","webpack://telegram-t/./src/hooks/usePrevious.ts","webpack://telegram-t/./src/hooks/useResizeMessageObserver.ts","webpack://telegram-t/./src/hooks/useRunDebounced.ts","webpack://telegram-t/./src/util/AnimBackgroundRender.ts","webpack://telegram-t/./src/util/BaseAnimBackgroundRender.ts","webpack://telegram-t/./src/util/animateHorizontalScroll.ts","webpack://telegram-t/./src/util/animateScroll.ts","webpack://telegram-t/./src/util/colors.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/util/objects/customPeer.ts","webpack://telegram-t/./src/util/parseMarkdown.ts","webpack://telegram-t/./src/util/parseHtmlAsFormattedText.ts","webpack://telegram-t/./src/util/visibility/getOffsetToContainer.ts","webpack://telegram-t/./src/components/common/pickers/PickerStyles.module.scss?c0e4","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.module.scss?3a3d","webpack://telegram-t/./src/components/middle/message/reactions/ReactionButton.module.scss?4249"],"sourcesContent":["import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getGlobal } from '../../global';\n\nimport { selectCanAnimateInterface } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { throttleWithTickEnd } from '../../util/schedulers';\n\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport useLang from '../../hooks/useLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport styles from './AnimatedCounter.module.scss';\n\ntype OwnProps = {\n  text: string;\n  className?: string;\n  isDisabled?: boolean;\n  ref?: React.RefObject<HTMLSpanElement>;\n};\n\nconst ANIMATION_TIME = 200;\nconst MAX_SIMULTANEOUS_ANIMATIONS = 10;\n\nlet scheduledAnimationsCounter = 0;\n\nconst resetCounterOnTickEnd = throttleWithTickEnd(() => {\n  scheduledAnimationsCounter = 0;\n});\n\nconst AnimatedCounter: FC<OwnProps> = ({\n  text,\n  className,\n  isDisabled,\n  ref,\n}) => {\n  const { isRtl } = useLang();\n\n  const prevText = usePreviousDeprecated(text);\n  const forceUpdate = useForceUpdate();\n\n  const shouldAnimate = scheduleAnimation(\n    !isDisabled && selectCanAnimateInterface(getGlobal()) && prevText !== undefined && prevText !== text,\n  );\n\n  const characters = useMemo(() => {\n    return shouldAnimate ? renderAnimatedCharacters(text, prevText) : text;\n  }, [shouldAnimate, prevText, text]);\n\n  useEffect(() => {\n    if (!shouldAnimate) return undefined;\n\n    const timeoutId = window.setTimeout(() => {\n      forceUpdate();\n    }, ANIMATION_TIME);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [shouldAnimate, text]);\n\n  return (\n    <span ref={ref} className={buildClassName(className, !isDisabled && styles.root)} dir={isRtl ? 'rtl' : undefined}>\n      {characters}\n    </span>\n  );\n};\n\nexport default memo(AnimatedCounter);\n\nfunction scheduleAnimation(condition: boolean) {\n  if (!condition || scheduledAnimationsCounter >= MAX_SIMULTANEOUS_ANIMATIONS) return false;\n\n  if (scheduledAnimationsCounter === 0) {\n    resetCounterOnTickEnd();\n  }\n\n  scheduledAnimationsCounter++;\n\n  return true;\n}\n\nfunction renderAnimatedCharacters(text: string, prevText?: string) {\n  const elements: React.ReactNode[] = [];\n  const textLength = text.length;\n  const prevTextLength = prevText?.length ?? 0;\n\n  for (let i = 0; i <= textLength; i++) {\n    const charIndex = textLength - i;\n    const prevTextCharIndex = prevTextLength - i;\n\n    if (prevText && prevTextCharIndex >= 0 && text[charIndex] !== prevText[prevTextCharIndex]) {\n      elements.unshift(\n        <div className={styles.characterContainer}>\n          <div className={styles.character}>{text[charIndex] ?? ''}</div>\n          <div className={styles.characterOld}>{prevText[prevTextCharIndex]}</div>\n          <div className={styles.characterNew}>{text[charIndex] ?? ''}</div>\n        </div>,\n      );\n    } else {\n      elements.unshift(<span>{text[charIndex] ?? ''}</span>);\n    }\n  }\n\n  return elements;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"tgKbsVmz\",\"character-container\":\"IYTzbS8o\",\"characterContainer\":\"IYTzbS8o\",\"character\":\"Jw1oQFdk\",\"character-old\":\"TZfEz3sc\",\"characterOld\":\"TZfEz3sc\",\"character-disappear\":\"ORlhAlOv\",\"characterDisappear\":\"ORlhAlOv\",\"character-new\":\"Y9ied8_t\",\"characterNew\":\"Y9ied8_t\",\"character-appear\":\"s_g6bwRZ\",\"characterAppear\":\"s_g6bwRZ\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../api/types';\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { getStickerMediaHash } from '../../global/helpers';\n\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { sticker?: ApiSticker; noLoad?: boolean; forcePreview?: boolean };\n\nfunction AnimatedIconFromSticker(props: OwnProps) {\n  const {\n    sticker, noLoad, forcePreview, ...otherProps\n  } = props;\n\n  const thumbDataUri = sticker?.thumbnail?.dataUri;\n  const localMediaHash = sticker && getStickerMediaHash(sticker, 'full');\n  const previewBlobUrl = useMedia(\n    sticker ? getStickerMediaHash(sticker, 'preview') : undefined,\n    noLoad && !forcePreview,\n    ApiMediaFormat.BlobUrl,\n  );\n  const tgsUrl = useMedia(localMediaHash, noLoad);\n\n  return (\n    <AnimatedIconWithPreview\n      tgsUrl={tgsUrl}\n      previewUrl={previewBlobUrl}\n      thumbDataUri={thumbDataUri}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...otherProps}\n    />\n  );\n}\n\nexport default memo(AnimatedIconFromSticker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"xCi2f0YH\",\"preview\":\"lM2usrZU\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\n\nimport AnimatedIcon from './AnimatedIcon';\n\nimport styles from './AnimatedIconWithPreview.module.scss';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { previewUrl?: string; thumbDataUri?: string; noPreviewTransition?: boolean };\n\nconst ANIMATION_DURATION = 300;\n\nconst loadedPreviewUrls = new Set();\n\nfunction AnimatedIconWithPreview(props: OwnProps) {\n  const {\n    previewUrl, thumbDataUri, className, ...otherProps\n  } = props;\n\n  const [isThumbOpen, , unmarkThumbOpen] = useFlag(Boolean(thumbDataUri));\n  const thumbClassNames = useMediaTransitionDeprecated(isThumbOpen);\n\n  const [isPreviewOpen, markPreviewOpen, unmarkPreviewOpen] = useFlag(loadedPreviewUrls.has(previewUrl));\n  const previewClassNames = useMediaTransitionDeprecated(isPreviewOpen);\n\n  const [isAnimationReady, markAnimationReady] = useFlag(false);\n\n  const handlePreviewLoad = useLastCallback(() => {\n    markPreviewOpen();\n    loadedPreviewUrls.add(previewUrl);\n  });\n\n  const handleAnimationReady = useLastCallback(() => {\n    unmarkThumbOpen();\n    unmarkPreviewOpen();\n    setTimeout(markAnimationReady, ANIMATION_DURATION);\n  });\n\n  const { size } = props;\n\n  return (\n    <div\n      className={buildClassName(className, styles.root)}\n      style={buildStyle(size !== undefined && `width: ${size}px; height: ${size}px;`)}\n    >\n      {thumbDataUri && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img src={thumbDataUri} className={buildClassName(styles.preview, thumbClassNames)} draggable={false} />\n      )}\n      {previewUrl && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img\n          src={previewUrl}\n          className={buildClassName(styles.preview, previewClassNames)}\n          draggable={false}\n          onLoad={handlePreviewLoad}\n        />\n      )}\n      {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n      <AnimatedIcon {...otherProps} onLoad={handleAnimationReady} />\n    </div>\n  );\n}\n\nexport default memo(AnimatedIconWithPreview);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"kXs18Nmi\",\"avatar\":\"XND8fhC1\",\"badge\":\"SHyAyGFO\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { AvatarSize } from './Avatar';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar, { AVATAR_SIZES } from './Avatar';\n\nimport styles from './AvatarList.module.scss';\n\nconst DEFAULT_LIMIT = 3;\n\ntype OwnProps = {\n  size: AvatarSize;\n  peers?: ApiPeer[];\n  className?: string;\n  limit?: number;\n  badgeText?: string;\n};\n\nconst AvatarList: FC<OwnProps> = ({\n  peers,\n  size,\n  className,\n  limit = DEFAULT_LIMIT,\n  badgeText,\n}) => {\n  const lang = useOldLang();\n\n  const pxSize = typeof size === 'number' ? size : AVATAR_SIZES[size];\n\n  const renderingBadgeText = useMemo(() => {\n    if (badgeText) return badgeText;\n    if (!peers?.length || peers.length <= limit) return undefined;\n    return `+${peers.length - limit}`;\n  }, [badgeText, peers, limit]);\n\n  return (\n    <div\n      className={buildClassName(className, styles.root)}\n      style={`--_size: ${pxSize}px;`}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {peers?.slice(0, limit).map((peer) => <Avatar size={size} peer={peer} className={styles.avatar} />)}\n      {renderingBadgeText && (\n        <div className={styles.badge}>\n          {renderingBadgeText}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(AvatarList);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"qF2WgYVg\",\"mask-animation\":\"pNM3cgkY\",\"maskAnimation\":\"pNM3cgkY\",\"circle-cut\":\"WiW38HGg\",\"circleCut\":\"WiW38HGg\",\"dots\":\"XBor45hE\",\"canvas\":\"eULqS2yR\",\"opacity-breath\":\"sW9ega1D\",\"opacityBreath\":\"sW9ega1D\",\"dots-animation\":\"mAAEjSPE\",\"dotsAnimation\":\"mAAEjSPE\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\n\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport styles from './MediaSpoiler.module.scss';\n\ntype OwnProps = {\n  isVisible: boolean;\n  withAnimation?: boolean;\n  thumbDataUri?: string;\n  width?: number;\n  height?: number;\n  className?: string;\n};\n\nconst BLUR_RADIUS = 25;\nconst ANIMATION_DURATION = 500;\n\nconst MediaSpoiler: FC<OwnProps> = ({\n  isVisible,\n  withAnimation,\n  thumbDataUri,\n  className,\n  width,\n  height,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(\n    isVisible, undefined, true, withAnimation ? false : undefined, undefined, ANIMATION_DURATION,\n  );\n  const canvasRef = useCanvasBlur(thumbDataUri, !shouldRender, undefined, BLUR_RADIUS, width, height);\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (!ref.current) return;\n    const el = ref.current;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const shiftX = x - (rect.width / 2);\n    const shiftY = y - (rect.height / 2);\n    requestMutation(() => {\n      el.setAttribute('style', `--click-shift-x: ${shiftX}px; --click-shift-y: ${shiftY}px`);\n    });\n  });\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, transitionClassNames, className, withAnimation && styles.maskAnimation)}\n      ref={ref}\n      onClick={withAnimation ? handleClick : undefined}\n    >\n      <canvas\n        ref={canvasRef}\n        className={styles.canvas}\n        width={width}\n        height={height}\n      />\n      <div className={styles.dots} />\n    </div>\n  );\n};\n\nexport default memo(MediaSpoiler);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { MIN_PASSWORD_LENGTH } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Icon from './icons/Icon';\n\ntype OwnProps = {\n  submitLabel?: string;\n  error?: string;\n  hint?: string;\n  placeholder?: string;\n  description?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  shouldShowSubmit?: boolean;\n  shouldResetValue?: boolean;\n  isPasswordVisible?: boolean;\n  clearError: NoneToVoidFunction;\n  noRipple?: boolean;\n  onChangePasswordVisibility: (state: boolean) => void;\n  onInputChange?: (password: string) => void;\n  onSubmit?: (password: string) => void;\n};\n\nconst PasswordForm: FC<OwnProps> = ({\n  isLoading = false,\n  isPasswordVisible,\n  error,\n  hint,\n  placeholder = 'Password',\n  submitLabel = 'Next',\n  description,\n  shouldShowSubmit,\n  shouldResetValue,\n  shouldDisablePasswordManager = false,\n  noRipple = false,\n  clearError,\n  onChangePasswordVisibility,\n  onInputChange,\n  onSubmit,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n  const [password, setPassword] = useState('');\n  const [canSubmit, setCanSubmit] = useState(false);\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  useEffect(() => {\n    if (shouldResetValue) {\n      setPassword('');\n    }\n  }, [shouldResetValue]);\n\n  useTimeout(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, focusDelayTimeoutMs);\n\n  useEffect(() => {\n    if (error) {\n      requestMutation(() => {\n        inputRef.current!.focus();\n        inputRef.current!.select();\n      });\n    }\n  }, [error]);\n\n  function onPasswordChange(e: ChangeEvent<HTMLInputElement>) {\n    if (error) {\n      clearError();\n    }\n\n    const { target } = e;\n    setPassword(target.value);\n    setCanSubmit(target.value.length >= MIN_PASSWORD_LENGTH);\n    if (onInputChange) {\n      onInputChange(target.value);\n    }\n  }\n\n  function togglePasswordVisibility() {\n    onChangePasswordVisibility(!isPasswordVisible);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    if (isLoading) {\n      return;\n    }\n\n    if (canSubmit) {\n      onSubmit!(password);\n    }\n  }\n\n  function renderFakeInput() {\n    return (\n      <input\n        type=\"password\"\n        id=\"prevent_autofill\"\n        autoComplete=\"off\"\n        className=\"visually-hidden\"\n        tabIndex={-2}\n      />\n    );\n  }\n\n  return (\n    <form action=\"\" onSubmit={onSubmit ? handleSubmit : stopEvent} autoComplete=\"off\">\n      <div\n        className={buildClassName('input-group password-input', password && 'touched', error && 'error')}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldDisablePasswordManager && renderFakeInput()}\n        <input\n          ref={inputRef}\n          className=\"form-control\"\n          type={isPasswordVisible ? 'text' : 'password'}\n          id=\"sign-in-password\"\n          value={password || ''}\n          autoComplete={shouldDisablePasswordManager ? 'one-time-code' : 'current-password'}\n          onChange={onPasswordChange}\n          maxLength={256}\n          dir=\"auto\"\n        />\n        <label>{error || hint || placeholder}</label>\n        <div\n          className=\"div-button toggle-password\"\n          onClick={togglePasswordVisibility}\n          role=\"button\"\n          tabIndex={0}\n          title=\"Toggle password visibility\"\n          aria-label=\"Toggle password visibility\"\n        >\n          <Icon name={isPasswordVisible ? 'eye' : 'eye-closed'} />\n        </div>\n      </div>\n      {description && <p className=\"description\">{description}</p>}\n      {onSubmit && (canSubmit || shouldShowSubmit) && (\n        <Button size=\"smaller\" type=\"submit\" ripple={!noRipple} isLoading={isLoading} disabled={!canSubmit}>\n          {submitLabel}\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default memo(PasswordForm);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_Lq6_4e5\",\"minimized\":\"UhOZvxvs\",\"closeable\":\"uvvgSFUJ\",\"remove\":\"xVPG2UTy\",\"nonDestructive\":\"fAk5yEeV\",\"notClickable\":\"P8r3OoaX\",\"avatar\":\"La8BQ9yr\",\"iconWrapper\":\"NtoGLT22\",\"icon\":\"f91Ad80i\",\"name\":\"XPVuH29G\",\"squareAvatar\":\"JIHfTUVn\"};","import type { TeactNode } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport { getPeerTitle } from '../../global/helpers';\nimport { isApiPeerChat } from '../../global/helpers/peers';\nimport { selectPeer, selectUser } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getPeerColorClass } from './helpers/peerColor';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\n\nimport styles from './PeerChip.module.scss';\n\ntype OwnProps<T = undefined> = {\n  // eslint-disable-next-line react/no-unused-prop-types\n  peerId?: string;\n  // eslint-disable-next-line react/no-unused-prop-types\n  forceShowSelf?: boolean;\n  customPeer?: CustomPeer;\n  mockPeer?: ApiPeer;\n  icon?: IconName;\n  title?: string;\n  isMinimized?: boolean;\n  canClose?: boolean;\n  isCloseNonDestructive?: boolean;\n  className?: string;\n  withPeerColors?: boolean;\n  withEmojiStatus?: boolean;\n  clickArg?: T;\n  onClick?: (arg: T) => void;\n  itemClassName?: string;\n};\n\ntype StateProps = {\n  peer?: ApiPeer;\n  isSavedMessages?: boolean;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst PeerChip = <T,>({\n  icon,\n  title,\n  isMinimized,\n  canClose,\n  isCloseNonDestructive,\n  clickArg,\n  peer,\n  mockPeer,\n  customPeer,\n  className,\n  isSavedMessages,\n  withPeerColors,\n  withEmojiStatus,\n  onClick,\n  itemClassName,\n}: OwnProps<T> & StateProps) => {\n  const lang = useOldLang();\n\n  const apiPeer = mockPeer || peer;\n  const anyPeer = customPeer || apiPeer;\n\n  const chat = apiPeer && isApiPeerChat(apiPeer) ? apiPeer : undefined;\n\n  let iconElement: TeactNode | undefined;\n  let titleElement: TeactNode | undefined;\n  let titleText: string | undefined;\n\n  if (icon && title) {\n    iconElement = (\n      <div className={styles.iconWrapper}>\n        <Icon name={icon} style={styles.icon} />\n      </div>\n    );\n\n    titleElement = title;\n  } else if (anyPeer) {\n    iconElement = (\n      <Avatar\n        className={styles.avatar}\n        peer={anyPeer}\n        size=\"small\"\n        isSavedMessages={isSavedMessages}\n      />\n    );\n\n    titleText = getPeerTitle(lang, anyPeer) || title;\n    titleElement = title || (\n      <FullNameTitle peer={anyPeer} isSavedMessages={isSavedMessages} withEmojiStatus={withEmojiStatus} />\n    );\n  }\n\n  const fullClassName = buildClassName(\n    styles.root,\n    (chat?.isForum || customPeer?.isAvatarSquare) && styles.squareAvatar,\n    isMinimized && styles.minimized,\n    canClose && styles.closeable,\n    isCloseNonDestructive && styles.nonDestructive,\n    !onClick && styles.notClickable,\n    withPeerColors && getPeerColorClass(customPeer || peer),\n    className,\n  );\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={() => onClick?.(clickArg!)}\n      title={isMinimized ? titleText : undefined}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {iconElement}\n      {!isMinimized && (\n        <div className={buildClassName(styles.name, itemClassName)} dir=\"auto\">\n          {titleElement}\n        </div>\n      )}\n      {canClose && (\n        <div className={styles.remove}>\n          <Icon name=\"close\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId, forceShowSelf }): StateProps => {\n    if (!peerId) {\n      return {};\n    }\n\n    const peer = selectPeer(global, peerId);\n    const user = selectUser(global, peerId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n\n    return {\n      peer,\n      isSavedMessages,\n    };\n  },\n)(PeerChip)) as typeof PeerChip;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nY2ggBsF\",\"withBadge\":\"RYtVQAjM\",\"badgeContainer\":\"dhigNjAq\",\"slide-in\":\"YfcP52Ym\",\"slideIn\":\"YfcP52Ym\",\"floating-badge-wrapper\":\"cOpfCGPh\",\"floatingBadgeWrapper\":\"cOpfCGPh\",\"rotate-in\":\"AgMPRKbT\",\"rotateIn\":\"AgMPRKbT\",\"floating-badge\":\"uNwBLNOy\",\"floatingBadge\":\"uNwBLNOy\",\"floating-badge-triangle\":\"qRwO7SZm\",\"floatingBadgeTriangle\":\"qRwO7SZm\",\"floating-badge-icon\":\"MJ7MTmxi\",\"floatingBadgeIcon\":\"MJ7MTmxi\",\"floating-badge-value\":\"MwzZt3Qo\",\"floatingBadgeValue\":\"MwzZt3Qo\",\"left\":\"_b5HgBXr\",\"right\":\"P6mch4bB\",\"progress\":\"sZZV0yoe\",\"fullProgress\":\"m8ie8IxL\",\"primary\":\"Zi0w7QJ3\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useResizeObserver from '../../hooks/useResizeObserver';\n\nimport Icon from './icons/Icon';\n\nimport styles from './PremiumProgress.module.scss';\n\ntype OwnProps = {\n  leftText?: string;\n  rightText?: string;\n  floatingBadgeIcon?: IconName;\n  floatingBadgeText?: string;\n  progress?: number;\n  isPrimary?: boolean;\n  className?: string;\n};\n\nconst PremiumProgress: FC<OwnProps> = ({\n  leftText,\n  rightText,\n  floatingBadgeText,\n  floatingBadgeIcon,\n  progress,\n  isPrimary,\n  className,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const floatingBadgeRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const parentContainerRef = useRef<HTMLDivElement>(null);\n\n  const [shiftX, setShiftX] = useState(0);\n  const [tailPosition, setTailPosition] = useState(0);\n\n  const updateBadgePosition = () => {\n    if (floatingBadgeRef.current && parentContainerRef.current && progress !== undefined) {\n      const badgeWidth = floatingBadgeRef.current.offsetWidth;\n      const parentWidth = parentContainerRef.current.offsetWidth;\n      const minShift = badgeWidth / 2;\n      const maxShift = parentWidth - badgeWidth / 2;\n      const currentShift = progress * parentWidth;\n      const safeShift = Math.max(minShift, Math.min(currentShift, maxShift));\n\n      setShiftX(safeShift / parentWidth);\n\n      let newTailPosition;\n      if (currentShift < minShift) {\n        newTailPosition = (progress * parentWidth) / (minShift * 2);\n      } else if (currentShift > maxShift) {\n        const progressMapped = (progress - (maxShift / parentWidth)) / (1 - maxShift / parentWidth);\n        newTailPosition = 0.5 + (progressMapped * 0.4);\n      } else {\n        newTailPosition = 0.5;\n      }\n      setTailPosition(newTailPosition);\n    }\n  };\n\n  useEffect(updateBadgePosition, [progress]);\n\n  useResizeObserver(parentContainerRef, updateBadgePosition);\n\n  const hasFloatingBadge = Boolean(floatingBadgeIcon || floatingBadgeText);\n  const isProgressFull = Boolean(progress) && progress > 0.99;\n\n  return (\n    <div\n      ref={parentContainerRef}\n      className={buildClassName(\n        styles.root,\n        hasFloatingBadge && styles.withBadge,\n        isPrimary && styles.primary,\n        className,\n      )}\n      style={buildStyle(\n        progress !== undefined && `--progress: ${progress}`,\n        tailPosition !== undefined && `--tail-position: ${tailPosition}`,\n        `--shift-x: ${shiftX}`,\n      )}\n    >\n      {hasFloatingBadge && (\n        <div className={styles.badgeContainer}>\n          <div className={styles.floatingBadgeWrapper}>\n            <div className={styles.floatingBadge} ref={floatingBadgeRef}>\n              {floatingBadgeIcon && <Icon name={floatingBadgeIcon} className={styles.floatingBadgeIcon} />}\n              {floatingBadgeText && (\n                <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                  {floatingBadgeText}\n                </div>\n              )}\n            </div>\n            <div className={styles.floatingBadgeTriangle}>\n              <svg width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\">\n                <path d=\"m 28,4 v 9 c 0.0089,7.283278 -3.302215,5.319646 -6.750951,8.589815 l -5.8284,5.82843 c -0.781,0.78105 -2.0474,0.78104 -2.8284,0 L 6.7638083,21.589815 C 2.8288652,17.959047 0.04527024,20.332086 0,13 V 4 C 0,4 0.00150581,0.97697493 3,1 5.3786658,1.018266 22.594519,0.9142007 25,1 c 2.992326,0.1067311 3,3 3,3 z\" fill=\"#7E85FF\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n      )}\n      <div className={styles.left}>\n        <span>{leftText}</span>\n      </div>\n      <div className={styles.right}>\n        <span>{rightText}</span>\n      </div>\n      <div className={buildClassName(styles.progress, isProgressFull && styles.fullProgress)}>\n        <div className={styles.left}>\n          <span>{leftText}</span>\n        </div>\n        <div className={styles.right}>\n          <span>{rightText}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumProgress);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AmQSvxpZ\",\"text\":\"pQW7dcwr\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ThemeKey } from '../../../types';\n\nimport { selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useUniqueId from '../../../hooks/useUniqueId';\n\nimport styles from './GiftRibbon.module.scss';\n\nconst COLORS = {\n  red: [['#FF5B54', '#ED1C26'], ['#653633', '#532224']],\n  blue: [['#6ED2FF', '#34A4FC'], ['#344F5A', '#152E42']],\n} as const;\ntype ColorKey = keyof typeof COLORS;\n\nconst COLOR_KEYS = new Set(Object.keys(COLORS) as ColorKey[]);\n\ntype OwnProps = {\n  color: ColorKey | string;\n  text: string;\n  className?: string;\n};\n\ntype StateProps = {\n  theme: ThemeKey;\n};\n\nconst GiftRibbon = ({\n  text, color, className, theme,\n}: OwnProps & StateProps) => {\n  const randomId = useUniqueId();\n  const validSvgRandomId = `svg-${randomId}`; // ID must start with a letter\n\n  const colorKey = COLOR_KEYS.has(color as ColorKey) ? color as ColorKey : undefined;\n\n  const isDarkTheme = theme === 'dark';\n\n  const gradientColor = colorKey ? COLORS[colorKey][isDarkTheme ? 1 : 0] : undefined;\n  const startColor = gradientColor ? gradientColor[0] : color;\n  const endColor = gradientColor ? gradientColor[1] : color;\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      <svg className={styles.ribbon} width=\"56\" height=\"56\" viewBox=\"0 0 56 56\" fill=\"none\">\n        <path d=\"M52.4851 26.4853L29.5145 3.51472C27.2641 1.26428 24.2119 0 21.0293 0H2.82824C1.04643 0 0.154103 2.15429 1.41403 3.41422L52.5856 54.5858C53.8455 55.8457 55.9998 54.9534 55.9998 53.1716V34.9706C55.9998 31.788 54.7355 28.7357 52.4851 26.4853Z\" fill={`url(#${validSvgRandomId})`} />\n        <defs>\n          <linearGradient id={validSvgRandomId} x1=\"27.9998\" y1=\"1\" x2=\"27.9998\" y2=\"55\" gradientUnits=\"userSpaceOnUse\">\n            <stop stop-color={startColor} />\n            <stop offset=\"1\" stop-color={endColor} />\n          </linearGradient>\n        </defs>\n      </svg>\n      <div className={styles.text}>{text}</div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      theme: selectTheme(global),\n    };\n  },\n)(GiftRibbon));\n","import type {\n  ApiFormattedText,\n  ApiStarGift,\n  ApiStarGiftAttribute,\n  ApiStarGiftAttributeBackdrop,\n  ApiStarGiftAttributeModel,\n  ApiStarGiftAttributeOriginalDetails,\n  ApiStarGiftAttributePattern,\n  ApiSticker,\n} from '../../../api/types';\n\nexport type GiftAttributes = {\n  model?: ApiStarGiftAttributeModel;\n  originalDetails?: ApiStarGiftAttributeOriginalDetails;\n  pattern?: ApiStarGiftAttributePattern;\n  backdrop?: ApiStarGiftAttributeBackdrop;\n};\n\nexport function getStickerFromGift(gift: ApiStarGift): ApiSticker | undefined {\n  if (gift.type === 'starGift') {\n    return gift.sticker;\n  }\n\n  return gift.attributes.find((attr): attr is ApiStarGiftAttributeModel => attr.type === 'model')?.sticker;\n}\n\nexport function getTotalGiftAvailability(gift: ApiStarGift): number | undefined {\n  if (gift.type === 'starGift') {\n    return gift.availabilityTotal;\n  }\n\n  return gift.totalCount;\n}\n\nexport function getGiftMessage(gift: ApiStarGift): ApiFormattedText | undefined {\n  if (gift.type !== 'starGiftUnique') return undefined;\n\n  return gift.attributes.find((attr): attr is ApiStarGiftAttributeOriginalDetails => attr.type === 'model')?.message;\n}\n\nexport function getGiftAttributes(gift: ApiStarGift): GiftAttributes | undefined {\n  if (gift.type !== 'starGiftUnique') return undefined;\n\n  return getGiftAttributesFromList(gift.attributes);\n}\n\nexport function getGiftAttributesFromList(attributes: ApiStarGiftAttribute[]) {\n  const model = attributes.find((attr): attr is ApiStarGiftAttributeModel => attr.type === 'model');\n  const backdrop = attributes.find((attr): attr is ApiStarGiftAttributeBackdrop => attr.type === 'backdrop');\n  const pattern = attributes.find((attr): attr is ApiStarGiftAttributePattern => attr.type === 'pattern');\n  const originalDetails = attributes.find((attr): attr is ApiStarGiftAttributeOriginalDetails => (\n    attr.type === 'originalDetails'\n  ));\n\n  return {\n    model,\n    originalDetails,\n    pattern,\n    backdrop,\n  };\n}\n","import { getGlobal } from '../../../global';\n\nimport { selectChat, selectChatLastMessage } from '../../../global/selectors';\nimport { orderBy } from '../../../util/iteratees';\n\nconst VERIFIED_PRIORITY_BASE = 3e9;\nconst PINNED_PRIORITY_BASE = 3e8;\n\nexport default function sortChatIds(\n  chatIds: string[],\n  shouldPrioritizeVerified = false,\n  priorityIds?: string[],\n  currentUserId?: string,\n) {\n  // Avoid calling sort on every global change\n  const global = getGlobal();\n\n  return orderBy(chatIds, (id) => {\n    if (id === currentUserId) {\n      return Infinity;\n    }\n\n    const chat = selectChat(global, id);\n    if (!chat) {\n      return 0;\n    }\n\n    let priority = 0;\n\n    const lastMessage = selectChatLastMessage(global, id);\n    if (lastMessage) {\n      priority += lastMessage.date;\n    }\n\n    if (shouldPrioritizeVerified && chat.isVerified) {\n      priority += VERIFIED_PRIORITY_BASE; // ~100 years in seconds\n    }\n\n    if (priorityIds && priorityIds.includes(id)) {\n      priority = Date.now() + PINNED_PRIORITY_BASE + (priorityIds.length - priorityIds.indexOf(id));\n    }\n\n    return priority;\n  }, 'desc');\n}\n","import React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport type { CustomPeerType, UniqueCustomPeer } from '../../../types';\n\nimport { DEBUG } from '../../../config';\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { getGroupStatus, getUserStatus, isUserOnline } from '../../../global/helpers';\nimport { getPeerTypeKey, isApiPeerChat } from '../../../global/helpers/peers';\nimport { selectPeer, selectUserStatus } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport Loading from '../../ui/Loading';\nimport Radio from '../../ui/Radio';\nimport Avatar from '../Avatar';\nimport FullNameTitle from '../FullNameTitle';\nimport Icon from '../icons/Icon';\nimport PeerChip from '../PeerChip';\nimport PickerItem from './PickerItem';\n\nimport styles from './PickerStyles.module.scss';\n\ntype SingleModeProps<CategoryType extends string> = {\n  allowMultiple?: false;\n  itemInputType?: 'radio';\n  selectedId?: string;\n  selectedIds?: never; // Help TS to throw an error if this is passed\n  selectedCategory?: CategoryType;\n  selectedCategories?: never;\n  onSelectedCategoryChange?: (category: CategoryType) => void;\n  onSelectedIdChange?: (id: string) => void;\n};\n\ntype MultipleModeProps<CategoryType extends string> = {\n  allowMultiple: true;\n  itemInputType: 'checkbox';\n  selectedId?: never;\n  selectedIds: string[];\n  lockedSelectedIds?: string[];\n  lockedUnselectedIds?: string[];\n  selectedCategory?: never;\n  selectedCategories?: CategoryType[];\n  onSelectedCategoriesChange?: (categories: CategoryType[]) => void;\n  onSelectedIdsChange?: (Ids: string[]) => void;\n};\n\ntype OwnProps<CategoryType extends string> = {\n  className?: string;\n  categories?: UniqueCustomPeer<CategoryType>[];\n  itemIds: string[];\n  lockedUnselectedSubtitle?: string;\n  filterValue?: string;\n  filterPlaceholder?: string;\n  categoryPlaceholderKey?: string;\n  notFoundText?: string;\n  searchInputId?: string;\n  itemClassName?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  isSearchable?: boolean;\n  forceShowSelf?: boolean;\n  isViewOnly?: boolean;\n  withStatus?: boolean;\n  withPeerTypes?: boolean;\n  withPeerUsernames?: boolean;\n  withDefaultPadding?: boolean;\n  onFilterChange?: (value: string) => void;\n  onDisabledClick?: (id: string, isSelected: boolean) => void;\n  onLoadMore?: () => void;\n} & (SingleModeProps<CategoryType> | MultipleModeProps<CategoryType>);\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\nconst ITEM_CLASS_NAME = 'PeerPickerItem';\n\nconst PeerPicker = <CategoryType extends string = CustomPeerType>({\n  className,\n  categories,\n  itemIds,\n  categoryPlaceholderKey,\n  filterValue,\n  filterPlaceholder,\n  notFoundText,\n  searchInputId,\n  itemClassName,\n  isLoading,\n  noScrollRestore,\n  isSearchable,\n  lockedUnselectedSubtitle,\n  forceShowSelf,\n  isViewOnly,\n  itemInputType,\n  withStatus,\n  withPeerTypes,\n  withPeerUsernames,\n  withDefaultPadding,\n  onFilterChange,\n  onDisabledClick,\n  onLoadMore,\n  ...optionalProps\n}: OwnProps<CategoryType>) => {\n  const lang = useOldLang();\n\n  const allowMultiple = optionalProps.allowMultiple;\n  const lockedSelectedIds = allowMultiple ? optionalProps.lockedSelectedIds : undefined;\n  const lockedUnselectedIds = allowMultiple ? optionalProps.lockedUnselectedIds : undefined;\n  const selectedCategories = useMemo(() => {\n    if (allowMultiple) {\n      return optionalProps.selectedCategories;\n    }\n\n    return optionalProps.selectedCategory ? [optionalProps.selectedCategory] : MEMO_EMPTY_ARRAY;\n  }, [allowMultiple, optionalProps.selectedCategory, optionalProps.selectedCategories]);\n\n  const selectedIds = useMemo(() => {\n    if (allowMultiple) {\n      return optionalProps.selectedIds;\n    }\n\n    return optionalProps.selectedId ? [optionalProps.selectedId] : MEMO_EMPTY_ARRAY;\n  }, [allowMultiple, optionalProps.selectedId, optionalProps.selectedIds]);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const shouldMinimize = selectedIds.length > MAX_FULL_ITEMS;\n\n  useEffect(() => {\n    if (!isSearchable) return undefined;\n    const timeoutId = window.setTimeout(() => {\n      requestMeasure(() => {\n        inputRef.current?.focus();\n      });\n    }, FOCUS_DELAY_MS);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [isSearchable]);\n\n  const lockedSelectedIdsSet = useMemo(() => new Set(lockedSelectedIds), [lockedSelectedIds]);\n  const lockedUnselectedIdsSet = useMemo(() => new Set(lockedUnselectedIds), [lockedUnselectedIds]);\n\n  const unlockedSelectedIds = useMemo(() => {\n    return selectedIds.filter((id) => !lockedSelectedIdsSet.has(id));\n  }, [lockedSelectedIdsSet, selectedIds]);\n\n  const categoriesByType = useMemo(() => {\n    if (!categories) return {};\n    return buildCollectionByKey(categories, 'type');\n  }, [categories]);\n\n  const sortedItemIds = useMemo(() => {\n    if (filterValue) {\n      return itemIds;\n    }\n\n    const lockedSelectedBucket: string[] = [];\n    const unlockedBucket: string[] = [];\n    const lockedUnselectableBucket: string[] = [];\n\n    itemIds.forEach((id) => {\n      if (lockedSelectedIdsSet.has(id)) {\n        lockedSelectedBucket.push(id);\n      } else if (lockedUnselectedIdsSet.has(id)) {\n        lockedUnselectableBucket.push(id);\n      } else {\n        unlockedBucket.push(id);\n      }\n    });\n\n    return lockedSelectedBucket.concat(unlockedBucket, lockedUnselectableBucket);\n  }, [filterValue, itemIds, lockedSelectedIdsSet, lockedUnselectedIdsSet]);\n\n  const handleItemClick = useLastCallback((id: string) => {\n    if (lockedSelectedIdsSet.has(id)) {\n      onDisabledClick?.(id, true);\n      return;\n    }\n\n    if (lockedUnselectedIdsSet.has(id)) {\n      onDisabledClick?.(id, false);\n      return;\n    }\n\n    if (allowMultiple && categoriesByType[id]) {\n      const categoryType = categoriesByType[id].type;\n      const newSelectedCategories = selectedCategories?.slice() || [];\n      if (newSelectedCategories.includes(categoryType)) {\n        newSelectedCategories.splice(newSelectedCategories.indexOf(categoryType), 1);\n      } else {\n        newSelectedCategories.push(categoryType);\n      }\n      optionalProps.onSelectedCategoriesChange?.(newSelectedCategories);\n\n      return;\n    }\n\n    if (allowMultiple) {\n      const newSelectedIds = selectedIds.slice();\n      if (newSelectedIds.includes(id)) {\n        newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n      } else {\n        newSelectedIds.push(id);\n      }\n      optionalProps.onSelectedIdsChange?.(newSelectedIds);\n\n      return;\n    }\n\n    if (categoriesByType[id]) {\n      optionalProps.onSelectedCategoryChange?.(categoriesByType[id].type);\n      return;\n    }\n\n    optionalProps.onSelectedIdChange?.(id);\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange?.(value);\n  });\n\n  const [viewportIds, getMore] = useInfiniteScroll(\n    onLoadMore, sortedItemIds, Boolean(filterValue),\n  );\n\n  const renderItem = useCallback((id: string, isCategory?: boolean) => {\n    const global = getGlobal();\n    const category = isCategory ? categoriesByType[id] : undefined;\n    const peer = !isCategory ? selectPeer(global, id) : undefined;\n\n    const peerOrCategory = peer || category;\n    if (!peerOrCategory) {\n      if (DEBUG) return <div key={id}>No peer or category with ID {id}</div>;\n      return undefined;\n    }\n\n    const isSelf = peer && !isApiPeerChat(peer) ? (peer.isSelf && !forceShowSelf) : undefined;\n\n    const isAlwaysUnselected = lockedUnselectedIdsSet.has(id);\n    const isAlwaysSelected = lockedSelectedIdsSet.has(id);\n    const isLocked = isAlwaysUnselected || isAlwaysSelected;\n    const isChecked = category ? selectedCategories?.includes(category.type) : selectedIds.includes(id);\n\n    function getInputElement() {\n      if (isLocked) return <Icon name=\"lock-badge\" />;\n      if (itemInputType === 'radio') {\n        return <Radio checked={isChecked} disabled={isLocked} onlyInput />;\n      }\n      if (itemInputType === 'checkbox') {\n        return <Checkbox checked={isChecked} disabled={isLocked} onlyInput />;\n      }\n      return undefined;\n    }\n\n    function getSubtitle() {\n      if (isAlwaysUnselected) return [lockedUnselectedSubtitle];\n      if (!peer) return undefined;\n\n      if (withPeerUsernames) {\n        const username = peer.usernames?.[0]?.username;\n        if (username) {\n          return [`@${username}`];\n        }\n      }\n\n      if (withStatus) {\n        if (isApiPeerChat(peer)) {\n          return [getGroupStatus(lang, peer)];\n        }\n\n        const userStatus = selectUserStatus(global, peer.id);\n        return [\n          getUserStatus(lang, peer, userStatus),\n          buildClassName(isUserOnline(peer, userStatus, true) && styles.onlineStatus),\n        ];\n      }\n\n      if (withPeerTypes) {\n        const langKey = getPeerTypeKey(peer);\n        return langKey && [lang(langKey)];\n      }\n\n      return undefined;\n    }\n\n    const [subtitle, subtitleClassName] = getSubtitle() || [];\n\n    return (\n      <PickerItem\n        key={id}\n        className={buildClassName(ITEM_CLASS_NAME, itemClassName)}\n        title={<FullNameTitle peer={peerOrCategory} />}\n        avatarElement={(\n          <Avatar\n            peer={peer || category}\n            isSavedMessages={isSelf}\n            size=\"medium\"\n          />\n        )}\n        subtitle={subtitle}\n        subtitleClassName={subtitleClassName}\n        disabled={isLocked}\n        inactive={isViewOnly}\n        ripple\n        inputElement={getInputElement()}\n        inputPosition=\"end\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleItemClick(id)}\n        // eslint-disable-next-line react/jsx-no-bind\n        onDisabledClick={onDisabledClick && (() => onDisabledClick(id, isAlwaysSelected))}\n      />\n    );\n  }, [\n    categoriesByType, forceShowSelf, isViewOnly, itemClassName, itemInputType, lang, lockedSelectedIdsSet,\n    lockedUnselectedIdsSet, lockedUnselectedSubtitle, onDisabledClick, selectedCategories, selectedIds,\n    withPeerTypes, withStatus, withPeerUsernames,\n  ]);\n\n  const beforeChildren = useMemo(() => {\n    if (!categories?.length) return undefined;\n    return (\n      <div key=\"categories\">\n        {categoryPlaceholderKey && <div className={styles.pickerCategoryTitle}>{lang(categoryPlaceholderKey)}</div>}\n        {categories?.map((category) => renderItem(category.type, true))}\n        <div className={styles.pickerCategoryTitle}>{lang('FilterChats')}</div>\n      </div>\n    );\n  }, [categories, categoryPlaceholderKey, lang, renderItem]);\n\n  return (\n    <div className={buildClassName(styles.container, className)}>\n      {isSearchable && (\n        <div className={buildClassName(styles.header, 'custom-scroll')} dir={lang.isRtl ? 'rtl' : undefined}>\n          {selectedCategories?.map((category) => (\n            <PeerChip\n              className={styles.peerChip}\n              customPeer={categoriesByType[category]}\n              onClick={handleItemClick}\n              clickArg={category}\n              canClose\n            />\n          ))}\n          {lockedSelectedIds?.map((id, i) => (\n            <PeerChip\n              className={styles.peerChip}\n              peerId={id}\n              isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n              forceShowSelf={forceShowSelf}\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          {unlockedSelectedIds.map((id, i) => (\n            <PeerChip\n              className={styles.peerChip}\n              peerId={id}\n              isMinimized={\n                shouldMinimize && i + (lockedSelectedIds?.length || 0) < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT\n              }\n              canClose\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          <InputText\n            id={searchInputId}\n            ref={inputRef}\n            value={filterValue}\n            onChange={handleFilterChange}\n            placeholder={filterPlaceholder || lang('SelectChat')}\n          />\n        </div>\n      )}\n\n      {viewportIds?.length ? (\n        <InfiniteScroll\n          className={buildClassName(styles.pickerList, withDefaultPadding && styles.padded, 'custom-scroll')}\n          items={viewportIds}\n          itemSelector={`.${ITEM_CLASS_NAME}`}\n          beforeChildren={beforeChildren}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportIds.map((id) => renderItem(id))}\n        </InfiniteScroll>\n      ) : !isLoading && viewportIds && !viewportIds.length ? (\n        <p className={styles.noResults}>{notFoundText || 'Sorry, nothing found.'}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(PeerPicker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"OHkx_W75\",\"clickable\":\"VUSwo4t5\",\"separator\":\"P53DrbWA\",\"disabled\":\"tvZeVJPh\",\"title\":\"JSSC0N8V\",\"subtitle\":\"OYmzCSp2\",\"withAvatar\":\"dMT9byM6\",\"multiline\":\"neXqB2_A\",\"input\":\"kmjqObdP\",\"startInput\":\"F0Hv3EQm\",\"endInput\":\"iqGhSQGm\",\"avatarElement\":\"dnAaRPCo\"};","import React, { type TeactNode } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_IOS } from '../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport RippleEffect from '../../ui/RippleEffect';\n\nimport styles from './PickerItem.module.scss';\n\ntype OwnProps = {\n  title: TeactNode;\n  subtitle?: TeactNode;\n  avatarElement?: TeactNode;\n  inputElement?: TeactNode;\n  inputPosition?: 'start' | 'end';\n  disabled?: boolean;\n  inactive?: boolean;\n  ripple?: boolean;\n  className?: string;\n  titleClassName?: string;\n  subtitleClassName?: string;\n  style?: string;\n  onClick?: NoneToVoidFunction;\n  onDisabledClick?: NoneToVoidFunction;\n};\n\nconst PickerItem = ({\n  title,\n  subtitle,\n  avatarElement,\n  inputElement,\n  inputPosition = 'start',\n  disabled,\n  inactive,\n  ripple,\n  className,\n  titleClassName,\n  subtitleClassName,\n  style,\n  onClick,\n  onDisabledClick,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const isClickable = !inactive && !disabled;\n  const handleClick = useLastCallback(() => {\n    if (inactive) return;\n\n    if (disabled) {\n      onDisabledClick?.();\n      return;\n    }\n\n    onClick?.();\n  });\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        subtitle && styles.multiline,\n        disabled && styles.disabled,\n        isClickable && styles.clickable,\n        avatarElement && styles.withAvatar,\n        className,\n      )}\n      onClick={handleClick}\n      style={style}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      role={isClickable ? 'button' : undefined}\n      // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex\n      tabIndex={isClickable ? 0 : undefined}\n    >\n      {!disabled && !inactive && ripple && <RippleEffect />}\n      {inputElement && (\n        <div className={buildClassName(\n          styles.input,\n          inputPosition === 'end' ? styles.endInput : styles.startInput,\n        )}\n        >\n          {inputElement}\n        </div>\n      )}\n      {avatarElement && (\n        <div className={styles.avatarElement}>\n          {avatarElement}\n        </div>\n      )}\n      <div className={buildClassName(styles.title, titleClassName)}>\n        {title}\n      </div>\n      {subtitle && (\n        <div className={buildClassName(styles.subtitle, subtitleClassName)}>\n          {subtitle}\n        </div>\n      )}\n      {!inputElement && IS_IOS && (\n        <div className={styles.separator} />\n      )}\n    </div>\n  );\n};\n\nexport default PickerItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Af3tYFMg\",\"canvas\":\"GbpiDSS_\"};","import React, {\n  memo, useEffect, useMemo, useRef, useSignal, useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { preloadImage } from '../../../util/files';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport styles from './RadialPatternBackground.module.scss';\n\ntype OwnProps = {\n  backgroundColors: string[];\n  patternColor?: string;\n  patternIcon?: ApiSticker;\n  className?: string;\n  clearBottomSector?: boolean;\n};\n\nconst RINGS = 3;\nconst BASE_RING_ITEM_COUNT = 8;\nconst RING_INCREMENT = 0.5;\nconst CENTER_EMPTINESS = 0.05;\nconst MAX_RADIUS = 0.4;\nconst BASE_ICON_SIZE = 20;\n\nconst MIN_SIZE = 250;\n\nconst RadialPatternBackground = ({\n  backgroundColors,\n  patternColor,\n  patternIcon,\n  clearBottomSector,\n  className,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const [getContainerSize, setContainerSize] = useSignal({ width: 0, height: 0 });\n\n  const dpr = useDevicePixelRatio();\n\n  const [emojiImage, setEmojiImage] = useState<HTMLImageElement | undefined>();\n\n  const previewMediaHash = patternIcon && getStickerMediaHash(patternIcon, 'preview');\n  const previewUrl = useMedia(previewMediaHash);\n\n  useEffect(() => {\n    if (!previewUrl) return;\n    preloadImage(previewUrl).then(setEmojiImage);\n  }, [previewUrl]);\n\n  const patternPositions = useMemo(() => {\n    const coordinates: { x: number; y: number; sizeFactor: number }[] = [];\n    for (let ring = 1; ring <= RINGS; ring++) {\n      const ringItemCount = Math.floor(BASE_RING_ITEM_COUNT * (1 + (ring - 1) * RING_INCREMENT));\n      const ringProgress = ring / RINGS;\n      const ringRadius = CENTER_EMPTINESS + (MAX_RADIUS - CENTER_EMPTINESS) * ringProgress;\n\n      const angleShift = ring % 2 === 0 ? Math.PI / ringItemCount : 0;\n\n      for (let i = 0; i < ringItemCount; i++) {\n        const angle = (i / ringItemCount) * Math.PI * 2 + angleShift;\n\n        if (clearBottomSector && angle > Math.PI * 0.45 && angle < Math.PI * 0.55) {\n          continue;\n        }\n\n        // Slightly oval\n        const xOffset = ringRadius * 1.71 * Math.cos(angle);\n        const yOffset = ringRadius * Math.sin(angle);\n\n        const x = 0.5 + xOffset;\n        const y = 0.5 + yOffset;\n\n        const sizeFactor = 1.4 - ringProgress * Math.random();\n\n        coordinates.push({\n          x, y, sizeFactor,\n        });\n      }\n    }\n    return coordinates;\n  }, [clearBottomSector]);\n\n  useResizeObserver(containerRef, (entry) => {\n    setContainerSize({\n      width: entry.contentRect.width,\n      height: entry.contentRect.height,\n    });\n  });\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (container) {\n      setContainerSize({\n        width: container.clientWidth,\n        height: container.clientHeight,\n      });\n    }\n  }, [setContainerSize]);\n\n  const draw = useLastCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas || !emojiImage) return;\n    const ctx = canvas.getContext('2d')!;\n    const { width, height } = canvas;\n    if (!width || !height) return;\n\n    ctx.save();\n    patternPositions.forEach(({\n      x, y, sizeFactor,\n    }) => {\n      const centerShift = (width - Math.max(width, MIN_SIZE * dpr)) / 2; // Shift coords if canvas is smaller than `MIN_SIZE`\n      const renderX = x * Math.max(width, MIN_SIZE * dpr) + centerShift;\n      const renderY = y * Math.max(height, MIN_SIZE * dpr) + centerShift;\n\n      const size = BASE_ICON_SIZE * dpr * sizeFactor * (centerShift ? 0.8 : 1);\n\n      ctx.drawImage(emojiImage, renderX - size / 2, renderY - size / 2, size, size);\n    });\n    ctx.restore();\n\n    if (patternColor) {\n      ctx.save();\n      ctx.fillStyle = patternColor;\n      ctx.globalCompositeOperation = 'source-atop';\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    const radialGradient = ctx.createRadialGradient(width / 2, height / 2, 0, width / 2, height / 2, width / 2);\n    radialGradient.addColorStop(0, '#FFFFFF77');\n    radialGradient.addColorStop(1, '#FFFFFF');\n\n    // Alpha mask\n    ctx.save();\n    ctx.globalCompositeOperation = 'destination-out';\n    ctx.fillStyle = radialGradient;\n    ctx.fillRect(0, 0, width, height);\n    ctx.restore();\n  });\n\n  useEffect(() => {\n    draw();\n  }, [emojiImage]);\n\n  useEffect(() => {\n    const { width, height } = getContainerSize();\n    const canvas = canvasRef.current!;\n    if (!width || !height) {\n      return;\n    }\n\n    const maxSide = Math.max(width, height);\n    requestMutation(() => {\n      canvas.width = maxSide * dpr;\n      canvas.height = maxSide * dpr;\n\n      draw();\n    });\n  }, [getContainerSize, dpr]);\n\n  return (\n    <div\n      ref={containerRef}\n      className={buildClassName(styles.root, className)}\n      style={buildStyle(\n        `--_bg-1: ${backgroundColors[0]}`,\n        `--_bg-2: ${backgroundColors[1] || backgroundColors[0]}`,\n      )}\n    >\n      <canvas className={styles.canvas} ref={canvasRef} />\n    </div>\n  );\n};\n\nexport default memo(RadialPatternBackground);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"aInga6VW\",\"particle\":\"PZAuNVZH\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiEmojiStatusType, ApiReactionCustomEmoji } from '../../../api/types';\n\nimport { getStickerHashById } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport CustomEmoji from '../CustomEmoji';\n\nimport styles from './CustomEmojiEffect.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiEmojiStatusType;\n  className?: string;\n  isLottie?: boolean;\n  particleSize?: number;\n  onEnded?: NoneToVoidFunction;\n};\n\nconst EFFECT_AMOUNT = 7;\n\nconst CustomEmojiEffect: FC<OwnProps> = ({\n  reaction,\n  isLottie,\n  className,\n  particleSize,\n  onEnded,\n}) => {\n  const stickerHash = getStickerHashById(reaction.documentId, true);\n\n  const previewMediaData = useMedia(!isLottie ? stickerHash : undefined);\n\n  const paths: string[] = useMemo(() => {\n    if (!IS_OFFSET_PATH_SUPPORTED) return [];\n    return Array.from({ length: EFFECT_AMOUNT }).map(() => generateRandomDropPath(particleSize));\n  }, [particleSize]);\n\n  if (!previewMediaData && !isLottie) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, className)}\n      style={buildStyle(Boolean(particleSize) && `--particle-size: ${particleSize}px`)}\n    >\n      {paths.map((path, i) => {\n        const style = `--offset-path: path('${path}');`;\n        if (isLottie) {\n          return (\n            <CustomEmoji\n              documentId={reaction.documentId}\n              className={styles.particle}\n              style={style}\n              withSharedAnimation\n              size={particleSize}\n              onAnimationEnd={i === 0 ? onEnded : undefined}\n            />\n          );\n        }\n\n        return (\n          <img\n            src={previewMediaData}\n            alt=\"\"\n            className={styles.particle}\n            style={style}\n            draggable={false}\n            onAnimationEnd={i === 0 ? onEnded : undefined}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiEffect);\n\nfunction generateRandomDropPath(particleSize = 20) {\n  const x = (particleSize / 2 + Math.random() * particleSize * 3) * (Math.random() > 0.5 ? 1 : -1);\n  const y = particleSize + Math.random() * particleSize * 4;\n\n  return `M 0 0 C 0 0 ${x} ${-y - particleSize} ${x} ${y}`;\n}\n","import React, {\n  memo, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n  ApiStickerSet,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { getStickerHashById, isSameReaction } from '../../../global/helpers';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { roundToNearestEven } from '../../../util/math';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../AnimatedSticker';\nimport CustomEmoji from '../CustomEmoji';\nimport CustomEmojiEffect from './CustomEmojiEffect';\nimport ReactionStaticEmoji from './ReactionStaticEmoji';\n\nimport styles from './ReactionAnimatedEmoji.module.scss';\n\ntype OwnProps = {\n  containerId: string;\n  reaction: ApiReaction;\n  className?: string;\n  size?: number;\n  effectSize?: number;\n  withEffectOnly?: boolean;\n  shouldPause?: boolean;\n  shouldLoop?: boolean;\n  loopLimit?: number;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  activeReactions?: ApiReaction[];\n  availableReactions?: ApiAvailableReaction[];\n  genericEffects?: ApiStickerSet;\n  withEffects?: boolean;\n};\n\nconst ICON_SIZE = 1.5 * REM;\nconst CENTER_ICON_MULTIPLIER = 1.9;\nconst EFFECT_SIZE = 6.5 * REM;\nconst CUSTOM_EMOJI_EFFECT_MULTIPLIER = 0.5;\nconst MIN_PARTICLE_SIZE = REM;\n\nconst ReactionAnimatedEmoji = ({\n  containerId,\n  reaction,\n  className,\n  size = ICON_SIZE,\n  effectSize = EFFECT_SIZE,\n  activeReactions,\n  availableReactions,\n  genericEffects,\n  withEffects,\n  withEffectOnly,\n  shouldPause,\n  shouldLoop,\n  loopLimit,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { stopActiveReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isCustom = reaction.type === 'custom';\n\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((r) => isSameReaction(r.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const centerIconId = availableReaction?.centerIcon?.id;\n\n  const { customEmoji } = useCustomEmoji(isCustom ? reaction.documentId : undefined);\n\n  const assignedEffectId = useMemo(() => {\n    if (!isCustom) return availableReaction?.aroundAnimation?.id;\n\n    if (!customEmoji) return undefined;\n    const assignedId = availableReactions?.find((available) => available.reaction.emoticon === customEmoji.emoji)\n      ?.aroundAnimation?.id;\n    return assignedId;\n  }, [availableReaction, availableReactions, customEmoji, isCustom]);\n\n  const effectId = useMemo(() => {\n    if (assignedEffectId) {\n      return assignedEffectId;\n    }\n\n    if (!genericEffects?.stickers) {\n      return undefined;\n    }\n\n    const { stickers } = genericEffects;\n    const randomIndex = Math.floor(Math.random() * stickers.length);\n\n    return stickers[randomIndex].id;\n  }, [assignedEffectId, genericEffects]);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const mediaHashCenterIcon = centerIconId && getStickerHashById(centerIconId);\n  const mediaHashEffect = effectId && getStickerHashById(effectId);\n\n  const mediaDataCenterIcon = useMedia(mediaHashCenterIcon);\n  const mediaDataEffect = useMedia(mediaHashEffect);\n\n  const activeReaction = useMemo(() => (\n    activeReactions?.find((active) => isSameReaction(active, reaction))\n  ), [activeReactions, reaction]);\n\n  const shouldPlayEffect = Boolean(\n    withEffects && activeReaction && (isCustom || mediaDataCenterIcon) && mediaDataEffect,\n  );\n  const shouldPlayCenter = isIntersecting && ((shouldPlayEffect && !withEffectOnly) || shouldLoop);\n  const {\n    shouldRender: shouldRenderEffect,\n    transitionClassNames: animationClassNames,\n  } = useShowTransitionDeprecated(shouldPlayEffect, undefined, true, 'slow');\n  const {\n    shouldRender: shouldRenderCenter,\n    transitionClassNames: centerAnimationClassNames,\n  } = useShowTransitionDeprecated(shouldPlayCenter, undefined, true, 'slow');\n\n  const handleEnded = useLastCallback(() => {\n    stopActiveReaction({ containerId, reaction });\n  });\n\n  const [isAnimationLoaded, markAnimationLoaded, unmarkAnimationLoaded] = useFlag();\n  const shouldShowStatic = !isCustom && (!shouldPlayCenter || !isAnimationLoaded);\n  const {\n    shouldRender: shouldRenderStatic,\n    transitionClassNames: staticClassNames,\n  } = useShowTransitionDeprecated(shouldShowStatic, undefined, true);\n\n  const rootClassName = buildClassName(\n    styles.root,\n    shouldRenderEffect && styles.animating,\n    withEffectOnly && styles.withEffectOnly,\n    className,\n  );\n\n  return (\n    <div className={rootClassName} ref={ref}>\n      {!withEffectOnly && shouldRenderStatic && (\n        <ReactionStaticEmoji\n          className={staticClassNames}\n          reaction={reaction}\n          availableReactions={availableReactions}\n          size={size}\n          observeIntersection={observeIntersection}\n        />\n      )}\n      {!withEffectOnly && isCustom && (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          className={styles.customEmoji}\n          size={size}\n          noPlay={shouldPause}\n          noVideoOnMobile\n          loopLimit={loopLimit}\n          observeIntersectionForPlaying={observeIntersection}\n          forceAlways\n        />\n      )}\n      {shouldRenderCenter && !isCustom && (\n        <AnimatedSticker\n          key={`${centerIconId}-${size}`}\n          className={buildClassName(styles.animatedIcon, centerAnimationClassNames)}\n          size={roundToNearestEven(size * CENTER_ICON_MULTIPLIER)}\n          tgsUrl={mediaDataCenterIcon}\n          play={isIntersecting && !shouldPause}\n          noLoop={!shouldLoop}\n          onLoad={markAnimationLoaded}\n          onEnded={unmarkAnimationLoaded}\n          forceAlways\n        />\n      )}\n      {shouldRenderEffect && (\n        <>\n          <AnimatedSticker\n            key={`${effectId}-${effectSize}`}\n            className={buildClassName(styles.effect, animationClassNames)}\n            size={effectSize}\n            tgsUrl={mediaDataEffect}\n            play={isIntersecting}\n            noLoop\n            onEnded={handleEnded}\n            forceAlways\n          />\n          {isCustom && !assignedEffectId && isIntersecting && (\n            <CustomEmojiEffect\n              reaction={reaction}\n              className={animationClassNames}\n              particleSize={Math.max(size * CUSTOM_EMOJI_EFFECT_MULTIPLIER, MIN_PARTICLE_SIZE)}\n              onEnded={handleEnded}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { containerId }) => {\n    const { genericEmojiEffects, reactions } = global;\n    const { activeReactions } = selectTabState(global);\n\n    const withEffects = selectPerformanceSettingsValue(global, 'reactionEffects');\n\n    return {\n      activeReactions: activeReactions?.[containerId],\n      availableReactions: reactions.availableReactions,\n      genericEffects: genericEmojiEffects,\n      withEffects,\n    };\n  },\n)(ReactionAnimatedEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\n\nimport CustomEmoji from '../CustomEmoji';\nimport Icon from '../icons/Icon';\n\nimport './ReactionStaticEmoji.scss';\n\nimport blankUrl from '../../../assets/blank.png';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  size?: number;\n  withIconHeart?: boolean;\n  observeIntersection?: ObserveFn;\n};\n\nconst ReactionStaticEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  className,\n  size,\n  withIconHeart,\n  observeIntersection,\n}) => {\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const staticIconId = availableReaction?.staticIcon?.id;\n  const mediaHash = staticIconId ? `document${staticIconId}` : undefined;\n  const mediaData = useMedia(mediaHash);\n\n  const transitionClassNames = useMediaTransitionDeprecated(mediaData);\n\n  const shouldApplySizeFix = reaction.type === 'emoji' && reaction.emoticon === '🦄';\n  const shouldReplaceWithHeartIcon = withIconHeart && reaction.type === 'emoji' && reaction.emoticon === '❤';\n\n  if (reaction.type === 'custom') {\n    return (\n      <CustomEmoji\n        documentId={reaction.documentId}\n        className={buildClassName('ReactionStaticEmoji', className)}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    );\n  }\n\n  if (shouldReplaceWithHeartIcon) {\n    return (\n      <Icon name=\"heart\" className=\"ReactionStaticEmoji\" style={`font-size: ${size}px; width: ${size}px`} />\n    );\n  }\n\n  return (\n    <img\n      className={buildClassName(\n        'ReactionStaticEmoji',\n        shouldApplySizeFix && 'with-unicorn-fix',\n        transitionClassNames,\n        className,\n      )}\n      style={size ? `width: ${size}px; height: ${size}px` : undefined}\n      src={mediaData || blankUrl}\n      alt={availableReaction?.title}\n      draggable={false}\n    />\n  );\n};\n\nexport default memo(ReactionStaticEmoji);\n","export enum RichInputKeyboardPriority {\n  Composer = 10,\n  Tool = 1,\n  Default = 0,\n}\n\nexport type RichInputKeyboardListener = {\n  priority: RichInputKeyboardPriority;\n  onKeydown: (event: KeyboardEvent) => boolean;\n};\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport type { RichInputCtx } from './useRichEditable';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\n\ntype OwnProps = {\n  className?: string;\n  disableEdit?: boolean;\n  placeholder?: string;\n  tabIndex?: number;\n  detached?: boolean;\n  richInputCtx: RichInputCtx;\n};\n\nlet nextAttach: (() => void) | undefined;\n\nconst RichEditableAttachment: FC<OwnProps> = ({\n  richInputCtx,\n  className,\n  placeholder,\n  tabIndex,\n  disableEdit,\n  detached,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const attachmentRef = useRef<HTMLDivElement>(null);\n  const customColor = useDynamicColorListener(attachmentRef, detached);\n  const editable = richInputCtx.editable;\n\n  useEffect(() => {\n    if (!attachmentRef.current || detached) return () => {};\n\n    const attEditable = richInputCtx.editable;\n    const target = attachmentRef.current;\n\n    if (attEditable.isAttached()) {\n      nextAttach = () => {\n        attEditable.attachTo(target);\n      };\n    } else {\n      attEditable.attachTo(target);\n    }\n\n    return () => {\n      attEditable.detachFrom(target);\n      nextAttach?.();\n      nextAttach = undefined;\n    };\n  }, [attachmentRef, richInputCtx.editable, detached]);\n\n  useEffect(() => {\n    if (!attachmentRef.current || !editable.isAttached(attachmentRef.current)) return;\n\n    requestMutation(() => {\n      editable.applyRootProperties({\n        className,\n        disableEdit,\n        placeholder,\n        tabIndex,\n      });\n    });\n  }, [editable, attachmentRef, className, disableEdit, placeholder, tabIndex]);\n\n  useEffect(() => {\n    if (!attachmentRef.current || !editable.isAttached(attachmentRef.current)) return;\n\n    requestMutation(() => {\n      editable.emojiRenderer.setCustomColor(customColor ?? '');\n    });\n  }, [editable, attachmentRef, customColor]);\n\n  return <div ref={attachmentRef} />;\n};\n\nexport default memo(RichEditableAttachment);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './TextFormatter';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst TextFormatterAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const TextFormatter = useModuleLoader(Bundles.Extra, 'TextFormatter', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return TextFormatter ? <TextFormatter {...props} /> : undefined;\n};\n\nexport default TextFormatterAsync;\n","// Improvements, utils and workarounds for execCommand api\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\n\nconst EX_FIX = 'for-exec-command-fix';\n\nconst style = document.createElement('style');\ndocument.head.appendChild(style); // must append before you can access sheet property\n\nstyle.innerHTML = `\n.${EX_FIX} * {\n  display: inline  !important; // Required for insertHTML to work properly\n}\n\n.${EX_FIX} b {\n  font-weight: bold !important; // Required for \"bold\" command to unbold\n}\n`;\n\nexport function betterExecCommand(\n  input: HTMLElement | undefined,\n  range: Range | undefined,\n  command: string,\n  value?: string,\n) {\n  const inpArr = [];\n  if (input) inpArr.push(input);\n\n  requestMutation(() => {\n    if (range) {\n      window.getSelection()?.removeAllRanges();\n      window.getSelection()?.addRange(range);\n    }\n    input?.classList.add('for-exec-command-fix');\n    document.execCommand('styleWithCss', false, 'false');\n    document.execCommand(command, false, value);\n    input?.classList.remove('for-exec-command-fix');\n  });\n}\n","// Utility for cleaning html code from Google Docs.\n// Original source from DocsSoap:\n// https://www.npmjs.com/package/docs-soap\n\nconst GDOCS_ELEMENT_ID_REGEXP = /id=\"docs-internal-guid/i;\n\nconst GDOCS_STYLES = {\n  BOLD: '700',\n  ITALIC: 'italic',\n  UNDERLINE: 'underline',\n  STRIKETHROUGH: 'line-through',\n  SUPERSCRIPT: 'super',\n  SUBSCRIPT: 'sub',\n};\n\nconst ELEMENTS = {\n  ANCHOR: 'a',\n  BOLD: 'strong',\n  ITALIC: 'em',\n  UNDERLINE: 'u',\n  BLOCKQUOTE: 'blockquote',\n  STRIKETHROUGH: 'del',\n  SUPERSCRIPT: 'sup',\n  SUBSCRIPT: 'sub',\n};\n\nconst headers = [\n  'H1',\n  'H2',\n  'H3',\n  'H4',\n  'H5',\n  'H6',\n];\n\nfunction parseHtml(html: string): HTMLElement {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(html, 'text/html');\n\n  return doc.body;\n}\n\nfunction wrapNodeAnchor(node: Node, href: string): HTMLAnchorElement {\n  const anchor = document.createElement(ELEMENTS.ANCHOR) as HTMLAnchorElement;\n  anchor.href = href;\n  anchor.appendChild(node.cloneNode(true));\n\n  return anchor;\n}\n\nfunction wrapNodeInline(node: Node, style: string): Node {\n  const el = document.createElement(style);\n  el.appendChild(node.cloneNode(true));\n\n  return el;\n}\n\nfunction wrapNode(inner: HTMLElement, result: Node): Node {\n  let newNode = result.cloneNode(true);\n  if (!inner) {\n    return newNode;\n  }\n  if (inner.style && inner.style.fontWeight === GDOCS_STYLES.BOLD) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.BOLD);\n  }\n  if (inner.style && inner.style.fontStyle === GDOCS_STYLES.ITALIC) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.ITALIC);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.UNDERLINE) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.UNDERLINE);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.STRIKETHROUGH) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.STRIKETHROUGH);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUPERSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUPERSCRIPT);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUBSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUBSCRIPT);\n  }\n\n  return newNode;\n}\n\nfunction applyBlockStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = document.createTextNode('') as Node;\n  if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n    styledNode = node.childNodes[0];\n  }\n  if (node.childNodes[0] && node.childNodes[0].nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode.cloneNode(true), (node.childNodes[0] as HTMLAnchorElement).href);\n    styledNode = node.childNodes[0].childNodes[0];\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction applyInlineStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = node;\n  if (node.nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode, (node as HTMLAnchorElement).href);\n    if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n      styledNode = node.childNodes[0];\n    }\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction getCleanNode(node: Node): Node[] {\n  if (node.childNodes && (node.childNodes.length <= 1 || node.nodeName === 'OL' || node.nodeName === 'UL')) {\n    let newWrapper: Node | undefined;\n    let newNode = document.createTextNode(node.textContent || '') as Node;\n    if (node.nodeName === 'UL' || node.nodeName === 'OL' || node.nodeName === 'LI') {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = document.createDocumentFragment();\n      const items = [];\n      for (let i = 0; i < node.childNodes.length; i++) {\n        items.push(...getCleanNode(node.childNodes[i]));\n      }\n      items.map((i: Node): Node => newNode.appendChild(i));\n    } else if (headers.indexOf(node.nodeName) !== -1) {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = applyInlineStyles(node.childNodes[0]);\n    } else if (node.nodeName === 'P') {\n      newWrapper = document.createElement('p');\n      newNode = applyBlockStyles(node);\n    } else if (node.nodeName === 'BR') {\n      newNode = node;\n    } else {\n      newWrapper = document.createElement('span');\n      newNode = applyInlineStyles(node);\n    }\n    if (newWrapper) {\n      newWrapper.appendChild(newNode);\n      return [newWrapper];\n    }\n\n    return [node.cloneNode(true)];\n  }\n\n  if (node.childNodes) {\n    const nodes = [];\n    for (let i = 0; i < node.childNodes.length; i++) {\n      nodes.push(...getCleanNode(node.childNodes[i]));\n    }\n    return nodes;\n  }\n\n  return [node];\n}\n\nfunction filterNode(node: Node): boolean {\n  return node.nodeType !== 8; // Node.COMMENT_NODE = 8\n}\n\nfunction getCleanDocument(dirty: HTMLElement): HTMLElement {\n  const body = document.createElement('body');\n  const nodes = dirty.childNodes;\n  const filteredNodes = Array.from(nodes).filter(filterNode);\n  const cleanNodes = [];\n\n  for (const node of filteredNodes) {\n    cleanNodes.push(...getCleanNode(node));\n  }\n\n  for (let i = 0; i < cleanNodes.length; i++) {\n    body.appendChild(cleanNodes[i].cloneNode(true));\n  }\n\n  return body;\n}\n\nexport default function cleanDocsHtml(clipboardContent: string): string {\n  if (!clipboardContent.match(GDOCS_ELEMENT_ID_REGEXP)) {\n    return parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, '')).innerHTML;\n  }\n\n  return getCleanDocument(parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, ''))).innerHTML;\n}\n","import { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DEBUG } from '../../../../config';\nimport cleanDocsHtml from '../../../../lib/cleanDocsHtml';\nimport { ENTITY_CLASS_BY_NODE_NAME } from '../../../../util/parseHtmlAsFormattedText';\n\nconst STYLE_TAG_REGEX = /<style>(.*?)<\\/style>/gs;\n\nexport function preparePastedHtml(html: string) {\n  let fragment = document.createElement('div');\n  try {\n    html = cleanDocsHtml(html);\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n  fragment.innerHTML = html.replace(/\\u00a0/g, ' ').replace(STYLE_TAG_REGEX, ''); // Strip &nbsp and styles\n\n  const textContents = fragment.querySelectorAll<HTMLDivElement>('.text-content');\n  if (textContents.length) {\n    fragment = textContents[textContents.length - 1]; // Replace with the last copied message\n  }\n\n  Array.from(fragment.getElementsByTagName('*')).forEach((node) => {\n    if (!(node instanceof HTMLElement)) {\n      node.remove();\n      return;\n    }\n    node.removeAttribute('style');\n\n    // Fix newlines\n    if (node.tagName === 'BR') node.replaceWith('\\n');\n    if (node.tagName === 'P') node.appendChild(document.createTextNode('\\n'));\n    if (node.tagName === 'IMG' && !node.dataset.entityType) node.replaceWith(node.getAttribute('alt') || '');\n    // We do not intercept copy logic, so we remove some nodes here\n    if (node.dataset.ignoreOnPaste) node.remove();\n\n    if (ENTITY_CLASS_BY_NODE_NAME[node.tagName]) {\n      node.setAttribute('data-entity-type', ENTITY_CLASS_BY_NODE_NAME[node.tagName]);\n    }\n    // Strip non-entity tags\n    if (!node.dataset.entityType && node.textContent === node.innerText) node.replaceWith(node.textContent);\n    // Append entity parameters for parsing\n    if (node.dataset.alt) node.setAttribute('alt', node.dataset.alt);\n    switch (node.dataset.entityType) {\n      case ApiMessageEntityTypes.MentionName:\n        node.replaceWith(node.textContent || '');\n        break;\n      case ApiMessageEntityTypes.CustomEmoji:\n        node.textContent = node.dataset.alt || '';\n        break;\n    }\n  });\n\n  return fragment.innerHTML.trimEnd();\n}\n\nexport function escapeHtml(html: string) {\n  const fragment = document.createElement('div');\n  const text = document.createTextNode(html);\n  fragment.appendChild(text);\n  return fragment.innerHTML;\n}\n","import { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport safePlay from './safePlay';\n\ntype AbsoluteVideoOptions = {\n  position: { x: number; y: number };\n  noLoop?: boolean;\n  size: number;\n  style?: string;\n};\n\nexport default class AbsoluteVideo {\n  private video?: HTMLVideoElement;\n\n  private isPlaying = false;\n\n  constructor(\n    videoUrl: string,\n    private container: HTMLElement,\n    private options: AbsoluteVideoOptions,\n  ) {\n    this.video = document.createElement('video');\n    this.video.src = videoUrl;\n    this.video.disablePictureInPicture = true;\n    this.video.muted = true;\n    if (options.style) {\n      this.video.setAttribute('style', options.style);\n    }\n    this.video.style.position = 'absolute';\n    this.video.load();\n\n    if (!this.options.noLoop) {\n      this.video.loop = true;\n    }\n\n    requestMutation(() => {\n      this.container.appendChild(this.video!);\n\n      this.recalculatePositionAndSize();\n    });\n  }\n\n  public play() {\n    if (this.isPlaying || !this.video) return;\n    this.recalculatePositionAndSize();\n    if (this.video.paused) {\n      safePlay(this.video);\n    }\n    this.isPlaying = true;\n  }\n\n  public pause() {\n    if (!this.isPlaying || !this.video) return;\n    if (!this.video.paused) {\n      this.video.pause();\n    }\n    this.isPlaying = false;\n  }\n\n  public destroy() {\n    this.pause();\n    this.video?.remove();\n    this.video = undefined;\n  }\n\n  public updatePosition(position: AbsoluteVideoOptions['position']) {\n    this.options.position = position;\n    this.recalculatePositionAndSize();\n  }\n\n  private recalculatePositionAndSize() {\n    const { size, position: { x, y } } = this.options;\n    requestMeasure(() => {\n      if (!this.video) return;\n      const video = this.video;\n      const { width, height } = this.container.getBoundingClientRect();\n      requestMutation(() => {\n        video.style.left = `${Math.round(x * width)}px`;\n        video.style.top = `${Math.round(y * height)}px`;\n        video.style.width = `${size}px`;\n        video.style.height = `${size}px`;\n      });\n    });\n  }\n}\n","import { getGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { RichEditable } from './RichEditable';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { ensureRLottie } from '../../../lib/rlottie/RLottie.async';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../global/selectors';\nimport AbsoluteVideo from '../../../util/AbsoluteVideo';\nimport { getCustomEmojiMediaDataForInput } from '../../../util/emoji/customEmojiManager';\nimport { round } from '../../../util/math';\nimport { hexToRgb } from '../../../util/switchTheme';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport {\n  addColorFilter,\n  removeColorFilter,\n} from '../../../hooks/stickers/useColorFilter';\nimport { addBackgroundModeListener } from '../../../hooks/window/useBackgroundMode';\nimport { addDevicePixelRatioListener } from '../../../hooks/window/useDevicePixelRatio';\n\nconst SIZE = 1.25 * REM;\n\ntype CustomEmojiPlayer = {\n  play: () => void;\n  pause: () => void;\n  destroy: () => void;\n  updatePosition: (x: number, y: number) => void;\n};\n\nlet prefixCounter = 0;\n\nexport class EditableEmojiRender {\n  editable: RichEditable;\n\n  prefixId: string;\n\n  playersById: Map<string, CustomEmojiPlayer>;\n\n  customColor: string;\n\n  customColorFilter: string;\n\n  sharedCanvas: HTMLCanvasElement;\n\n  sharedCanvasHq: HTMLCanvasElement;\n\n  absoluteContainer: HTMLDivElement;\n\n  resizeObserver: ResizeObserver;\n\n  detachCbs: (() => void)[];\n\n  canPlayAnimatedEmojis: boolean;\n\n  constructor(editable: RichEditable) {\n    this.editable = editable;\n    this.playersById = new Map();\n    this.prefixId = `EditableEmojiRender_${prefixCounter++}_`;\n    this.customColor = '';\n    this.customColorFilter = '';\n    // const customColor = useDynamicColorListener(inputRef, !isReady);\n    // const colorFilter = useColorFilter(customColor, true);\n    // const dpr = useDevicePixelRatio();\n    // const playersById = useRef<Map<string, CustomEmojiPlayer>>(new Map());\n    this.sharedCanvas = document.createElement('canvas');\n    this.sharedCanvas.className = 'shared-canvas';\n    this.sharedCanvasHq = document.createElement('canvas');\n    this.sharedCanvasHq.className = 'shared-canvas';\n    this.absoluteContainer = document.createElement('div');\n    this.absoluteContainer.className = 'shared-canvas';\n\n    this.canPlayAnimatedEmojis = true;\n    this.detachCbs = [];\n\n    let throttleId: ReturnType<typeof setTimeout> | undefined;\n    this.resizeObserver = new ResizeObserver(() => {\n      if (throttleId !== undefined) return;\n      throttleId = setTimeout(() => {\n        this.synchronizeElements();\n      }, 300);\n    });\n  }\n\n  setCustomColor(newColor: string) {\n    if (this.customColor === newColor) return;\n\n    if (this.customColor) removeColorFilter(this.customColor);\n    this.customColor = newColor;\n\n    if (!newColor) return;\n    this.customColorFilter = addColorFilter(newColor);\n    this.synchronizeElements();\n    document.documentElement.style.setProperty(\n      '--input-custom-emoji-filter',\n      this.customColorFilter || 'none',\n    );\n  }\n\n  private clearPlayers(ids: string[]) {\n    ids.forEach((id) => {\n      const player = this.playersById.get(id);\n      if (player) {\n        player.destroy();\n        this.playersById.delete(id);\n      }\n    });\n  }\n\n  synchronizeElements() {\n    const global = getGlobal();\n    const playerIdsToClear = new Set(this.playersById.keys());\n    const customEmojis = Array.from(\n      this.editable.root.querySelectorAll<HTMLElement>('.custom-emoji'),\n    );\n\n    customEmojis.forEach((element) => {\n      if (!element.dataset.uniqueId) {\n        return;\n      }\n      const playerId = `${this.prefixId}${element.dataset.uniqueId}${\n        this.customColor || ''\n      }`;\n      const documentId = element.dataset.documentId!;\n\n      playerIdsToClear.delete(playerId);\n\n      const mediaUrl = getCustomEmojiMediaDataForInput(documentId);\n      if (!mediaUrl) {\n        return;\n      }\n\n      const canvasBounds = this.sharedCanvas.getBoundingClientRect();\n      const elementBounds = element.getBoundingClientRect();\n      const x = round(\n        (elementBounds.left - canvasBounds.left) / canvasBounds.width,\n        4,\n      );\n      const y = round(\n        (elementBounds.top - canvasBounds.top) / canvasBounds.height,\n        4,\n      );\n\n      if (this.playersById.has(playerId)) {\n        const player = this.playersById.get(playerId)!;\n        player.updatePosition(x, y);\n        return;\n      }\n\n      const customEmoji = global.customEmojis.byId[documentId];\n      if (!customEmoji) {\n        return;\n      }\n      const isHq = customEmoji?.stickerSetInfo\n        && selectIsAlwaysHighPriorityEmoji(global, customEmoji.stickerSetInfo);\n      const renderId = [\n        this.prefixId,\n        documentId,\n        this.customColor,\n        window.devicePixelRatio,\n      ]\n        .filter(Boolean)\n        .join('_');\n\n      createPlayer({\n        customEmoji,\n        sharedCanvas: this.sharedCanvas,\n        sharedCanvasHq: this.sharedCanvasHq,\n        absoluteContainer: this.absoluteContainer,\n        renderId,\n        viewId: playerId,\n        mediaUrl,\n        isHq,\n        position: { x, y },\n        textColor: this.customColor,\n        colorFilter: this.customColorFilter,\n      }).then((animation) => {\n        if (this.canPlayAnimatedEmojis) {\n          animation.play();\n        }\n\n        this.playersById.set(playerId, animation);\n      });\n    });\n\n    this.clearPlayers(Array.from(playerIdsToClear));\n  }\n\n  attachTo(container: HTMLElement) {\n    container.appendChild(this.sharedCanvas);\n    container.appendChild(this.sharedCanvasHq);\n    container.appendChild(this.absoluteContainer);\n\n    this.resizeObserver.observe(this.sharedCanvas);\n    this.detachCbs.push(() => this.resizeObserver.unobserve(this.sharedCanvas));\n\n    const removeDprListener = addDevicePixelRatioListener(() => {\n      this.synchronizeElements();\n    });\n    this.detachCbs.push(removeDprListener);\n\n    const removeBgListener = addBackgroundModeListener(\n      () => this.freezeAnimation(),\n      () => requestMutation(() => this.unfreezeAnimation()),\n    );\n    this.detachCbs.push(removeBgListener);\n\n    this.synchronizeElements();\n  }\n\n  detachFrom(container: HTMLElement) {\n    while (this.detachCbs.length) {\n      const cb = this.detachCbs.pop();\n      if (cb) cb();\n    }\n\n    this.clearPlayers(Array.from(this.playersById.keys()));\n    this.resizeObserver.unobserve(this.sharedCanvas);\n    container.removeChild(this.sharedCanvas);\n    container.removeChild(this.sharedCanvasHq);\n    container.removeChild(this.absoluteContainer);\n  }\n\n  private freezeAnimation() {\n    this.playersById.forEach((player) => {\n      player.pause();\n    });\n  }\n\n  private unfreezeAnimation() {\n    if (!this.canPlayAnimatedEmojis) {\n      return;\n    }\n\n    this.playersById.forEach((player) => {\n      player.play();\n    });\n  }\n}\n\nasync function createPlayer({\n  customEmoji,\n  sharedCanvas,\n  sharedCanvasHq,\n  absoluteContainer,\n  renderId,\n  viewId,\n  mediaUrl,\n  position,\n  isHq,\n  textColor,\n  colorFilter,\n}: {\n  customEmoji: ApiSticker;\n  sharedCanvas: HTMLCanvasElement;\n  sharedCanvasHq: HTMLCanvasElement;\n  absoluteContainer: HTMLElement;\n  renderId: string;\n  viewId: string;\n  mediaUrl: string;\n  position: { x: number; y: number };\n  isHq?: boolean;\n  textColor?: string;\n  colorFilter?: string;\n}): Promise<CustomEmojiPlayer> {\n  if (customEmoji.isLottie) {\n    const color = customEmoji.shouldUseTextColor && textColor\n      ? hexToRgb(textColor)\n      : undefined;\n    const RLottie = await ensureRLottie();\n    const lottie = RLottie.init(\n      mediaUrl,\n      isHq ? sharedCanvasHq : sharedCanvas,\n      renderId,\n      {\n        size: SIZE,\n        coords: position,\n        isLowPriority: !isHq,\n      },\n      viewId,\n      color ? [color.r, color.g, color.b] : undefined,\n    );\n\n    return {\n      play: () => lottie.play(),\n      pause: () => lottie.pause(),\n      destroy: () => lottie.removeView(viewId),\n      updatePosition: (x: number, y: number) => {\n        return lottie.setSharedCanvasCoords(viewId, { x, y });\n      },\n    };\n  }\n\n  if (customEmoji.isVideo) {\n    const style = customEmoji.shouldUseTextColor && colorFilter\n      ? `filter: ${colorFilter};`\n      : undefined;\n    const absoluteVideo = new AbsoluteVideo(mediaUrl, absoluteContainer, {\n      size: SIZE,\n      position,\n      style,\n    });\n    return {\n      play: () => absoluteVideo.play(),\n      pause: () => absoluteVideo.pause(),\n      destroy: () => absoluteVideo.destroy(),\n      updatePosition: (x: number, y: number) => absoluteVideo.updatePosition({ x, y }),\n    };\n  }\n\n  throw new Error('Unsupported custom emoji type');\n}\n","import type { ApiFormattedText } from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\nimport type { RichInputKeyboardListener } from './Keyboard';\n\nimport { betterExecCommand } from '../../../util/execCommand';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport parseHtmlAsFormattedText from '../../../util/parseHtmlAsFormattedText';\nimport { createSignal } from '../../../util/signals';\nimport { IS_MOBILE, IS_SAFARI, IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport { preparePastedHtml } from '../../middle/composer/helpers/cleanHtml';\nimport { getTextWithEntitiesAsHtml } from '../helpers/renderTextWithEntities';\nimport { insertEnterInsideBlockquote } from './blockquoteEnter';\nimport { INPUT_CUSTOM_EMOJI_SELECTOR } from './customEmoji';\n\nimport { EditableEmojiRender } from './EditableEmojiRender';\nimport { RichInputKeyboardPriority } from './Keyboard';\n\nconst SAFARI_BR = '<br>';\nconst WHITESPACE_RE = /\\s/;\nexport const IMG_ALT_MATCHABLE_MARKER = 'IMG_ALT__';\nconst fragmentEl = document.createElement('div');\n\nexport type SelectionState = {\n  collapsed: boolean;\n  range: Range;\n};\n\nexport type PasteCtx = {\n  editable: RichEditable;\n  text: ApiFormattedText;\n  html: string;\n  items: DataTransferItemList;\n};\n\nexport class RichEditable {\n  public root: HTMLDivElement;\n\n  public htmlS: Signal<string>;\n\n  private htmlSet: (html: string) => void;\n\n  public emptyS: Signal<boolean>;\n\n  private emptySet: (empty: boolean) => void;\n\n  public matchableS: Signal<string | undefined>;\n\n  private matchableSet: (matchable: string | undefined) => void;\n\n  public selectionS: Signal<SelectionState | undefined>;\n\n  private selectionSet: (selection: SelectionState | undefined) => void;\n\n  private attached: HTMLElement | undefined;\n\n  private disableEdit: boolean;\n\n  private keyboardHandlers: RichInputKeyboardListener[];\n\n  private selectionListener: () => void;\n\n  private pasteHandlers: ((p: PasteCtx) => void)[];\n\n  private pasteListener: (e: ClipboardEvent) => void;\n\n  public emojiRenderer: EditableEmojiRender;\n\n  constructor() {\n    this.root = document.createElement('div');\n    this.root.style.maxHeight = '256px';\n    if (IS_TOUCH_ENV || IS_MOBILE) {\n      this.root.style.overflowY = 'scroll';\n    }\n    this.attached = undefined;\n\n    this.disableEdit = false;\n    this.updateRootProps();\n\n    [this.htmlS, this.htmlSet] = createSignal('');\n    [this.emptyS, this.emptySet] = createSignal(true);\n    [this.matchableS, this.matchableSet] = createSignal<string | undefined>(undefined);\n    [this.selectionS, this.selectionSet] = createSignal<SelectionState | undefined>(\n      undefined,\n    );\n\n    this.keyboardHandlers = [];\n    this.pasteHandlers = [];\n\n    this.selectionListener = () => this.handleSelectionUpdate();\n    this.pasteListener = (e) => this.handlePaste(e);\n\n    this.root.addEventListener('click', () => {\n      this.focus();\n    });\n\n    this.root.addEventListener('input', () => {\n      this.handleContentUpdate();\n    });\n\n    this.root.addEventListener('keydown', (e) => {\n      for (const handler of this.keyboardHandlers) {\n        if (handler.onKeydown(e)) break;\n      }\n      this.handleSelectionUpdate();\n    });\n\n    this.emojiRenderer = new EditableEmojiRender(this);\n\n    this.addKeyboardHandler({\n      priority: RichInputKeyboardPriority.Default,\n      onKeydown: (e) => {\n        if (e.key === 'Enter') {\n          let p = this.selectionS()?.range.commonAncestorContainer;\n          while (p && p !== this.root && !(p?.nodeType\n            === document.ELEMENT_NODE || (p as HTMLElement)?.tagName\n            === 'BLOCKQUOTE')) {\n            p = p?.parentNode ?? undefined;\n          }\n          if (p && (p as HTMLElement)?.tagName === 'BLOCKQUOTE') {\n            const wasEnd = insertEnterInsideBlockquote(e);\n            if (!wasEnd && (IS_MOBILE || IS_SAFARI)) {\n              e.preventDefault();\n              this.execCommand('insertHTML', '<br/>');\n            }\n          }\n\n          return true;\n        }\n        return false;\n      },\n    });\n  }\n\n  private updateRootProps() {\n    if (this.disableEdit) {\n      this.root.contentEditable = 'false';\n    } else {\n      this.root.contentEditable = 'true';\n    }\n    this.root.role = 'textbox';\n    this.root.dir = 'auto';\n  }\n\n  public attachTo(el: HTMLElement) {\n    if (this.attached) {\n      throw new Error('Tried to attach when already attached');\n    }\n\n    this.attached = el;\n    el.appendChild(this.root);\n\n    document.addEventListener('selectionchange', this.selectionListener);\n    document.addEventListener('paste', this.pasteListener);\n\n    this.emojiRenderer.attachTo(el);\n\n    this.handleContentUpdate();\n  }\n\n  public detachFrom(el: HTMLElement) {\n    if (!this.attached) {\n      // eslint-disable-next-line no-console\n      console.warn('Tried to detach when not attached');\n      return;\n    }\n\n    this.emojiRenderer.detachFrom(el);\n\n    document.removeEventListener('selectionchange', this.selectionListener);\n    document.removeEventListener('paste', this.pasteListener);\n\n    el.removeChild(this.root);\n    this.attached = undefined;\n  }\n\n  public isAttached(el?: HTMLElement) {\n    if (el) return this.attached === el;\n    return this.attached !== undefined;\n  }\n\n  public applyRootProperties(props: {\n    className?: string;\n    disableEdit?: boolean;\n    placeholder?: string;\n    tabIndex?: number;\n  }) {\n    if (props.className) {\n      this.root.className = props.className;\n    }\n    if (props.placeholder) {\n      this.root.setAttribute('aria-label', props.placeholder);\n    }\n    if (props.tabIndex !== undefined) {\n      this.root.tabIndex = props.tabIndex;\n    }\n    if (props.disableEdit !== undefined) {\n      this.disableEdit = props.disableEdit;\n    }\n    this.updateRootProps();\n  }\n\n  public focus(force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n    focusEditableElement(this.root, force, forcePlaceCaretAtEnd);\n  }\n\n  public blur() {\n    this.root.blur();\n  }\n\n  private isRangeInside(r: Range) {\n    let parentNode: HTMLElement | undefined = r.commonAncestorContainer as HTMLElement;\n    let iterations = 1;\n    while (parentNode && parentNode !== this.root && iterations < 10) {\n      parentNode = parentNode.parentElement ?? undefined;\n      iterations++;\n    }\n\n    if (parentNode !== this.root) {\n      return false;\n    }\n    return true;\n  }\n\n  private ensureSelectionInside() {\n    const s = window.getSelection();\n    if (!s) return;\n\n    if (s.rangeCount > 0) {\n      const r = s.getRangeAt(0);\n      if (this.isRangeInside(r)) return;\n    }\n\n    const nr = document.createRange();\n    nr.selectNodeContents(this.root);\n    nr.collapse(false);\n    s.removeAllRanges();\n    s.addRange(nr);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  private calculateMatchable(s: Selection, r: Range): string | undefined {\n    if (!s.isCollapsed) return undefined;\n\n    // TODO: Check not inside code block\n\n    let curNode = r.endContainer;\n    let endPos = r.endOffset;\n    let startPos = r.endOffset;\n    if (\n      curNode.nodeType !== document.TEXT_NODE\n      && curNode.childNodes[endPos - 1]?.nodeType === document.TEXT_NODE\n    ) {\n      curNode = curNode.childNodes[endPos - 1];\n      endPos = curNode.textContent?.length || 0;\n      startPos = endPos;\n    }\n\n    if (curNode.nodeType !== document.TEXT_NODE) {\n      if (curNode.nodeType === document.ELEMENT_NODE) {\n        const curEl = curNode as HTMLElement;\n        if (curEl.tagName === 'IMG') {\n          return `IMG_ALT__${curEl.getAttribute('alt')}`;\n        }\n      }\n      return undefined;\n    } else {\n      startPos--;\n      endPos--;\n    }\n\n    const str = curNode.textContent;\n    if (!str) return undefined;\n\n    while (startPos > 0 && !WHITESPACE_RE.test(str[startPos])) {\n      startPos -= 1;\n    }\n\n    const ra = str.slice(startPos, endPos + 1);\n    return ra;\n  }\n\n  private handleSelectionUpdate() {\n    const s = window.getSelection();\n    const notSelected = !s || s.rangeCount === 0;\n    const r = notSelected ? undefined : s?.getRangeAt(0);\n\n    if (notSelected || !r || !this.isRangeInside(r)) {\n      this.matchableSet(undefined);\n      this.selectionSet(undefined);\n      return;\n    }\n\n    this.matchableSet(this.calculateMatchable(s, r));\n    this.selectionSet({\n      collapsed: s.isCollapsed,\n      range: r,\n    });\n  }\n\n  private handleContentUpdate() {\n    if (!this.attached) return;\n    const wasEmpty = this.emptyS();\n\n    this.htmlSet(this.root.innerHTML);\n    this.emptySet(\n      this.root.innerHTML === '' || this.root.innerHTML === SAFARI_BR,\n    );\n\n    this.handleSelectionUpdate();\n    if (!wasEmpty && this.emptyS() && this.selectionS()?.collapsed) {\n      betterExecCommand(this.root, this.selectionS()?.range, 'removeFormat');\n    }\n\n    this.emojiRenderer.synchronizeElements();\n  }\n\n  public clearInput() {\n    // TODO: Clear styling\n    this.root.innerHTML = '';\n    this.handleContentUpdate();\n  }\n\n  public setFormattedText(text: ApiFormattedText | undefined): string {\n    if (!text) {\n      this.clearInput();\n      return '';\n    }\n\n    const html = getTextWithEntitiesAsHtml(text);\n    this.root.innerHTML = html;\n    this.handleContentUpdate();\n\n    const s = window.getSelection();\n    if (s && this.root.lastChild) {\n      const r = document.createRange();\n      r.setEndAfter(this.root.lastChild);\n      r.setStartAfter(this.root.lastChild);\n      s.removeAllRanges();\n      s.addRange(r);\n    }\n    return html;\n  }\n\n  public getFormattedText(formatMarkdown: boolean = true): ApiFormattedText {\n    return parseHtmlAsFormattedText(this.htmlS(), false, !formatMarkdown);\n  }\n\n  public addKeyboardHandler(handler: RichInputKeyboardListener) {\n    this.keyboardHandlers.push(handler);\n    this.keyboardHandlers = this.keyboardHandlers.sort(\n      (a, b) => b.priority - a.priority,\n    );\n    return () => this.keyboardHandlers.filter((h) => h !== handler);\n  }\n\n  public addPasteHandler(handler: (p: PasteCtx) => void) {\n    this.pasteHandlers.push(handler);\n    return () => this.pasteHandlers.filter((h) => h !== handler);\n  }\n\n  public execCommand(cmd: string, value?: string) {\n    this.ensureSelectionInside();\n    betterExecCommand(this.root, this.selectionS()?.range ?? undefined, cmd, value);\n    this.handleContentUpdate();\n  }\n\n  public insertMatchableHtml(html: string, matchLimit: (c: string) => boolean) {\n    const s = window.getSelection();\n    if (!s || !s.rangeCount) return;\n\n    const r = s.getRangeAt(0);\n\n    let curNode = r.endContainer;\n    let endPos = r.endOffset;\n    let startPos = r.endOffset;\n\n    if (\n      curNode.nodeType !== document.TEXT_NODE\n      && curNode.childNodes[endPos - 1]?.nodeType === document.TEXT_NODE\n    ) {\n      curNode = curNode.childNodes[endPos - 1];\n      endPos = curNode.textContent?.length || 0;\n      startPos = endPos;\n    }\n\n    if (r.startContainer.nodeType === document.TEXT_NODE) {\n      const str = curNode.textContent;\n      if (!str) return;\n\n      while (startPos > 0 && !matchLimit(str[startPos])) {\n        startPos--;\n      }\n    } else if (r.startContainer.nodeType === document.ELEMENT_NODE) {\n      if (startPos > 0) startPos--;\n    }\n\n    r.setStart(curNode, startPos);\n    r.setEnd(curNode, endPos);\n    s.removeAllRanges();\n    s.addRange(r);\n    this.execCommand('insertHTML', html);\n  }\n\n  public removeLastSymbol() {\n    this.execCommand('delete');\n  }\n\n  public insertFormattedText(text: ApiFormattedText) {\n    const html = getTextWithEntitiesAsHtml(text);\n    this.execCommand('insertHTML', html);\n  }\n\n  private handlePaste(e: ClipboardEvent) {\n    if (!e.clipboardData) {\n      return;\n    }\n\n    let curNode: HTMLElement | undefined = e.target as HTMLElement;\n    while (curNode && curNode !== this.root) {\n      curNode = curNode.parentElement ?? undefined;\n    }\n    if (curNode !== this.root) {\n      return;\n    }\n\n    e.preventDefault();\n\n    if (document.activeElement !== this.root) {\n      return;\n    }\n\n    const pastedText = e.clipboardData.getData('text');\n    const html = e.clipboardData.getData('text/html');\n\n    const pasteCtx: PasteCtx = {\n      editable: this,\n      text: { text: pastedText },\n      html,\n      items: e.clipboardData.items,\n    };\n    if (html) {\n      pasteCtx.text = parseHtmlAsFormattedText(preparePastedHtml(html), false, true);\n      // TODO: This is needed to handle paste from vscode, but damn is this stupid\n      if (!pasteCtx.text.entities?.length) {\n        pasteCtx.text = { text: pastedText };\n      }\n    }\n\n    for (const pasteHandler of this.pasteHandlers) {\n      pasteHandler(pasteCtx);\n    }\n\n    this.insertFormattedText(pasteCtx.text);\n  }\n\n  public setSelRange(sel: Range) {\n    const s = window.getSelection();\n    if (s) {\n      s.removeAllRanges();\n      s.addRange(sel);\n      this.handleSelectionUpdate();\n    }\n  }\n\n  public getSelectedHtml(opts: { shouldDropCustomEmoji?: boolean; shouldDropQuotes?: boolean } = {}) {\n    const sel = this.selectionS();\n    if (!sel) {\n      return undefined;\n    }\n\n    const { shouldDropCustomEmoji, shouldDropQuotes } = {\n      ...opts,\n      shouldDropCustomEmoji: false,\n      shouldDropQuotes: true,\n    };\n\n    const r = sel.range.cloneRange();\n    while (r.commonAncestorContainer !== this.root) {\n      const nr = document.createRange();\n      nr.selectNodeContents(r.commonAncestorContainer);\n      if (nr.compareBoundaryPoints(Range.START_TO_START, r) !== 0) break;\n      if (nr.compareBoundaryPoints(Range.END_TO_END, r) !== 0) break;\n      r.selectNode(r.commonAncestorContainer);\n    }\n    fragmentEl.replaceChildren(r.cloneContents());\n\n    if (shouldDropCustomEmoji) {\n      fragmentEl.querySelectorAll(INPUT_CUSTOM_EMOJI_SELECTOR).forEach((el) => {\n        el.replaceWith(el.getAttribute('alt')!);\n      });\n    }\n\n    if (shouldDropQuotes) {\n      let clearBlockQuote: HTMLElement | null = fragmentEl.querySelector('blockquote');\n      while (clearBlockQuote) {\n        clearBlockQuote.replaceWith(...clearBlockQuote.childNodes);\n        clearBlockQuote = fragmentEl.querySelector('blockquote');\n      }\n    }\n\n    return fragmentEl.innerHTML;\n  }\n}\n","export function insertEnterInsideBlockquote(e: KeyboardEvent): boolean {\n  const s = window.getSelection();\n  if (s && s.isCollapsed) {\n    const r = s.getRangeAt(0);\n    let noteAnc: Node | null = r.endContainer;\n    if (r.endOffset === 0) {\n      let isStart = true;\n      while (noteAnc && (!('tagName' in noteAnc) || noteAnc.tagName !== 'BLOCKQUOTE')) {\n        if (noteAnc.previousSibling) {\n          isStart = false;\n          break;\n        }\n        noteAnc = noteAnc.parentNode;\n      }\n\n      if (isStart && noteAnc) {\n        s.removeAllRanges();\n        const nr = document.createRange();\n        nr.setStartBefore(noteAnc);\n        nr.setEndBefore(noteAnc);\n        const textNode = document.createTextNode(' ');\n        nr.insertNode(textNode);\n        nr.collapse(true);\n        s.addRange(nr);\n        e.preventDefault();\n        // document.execCommand(\"insertText\", false, \"\\n\")\n        return true;\n      }\n    } else if (r.endOffset === r.endContainer.textContent?.length) {\n      let isEnd = true;\n      while (noteAnc && (!('tagName' in noteAnc) || noteAnc.tagName !== 'BLOCKQUOTE')) {\n        if (noteAnc.nextSibling) {\n          isEnd = false;\n          break;\n        }\n        noteAnc = noteAnc.parentNode;\n      }\n      if (isEnd && noteAnc) {\n        s.removeAllRanges();\n        const nr = document.createRange();\n        nr.setStartAfter(noteAnc);\n        nr.setEndAfter(noteAnc);\n        const textNode = document.createTextNode(' ');\n        nr.insertNode(textNode);\n        nr.collapse(false);\n        s.addRange(nr);\n        e.preventDefault();\n        // document.execCommand(\"insertText\", false, \"\\n\")\n        return true;\n      }\n    }\n  }\n  return false;\n}\n","import type { RefObject } from '../../../lib/teact/teact';\nimport {\n  useEffect,\n  useRef,\n} from '../../../lib/teact/teact';\n\nimport type { Signal } from '../../../util/signals';\nimport type { RichInputKeyboardListener } from './Keyboard';\nimport type { PasteCtx } from './RichEditable';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport { RichEditable } from './RichEditable';\n\nexport type RichInputCtx = {\n  editable: RichEditable;\n  getHtml: Signal<string>;\n};\n\nexport function useRichEditable(): RichInputCtx & { ctx: RichInputCtx } {\n  const richEditable: RefObject<RichEditable | undefined> = useRef(undefined);\n  if (!richEditable.current) {\n    richEditable.current = new RichEditable();\n  }\n\n  const ctx: RichInputCtx = {\n    getHtml: richEditable.current.htmlS,\n    editable: richEditable.current,\n  };\n\n  return { ...ctx, ctx };\n}\n\nexport function useRichEditableKeyboardListener(\n  richInputCtx: RichInputCtx,\n  handler: RichInputKeyboardListener,\n  enable = true,\n) {\n  const keydownCallback = useLastCallback(handler.onKeydown);\n  const { priority } = handler;\n\n  useEffect(() => {\n    if (!enable) return () => {};\n\n    return richInputCtx.editable.addKeyboardHandler({\n      priority,\n      onKeydown: keydownCallback,\n    });\n  }, [richInputCtx.editable, keydownCallback, priority, enable]);\n}\n\nexport function useRichEditablePasteHandler(\n  richInputCtx: RichInputCtx,\n  handler: (p: PasteCtx) => void,\n  enable = true,\n) {\n  const keydownCallback = useLastCallback(handler);\n\n  useEffect(() => {\n    if (!enable) return () => {};\n\n    return richInputCtx.editable.addPasteHandler(keydownCallback);\n  }, [richInputCtx.editable, keydownCallback, enable]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { TextPart } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { MediaViewerOrigin, SettingsScreens } from '../../types';\n\nimport { getPhotoMediaHash, getVideoProfilePhotoMediaHash } from '../../global/helpers';\nimport { fetchBlob } from '../../util/files';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport CropModal from '../ui/CropModal';\n\ntype OwnProps = {\n  message: ApiMessage;\n  renderContent: () => TextPart | undefined;\n};\n\nconst ActionMessageSuggestedAvatar: FC<OwnProps> = ({\n  message,\n  renderContent,\n}) => {\n  const {\n    openMediaViewer, uploadProfilePhoto, showNotification,\n  } = getActions();\n\n  const { isOutgoing } = message;\n\n  const lang = useOldLang();\n  const [cropModalBlob, setCropModalBlob] = useState<Blob | undefined>();\n  const [isVideoModalOpen, openVideoModal, closeVideoModal] = useFlag(false);\n  const photo = message.content.action!.photo!;\n  const suggestedPhotoUrl = useMedia(getPhotoMediaHash(photo, 'full'));\n  const suggestedVideoUrl = useMedia(getVideoProfilePhotoMediaHash(photo));\n  const isVideo = message.content.action!.photo?.isVideo;\n\n  const showAvatarNotification = useLastCallback(() => {\n    showNotification({\n      title: lang('ApplyAvatarHintTitle'),\n      message: lang('ApplyAvatarHint'),\n      action: {\n        action: 'requestNextSettingsScreen',\n        payload: {\n          screen: SettingsScreens.Main,\n        },\n      },\n      actionText: lang('Open'),\n    });\n  });\n\n  const handleSetSuggestedAvatar = useLastCallback((file: File) => {\n    setCropModalBlob(undefined);\n    uploadProfilePhoto({ file });\n    showAvatarNotification();\n  });\n\n  const handleCloseCropModal = useLastCallback(() => {\n    setCropModalBlob(undefined);\n  });\n\n  const handleSetVideo = useLastCallback(async () => {\n    if (!suggestedVideoUrl) return;\n\n    closeVideoModal();\n    showAvatarNotification();\n\n    // TODO Once we support uploading video avatars, add crop/trim modal here\n    const blob = await fetchBlob(suggestedVideoUrl);\n    uploadProfilePhoto({\n      file: new File([blob], 'avatar.mp4'),\n      isVideo: true,\n      videoTs: photo.videoSizes?.find((l) => l.videoStartTs !== undefined)?.videoStartTs,\n    });\n  });\n\n  const handleViewSuggestedAvatar = async () => {\n    if (!isOutgoing && suggestedPhotoUrl) {\n      if (isVideo) {\n        openVideoModal();\n      } else {\n        setCropModalBlob(await fetchBlob(suggestedPhotoUrl));\n      }\n    } else {\n      openMediaViewer({\n        chatId: message.chatId,\n        messageId: message.id,\n        threadId: MAIN_THREAD_ID,\n        origin: MediaViewerOrigin.SuggestedAvatar,\n      });\n    }\n  };\n\n  return (\n    <span className=\"action-message-suggested-avatar\" tabIndex={0} role=\"button\" onClick={handleViewSuggestedAvatar}>\n      <Avatar\n        photo={message.content.action!.photo}\n        loopIndefinitely\n        withVideo={isVideo}\n        size=\"jumbo\"\n      />\n      <span>{renderContent()}</span>\n\n      <span className=\"action-message-button\">{lang(isVideo ? 'ViewVideoAction' : 'ViewPhotoAction')}</span>\n      <CropModal\n        file={cropModalBlob}\n        onClose={handleCloseCropModal}\n        onChange={handleSetSuggestedAvatar}\n      />\n      <ConfirmDialog\n        isOpen={isVideoModalOpen}\n        title={lang('SuggestedVideo')}\n        confirmHandler={handleSetVideo}\n        onClose={closeVideoModal}\n        textParts={renderContent()}\n      />\n    </span>\n  );\n};\n\nexport default memo(ActionMessageSuggestedAvatar);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { TextPart } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\n\ntype OwnProps = {\n  message: ApiMessage;\n  renderContent: () => TextPart | undefined;\n};\n\nconst ActionMessageUpdatedAvatar: FC<OwnProps> = ({\n  message,\n  renderContent,\n}) => {\n  const {\n    openMediaViewer,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleViewUpdatedAvatar = () => {\n    openMediaViewer({\n      chatId: message.chatId,\n      messageId: message.id,\n      threadId: MAIN_THREAD_ID,\n      origin: MediaViewerOrigin.SuggestedAvatar,\n    });\n  };\n\n  return (\n    <>\n      <span>{renderContent()}</span>\n      <span\n        className=\"action-message-updated-avatar\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handleViewUpdatedAvatar}\n        aria-label={lang('ViewPhotoAction')}\n      >\n        <Avatar\n          photo={message.content.action!.photo}\n          loopIndefinitely\n          withVideo\n          size=\"jumbo\"\n        />\n      </span>\n    </>\n  );\n};\n\nexport default memo(ActionMessageUpdatedAvatar);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"V3RHiOJR\",\"notch\":\"tfG_BSDt\",\"notch-path\":\"HVbeGv4t\",\"notchPath\":\"HVbeGv4t\",\"join-text\":\"UHAMd4fI\",\"joinText\":\"UHAMd4fI\",\"header\":\"s7QOi22Q\",\"title\":\"JstcOhAN\",\"close\":\"meewH7t_\",\"icon\":\"d8axZxyN\",\"skeleton\":\"xKVZv7KE\",\"inner\":\"njAC8dR9\",\"is-appearing\":\"eb8rX09E\",\"isAppearing\":\"eb8rX09E\",\"channels-appear\":\"AL2cLQ4i\",\"channelsAppear\":\"AL2cLQ4i\",\"is-hiding\":\"XR6_qLCc\",\"isHiding\":\"XR6_qLCc\",\"channels-disappear\":\"TwwnoiuD\",\"channelsDisappear\":\"TwwnoiuD\",\"channel-list\":\"h4gWlNen\",\"channelList\":\"h4gWlNen\",\"item\":\"glDpC2av\",\"last-item\":\"MBChXyXk\",\"lastItem\":\"MBChXyXk\",\"avatar\":\"gqCs9fSo\",\"badge\":\"gnYhwnvf\",\"members-count\":\"HWgwnKui\",\"membersCount\":\"HWgwnKui\",\"channel-title\":\"BTNQ4KBH\",\"channelTitle\":\"BTNQ4KBH\",\"fake-avatar\":\"Xl9MVMTn\",\"fakeAvatar\":\"Xl9MVMTn\",\"fake-avatar-inner\":\"Qizai7yv\",\"fakeAvatarInner\":\"Qizai7yv\",\"last-fake-avatar\":\"JxSmtOFi\",\"lastFakeAvatar\":\"JxSmtOFi\"};","import React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatFullInfo } from '../../../api/types';\n\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectIsCurrentUserPremium,\n  selectSimilarChannelIds,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getServerTime } from '../../../util/serverTime';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useAverageColor from '../../../hooks/useAverageColor';\nimport useFlag from '../../../hooks/useFlag';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport styles from './SimilarChannels.module.scss';\n\nconst DEFAULT_BADGE_COLOR = '#3C3C4399';\nconst SHOW_CHANNELS_NUMBER = 10;\nconst MIN_SKELETON_DELAY = 300;\nconst MAX_SKELETON_DELAY = 2000;\nconst AUTO_EXPAND_TIME = 10; // Seconds from joining\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  similarChannelIds?: string[];\n  isExpanded?: boolean;\n  count?: number;\n  isCurrentUserPremium: boolean;\n  channelJoinInfo?: ApiChatFullInfo['joinInfo'];\n};\n\nconst SimilarChannels = ({\n  chatId,\n  similarChannelIds,\n  isExpanded,\n  count,\n  isCurrentUserPremium,\n  channelJoinInfo,\n}: StateProps & OwnProps) => {\n  const lang = useOldLang();\n  const { toggleChannelRecommendations, loadChannelRecommendations } = getActions();\n  const [isShowing, markShowing, markNotShowing] = useFlag(false);\n  const [isHiding, markHiding, markNotHiding] = useFlag(false);\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const similarChannels = useMemo(() => {\n    if (!similarChannelIds) {\n      return undefined;\n    }\n\n    const global = getGlobal();\n    return similarChannelIds.map((id) => selectChat(global, id)).filter(Boolean);\n  }, [similarChannelIds]);\n  // Show skeleton while loading similar channels\n  const [shouldRenderSkeleton, setShouldRenderSkeleton] = useState(false);\n  const firstSimilarChannels = useMemo(() => similarChannels?.slice(0, SHOW_CHANNELS_NUMBER), [similarChannels]);\n  const areSimilarChannelsPresent = Boolean(firstSimilarChannels?.length);\n\n  const isAnimating = isHiding || isShowing;\n  const shouldRenderChannels = Boolean(\n    !shouldRenderSkeleton\n      && (isExpanded || isAnimating)\n      && areSimilarChannelsPresent,\n  );\n\n  useHorizontalScroll(ref, !shouldRenderChannels, true);\n\n  useEffect(() => {\n    if (!similarChannelIds) {\n      loadChannelRecommendations({ chatId });\n    }\n  }, [chatId, similarChannelIds]);\n\n  useTimeout(() => setShouldRenderSkeleton(false), MAX_SKELETON_DELAY);\n\n  useEffect(() => {\n    if (shouldRenderSkeleton && similarChannels && isExpanded) {\n      const id = setTimeout(() => {\n        setShouldRenderSkeleton(false);\n      }, MIN_SKELETON_DELAY);\n\n      return () => clearTimeout(id);\n    }\n\n    return undefined;\n  }, [similarChannels, isExpanded, shouldRenderSkeleton]);\n\n  const handleToggle = useLastCallback(() => {\n    toggleChannelRecommendations({ chatId });\n    if (isExpanded) {\n      markNotShowing();\n      markHiding();\n    } else {\n      markShowing();\n      markNotHiding();\n      setShouldRenderSkeleton(!similarChannelIds);\n    }\n  });\n\n  useEffect(() => {\n    if (!channelJoinInfo?.joinedDate || isExpanded) return;\n    if (getServerTime() - channelJoinInfo.joinedDate <= AUTO_EXPAND_TIME) {\n      handleToggle();\n    }\n  }, [channelJoinInfo, isExpanded]);\n\n  return (\n    <div className={buildClassName(styles.root)}>\n      <div className=\"join-text\">\n        <span\n          className={buildClassName(areSimilarChannelsPresent && styles.joinText)}\n          onClick={areSimilarChannelsPresent ? handleToggle : undefined}\n        >\n          {lang('ChannelJoined')}\n        </span>\n      </div>\n      {shouldRenderSkeleton && <Skeleton className={styles.skeleton} />}\n      {shouldRenderChannels && (\n        <div\n          className={buildClassName(\n            isShowing && styles.isAppearing,\n            isHiding && styles.isHiding,\n          )}\n        >\n          <div className={styles.notch}>\n            <svg\n              width=\"19\"\n              height=\"7\"\n              viewBox=\"0 0 19 7\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                className={styles.notchPath}\n                fill-rule=\"evenodd\"\n                clip-rule=\"evenodd\"\n                d=\"M19 7C16.8992 7 13.59 3.88897 11.5003 1.67424C10.7648 0.894688 10.397 0.50491 10.0434 0.385149C9.70568 0.270811 9.4225 0.270474 9.08456 0.38401C8.73059 0.50293 8.36133 0.892443 7.62279 1.67147C5.52303 3.88637 2.18302 7 0 7L19 7Z\"\n                fill=\"white\"\n              />\n            </svg>\n          </div>\n          <div className={styles.inner}>\n            <div className={styles.header}>\n              <span className={styles.title}>{lang('SimilarChannels')}</span>\n              <Button\n                className={styles.close}\n                color=\"translucent\"\n                onClick={handleToggle}\n              >\n                <Icon name=\"close\" />\n              </Button>\n            </div>\n            <div ref={ref} className={buildClassName(styles.channelList, 'no-scrollbar')}>\n              {firstSimilarChannels?.map((channel, i) => {\n                return i === SHOW_CHANNELS_NUMBER - 1 ? (\n                  <MoreChannels\n                    channel={channel}\n                    chatId={chatId}\n                    channelsCount={count! - SHOW_CHANNELS_NUMBER + 1}\n                    isCurrentUserPremium={isCurrentUserPremium}\n                  />\n                ) : (\n                  <SimilarChannel channel={channel} />\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nfunction SimilarChannel({ channel }: { channel: ApiChat }) {\n  const { openChat } = getActions();\n  const color = useAverageColor(channel, DEFAULT_BADGE_COLOR);\n\n  return (\n    <div className={styles.item} onClick={() => openChat({ id: channel.id })}>\n      <Avatar className={styles.avatar} key={channel.id} size=\"large\" peer={channel} />\n      <div style={`background: ${color}`} className={styles.badge}>\n        <Icon name=\"user-filled\" className={styles.icon} />\n        <span className={styles.membersCount}>{formatIntegerCompact(channel?.membersCount || 0)}\n        </span>\n      </div>\n      <span className={styles.channelTitle}>{channel.title}</span>\n    </div>\n  );\n}\n\nfunction MoreChannels({\n  channel,\n  chatId,\n  channelsCount,\n  isCurrentUserPremium,\n}: {\n  channel: ApiChat;\n  chatId: string;\n  channelsCount: number;\n  isCurrentUserPremium: boolean;\n}) {\n  const { openPremiumModal, openChatWithInfo } = getActions();\n  const lang = useOldLang();\n\n  const handleClickMore = () => {\n    if (isCurrentUserPremium) {\n      openChatWithInfo({\n        id: chatId, shouldReplaceHistory: true, profileTab: 'similarChannels', forceScrollProfileTab: true,\n      });\n    } else {\n      openPremiumModal();\n    }\n  };\n\n  return (\n    <div\n      className={buildClassName(styles.item, styles.lastItem)}\n      onClick={() => handleClickMore()}\n    >\n      <Avatar className={styles.avatar} key={channel.id} size=\"large\" peer={channel} />\n      <div className={styles.fakeAvatar}>\n        <div className={styles.fakeAvatarInner} />\n      </div>\n      <div className={buildClassName(styles.fakeAvatar, styles.lastFakeAvatar)}>\n        <div className={styles.fakeAvatarInner} />\n      </div>\n      <div className={styles.badge}>\n        <span className={styles.membersCount}>{`+${channelsCount}`}</span>\n        {!isCurrentUserPremium && <Icon name=\"lock-badge\" className={styles.icon} />}\n      </div>\n      <span className={styles.channelTitle}>{lang('MoreSimilar')}</span>\n    </div>\n  );\n}\n\nexport default memo(\n  withGlobal<OwnProps>((global, { chatId }): StateProps => {\n    const { similarChannelIds, isExpanded, count } = selectSimilarChannelIds(global, chatId) || {};\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n    const chatFullInfo = selectChatFullInfo(global, chatId);\n\n    return {\n      similarChannelIds,\n      isExpanded,\n      count,\n      isCurrentUserPremium,\n      channelJoinInfo: chatFullInfo?.joinInfo,\n    };\n  })(SimilarChannels),\n);\n","import { useEffect, useState } from '../lib/teact/teact';\n\nimport type { ApiPeer } from '../api/types';\nimport { ApiMediaFormat } from '../api/types';\n\nimport { getChatAvatarHash } from '../global/helpers';\nimport { getAverageColor, rgb2hex } from '../util/colors';\nimport useMedia from './useMedia';\n\nfunction useAverageColor(peer: ApiPeer, fallbackColor = '#00000000') {\n  const [color, setColor] = useState(fallbackColor);\n  const imgBlobUrl = useMedia(getChatAvatarHash(peer), false, ApiMediaFormat.BlobUrl);\n\n  useEffect(() => {\n    (async () => {\n      if (!imgBlobUrl) {\n        return;\n      }\n\n      const averageColor = await getAverageColor(imgBlobUrl);\n      setColor(`#${rgb2hex(averageColor)}`);\n    })();\n  }, [imgBlobUrl]);\n\n  return color;\n}\n\nexport default useAverageColor;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef, useUnmountCleanup,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiMessageActionStarGift, ApiSticker, ApiTopic, ApiUser,\n} from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { FocusDirection, MessageListType, ThreadId } from '../../types';\nimport type { OnIntersectPinnedMessage } from './hooks/usePinnedMessage';\n\nimport {\n  getChatTitle, getMessageHtmlId, getPeerTitle, isJoinedChannelMessage,\n} from '../../global/helpers';\nimport { getMessageReplyInfo } from '../../global/helpers/replies';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChat,\n  selectChatMessage,\n  selectGiftStickerForDuration,\n  selectGiftStickerForStars,\n  selectIsCurrentUserPremium,\n  selectIsMessageFocused,\n  selectPeer,\n  selectTabState,\n  selectTheme,\n  selectTopicFromMessage,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatInteger, formatIntegerCompact } from '../../util/textFormat';\nimport { getGiftAttributes, getStickerFromGift } from '../common/helpers/gifts';\nimport { renderActionMessageText } from '../common/helpers/renderActionMessageText';\nimport renderText from '../common/helpers/renderText';\nimport { renderTextWithEntities } from '../common/helpers/renderTextWithEntities';\nimport { preventMessageInputBlur } from './helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useEnsureMessage from '../../hooks/useEnsureMessage';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting, useOnIntersect } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\nimport useMessageResizeObserver from '../../hooks/useResizeMessageObserver';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport useFocusMessage from './message/hooks/useFocusMessage';\n\nimport AnimatedIconFromSticker from '../common/AnimatedIconFromSticker';\nimport Avatar from '../common/Avatar';\nimport GiftRibbon from '../common/gift/GiftRibbon';\nimport RadialPatternBackground from '../common/profile/RadialPatternBackground';\nimport Sparkles from '../common/Sparkles';\nimport ActionMessageSuggestedAvatar from './ActionMessageSuggestedAvatar';\nimport ActionMessageUpdatedAvatar from './ActionMessageUpdatedAvatar';\nimport ContextMenuContainer from './message/ContextMenuContainer.async';\nimport Reactions from './message/reactions/Reactions';\nimport SimilarChannels from './message/SimilarChannels';\n\ntype OwnProps = {\n  message: ApiMessage;\n  threadId?: ThreadId;\n  messageListType?: MessageListType;\n  observeIntersectionForReading?: ObserveFn;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  isEmbedded?: boolean;\n  appearanceOrder?: number;\n  isJustAdded?: boolean;\n  isLastInList?: boolean;\n  isInsideTopic?: boolean;\n  memoFirstUnreadIdRef?: { current: number | undefined };\n  onIntersectPinnedMessage?: OnIntersectPinnedMessage;\n};\n\ntype StateProps = {\n  senderUser?: ApiUser;\n  senderChat?: ApiChat;\n  targetUserIds?: string[];\n  targetMessage?: ApiMessage;\n  targetChatId?: string;\n  targetChat?: ApiChat;\n  isFocused: boolean;\n  topic?: ApiTopic;\n  focusDirection?: FocusDirection;\n  noFocusHighlight?: boolean;\n  premiumGiftSticker?: ApiSticker;\n  starsGiftSticker?: ApiSticker;\n  canPlayAnimatedEmojis?: boolean;\n  patternColor?: string;\n  currentUserId?: string;\n  isCurrentUserPremium?: boolean;\n};\n\nconst APPEARANCE_DELAY = 10;\nconst STAR_GIFT_STICKER_SIZE = 120;\n\nconst ActionMessage: FC<OwnProps & StateProps> = ({\n  message,\n  threadId,\n  isEmbedded,\n  appearanceOrder = 0,\n  isJustAdded,\n  isLastInList,\n  senderUser,\n  senderChat,\n  targetUserIds,\n  targetMessage,\n  targetChatId,\n  targetChat,\n  isFocused,\n  focusDirection,\n  noFocusHighlight,\n  premiumGiftSticker,\n  starsGiftSticker,\n  isInsideTopic,\n  topic,\n  memoFirstUnreadIdRef,\n  canPlayAnimatedEmojis,\n  patternColor,\n  observeIntersectionForReading,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onIntersectPinnedMessage,\n  currentUserId,\n  isCurrentUserPremium,\n}) => {\n  const {\n    openPremiumModal,\n    requestConfetti,\n    checkGiftCode,\n    getReceipt,\n    openGiftInfoModalFromMessage,\n    openPrizeStarsTransactionFromGiveaway,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useOnIntersect(ref, observeIntersectionForReading);\n  useEnsureMessage(\n    message.chatId,\n    message.replyInfo?.type === 'message' ? message.replyInfo.replyToMsgId : undefined,\n    targetMessage,\n  );\n  useFocusMessage({\n    elementRef: ref,\n    chatId: message.chatId,\n    isFocused,\n    focusDirection,\n    noFocusHighlight,\n    isJustAdded,\n  });\n\n  useUnmountCleanup(() => {\n    if (message.isPinned) {\n      onIntersectPinnedMessage?.({ viewportPinnedIdsToRemove: [message.id] });\n    }\n  });\n\n  const noAppearanceAnimation = appearanceOrder <= 0;\n  const [isShown, markShown] = useFlag(noAppearanceAnimation);\n  const isPremiumGift = message.content.action?.type === 'giftPremium';\n  const isGiftCode = message.content.action?.type === 'giftCode';\n  const isSuggestedAvatar = message.content.action?.type === 'suggestProfilePhoto' && message.content.action!.photo;\n  const isUpdatedAvatar = message.content.action?.type === 'updateProfilePhoto' && message.content.action!.photo;\n  const isJoinedMessage = isJoinedChannelMessage(message);\n  const isStarsGift = message.content.action?.type === 'giftStars';\n  const isStarGift = message.content.action?.type === 'starGift';\n  const isStarGiftUnique = message.content.action?.type === 'starGiftUnique';\n  const isPrizeStars = message.content.action?.type === 'prizeStars';\n\n  const withServiceReactions = Boolean(message.areReactionsPossible && message?.reactions);\n\n  useMessageResizeObserver(ref, isLastInList);\n\n  useEffect(() => {\n    if (noAppearanceAnimation) {\n      return;\n    }\n\n    setTimeout(markShown, appearanceOrder * APPEARANCE_DELAY);\n  }, [appearanceOrder, markShown, noAppearanceAnimation]);\n\n  const isVisible = useIsIntersecting(ref, observeIntersectionForPlaying);\n\n  const shouldShowConfettiRef = useRef((() => {\n    const isUnread = memoFirstUnreadIdRef?.current && message.id >= memoFirstUnreadIdRef.current;\n    return isPremiumGift && !message.isOutgoing && isUnread;\n  })());\n\n  useEffect(() => {\n    if (isVisible && shouldShowConfettiRef.current) {\n      shouldShowConfettiRef.current = false;\n      requestConfetti({ withStars: true });\n    }\n  }, [isVisible, requestConfetti]);\n\n  const { transitionClassNames } = useShowTransitionDeprecated(isShown, undefined, noAppearanceAnimation, false);\n\n  // No need for expensive global updates on users and chats, so we avoid them\n  const usersById = getGlobal().users.byId;\n  const targetUsers = useMemo(() => {\n    return targetUserIds\n      ? targetUserIds.map((userId) => usersById?.[userId]).filter(Boolean)\n      : undefined;\n  }, [targetUserIds, usersById]);\n\n  const renderContent = useCallback(() => {\n    return renderActionMessageText(\n      oldLang,\n      message,\n      senderUser,\n      senderChat,\n      targetUsers,\n      targetMessage,\n      targetChatId,\n      topic,\n      { isEmbedded },\n      observeIntersectionForLoading,\n      observeIntersectionForPlaying,\n    );\n  }, [\n    isEmbedded, message, observeIntersectionForLoading, observeIntersectionForPlaying, oldLang,\n    senderChat, senderUser, targetChatId, targetMessage, targetUsers, topic,\n  ]);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n  const isContextMenuShown = contextMenuAnchor !== undefined;\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    preventMessageInputBlur(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handleStarGiftClick = () => {\n    const starGift = message.content.action?.starGift;\n    if (!starGift) return;\n\n    openGiftInfoModalFromMessage({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n  };\n\n  const handlePremiumGiftClick = () => {\n    openPremiumModal({\n      isGift: true,\n      fromUserId: senderUser?.id,\n      toUserId: targetUserIds?.[0],\n      monthsAmount: message.content.action?.months || 0,\n    });\n  };\n\n  const handlePrizeStarsClick = () => {\n    openPrizeStarsTransactionFromGiveaway({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n  };\n\n  const handleGiftCodeClick = () => {\n    const slug = message.content.action?.slug;\n    if (!slug) return;\n    checkGiftCode({ slug, message: { chatId: message.chatId, messageId: message.id } });\n  };\n\n  const handleClick = () => {\n    if (message.content.action?.type === 'receipt') {\n      getReceipt({\n        chatId: message.chatId,\n        messageId: message.id,\n      });\n    }\n  };\n\n  // TODO Refactoring for action rendering\n  const shouldSkipRender = isInsideTopic && message.content.action?.text === 'TopicWasCreatedAction';\n  if (shouldSkipRender) {\n    return <span ref={ref} />;\n  }\n\n  if (isEmbedded) {\n    return <span ref={ref} className=\"embedded-action-message\">{renderContent()}</span>;\n  }\n\n  function renderGift() {\n    const giftMessage = message.content.action?.message;\n    return (\n      <span\n        className=\"action-message-gift\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handlePremiumGiftClick}\n      >\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={premiumGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <strong>{oldLang('ActionGiftPremiumTitle')}</strong>\n        <span>\n          {oldLang('ActionGiftPremiumSubtitle', oldLang('Months', message.content.action?.months, 'i'))}\n        </span>\n        {giftMessage && (\n          <div className=\"action-message-gift-subtitle\">\n            {renderTextWithEntities({ text: giftMessage.text, entities: giftMessage.entities })}\n          </div>\n        )}\n\n        <span className=\"action-message-button\">\n          <Sparkles preset=\"button\" />\n          {oldLang('ActionGiftPremiumView')}\n        </span>\n      </span>\n    );\n  }\n\n  function renderGiftCode() {\n    const isFromGiveaway = message.content.action?.isGiveaway;\n    const isUnclaimed = message.content.action?.isUnclaimed;\n    const giftMessage = message.content.action?.message;\n    return (\n      <span\n        className=\"action-message-gift action-message-centered\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handleGiftCodeClick}\n      >\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={premiumGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <strong>\n          {oldLang(isUnclaimed ? 'BoostingUnclaimedPrize' : 'BoostingCongratulations')}\n        </strong>\n        <span className=\"action-message-subtitle\">\n          {targetChat && renderText(\n            oldLang(\n              isFromGiveaway ? 'BoostingReceivedGiftFrom' : isUnclaimed\n                ? 'BoostingReceivedPrizeFrom' : 'BoostingYouHaveUnclaimedPrize',\n              getChatTitle(oldLang, targetChat),\n            ),\n            ['simple_markdown'],\n          )}\n        </span>\n        <span className=\"action-message-subtitle\">\n          {renderText(oldLang(\n            'BoostingUnclaimedPrizeDuration',\n            oldLang('Months', message.content.action?.months, 'i'),\n          ), ['simple_markdown'])}\n        </span>\n\n        {giftMessage && (\n          <div className=\"action-message-gift-subtitle\">\n            {renderTextWithEntities({ text: giftMessage.text, entities: giftMessage.entities })}\n          </div>\n        )}\n\n        <span className=\"action-message-button\">\n          {oldLang('BoostingReceivedGiftOpenBtn')}\n        </span>\n      </span>\n    );\n  }\n\n  function renderStarsGift() {\n    return (\n      <span\n        className=\"action-message-gift action-message-centered\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handleStarGiftClick}\n      >\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={starsGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <div className=\"action-message-stars-balance\">\n          {formatInteger(message.content.action!.stars!)}\n          <strong>{oldLang('Stars')}</strong>\n        </div>\n        <span className=\"action-message-stars-subtitle\">\n          {renderText(\n            oldLang(!message.isOutgoing\n              ? 'ActionGiftStarsSubtitleYou' : 'ActionGiftStarsSubtitle', getChatTitle(oldLang, targetChat!)),\n            ['simple_markdown'],\n          )}\n        </span>\n        <span className=\"action-message-button\">\n          <Sparkles preset=\"button\" />\n          {oldLang('ActionGiftPremiumView')}\n        </span>\n      </span>\n    );\n  }\n\n  function renderStarGiftUserCaption() {\n    const starGift = message.content.action?.starGift;\n    if (!starGift) return undefined;\n    const { fromId, peerId } = starGift;\n\n    const fromPeer = fromId ? selectPeer(getGlobal(), fromId) : undefined;\n    const targetPeer = peerId\n      ? selectPeer(getGlobal(), peerId)\n      : starGift.type === 'starGiftUnique' && !message.isOutgoing\n        ? targetChat : undefined;\n\n    if (targetPeer && targetPeer.id !== currentUserId) {\n      return (\n        <div className=\"action-message-user-caption\">\n          <span> {lang('GiftTo')} </span>\n          {starGift.type === 'starGift' && (\n            <Avatar className=\"action-message-user-avatar\" size=\"micro\" peer={targetPeer} />\n          )}\n          <span> {getPeerTitle(lang, targetPeer)} </span>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"action-message-user-caption\">\n        <span> {lang('GiftFrom')} </span>\n        {starGift.type === 'starGift' && (\n          <Avatar className=\"action-message-user-avatar\" size=\"micro\" peer={fromPeer || senderUser} />\n        )}\n        <span> {getPeerTitle(lang, fromPeer || senderUser!)} </span>\n      </div>\n    );\n  }\n\n  function renderStarGiftUserDescription() {\n    const starGift = message.content.action?.starGift as ApiMessageActionStarGift;\n    const targetChatTitle = targetChat && getPeerTitle(lang, targetChat);\n    const starGiftMessage = starGift?.message;\n    if (!starGift) return undefined;\n\n    if (starGiftMessage) {\n      return renderTextWithEntities({ text: starGiftMessage.text, entities: starGiftMessage.entities });\n    }\n    const amountToConvert = starGift?.starsToConvert;\n\n    if (starGift.isSaved) {\n      return lang(starGift.savedId ? 'ActionStarGiftChannelDisplaying' : 'ActionStarGiftDisplaying');\n    }\n\n    if (starGift.isUpgraded) {\n      return lang('ActionStarGiftUpgraded');\n    }\n\n    if (message.isOutgoing) {\n      if (amountToConvert) {\n        return lang('ActionStarGiftPeerOutDescription', {\n          peer: targetChatTitle || 'Someone',\n          count: amountToConvert,\n        }, { withNodes: true, pluralValue: amountToConvert });\n      }\n\n      if (starGift.canUpgrade) {\n        return lang('ActionStarGiftPeerOutDescriptionUpgrade', {\n          peer: targetChatTitle || 'Someone',\n        });\n      }\n    }\n\n    if (starGift.isConverted) {\n      return message.isOutgoing\n        ? lang('GiftInfoPeerDescriptionOutConverted', {\n          amount: formatInteger(amountToConvert!),\n          peer: targetChatTitle || 'Chat',\n        }, {\n          pluralValue: amountToConvert!,\n          withNodes: true,\n          withMarkdown: true,\n        })\n        : lang('GiftInfoDescriptionConverted', {\n          amount: formatInteger(amountToConvert!),\n        }, {\n          pluralValue: amountToConvert!,\n          withNodes: true,\n          withMarkdown: true,\n        });\n    }\n\n    if (amountToConvert) {\n      return lang('ActionStarGiftDescription2', {\n        count: amountToConvert,\n      }, { withNodes: true, pluralValue: amountToConvert });\n    }\n\n    if (starGift.canUpgrade) {\n      return lang('ActionStarGiftDescriptionUpgrade');\n    }\n\n    return undefined;\n  }\n\n  function renderStarGift() {\n    const starGift = message.content.action?.starGift as ApiMessageActionStarGift;\n    if (!starGift || starGift.gift.type !== 'starGift') return undefined;\n\n    return (\n      <span\n        className=\"action-message-gift action-message-centered\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handleStarGiftClick}\n      >\n\n        <AnimatedIconFromSticker\n          sticker={starGift.gift.sticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n          size={STAR_GIFT_STICKER_SIZE}\n        />\n\n        {renderStarGiftUserCaption()}\n        <div className=\"action-message-gift-subtitle\">\n          {renderStarGiftUserDescription()}\n        </div>\n\n        <div className=\"action-message-button\">\n          <Sparkles preset=\"button\" />\n          {starGift.alreadyPaidUpgradeStars && (!message.isOutgoing || targetUsers?.[0]?.isSelf)\n            ? lang('ActionStarGiftUnpack') : oldLang('ActionGiftPremiumView')}\n        </div>\n        {starGift.gift.availabilityTotal && (\n          <GiftRibbon\n            color={patternColor || 'blue'}\n            text={oldLang('Gift2Limited1OfRibbon', formatIntegerCompact(starGift.gift.availabilityTotal))}\n          />\n        )}\n      </span>\n    );\n  }\n\n  function renderStarGiftUnique() {\n    const starGift = message.content.action?.starGift;\n    if (!starGift || starGift.gift.type !== 'starGiftUnique') return undefined;\n\n    const sticker = getStickerFromGift(starGift.gift)!;\n    const attributes = getGiftAttributes(starGift.gift);\n    const { backdrop, pattern, model } = attributes || {};\n\n    if (!backdrop || !pattern || !model) return undefined;\n\n    const backgroundColors = [backdrop.centerColor, backdrop.edgeColor];\n\n    const adaptedPatternColor = `${backdrop.patternColor.slice(0, 7)}55`;\n\n    return (\n      <span\n        className=\"action-message-gift action-message-centered action-message-unique\"\n        tabIndex={0}\n        role=\"button\"\n        style={`--pattern-color: ${adaptedPatternColor}`}\n        onClick={handleStarGiftClick}\n      >\n        <div className=\"action-message-unique-background-wrapper\">\n          <RadialPatternBackground\n            className=\"action-message-unique-background\"\n            backgroundColors={backgroundColors}\n            patternColor={backdrop.patternColor}\n            patternIcon={pattern.sticker}\n            clearBottomSector\n          />\n        </div>\n        <AnimatedIconFromSticker\n          sticker={sticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n          size={STAR_GIFT_STICKER_SIZE}\n        />\n        {renderStarGiftUserCaption()}\n        <div className=\"action-message-unique-title\" style={`color: ${backdrop.textColor}`}>\n          {starGift.gift.title} #{starGift.gift.number}\n        </div>\n        <div className=\"action-message-unique-properties\" style={`color: ${backdrop.textColor}`}>\n          <div className=\"action-message-unique-property\">\n            {oldLang('Gift2AttributeModel')}\n          </div>\n          <div className=\"action-message-unique-value\">\n            {model.name}\n          </div>\n          <div className=\"action-message-unique-property\">\n            {oldLang('Gift2AttributeBackdrop')}\n          </div>\n          <div className=\"action-message-unique-value\">\n            {backdrop.name}\n          </div>\n          <div className=\"action-message-unique-property\">\n            {oldLang('Gift2AttributeSymbol')}\n          </div>\n          <div className=\"action-message-unique-value\">\n            {pattern.name}\n          </div>\n        </div>\n\n        <div className=\"action-message-button\">\n          <Sparkles preset=\"button\" />\n          {oldLang('Gift2UniqueView')}\n        </div>\n        <GiftRibbon\n          color={adaptedPatternColor}\n          text={oldLang('ActionStarGift')}\n        />\n      </span>\n    );\n  }\n\n  function renderPrizeStars() {\n    const isUnclaimed = message.content.action?.isUnclaimed;\n\n    return (\n      <span\n        className=\"action-message-gift action-message-centered\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handlePrizeStarsClick}\n      >\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={starsGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <strong>\n          {oldLang(isUnclaimed ? 'BoostingUnclaimedPrize' : 'BoostingCongratulations')}\n        </strong>\n        <span className=\"action-message-subtitle\">\n          {targetChat && renderText(oldLang(isUnclaimed\n            ? 'BoostingReceivedPrizeFrom' : 'BoostingYouHaveUnclaimedPrize', getChatTitle(oldLang, targetChat)),\n          ['simple_markdown'])}\n        </span>\n        <span className=\"action-message-subtitle\">\n          {renderText(lang(\n            'PrizeCredits2', {\n              count: (\n                <b>{formatInteger(message.content.action?.stars!)}</b>\n              ),\n            }, {\n              withNodes: true,\n              pluralValue: message.content.action?.stars!,\n            },\n          ), ['simple_markdown'])}\n        </span>\n        <span className=\"action-message-button\">{\n          oldLang('ActionGiftPremiumView')\n        }\n        </span>\n      </span>\n    );\n  }\n\n  const className = buildClassName(\n    'ActionMessage message-list-item',\n    isFocused && !noFocusHighlight && 'focused',\n    (isPremiumGift || isSuggestedAvatar || isUpdatedAvatar) && 'centered-action',\n    isContextMenuShown && 'has-menu-open',\n    isLastInList && 'last-in-list',\n    transitionClassNames,\n  );\n\n  return (\n    <div\n      ref={ref}\n      id={getMessageHtmlId(message.id)}\n      className={className}\n      data-message-id={message.id}\n      data-is-pinned={message.isPinned || undefined}\n      onMouseDown={handleMouseDown}\n      onContextMenu={handleContextMenu}\n    >\n      {!isSuggestedAvatar && !isGiftCode && !isJoinedMessage && !isUpdatedAvatar && (\n        <span className=\"action-message-content\" onClick={handleClick}>{renderContent()}</span>\n      )}\n      {isPremiumGift && renderGift()}\n      {isGiftCode && renderGiftCode()}\n      {isStarsGift && renderStarsGift()}\n      {isStarGift && renderStarGift()}\n      {isStarGiftUnique && renderStarGiftUnique()}\n      {isPrizeStars && renderPrizeStars()}\n      {isSuggestedAvatar && (\n        <ActionMessageSuggestedAvatar message={message} renderContent={renderContent} />\n      )}\n      {isUpdatedAvatar && (\n        <ActionMessageUpdatedAvatar message={message} renderContent={renderContent} />\n      )}\n      {isJoinedMessage && <SimilarChannels chatId={targetChatId!} />}\n      {contextMenuAnchor && (\n        <ContextMenuContainer\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          message={message}\n          messageListType=\"thread\"\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        />\n      )}\n      {withServiceReactions && (\n        <Reactions\n          isOutside\n          message={message!}\n          threadId={threadId}\n          observeIntersection={observeIntersectionForPlaying}\n          isCurrentUserPremium={isCurrentUserPremium}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, threadId }): StateProps => {\n    const {\n      chatId, senderId, content,\n    } = message;\n\n    const { targetUserIds, targetChatId } = content.action || {};\n    const targetMessageId = getMessageReplyInfo(message)?.replyToMsgId;\n    const targetMessage = targetMessageId\n      ? selectChatMessage(global, chatId, targetMessageId)\n      : undefined;\n\n    const theme = selectTheme(global);\n    const {\n      patternColor,\n    } = global.settings.themes[theme] || {};\n\n    const isFocused = threadId ? selectIsMessageFocused(global, message, threadId) : false;\n    const {\n      direction: focusDirection,\n      noHighlight: noFocusHighlight,\n    } = (isFocused && selectTabState(global).focusedMessage) || {};\n\n    const senderUser = selectUser(global, senderId || chatId);\n    const senderChat = selectChat(global, chatId);\n\n    const targetChat = targetChatId ? selectChat(global, targetChatId) : undefined;\n\n    const giftDuration = content.action?.months;\n    const premiumGiftSticker = selectGiftStickerForDuration(global, giftDuration);\n\n    const starCount = content.action?.stars;\n    const starsGiftSticker = selectGiftStickerForStars(global, starCount);\n\n    const topic = selectTopicFromMessage(global, message);\n\n    return {\n      senderUser,\n      senderChat,\n      targetChat,\n      targetChatId,\n      targetUserIds,\n      targetMessage,\n      isFocused,\n      premiumGiftSticker,\n      starsGiftSticker,\n      topic,\n      patternColor,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      ...(isFocused && {\n        focusDirection,\n        noFocusHighlight,\n      }),\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      currentUserId: global.currentUserId,\n    };\n  },\n)(ActionMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ContextMenuContainer';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ContextMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ContextMenuContainer = useModuleLoader(Bundles.Extra, 'ContextMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ContextMenuContainer ? <ContextMenuContainer {...props} /> : undefined;\n};\n\nexport default ContextMenuContainerAsync;\n","import { useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { addExtraClass } from '../../../../lib/teact/teact-dom';\n\nimport type { FocusDirection, ScrollTargetPosition } from '../../../../types';\n\nimport { SCROLL_MAX_DISTANCE } from '../../../../config';\nimport {\n  requestForcedReflow, requestMeasure, requestMutation,\n} from '../../../../lib/fasterdom/fasterdom';\nimport animateScroll from '../../../../util/animateScroll';\n\n// This is used when the viewport was replaced.\nconst BOTTOM_FOCUS_OFFSET = 500;\nconst RELOCATED_FOCUS_OFFSET = SCROLL_MAX_DISTANCE;\nconst FOCUS_MARGIN = 20;\n\nexport default function useFocusMessage({\n  elementRef,\n  chatId,\n  isFocused,\n  focusDirection,\n  noFocusHighlight,\n  isResizingContainer,\n  isJustAdded,\n  isQuote,\n  scrollTargetPosition,\n}: {\n  elementRef: { current: HTMLDivElement | null };\n  chatId: string;\n  isFocused?: boolean;\n  focusDirection?: FocusDirection;\n  noFocusHighlight?: boolean;\n  isResizingContainer?: boolean;\n  isJustAdded?: boolean;\n  isQuote?: boolean;\n  scrollTargetPosition?: ScrollTargetPosition;\n}) {\n  const isRelocatedRef = useRef(!isJustAdded);\n\n  useLayoutEffect(() => {\n    const isRelocated = isRelocatedRef.current;\n    isRelocatedRef.current = false;\n\n    if (isFocused && elementRef.current) {\n      const messagesContainer = elementRef.current.closest<HTMLDivElement>('.MessageList')!;\n      // `noFocusHighlight` is always called with “scroll-to-bottom” buttons\n      const isToBottom = noFocusHighlight;\n      const scrollPosition = scrollTargetPosition || isToBottom ? 'end' : 'centerOrTop';\n\n      const exec = () => {\n        const maxDistance = focusDirection !== undefined\n          ? (isToBottom ? BOTTOM_FOCUS_OFFSET : RELOCATED_FOCUS_OFFSET) : undefined;\n\n        const result = animateScroll({\n          container: messagesContainer,\n          element: elementRef.current!,\n          position: scrollPosition,\n          margin: FOCUS_MARGIN,\n          maxDistance,\n          forceDirection: focusDirection,\n          forceNormalContainerHeight: isResizingContainer,\n          shouldReturnMutationFn: true,\n        });\n\n        if (isQuote) {\n          const firstQuote = elementRef.current!.querySelector<HTMLSpanElement>('.is-quote');\n          if (firstQuote) {\n            requestMutation(() => {\n              addExtraClass(firstQuote, 'animate');\n            });\n          }\n        }\n\n        return result;\n      };\n\n      if (isRelocated) {\n        // We need this to override scroll setting from Message List layout effect\n        requestForcedReflow(exec);\n      } else {\n        requestMeasure(() => {\n          requestMutation(exec()!);\n        });\n      }\n    }\n  }, [\n    elementRef, chatId, isFocused, focusDirection, noFocusHighlight, isResizingContainer, isQuote, scrollTargetPosition,\n  ]);\n}\n","import React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiReaction, ApiReactionPaid } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_ANDROID, IS_IOS } from '../../../util/windowEnvironment';\nimport { LOCAL_TGS_URLS } from '../helpers/animatedAssets';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport AnimatedIcon from '../AnimatedIcon';\nimport StarIcon from '../icons/StarIcon';\n\nimport styles from './ReactionAnimatedEmoji.module.scss';\n\ntype OwnProps = {\n  containerId: string;\n  reaction: ApiReactionPaid;\n  className?: string;\n  size?: number;\n  effectSize?: number;\n  localAmount?: number;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  activeReactions?: ApiReaction[];\n  withEffects?: boolean;\n};\n\nconst ICON_SIZE = 1.5 * REM;\nconst EFFECT_SIZE = 6.5 * REM;\nconst MAX_EFFECT_COUNT = (IS_IOS || IS_ANDROID) ? 2 : 5;\nconst QUALITY = (IS_IOS || IS_ANDROID) ? 2 : 3;\n\nconst PaidReactionEmoji = ({\n  containerId,\n  reaction,\n  className,\n  size = ICON_SIZE,\n  effectSize = EFFECT_SIZE,\n  activeReactions,\n  localAmount,\n  withEffects,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { stopActiveReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const effectRef = useRef<HTMLDivElement>(null);\n\n  const [effectsIds, setEffectsIds] = useState<number[]>([]);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const activeReaction = useMemo(() => (\n    activeReactions?.find((active) => isSameReaction(active, reaction))\n  ), [activeReactions, reaction]);\n\n  const shouldPlayEffect = Boolean(\n    withEffects && activeReaction,\n  );\n  const canAddMoreEffects = effectsIds.length < MAX_EFFECT_COUNT;\n\n  useEffectWithPrevDeps(([prevLocalAmount]) => {\n    if (!shouldPlayEffect) {\n      setEffectsIds([]);\n      return;\n    }\n\n    if (!localAmount || localAmount <= (prevLocalAmount || 0)) {\n      return;\n    }\n\n    if (canAddMoreEffects) {\n      setEffectsIds((prev) => [...prev, Date.now()]);\n    }\n  }, [localAmount, canAddMoreEffects, shouldPlayEffect]);\n\n  const {\n    shouldRender: shouldRenderEffect,\n  } = useShowTransition({\n    ref: effectRef,\n    noMountTransition: true,\n    isOpen: shouldPlayEffect,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  const handleEnded = useLastCallback(() => {\n    const newEffectsIds = effectsIds.slice(1);\n    setEffectsIds(newEffectsIds);\n    if (!newEffectsIds.length) {\n      stopActiveReaction({ containerId, reaction });\n    }\n  });\n\n  const rootClassName = buildClassName(\n    styles.root,\n    shouldRenderEffect && styles.animating,\n    className,\n  );\n\n  return (\n    <div className={rootClassName} ref={ref} teactFastList>\n      <StarIcon key=\"icon\" type=\"gold\" size=\"adaptive\" style={`width: ${size}px; height: ${size}px`} />\n      {shouldRenderEffect && effectsIds.map((id) => (\n        <AnimatedIcon\n          key={id}\n          ref={effectRef}\n          className={styles.effect}\n          size={effectSize}\n          tgsUrl={LOCAL_TGS_URLS.StarReactionEffect}\n          play={isIntersecting}\n          noLoop\n          forceAlways\n          nonInteractive\n          quality={QUALITY}\n          onEnded={handleEnded}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { containerId }) => {\n    const { activeReactions } = selectTabState(global);\n\n    const withEffects = selectPerformanceSettingsValue(global, 'reactionEffects');\n\n    return {\n      activeReactions: activeReactions?.[containerId],\n      withEffects,\n    };\n  },\n)(PaidReactionEmoji));\n","import React, { memo, useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiPeer, ApiReaction, ApiReactionCount,\n} from '../../../../api/types';\nimport type { GlobalState } from '../../../../global/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { isReactionChosen } from '../../../../global/helpers';\nimport buildClassName from '../../../../util/buildClassName';\nimport { formatIntegerCompact } from '../../../../util/textFormat';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useSelector from '../../../../hooks/data/useSelector';\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport usePrevious from '../../../../hooks/usePrevious';\nimport useShowTransition from '../../../../hooks/useShowTransition';\n\nimport AnimatedCounter from '../../../common/AnimatedCounter';\nimport AvatarList from '../../../common/AvatarList';\nimport PaidReactionEmoji from '../../../common/reactions/PaidReactionEmoji';\nimport ReactionAnimatedEmoji from '../../../common/reactions/ReactionAnimatedEmoji';\nimport Sparkles from '../../../common/Sparkles';\nimport Button from '../../../ui/Button';\n\nimport styles from './ReactionButton.module.scss';\n\nconst REACTION_SIZE = 1.25 * REM;\nconst MAX_SCALE = 3;\n\ntype OwnProps = {\n  chatId: string;\n  messageId: number;\n  reaction: ApiReactionCount;\n  containerId: string;\n  isOwnMessage?: boolean;\n  recentReactors?: ApiPeer[];\n  className?: string;\n  chosenClassName?: string;\n  observeIntersection?: ObserveFn;\n  onClick?: (reaction: ApiReaction) => void;\n  onPaidClick?: (count: number) => void;\n};\n\nfunction selectStarsState(global: GlobalState) {\n  return global.stars;\n}\n\nconst ReactionButton = ({\n  reaction,\n  containerId,\n  isOwnMessage,\n  recentReactors,\n  className,\n  chosenClassName,\n  chatId,\n  messageId,\n  observeIntersection,\n  onClick,\n  onPaidClick,\n}: OwnProps) => {\n  const {\n    openStarsBalanceModal,\n    resetLocalPaidReactions,\n    openPaidReactionModal,\n    requestWave,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLButtonElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const counterRef = useRef<HTMLSpanElement>(null);\n  const animationRef = useRef<Animation>();\n\n  const isPaid = reaction.reaction.type === 'paid';\n\n  const starsState = useSelector(selectStarsState);\n  const areStarsLoaded = Boolean(starsState);\n\n  const handlePaidClick = useLastCallback((count = 1) => {\n    onPaidClick?.(count);\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    if (reaction.reaction.type === 'paid') {\n      e.stopPropagation(); // Prevent default message double click behavior\n      handlePaidClick();\n\n      return;\n    }\n\n    onClick?.(reaction.reaction);\n  });\n\n  const {\n    isContextMenuOpen,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, reaction.reaction.type !== 'paid', undefined, undefined, undefined, true);\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      openPaidReactionModal({\n        chatId,\n        messageId,\n      });\n\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, isContextMenuOpen, chatId, messageId]);\n\n  useEffectWithPrevDeps(([prevReaction]) => {\n    const amount = reaction.localAmount;\n    const button = ref.current;\n    if (!amount || !button || amount === prevReaction?.localAmount) return;\n\n    if (areStarsLoaded && amount > starsState.balance.amount) {\n      openStarsBalanceModal({\n        originReaction: {\n          chatId,\n          messageId,\n          amount,\n        },\n      });\n      resetLocalPaidReactions({\n        chatId,\n        messageId,\n      });\n      return;\n    }\n\n    if (reaction.localAmount) {\n      const { left, top } = button.getBoundingClientRect();\n      const startX = left + button.offsetWidth / 2;\n      const startY = top + button.offsetHeight / 2;\n      requestWave({ startX, startY });\n    }\n\n    const currentScale = Number(getComputedStyle(button).scale) || 1;\n    animationRef.current?.cancel();\n    // Animate scaling by 20%, and then returning to 1\n    animationRef.current = button.animate([\n      { scale: currentScale },\n      { scale: Math.min(currentScale * 1.2, MAX_SCALE), offset: 0.2 },\n      { scale: 1 },\n    ], {\n      duration: 500 * currentScale,\n      easing: 'ease-out',\n    });\n  }, [reaction, starsState?.balance, areStarsLoaded, chatId, messageId]);\n\n  const prevAmount = usePrevious(reaction.localAmount);\n\n  const {\n    shouldRender: shouldRenderPaidCounter,\n  } = useShowTransition({\n    isOpen: Boolean(reaction.localAmount),\n    ref: counterRef,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  return (\n    <Button\n      className={buildClassName(\n        styles.root,\n        isOwnMessage && styles.own,\n        isPaid && styles.paid,\n        isReactionChosen(reaction) && styles.chosen,\n        isReactionChosen(reaction) && chosenClassName,\n        className,\n      )}\n      size=\"tiny\"\n      ref={ref}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n      onClick={handleClick}\n    >\n      {reaction.reaction.type === 'paid' ? (\n        <>\n          <Sparkles preset=\"button\" />\n          <PaidReactionEmoji\n            className={styles.animatedEmoji}\n            containerId={containerId}\n            reaction={reaction.reaction}\n            size={REACTION_SIZE}\n            localAmount={reaction.localAmount}\n            observeIntersection={observeIntersection}\n          />\n          {shouldRenderPaidCounter && (\n            <AnimatedCounter\n              ref={counterRef}\n              text={`+${formatIntegerCompact(reaction.localAmount || prevAmount!)}`}\n              className={styles.paidCounter}\n            />\n          )}\n        </>\n      ) : (\n        <ReactionAnimatedEmoji\n          className={styles.animatedEmoji}\n          containerId={containerId}\n          reaction={reaction.reaction}\n          size={REACTION_SIZE}\n          observeIntersection={observeIntersection}\n        />\n      )}\n      {recentReactors?.length ? (\n        <AvatarList size=\"mini\" peers={recentReactors} />\n      ) : (\n        <AnimatedCounter\n          text={formatIntegerCompact(reaction.count + (reaction.localAmount || 0))}\n          className={styles.counter}\n        />\n      )}\n    </Button>\n  );\n};\n\nexport default memo(ReactionButton);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../../global';\n\nimport type {\n  ApiMessage,\n  ApiPeer,\n  ApiReaction,\n  ApiReactionKey,\n  ApiSavedReactionTag,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\nimport type { ThreadId } from '../../../../types';\n\nimport { getReactionKey, isReactionChosen } from '../../../../global/helpers';\nimport { selectPeer } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { getMessageKey } from '../../../../util/keys/messageKey';\n\nimport useEffectOnce from '../../../../hooks/useEffectOnce';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ReactionButton from './ReactionButton';\nimport SavedTagButton from './SavedTagButton';\n\nimport './Reactions.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  threadId?: ThreadId;\n  isOutside?: boolean;\n  maxWidth?: number;\n  metaChildren?: React.ReactNode;\n  tags?: Record<ApiReactionKey, ApiSavedReactionTag>;\n  isCurrentUserPremium?: boolean;\n  observeIntersection?: ObserveFn;\n  noRecentReactors?: boolean;\n};\n\nconst MAX_RECENT_AVATARS = 3;\nconst PAID_SEND_DELAY = 5000;\n\nconst Reactions: FC<OwnProps> = ({\n  message,\n  threadId,\n  isOutside,\n  maxWidth,\n  metaChildren,\n  observeIntersection,\n  noRecentReactors,\n  isCurrentUserPremium,\n  tags,\n}) => {\n  const {\n    toggleReaction,\n    addLocalPaidReaction,\n    updateMiddleSearch,\n    performMiddleSearch,\n    openPremiumModal,\n    resetLocalPaidReactions,\n    showNotification,\n  } = getActions();\n  const lang = useOldLang();\n\n  const { results, areTags, recentReactions } = message.reactions!;\n  const withServiceReactions = Boolean(message.areReactionsPossible && message.reactions);\n\n  const totalCount = useMemo(() => (\n    results.reduce((acc, reaction) => acc + reaction.count, 0)\n  ), [results]);\n\n  const recentReactorsByReactionKey = useMemo(() => {\n    const global = getGlobal();\n\n    return recentReactions?.reduce((acc, recentReaction) => {\n      const { reaction, peerId } = recentReaction;\n      const key = getReactionKey(reaction);\n      const peer = selectPeer(global, peerId);\n\n      if (!peer) return acc;\n\n      const peers = acc[key] || [];\n      peers.push(peer);\n      acc[key] = peers;\n      return acc;\n    }, {} as Record<ApiReactionKey, ApiPeer[]>);\n  }, [recentReactions]);\n\n  const props = useMemo(() => {\n    const messageKey = getMessageKey(message);\n    return results.map((reaction) => {\n      const reactionKey = getReactionKey(reaction.reaction);\n      const recentReactors = recentReactorsByReactionKey?.[reactionKey];\n      const shouldHideRecentReactors = totalCount > MAX_RECENT_AVATARS || noRecentReactors;\n      const tag = areTags ? tags?.[reactionKey] : undefined;\n\n      return {\n        reaction,\n        reactionKey,\n        messageKey,\n        recentReactors: !shouldHideRecentReactors ? recentReactors : undefined,\n        isChosen: isReactionChosen(reaction),\n        tag,\n      };\n    });\n  }, [message, noRecentReactors, recentReactorsByReactionKey, results, areTags, tags, totalCount]);\n\n  const handleClick = useLastCallback((reaction: ApiReaction) => {\n    if (areTags) {\n      if (!isCurrentUserPremium) {\n        openPremiumModal({\n          initialSection: 'saved_tags',\n        });\n        return;\n      }\n\n      updateMiddleSearch({ chatId: message.chatId, threadId, update: { savedTag: reaction } });\n      performMiddleSearch({ chatId: message.chatId, threadId });\n      return;\n    }\n\n    toggleReaction({\n      chatId: message.chatId,\n      messageId: message.id,\n      reaction,\n    });\n  });\n\n  const paidLocalCount = useMemo(() => results.find((r) => r.reaction.type === 'paid')?.localAmount || 0, [results]);\n\n  const handlePaidClick = useLastCallback((count: number) => {\n    addLocalPaidReaction({\n      chatId: message.chatId,\n      messageId: message.id,\n      count,\n    });\n  });\n\n  useEffect(() => {\n    if (!paidLocalCount) return;\n\n    showNotification({\n      localId: getMessageKey(message),\n      title: lang('StarsSentTitle'),\n      message: lang('StarsSentText', paidLocalCount),\n      actionText: lang('StarsSentUndo'),\n      cacheBreaker: paidLocalCount.toString(),\n      action: {\n        action: 'resetLocalPaidReactions',\n        payload: { chatId: message.chatId, messageId: message.id },\n      },\n      dismissAction: {\n        action: 'sendPaidReaction',\n        payload: { chatId: message.chatId, messageId: message.id },\n      },\n      duration: PAID_SEND_DELAY,\n      shouldShowTimer: true,\n      disableClickDismiss: true,\n      icon: 'star',\n    });\n  }, [lang, message, paidLocalCount]);\n\n  const handleRemoveReaction = useLastCallback((reaction: ApiReaction) => {\n    toggleReaction({\n      chatId: message.chatId,\n      messageId: message.id,\n      reaction,\n    });\n  });\n\n  // Reset paid reactions on unmount\n  useEffectOnce(() => () => {\n    resetLocalPaidReactions({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n  });\n\n  return (\n    <div\n      className={buildClassName(\n        'Reactions',\n        isOutside && 'is-outside',\n        withServiceReactions && 'is-service',\n      )}\n      style={maxWidth ? `max-width: ${maxWidth}px` : undefined}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {props.map(({\n        reaction, recentReactors, messageKey, reactionKey, isChosen, tag,\n      }) => (\n        areTags ? (\n          <SavedTagButton\n            key={reactionKey}\n            className=\"message-reaction\"\n            chosenClassName=\"chosen\"\n            containerId={messageKey}\n            isOwnMessage={message.isOutgoing}\n            isChosen={isChosen}\n            reaction={reaction.reaction as ApiReaction}\n            tag={tag}\n            withContextMenu={isCurrentUserPremium}\n            onClick={handleClick}\n            onRemove={handleRemoveReaction}\n            observeIntersection={observeIntersection}\n          />\n        ) : (\n          <ReactionButton\n            key={reactionKey}\n            chatId={message.chatId}\n            messageId={message.id}\n            className=\"message-reaction\"\n            chosenClassName=\"chosen\"\n            containerId={messageKey}\n            isOwnMessage={message.isOutgoing}\n            recentReactors={recentReactors}\n            reaction={reaction}\n            onClick={handleClick}\n            onPaidClick={handlePaidClick}\n            observeIntersection={observeIntersection}\n          />\n        )\n      ))}\n      {metaChildren}\n    </div>\n  );\n};\n\nexport default memo(Reactions);\n","// extracted by mini-css-extract-plugin\nexport default {\"subtitle\":\"cGrbcqD_\"};","import React, { memo, useState } from '../../../lib/teact/teact';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport InputText from '../../ui/InputText';\nimport Modal from '../../ui/Modal';\n\nimport styles from './PromptDialog.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  title: string;\n  subtitle?: React.ReactNode;\n  placeholder: string;\n  submitText?: string;\n  maxLength?: number;\n  initialValue?: string;\n  onClose: NoneToVoidFunction;\n  onSubmit: (text: string) => void;\n};\n\nconst PromptDialog = ({\n  isOpen,\n  title,\n  subtitle,\n  placeholder,\n  submitText,\n  maxLength,\n  initialValue = '',\n  onClose,\n  onSubmit,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const [text, setText] = useState(initialValue);\n\n  const handleTextChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setText(e.target.value);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    onSubmit(text);\n  });\n\n  return (\n    <Modal\n      className=\"narrow\"\n      title={title}\n      isOpen={isOpen}\n      onClose={onClose}\n      isSlim\n    >\n      {Boolean(subtitle) && (\n        <div className={styles.subtitle}>\n          {subtitle}\n        </div>\n      )}\n      <InputText\n        placeholder={placeholder}\n        value={text}\n        onChange={handleTextChange}\n        maxLength={maxLength}\n        teactExperimentControlled\n      />\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" onClick={handleSubmit}>\n          {submitText || lang('Save')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(PromptDialog);\n","import React, { memo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiReaction,\n  ApiSavedReactionTag,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ReactionAnimatedEmoji from '../../../common/reactions/ReactionAnimatedEmoji';\nimport PromptDialog from '../../../modals/prompt/PromptDialog';\nimport Button from '../../../ui/Button';\nimport Menu from '../../../ui/Menu';\nimport MenuItem from '../../../ui/MenuItem';\n\nimport styles from './ReactionButton.module.scss';\n\nconst REACTION_SIZE = 1.25 * REM;\nconst TITLE_MAX_LENGTH = 15;\nconst LOOP_LIMIT = 1;\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  tag?: ApiSavedReactionTag;\n  containerId: string;\n  isChosen?: boolean;\n  isOwnMessage?: boolean;\n  withCount?: boolean;\n  className?: string;\n  chosenClassName?: string;\n  isDisabled?: boolean;\n  withContextMenu?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (reaction: ApiReaction) => void;\n  onRemove?: (reaction: ApiReaction) => void;\n};\n\nconst SavedTagButton = ({\n  reaction,\n  tag,\n  containerId,\n  isChosen,\n  isOwnMessage,\n  className,\n  chosenClassName,\n  withCount,\n  isDisabled,\n  withContextMenu,\n  observeIntersection,\n  onClick,\n  onRemove,\n}: OwnProps) => {\n  const { editSavedReactionTag } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLButtonElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const [isRenamePromptOpen, openRenamePrompt, closeRenamePrompt] = useFlag();\n\n  const { title, count } = tag || {};\n  const hasText = Boolean(title || (withCount && count));\n\n  const handleClick = useLastCallback(() => {\n    onClick?.(reaction);\n  });\n\n  const handleRemoveClick = useLastCallback(() => {\n    onRemove?.(reaction);\n  });\n\n  const handleRenameTag = useLastCallback((newTitle: string) => {\n    editSavedReactionTag({\n      reaction,\n      title: newTitle,\n    });\n    closeRenamePrompt();\n  });\n\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, !withContextMenu, undefined, undefined, undefined, true);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getLayout = useLastCallback(() => ({ withPortal: true, shouldAvoidNegativePosition: true }));\n\n  if (withCount && count === 0) {\n    return undefined;\n  }\n\n  return (\n    <Button\n      className={buildClassName(\n        styles.root,\n        styles.tag,\n        isOwnMessage && styles.own,\n        isChosen && styles.chosen,\n        isChosen && chosenClassName,\n        isDisabled && styles.disabled,\n        className,\n      )}\n      size=\"tiny\"\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n      ref={ref}\n    >\n      <ReactionAnimatedEmoji\n        className={styles.animatedEmoji}\n        containerId={containerId}\n        reaction={reaction}\n        loopLimit={LOOP_LIMIT}\n        size={REACTION_SIZE}\n        observeIntersection={observeIntersection}\n      />\n      {hasText && (\n        <span className={styles.tagText}>\n          {title && <span>{title}</span>}\n          {withCount && <span>{count}</span>}\n        </span>\n      )}\n      <svg\n        className={styles.tail}\n        width=\"15\"\n        height=\"30\"\n        viewBox=\"0 0 15 30\"\n      >\n        <path className={styles.tailFill} d=\"m 0,30 c 3.1855,0 6.1803,-1.5176 8.0641,-4.0864 l 5.835,-7.9568 c 1.2906,-1.7599 1.2906,-4.1537 0,-5.9136 L 8.0641,4.08636 C 6.1803,1.51761 3.1855,0 0,0\" />\n      </svg>\n      {withContextMenu && (\n        <PromptDialog\n          isOpen={isRenamePromptOpen}\n          maxLength={TITLE_MAX_LENGTH}\n          title={lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          subtitle={lang('SavedTagLabelTagText')}\n          placeholder={lang('SavedTagLabelPlaceholder')}\n          initialValue={tag?.title}\n          onClose={closeRenamePrompt}\n          onSubmit={handleRenameTag}\n        />\n      )}\n      {withContextMenu && contextMenuAnchor && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          <MenuItem icon=\"tag-filter\" onClick={handleClick}>\n            {lang('SavedTagFilterByTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-name\" onClick={openRenamePrompt}>\n            {lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-crossed\" destructive onClick={handleRemoveClick}>\n            {lang('SavedTagRemoveTag')}\n          </MenuItem>\n        </Menu>\n      )}\n    </Button>\n  );\n};\n\nexport default memo(SavedTagButton);\n","import type {\n  ApiInputInvoice,\n  ApiInputSavedStarGift,\n  ApiMessage,\n  ApiRequestInputInvoice,\n  ApiRequestInputSavedStarGift,\n  ApiStarsAmount,\n  ApiStarsTransaction,\n  ApiStarsTransactionPeer,\n  ApiStarsTransactionPeerPeer,\n} from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { LangFn } from '../../util/localization';\nimport type { GlobalState } from '../types';\n\nimport arePropsShallowEqual from '../../util/arePropsShallowEqual';\nimport { selectChat, selectPeer, selectUser } from '../selectors';\n\nexport function getRequestInputInvoice<T extends GlobalState>(\n  global: T, inputInvoice: ApiInputInvoice,\n): ApiRequestInputInvoice | undefined {\n  if (inputInvoice.type === 'slug') return inputInvoice;\n\n  if (inputInvoice.type === 'stargift') {\n    const {\n      peerId, shouldHideName, giftId, message, shouldUpgrade,\n    } = inputInvoice;\n    const peer = selectPeer(global, peerId);\n\n    if (!peer) return undefined;\n\n    return {\n      type: 'stargift',\n      peer,\n      shouldHideName,\n      giftId,\n      message,\n      shouldUpgrade,\n    };\n  }\n\n  if (inputInvoice.type === 'starsgift') {\n    const {\n      userId, stars, amount, currency,\n    } = inputInvoice;\n    const user = selectUser(global, userId);\n\n    if (!user) return undefined;\n\n    return {\n      type: 'stars',\n      purpose: {\n        type: 'starsgift',\n        user,\n        stars,\n        amount,\n        currency,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'stars') {\n    const {\n      stars, amount, currency,\n    } = inputInvoice;\n\n    return {\n      type: 'stars',\n      purpose: {\n        type: 'stars',\n        stars,\n        amount,\n        currency,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'chatInviteSubscription') {\n    const { hash } = inputInvoice;\n\n    return {\n      type: 'chatInviteSubscription',\n      hash,\n    };\n  }\n\n  if (inputInvoice.type === 'message') {\n    const chat = selectChat(global, inputInvoice.chatId);\n    if (!chat) {\n      return undefined;\n    }\n    return {\n      type: 'message',\n      chat,\n      messageId: inputInvoice.messageId,\n    };\n  }\n\n  if (inputInvoice.type === 'giftcode') {\n    const {\n      userIds, boostChannelId, amount, currency, option, message,\n    } = inputInvoice;\n    const users = userIds.map((id) => selectUser(global, id)).filter(Boolean);\n    const boostChannel = boostChannelId ? selectChat(global, boostChannelId) : undefined;\n\n    return {\n      type: 'giveaway',\n      option,\n      purpose: {\n        type: 'giftcode',\n        amount,\n        currency,\n        users,\n        boostChannel,\n        message,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'starsgiveaway') {\n    const {\n      chatId, additionalChannelIds, amount, currency, untilDate, areWinnersVisible, countries,\n      isOnlyForNewSubscribers, prizeDescription, stars, users,\n    } = inputInvoice;\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return undefined;\n    }\n    const additionalChannels = additionalChannelIds?.map((id) => selectChat(global, id)).filter(Boolean);\n\n    return {\n      type: 'starsgiveaway',\n      purpose: {\n        type: 'starsgiveaway',\n        amount,\n        currency,\n        chat,\n        additionalChannels,\n        untilDate,\n        areWinnersVisible,\n        countries,\n        isOnlyForNewSubscribers,\n        prizeDescription,\n        stars,\n        users,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'giveaway') {\n    const {\n      chatId, additionalChannelIds, amount, currency, option, untilDate, areWinnersVisible, countries,\n      isOnlyForNewSubscribers, prizeDescription,\n    } = inputInvoice;\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return undefined;\n    }\n    const additionalChannels = additionalChannelIds?.map((id) => selectChat(global, id)).filter(Boolean);\n\n    return {\n      type: 'giveaway',\n      option,\n      purpose: {\n        type: 'giveaway',\n        amount,\n        currency,\n        chat,\n        additionalChannels,\n        untilDate,\n        areWinnersVisible,\n        countries,\n        isOnlyForNewSubscribers,\n        prizeDescription,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'stargiftUpgrade') {\n    const { inputSavedGift, shouldKeepOriginalDetails } = inputInvoice;\n    const savedGift = getRequestInputSavedStarGift(global, inputSavedGift);\n    if (!savedGift) return undefined;\n\n    return {\n      type: 'stargiftUpgrade',\n      inputSavedGift: savedGift,\n      shouldKeepOriginalDetails,\n    };\n  }\n\n  if (inputInvoice.type === 'stargiftTransfer') {\n    const { inputSavedGift, recipientId } = inputInvoice;\n    const savedGift = getRequestInputSavedStarGift(global, inputSavedGift);\n    const peer = selectPeer(global, recipientId);\n    if (!savedGift || !peer) return undefined;\n\n    return {\n      type: 'stargiftTransfer',\n      inputSavedGift: savedGift,\n      recipient: peer,\n    };\n  }\n\n  return undefined;\n}\n\nexport function getRequestInputSavedStarGift<T extends GlobalState>(\n  global: T, inputGift: ApiInputSavedStarGift,\n): ApiRequestInputSavedStarGift | undefined {\n  if (inputGift.type === 'user') return inputGift;\n\n  if (inputGift.type === 'chat') {\n    const chat = selectChat(global, inputGift.chatId);\n    if (!chat) return undefined;\n\n    return {\n      type: 'chat',\n      chat,\n      savedId: inputGift.savedId,\n    };\n  }\n\n  return undefined;\n}\n\nexport function buildStarsTransactionCustomPeer(\n  peer: Exclude<ApiStarsTransactionPeer, ApiStarsTransactionPeerPeer>,\n): CustomPeer {\n  if (peer.type === 'appStore') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.AppleTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.AppleTopUp.Subtitle',\n      peerColorId: 5,\n    };\n  }\n\n  if (peer.type === 'playMarket') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.GoogleTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.GoogleTopUp.Subtitle',\n      peerColorId: 3,\n    };\n  }\n\n  if (peer.type === 'fragment') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.FragmentTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.FragmentTopUp.Subtitle',\n      customPeerAvatarColor: '#000000',\n    };\n  }\n\n  if (peer.type === 'premiumBot') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.PremiumBotTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.PremiumBotTopUp.Subtitle',\n      peerColorId: 1,\n      withPremiumGradient: true,\n    };\n  }\n\n  if (peer.type === 'ads') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.TelegramAds.Title',\n      subtitleKey: 'Stars.Intro.Transaction.TelegramAds.Subtitle',\n      peerColorId: 2,\n    };\n  }\n\n  if (peer.type === 'api') {\n    return {\n      avatarIcon: 'bots',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.TelegramBotApi.Title',\n      subtitleKey: 'Stars.Intro.Transaction.TelegramBotApi.Subtitle',\n      peerColorId: 4,\n    };\n  }\n\n  return {\n    avatarIcon: 'star',\n    isCustomPeer: true,\n    titleKey: 'Stars.Intro.Transaction.Unsupported.Title',\n    subtitleKey: 'Stars.Intro.Transaction.Unsupported.Title',\n    peerColorId: 0,\n  };\n}\n\nexport function formatStarsTransactionAmount(lang: LangFn, starsAmount: ApiStarsAmount) {\n  const amount = starsAmount.amount + starsAmount.nanos / 1e9;\n  if (amount < 0) {\n    return `- ${lang.number(Math.abs(amount))}`;\n  }\n\n  return `+ ${lang.number(amount)}`;\n}\n\nexport function formatStarsAmount(lang: LangFn, starsAmount: ApiStarsAmount) {\n  return lang.number(starsAmount.amount + starsAmount.nanos / 1e9);\n}\n\nexport function getStarsTransactionFromGift(message: ApiMessage): ApiStarsTransaction | undefined {\n  const { action } = message.content;\n\n  if (action?.type !== 'giftStars') return undefined;\n\n  const { transactionId, stars } = action;\n\n  return {\n    id: transactionId!,\n    stars: {\n      amount: stars!,\n      nanos: 0,\n    },\n    peer: {\n      type: 'peer',\n      id: message.isOutgoing ? message.chatId : (message.senderId || message.chatId),\n    },\n    date: message.date,\n    isGift: true,\n    isMyGift: message.isOutgoing || undefined,\n  };\n}\n\nexport function getPrizeStarsTransactionFromGiveaway(message: ApiMessage): ApiStarsTransaction | undefined {\n  const { action } = message.content;\n\n  if (action?.type !== 'prizeStars') return undefined;\n\n  const { transactionId, stars, targetChatId } = action;\n\n  return {\n    id: transactionId!,\n    stars: {\n      amount: stars!,\n      nanos: 0,\n    },\n    peer: {\n      type: 'peer',\n      id: targetChatId!,\n    },\n    date: message.date,\n    giveawayPostId: message.id,\n  };\n}\n\nexport function areInputSavedGiftsEqual(one: ApiInputSavedStarGift, two: ApiInputSavedStarGift) {\n  return arePropsShallowEqual(one, two);\n}\n","import type { ApiChat, ApiPeer, ApiUser } from '../../api/types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../../config';\nimport { getTranslationFn } from '../../util/localization';\nimport { prepareSearchWordsForNeedle } from '../../util/searchWords';\nimport { selectChat, selectPeer, selectUser } from '../selectors';\nimport { getGlobal } from '..';\nimport { getChatTitle } from './chats';\nimport { getPeerFullTitle } from './messages';\n\nexport function isApiPeerChat(peer: ApiPeer): peer is ApiChat {\n  return 'title' in peer;\n}\n\nexport function isApiPeerUser(peer: ApiPeer): peer is ApiUser {\n  return !isApiPeerChat(peer);\n}\n\nexport function filterPeersByQuery({\n  ids,\n  query,\n  type = 'peer',\n} : {\n  ids: string[];\n  query: string | undefined;\n  type?: 'chat' | 'user' | 'peer';\n}) {\n  if (!query) {\n    return ids;\n  }\n  const global = getGlobal();\n  const lang = getTranslationFn();\n\n  const searchWords = prepareSearchWordsForNeedle(query);\n\n  const selectorFn = type === 'chat' ? selectChat : type === 'user' ? selectUser : selectPeer;\n\n  return ids.filter((id) => {\n    const peer = selectorFn(global, id);\n    if (!peer) {\n      return false;\n    }\n\n    const localizedTitle = isApiPeerChat(peer)\n      ? getChatTitle(lang, peer)\n      : id === global.currentUserId ? lang('SavedMessages') : undefined;\n    const isFoundInLocalized = localizedTitle ? searchWords(localizedTitle) : undefined;\n\n    const name = getPeerFullTitle(lang, peer);\n\n    return isFoundInLocalized\n      || (name && searchWords(name))\n      || Boolean(peer.usernames?.find(({ username }) => searchWords(username)));\n  });\n}\n\nexport function getPeerTypeKey(peer: ApiPeer) {\n  if (isApiPeerChat(peer)) {\n    if (peer.type === 'chatTypeBasicGroup' || peer.type === 'chatTypeSuperGroup') {\n      return 'ChatList.PeerTypeGroup';\n    }\n\n    if (peer.type === 'chatTypeChannel') {\n      return 'ChatList.PeerTypeChannel';\n    }\n\n    if (peer.type === 'chatTypePrivate') {\n      return 'ChatList.PeerTypeNonContact';\n    }\n\n    return undefined;\n  }\n\n  if (peer.id === SERVICE_NOTIFICATIONS_USER_ID) {\n    return 'ServiceNotifications';\n  }\n\n  if (peer.isSupport) {\n    return 'SupportStatus';\n  }\n\n  if (peer.type && peer.type === 'userTypeBot') {\n    return 'ChatList.PeerTypeBot';\n  }\n\n  if (peer.isContact) {\n    return 'ChatList.PeerTypeContact';\n  }\n\n  return 'ChatList.PeerTypeNonContactUser';\n}\n","import { useEffect } from '../../lib/teact/teact';\n\nimport useLastCallback from '../useLastCallback';\n\nfunction useTimeout(callback: NoneToVoidFunction, delay?: number) {\n  const savedCallback = useLastCallback(callback);\n\n  useEffect(() => {\n    if (typeof delay !== 'number') {\n      return undefined;\n    }\n\n    const id = setTimeout(() => savedCallback(), delay);\n    return () => clearTimeout(id);\n  }, [delay]);\n}\n\nexport default useTimeout;\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../util/windowEnvironment';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useCanvasBlur(\n  dataUri?: string,\n  isDisabled = false,\n  withRaf?: boolean,\n  radius = RADIUS,\n  preferredWidth?: number,\n  preferredHeight?: number,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const isStarted = useRef();\n\n  useSyncEffect(() => {\n    if (!isDisabled) {\n      isStarted.current = false;\n    }\n  }, [dataUri, isDisabled]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!dataUri || !canvas || isDisabled || isStarted.current) {\n      return;\n    }\n\n    isStarted.current = true;\n\n    const img = new Image();\n\n    const processBlur = () => {\n      const width = preferredWidth || img.width;\n      const height = preferredHeight || img.height;\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${radius}px)`;\n        }\n\n        ctx.drawImage(img, -radius * 2, -radius * 2, width + radius * 4, height + radius * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, radius, ITERATIONS);\n        }\n      });\n    };\n\n    img.onload = () => {\n      if (withRaf) {\n        requestMeasure(processBlur);\n      } else {\n        processBlur();\n      }\n    };\n\n    img.src = dataUri;\n  }, [dataUri, isDisabled, preferredHeight, preferredWidth, radius, withRaf]);\n\n  return canvasRef;\n}\n","import { useEffect } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiMessage } from '../api/types';\n\nexport default function useEnsureMessage(\n  chatId: string,\n  messageId?: number,\n  message?: ApiMessage,\n  replyOriginForId?: number,\n  isDisabled?: boolean,\n) {\n  const { loadMessage } = getActions();\n\n  useEffect(() => {\n    if (isDisabled) return;\n    if (messageId && !message) {\n      loadMessage({ chatId, messageId: messageId!, replyOriginForId: replyOriginForId! });\n    }\n  }, [isDisabled, chatId, message, messageId, replyOriginForId]);\n}\n","import { useEffect } from '../lib/teact/teact';\n\nimport {\n  addChatsCountCallback,\n  addOrderedIdsCallback,\n  addUnreadCountersCallback,\n  getChatsCount,\n  getOrderedIds,\n  getUnreadCounters,\n} from '../util/folderManager';\nimport useForceUpdate from './useForceUpdate';\n\nexport function useFolderManagerForOrderedIds(folderId: number) {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addOrderedIdsCallback(folderId, forceUpdate), [folderId, forceUpdate]);\n\n  return getOrderedIds(folderId);\n}\n\nexport function useFolderManagerForUnreadCounters() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadCountersCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadCounters();\n}\n\nexport function useFolderManagerForChatsCount() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addChatsCountCallback(forceUpdate), [forceUpdate]);\n\n  return getChatsCount();\n}\n","import { useEffect } from '../lib/teact/teact';\n\nconst useHorizontalScroll = (\n  containerRef: React.RefObject<HTMLDivElement>,\n  isDisabled?: boolean,\n  shouldPreventDefault = false,\n) => {\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    const container = containerRef.current!;\n\n    function handleScroll(e: WheelEvent) {\n      // Ignore horizontal scroll and let it work natively (e.g. on touchpad)\n      if (!e.deltaX) {\n        container.scrollLeft += e.deltaY / 4;\n        if (shouldPreventDefault) e.preventDefault();\n      }\n    }\n\n    container.addEventListener('wheel', handleScroll, { passive: !shouldPreventDefault });\n\n    return () => {\n      container.removeEventListener('wheel', handleScroll);\n    };\n  }, [containerRef, isDisabled, shouldPreventDefault]);\n};\n\nexport default useHorizontalScroll;\n","import { useRef } from '../lib/teact/teact';\n\n// This is not render-dependent and will never allow previous to match current\nexport default function usePrevious<T extends any>(current: T) {\n  const prevRef = useRef<T>();\n  const lastRef = useRef<T>();\n\n  if (lastRef.current !== current) {\n    prevRef.current = lastRef.current;\n  }\n\n  lastRef.current = current;\n\n  return prevRef.current;\n}\n","import { beginHeavyAnimation, useRef } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport { isAnimatingScroll } from '../util/animateScroll';\nimport useLastCallback from './useLastCallback';\nimport useResizeObserver from './useResizeObserver';\nimport useThrottledCallback from './useThrottledCallback';\n\nconst BOTTOM_FOCUS_SCROLL_THRESHOLD = 5;\nconst THROTTLE_MS = 300;\nconst RESIZE_ANIMATION_DURATION = 400;\n\nfunction useMessageResizeObserver(\n  ref: React.RefObject<HTMLElement> | undefined,\n  shouldFocusOnResize = false,\n) {\n  const {\n    focusLastMessage,\n  } = getActions();\n  const messageHeightRef = useRef(0);\n\n  const handleResize = useLastCallback(\n    (entry) => {\n      const lastHeight = messageHeightRef.current;\n\n      const newHeight = entry.contentRect.height;\n      messageHeightRef.current = newHeight;\n\n      if (isAnimatingScroll() || !lastHeight || newHeight <= lastHeight) return;\n\n      const container = entry.target.closest('.MessageList');\n      if (!container) return;\n\n      beginHeavyAnimation(RESIZE_ANIMATION_DURATION);\n\n      const resizeDiff = newHeight - lastHeight;\n      const { offsetHeight, scrollHeight, scrollTop } = container;\n      const currentScrollBottom = Math.round(scrollHeight - scrollTop - offsetHeight);\n      const previousScrollBottom = currentScrollBottom - resizeDiff;\n\n      if (previousScrollBottom <= BOTTOM_FOCUS_SCROLL_THRESHOLD) {\n        focusLastMessage();\n      }\n    },\n  );\n\n  const throttledResize = useThrottledCallback(handleResize, [handleResize], THROTTLE_MS, false);\n\n  useResizeObserver(ref, throttledResize, !shouldFocusOnResize);\n}\n\nexport default useMessageResizeObserver;\n","import useDebouncedCallback from './useDebouncedCallback';\n\nexport default function useRunDebounced(ms: number, noFirst?: boolean, noLast?: boolean, deps: any = []) {\n  return useDebouncedCallback((cb: NoneToVoidFunction) => {\n    cb();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n","import type { AnimBgColorPoints } from './BaseAnimBackgroundRender';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\n\nimport { BaseAnimBgRender, keyPoints } from './BaseAnimBackgroundRender';\n\nexport const VERTEX_SHADER = `\nattribute vec2 a_position;\n\nvoid main() {\n gl_Position = vec4(a_position, 1, 1);\n}`;\n\nexport const FRAGMENT_SHADER = `\nprecision highp float;\n\nstruct ColorPoint {\n  vec4 color;\n  vec2 pos;\n  vec2 prevPos;\n};\n\nuniform ColorPoint colorPoints[4];\nuniform vec2 resolution;\nuniform float transitionFactor;\n\nvoid main() {\n  vec2 position = gl_FragCoord.xy / resolution.xy;\n\n  position.y = 1.0 - position.y;\n\n  float centerDistanceX = position.x - 0.5;\n  float centerDistanceY = position.y - 0.5;\n  float centerDistance = sqrt(centerDistanceX * centerDistanceX + centerDistanceY * centerDistanceY);\n  float swirlFactor = 0.35 * centerDistance;\n  float theta = swirlFactor * swirlFactor * 0.8 * 8.0;\n  float sinTheta = sin(theta);\n  float cosTheta = cos(theta);\n\n  float pixelX = max(0.0, min(1.0, 0.5 + centerDistanceX * cosTheta - centerDistanceY * sinTheta));\n  float pixelY = max(0.0, min(1.0, 0.5 + centerDistanceX * sinTheta + centerDistanceY * cosTheta));\n\n  vec2 pixelPos = vec2(pixelX, 1.-pixelY);\n\n  float p = 4.0;\n  float dpt = 0.0;\n  vec4 gradColor = vec4(0.0, 0.0, 0.0, 0.0);\n  for(int i = 0; i < 4; i++) {\n    vec2 pointPos = colorPoints[i].pos * (1.0 - transitionFactor) + colorPoints[i].prevPos * transitionFactor;\n    float distance = max(0.0, 0.9 - distance(pixelPos, pointPos));\n    float dpp = pow(distance, p);\n    dpt += dpp;\n    gradColor += colorPoints[i].color * dpp;\n  }\n\n  gradColor.w = dpt;\n  gl_FragColor = gradColor / dpt;\n}\n`;\n\nexport function compileShader(\n  gl: WebGLRenderingContext,\n  type: number,\n  source: string,\n) {\n  const shader = gl.createShader(type)!;\n  gl.shaderSource(shader, source);\n  gl.compileShader(shader);\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n    throw new Error(`Failed to compile shader: ${gl.getShaderInfoLog(shader)}`);\n  }\n  return shader;\n}\n\ntype GLColorPoint = {\n  colorLoc: WebGLUniformLocation;\n  posLoc: WebGLUniformLocation;\n  prevPosLoc: WebGLUniformLocation;\n};\n\ntype GLState = {\n  prog: WebGLProgram;\n  posBuf: WebGLBuffer;\n  resolutionLoc: WebGLUniformLocation;\n  colorPoints: GLColorPoint[];\n  transitionFactorLoc: WebGLUniformLocation;\n};\n\nexport class AnimBgRender extends BaseAnimBgRender {\n  private gl: WebGLRenderingContext | null;\n\n  private glState: GLState | null;\n\n  public constructor(\n    canvas: HTMLCanvasElement | null,\n    container: HTMLDivElement | null,\n  ) {\n    super(canvas, container);\n\n    // @ts-ignore\n    this.gl = this.canvas.getContext('webgl');\n    if (!this.gl && this.canvas instanceof HTMLCanvasElement) {\n      this.gl = this.canvas.getContext(\n      // @ts-ignore\n        'experimental-webgl',\n      ) as WebGLRenderingContext;\n    }\n\n    // eslint-disable-next-line no-null/no-null\n    this.glState = null;\n\n    try {\n      this.glState = this.createGLState();\n      this.syncState();\n      this.render();\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.error('Failed to create GL state', e);\n    }\n  }\n\n  public renderBitmap(\n    [width, height]: [number, number],\n    colors: AnimBgColorPoints,\n    pos: number = 0,\n    transitionProgress: number = 0,\n  ): ImageBitmap | null {\n    if (!(this.canvas instanceof OffscreenCanvas)) throw new Error('Can render bitmap only offscreen');\n    // eslint-disable-next-line no-null/no-null\n    if (!this.gl) return null;\n\n    requestMutation(() => {\n      this.canvas.width = width;\n      this.canvas.height = height;\n    });\n    this.curPos = pos;\n    this.colors = colors;\n    this.syncState();\n    this.render(transitionProgress);\n    return this.canvas.transferToImageBitmap();\n  }\n\n  private createGLState(): GLState {\n    if (!this.gl) throw new Error('No GL context');\n    const gl = this.gl;\n\n    const prog = gl.createProgram();\n    if (!prog) {\n      throw new Error('No WebGLProgram found');\n    }\n\n    gl.attachShader(prog, compileShader(gl, gl.VERTEX_SHADER, VERTEX_SHADER));\n    gl.attachShader(\n      prog,\n      compileShader(this.gl, gl.FRAGMENT_SHADER, FRAGMENT_SHADER),\n    );\n    gl.linkProgram(prog);\n    gl.useProgram(prog);\n\n    const posLoc = gl.getAttribLocation(prog, 'a_position');\n    const posBuf = gl.createBuffer();\n    if (!posBuf) {\n      throw new Error('No WebGL buffer created');\n    }\n    gl.bindBuffer(gl.ARRAY_BUFFER, posBuf);\n    gl.bufferData(\n      gl.ARRAY_BUFFER,\n      new Float32Array(\n        [\n          [-1, -1, 1, -1, -1, 1],\n          [-1, 1, 1, -1, 1, 1],\n        ].flat(),\n      ),\n      gl.STATIC_DRAW,\n    );\n\n    gl.enableVertexAttribArray(posLoc);\n    gl.vertexAttribPointer(\n      posLoc,\n      2, // 2 components per iteration\n      gl.FLOAT, // the data is 32bit floats\n      false, // don't normalize the data\n      0, // 0 = move forward size * sizeof(type) each iteration to get the next position\n      0, // start at the beginning of the buffer\n    );\n\n    const colorPoints: GLColorPoint[] = [];\n    for (let i = 0; i < 4; i++) {\n      const colorLoc = gl.getUniformLocation(prog, `colorPoints[${i}].color`)!;\n      const posLoc2 = gl.getUniformLocation(prog, `colorPoints[${i}].pos`)!;\n      const prevPosLoc = gl.getUniformLocation(\n        prog,\n        `colorPoints[${i}].prevPos`,\n      )!;\n      colorPoints.push({ colorLoc, posLoc: posLoc2, prevPosLoc });\n    }\n\n    return {\n      prog,\n      posBuf,\n      colorPoints,\n      resolutionLoc: gl.getUniformLocation(prog, 'resolution')!,\n      transitionFactorLoc: gl.getUniformLocation(prog, 'transitionFactor')!,\n    };\n  }\n\n  protected syncState() {\n    if (!this.gl || !this.glState) return;\n    this.shouldStop = false;\n\n    const gl = this.gl;\n    gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n    gl.useProgram(this.glState.prog);\n    gl.uniform2fv(this.glState.resolutionLoc, [\n      gl.canvas.width,\n      gl.canvas.height,\n    ]);\n\n    for (let i = 0; i < 4; i++) {\n      const { colorLoc, posLoc, prevPosLoc } = this.glState.colorPoints[i];\n      const c = this.colors[i];\n      gl.uniform4f(colorLoc, c[0] / 255, c[1] / 255, c[2] / 255, c[3] / 255);\n      gl.uniform2f(posLoc, ...keyPoints[(this.curPos + i * 2) % 8]);\n      gl.uniform2f(prevPosLoc, ...keyPoints[(this.curPos + 7 + i * 2) % 8]);\n    }\n  }\n\n  protected render(progress?: number) {\n    if (!this.gl || !this.glState) {\n      const c = this.colors[0];\n      if (this.canvas instanceof HTMLCanvasElement) {\n        this.canvas.style.backgroundColor = `rgb(${c[0]}, ${c[1]}, ${c[2]})`;\n      }\n      return;\n    }\n\n    const gl = this.gl;\n    const { posBuf, transitionFactorLoc } = this.glState;\n    gl.useProgram(this.glState.prog);\n    gl.bindBuffer(gl.ARRAY_BUFFER, posBuf);\n    gl.uniform1f(\n      transitionFactorLoc,\n      1 - (progress ?? this.getTransitionProgress()),\n    );\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n  }\n}\n","/* eslint-disable no-bitwise */\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { fastRaf } from './schedulers';\n\nexport type AnimBgColor = [number, number, number, number];\nexport type AnimBgColorPoints = [\n  AnimBgColor,\n  AnimBgColor,\n  AnimBgColor,\n  AnimBgColor,\n];\n\nexport function transformStringsToColors(colors: {\n  first?: number;\n  second?: number;\n  third?: number;\n  fourth?: number;\n}): [AnimBgColor, AnimBgColor, AnimBgColor, AnimBgColor] {\n  if (!colors.first) colors.first = 0xffffff;\n\n  const fi = [\n    colors.first & 0xff,\n    (colors.first >> 8) & 0xff,\n    (colors.first >> 16) & 0xff,\n    0xff,\n  ];\n\n  if (!colors.second) colors.second = colors.first;\n  const se = [\n    colors.second & 0xff,\n    (colors.second >> 8) & 0xff,\n    (colors.second >> 16) & 0xff,\n    0xff,\n  ];\n\n  if (!colors.third) colors.third = colors.second;\n  const th = [\n    colors.third & 0xff,\n    (colors.third >> 8) & 0xff,\n    (colors.third >> 16) & 0xff,\n    0xff,\n  ];\n\n  if (!colors.fourth) colors.fourth = colors.third;\n  const fo = [\n    // eslint-disable-next-line no-bitwise\n    colors.fourth & 0xff,\n    // eslint-disable-next-line no-bitwise\n    (colors.fourth >> 8) & 0xff,\n    // eslint-disable-next-line no-bitwise\n    (colors.fourth >> 16) & 0xff,\n    0xff,\n  ];\n\n  return [fi, se, th, fo] as [AnimBgColor, AnimBgColor, AnimBgColor, AnimBgColor];\n}\n\nexport const keyPoints: [number, number][] = [\n  [0.80, 0.10],\n  [0.60, 0.20],\n  [0.35, 0.25],\n  [0.25, 0.60],\n  [0.20, 0.90],\n  [0.40, 0.80],\n  [0.65, 0.75],\n  [0.75, 0.40],\n];\n\nconst TRANSITION_TIME = 200;\n\nexport abstract class BaseAnimBgRender {\n  protected container: HTMLDivElement | null;\n\n  protected canvas: HTMLCanvasElement | OffscreenCanvas;\n\n  protected shouldStop = false;\n\n  protected resObserver: ResizeObserver | null;\n\n  protected colors: AnimBgColorPoints;\n\n  protected curPos: number = 0;\n\n  protected transitionStart: number;\n\n  constructor(\n    canvas: HTMLCanvasElement | null,\n    container: HTMLDivElement | null,\n  ) {\n    if (container && canvas) {\n      this.container = container;\n      this.canvas = canvas;\n    } else {\n      // eslint-disable-next-line no-null/no-null\n      this.container = null;\n      this.canvas = new OffscreenCanvas(50, 50);\n    }\n\n    this.colors = [\n      [0xfe, 0xc4, 0x96, 0xff],\n      [0xdd, 0x6c, 0xb9, 0xff],\n      [0x96, 0x2f, 0xbf, 0xff],\n      [0x4f, 0x5b, 0xd5, 0xff],\n    ];\n\n    if (this.container) {\n      this.resObserver = new ResizeObserver((e) => {\n        requestMutation(() => {\n          this.canvas.width = e[0]?.contentRect?.width ?? 50;\n          this.canvas.height = e[0]?.contentRect?.height ?? 50;\n          this.syncState();\n          this.render();\n        });\n      });\n      this.resObserver.observe(this.container);\n    } else {\n      // eslint-disable-next-line no-null/no-null\n      this.resObserver = null;\n    }\n\n    this.transitionStart = performance.now() - 2 * TRANSITION_TIME;\n  }\n\n  public nextState() {\n    this.curPos = (this.curPos + 1) % 8;\n    this.transitionStart = performance.now();\n    this.syncState();\n    this.renderLoop();\n  }\n\n  public setColors(colors: AnimBgColorPoints) {\n    this.colors = colors;\n    this.syncState();\n    this.render();\n  }\n\n  public detach() {\n    this.shouldStop = true;\n    this.resObserver?.disconnect();\n  }\n\n  protected abstract render(progress?: number): void;\n\n  protected getTransitionProgress(): number {\n    let transitionProgress = (performance.now() - this.transitionStart) / TRANSITION_TIME;\n    if (transitionProgress > 1) {\n      transitionProgress = 1;\n    }\n    return transitionProgress;\n  }\n\n  protected abstract syncState(): void;\n\n  private renderLoop() {\n    if (this.shouldStop) return;\n\n    const progress = this.getTransitionProgress();\n    this.render(progress);\n\n    if (progress === 1) return;\n    fastRaf(() => this.renderLoop());\n  }\n}\n","import { getGlobal } from '../global';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animate } from './animation';\n\nconst DEFAULT_DURATION = 300;\n\nconst stopById: Map<string, VoidFunction> = new Map();\n\nexport default function animateHorizontalScroll(container: HTMLElement, left: number, duration = DEFAULT_DURATION) {\n  if (!selectCanAnimateInterface(getGlobal())) {\n    duration = 0;\n  }\n\n  const isRtl = container.getAttribute('dir') === 'rtl';\n  const {\n    scrollLeft, offsetWidth: containerWidth, scrollWidth, dataset: { scrollId },\n  } = container;\n\n  let path = left - scrollLeft;\n\n  if (path < 0) {\n    const remainingPath = -scrollLeft * (isRtl ? -1 : 1);\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollWidth - (scrollLeft + containerWidth);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return Promise.resolve();\n  }\n\n  if (scrollId && stopById.has(scrollId)) {\n    stopById.get(scrollId)!();\n  }\n\n  const target = scrollLeft + path;\n\n  return new Promise<void>((resolve) => {\n    requestMutation(() => {\n      if (duration === 0) {\n        container.scrollLeft = target;\n        resolve();\n        return;\n      }\n\n      let isStopped = false;\n      const id = Math.random().toString();\n      container.dataset.scrollId = id;\n      stopById.set(id, () => {\n        isStopped = true;\n      });\n\n      container.style.scrollSnapType = 'none';\n\n      const startAt = Date.now();\n\n      function cleanup() {\n        container.style.scrollSnapType = '';\n        delete container.dataset.scrollId;\n        stopById.delete(id);\n      }\n\n      animate(() => {\n        if (isStopped) {\n          cleanup();\n          return false;\n        }\n\n        const t = Math.min((Date.now() - startAt) / duration, 1);\n\n        const currentPath = path * (1 - transition(t));\n        container.scrollLeft = Math.round(target - currentPath);\n\n        if (t >= 1) {\n          cleanup();\n          resolve();\n        }\n\n        return t < 1;\n      }, requestMutation);\n    });\n  });\n}\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import { beginHeavyAnimation } from '../lib/teact/teact';\nimport { getGlobal } from '../global';\n\nimport type { ScrollTargetPosition } from '../types';\nimport { FocusDirection } from '../types';\n\nimport {\n  SCROLL_MAX_DISTANCE,\n  SCROLL_MAX_DURATION,\n  SCROLL_MIN_DURATION,\n  SCROLL_SHORT_TRANSITION_MAX_DISTANCE,\n} from '../config';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport getOffsetToContainer from './visibility/getOffsetToContainer';\nimport { animateSingle, cancelSingleAnimation } from './animation';\nimport { IS_ANDROID } from './windowEnvironment';\n\nexport type AnimateScrollArgs = {\n  container: HTMLElement;\n  element: HTMLElement;\n  position: ScrollTargetPosition;\n  margin?: number;\n  maxDistance?: number;\n  forceDirection?: FocusDirection;\n  forceDuration?: number;\n  forceNormalContainerHeight?: boolean;\n  shouldReturnMutationFn?: boolean;\n};\n\nlet isAnimating = false;\nlet currentArgs: AnimateScrollArgs | undefined;\nlet onHeavyAnimationEnd: NoneToVoidFunction | undefined;\n\nexport default function animateScroll(args: AnimateScrollArgs) {\n  currentArgs = args;\n  const mutate = createMutateFunction(args);\n\n  if (args.shouldReturnMutationFn) {\n    return mutate;\n  }\n\n  requestMutation(mutate);\n  return undefined;\n}\n\nexport function restartCurrentScrollAnimation() {\n  if (!isAnimating) {\n    return;\n  }\n\n  cancelSingleAnimation();\n\n  requestMeasure(() => {\n    requestMutation(createMutateFunction(currentArgs!));\n  });\n}\n\nfunction createMutateFunction(args: AnimateScrollArgs) {\n  const {\n    container,\n    element,\n    position,\n    margin = 0,\n    maxDistance = SCROLL_MAX_DISTANCE,\n    forceDirection,\n    forceNormalContainerHeight,\n  } = args;\n\n  let forceDuration = args.forceDuration;\n\n  if (\n    forceDirection === FocusDirection.Static\n    || !selectCanAnimateInterface(getGlobal())\n  ) {\n    forceDuration = 0;\n  }\n\n  const { offsetHeight: elementHeight } = element;\n  const { scrollTop: currentScrollTop, offsetHeight: containerHeight, scrollHeight } = container;\n  const elementTop = getOffsetToContainer(element, container).top;\n\n  const targetContainerHeight = forceNormalContainerHeight && container.dataset.normalHeight\n    ? Number(container.dataset.normalHeight)\n    : containerHeight;\n\n  let scrollTo!: number;\n  switch (position) {\n    case 'start':\n      scrollTo = (elementTop - margin) + (IS_ANDROID ? 1 : 0);\n      break;\n    case 'end':\n      scrollTo = (elementTop + elementHeight + margin) - targetContainerHeight;\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n    case 'centerOrTop':\n      scrollTo = elementHeight < targetContainerHeight\n        ? (elementTop + elementHeight / 2 - targetContainerHeight / 2)\n        : (elementTop - margin);\n      break;\n  }\n\n  const scrollFrom = calculateScrollFrom(container, scrollTo, maxDistance, forceDirection);\n\n  let path = scrollTo - scrollFrom;\n  if (path < 0) {\n    const remainingPath = -scrollFrom;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollHeight - (scrollFrom + targetContainerHeight);\n    path = Math.min(path, remainingPath);\n  }\n\n  const absPath = Math.abs(path);\n\n  return () => {\n    if (absPath < 1) {\n      if (currentScrollTop !== scrollFrom) {\n        container.scrollTop = scrollFrom;\n      }\n\n      return;\n    }\n\n    const target = scrollFrom + path;\n\n    if (forceDuration === 0) {\n      container.scrollTop = target;\n      return;\n    }\n\n    const transition = absPath <= SCROLL_SHORT_TRANSITION_MAX_DISTANCE ? shortTransition : longTransition;\n    const duration = forceDuration || (\n      SCROLL_MIN_DURATION\n      + (absPath / SCROLL_MAX_DISTANCE) * (SCROLL_MAX_DURATION - SCROLL_MIN_DURATION)\n    );\n    const startAt = Date.now();\n\n    isAnimating = true;\n\n    const prevOnHeavyAnimationEnd = onHeavyAnimationEnd;\n    onHeavyAnimationEnd = beginHeavyAnimation(undefined, true);\n    prevOnHeavyAnimationEnd?.();\n\n    animateSingle(() => {\n      const t = Math.min((Date.now() - startAt) / duration, 1);\n      const currentPath = path * (1 - transition(t));\n      const newScrollTop = Math.round(target - currentPath);\n\n      container.scrollTop = newScrollTop;\n\n      isAnimating = t < 1 && newScrollTop !== target;\n\n      if (!isAnimating) {\n        currentArgs = undefined;\n\n        onHeavyAnimationEnd?.();\n        onHeavyAnimationEnd = undefined;\n      }\n\n      return isAnimating;\n    }, requestMutation);\n  };\n}\n\nexport function isAnimatingScroll() {\n  return isAnimating;\n}\n\nexport function cancelScrollBlockingAnimation() {\n  onHeavyAnimationEnd!();\n  onHeavyAnimationEnd = undefined;\n}\n\nfunction calculateScrollFrom(\n  container: HTMLElement,\n  scrollTo: number,\n  maxDistance = SCROLL_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n) {\n  const { scrollTop } = container;\n\n  if (forceDirection === undefined) {\n    const offset = scrollTo - scrollTop;\n\n    if (offset < -maxDistance) {\n      return scrollTop + (offset + maxDistance);\n    } else if (offset > maxDistance) {\n      return scrollTop + (offset - maxDistance);\n    }\n  } else if (forceDirection === FocusDirection.Up) {\n    return scrollTo + maxDistance;\n  } else if (forceDirection === FocusDirection.Down) {\n    return Math.max(0, scrollTo - maxDistance);\n  }\n\n  return scrollTop;\n}\n\nfunction shortTransition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n\nfunction longTransition(t: number) {\n  return 1 - ((1 - t) ** 6);\n}\n","/* eslint-disable eqeqeq */\n/* eslint-disable prefer-template */\n/* eslint-disable prefer-const */\n/* eslint-disable prefer-destructuring */\n/* eslint-disable one-var */\n/* eslint-disable one-var-declaration-per-line */\n\nimport { preloadImage } from './files';\n\nconst LUMA_THRESHOLD = 128;\n\n/**\n * HEX > RGB\n * input: 'xxxxxx' (ex. 'ed15fa') case-insensitive\n * output: [r, g, b] ([0-255, 0-255, 0-255])\n */\nexport function hex2rgb(param: string): [number, number, number] {\n  return [\n    parseInt(param.substring(0, 2), 16),\n    parseInt(param.substring(2, 4), 16),\n    parseInt(param.substring(4, 6), 16),\n  ];\n}\n\n/**\n * RGB > HEX\n * input: [r, g, b] ([0-255, 0-255, 0-255])\n * output: 'xxxxxx' (ex. 'ff0000')\n */\nexport function rgb2hex(param: [number, number, number]) {\n  const p0 = param[0].toString(16);\n  const p1 = param[1].toString(16);\n  const p2 = param[2].toString(16);\n  return (p0.length == 1 ? '0' + p0 : p0) + (p1.length == 1 ? '0' + p1 : p1) + (p2.length == 1 ? '0' + p2 : p2);\n}\n\n/**\n * Converts an RGB color value to HSV. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes r, g, and b are contained in the set [0, 255] and\n * returns h, s, and v in the set [0, 1].\n *\n * @param   Number  r       The red color value\n * @param   Number  g       The green color value\n * @param   Number  b       The blue color value\n * @return  Array           The HSV representation\n */\nexport function rgb2hsb([r, g, b]: [number, number, number]): [number, number, number] {\n  r /= 255;\n  g /= 255;\n  b /= 255;\n\n  let max = Math.max(r, g, b), min = Math.min(r, g, b);\n  let h!: number, s: number, v: number = max;\n\n  let d = max - min;\n  s = max == 0 ? 0 : d / max;\n\n  if (max == min) {\n    h = 0; // achromatic\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n\n    h /= 6;\n  }\n\n  return [h, s, v];\n}\n\n/**\n * Converts an HSV color value to RGB. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes h, s, and v are contained in the set [0, 1] and\n * returns r, g, and b in the set [0, 255].\n *\n * @param   Number  h       The hue\n * @param   Number  s       The saturation\n * @param   Number  v       The value\n * @return  Array           The RGB representation\n */\nexport function hsb2rgb([h, s, v]: [number, number, number]): [number, number, number] {\n  let r!: number, g!: number, b!: number;\n\n  let i = Math.floor(h * 6);\n  let f = h * 6 - i;\n  let p = v * (1 - s);\n  let q = v * (1 - f * s);\n  let t = v * (1 - (1 - f) * s);\n\n  switch (i % 6) {\n    case 0:\n      r = v;\n      g = t;\n      b = p;\n      break;\n    case 1:\n      r = q;\n      g = v;\n      b = p;\n      break;\n    case 2:\n      r = p;\n      g = v;\n      b = t;\n      break;\n    case 3:\n      r = p;\n      g = q;\n      b = v;\n      break;\n    case 4:\n      r = t;\n      g = p;\n      b = v;\n      break;\n    case 5:\n      r = v;\n      g = p;\n      b = q;\n      break;\n  }\n\n  return [\n    Math.round(r * 255),\n    Math.round(g * 255),\n    Math.round(b * 255),\n  ];\n}\n\nexport async function getAverageColor(url: string): Promise<[number, number, number]> {\n  // Only visit every 5 pixels\n  const blockSize = 5;\n  const defaultRGB: [number, number, number] = [0, 0, 0];\n  let data;\n  let width;\n  let height;\n  let i = -4;\n  let length;\n  let rgb: [number, number, number] = [0, 0, 0];\n  let count = 0;\n\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext && canvas.getContext('2d');\n  if (!context) {\n    return defaultRGB;\n  }\n\n  const image = await preloadImage(url);\n  height = image.naturalHeight || image.offsetHeight || image.height;\n  width = image.naturalWidth || image.offsetWidth || image.width;\n  canvas.height = height;\n  canvas.width = width;\n\n  context.drawImage(image, 0, 0);\n\n  try {\n    data = context.getImageData(0, 0, width, height);\n  } catch (e) {\n    return defaultRGB;\n  }\n\n  length = data.data.length;\n\n  // eslint-disable-next-line no-cond-assign\n  while ((i += blockSize * 4) < length) {\n    if (data.data[i + 3] === 0) continue; // Ignore fully transparent pixels\n    ++count;\n    rgb[0] += data.data[i];\n    rgb[1] += data.data[i + 1];\n    rgb[2] += data.data[i + 2];\n  }\n\n  rgb[0] = Math.floor(rgb[0] / count);\n  rgb[1] = Math.floor(rgb[1] / count);\n  rgb[2] = Math.floor(rgb[2] / count);\n\n  return rgb;\n}\n\nexport function getColorLuma(rgbColor: [number, number, number]) {\n  const [r, g, b] = rgbColor;\n  const luma = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  return luma;\n}\n\n// Function was adapted from https://github.com/telegramdesktop/tdesktop/blob/35ff621b5b52f7e3553fb0f990ea13ade7101b8e/Telegram/SourceFiles/data/data_wall_paper.cpp#L518\nexport function getPatternColor(rgbColor: [number, number, number]) {\n  let [hue, saturation, value] = rgb2hsb(rgbColor);\n\n  saturation = Math.min(1, saturation + 0.05 + 0.1 * (1 - saturation));\n  value = value > 0.5\n    ? Math.max(0, value * 0.65)\n    : Math.max(0, Math.min(1, 1 - value * 0.65));\n\n  return `hsla(${hue * 360}, ${saturation * 100}%, ${value * 100}%, .4)`;\n}\n\n/* eslint-disable no-bitwise */\nexport const convertToRGBA = (color: number): string => {\n  const alpha = (color >> 24) & 0xff;\n  const red = (color >> 16) & 0xff;\n  const green = (color >> 8) & 0xff;\n  const blue = color & 0xff;\n\n  const alphaFloat = alpha / 255;\n  return `rgba(${red}, ${green}, ${blue}, ${alphaFloat})`;\n};\n\nexport const numberToHexColor = (color: number): string => {\n  return `#${color.toString(16).padStart(6, '0')}`;\n};\n\nexport const getTextColor = (color: number): string => {\n  const r = (color >> 16) & 0xff;\n  const g = (color >> 8) & 0xff;\n  const b = color & 0xff;\n  const luma = getColorLuma([r, g, b]);\n  return luma > LUMA_THRESHOLD ? 'black' : 'white';\n};\n","import { IS_TOUCH_ENV } from './windowEnvironment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    element.focus();\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","import type { UniqueCustomPeer } from '../../types';\n\nexport const CUSTOM_PEER_PREMIUM: UniqueCustomPeer = {\n  isCustomPeer: true,\n  type: 'premium',\n  titleKey: 'PrivacyPremium',\n  subtitleKey: 'PrivacyPremiumText',\n  avatarIcon: 'star',\n  isAvatarSquare: true,\n  withPremiumGradient: true,\n};\n\nexport const CUSTOM_PEER_INCLUDED_CHAT_TYPES: UniqueCustomPeer[] = [\n  {\n    isCustomPeer: true,\n    type: 'contacts',\n    titleKey: 'FilterContacts',\n    avatarIcon: 'user',\n    isAvatarSquare: true,\n    peerColorId: 5,\n  },\n  {\n    isCustomPeer: true,\n    type: 'nonContacts',\n    titleKey: 'FilterNonContacts',\n    avatarIcon: 'non-contacts',\n    isAvatarSquare: true,\n    peerColorId: 4,\n  },\n  {\n    isCustomPeer: true,\n    type: 'groups',\n    titleKey: 'FilterGroups',\n    avatarIcon: 'group',\n    isAvatarSquare: true,\n    peerColorId: 3,\n  },\n  {\n    isCustomPeer: true,\n    type: 'channels',\n    titleKey: 'FilterChannels',\n    avatarIcon: 'channel',\n    isAvatarSquare: true,\n    peerColorId: 1,\n  },\n  {\n    isCustomPeer: true,\n    type: 'bots',\n    titleKey: 'FilterBots',\n    avatarIcon: 'bots',\n    isAvatarSquare: true,\n    peerColorId: 6,\n  },\n];\n\nexport const CUSTOM_PEER_EXCLUDED_CHAT_TYPES: UniqueCustomPeer[] = [\n  {\n    isCustomPeer: true,\n    type: 'excludeMuted',\n    titleKey: 'FilterMuted',\n    avatarIcon: 'mute',\n    isAvatarSquare: true,\n    peerColorId: 6,\n  },\n  {\n    isCustomPeer: true,\n    type: 'excludeRead',\n    titleKey: 'FilterRead',\n    avatarIcon: 'readchats',\n    isAvatarSquare: true,\n    peerColorId: 4,\n  },\n  {\n    isCustomPeer: true,\n    type: 'excludeArchived',\n    titleKey: 'FilterArchived',\n    avatarIcon: 'archive',\n    isAvatarSquare: true,\n    peerColorId: 5,\n  },\n];\n\nexport const CUSTOM_PEER_HIDDEN: UniqueCustomPeer<'hidden'> = {\n  isCustomPeer: true,\n  type: 'hidden',\n  titleKey: 'StarsTransactionHidden',\n  avatarIcon: 'author-hidden',\n  peerColorId: 4,\n};\n","import type {\n  ApiFormattedText,\n  ApiMessageEntity,\n  ApiMessageEntityDefault,\n} from '../api/types';\nimport {\n  ApiMessageEntityTypes,\n} from '../api/types';\n\ntype ParserEntityTypes =\n  | ApiMessageEntityTypes.Bold\n  | ApiMessageEntityTypes.Italic\n  | ApiMessageEntityTypes.Strike\n  | ApiMessageEntityTypes.Code\n  | ApiMessageEntityTypes.Pre\n  | ApiMessageEntityTypes.Spoiler;\n\nconst EntityChar: { [key: string]: ParserEntityTypes | undefined } = {\n  '*': ApiMessageEntityTypes.Bold,\n  _: ApiMessageEntityTypes.Italic,\n  '~': ApiMessageEntityTypes.Strike,\n  '`': ApiMessageEntityTypes.Code,\n  '|': ApiMessageEntityTypes.Spoiler,\n};\n\ntype Token = (\n  | {\n    type: 'entity';\n    entity: ApiMessageEntityTypes.Pre;\n    lang?: string;\n  }\n  | {\n    type: 'entity';\n    entity: Exclude<ParserEntityTypes, ApiMessageEntityTypes.Pre>;\n  }\n  | { type: 'text' }\n) & {\n  str: string;\n};\n\nfunction tokenize(text: string): Token[] {\n  const tokens: Token[] = [];\n  let accum = '';\n  const dumpAccum = () => {\n    if (accum.length) {\n      tokens.push({\n        type: 'text',\n        str: accum,\n      });\n    }\n    accum = '';\n  };\n\n  for (let i = 0; i < text.length; i++) {\n    const cur = text[i];\n    const lookAhead = text[i + 1] ?? '';\n    const sLookAhead = text[i + 2] ?? '';\n\n    const curEnt = EntityChar[cur];\n    if (curEnt === ApiMessageEntityTypes.Code) {\n      dumpAccum();\n      if (lookAhead === '`' && sLookAhead === '`') {\n        tokens.push({\n          type: 'entity',\n          entity: ApiMessageEntityTypes.Pre,\n          str: '```',\n        });\n        i += 2;\n      } else {\n        tokens.push({\n          type: 'entity',\n          entity: ApiMessageEntityTypes.Code,\n          str: '`',\n        });\n      }\n    } else if (curEnt) {\n      if (lookAhead === cur) {\n        dumpAccum();\n        tokens.push({\n          type: 'entity',\n          entity: curEnt,\n          str: cur + lookAhead,\n        });\n        i++;\n      } else {\n        accum += cur;\n      }\n    } else {\n      accum += cur;\n    }\n  }\n\n  dumpAccum();\n  return tokens;\n}\n\nfunction countTokens(tokens: Token[]): {\n  map: Map<ApiMessageEntityTypes, number>;\n  get(entity: ApiMessageEntityTypes): number;\n  dec(entity: ApiMessageEntityTypes, count?: number): void;\n  inc(entity: ApiMessageEntityTypes, count?: number): void;\n} {\n  const res: Map<ApiMessageEntityTypes, number> = new Map();\n  for (const token of tokens) {\n    if ('entity' in token) {\n      res.set(token.entity, (res.get(token.entity) ?? 0) + 1);\n    }\n  }\n\n  return {\n    map: res,\n    get(entity: ApiMessageEntityTypes) {\n      return res.get(entity) ?? 0;\n    },\n    dec(entity: ApiMessageEntityTypes, count = 1) {\n      res.set(entity, (res.get(entity) ?? 0) - count);\n    },\n    inc(entity: ApiMessageEntityTypes, count = 1) {\n      res.set(entity, (res.get(entity) ?? 0) + count);\n    },\n  };\n}\n\nfunction getPreLanguage(\n  preContents: string,\n): [string | undefined, string] | undefined {\n  const fullTrim = preContents.trim();\n  if (fullTrim.length === 0) {\n    return undefined;\n  }\n\n  const breakPos = preContents.indexOf('\\n');\n  let lang: string | undefined;\n  let rest = fullTrim;\n\n  if (breakPos !== -1) {\n    lang = preContents.slice(0, breakPos).trim();\n    rest = preContents.slice(breakPos + 1);\n  }\n\n  rest = rest.trim();\n  if (rest.length === 0) {\n    return [undefined, fullTrim];\n  }\n\n  if (lang?.length === 0) lang = undefined;\n\n  return [lang, rest];\n}\n\n/// Code pass: Remove all entities inside codeblocks\nfunction doCodePass(tokens: Token[]): Token[] {\n  const res: Token[] = [];\n  const tokenCount = countTokens(tokens);\n\n  let currentCode:\n  | ApiMessageEntityTypes.Code\n  | ApiMessageEntityTypes.Pre\n  | undefined;\n  let accum = '';\n  for (const token of tokens) {\n    if (token.type === 'entity') {\n      let discard = false;\n      if (currentCode === undefined) {\n        if (\n          token.entity === ApiMessageEntityTypes.Pre\n          || token.entity === ApiMessageEntityTypes.Code\n        ) {\n          if (tokenCount.get(token.entity) >= 2) {\n            currentCode = token.entity;\n            tokenCount.dec(token.entity);\n            res.push(token);\n          } else {\n            res.push({ type: 'text', str: token.str });\n          }\n        } else {\n          res.push(token);\n        }\n      } else if (currentCode === token.entity) {\n        tokenCount.dec(token.entity);\n\n        if (currentCode === ApiMessageEntityTypes.Pre) {\n          const langAndRest = getPreLanguage(accum);\n          if (langAndRest) {\n            res.push({ type: 'text', str: langAndRest[1] });\n            res.push({\n              ...token,\n              entity: ApiMessageEntityTypes.Pre,\n              lang: langAndRest[0],\n            });\n          } else {\n            // invalid pre block\n            res.pop();\n            res.push({ type: 'text', str: `\\`\\`\\`${accum}\\`\\`\\`` });\n          }\n        } else {\n          res.push({ type: 'text', str: accum });\n          res.push(token);\n        }\n\n        currentCode = undefined;\n        accum = '';\n      } else {\n        discard = true;\n      }\n\n      if (discard) {\n        // Entity inside codeblock, discard it to just text\n        tokenCount.dec(token.entity);\n        accum += token.str;\n      }\n    } else if (currentCode === undefined) {\n      res.push(token);\n    } else {\n      accum += token.str;\n    }\n  }\n\n  return res;\n}\n\ntype ConsumedInfo = {\n  pos: number;\n  consumed: number;\n};\n\n// Generate entities from tokens while removing unterminated ones\nfunction tokensToEntities(tokens: Token[]): [ApiFormattedText, ConsumedInfo[]] {\n  const tokenCount = countTokens(tokens);\n  const tokenStarts: Map<ApiMessageEntityTypes, number> = new Map();\n\n  let resStr = '';\n  const resEnt: ApiMessageEntity[] = [];\n  const resConsumed: ConsumedInfo[] = [];\n\n  for (const token of tokens) {\n    if (token.type === 'entity') {\n      if (tokenStarts.has(token.entity)) {\n        const startPos = tokenStarts.get(token.entity)!;\n\n        const newt: ApiMessageEntity = {\n          type: token.entity,\n          offset: startPos,\n          length: resStr.length - startPos,\n        };\n\n        if (\n          newt.type === ApiMessageEntityTypes.Pre\n          && token.entity === ApiMessageEntityTypes.Pre\n        ) {\n          newt.language = token.lang;\n        }\n\n        resEnt.push(newt);\n\n        resConsumed.push({\n          pos: resStr.length,\n          consumed: token.str.length,\n        });\n        tokenCount.dec(token.entity);\n        tokenStarts.delete(token.entity);\n      } else if (tokenCount.get(token.entity) >= 2) {\n        resConsumed.push({\n          pos: resStr.length,\n          consumed: token.str.length,\n        });\n        tokenCount.dec(token.entity);\n        tokenStarts.set(token.entity, resStr.length);\n      } else {\n        resStr += token.str;\n      }\n    } else {\n      resStr += token.str;\n    }\n  }\n\n  return [\n    {\n      text: resStr,\n      entities: resEnt,\n    },\n    resConsumed,\n  ];\n}\n\nfunction trimMessage(text: ApiFormattedText): ApiFormattedText {\n  let str = text.text;\n  const entities = text.entities ?? [];\n  const startSize = str.length;\n  str = str.trimStart();\n  const startShift = startSize - str.length;\n  str = str.trimEnd();\n\n  if (startSize !== str.length) {\n    for (const ent of entities) {\n      if (ent.offset < startShift) {\n        ent.length = ent.offset + ent.length - startShift;\n        ent.offset = 0;\n      } else {\n        ent.offset -= startShift;\n      }\n\n      if (ent.length + ent.offset > str.length) {\n        ent.length = str.length - ent.offset;\n      }\n    }\n  }\n\n  return {\n    text: str,\n    entities,\n  };\n}\n\nfunction addExternalEntities(\n  text: ApiFormattedText,\n  consumed: ConsumedInfo[],\n  extEnt: ApiMessageEntity[],\n): ApiFormattedText {\n  if (extEnt.length === 0) return text;\n\n  consumed = consumed.sort((a, b) => a.pos - b.pos);\n  extEnt = extEnt.sort((a, b) => a.offset - b.offset);\n\n  for (const ent of extEnt) {\n    let start = ent.offset;\n    let end = ent.offset + ent.length;\n    for (let i = 0; i < consumed.length; i++) {\n      if (start >= consumed[i].pos) {\n        start -= Math.min(consumed[i].consumed, start - consumed[i].pos);\n      }\n\n      if (end >= consumed[i].pos) {\n        end -= Math.min(consumed[i].consumed, end - consumed[i].pos);\n      }\n    }\n    text.entities?.push({\n      ...ent,\n      offset: start,\n      length: end - start,\n    });\n  }\n\n  return text;\n}\n\ntype FixupEntityTypes =\n  | ApiMessageEntityTypes.Bold\n  | ApiMessageEntityTypes.Italic\n  | ApiMessageEntityTypes.Strike\n  | ApiMessageEntityTypes.Spoiler;\n\nconst breakableEntities: FixupEntityTypes[] = [\n  ApiMessageEntityTypes.Bold,\n  ApiMessageEntityTypes.Italic,\n  ApiMessageEntityTypes.Strike,\n  ApiMessageEntityTypes.Spoiler,\n];\n\n// Cleanup entites by removing duplicates and extending\ntype FixupToken = {\n  action: 'start' | 'end';\n  type: FixupEntityTypes;\n};\n\nfunction fixupEntities(text: ApiFormattedText): ApiFormattedText {\n  const startEntities = text.entities ?? [];\n  let resEntities = [];\n\n  const fixupMap: Map<number, FixupToken[]> = new Map();\n  for (const ent of startEntities) {\n    const start = ent.offset;\n    const end = ent.offset + ent.length;\n\n    const startMarkers = fixupMap.get(start) ?? [];\n    const endMarkers = fixupMap.get(end) ?? [];\n\n    const type = ent.type as FixupEntityTypes;\n    if (breakableEntities.includes(type)) {\n      startMarkers.push({ action: 'start', type });\n      endMarkers.push({ action: 'end', type });\n    } else {\n      resEntities.push(ent);\n    }\n\n    fixupMap.set(start, startMarkers);\n    fixupMap.set(end, endMarkers);\n  }\n\n  let fixupList = [...fixupMap.entries()];\n  fixupList = fixupList.sort((a, b) => a[0] - b[0]);\n\n  const curState: Map<FixupEntityTypes, number> = new Map();\n  let curEnts: ApiMessageEntityDefault[] = [];\n  for (const [pos, entr] of fixupList) {\n    // End all current entities\n    for (const e of curEnts) {\n      e.length = pos - e.offset;\n      resEntities.push(e);\n    }\n    curEnts = [];\n\n    for (const upd of entr) {\n      const cur = curState.get(upd.type) ?? 0;\n      if (upd.action === 'start') {\n        curState.set(upd.type, cur + 1);\n      } else {\n        curState.set(upd.type, cur - 1);\n      }\n    }\n\n    for (const stat of curState.entries()) {\n      curEnts.push({ type: stat[0], offset: pos, length: 0 });\n    }\n  }\n\n  resEntities = resEntities.sort((a, b) => {\n    if (a.offset === b.offset) return b.length - a.length;\n    return a.offset - b.offset;\n  });\n\n  return { text: text.text, entities: resEntities };\n}\n\nexport function parseMarkdown(\n  text: string,\n  extEnt: ApiMessageEntity[] = [],\n): ApiFormattedText {\n  let tokens: Token[] = tokenize(text);\n  tokens = doCodePass(tokens);\n  // eslint-disable-next-line prefer-const\n  let [fmtText, consumed] = tokensToEntities(tokens);\n\n  fmtText = addExternalEntities(fmtText, consumed, extEnt);\n  fmtText = trimMessage(fmtText);\n  fmtText = fixupEntities(fmtText);\n  return fmtText;\n}\n","import type { ApiFormattedText, ApiMessageEntity } from '../api/types';\nimport { ApiMessageEntityTypes } from '../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../config';\nimport { parseMarkdown } from './parseMarkdown';\n\nexport const ENTITY_CLASS_BY_NODE_NAME: Record<string, ApiMessageEntityTypes> = {\n  B: ApiMessageEntityTypes.Bold,\n  STRONG: ApiMessageEntityTypes.Bold,\n  I: ApiMessageEntityTypes.Italic,\n  EM: ApiMessageEntityTypes.Italic,\n  INS: ApiMessageEntityTypes.Underline,\n  U: ApiMessageEntityTypes.Underline,\n  S: ApiMessageEntityTypes.Strike,\n  STRIKE: ApiMessageEntityTypes.Strike,\n  DEL: ApiMessageEntityTypes.Strike,\n  CODE: ApiMessageEntityTypes.Code,\n  PRE: ApiMessageEntityTypes.Pre,\n  BLOCKQUOTE: ApiMessageEntityTypes.Blockquote,\n};\n\nconst MAX_TAG_DEEPNESS = 5;\n\n// TODO: Markdown links\nexport default function parseHtmlAsFormattedText(\n  html: string, withMarkdownLinks = false, skipMarkdown = false,\n): ApiFormattedText {\n  const fragment = document.createElement('div');\n  fragment.innerHTML = withMarkdownLinks ? parseMarkdownLinks(html) : html;\n  fragment.querySelectorAll('br').forEach((br) => {\n    br.replaceWith('\\n');\n  });\n  let dtr = fragment.querySelector('div');\n  while (dtr) {\n    dtr.replaceWith('\\n', ...dtr.childNodes);\n    dtr = fragment.querySelector('div');\n  }\n  fixImageContent(fragment);\n  const text = fragment.innerText.trim().replace(/\\u200b+/g, '');\n  const trimShift = fragment.innerText.indexOf(text[0]);\n  let textIndex = -trimShift;\n  let recursionDeepness = 0;\n  const entities: ApiMessageEntity[] = [];\n\n  function addEntity(node: ChildNode) {\n    if (node.nodeType === Node.COMMENT_NODE) return;\n    const { index, entity } = getEntityDataFromNode(node, text, textIndex);\n\n    if (entity) {\n      textIndex = index;\n      entities.push(entity);\n    } else if (node.textContent) {\n      // Skip newlines on the beginning\n      if (index === 0 && node.textContent.trim() === '') {\n        return;\n      }\n      textIndex += node.textContent.length;\n    }\n\n    if (node.hasChildNodes() && recursionDeepness <= MAX_TAG_DEEPNESS) {\n      recursionDeepness += 1;\n      Array.from(node.childNodes).forEach(addEntity);\n    }\n  }\n\n  Array.from(fragment.childNodes).forEach((node) => {\n    recursionDeepness = 1;\n    addEntity(node);\n  });\n\n  let fmtRes: ApiFormattedText = {\n    text, entities,\n  };\n  // console.log(JSON.stringify(text))\n  if (!skipMarkdown) {\n    fmtRes = parseMarkdown(text, entities);\n  }\n\n  if (fmtRes.entities?.length === 0) fmtRes.entities = undefined;\n  return fmtRes;\n}\n\nexport function fixImageContent(fragment: HTMLDivElement) {\n  fragment.querySelectorAll('img').forEach((node) => {\n    if (node.dataset.documentId) { // Custom Emoji\n      node.textContent = (node as HTMLImageElement).alt || '';\n    } else { // Regular emoji with image fallback\n      node.replaceWith(node.alt || '');\n    }\n  });\n}\n\n// TODO: Improvem, though used realy rarely\nfunction parseMarkdownLinks(html: string) {\n  return html.replace(new RegExp(`\\\\[([^\\\\]]+?)]\\\\((${RE_LINK_TEMPLATE}+?)\\\\)`, 'g'), (_, text, link) => {\n    const url = link.includes('://') ? link : link.includes('@') ? `mailto:${link}` : `https://${link}`;\n    return `<a href=\"${url}\">${text}</a>`;\n  });\n}\n\nfunction getEntityDataFromNode(\n  node: ChildNode,\n  rawText: string,\n  textIndex: number,\n): { index: number; entity?: ApiMessageEntity } {\n  const type = getEntityTypeFromNode(node);\n\n  if (!type || !node.textContent) {\n    return {\n      index: textIndex,\n      entity: undefined,\n    };\n  }\n\n  const rawIndex = rawText.indexOf(node.textContent, textIndex);\n  // In some cases, last text entity ends with a newline (which gets trimmed from `rawText`).\n  // In this case, `rawIndex` would return `-1`, so we use `textIndex` instead.\n  const index = rawIndex >= 0 ? rawIndex : textIndex;\n  const offset = rawText.substring(0, index).length;\n  const { length } = rawText.substring(index, index + node.textContent.length);\n\n  if (type === ApiMessageEntityTypes.TextUrl) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        url: (node as HTMLAnchorElement).href,\n      },\n    };\n  }\n  if (type === ApiMessageEntityTypes.MentionName) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        userId: (node as HTMLAnchorElement).dataset.userId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Pre) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        language: (node as HTMLPreElement).dataset.language,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.CustomEmoji) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        documentId: (node as HTMLImageElement).dataset.documentId!,\n      },\n    };\n  }\n\n  return {\n    index,\n    entity: {\n      type,\n      offset,\n      length,\n    },\n  };\n}\n\nfunction getEntityTypeFromNode(node: ChildNode): ApiMessageEntityTypes | undefined {\n  if (node instanceof HTMLElement && node.dataset.entityType) {\n    return node.dataset.entityType as ApiMessageEntityTypes;\n  }\n\n  if (ENTITY_CLASS_BY_NODE_NAME[node.nodeName]) {\n    return ENTITY_CLASS_BY_NODE_NAME[node.nodeName];\n  }\n\n  if (node.nodeName === 'A') {\n    const anchor = node as HTMLAnchorElement;\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.MentionName) {\n      return ApiMessageEntityTypes.MentionName;\n    }\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.Url) {\n      return ApiMessageEntityTypes.Url;\n    }\n    if (anchor.href.startsWith('mailto:')) {\n      return ApiMessageEntityTypes.Email;\n    }\n    if (anchor.href.startsWith('tel:')) {\n      return ApiMessageEntityTypes.Phone;\n    }\n    if (anchor.href !== anchor.textContent) {\n      return ApiMessageEntityTypes.TextUrl;\n    }\n\n    return ApiMessageEntityTypes.Url;\n  }\n\n  if (node.nodeName === 'SPAN') {\n    return (node as HTMLElement).dataset.entityType as any;\n  }\n\n  if (node.nodeName === 'IMG') {\n    if ((node as HTMLImageElement).dataset.documentId) {\n      return ApiMessageEntityTypes.CustomEmoji;\n    }\n  }\n\n  return undefined;\n}\n","export default function getOffsetToContainer(element: HTMLElement, container: HTMLElement) {\n  let offsetTop = 0;\n  let offsetLeft = 0;\n\n  let current: HTMLElement | null = element;\n\n  while (current && current !== container && !current.contains(container)) {\n    offsetTop += current.offsetTop;\n    offsetLeft += current.offsetLeft;\n\n    current = current.offsetParent as HTMLElement;\n  }\n\n  return { top: offsetTop, left: offsetLeft };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"YmM5biTv\",\"header\":\"S7WFT2bv\",\"pickerCategoryTitle\":\"YK1300x2\",\"peerChip\":\"gsKPBPoK\",\"pickerList\":\"yLCbiItq\",\"padded\":\"bXzIGw8s\",\"noResults\":\"dXWKD0ve\",\"onlineStatus\":\"d5GDOYh9\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"O9uCTt5C\",\"animated-icon\":\"HiI6SMxF\",\"animatedIcon\":\"HiI6SMxF\",\"effect\":\"NhFcTGja\",\"animating\":\"ikfZ6Igz\",\"withEffectOnly\":\"jjRJmHCg\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gXO57D98\",\"chosen\":\"VXSJn0Sm\",\"paid\":\"N3lcrsh8\",\"animated-emoji\":\"lFjoRm_p\",\"animatedEmoji\":\"lFjoRm_p\",\"tag\":\"Dr889Kzc\",\"tail\":\"cUfY1b26\",\"is-safari\":\"rxxUijuG\",\"isSafari\":\"rxxUijuG\",\"tail-fill\":\"y591o4fN\",\"tailFill\":\"y591o4fN\",\"tag-text\":\"ly7cruxF\",\"tagText\":\"ly7cruxF\",\"counter\":\"P2FqNJAi\",\"disabled\":\"NRtGofbf\",\"paidCounter\":\"CW4UO1n3\"};"],"names":["scheduledAnimationsCounter","resetCounterOnTickEnd","throttleWithTickEnd","memo","AnimatedCounter","text","className","isDisabled","ref","isRtl","useLang","prevText","usePreviousDeprecated","forceUpdate","useForceUpdate","shouldAnimate","selectCanAnimateInterface","getGlobal","undefined","characters","useMemo","elements","textLength","length","prevTextLength","i","charIndex","prevTextCharIndex","unshift","React","createElement","renderAnimatedCharacters","useEffect","timeoutId","window","setTimeout","clearTimeout","buildClassName","dir","props","sticker","noLoad","forcePreview","otherProps","thumbDataUri","thumbnail","dataUri","localMediaHash","getStickerMediaHash","previewBlobUrl","useMedia","ApiMediaFormat","BlobUrl","tgsUrl","AnimatedIconWithPreview","_extends","previewUrl","loadedPreviewUrls","Set","isThumbOpen","unmarkThumbOpen","useFlag","Boolean","thumbClassNames","useMediaTransitionDeprecated","isPreviewOpen","markPreviewOpen","unmarkPreviewOpen","has","previewClassNames","isAnimationReady","markAnimationReady","handlePreviewLoad","useLastCallback","add","handleAnimationReady","size","style","buildStyle","src","styles","draggable","onLoad","AnimatedIcon","AvatarList","peers","limit","badgeText","lang","useOldLang","pxSize","AVATAR_SIZES","renderingBadgeText","slice","map","peer","Avatar","MediaSpoiler","isVisible","withAnimation","width","height","useRef","shouldRender","transitionClassNames","useShowTransitionDeprecated","canvasRef","useCanvasBlur","handleClick","e","current","el","rect","currentTarget","getBoundingClientRect","x","clientX","left","y","clientY","top","shiftX","shiftY","requestMutation","setAttribute","onClick","PasswordForm","isLoading","isPasswordVisible","error","hint","placeholder","submitLabel","description","shouldShowSubmit","shouldResetValue","shouldDisablePasswordManager","noRipple","clearError","onChangePasswordVisibility","onInputChange","onSubmit","inputRef","isMobile","useAppLayout","password","setPassword","useState","canSubmit","setCanSubmit","focusDelayTimeoutMs","useTimeout","IS_TOUCH_ENV","focus","select","action","event","preventDefault","stopEvent","autoComplete","type","id","tabIndex","value","onChange","target","MIN_PASSWORD_LENGTH","maxLength","role","title","Icon","name","Button","ripple","disabled","withGlobal","global","peerId","forceShowSelf","selectPeer","user","selectUser","isSavedMessages","isSelf","PeerChip","icon","isMinimized","canClose","isCloseNonDestructive","clickArg","mockPeer","customPeer","withPeerColors","withEmojiStatus","itemClassName","apiPeer","anyPeer","chat","isApiPeerChat","iconElement","titleElement","titleText","getPeerTitle","FullNameTitle","fullClassName","isForum","isAvatarSquare","getPeerColorClass","PremiumProgress","leftText","rightText","floatingBadgeText","floatingBadgeIcon","progress","isPrimary","floatingBadgeRef","parentContainerRef","setShiftX","tailPosition","setTailPosition","updateBadgePosition","badgeWidth","offsetWidth","parentWidth","minShift","maxShift","currentShift","safeShift","Math","max","min","newTailPosition","useResizeObserver","hasFloatingBadge","isProgressFull","viewBox","fill","d","COLORS","red","blue","COLOR_KEYS","Object","keys","theme","selectTheme","GiftRibbon","color","validSvgRandomId","useUniqueId","colorKey","gradientColor","startColor","endColor","root","ribbon","x1","y1","x2","y2","gradientUnits","offset","getStickerFromGift","gift","attributes","find","attr","getTotalGiftAvailability","availabilityTotal","totalCount","getGiftAttributes","model","backdrop","pattern","originalDetails","getGiftAttributesFromList","VERIFIED_PRIORITY_BASE","PINNED_PRIORITY_BASE","sortChatIds","chatIds","shouldPrioritizeVerified","priorityIds","currentUserId","orderBy","Infinity","selectChat","priority","lastMessage","selectChatLastMessage","date","isVerified","includes","Date","now","indexOf","ITEM_CLASS_NAME","PeerPicker","categories","itemIds","categoryPlaceholderKey","filterValue","filterPlaceholder","notFoundText","searchInputId","noScrollRestore","isSearchable","lockedUnselectedSubtitle","isViewOnly","itemInputType","withStatus","withPeerTypes","withPeerUsernames","withDefaultPadding","onFilterChange","onDisabledClick","onLoadMore","optionalProps","allowMultiple","lockedSelectedIds","lockedUnselectedIds","selectedCategories","selectedCategory","MEMO_EMPTY_ARRAY","selectedIds","selectedId","shouldMinimize","requestMeasure","lockedSelectedIdsSet","lockedUnselectedIdsSet","unlockedSelectedIds","filter","categoriesByType","buildCollectionByKey","sortedItemIds","lockedSelectedBucket","unlockedBucket","lockedUnselectableBucket","forEach","push","concat","handleItemClick","categoryType","newSelectedCategories","splice","onSelectedCategoriesChange","newSelectedIds","onSelectedIdsChange","onSelectedCategoryChange","onSelectedIdChange","handleFilterChange","viewportIds","getMore","useInfiniteScroll","renderItem","useCallback","isCategory","category","peerOrCategory","DEBUG","key","isAlwaysUnselected","isAlwaysSelected","isLocked","isChecked","subtitle","subtitleClassName","username","usernames","getGroupStatus","userStatus","selectUserStatus","getUserStatus","isUserOnline","onlineStatus","langKey","getPeerTypeKey","getSubtitle","PickerItem","avatarElement","inactive","inputElement","Radio","checked","onlyInput","Checkbox","inputPosition","beforeChildren","pickerCategoryTitle","container","header","peerChip","InputText","InfiniteScroll","pickerList","padded","items","itemSelector","Loading","noResults","titleClassName","isClickable","RippleEffect","IS_IOS","RadialPatternBackground","backgroundColors","patternColor","patternIcon","clearBottomSector","containerRef","getContainerSize","setContainerSize","useSignal","dpr","useDevicePixelRatio","emojiImage","setEmojiImage","previewMediaHash","preloadImage","then","patternPositions","coordinates","ring","ringItemCount","floor","ringProgress","ringRadius","angleShift","PI","angle","cos","sin","sizeFactor","random","entry","contentRect","clientWidth","clientHeight","draw","canvas","ctx","getContext","save","centerShift","renderX","renderY","drawImage","restore","fillStyle","globalCompositeOperation","fillRect","radialGradient","createRadialGradient","addColorStop","maxSide","CustomEmojiEffect","reaction","isLottie","particleSize","onEnded","stickerHash","getStickerHashById","documentId","previewMediaData","paths","IS_OFFSET_PATH_SUPPORTED","Array","from","generateRandomDropPath","path","CustomEmoji","withSharedAnimation","onAnimationEnd","alt","ICON_SIZE","REM","EFFECT_SIZE","MIN_PARTICLE_SIZE","containerId","genericEmojiEffects","reactions","activeReactions","selectTabState","withEffects","selectPerformanceSettingsValue","availableReactions","genericEffects","ReactionAnimatedEmoji","effectSize","withEffectOnly","shouldPause","shouldLoop","loopLimit","observeIntersection","stopActiveReaction","getActions","isCustom","availableReaction","r","isSameReaction","centerIconId","centerIcon","customEmoji","useCustomEmoji","assignedEffectId","aroundAnimation","assignedId","available","emoticon","emoji","effectId","stickers","isIntersecting","useIsIntersecting","mediaHashCenterIcon","mediaHashEffect","mediaDataCenterIcon","mediaDataEffect","activeReaction","active","shouldPlayEffect","shouldPlayCenter","shouldRenderEffect","animationClassNames","shouldRenderCenter","centerAnimationClassNames","handleEnded","isAnimationLoaded","markAnimationLoaded","unmarkAnimationLoaded","shouldShowStatic","shouldRenderStatic","staticClassNames","rootClassName","animating","ReactionStaticEmoji","noPlay","noVideoOnMobile","observeIntersectionForPlaying","forceAlways","AnimatedSticker","animatedIcon","roundToNearestEven","play","noLoop","Fragment","effect","withIconHeart","staticIconId","staticIcon","mediaHash","mediaData","shouldApplySizeFix","shouldReplaceWithHeartIcon","blankUrl","RichInputKeyboardPriority","nextAttach","RichEditableAttachment","richInputCtx","disableEdit","detached","attachmentRef","customColor","useDynamicColorListener","editable","attEditable","isAttached","attachTo","detachFrom","applyRootProperties","emojiRenderer","setCustomColor","isOpen","TextFormatter","useModuleLoader","Bundles","Extra","EX_FIX","document","betterExecCommand","input","range","command","getSelection","removeAllRanges","addRange","classList","execCommand","remove","head","appendChild","innerHTML","GDOCS_ELEMENT_ID_REGEXP","GDOCS_STYLES","BOLD","ITALIC","UNDERLINE","STRIKETHROUGH","SUPERSCRIPT","SUBSCRIPT","ELEMENTS","ANCHOR","BLOCKQUOTE","headers","parseHtml","html","DOMParser","parseFromString","body","wrapNodeAnchor","node","href","anchor","cloneNode","wrapNodeInline","wrapNode","inner","result","newNode","fontWeight","fontStyle","textDecoration","verticalAlign","applyInlineStyles","dirty","createTextNode","textContent","styledNode","nodeName","childNodes","getCleanNode","newWrapper","createDocumentFragment","applyBlockStyles","nodes","filterNode","nodeType","STYLE_TAG_REGEX","AbsoluteVideo","constructor","videoUrl","options","_defineProperty","this","video","disablePictureInPicture","muted","position","load","loop","recalculatePositionAndSize","isPlaying","paused","safePlay","pause","destroy","updatePosition","round","SIZE","prefixCounter","EditableEmojiRender","throttleId","playersById","Map","prefixId","customColorFilter","sharedCanvas","sharedCanvasHq","absoluteContainer","canPlayAnimatedEmojis","detachCbs","resizeObserver","ResizeObserver","synchronizeElements","newColor","removeColorFilter","addColorFilter","documentElement","setProperty","clearPlayers","ids","player","get","delete","playerIdsToClear","querySelectorAll","element","dataset","uniqueId","playerId","mediaUrl","getCustomEmojiMediaDataForInput","canvasBounds","elementBounds","customEmojis","byId","isHq","stickerSetInfo","selectIsAlwaysHighPriorityEmoji","renderId","devicePixelRatio","join","async","viewId","textColor","colorFilter","shouldUseTextColor","hexToRgb","lottie","ensureRLottie","init","coords","isLowPriority","g","b","removeView","setSharedCanvasCoords","isVideo","absoluteVideo","Error","createPlayer","animation","set","observe","unobserve","removeDprListener","addDevicePixelRatioListener","removeBgListener","addBackgroundModeListener","freezeAnimation","unfreezeAnimation","cb","pop","removeChild","WHITESPACE_RE","fragmentEl","RichEditable","maxHeight","IS_MOBILE","overflowY","attached","updateRootProps","htmlS","htmlSet","createSignal","emptyS","emptySet","matchableS","matchableSet","selectionS","selectionSet","keyboardHandlers","pasteHandlers","selectionListener","handleSelectionUpdate","pasteListener","handlePaste","addEventListener","handleContentUpdate","handler","onKeydown","addKeyboardHandler","Default","p","commonAncestorContainer","ELEMENT_NODE","tagName","parentNode","wasEnd","s","isCollapsed","getRangeAt","noteAnc","endContainer","endOffset","isStart","previousSibling","nr","createRange","setStartBefore","setEndBefore","textNode","insertNode","collapse","isEnd","nextSibling","setStartAfter","setEndAfter","insertEnterInsideBlockquote","IS_SAFARI","contentEditable","removeEventListener","console","warn","force","forcePlaceCaretAtEnd","focusEditableElement","blur","isRangeInside","iterations","parentElement","ensureSelectionInside","rangeCount","selectNodeContents","calculateMatchable","curNode","endPos","startPos","TEXT_NODE","curEl","getAttribute","str","test","notSelected","collapsed","wasEmpty","clearInput","setFormattedText","getTextWithEntitiesAsHtml","lastChild","getFormattedText","formatMarkdown","parseHtmlAsFormattedText","sort","a","h","addPasteHandler","cmd","insertMatchableHtml","matchLimit","startContainer","setStart","setEnd","removeLastSymbol","insertFormattedText","clipboardData","activeElement","pastedText","getData","pasteCtx","fragment","clipboardContent","match","filteredNodes","cleanNodes","getCleanDocument","replace","err","textContents","getElementsByTagName","HTMLElement","removeAttribute","replaceWith","entityType","ignoreOnPaste","ENTITY_CLASS_BY_NODE_NAME","innerText","ApiMessageEntityTypes","MentionName","trimEnd","preparePastedHtml","entities","pasteHandler","setSelRange","sel","getSelectedHtml","opts","shouldDropCustomEmoji","shouldDropQuotes","cloneRange","compareBoundaryPoints","Range","START_TO_START","END_TO_END","selectNode","replaceChildren","cloneContents","INPUT_CUSTOM_EMOJI_SELECTOR","clearBlockQuote","querySelector","useRichEditable","richEditable","getHtml","useRichEditableKeyboardListener","enable","keydownCallback","useRichEditablePasteHandler","ActionMessageSuggestedAvatar","message","renderContent","openMediaViewer","uploadProfilePhoto","showNotification","isOutgoing","cropModalBlob","setCropModalBlob","isVideoModalOpen","openVideoModal","closeVideoModal","photo","content","suggestedPhotoUrl","getPhotoMediaHash","suggestedVideoUrl","getVideoProfilePhotoMediaHash","showAvatarNotification","payload","screen","SettingsScreens","Main","actionText","handleSetSuggestedAvatar","file","handleCloseCropModal","handleSetVideo","blob","fetchBlob","File","videoTs","videoSizes","l","videoStartTs","chatId","messageId","threadId","MAIN_THREAD_ID","origin","MediaViewerOrigin","SuggestedAvatar","loopIndefinitely","withVideo","CropModal","onClose","ConfirmDialog","confirmHandler","textParts","ActionMessageUpdatedAvatar","handleViewUpdatedAvatar","SimilarChannel","channel","openChat","fallbackColor","setColor","imgBlobUrl","getChatAvatarHash","averageColor","getAverageColor","rgb2hex","useAverageColor","formatIntegerCompact","membersCount","MoreChannels","channelsCount","isCurrentUserPremium","openPremiumModal","openChatWithInfo","shouldReplaceHistory","profileTab","forceScrollProfileTab","similarChannelIds","isExpanded","count","selectSimilarChannelIds","selectIsCurrentUserPremium","chatFullInfo","selectChatFullInfo","channelJoinInfo","joinInfo","SimilarChannels","toggleChannelRecommendations","loadChannelRecommendations","isShowing","markShowing","markNotShowing","isHiding","markHiding","markNotHiding","similarChannels","shouldRenderSkeleton","setShouldRenderSkeleton","firstSimilarChannels","areSimilarChannelsPresent","shouldRenderChannels","useHorizontalScroll","handleToggle","joinedDate","getServerTime","Skeleton","xmlns","SHOW_CHANNELS_NUMBER","senderId","targetUserIds","targetChatId","targetMessageId","getMessageReplyInfo","replyToMsgId","targetMessage","selectChatMessage","settings","themes","isFocused","selectIsMessageFocused","direction","focusDirection","noHighlight","noFocusHighlight","focusedMessage","senderUser","senderChat","targetChat","giftDuration","months","premiumGiftSticker","selectGiftStickerForDuration","starCount","stars","starsGiftSticker","selectGiftStickerForStars","topic","selectTopicFromMessage","selectCanPlayAnimatedEmojis","ActionMessage","isEmbedded","appearanceOrder","isJustAdded","isLastInList","isInsideTopic","memoFirstUnreadIdRef","observeIntersectionForReading","observeIntersectionForLoading","onIntersectPinnedMessage","requestConfetti","checkGiftCode","getReceipt","openGiftInfoModalFromMessage","openPrizeStarsTransactionFromGiveaway","oldLang","useOnIntersect","useEnsureMessage","replyInfo","useFocusMessage","elementRef","useUnmountCleanup","isPinned","viewportPinnedIdsToRemove","noAppearanceAnimation","isShown","markShown","isPremiumGift","isGiftCode","isSuggestedAvatar","isUpdatedAvatar","isJoinedMessage","isJoinedChannelMessage","isStarsGift","isStarGift","isStarGiftUnique","isPrizeStars","withServiceReactions","areReactionsPossible","useMessageResizeObserver","shouldShowConfettiRef","isUnread","withStars","usersById","users","targetUsers","userId","renderActionMessageText","isContextMenuOpen","contextMenuAnchor","handleBeforeContextMenu","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","isContextMenuShown","handleStarGiftClick","starGift","handlePremiumGiftClick","isGift","fromUserId","toUserId","monthsAmount","handlePrizeStarsClick","handleGiftCodeClick","slug","renderStarGiftUserCaption","fromId","fromPeer","targetPeer","getMessageHtmlId","onMouseDown","preventMessageInputBlur","onContextMenu","giftMessage","AnimatedIconFromSticker","nonInteractive","renderTextWithEntities","Sparkles","preset","renderGift","isFromGiveaway","isGiveaway","isUnclaimed","renderText","getChatTitle","renderGiftCode","formatInteger","targetChatTitle","starGiftMessage","amountToConvert","starsToConvert","isSaved","savedId","isUpgraded","withNodes","pluralValue","canUpgrade","isConverted","amount","withMarkdown","renderStarGiftUserDescription","alreadyPaidUpgradeStars","renderStarGift","centerColor","edgeColor","adaptedPatternColor","number","renderStarGiftUnique","renderPrizeStars","ContextMenuContainer","messageListType","onCloseAnimationEnd","Reactions","isOutside","BOTTOM_FOCUS_OFFSET","RELOCATED_FOCUS_OFFSET","SCROLL_MAX_DISTANCE","FOCUS_MARGIN","isResizingContainer","isQuote","scrollTargetPosition","isRelocatedRef","useLayoutEffect","isRelocated","messagesContainer","closest","isToBottom","scrollPosition","exec","maxDistance","animateScroll","margin","forceDirection","forceNormalContainerHeight","shouldReturnMutationFn","firstQuote","addExtraClass","requestForcedReflow","MAX_EFFECT_COUNT","IS_ANDROID","QUALITY","PaidReactionEmoji","localAmount","effectRef","effectsIds","setEffectsIds","canAddMoreEffects","useEffectWithPrevDeps","prevLocalAmount","prev","useShowTransition","noMountTransition","withShouldRender","newEffectsIds","teactFastList","StarIcon","LOCAL_TGS_URLS","StarReactionEffect","quality","REACTION_SIZE","selectStarsState","ReactionButton","isOwnMessage","recentReactors","chosenClassName","onPaidClick","openStarsBalanceModal","resetLocalPaidReactions","openPaidReactionModal","requestWave","counterRef","animationRef","isPaid","starsState","useSelector","areStarsLoaded","handlePaidClick","stopPropagation","prevReaction","button","balance","originReaction","startX","startY","offsetHeight","currentScale","Number","getComputedStyle","scale","cancel","animate","duration","easing","prevAmount","usePrevious","shouldRenderPaidCounter","own","paid","isReactionChosen","chosen","animatedEmoji","paidCounter","counter","maxWidth","metaChildren","noRecentReactors","tags","toggleReaction","addLocalPaidReaction","updateMiddleSearch","performMiddleSearch","results","areTags","recentReactions","reduce","acc","recentReactorsByReactionKey","recentReaction","getReactionKey","messageKey","getMessageKey","reactionKey","shouldHideRecentReactors","tag","isChosen","update","savedTag","initialSection","paidLocalCount","localId","cacheBreaker","toString","dismissAction","shouldShowTimer","disableClickDismiss","handleRemoveReaction","useEffectOnce","SavedTagButton","withContextMenu","onRemove","PromptDialog","submitText","initialValue","setText","handleTextChange","handleSubmit","Modal","isSlim","teactExperimentControlled","isText","withCount","editSavedReactionTag","menuRef","isRenamePromptOpen","openRenamePrompt","closeRenamePrompt","hasText","handleRemoveClick","handleRenameTag","newTitle","getTriggerElement","getRootElement","getMenuElement","getLayout","withPortal","shouldAvoidNegativePosition","tagText","tail","tailFill","Menu","autoClose","MenuItem","destructive","getRequestInputInvoice","inputInvoice","shouldHideName","giftId","shouldUpgrade","currency","purpose","hash","userIds","boostChannelId","option","boostChannel","additionalChannelIds","untilDate","areWinnersVisible","countries","isOnlyForNewSubscribers","prizeDescription","additionalChannels","inputSavedGift","shouldKeepOriginalDetails","savedGift","getRequestInputSavedStarGift","recipientId","recipient","inputGift","buildStarsTransactionCustomPeer","avatarIcon","isCustomPeer","titleKey","subtitleKey","peerColorId","customPeerAvatarColor","withPremiumGradient","formatStarsTransactionAmount","starsAmount","nanos","abs","formatStarsAmount","getStarsTransactionFromGift","transactionId","isMyGift","getPrizeStarsTransactionFromGiveaway","giveawayPostId","areInputSavedGiftsEqual","one","two","arePropsShallowEqual","isApiPeerUser","filterPeersByQuery","query","getTranslationFn","searchWords","prepareSearchWordsForNeedle","selectorFn","localizedTitle","isFoundInLocalized","getPeerFullTitle","SERVICE_NOTIFICATIONS_USER_ID","isSupport","isContact","callback","delay","savedCallback","RADIUS","ITERATIONS","withRaf","radius","preferredWidth","preferredHeight","isStarted","useSyncEffect","img","Image","processBlur","alpha","IS_CANVAS_FILTER_SUPPORTED","fastBlur","onload","replyOriginForId","loadMessage","useFolderManagerForOrderedIds","folderId","addOrderedIdsCallback","getOrderedIds","useFolderManagerForUnreadCounters","addUnreadCountersCallback","getUnreadCounters","useFolderManagerForChatsCount","addChatsCountCallback","getChatsCount","shouldPreventDefault","handleScroll","deltaX","scrollLeft","deltaY","passive","prevRef","lastRef","shouldFocusOnResize","focusLastMessage","messageHeightRef","handleResize","lastHeight","newHeight","isAnimatingScroll","beginHeavyAnimation","resizeDiff","scrollHeight","scrollTop","throttledResize","useThrottledCallback","useRunDebounced","ms","noFirst","noLast","deps","useDebouncedCallback","compileShader","gl","source","shader","createShader","shaderSource","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","AnimBgRender","BaseAnimBgRender","super","HTMLCanvasElement","glState","createGLState","syncState","render","renderBitmap","colors","pos","transitionProgress","OffscreenCanvas","curPos","transferToImageBitmap","prog","createProgram","attachShader","VERTEX_SHADER","FRAGMENT_SHADER","linkProgram","useProgram","posLoc","getAttribLocation","posBuf","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","flat","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","colorPoints","colorLoc","getUniformLocation","posLoc2","prevPosLoc","resolutionLoc","transitionFactorLoc","shouldStop","viewport","uniform2fv","c","uniform4f","uniform2f","keyPoints","backgroundColor","uniform1f","getTransitionProgress","drawArrays","TRIANGLES","transformStringsToColors","first","fi","second","se","third","th","fourth","resObserver","transitionStart","performance","nextState","renderLoop","setColors","detach","disconnect","fastRaf","DEFAULT_DURATION","stopById","animateHorizontalScroll","containerWidth","scrollWidth","scrollId","remainingPath","Promise","resolve","isStopped","scrollSnapType","startAt","cleanup","t","currentPath","transition","currentArgs","onHeavyAnimationEnd","isAnimating","args","mutate","createMutateFunction","restartCurrentScrollAnimation","cancelSingleAnimation","forceDuration","FocusDirection","Static","elementHeight","currentScrollTop","containerHeight","elementTop","getOffsetToContainer","targetContainerHeight","normalHeight","scrollTo","scrollFrom","Up","Down","calculateScrollFrom","absPath","SCROLL_SHORT_TRANSITION_MAX_DISTANCE","shortTransition","longTransition","SCROLL_MIN_DURATION","SCROLL_MAX_DURATION","prevOnHeavyAnimationEnd","animateSingle","newScrollTop","cancelScrollBlockingAnimation","hex2rgb","param","parseInt","substring","p0","p1","p2","rgb2hsb","v","hsb2rgb","f","q","url","defaultRGB","data","rgb","context","image","naturalHeight","naturalWidth","getImageData","blockSize","getColorLuma","rgbColor","getPatternColor","hue","saturation","convertToRGBA","getTextColor","selection","nodeValue","CUSTOM_PEER_PREMIUM","CUSTOM_PEER_INCLUDED_CHAT_TYPES","CUSTOM_PEER_EXCLUDED_CHAT_TYPES","CUSTOM_PEER_HIDDEN","EntityChar","Bold","_","Italic","Strike","Code","Spoiler","countTokens","tokens","res","token","entity","dec","inc","getPreLanguage","preContents","fullTrim","trim","breakPos","rest","breakableEntities","B","STRONG","I","EM","INS","Underline","U","S","STRIKE","DEL","CODE","PRE","Pre","Blockquote","MAX_TAG_DEEPNESS","withMarkdownLinks","skipMarkdown","RegExp","RE_LINK_TEMPLATE","link","parseMarkdownLinks","br","dtr","fixImageContent","textIndex","recursionDeepness","addEntity","Node","COMMENT_NODE","index","rawText","Url","startsWith","Email","Phone","TextUrl","getEntityTypeFromNode","rawIndex","language","getEntityDataFromNode","hasChildNodes","fmtRes","extEnt","accum","dumpAccum","cur","lookAhead","sLookAhead","curEnt","tokenize","tokenCount","currentCode","discard","langAndRest","doCodePass","fmtText","consumed","tokenStarts","resStr","resEnt","resConsumed","newt","tokensToEntities","ent","start","end","addExternalEntities","startSize","trimStart","startShift","trimMessage","startEntities","resEntities","fixupMap","startMarkers","endMarkers","fixupList","entries","curState","curEnts","entr","upd","stat","fixupEntities","parseMarkdown","offsetTop","offsetLeft","contains","offsetParent"],"sourceRoot":""}